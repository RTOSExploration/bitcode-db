; ModuleID = 'build/96b_wistrio/runtime_obs_registration/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type { i32 }
%struct.zbus_channel = type { i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct._slist*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct._thread_arch = type { i32, i32 }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._snode = type { %struct._snode* }
%struct.zbus_observer = type { i8, %struct.k_msgq*, {}* }
%struct.zbus_observer.19 = type { i8, %struct.k_msgq*, void (%struct.zbus_channel.18*)* }
%struct.zbus_channel.18 = type { i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct._slist*, %struct.zbus_observer.19** }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.k_mem_slab = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i32 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.zbus_observer_node = type { %struct._snode, %struct.zbus_observer.19* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134239872 to i8*), void (i8*)* inttoptr (i32 134238445 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134239872 to i8*), void (i8*)* inttoptr (i32 134238435 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134239872 to i8*), void (i8*)* inttoptr (i32 134238425 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134239872 to i8*), void (i8*)* inttoptr (i32 134238415 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134239872 to i8*), void (i8*)* inttoptr (i32 134238405 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134239872 to i8*), void (i8*)* inttoptr (i32 134238395 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134239872 to i8*), void (i8*)* inttoptr (i32 134238385 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [53 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_consumer_thread_id to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_consumer_sub to i8*), i8* getelementptr inbounds ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }, { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub, i32 0, i32 0), i8* bitcast (%struct.k_mutex* @_zbus_mutex_processed_data_chan to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_state_change_sub to i8*), i8* getelementptr inbounds (%struct.zbus_observer.19, %struct.zbus_observer.19* @filter_lis, i32 0, i32 0), i8* bitcast (%struct.zbus_channel.18* @processed_data_chan to i8*), i8* getelementptr inbounds (%struct.zbus_observer.19, %struct.zbus_observer.19* @state_change_sub, i32 0, i32 0), i8* bitcast (%struct._static_thread_data* @_k_thread_data_produce_thread_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_raw_data_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_state_chan to i8*), i8* bitcast (%struct.zbus_channel.18* @raw_data_chan to i8*), i8* bitcast (%struct.zbus_channel.18* @state_chan to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.k_mem_slab* @_zbus_runtime_obs_pool to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_init_mem_slab_module to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_observer_queue_consumer_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_consumer_sub", align 4, !dbg !25
@_k_fifo_buf__zbus_observer_queue_consumer_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/consumer.c\22.0", align 4, !dbg !342
@_k_thread_obj_consumer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !352
@_k_thread_stack_consumer_thread_id = dso_local global [576 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/consumer.c\22.1", align 64, !dbg !347
@.str = private unnamed_addr constant [19 x i8] c"consumer_thread_id\00", align 1
@_k_thread_data_consumer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_consumer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([576 x %struct.z_thread_stack_element], [576 x %struct.z_thread_stack_element]* @_k_thread_stack_consumer_thread_id, i32 0, i32 0), i32 512, void (i8*, i8*, i8*)* bitcast (void ()* @consumer_subscriber_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 3, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_consumer_thread_id", align 4, !dbg !305
@consumer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_consumer_thread_id, align 4, !dbg !338
@.str.1 = private unnamed_addr constant [47 x i8] c"%c:  --> Consuming data: Acc x=%d, y=%d, z=%d\0A\00", align 1
@_zbus_mutex_processed_data_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_processed_data_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_processed_data_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_processed_data_chan", align 4, !dbg !354
@_zbus_message_processed_data_chan = internal global %struct._thread_stack_info zeroinitializer, align 4, !dbg !535
@_runtime_observers_processed_data_chan = internal global %struct._slist zeroinitializer, align 4, !dbg !528
@_zbus_observers_processed_data_chan = internal constant [2 x %struct.zbus_observer.19*] [%struct.zbus_observer.19* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer.19*), %struct.zbus_observer.19* null], align 4, !dbg !543
@processed_data_chan = dso_local constant %struct.zbus_channel.18 { i16 12, i8* null, i8* bitcast (%struct._thread_stack_info* @_zbus_message_processed_data_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_processed_data_chan, %struct._slist* @_runtime_observers_processed_data_chan, %struct.zbus_observer.19** getelementptr inbounds ([2 x %struct.zbus_observer.19*], [2 x %struct.zbus_observer.19*]* @_zbus_observers_processed_data_chan, i32 0, i32 0) }, section "._zbus_channel.static.processed_data_chan", align 4, !dbg !360
@filter_lis = dso_local global %struct.zbus_observer.19 { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel.18*)* @filter_callback }, section "._zbus_observer.static.filter_lis", align 4, !dbg !522
@_zbus_observer_queue_state_change_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_state_change_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_state_change_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_k_fifo_buf__zbus_observer_queue_state_change_sub, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_k_fifo_buf__zbus_observer_queue_state_change_sub, i64 1, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_k_fifo_buf__zbus_observer_queue_state_change_sub, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_k_fifo_buf__zbus_observer_queue_state_change_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_state_change_sub", align 4, !dbg !524
@_k_fifo_buf__zbus_observer_queue_state_change_sub = internal global [20 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 4, !dbg !530
@.str.2 = private unnamed_addr constant [20 x i8] c"%c: System started\0A\00", align 1
@.str.1.3 = private unnamed_addr constant [23 x i8] c"%c: Activating filter\0A\00", align 1
@.str.2.4 = private unnamed_addr constant [25 x i8] c"%c: Deactivating filter\0A\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"%c: Bypass filter\0A\00", align 1
@consumer_sub = dso_local global { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* } { i8 1, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.consumer_sub", align 4, !dbg !112
@.str.4 = private unnamed_addr constant [27 x i8] c"%c: Disable bypass filter\0A\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"%c:  -|- Filtering data\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/include/zephyr/zbus/zbus.h\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@_zbus_mutex_raw_data_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_raw_data_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_raw_data_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_raw_data_chan", align 4, !dbg !546
@_zbus_message_raw_data_chan = internal global %struct._thread_stack_info zeroinitializer, align 4, !dbg !751
@_runtime_observers_raw_data_chan = internal global %struct._slist zeroinitializer, align 4, !dbg !742
@_zbus_observers_raw_data_chan = internal constant [1 x %struct.zbus_observer.19*] zeroinitializer, align 4, !dbg !758
@raw_data_chan = dso_local constant %struct.zbus_channel.18 { i16 12, i8* null, i8* bitcast (%struct._thread_stack_info* @_zbus_message_raw_data_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_raw_data_chan, %struct._slist* @_runtime_observers_raw_data_chan, %struct.zbus_observer.19** getelementptr inbounds ([1 x %struct.zbus_observer.19*], [1 x %struct.zbus_observer.19*]* @_zbus_observers_raw_data_chan, i32 0, i32 0) }, section "._zbus_channel.static.raw_data_chan", align 4, !dbg !551
@_zbus_mutex_state_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_state_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_state_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_state_chan", align 4, !dbg !713
@_zbus_message_state_chan = internal global i8 0, align 1, !dbg !763
@_runtime_observers_state_chan = internal global %struct._slist zeroinitializer, align 4, !dbg !744
@_zbus_observers_state_chan = internal constant [2 x %struct.zbus_observer.19*] [%struct.zbus_observer.19* @state_change_sub, %struct.zbus_observer.19* null], align 4, !dbg !765
@state_chan = dso_local constant %struct.zbus_channel.18 { i16 1, i8* null, i8* @_zbus_message_state_chan, i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_state_chan, %struct._slist* @_runtime_observers_state_chan, %struct.zbus_observer.19** getelementptr inbounds ([2 x %struct.zbus_observer.19*], [2 x %struct.zbus_observer.19*]* @_zbus_observers_state_chan, i32 0, i32 0) }, section "._zbus_channel.static.state_chan", align 4, !dbg !715
@_k_thread_obj_produce_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !749
@_k_thread_stack_produce_thread_id = dso_local global [576 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/producer.c\22.0", align 64, !dbg !746
@.str.10 = private unnamed_addr constant [18 x i8] c"produce_thread_id\00", align 1
@_k_thread_data_produce_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_produce_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([576 x %struct.z_thread_stack_element], [576 x %struct.z_thread_stack_element]* @_k_thread_stack_produce_thread_id, i32 0, i32 0), i32 512, void (i8*, i8*, i8*)* bitcast (void ()* @producer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 3, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_produce_thread_id", align 4, !dbg !717
@produce_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_produce_thread_id, align 4, !dbg !738
@state_change_sub = dso_local global %struct.zbus_observer.19 { i8 1, %struct.k_msgq* @_zbus_observer_queue_state_change_sub, void (%struct.zbus_channel.18*)* null }, section "._zbus_observer.static.state_change_sub", align 4, !dbg !526
@.str.1.11 = private unnamed_addr constant [27 x i8] c"%c:  >-- Raw data fetched\0A\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !768
@.str.1.15 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.16 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.17 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.18 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.19 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.20 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.21 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.22 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.23 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.24 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !792
@.str.25 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.26 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.27 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.28 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.29 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.30 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.31 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.32 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.33 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.34 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.35 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.36 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.37 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13.38 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !802
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !865
@.str.50 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.52 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.53 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.51 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.55 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.56 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.54 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.57 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.58 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.59 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.60 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.61 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.62 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.63 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.64 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.69 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.70 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.81 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.73 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.74 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.75 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.76 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.77 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.78 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.79 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.80 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.72 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.25.71 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.26 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.29 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.31 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.32 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.33 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.34 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.37 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !894
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !1025
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !900
@.str.93 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.94 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.95 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.96 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.101 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.102 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !1034
@.str.6.103 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.104 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.97 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.98 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !1070
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i32 0, i32 0), %struct.k_spinlock { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.114, i32 0, i32 0), %struct.k_spinlock { i32 285933596 } }], align 4, !dbg !1080
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !1085
@.str.113 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.114 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !1105
@.str.116 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.118 = private unnamed_addr constant [42 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio.h\00", align 1
@.str.10.129 = private unnamed_addr constant [62 x i8] c"(cfg->port_pin_mask & (gpio_port_pins_t)(1UL << (pin))) != 0U\00", align 1
@.str.11.130 = private unnamed_addr constant [18 x i8] c"\09Unsupported pin\0A\00", align 1
@.str.12.117 = private unnamed_addr constant [93 x i8] c"(flags & ((1U << 21) | (1U << 22) | (1U << 23) | (1U << 24) | (1U << 25) | (1U << 26))) == 0\00", align 1
@.str.13.119 = private unnamed_addr constant [36 x i8] c"\09Interrupt flags are not supported\0A\00", align 1
@.str.14.120 = private unnamed_addr constant [57 x i8] c"(flags & ((1 << 4) | (1 << 5))) != ((1 << 4) | (1 << 5))\00", align 1
@.str.15.121 = private unnamed_addr constant [61 x i8] c"\09Pull Up and Pull Down should not be enabled simultaneously\0A\00", align 1
@.str.16.122 = private unnamed_addr constant [53 x i8] c"(flags & (1U << 17)) != 0 || (flags & (1 << 1)) == 0\00", align 1
@.str.17.123 = private unnamed_addr constant [82 x i8] c"\09Output needs to be enabled for 'Open Drain', 'Open Source' mode to be supported\0A\00", align 1
@.str.18.124 = private unnamed_addr constant [51 x i8] c"(flags & (1 << 1)) != 0 || (flags & (1 << 2)) == 0\00", align 1
@.str.19.125 = private unnamed_addr constant [70 x i8] c"(flags & ((1U << 18) | (1U << 19))) == 0 || (flags & (1U << 17)) != 0\00", align 1
@.str.20.126 = private unnamed_addr constant [59 x i8] c"\09Output needs to be enabled to be initialized low or high\0A\00", align 1
@.str.21.127 = private unnamed_addr constant [65 x i8] c"(flags & ((1U << 18) | (1U << 19))) != ((1U << 18) | (1U << 19))\00", align 1
@.str.22.128 = private unnamed_addr constant [44 x i8] c"\09Output cannot be initialized low and high\0A\00", align 1
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@.str.131 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i32 0, i32 0), i8 3 }, section ".log_const_zbus", align 4, !dbg !1212
@.str.1.135 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.136 = private unnamed_addr constant [15 x i8] c"!k_is_in_isr()\00", align 1
@.str.3.137 = private unnamed_addr constant [31 x i8] c"ZEPHYR_BASE/subsys/zbus/zbus.c\00", align 1
@.str.4.138 = private unnamed_addr constant [34 x i8] c"\09zbus cannot be used inside ISRs\0A\00", align 1
@.str.5.139 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.6.140 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@.str.7.141 = private unnamed_addr constant [19 x i8] c"msg != ((void *)0)\00", align 1
@.str.8.142 = private unnamed_addr constant [18 x i8] c"\09msg is required\0A\00", align 1
@.str.9.151 = private unnamed_addr constant [19 x i8] c"sub != ((void *)0)\00", align 1
@.str.10.152 = private unnamed_addr constant [18 x i8] c"\09sub is required\0A\00", align 1
@.str.11.143 = private unnamed_addr constant [9 x i8] c"err == 0\00", align 1
@.str.12.144 = private unnamed_addr constant [49 x i8] c"\09could not deliver notification to observer %s.\0A\00", align 1
@.str.13.145 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.17.146 = private unnamed_addr constant [63 x i8] c"\09could not deliver notification to observer %s. Error code %d\0A\00", align 1
@_zbus_runtime_obs_pool = internal global %struct.k_mem_slab { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mem_slab, %struct.k_mem_slab* @_zbus_runtime_obs_pool, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mem_slab, %struct.k_mem_slab* @_zbus_runtime_obs_pool, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 2, i32 8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_mem_slab_buf__zbus_runtime_obs_pool, i32 0, i32 0), i8* null, i32 0 }, section "._k_mem_slab.static._zbus_runtime_obs_pool", align 4, !dbg !1388
@_k_mem_slab_buf__zbus_runtime_obs_pool = internal global [16 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/zbus/zbus_runtime_observers.c\22.k_mem_slab_buf__zbus_runtime_obs_pool", align 4, !dbg !1559
@.str.156 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.157 = private unnamed_addr constant [15 x i8] c"!k_is_in_isr()\00", align 1
@.str.2.158 = private unnamed_addr constant [49 x i8] c"ZEPHYR_BASE/subsys/zbus/zbus_runtime_observers.c\00", align 1
@.str.3.159 = private unnamed_addr constant [14 x i8] c"\09ISR blocked\0A\00", align 1
@.str.4.160 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.5.161 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@.str.6.162 = private unnamed_addr constant [19 x i8] c"obs != ((void *)0)\00", align 1
@.str.7.163 = private unnamed_addr constant [18 x i8] c"\09obs is required\0A\00", align 1
@.str.8.168 = private unnamed_addr constant [58 x i8] c"%c: Could not allocate memory on runtime observers pool\0A\0A\00", align 1
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !1571
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1721
@.str.4.173 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1691
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !1676
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.173, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1649
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1665
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1693
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1706
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1708
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1710
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1712
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1714
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1716
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1726
@.str.175 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1751
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1828
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1817
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_POST_KERNEL60_", align 4, !dbg !1869
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1742
@.str.186 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !1935
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !2181
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2159
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !2145
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !2093
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1740
@.str.1.205 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !2183
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2163
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !2161
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !2110
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1738
@.str.2.206 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !2196
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2167
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !2165
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !2119
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1736
@.str.3.207 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !2198
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2171
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !2169
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !2128
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1734
@.str.4.208 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !2200
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2175
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !2173
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !2134
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1732
@.str.5.209 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !2202
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2179
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !2177
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !2143
@.str.6.187 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.29.202 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.30.189 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.31.192 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.32.188 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.33.190 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.34.191 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.213 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.213, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !2204
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1746
@.str.1.214 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !2364
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !2419
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2360
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2421
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.214, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !2345
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !2347
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1744
@.str.2.223 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !2427
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2362
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2437
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.223, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !2356
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !2358
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !2408
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !2411
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2413
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !2416
@.str.3.216 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.4.217 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.218 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.6.219 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.7.220 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.8.226 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.9.228 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.10.229 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.175, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1801
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !2429
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !2431
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2433
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !2435
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.11 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !2444
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2555
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2557
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2553
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2548
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2522
@.str.233 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.234 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.235 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.236 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.237 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.238 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !2559
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.186, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !2091
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.205, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !2108
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.206, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !2117
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.207, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !2126
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.208, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !2132
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.209, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !2141
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2646
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !2670
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !2673
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2677
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2681
@.str.269 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.273 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.274 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.275 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.276 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.277 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.278 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.279 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.283 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.284 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.285 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.286 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.287 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.282 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.281 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.283, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.284, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.285, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.286, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.287, i32 0, i32 0)], align 4
@.str.289 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.289, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2688
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2913
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2900
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2908
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2920
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2925
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.298 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@__init_init_mem_slab_module = internal constant %struct.init_entry { i32 (%struct.device*)* @init_mem_slab_module, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2953
@_k_mem_slab_list_start = external dso_local global [0 x %struct.k_mem_slab], align 4
@_k_mem_slab_list_end = external dso_local global [0 x %struct.k_mem_slab], align 4
@.str.300 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.301 = private unnamed_addr constant [29 x i8] c"slab <= _k_mem_slab_list_end\00", align 1
@.str.2.302 = private unnamed_addr constant [30 x i8] c"ZEPHYR_BASE/kernel/mem_slab.c\00", align 1
@.str.3.303 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.4.306 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.307 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.308 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.309 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.310 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.320, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.321, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.322, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.323, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.324, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.318, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.325, i32 0, i32 0)], align 4, !dbg !2987
@.str.319 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.320 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.321 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.322 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.323 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.324 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.318 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.325 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !3101
@.str.8.317 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.328 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.329 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.330 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.331 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.335 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.336 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.339 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.340 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.350 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.351 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.352 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.357 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.358 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.359 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.360 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.361 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.362 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.363 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.364 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.365 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.372 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.373 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.374 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.375 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.376 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !3114
@.str.4.387 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.377 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.378 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.379 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.380 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.381 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !3224
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !3334
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !3337
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !3339
@.str.388 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.410 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.395 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.417 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.429 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.398 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.424 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.394 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.434 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.435 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.443 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.444 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.445 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.446 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.389 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.390 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.391 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.392 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.393 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.397 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.414 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.425 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.426 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2910
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2918
@.str.23.438 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.452 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.453 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.454 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.455 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !3341
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !3371
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !3376
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2775
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !3374
@.str.4.456 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.457 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.458 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.462 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.463 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !3382
@.str.486 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.495 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.488 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.496 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.487 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.489 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.492 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.493 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.494 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.497 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.498 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !4081 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !4083, !srcloc !4084
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !4085, !srcloc !4086
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !4087, !srcloc !4088
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !4089, !srcloc !4090
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !4091, !srcloc !4092
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !4093, !srcloc !4094
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !4095, !srcloc !4096
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !4097, !srcloc !4098
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !4099, !srcloc !4100
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !4101, !srcloc !4102
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !4103, !srcloc !4104
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !4105, !srcloc !4106
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !4107, !srcloc !4108
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !4109, !srcloc !4110
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !4111, !srcloc !4112
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !4113, !srcloc !4114
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !4115, !srcloc !4116
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !4117, !srcloc !4118
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !4119, !srcloc !4120
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !4121, !srcloc !4122
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !4123, !srcloc !4124
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !4125, !srcloc !4126
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !4127, !srcloc !4128
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !4129, !srcloc !4130
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !4131, !srcloc !4132
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !4133, !srcloc !4134
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !4135, !srcloc !4136
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !4137, !srcloc !4140
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !4141, !srcloc !4142
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !4143, !srcloc !4144
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !4145, !srcloc !4146
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !4147, !srcloc !4148
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !4149, !srcloc !4150
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !4151, !srcloc !4152
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !4153, !srcloc !4154
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !4155, !srcloc !4156
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !4157, !srcloc !4158
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !4159, !srcloc !4160
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !4161, !srcloc !4162
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !4163, !srcloc !4164
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !4165, !srcloc !4166
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !4167, !srcloc !4168
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !4169, !srcloc !4170
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !4171, !srcloc !4172
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !4173, !srcloc !4174
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !4175, !srcloc !4176
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !4177, !srcloc !4178
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !4179, !srcloc !4180
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !4181, !srcloc !4182
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !4183, !srcloc !4184
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !4185, !srcloc !4186
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !4187, !srcloc !4188
  ret void, !dbg !4189
}

; Function Attrs: noinline nounwind optsize
define internal void @consumer_subscriber_thread() #1 !dbg !4192 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca %struct._thread_stack_info, align 4
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !4202
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4202
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !4194, metadata !DIExpression(DW_OP_deref)), !dbg !4203
  %4 = call i32 bitcast (i32 (%struct.zbus_observer.19*, %struct.zbus_channel.18**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !4204
  %5 = icmp eq i32 %4, 0, !dbg !4205
  br i1 %5, label %6, label %19, !dbg !4206

6:                                                ; preds = %0
  %7 = bitcast %struct._thread_stack_info* %2 to i8*
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0
  %9 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1
  %10 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2
  br label %11, !dbg !4206

11:                                               ; preds = %6, %11
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #25, !dbg !4207
  call void @llvm.dbg.declare(metadata %struct._thread_stack_info* %2, metadata !4195, metadata !DIExpression()), !dbg !4208
  %12 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !4209
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %12, metadata !4194, metadata !DIExpression()), !dbg !4203
  %13 = call i32 bitcast (i32 (%struct.zbus_channel.18*, i8*, [1 x i64])* @zbus_chan_read to i32 (%struct.zbus_channel*, i8*, [1 x i64])*)(%struct.zbus_channel* noundef %12, i8* noundef nonnull %7, [1 x i64] [i64 5000]) #26, !dbg !4210
  %14 = load i32, i32* %8, align 4, !dbg !4211
  %15 = load i32, i32* %9, align 4, !dbg !4211
  %16 = load i32, i32* %10, align 4, !dbg !4211
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i32 0, i32 0), i32 noundef 73, i32 noundef %14, i32 noundef %15, i32 noundef %16) #26, !dbg !4211
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #25, !dbg !4216
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !4194, metadata !DIExpression(DW_OP_deref)), !dbg !4203
  %17 = call i32 bitcast (i32 (%struct.zbus_observer.19*, %struct.zbus_channel.18**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !4204
  %18 = icmp eq i32 %17, 0, !dbg !4205
  br i1 %18, label %11, label %19, !dbg !4206, !llvm.loop !4217

19:                                               ; preds = %11, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4218
  ret void, !dbg !4218
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind optsize
define internal void @filter_callback(%struct.zbus_channel.18* noundef %0) #1 !dbg !4219 {
  %2 = alloca %struct._thread_stack_info, align 4
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !4221, metadata !DIExpression()), !dbg !4226
  %3 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.18* noundef %0) #27, !dbg !4227
  call void @llvm.dbg.value(metadata i8* %3, metadata !4222, metadata !DIExpression()), !dbg !4226
  %4 = bitcast %struct._thread_stack_info* %2 to i8*, !dbg !4228
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !4228
  call void @llvm.dbg.declare(metadata %struct._thread_stack_info* %2, metadata !4225, metadata !DIExpression()), !dbg !4229
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(12) %4, i8 0, i32 12, i1 false), !dbg !4229
  %5 = bitcast i8* %3 to i32*, !dbg !4230
  %6 = load i32, i32* %5, align 4, !dbg !4230
  %7 = and i32 %6, 1, !dbg !4232
  %8 = icmp eq i32 %7, 0, !dbg !4232
  br i1 %8, label %9, label %11, !dbg !4233

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !4234
  store i32 %6, i32* %10, align 4, !dbg !4236
  br label %11, !dbg !4237

11:                                               ; preds = %9, %1
  %12 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4238
  %13 = bitcast i8* %12 to i32*, !dbg !4238
  %14 = load i32, i32* %13, align 4, !dbg !4238
  %15 = and i32 %14, 1, !dbg !4240
  %16 = icmp eq i32 %15, 0, !dbg !4240
  br i1 %16, label %17, label %19, !dbg !4241

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !4242
  store i32 %14, i32* %18, align 4, !dbg !4244
  br label %19, !dbg !4245

19:                                               ; preds = %17, %11
  %20 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4246
  %21 = bitcast i8* %20 to i32*, !dbg !4246
  %22 = load i32, i32* %21, align 4, !dbg !4246
  %23 = and i32 %22, 1, !dbg !4248
  %24 = icmp eq i32 %23, 0, !dbg !4248
  br i1 %24, label %25, label %27, !dbg !4249

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !4250
  store i32 %22, i32* %26, align 4, !dbg !4252
  br label %27, !dbg !4253

27:                                               ; preds = %25, %19
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i32 0, i32 0), i32 noundef 73) #26, !dbg !4254
  %28 = call i32 @zbus_chan_pub(%struct.zbus_channel.18* noundef nonnull @processed_data_chan, i8* noundef nonnull %4, [1 x i64] [i64 2000]) #26, !dbg !4259
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !4260
  ret void, !dbg !4260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.18* noundef readonly %0) unnamed_addr #1 !dbg !4261 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !4265, metadata !DIExpression()), !dbg !4266
  %2 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !4267
  br i1 %2, label %3, label %4, !dbg !4270

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 noundef 418) #26, !dbg !4271
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i32 0, i32 0)) #26, !dbg !4271
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 noundef 418) #26, !dbg !4271
  unreachable, !dbg !4271

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 2, !dbg !4273
  %6 = load i8*, i8** %5, align 4, !dbg !4273
  ret i8* %6, !dbg !4274
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #4

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #5 !dbg !4275 {
  %1 = alloca %struct.zbus_channel.18*, align 4
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i32 0, i32 0), i32 noundef 73) #26, !dbg !4278
  %2 = bitcast %struct.zbus_channel.18** %1 to i8*, !dbg !4283
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #25, !dbg !4283
  br label %3, !dbg !4284

3:                                                ; preds = %3, %0
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.3, i32 0, i32 0), i32 noundef 73) #26, !dbg !4285
  %4 = call i32 @zbus_chan_add_obs(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, %struct.zbus_observer.19* noundef nonnull @filter_lis, [1 x i64] [i64 2000]) #26, !dbg !4291
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18** %1, metadata !4277, metadata !DIExpression(DW_OP_deref)), !dbg !4292
  %5 = call i32 @zbus_sub_wait(%struct.zbus_observer.19* noundef nonnull @state_change_sub, %struct.zbus_channel.18** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !4293
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.4, i32 0, i32 0), i32 noundef 73) #26, !dbg !4294
  %6 = call i32 @zbus_chan_rm_obs(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, %struct.zbus_observer.19* noundef nonnull @filter_lis, [1 x i64] [i64 2000]) #26, !dbg !4299
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0), i32 noundef 73) #26, !dbg !4300
  %7 = call i32 @zbus_chan_add_obs(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, %struct.zbus_observer.19* noundef nonnull bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer.19*), [1 x i64] [i64 2000]) #26, !dbg !4305
  %8 = call i32 @zbus_sub_wait(%struct.zbus_observer.19* noundef nonnull @state_change_sub, %struct.zbus_channel.18** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !4306
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i32 0, i32 0), i32 noundef 73) #26, !dbg !4307
  %9 = call i32 @zbus_chan_rm_obs(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, %struct.zbus_observer.19* noundef nonnull bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer.19*), [1 x i64] [i64 2000]) #26, !dbg !4312
  %10 = call i32 @zbus_sub_wait(%struct.zbus_observer.19* noundef nonnull @state_change_sub, %struct.zbus_channel.18** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !4313
  br label %3, !dbg !4284, !llvm.loop !4314
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @producer_thread() #5 !dbg !4316 {
  %1 = alloca %struct._thread_stack_info, align 4
  %2 = alloca i8, align 1
  %3 = bitcast %struct._thread_stack_info* %1 to i8*, !dbg !4324
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3) #25, !dbg !4324
  call void @llvm.dbg.declare(metadata %struct._thread_stack_info* %1, metadata !4318, metadata !DIExpression()), !dbg !4325
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(12) %3, i8 0, i32 12, i1 false), !dbg !4325
  call void @llvm.dbg.value(metadata i32 0, metadata !4319, metadata !DIExpression()), !dbg !4326
  %4 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1
  %6 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2
  br label %7, !dbg !4327

7:                                                ; preds = %14, %0
  %8 = phi i32 [ 0, %0 ], [ %25, %14 ], !dbg !4326
  call void @llvm.dbg.value(metadata i32 %8, metadata !4319, metadata !DIExpression()), !dbg !4326
  %9 = icmp eq i32 %8, 5, !dbg !4328
  br i1 %9, label %10, label %14, !dbg !4329

10:                                               ; preds = %7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #25, !dbg !4330
  call void @llvm.dbg.value(metadata i8 1, metadata !4320, metadata !DIExpression()), !dbg !4331
  store i8 1, i8* %2, align 1, !dbg !4332
  %11 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 200) #27, !dbg !4333
  %12 = insertvalue [1 x i64] poison, i64 %11, 0, !dbg !4334
  call void @llvm.dbg.value(metadata i8* %2, metadata !4320, metadata !DIExpression(DW_OP_deref)), !dbg !4331
  %13 = call i32 @zbus_chan_pub(%struct.zbus_channel.18* noundef nonnull @state_chan, i8* noundef nonnull %2, [1 x i64] %12) #26, !dbg !4334
  call void @llvm.dbg.value(metadata i32 0, metadata !4319, metadata !DIExpression()), !dbg !4326
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #25, !dbg !4335
  br label %14, !dbg !4336

14:                                               ; preds = %7, %10
  %15 = phi i32 [ 0, %10 ], [ %8, %7 ], !dbg !4326
  call void @llvm.dbg.value(metadata i32 %15, metadata !4319, metadata !DIExpression()), !dbg !4326
  %16 = load i32, i32* %4, align 4, !dbg !4337
  %17 = add nsw i32 %16, 1, !dbg !4337
  store i32 %17, i32* %4, align 4, !dbg !4337
  %18 = load i32, i32* %5, align 4, !dbg !4338
  %19 = add nsw i32 %18, 1, !dbg !4338
  store i32 %19, i32* %5, align 4, !dbg !4338
  %20 = load i32, i32* %6, align 4, !dbg !4339
  %21 = add nsw i32 %20, 1, !dbg !4339
  store i32 %21, i32* %6, align 4, !dbg !4339
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.11, i32 0, i32 0), i32 noundef 73) #26, !dbg !4340
  %22 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 200) #27, !dbg !4345
  %23 = insertvalue [1 x i64] poison, i64 %22, 0, !dbg !4346
  %24 = call i32 @zbus_chan_pub(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, i8* noundef nonnull %3, [1 x i64] %23) #26, !dbg !4346
  call fastcc void @k_msleep() #27, !dbg !4347
  %25 = add i32 %15, 1, !dbg !4348
  call void @llvm.dbg.value(metadata i32 %25, metadata !4319, metadata !DIExpression()), !dbg !4326
  br label %7, !dbg !4327, !llvm.loop !4349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #6 !dbg !4351 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4356, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i64 %0, metadata !4358, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i32 1000, metadata !4363, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i32 10000, metadata !4364, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i8 1, metadata !4365, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i8 0, metadata !4366, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i8 1, metadata !4367, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i8 0, metadata !4368, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i8 1, metadata !4369, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i8 0, metadata !4370, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i64 0, metadata !4371, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i64 0, metadata !4371, metadata !DIExpression()), !dbg !4375
  %2 = mul i64 %0, 10, !dbg !4377
  ret i64 %2, !dbg !4383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !4384 {
  call void @llvm.dbg.value(metadata i32 500, metadata !4388, metadata !DIExpression()), !dbg !4389
  %1 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 500) #27, !dbg !4390
  %2 = insertvalue [1 x i64] poison, i64 %1, 0, !dbg !4391
  tail call fastcc void @k_sleep([1 x i64] %2) #27, !dbg !4391
  ret void, !dbg !4392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !4393 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !4402, metadata !DIExpression()), !dbg !4403
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4404, !srcloc !4406
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #26, !dbg !4407
  ret void, !dbg !4408
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4409 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4424, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %0, metadata !4420, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %1, metadata !4421, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %2, metadata !4422, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %3, metadata !4423, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %0, metadata !4425, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %0, metadata !4426, metadata !DIExpression()), !dbg !4487
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4488
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4488
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4429, metadata !DIExpression()), !dbg !4489
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4490
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4490
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4431, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata i32 0, metadata !4432, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 0, metadata !4433, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 0, metadata !4434, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 -1, metadata !4435, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 0, metadata !4438, metadata !DIExpression()), !dbg !4487
  %12 = and i32 %2, 4, !dbg !4492
  %13 = icmp eq i32 %12, 0, !dbg !4493
  call void @llvm.dbg.value(metadata i1 %13, metadata !4439, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4487
  %14 = lshr i32 %2, 3, !dbg !4494
  %15 = and i32 %14, 7, !dbg !4494
  %16 = add nuw nsw i32 %15, 1, !dbg !4495
  call void @llvm.dbg.value(metadata i32 %16, metadata !4440, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 0, metadata !4441, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %0, metadata !4442, metadata !DIExpression()), !dbg !4487
  %17 = ptrtoint i8* %0 to i32, !dbg !4496
  %18 = and i32 %17, 3, !dbg !4498
  %19 = icmp eq i32 %18, 0, !dbg !4498
  br i1 %19, label %20, label %320, !dbg !4499

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4500
  call void @llvm.dbg.value(metadata i8* %21, metadata !4426, metadata !DIExpression()), !dbg !4487
  %22 = icmp eq i8* %0, null, !dbg !4501
  %23 = and i32 %1, 7, !dbg !4503
  %24 = sub nuw nsw i32 8, %23, !dbg !4503
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4503
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4503
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4503
  call void @llvm.dbg.value(metadata i32 %27, metadata !4421, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %26, metadata !4426, metadata !DIExpression()), !dbg !4487
  br i1 %22, label %33, label %28, !dbg !4504

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4506
  %30 = sub i32 4, %17, !dbg !4506
  %31 = add i32 %30, %29, !dbg !4507
  %32 = icmp ugt i32 %31, %27, !dbg !4508
  br i1 %32, label %320, label %33, !dbg !4509

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4510
  call void @llvm.dbg.value(metadata i8* %34, metadata !4423, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %3, metadata !4437, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 4, metadata !4428, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 4, metadata !4427, metadata !DIExpression()), !dbg !4487
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4511

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4424, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %42, metadata !4423, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %43, metadata !4426, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %44, metadata !4427, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %45, metadata !4428, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %72, metadata !4435, metadata !DIExpression()), !dbg !4487
  br i1 %46, label %73, label %47, !dbg !4512

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4513
  %49 = zext i1 %48 to i32, !dbg !4517
  %50 = add nsw i32 %72, %49, !dbg !4517
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4517
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4517
  call void @llvm.dbg.value(metadata i32 %52, metadata !4427, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %51, metadata !4428, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 poison, metadata !4438, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %50, metadata !4435, metadata !DIExpression()), !dbg !4487
  br label %53, !dbg !4518

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4424, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %40, metadata !4423, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %58, metadata !4426, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %57, metadata !4427, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %56, metadata !4428, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 poison, metadata !4438, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %54, metadata !4435, metadata !DIExpression()), !dbg !4487
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4519
  call void @llvm.dbg.value(metadata i8* %60, metadata !4423, metadata !DIExpression()), !dbg !4487
  %61 = load i8, i8* %60, align 1, !dbg !4521
  %62 = icmp eq i8 %61, 0, !dbg !4522
  br i1 %62, label %226, label %63, !dbg !4523, !llvm.loop !4524

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !4512

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4527

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4438, metadata !DIExpression()), !dbg !4487
  %75 = add nsw i32 %72, -1, !dbg !4528
  call void @llvm.dbg.value(metadata i32 %75, metadata !4435, metadata !DIExpression()), !dbg !4487
  br label %53, !dbg !4529

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4530

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4428, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 4, metadata !4427, metadata !DIExpression()), !dbg !4487
  br label %53, !dbg !4531

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4428, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 4, metadata !4427, metadata !DIExpression()), !dbg !4487
  br label %53, !dbg !4532

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4533
  %81 = icmp eq i8 %80, 108, !dbg !4535
  br i1 %81, label %82, label %109, !dbg !4536

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4537
  %84 = load i8, i8* %83, align 1, !dbg !4537
  %85 = icmp eq i8 %84, 108, !dbg !4540
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4541
  %89 = add i32 %88, 7, !dbg !4541
  %90 = and i32 %89, -8, !dbg !4541
  %91 = inttoptr i32 %90 to i8*, !dbg !4541
  %92 = inttoptr i32 %90 to double*, !dbg !4541
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4541
  %94 = load double, double* %92, align 8, !dbg !4541
  call void @llvm.dbg.value(metadata i8* %93, metadata !4424, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 8, metadata !4427, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 8, metadata !4428, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata double %94, metadata !4455, metadata !DIExpression()), !dbg !4543
  %95 = ptrtoint i8* %43 to i32, !dbg !4544
  %96 = add i32 %95, 7, !dbg !4544
  %97 = and i32 %96, -8, !dbg !4544
  %98 = inttoptr i32 %97 to i8*, !dbg !4545
  call void @llvm.dbg.value(metadata i8* %98, metadata !4426, metadata !DIExpression()), !dbg !4487
  br i1 %22, label %104, label %99, !dbg !4546

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4547
  %101 = icmp ugt i32 %100, %196, !dbg !4551
  br i1 %101, label %320, label %102, !dbg !4552

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4553
  store double %94, double* %103, align 8, !dbg !4553
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4556
  call void @llvm.dbg.value(metadata i8* %105, metadata !4426, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 poison, metadata !4438, metadata !DIExpression()), !dbg !4487
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4438, metadata !DIExpression()), !dbg !4487
  br label %53, !dbg !4557

107:                                              ; preds = %73, %73
  br label %109, !dbg !4558

108:                                              ; preds = %73
  br label %109, !dbg !4558

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4487
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4487
  call void @llvm.dbg.value(metadata i32 %113, metadata !4427, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %112, metadata !4428, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 poison, metadata !4441, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 poison, metadata !4438, metadata !DIExpression()), !dbg !4487
  %114 = ptrtoint i8* %43 to i32, !dbg !4558
  %115 = add i32 %114, -1, !dbg !4558
  %116 = add i32 %115, %112, !dbg !4558
  %117 = sub i32 0, %112, !dbg !4558
  %118 = and i32 %116, %117, !dbg !4558
  %119 = inttoptr i32 %118 to i8*, !dbg !4559
  call void @llvm.dbg.value(metadata i8* %119, metadata !4426, metadata !DIExpression()), !dbg !4487
  br i1 %22, label %124, label %120, !dbg !4560

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4562
  %122 = add i32 %121, %118, !dbg !4563
  %123 = icmp ugt i32 %122, %196, !dbg !4564
  br i1 %123, label %320, label %124, !dbg !4565

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !4566

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4559
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4567
  call void @llvm.dbg.value(metadata i8* %127, metadata !4424, metadata !DIExpression()), !dbg !4487
  %128 = bitcast i8* %41 to i8**, !dbg !4567
  %129 = load i8*, i8** %128, align 4, !dbg !4567
  call void @llvm.dbg.value(metadata i8* %129, metadata !4437, metadata !DIExpression()), !dbg !4487
  br label %130, !dbg !4568

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4487
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4569
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4487
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !4570
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4487
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !4487
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4487
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4487
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4487
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4487
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !4571
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4424, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %142, metadata !4421, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %141, metadata !4423, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %140, metadata !4426, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %139, metadata !4427, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %138, metadata !4428, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %137, metadata !4432, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %136, metadata !4440, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %135, metadata !4433, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 poison, metadata !4438, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %133, metadata !4437, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %132, metadata !4435, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %131, metadata !4434, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.label(metadata !4486), !dbg !4573
  br i1 %22, label %146, label %144, !dbg !4574

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4575
  store i8* %133, i8** %145, align 4, !dbg !4578
  br label %146, !dbg !4579

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4580
  call void @llvm.dbg.value(metadata i32 %147, metadata !4440, metadata !DIExpression()), !dbg !4487
  %148 = icmp sgt i32 %136, 0, !dbg !4581
  br i1 %148, label %152, label %149, !dbg !4582

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #27, !dbg !4583
  %151 = zext i1 %150 to i32, !dbg !4583
  br label %152, !dbg !4582

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4582
  %154 = icmp eq i32 %153, 0, !dbg !4582
  call void @llvm.dbg.value(metadata i1 %154, metadata !4464, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4584
  call void @llvm.dbg.value(metadata i1 %36, metadata !4467, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4584
  %155 = or i1 %36, %154, !dbg !4585
  br i1 %155, label %156, label %192, !dbg !4585

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4586
  %158 = sub i32 %157, %17, !dbg !4586
  %159 = lshr i32 %158, 2, !dbg !4587
  call void @llvm.dbg.value(metadata i32 %159, metadata !4468, metadata !DIExpression()), !dbg !4588
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4589
  br i1 %161, label %162, label %163, !dbg !4589

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 635) #26, !dbg !4591
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.18, i32 0, i32 0)) #26, !dbg !4591
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 635) #26, !dbg !4591
  unreachable, !dbg !4591

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !4596
  br i1 %164, label %165, label %166, !dbg !4598

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 640) #26, !dbg !4599
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.19, i32 0, i32 0)) #26, !dbg !4599
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 640) #26, !dbg !4599
  unreachable, !dbg !4599

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !4604

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !4605
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4608
  store i8 %168, i8* %169, align 1, !dbg !4609
  %170 = trunc i32 %132 to i8, !dbg !4610
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4611
  store i8 %170, i8* %171, align 1, !dbg !4612
  br i1 %154, label %175, label %172, !dbg !4613

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !4614
  store i8 %173, i8* %169, align 1, !dbg !4614
  %174 = add i32 %131, 1, !dbg !4617
  call void @llvm.dbg.value(metadata i32 %174, metadata !4434, metadata !DIExpression()), !dbg !4487
  br label %187, !dbg !4618

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !4619
  call void @llvm.dbg.value(metadata i32 %176, metadata !4433, metadata !DIExpression()), !dbg !4487
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4621

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4622
  call void @llvm.dbg.value(metadata i32 %179, metadata !4421, metadata !DIExpression()), !dbg !4487
  br label %187, !dbg !4625

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4626

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4627
  call void @llvm.dbg.value(metadata i32 %182, metadata !4421, metadata !DIExpression()), !dbg !4487
  br label %187, !dbg !4630

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #26, !dbg !4631
  %185 = add i32 %142, 2, !dbg !4633
  %186 = add i32 %185, %184, !dbg !4634
  call void @llvm.dbg.value(metadata i32 %186, metadata !4421, metadata !DIExpression()), !dbg !4487
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !4487
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !4487
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !4487
  call void @llvm.dbg.value(metadata i32 %190, metadata !4421, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %189, metadata !4433, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %188, metadata !4434, metadata !DIExpression()), !dbg !4487
  %191 = add nuw nsw i32 %137, 1, !dbg !4635
  call void @llvm.dbg.value(metadata i32 %191, metadata !4432, metadata !DIExpression()), !dbg !4487
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !4487
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !4570
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !4487
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !4571
  call void @llvm.dbg.value(metadata i32 %196, metadata !4421, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %195, metadata !4432, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %194, metadata !4433, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %193, metadata !4434, metadata !DIExpression()), !dbg !4487
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4636
  call void @llvm.dbg.value(metadata i8* %197, metadata !4426, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %143, metadata !4424, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %141, metadata !4423, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %139, metadata !4427, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %138, metadata !4428, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 poison, metadata !4441, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 poison, metadata !4438, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %132, metadata !4435, metadata !DIExpression()), !dbg !4487
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4519
  call void @llvm.dbg.value(metadata i8* %198, metadata !4423, metadata !DIExpression()), !dbg !4487
  %199 = load i8, i8* %198, align 1, !dbg !4521
  %200 = icmp eq i8 %199, 0, !dbg !4522
  br i1 %200, label %226, label %63, !dbg !4523

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4637

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4638
  call void @llvm.dbg.value(metadata i8* %203, metadata !4424, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 undef, metadata !4471, metadata !DIExpression()), !dbg !4639
  br i1 %22, label %219, label %204, !dbg !4640

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4638
  %206 = load i32, i32* %205, align 4, !dbg !4638
  call void @llvm.dbg.value(metadata i32 %206, metadata !4471, metadata !DIExpression()), !dbg !4639
  %207 = inttoptr i32 %118 to i32*, !dbg !4641
  store i32 %206, i32* %207, align 4, !dbg !4644
  br label %219, !dbg !4645

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4646
  %210 = add i32 %209, 7, !dbg !4646
  %211 = and i32 %210, -8, !dbg !4646
  %212 = inttoptr i32 %211 to i8*, !dbg !4646
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4646
  call void @llvm.dbg.value(metadata i8* %213, metadata !4424, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i64 undef, metadata !4477, metadata !DIExpression()), !dbg !4647
  br i1 %22, label %219, label %214, !dbg !4648

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4646
  %216 = load i64, i64* %215, align 8, !dbg !4646
  call void @llvm.dbg.value(metadata i64 %216, metadata !4477, metadata !DIExpression()), !dbg !4647
  %217 = inttoptr i32 %118 to i64*, !dbg !4649
  store i64 %216, i64* %217, align 8, !dbg !4654
  br label %219, !dbg !4655

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 709) #26, !dbg !4656
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.20, i32 0, i32 0), i32 noundef %113) #26, !dbg !4656
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 709) #26, !dbg !4656
  unreachable, !dbg !4656

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4661
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4661
  call void @llvm.dbg.value(metadata i8* %221, metadata !4424, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %40, metadata !4423, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %222, metadata !4426, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %113, metadata !4427, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %112, metadata !4428, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 poison, metadata !4441, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 poison, metadata !4438, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %72, metadata !4435, metadata !DIExpression()), !dbg !4487
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4519
  call void @llvm.dbg.value(metadata i8* %223, metadata !4423, metadata !DIExpression()), !dbg !4487
  %224 = load i8, i8* %223, align 1, !dbg !4521
  %225 = icmp eq i8 %224, 0, !dbg !4522
  br i1 %225, label %226, label %38, !dbg !4523

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4662
  %228 = ptrtoint i8* %227 to i32, !dbg !4663
  %229 = sub i32 %228, %17, !dbg !4663
  %230 = lshr i32 %229, 2, !dbg !4665
  %231 = icmp ugt i32 %229, 1023, !dbg !4666
  br i1 %231, label %232, label %233, !dbg !4667

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 721) #26, !dbg !4668
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.21, i32 0, i32 0)) #26, !dbg !4668
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 721) #26, !dbg !4668
  unreachable, !dbg !4668

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4673

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4674
  %236 = add i32 %235, %229, !dbg !4677
  br label %320, !dbg !4678

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4679
  store i8 %238, i8* %0, align 1, !dbg !4680
  %239 = trunc i32 %194 to i8, !dbg !4681
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4683
  store i8 %240, i8* %242, align 1, !dbg !4685
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4686
  store i8 %241, i8* %243, align 1, !dbg !4687
  %244 = trunc i32 %193 to i8, !dbg !4688
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4689
  store i8 %244, i8* %245, align 1, !dbg !4690
  %246 = icmp eq i32 %193, 0, !dbg !4691
  %247 = xor i1 %246, true, !dbg !4692
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4692
  call void @llvm.dbg.value(metadata i8* %227, metadata !4426, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 0, metadata !4436, metadata !DIExpression()), !dbg !4487
  br i1 %249, label %250, label %269, !dbg !4692

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4693

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !4426, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %254, metadata !4436, metadata !DIExpression()), !dbg !4487
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4694
  %256 = load i8, i8* %255, align 1, !dbg !4694
  %257 = icmp sgt i8 %256, -1, !dbg !4696
  br i1 %257, label %265, label %258, !dbg !4697

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !4480, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4698
  %259 = ptrtoint i8* %253 to i32, !dbg !4699
  %260 = add i32 %251, %259, !dbg !4701
  %261 = icmp ugt i32 %260, %196, !dbg !4702
  br i1 %261, label %320, label %262, !dbg !4703

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4704
  call void @llvm.dbg.value(metadata i8 %263, metadata !4480, metadata !DIExpression()), !dbg !4698
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4705
  call void @llvm.dbg.value(metadata i8* %264, metadata !4426, metadata !DIExpression()), !dbg !4487
  store i8 %263, i8* %253, align 1, !dbg !4706
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4636
  call void @llvm.dbg.value(metadata i8* %266, metadata !4426, metadata !DIExpression()), !dbg !4487
  %267 = add nuw i32 %254, 1, !dbg !4707
  call void @llvm.dbg.value(metadata i32 %267, metadata !4436, metadata !DIExpression()), !dbg !4487
  %268 = icmp eq i32 %267, %195, !dbg !4708
  br i1 %268, label %269, label %252, !dbg !4693, !llvm.loop !4709

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4636
  call void @llvm.dbg.value(metadata i8* %270, metadata !4426, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 0, metadata !4436, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %133, metadata !4437, metadata !DIExpression()), !dbg !4487
  %271 = icmp eq i32 %195, 0, !dbg !4711
  br i1 %271, label %316, label %272, !dbg !4714

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4714

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !4426, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %276, metadata !4437, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %277, metadata !4436, metadata !DIExpression()), !dbg !4487
  br i1 %246, label %282, label %278, !dbg !4715

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4718
  %280 = load i8, i8* %279, align 1, !dbg !4718
  %281 = icmp sgt i8 %280, -1, !dbg !4719
  br i1 %281, label %282, label %311, !dbg !4720

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4721

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !4427, metadata !DIExpression()), !dbg !4487
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4722
  %285 = load i8, i8* %284, align 1, !dbg !4722
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4725
  call void @llvm.dbg.value(metadata i8* %286, metadata !4426, metadata !DIExpression()), !dbg !4487
  store i8 %285, i8* %275, align 1, !dbg !4726
  br label %297, !dbg !4727

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4728
  %289 = load i8, i8* %288, align 1, !dbg !4728
  %290 = zext i8 %289 to i32, !dbg !4728
  %291 = shl nuw nsw i32 %290, 2, !dbg !4730
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4731
  %293 = bitcast i8* %292 to i8**, !dbg !4732
  %294 = load i8*, i8** %293, align 4, !dbg !4732
  call void @llvm.dbg.value(metadata i8* %294, metadata !4437, metadata !DIExpression()), !dbg !4487
  store i8* null, i8** %293, align 4, !dbg !4733
  %295 = tail call i32 @strlen(i8* noundef %294) #26, !dbg !4734
  %296 = add i32 %295, 1, !dbg !4735
  call void @llvm.dbg.value(metadata i32 %296, metadata !4427, metadata !DIExpression()), !dbg !4487
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !4487
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4736
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !4487
  call void @llvm.dbg.value(metadata i8* %300, metadata !4426, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %299, metadata !4427, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %298, metadata !4437, metadata !DIExpression()), !dbg !4487
  %301 = ptrtoint i8* %300 to i32, !dbg !4737
  %302 = add i32 %273, %299, !dbg !4739
  %303 = add i32 %302, %301, !dbg !4740
  %304 = icmp ugt i32 %303, %196, !dbg !4741
  br i1 %304, label %320, label %305, !dbg !4742

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4743
  %307 = load i8, i8* %306, align 1, !dbg !4743
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4744
  call void @llvm.dbg.value(metadata i8* %308, metadata !4426, metadata !DIExpression()), !dbg !4487
  store i8 %307, i8* %300, align 1, !dbg !4745
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #26, !dbg !4746
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4747
  call void @llvm.dbg.value(metadata i8* %310, metadata !4426, metadata !DIExpression()), !dbg !4487
  br label %311, !dbg !4748

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4749
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !4487
  call void @llvm.dbg.value(metadata i8* %313, metadata !4426, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %312, metadata !4437, metadata !DIExpression()), !dbg !4487
  %314 = add nuw i32 %277, 1, !dbg !4750
  call void @llvm.dbg.value(metadata i32 %314, metadata !4436, metadata !DIExpression()), !dbg !4487
  %315 = icmp eq i32 %314, %195, !dbg !4711
  br i1 %315, label %316, label %274, !dbg !4714, !llvm.loop !4751

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4636
  %318 = ptrtoint i8* %317 to i32, !dbg !4753
  %319 = sub i32 %318, %17, !dbg !4753
  br label %320, !dbg !4754

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4755
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4755
  ret i32 %321, !dbg !4755
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !4756 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4760, metadata !DIExpression()), !dbg !4761
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #27, !dbg !4762
  ret i1 %2, !dbg !4763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !4764 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4769, metadata !DIExpression()), !dbg !4770
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4771
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4772
  %4 = and i1 %2, %3, !dbg !4772
  ret i1 %4, !dbg !4773
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4774 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4778, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i32 %1, metadata !4779, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i32 %2, metadata !4780, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i8* %3, metadata !4781, metadata !DIExpression()), !dbg !4784
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4785
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4785
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4782, metadata !DIExpression()), !dbg !4786
  call void @llvm.va_start(i8* nonnull %6), !dbg !4787
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4788
  %8 = load i32, i32* %7, align 4, !dbg !4788
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4788
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #27, !dbg !4788
  call void @llvm.dbg.value(metadata i32 %10, metadata !4783, metadata !DIExpression()), !dbg !4784
  call void @llvm.va_end(i8* nonnull %6), !dbg !4789
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4790
  ret i32 %10, !dbg !4791
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4792 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4804, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4805, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i8* %2, metadata !4806, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i8* %3, metadata !4807, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i8* %3, metadata !4808, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i8* %3, metadata !4809, metadata !DIExpression()), !dbg !4823
  %5 = icmp eq i8* %3, null, !dbg !4824
  br i1 %5, label %45, label %6, !dbg !4826

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4818, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4823
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4827
  %8 = load i8, i8* %7, align 1, !dbg !4827
  %9 = zext i8 %8 to i32, !dbg !4828
  call void @llvm.dbg.value(metadata i32 %9, metadata !4819, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i8 undef, metadata !4820, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4823
  call void @llvm.dbg.value(metadata i8 undef, metadata !4821, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4823
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  call void @llvm.dbg.value(metadata i32 0, metadata !4817, metadata !DIExpression()), !dbg !4823
  %10 = icmp eq i8 %8, 0, !dbg !4829
  br i1 %10, label %39, label %11, !dbg !4832

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4833
  call void @llvm.dbg.value(metadata i8 %12, metadata !4818, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4823
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %13 = zext i8 %12 to i32, !dbg !4834
  call void @llvm.dbg.value(metadata i32 %13, metadata !4818, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4823
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %14 = shl nuw nsw i32 %13, 2, !dbg !4835
  call void @llvm.dbg.value(metadata i32 %14, metadata !4818, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4836
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4837
  %17 = load i8, i8* %16, align 1, !dbg !4837
  call void @llvm.dbg.value(metadata i8 %17, metadata !4820, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4823
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %18 = zext i8 %17 to i32, !dbg !4838
  call void @llvm.dbg.value(metadata i32 %18, metadata !4820, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4839
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4840
  %21 = load i8, i8* %20, align 1, !dbg !4840
  call void @llvm.dbg.value(metadata i8 %21, metadata !4821, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4823
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %22 = zext i8 %21 to i32, !dbg !4841
  call void @llvm.dbg.value(metadata i32 %22, metadata !4821, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %23 = shl nuw nsw i32 %22, 1, !dbg !4842
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4843
  call void @llvm.dbg.value(metadata i8* %24, metadata !4815, metadata !DIExpression()), !dbg !4823
  br label %25, !dbg !4832

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4815, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i32 %27, metadata !4817, metadata !DIExpression()), !dbg !4823
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4844
  call void @llvm.dbg.value(metadata i8* %28, metadata !4815, metadata !DIExpression()), !dbg !4823
  %29 = load i8, i8* %26, align 1, !dbg !4846
  %30 = zext i8 %29 to i32, !dbg !4846
  call void @llvm.dbg.value(metadata i32 %30, metadata !4822, metadata !DIExpression()), !dbg !4823
  %31 = shl nuw nsw i32 %30, 2, !dbg !4847
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4848
  %33 = bitcast i8* %32 to i8**, !dbg !4849
  call void @llvm.dbg.value(metadata i8** %33, metadata !4816, metadata !DIExpression()), !dbg !4823
  store i8* %28, i8** %33, align 4, !dbg !4850
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #26, !dbg !4851
  %35 = add i32 %34, 1, !dbg !4852
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4853
  call void @llvm.dbg.value(metadata i8* %36, metadata !4815, metadata !DIExpression()), !dbg !4823
  %37 = add nuw nsw i32 %27, 1, !dbg !4854
  call void @llvm.dbg.value(metadata i32 %37, metadata !4817, metadata !DIExpression()), !dbg !4823
  %38 = icmp eq i32 %37, %9, !dbg !4829
  br i1 %38, label %39, label %25, !dbg !4832, !llvm.loop !4855

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4857
  call void @llvm.dbg.value(metadata i8* %40, metadata !4808, metadata !DIExpression()), !dbg !4823
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4858
  %42 = bitcast i8* %41 to i8**, !dbg !4858
  %43 = load i8*, i8** %42, align 1, !dbg !4858
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #27, !dbg !4859
  br label %45, !dbg !4860

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4823
  ret i32 %46, !dbg !4861
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4862 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4866, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4867, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i8* %2, metadata !4868, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i8* %3, metadata !4869, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i8* %4, metadata !4870, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i8* %4, metadata !4871, metadata !DIExpression()), !dbg !4876
  %6 = ptrtoint i8* %4 to i32, !dbg !4877
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4877
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #26, !dbg !4877
  ret i32 %8, !dbg !4878
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4879 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4883, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i32 %1, metadata !4884, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8 0, metadata !4886, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i32 0, metadata !4887, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8 poison, metadata !4886, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8* %0, metadata !4883, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4888
  %3 = load i8, i8* %0, align 1, !dbg !4889
  call void @llvm.dbg.value(metadata i8 %3, metadata !4885, metadata !DIExpression()), !dbg !4888
  %4 = icmp eq i8 %3, 0, !dbg !4890
  br i1 %4, label %29, label %5, !dbg !4891

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4892
  call void @llvm.dbg.value(metadata i32 %8, metadata !4887, metadata !DIExpression()), !dbg !4888
  br i1 %9, label %11, label %22, !dbg !4893

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4895
  br i1 %12, label %13, label %17, !dbg !4899

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4900
  br i1 %14, label %29, label %15, !dbg !4903

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4904
  br i1 %16, label %29, label %22, !dbg !4906

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4907
  %19 = xor i1 %18, true, !dbg !4909
  %20 = zext i1 %18 to i32, !dbg !4909
  %21 = add nsw i32 %8, %20, !dbg !4909
  br label %22, !dbg !4909

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4888
  call void @llvm.dbg.value(metadata i32 %24, metadata !4887, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8 poison, metadata !4886, metadata !DIExpression()), !dbg !4888
  %25 = icmp eq i8 %6, 37, !dbg !4910
  %26 = xor i1 %25, %23, !dbg !4912
  call void @llvm.dbg.value(metadata i8* %10, metadata !4883, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8* %10, metadata !4883, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4888
  %27 = load i8, i8* %10, align 1, !dbg !4889
  call void @llvm.dbg.value(metadata i8 %27, metadata !4885, metadata !DIExpression()), !dbg !4888
  %28 = icmp eq i8 %27, 0, !dbg !4890
  br i1 %28, label %29, label %5, !dbg !4891, !llvm.loop !4913

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4888
  ret i1 %30, !dbg !4915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #6 !dbg !4916 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4920, metadata !DIExpression()), !dbg !4921
  %2 = add i8 %0, -64, !dbg !4922
  %3 = icmp ult i8 %2, 59, !dbg !4922
  ret i1 %3, !dbg !4923
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4924 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4932, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %1, metadata !4933, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4934, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8* %3, metadata !4935, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %4, metadata !4936, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i16* %5, metadata !4937, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %6, metadata !4938, metadata !DIExpression()), !dbg !5001
  %11 = icmp eq i8* %0, null, !dbg !5002
  br i1 %11, label %12, label %13, !dbg !5005

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 916) #26, !dbg !5006
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 916) #26, !dbg !5006
  unreachable, !dbg !5006

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4939, metadata !DIExpression()), !dbg !5001
  %14 = bitcast i8* %0 to i32*, !dbg !5008
  call void @llvm.dbg.value(metadata i32* %14, metadata !4940, metadata !DIExpression()), !dbg !5001
  %15 = and i32 %4, 8, !dbg !5009
  %16 = icmp eq i32 %15, 0, !dbg !5010
  call void @llvm.dbg.value(metadata i1 %16, metadata !4944, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5001
  call void @llvm.dbg.value(metadata i8* %0, metadata !4947, metadata !DIExpression()), !dbg !5001
  %17 = icmp eq i32 %1, 0, !dbg !5011
  br i1 %17, label %18, label %20, !dbg !5012

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #27, !dbg !5013
  br label %20, !dbg !5012

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !5012
  call void @llvm.dbg.value(metadata i32 %21, metadata !4933, metadata !DIExpression()), !dbg !5001
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5014
  %23 = load i8, i8* %22, align 1, !dbg !5014
  %24 = zext i8 %23 to i32, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %24, metadata !4942, metadata !DIExpression()), !dbg !5001
  %25 = icmp ne i8 %23, 0, !dbg !5016
  %26 = and i32 %4, 1, !dbg !5017
  %27 = icmp ne i32 %26, 0, !dbg !5017
  %28 = and i1 %27, %25, !dbg !5017
  call void @llvm.dbg.value(metadata i1 %28, metadata !4946, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5001
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !5018
  %30 = load i8, i8* %29, align 1, !dbg !5018
  %31 = zext i8 %30 to i32, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %31, metadata !4943, metadata !DIExpression()), !dbg !5001
  %32 = icmp ne i8 %30, 0, !dbg !5020
  %33 = and i32 %4, 2, !dbg !5021
  %34 = icmp ne i32 %33, 0, !dbg !5021
  %35 = and i1 %34, %32, !dbg !5021
  call void @llvm.dbg.value(metadata i1 %35, metadata !4945, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5001
  %36 = select i1 %35, i1 true, i1 %28, !dbg !5022
  br i1 %36, label %41, label %37, !dbg !5022

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !5024
  br i1 %38, label %287, label %39, !dbg !5027

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #26, !dbg !5028
  br label %287, !dbg !5030

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !5031
  %43 = zext i8 %42 to i32, !dbg !5032
  %44 = shl nuw nsw i32 %43, 2, !dbg !5033
  call void @llvm.dbg.value(metadata i32 %44, metadata !4941, metadata !DIExpression()), !dbg !5001
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !5034
  %46 = bitcast i8* %45 to i8**, !dbg !5035
  %47 = load i8*, i8** %46, align 4, !dbg !5035
  call void @llvm.dbg.value(metadata i8* %47, metadata !4950, metadata !DIExpression()), !dbg !5001
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !5036
  call void @llvm.dbg.value(metadata i8* %48, metadata !4951, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 0, metadata !4952, metadata !DIExpression()), !dbg !5001
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !5037
  br i1 %49, label %50, label %135, !dbg !5038

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !4949, metadata !DIExpression()), !dbg !5001
  br i1 %28, label %51, label %76, !dbg !5039

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !4949, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8* %48, metadata !4951, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 0, metadata !4952, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 0, metadata !4953, metadata !DIExpression()), !dbg !5040
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !5041

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !4949, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8* %55, metadata !4951, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %56, metadata !4952, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %57, metadata !4953, metadata !DIExpression()), !dbg !5040
  %58 = load i8, i8* %55, align 1, !dbg !5042
  %59 = zext i8 %58 to i32, !dbg !5043
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !5043
  %61 = bitcast i32* %60 to i8**, !dbg !5044
  %62 = load i8*, i8** %61, align 4, !dbg !5044
  call void @llvm.dbg.value(metadata i8* %62, metadata !4959, metadata !DIExpression()), !dbg !5045
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #27, !dbg !5046
  call void @llvm.dbg.value(metadata i32 %63, metadata !4962, metadata !DIExpression()), !dbg !5045
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !5047
  br i1 %65, label %66, label %70, !dbg !5047

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !5049
  %68 = add nuw i32 %56, 1, !dbg !5051
  call void @llvm.dbg.value(metadata i32 %68, metadata !4952, metadata !DIExpression()), !dbg !5001
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !5052
  store i16 %67, i16* %69, align 2, !dbg !5053
  br label %70, !dbg !5054

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !5001
  call void @llvm.dbg.value(metadata i32 %71, metadata !4952, metadata !DIExpression()), !dbg !5001
  %72 = add nsw i32 %63, %54, !dbg !5055
  call void @llvm.dbg.value(metadata i32 %72, metadata !4949, metadata !DIExpression()), !dbg !5001
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !5056
  call void @llvm.dbg.value(metadata i8* %73, metadata !4951, metadata !DIExpression()), !dbg !5001
  %74 = add nuw nsw i32 %57, 1, !dbg !5057
  call void @llvm.dbg.value(metadata i32 %74, metadata !4953, metadata !DIExpression()), !dbg !5040
  %75 = icmp eq i32 %74, %24, !dbg !5058
  br i1 %75, label %82, label %53, !dbg !5041, !llvm.loop !5059

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !5061
  %80 = select i1 %79, i32 %24, i32 0, !dbg !5061
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !5061
  br label %82, !dbg !5061

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !5064
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !5001
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !5065
  call void @llvm.dbg.value(metadata i1 undef, metadata !4963, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5066
  call void @llvm.dbg.value(metadata i32 0, metadata !4964, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.value(metadata i32 %85, metadata !4949, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8* %84, metadata !4951, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %83, metadata !4952, metadata !DIExpression()), !dbg !5001
  %86 = icmp eq i8 %30, 0, !dbg !5068
  br i1 %86, label %287, label %87, !dbg !5069

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !5070
  %89 = icmp eq i32 %88, 0, !dbg !5071
  call void @llvm.dbg.value(metadata i1 %89, metadata !4963, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5066
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !5069

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !4949, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8* %96, metadata !4951, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %97, metadata !4952, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %98, metadata !4964, metadata !DIExpression()), !dbg !5067
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !5072
  call void @llvm.dbg.value(metadata i8* %99, metadata !4951, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8 undef, metadata !4966, metadata !DIExpression()), !dbg !5073
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !5074
  call void @llvm.dbg.value(metadata i8* %100, metadata !4951, metadata !DIExpression()), !dbg !5001
  %101 = load i8, i8* %99, align 1, !dbg !5075
  call void @llvm.dbg.value(metadata i8 %101, metadata !4969, metadata !DIExpression()), !dbg !5073
  %102 = zext i8 %101 to i32, !dbg !5076
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !5076
  %104 = bitcast i32* %103 to i8**, !dbg !5077
  %105 = load i8*, i8** %104, align 4, !dbg !5077
  call void @llvm.dbg.value(metadata i8* %105, metadata !4970, metadata !DIExpression()), !dbg !5073
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #27, !dbg !5078
  call void @llvm.dbg.value(metadata i1 %106, metadata !4971, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5073
  br i1 %16, label %113, label %107, !dbg !5079

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !5081
  call void @llvm.dbg.value(metadata i8 %108, metadata !4966, metadata !DIExpression()), !dbg !5073
  %109 = zext i8 %108 to i32, !dbg !5082
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #27, !dbg !5083
  br i1 %110, label %111, label %113, !dbg !5084

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.23, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #26, !dbg !5085
  %112 = add nsw i32 %95, -2, !dbg !5091
  call void @llvm.dbg.value(metadata i32 %112, metadata !4949, metadata !DIExpression()), !dbg !5001
  br label %130, !dbg !5092

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !5093

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !5094

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !5096
  call void @llvm.dbg.value(metadata i32 %116, metadata !4949, metadata !DIExpression()), !dbg !5001
  br label %130, !dbg !5099

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !5100

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4997), !dbg !5101
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #27, !dbg !5102
  call void @llvm.dbg.value(metadata i32 %119, metadata !4972, metadata !DIExpression()), !dbg !5073
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !5103
  br i1 %121, label %122, label %126, !dbg !5103

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !5105
  %124 = add nuw i32 %97, 1, !dbg !5107
  call void @llvm.dbg.value(metadata i32 %124, metadata !4952, metadata !DIExpression()), !dbg !5001
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !5108
  store i16 %123, i16* %125, align 2, !dbg !5109
  br label %126, !dbg !5110

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !5001
  call void @llvm.dbg.value(metadata i32 %127, metadata !4952, metadata !DIExpression()), !dbg !5001
  %128 = add i32 %95, -1, !dbg !5111
  %129 = add i32 %128, %119, !dbg !5112
  call void @llvm.dbg.value(metadata i32 %129, metadata !4949, metadata !DIExpression()), !dbg !5001
  br label %130, !dbg !5113

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !5001
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !5073
  call void @llvm.dbg.value(metadata i32 %132, metadata !4949, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %131, metadata !4952, metadata !DIExpression()), !dbg !5001
  %133 = add nuw nsw i32 %98, 1, !dbg !5114
  call void @llvm.dbg.value(metadata i8* %100, metadata !4951, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %133, metadata !4964, metadata !DIExpression()), !dbg !5067
  %134 = icmp eq i32 %133, %31, !dbg !5068
  br i1 %134, label %287, label %94, !dbg !5069, !llvm.loop !5115

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4974, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4975, metadata !DIExpression()), !dbg !5118
  br i1 %28, label %136, label %138, !dbg !5119

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4976, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8 0, metadata !4977, metadata !DIExpression()), !dbg !5001
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !5120
  call void @llvm.dbg.value(metadata i8* %137, metadata !4978, metadata !DIExpression()), !dbg !5001
  br label %143, !dbg !5123

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !5124
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !5124

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4978, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8 undef, metadata !4977, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8 0, metadata !4976, metadata !DIExpression()), !dbg !5001
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #26, !dbg !5126
  br label %148, !dbg !5129

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !5130
  call void @llvm.dbg.value(metadata i8* %151, metadata !4951, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 0, metadata !4980, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata i8 %149, metadata !4977, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8 %150, metadata !4976, metadata !DIExpression()), !dbg !5001
  %152 = icmp eq i8 %30, 0, !dbg !5132
  br i1 %152, label %153, label %155, !dbg !5133

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !5134
  br label %160, !dbg !5133

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !5133

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !5134
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !5135
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !5136
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !5001
  call void @llvm.dbg.value(metadata i8 undef, metadata !4973, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !5001
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5137
  %166 = load i8, i8* %165, align 1, !dbg !5137
  %167 = zext i8 %162 to i32, !dbg !5138
  %168 = add i8 %166, %162, !dbg !5139
  call void @llvm.dbg.value(metadata i8 %168, metadata !4973, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !5001
  %169 = icmp eq i32 %33, 0, !dbg !5140
  %170 = lshr i8 %163, 1, !dbg !5141
  %171 = select i1 %169, i8 %170, i8 0, !dbg !5141
  call void @llvm.dbg.value(metadata i8 %171, metadata !4973, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !5001
  %172 = icmp eq i32 %26, 0, !dbg !5142
  %173 = icmp eq i32 %161, 0, !dbg !5134
  %174 = select i1 %173, i8 0, i8 %163, !dbg !5134
  %175 = select i1 %172, i8 %174, i8 0, !dbg !5134
  call void @llvm.dbg.value(metadata i8 %175, metadata !4973, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !5001
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4988, metadata !DIExpression()), !dbg !5143
  %176 = load i32, i32* %14, align 1, !dbg !5144
  store i8 %168, i8* %165, align 1, !dbg !5145
  store i8 %175, i8* %22, align 1, !dbg !5145
  store i8 %171, i8* %29, align 1, !dbg !5145
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #26, !dbg !5146
  call void @llvm.dbg.value(metadata i32 %177, metadata !4979, metadata !DIExpression()), !dbg !5001
  %178 = icmp slt i32 %177, 0, !dbg !5147
  br i1 %178, label %287, label %240, !dbg !5149

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !4951, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %181, metadata !4980, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata i8 %182, metadata !4977, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8 %183, metadata !4976, metadata !DIExpression()), !dbg !5001
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !5150
  call void @llvm.dbg.value(metadata i8* %184, metadata !4951, metadata !DIExpression()), !dbg !5001
  %185 = load i8, i8* %180, align 1, !dbg !5151
  call void @llvm.dbg.value(metadata i8 %185, metadata !4982, metadata !DIExpression()), !dbg !5152
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !5153
  call void @llvm.dbg.value(metadata i8* %186, metadata !4951, metadata !DIExpression()), !dbg !5001
  %187 = load i8, i8* %184, align 1, !dbg !5154
  call void @llvm.dbg.value(metadata i8 %187, metadata !4985, metadata !DIExpression()), !dbg !5152
  %188 = zext i8 %187 to i32, !dbg !5155
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !5155
  %190 = bitcast i32* %189 to i8**, !dbg !5156
  %191 = load i8*, i8** %190, align 4, !dbg !5156
  call void @llvm.dbg.value(metadata i8* %191, metadata !4986, metadata !DIExpression()), !dbg !5152
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #27, !dbg !5157
  call void @llvm.dbg.value(metadata i1 %192, metadata !4987, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5152
  br i1 %16, label %196, label %193, !dbg !5158

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !5160
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #27, !dbg !5161
  br i1 %195, label %235, label %196, !dbg !5162

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !5163

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !5164

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !5167
  br i1 %199, label %201, label %200, !dbg !5172

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1086) #26, !dbg !5173
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1086) #26, !dbg !5173
  unreachable, !dbg !5173

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !5167
  %203 = add nuw nsw i8 %183, 1, !dbg !5175
  call void @llvm.dbg.value(metadata i8 %203, metadata !4976, metadata !DIExpression()), !dbg !5001
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !5176
  br label %231, !dbg !5177

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !5178

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !5179
  br i1 %207, label %209, label %208, !dbg !5184

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1089) #26, !dbg !5185
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1089) #26, !dbg !5185
  unreachable, !dbg !5185

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !5179
  %211 = add nuw nsw i8 %182, 1, !dbg !5187
  call void @llvm.dbg.value(metadata i8 %211, metadata !4977, metadata !DIExpression()), !dbg !5001
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !5188
  br label %231, !dbg !5189

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !5190

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !5192
  br i1 %215, label %217, label %216, !dbg !5197

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1096) #26, !dbg !5198
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1096) #26, !dbg !5198
  unreachable, !dbg !5198

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !5192
  %219 = add nuw nsw i8 %183, 1, !dbg !5200
  call void @llvm.dbg.value(metadata i8 %219, metadata !4976, metadata !DIExpression()), !dbg !5001
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !5201
  br label %231, !dbg !5202

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !5203
  br i1 %222, label %224, label %223, !dbg !5207

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1099) #26, !dbg !5208
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1099) #26, !dbg !5208
  unreachable, !dbg !5208

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !5203
  %226 = add nuw nsw i8 %182, 1, !dbg !5210
  call void @llvm.dbg.value(metadata i8 %226, metadata !4977, metadata !DIExpression()), !dbg !5001
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !5211
  store i8 %185, i8* %227, align 1, !dbg !5212
  %228 = add nuw nsw i8 %182, 2, !dbg !5213
  call void @llvm.dbg.value(metadata i8 %228, metadata !4977, metadata !DIExpression()), !dbg !5001
  %229 = zext i8 %226 to i32, !dbg !5214
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !5214
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !5215
  br label %235, !dbg !5216

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !5001
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !5136
  call void @llvm.dbg.value(metadata i8 %237, metadata !4977, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8 %236, metadata !4976, metadata !DIExpression()), !dbg !5001
  %238 = add nuw nsw i32 %181, 1, !dbg !5216
  call void @llvm.dbg.value(metadata i8* %186, metadata !4951, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %238, metadata !4980, metadata !DIExpression()), !dbg !5131
  %239 = icmp eq i32 %238, %31, !dbg !5132
  br i1 %239, label %160, label %179, !dbg !5133, !llvm.loop !5217

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !5141
  call void @llvm.dbg.value(metadata i32 %177, metadata !4949, metadata !DIExpression()), !dbg !5001
  store i32 %176, i32* %14, align 1, !dbg !5219
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !5220
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #26, !dbg !5221
  call void @llvm.dbg.value(metadata i32 %243, metadata !4979, metadata !DIExpression()), !dbg !5001
  %244 = icmp slt i32 %243, 0, !dbg !5222
  br i1 %244, label %287, label %245, !dbg !5224

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !4949, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5001
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !5225
  %248 = add nuw nsw i32 %44, %24, !dbg !5225
  %249 = sub i32 %247, %248, !dbg !5225
  call void @llvm.dbg.value(metadata i32 %249, metadata !4989, metadata !DIExpression()), !dbg !5001
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #26, !dbg !5226
  call void @llvm.dbg.value(metadata i32 %250, metadata !4979, metadata !DIExpression()), !dbg !5001
  %251 = icmp slt i32 %250, 0, !dbg !5227
  br i1 %251, label %287, label %252, !dbg !5229

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !5230
  call void @llvm.dbg.value(metadata i32 %253, metadata !4949, metadata !DIExpression()), !dbg !5001
  %254 = add nuw nsw i32 %253, %250, !dbg !5231
  call void @llvm.dbg.value(metadata i32 %254, metadata !4949, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 0, metadata !4990, metadata !DIExpression()), !dbg !5232
  %255 = icmp eq i8 %162, 0, !dbg !5233
  br i1 %255, label %284, label %256, !dbg !5234

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !5234

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4990, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.value(metadata i32 %260, metadata !4949, metadata !DIExpression()), !dbg !5001
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5235
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !5236
  %262 = load i8, i8* %261, align 1, !dbg !5236
  call void @llvm.dbg.value(metadata i8 %262, metadata !4992, metadata !DIExpression()), !dbg !5237
  store i8 %262, i8* %10, align 1, !dbg !5238
  %263 = zext i8 %262 to i32, !dbg !5239
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !5239
  %265 = bitcast i32* %264 to i8**, !dbg !5240
  %266 = load i8*, i8** %265, align 4, !dbg !5240
  call void @llvm.dbg.value(metadata i8* %266, metadata !4995, metadata !DIExpression()), !dbg !5237
  br i1 %257, label %270, label %267, !dbg !5241

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !5242
  %269 = load i16, i16* %268, align 2, !dbg !5242
  br label %270, !dbg !5241

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !5241
  call void @llvm.dbg.value(metadata i32 undef, metadata !4996, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5237
  call void @llvm.dbg.value(metadata i8* %10, metadata !4992, metadata !DIExpression(DW_OP_deref)), !dbg !5237
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #26, !dbg !5243
  call void @llvm.dbg.value(metadata i32 %272, metadata !4979, metadata !DIExpression()), !dbg !5001
  %273 = icmp slt i32 %272, 0, !dbg !5244
  br i1 %273, label %277, label %274, !dbg !5246

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4996, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !4949, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5001
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #27, !dbg !5247
  call void @llvm.dbg.value(metadata i32 %275, metadata !4979, metadata !DIExpression()), !dbg !5001
  %276 = icmp slt i32 %275, 0, !dbg !5248
  br i1 %276, label %277, label %279, !dbg !5250

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4949, metadata !DIExpression()), !dbg !5001
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5251
  call void @llvm.dbg.value(metadata i32 undef, metadata !4949, metadata !DIExpression()), !dbg !5001
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !5252
  call void @llvm.dbg.value(metadata i32 %280, metadata !4949, metadata !DIExpression()), !dbg !5001
  %281 = add nsw i32 %280, %275, !dbg !5253
  call void @llvm.dbg.value(metadata i32 %281, metadata !4949, metadata !DIExpression()), !dbg !5001
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5251
  %282 = add nuw nsw i32 %259, 1, !dbg !5254
  call void @llvm.dbg.value(metadata i32 %282, metadata !4990, metadata !DIExpression()), !dbg !5232
  %283 = icmp eq i32 %282, %167, !dbg !5233
  br i1 %283, label %284, label %258, !dbg !5234, !llvm.loop !5255

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !5231
  call void @llvm.dbg.value(metadata i32 %285, metadata !4949, metadata !DIExpression()), !dbg !5001
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #26, !dbg !5257
  br label %287, !dbg !5258

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !5001
  ret i32 %288, !dbg !5259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !5260 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5264, metadata !DIExpression()), !dbg !5272
  %2 = icmp eq i8* %0, null, !dbg !5273
  br i1 %2, label %3, label %4, !dbg !5276

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 198) #26, !dbg !5277
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 198) #26, !dbg !5277
  unreachable, !dbg !5277

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5265, metadata !DIExpression()), !dbg !5272
  call void @llvm.dbg.value(metadata i8* %0, metadata !5266, metadata !DIExpression()), !dbg !5272
  %5 = load i8, i8* %0, align 1, !dbg !5279
  %6 = zext i8 %5 to i32, !dbg !5279
  %7 = shl nuw nsw i32 %6, 2, !dbg !5280
  call void @llvm.dbg.value(metadata i32 %7, metadata !5267, metadata !DIExpression()), !dbg !5272
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5281
  %9 = load i8, i8* %8, align 1, !dbg !5281
  %10 = zext i8 %9 to i32, !dbg !5281
  call void @llvm.dbg.value(metadata i32 %10, metadata !5268, metadata !DIExpression()), !dbg !5272
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5282
  %12 = load i8, i8* %11, align 1, !dbg !5282
  %13 = zext i8 %12 to i32, !dbg !5282
  call void @llvm.dbg.value(metadata i32 %13, metadata !5269, metadata !DIExpression()), !dbg !5272
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !5283
  call void @llvm.dbg.value(metadata i8* %14, metadata !5265, metadata !DIExpression()), !dbg !5272
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !5284
  call void @llvm.dbg.value(metadata i8* %15, metadata !5265, metadata !DIExpression()), !dbg !5272
  call void @llvm.dbg.value(metadata i32 0, metadata !5270, metadata !DIExpression()), !dbg !5285
  %16 = icmp eq i8 %9, 0, !dbg !5286
  br i1 %16, label %17, label %22, !dbg !5288

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !5272
  %19 = ptrtoint i8* %18 to i32, !dbg !5289
  %20 = ptrtoint i8* %0 to i32, !dbg !5289
  %21 = sub i32 %19, %20, !dbg !5289
  ret i32 %21, !dbg !5290

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !5270, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.value(metadata i8* %24, metadata !5265, metadata !DIExpression()), !dbg !5272
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !5291
  call void @llvm.dbg.value(metadata i8* %25, metadata !5265, metadata !DIExpression()), !dbg !5272
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #26, !dbg !5293
  %27 = add i32 %26, 1, !dbg !5294
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !5295
  call void @llvm.dbg.value(metadata i8* %28, metadata !5265, metadata !DIExpression()), !dbg !5272
  %29 = add nuw nsw i32 %23, 1, !dbg !5296
  call void @llvm.dbg.value(metadata i32 %29, metadata !5270, metadata !DIExpression()), !dbg !5285
  %30 = icmp eq i32 %29, %10, !dbg !5286
  br i1 %30, label %17, label %22, !dbg !5288, !llvm.loop !5297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !5299 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !5303, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i8* %1, metadata !5304, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i8* %2, metadata !5305, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i16 %3, metadata !5306, metadata !DIExpression()), !dbg !5307
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5308
  br i1 %5, label %6, label %9, !dbg !5310

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !5311
  %8 = add i32 %7, 1, !dbg !5313
  br label %20, !dbg !5314

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5315
  br i1 %10, label %13, label %11, !dbg !5316

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5316
  br label %16, !dbg !5316

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !5317
  %15 = add i32 %14, 1, !dbg !5318
  br label %16, !dbg !5316

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5316
  %18 = and i32 %17, 65535, !dbg !5319
  call void @llvm.dbg.value(metadata i32 %17, metadata !5306, metadata !DIExpression()), !dbg !5307
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #26, !dbg !5320
  br label %20, !dbg !5321

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5307
  ret i32 %21, !dbg !5322
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5325, metadata !DIExpression()), !dbg !5326
  ret i32 0, !dbg !5327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !5328 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5332, metadata !DIExpression()), !dbg !5333
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5334
  ret void, !dbg !5335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5336 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5339
  ret i8* %1, !dbg !5340
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5341 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5352, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i8* %0, metadata !5351, metadata !DIExpression()), !dbg !5361
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !5362
  ret void, !dbg !5364
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5369, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata i8* %1, metadata !5370, metadata !DIExpression()), !dbg !5371
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5372
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !5372
  ret i32 %4, !dbg !5373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5374 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5381, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5378, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i8* %1, metadata !5379, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i8* %2, metadata !5380, metadata !DIExpression()), !dbg !5382
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !5383
  ret void, !dbg !5384
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5385 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5389, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i32 %1, metadata !5390, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i32 0, metadata !5391, metadata !DIExpression()), !dbg !5392
  %3 = icmp eq i32 %1, 0, !dbg !5393
  br i1 %3, label %13, label %4, !dbg !5396

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5391, metadata !DIExpression()), !dbg !5392
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5397
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5399
  %8 = load i8, i8* %7, align 1, !dbg !5399
  %9 = zext i8 %8 to i32, !dbg !5399
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !5397
  %11 = add nuw i32 %5, 1, !dbg !5400
  call void @llvm.dbg.value(metadata i32 %11, metadata !5391, metadata !DIExpression()), !dbg !5392
  %12 = icmp eq i32 %11, %1, !dbg !5393
  br i1 %12, label %13, label %4, !dbg !5396, !llvm.loop !5401

13:                                               ; preds = %4, %2
  ret void, !dbg !5403
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5404 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5408, metadata !DIExpression()), !dbg !5410
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5411
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5411
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5409, metadata !DIExpression()), !dbg !5412
  call void @llvm.va_start(i8* nonnull %3), !dbg !5413
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5414
  %5 = load i32, i32* %4, align 4, !dbg !5414
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5414
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !5414
  call void @llvm.va_end(i8* nonnull %3), !dbg !5415
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5416
  ret void, !dbg !5416
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5417 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5421, metadata !DIExpression()), !dbg !5426
  call void @llvm.dbg.value(metadata i32 %1, metadata !5422, metadata !DIExpression()), !dbg !5426
  call void @llvm.dbg.value(metadata i8* %2, metadata !5423, metadata !DIExpression()), !dbg !5426
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5427
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5427
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5424, metadata !DIExpression()), !dbg !5428
  call void @llvm.va_start(i8* nonnull %5), !dbg !5429
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5430
  %7 = load i32, i32* %6, align 4, !dbg !5430
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5430
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !5430
  call void @llvm.dbg.value(metadata i32 %9, metadata !5425, metadata !DIExpression()), !dbg !5426
  call void @llvm.va_end(i8* nonnull %5), !dbg !5431
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5432
  ret i32 %9, !dbg !5433
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5434 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5441, metadata !DIExpression()), !dbg !5448
  call void @llvm.dbg.value(metadata i8* %0, metadata !5438, metadata !DIExpression()), !dbg !5448
  call void @llvm.dbg.value(metadata i32 %1, metadata !5439, metadata !DIExpression()), !dbg !5448
  call void @llvm.dbg.value(metadata i8* %2, metadata !5440, metadata !DIExpression()), !dbg !5448
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5449
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5449
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5442, metadata !DIExpression()), !dbg !5450
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5451
  store i8* %0, i8** %7, align 4, !dbg !5451
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5451
  store i32 %1, i32* %8, align 4, !dbg !5451
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5451
  store i32 0, i32* %9, align 4, !dbg !5451
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !5452
  %10 = load i32, i32* %9, align 4, !dbg !5453
  %11 = load i32, i32* %8, align 4, !dbg !5455
  %12 = icmp slt i32 %10, %11, !dbg !5456
  br i1 %12, label %13, label %15, !dbg !5457

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5458
  store i8 0, i8* %14, align 1, !dbg !5460
  br label %15, !dbg !5461

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5462
  ret i32 %10, !dbg !5463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5469, metadata !DIExpression()), !dbg !5471
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5470, metadata !DIExpression()), !dbg !5471
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5472
  %4 = load i8*, i8** %3, align 4, !dbg !5472
  %5 = icmp eq i8* %4, null, !dbg !5474
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5475
  br i1 %5, label %12, label %8, !dbg !5476

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5477
  %10 = load i32, i32* %9, align 4, !dbg !5477
  %11 = icmp slt i32 %7, %10, !dbg !5478
  br i1 %11, label %15, label %12, !dbg !5479

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5480
  %14 = add nsw i32 %7, 1, !dbg !5482
  store i32 %14, i32* %13, align 4, !dbg !5482
  br label %25, !dbg !5483

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5484
  %17 = icmp eq i32 %7, %16, !dbg !5486
  br i1 %17, label %18, label %21, !dbg !5487

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5488
  store i32 %19, i32* %6, align 4, !dbg !5488
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5490
  store i8 0, i8* %20, align 1, !dbg !5491
  br label %25, !dbg !5492

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5493
  %23 = add nsw i32 %7, 1, !dbg !5495
  store i32 %23, i32* %6, align 4, !dbg !5495
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5496
  store i8 %22, i8* %24, align 1, !dbg !5497
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5498
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !5499 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5504, metadata !DIExpression()), !dbg !5508
  call void @llvm.dbg.value(metadata i8* %1, metadata !5505, metadata !DIExpression()), !dbg !5508
  call void @llvm.dbg.value(metadata i8* %2, metadata !5506, metadata !DIExpression()), !dbg !5508
  call void @llvm.dbg.value(metadata i8* %3, metadata !5507, metadata !DIExpression()), !dbg !5508
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !5509
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !5510
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !5511
  unreachable, !dbg !5512
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #12 !dbg !5513 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !5619
  ret %struct.k_thread* %1, !dbg !5620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5621 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5625, metadata !DIExpression()), !dbg !5626
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5627, !srcloc !5629
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !5630
  ret void, !dbg !5631
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #12 !dbg !5632 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5633, !srcloc !5635
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !5636
  ret %struct.k_thread* %1, !dbg !5637
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5638 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5649, metadata !DIExpression()), !dbg !5653
  call void @llvm.dbg.value(metadata i8* %1, metadata !5650, metadata !DIExpression()), !dbg !5653
  %3 = icmp eq i8* %1, null, !dbg !5654
  br i1 %3, label %16, label %4, !dbg !5656

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5657
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5657
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5651, metadata !DIExpression()), !dbg !5653
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !5658, !range !5659
  call void @llvm.dbg.value(metadata i32 %7, metadata !5652, metadata !DIExpression()), !dbg !5653
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5660
  br i1 %8, label %10, label %9, !dbg !5663

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 176) #26, !dbg !5664
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.28, i32 0, i32 0), i8* noundef nonnull %1) #26, !dbg !5664
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 176) #26, !dbg !5664
  unreachable, !dbg !5664

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5666
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #27, !dbg !5666
  %13 = icmp eq i32 %12, %7, !dbg !5666
  br i1 %13, label %15, label %14, !dbg !5669

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.29, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 185) #26, !dbg !5670
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.30, i32 0, i32 0), i8* noundef nonnull %1) #26, !dbg !5670
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 185) #26, !dbg !5670
  unreachable, !dbg !5670

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !5672
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5673
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #6 !dbg !5675 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5679, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.value(metadata i8* %1, metadata !5680, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.value(metadata i8* %1, metadata !5681, metadata !DIExpression()), !dbg !5683
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5684
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5682, metadata !DIExpression()), !dbg !5683
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5685
  %5 = ptrtoint i8* %4 to i32, !dbg !5686
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5686
  %7 = sub i32 %5, %6, !dbg !5686
  %8 = lshr i32 %7, 3, !dbg !5687
  ret i32 %8, !dbg !5688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5689 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5693, metadata !DIExpression()), !dbg !5695
  call void @llvm.dbg.value(metadata i32 %1, metadata !5694, metadata !DIExpression()), !dbg !5695
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !5696
  %4 = and i32 %3, 1, !dbg !5697
  %5 = icmp ne i32 %4, 0, !dbg !5696
  ret i1 %5, !dbg !5698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5699 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5703, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata i32 %1, metadata !5704, metadata !DIExpression()), !dbg !5705
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5706
  %4 = add i32 %3, %1, !dbg !5707
  ret i32 %4, !dbg !5708
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5709 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5711, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata i32 %1, metadata !5712, metadata !DIExpression()), !dbg !5713
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !5714
  %4 = sub i32 %1, %3, !dbg !5715
  ret i32 %4, !dbg !5716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !5717 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5721, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.value(metadata i32 %1, metadata !5722, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.value(metadata i1 %2, metadata !5723, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5726
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5727
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5724, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5725, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5726
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5728
  %6 = bitcast i8* %5 to i16*, !dbg !5728
  %7 = load i16, i16* %6, align 2, !dbg !5728
  %8 = and i16 %7, -2, !dbg !5732
  %9 = zext i1 %2 to i16, !dbg !5732
  %10 = or i16 %8, %9, !dbg !5732
  store i16 %10, i16* %6, align 2, !dbg !5728
  ret void, !dbg !5733
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5734 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5738, metadata !DIExpression()), !dbg !5740
  call void @llvm.dbg.value(metadata i32 %1, metadata !5739, metadata !DIExpression()), !dbg !5740
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5741
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5743
  br i1 %4, label %7, label %5, !dbg !5744

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5745
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5747
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !5748
  br label %7, !dbg !5749

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5750
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !5752
  br i1 %9, label %13, label %10, !dbg !5753

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !5754
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5756
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !5757
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5758
  call void @llvm.dbg.value(metadata i32 %12, metadata !5739, metadata !DIExpression()), !dbg !5740
  br label %13, !dbg !5759

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5739, metadata !DIExpression()), !dbg !5740
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !5760
  ret void, !dbg !5761
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5762 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5764, metadata !DIExpression()), !dbg !5769
  call void @llvm.dbg.value(metadata i32 %1, metadata !5765, metadata !DIExpression()), !dbg !5769
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5770, !range !5771
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5772
  call void @llvm.dbg.value(metadata i32 %4, metadata !5766, metadata !DIExpression()), !dbg !5773
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !5774
  ret void, !dbg !5775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #11 !dbg !5776 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5780, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i32 %1, metadata !5781, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i32 %2, metadata !5782, metadata !DIExpression()), !dbg !5785
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5786
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5787
  %6 = add i32 %5, %4, !dbg !5788
  call void @llvm.dbg.value(metadata i32 %6, metadata !5783, metadata !DIExpression()), !dbg !5785
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !5789
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5790
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !5791
  ret void, !dbg !5792
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5793 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5795, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.value(metadata i32 %1, metadata !5796, metadata !DIExpression()), !dbg !5800
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5801, !range !5771
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5802
  call void @llvm.dbg.value(metadata i32 %4, metadata !5797, metadata !DIExpression()), !dbg !5803
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !5804
  ret void, !dbg !5805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5806 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5810, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i32 %1, metadata !5811, metadata !DIExpression()), !dbg !5812
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !5813
  %4 = lshr i32 %3, 1, !dbg !5814
  ret i32 %4, !dbg !5815
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #12 !dbg !5816 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5820, metadata !DIExpression()), !dbg !5823
  call void @llvm.dbg.value(metadata i32 %1, metadata !5821, metadata !DIExpression()), !dbg !5823
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !5824
  %4 = add i32 %1, 1, !dbg !5825
  %5 = sub i32 %4, %3, !dbg !5826
  call void @llvm.dbg.value(metadata i32 %5, metadata !5822, metadata !DIExpression()), !dbg !5823
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5827, !range !5828
  %7 = sub nsw i32 31, %6, !dbg !5829
  ret i32 %7, !dbg !5830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #11 !dbg !5831 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5835, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.value(metadata i32 %1, metadata !5836, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.value(metadata i32 %2, metadata !5837, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5838, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5844
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5845
  %5 = load i32, i32* %4, align 4, !dbg !5845
  %6 = icmp eq i32 %5, 0, !dbg !5846
  br i1 %6, label %7, label %12, !dbg !5847

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5848
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5850
  %10 = load i32, i32* %9, align 4, !dbg !5851
  %11 = or i32 %10, %8, !dbg !5851
  store i32 %11, i32* %9, align 4, !dbg !5851
  store i32 %1, i32* %4, align 4, !dbg !5852
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5853
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5854
  br label %14, !dbg !5855

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5840, metadata !DIExpression()), !dbg !5856
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !5857, !range !5858
  call void @llvm.dbg.value(metadata i32 %13, metadata !5843, metadata !DIExpression()), !dbg !5856
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !5859
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !5860
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !5861
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !5862
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5864 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5866, metadata !DIExpression()), !dbg !5869
  call void @llvm.dbg.value(metadata i32 %1, metadata !5867, metadata !DIExpression()), !dbg !5869
  call void @llvm.dbg.value(metadata i32 %2, metadata !5868, metadata !DIExpression()), !dbg !5869
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !5870
  ret void, !dbg !5871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5872 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5874, metadata !DIExpression()), !dbg !5877
  call void @llvm.dbg.value(metadata i32 %1, metadata !5875, metadata !DIExpression()), !dbg !5877
  call void @llvm.dbg.value(metadata i32 %2, metadata !5876, metadata !DIExpression()), !dbg !5877
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !5878
  ret void, !dbg !5879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !5880 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5882, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata i32 %1, metadata !5883, metadata !DIExpression()), !dbg !5884
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !5885
  ret i32 %3, !dbg !5886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5887 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5891, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata i32 %1, metadata !5892, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata i32 %2, metadata !5893, metadata !DIExpression()), !dbg !5896
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5897
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5894, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5895, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5896
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5895, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5896
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5898
  call void @llvm.dbg.value(metadata i8* %5, metadata !5895, metadata !DIExpression()), !dbg !5896
  %6 = bitcast i8* %5 to i16*, !dbg !5899
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5902
  %8 = load i16, i16* %7, align 2, !dbg !5902
  %9 = zext i16 %8 to i32, !dbg !5902
  ret i32 %9, !dbg !5903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #6 !dbg !5904 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5908, metadata !DIExpression()), !dbg !5909
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5910
  ret %struct.chunk_unit_t* %2, !dbg !5911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #9 !dbg !5912 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5916, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata i32 %1, metadata !5917, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata i32 %2, metadata !5918, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata i32 %3, metadata !5919, metadata !DIExpression()), !dbg !5922
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5923
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5920, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5921, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5922
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5924
  call void @llvm.dbg.value(metadata i8* %6, metadata !5921, metadata !DIExpression()), !dbg !5922
  %7 = trunc i32 %3 to i16, !dbg !5925
  %8 = bitcast i8* %6 to i16*, !dbg !5928
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5929
  store i16 %7, i16* %9, align 2, !dbg !5930
  ret void, !dbg !5931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #6 !dbg !5932 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5936, metadata !DIExpression()), !dbg !5937
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !5938
  ret i32 %2, !dbg !5939
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !5940 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5944, metadata !DIExpression()), !dbg !5946
  call void @llvm.dbg.value(metadata i32 %1, metadata !5945, metadata !DIExpression()), !dbg !5946
  %3 = add i32 %1, 4, !dbg !5947
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !5948
  ret i32 %4, !dbg !5949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #6 !dbg !5950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5954, metadata !DIExpression()), !dbg !5955
  %2 = add i32 %0, 7, !dbg !5956
  %3 = lshr i32 %2, 3, !dbg !5957
  ret i32 %3, !dbg !5958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5959 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5963, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i32 %1, metadata !5964, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i32 %2, metadata !5965, metadata !DIExpression()), !dbg !5966
  %4 = shl i32 %2, 1, !dbg !5967
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !5968
  ret void, !dbg !5969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5970 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5972, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.value(metadata i32 %1, metadata !5973, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.value(metadata i32 %2, metadata !5974, metadata !DIExpression()), !dbg !5975
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !5976
  ret void, !dbg !5977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #11 !dbg !5978 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5980, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.value(metadata i32 %1, metadata !5981, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.value(metadata i32 %2, metadata !5982, metadata !DIExpression()), !dbg !5988
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5989
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !5983, metadata !DIExpression()), !dbg !5988
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5990
  %6 = icmp eq i32 %5, %1, !dbg !5991
  br i1 %6, label %7, label %14, !dbg !5992

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5993
  %9 = xor i32 %8, -1, !dbg !5995
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5996
  %11 = load i32, i32* %10, align 4, !dbg !5997
  %12 = and i32 %11, %9, !dbg !5997
  store i32 %12, i32* %10, align 4, !dbg !5997
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5998
  store i32 0, i32* %13, align 4, !dbg !5999
  br label %17, !dbg !6000

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !6001
  call void @llvm.dbg.value(metadata i32 %15, metadata !5984, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i32 %5, metadata !5987, metadata !DIExpression()), !dbg !6002
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !6003
  store i32 %5, i32* %16, align 4, !dbg !6004
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !6005
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !6006
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !6007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !6008 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6010, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i32 %1, metadata !6011, metadata !DIExpression()), !dbg !6012
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !6013
  ret i32 %3, !dbg !6014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !6015 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !6019, metadata !DIExpression()), !dbg !6026
  call void @llvm.dbg.value(metadata i8* %1, metadata !6020, metadata !DIExpression()), !dbg !6026
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6027
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !6027
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !6021, metadata !DIExpression()), !dbg !6026
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !6028
  call void @llvm.dbg.value(metadata i32 %5, metadata !6022, metadata !DIExpression()), !dbg !6026
  %6 = ptrtoint i8* %1 to i32, !dbg !6029
  call void @llvm.dbg.value(metadata i32 %6, metadata !6023, metadata !DIExpression()), !dbg !6026
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !6030
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !6030
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !6031
  call void @llvm.dbg.value(metadata i32 %9, metadata !6024, metadata !DIExpression()), !dbg !6026
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !6032
  %11 = shl i32 %10, 3, !dbg !6033
  call void @llvm.dbg.value(metadata i32 %11, metadata !6025, metadata !DIExpression()), !dbg !6026
  %12 = sub i32 %9, %6, !dbg !6034
  %13 = add i32 %12, %11, !dbg !6035
  ret i32 %13, !dbg !6036
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #14 !dbg !6037 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !6041, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i32 %1, metadata !6042, metadata !DIExpression()), !dbg !6047
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6048
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !6048
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !6043, metadata !DIExpression()), !dbg !6047
  %5 = icmp eq i32 %1, 0, !dbg !6049
  br i1 %5, label %19, label %6, !dbg !6051

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !6052
  br i1 %7, label %19, label %8, !dbg !6053

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !6054, !range !5659
  call void @llvm.dbg.value(metadata i32 %9, metadata !6045, metadata !DIExpression()), !dbg !6047
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !6055
  call void @llvm.dbg.value(metadata i32 %10, metadata !6046, metadata !DIExpression()), !dbg !6047
  %11 = icmp eq i32 %10, 0, !dbg !6056
  br i1 %11, label %19, label %12, !dbg !6058

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !6059
  %14 = icmp ugt i32 %13, %9, !dbg !6061
  br i1 %14, label %15, label %17, !dbg !6062

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !6063
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !6065
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !6066
  br label %17, !dbg !6067

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !6068
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !6069
  call void @llvm.dbg.value(metadata i8* %18, metadata !6044, metadata !DIExpression()), !dbg !6047
  br label %19, !dbg !6070

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !6047
  ret i8* %20, !dbg !6071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !6072 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6076, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i32 %1, metadata !6077, metadata !DIExpression()), !dbg !6078
  %3 = lshr i32 %1, 3, !dbg !6079
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !6080
  %5 = load i32, i32* %4, align 4, !dbg !6080
  %6 = icmp uge i32 %3, %5, !dbg !6081
  ret i1 %6, !dbg !6082
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6083 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6087, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.value(metadata i32 %1, metadata !6088, metadata !DIExpression()), !dbg !6102
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !6103
  call void @llvm.dbg.value(metadata i32 %3, metadata !6089, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !6090, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !6102
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !6104
  %5 = load i32, i32* %4, align 4, !dbg !6104
  %6 = icmp eq i32 %5, 0, !dbg !6105
  br i1 %6, label %19, label %7, !dbg !6106

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !6107
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !6108
  call void @llvm.dbg.value(metadata i32 %9, metadata !6094, metadata !DIExpression()), !dbg !6108
  call void @llvm.dbg.value(metadata i32 %8, metadata !6095, metadata !DIExpression()), !dbg !6109
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !6110
  %11 = icmp ult i32 %10, %1, !dbg !6112
  br i1 %11, label %13, label %12, !dbg !6113

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !6114
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !6116
  store i32 %14, i32* %4, align 4, !dbg !6117
  %15 = add nsw i32 %9, -1, !dbg !6118
  call void @llvm.dbg.value(metadata i32 %15, metadata !6094, metadata !DIExpression()), !dbg !6108
  %16 = icmp eq i32 %15, 0, !dbg !6118
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !6119
  br i1 %18, label %19, label %7, !dbg !6119, !llvm.loop !6120

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !6123
  %21 = load i32, i32* %20, align 4, !dbg !6123
  %22 = add nsw i32 %3, 1, !dbg !6124
  %23 = shl nsw i32 -1, %22, !dbg !6124
  %24 = and i32 %21, %23, !dbg !6125
  call void @llvm.dbg.value(metadata i32 %24, metadata !6097, metadata !DIExpression()), !dbg !6102
  %25 = icmp eq i32 %24, 0, !dbg !6126
  br i1 %25, label %30, label %26, !dbg !6127

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !6128, !range !5828
  call void @llvm.dbg.value(metadata i32 %27, metadata !6098, metadata !DIExpression()), !dbg !6129
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !6130
  %29 = load i32, i32* %28, align 4, !dbg !6130
  call void @llvm.dbg.value(metadata i32 %29, metadata !6101, metadata !DIExpression()), !dbg !6129
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !6131
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !6102
  ret i32 %31, !dbg !6132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #11 !dbg !6133 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6135, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i32 %1, metadata !6136, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i32 %2, metadata !6137, metadata !DIExpression()), !dbg !6141
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !6142
  call void @llvm.dbg.value(metadata i32 %4, metadata !6138, metadata !DIExpression()), !dbg !6141
  %5 = sub i32 %2, %1, !dbg !6143
  call void @llvm.dbg.value(metadata i32 %5, metadata !6139, metadata !DIExpression()), !dbg !6141
  %6 = sub i32 %4, %5, !dbg !6144
  call void @llvm.dbg.value(metadata i32 %6, metadata !6140, metadata !DIExpression()), !dbg !6141
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !6145
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !6146
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !6147
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !6148
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !6149
  ret void, !dbg !6150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !6151 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6155, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.value(metadata i32 %1, metadata !6156, metadata !DIExpression()), !dbg !6159
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !6160
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !6157, metadata !DIExpression()), !dbg !6159
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !6161
  call void @llvm.dbg.value(metadata i8* %4, metadata !6158, metadata !DIExpression()), !dbg !6159
  ret i8* %4, !dbg !6162
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6163 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !6167, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.value(metadata i32 %1, metadata !6168, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.value(metadata i32 %2, metadata !6169, metadata !DIExpression()), !dbg !6179
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6180
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !6180
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !6170, metadata !DIExpression()), !dbg !6179
  %6 = sub i32 0, %1, !dbg !6181
  %7 = and i32 %6, %1, !dbg !6182
  call void @llvm.dbg.value(metadata i32 %7, metadata !6172, metadata !DIExpression()), !dbg !6179
  %8 = icmp eq i32 %7, %1, !dbg !6183
  br i1 %8, label %13, label %9, !dbg !6185

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !6186
  call void @llvm.dbg.value(metadata i32 %10, metadata !6168, metadata !DIExpression()), !dbg !6179
  %11 = icmp ult i32 %7, 4, !dbg !6188
  %12 = select i1 %11, i32 %7, i32 4, !dbg !6188
  br label %17, !dbg !6188

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !6189
  br i1 %14, label %15, label %17, !dbg !6192

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !6193
  br label %61, !dbg !6195

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !6179
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !6196
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !6168, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.value(metadata i32 %19, metadata !6171, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.value(metadata i32 %18, metadata !6172, metadata !DIExpression()), !dbg !6179
  %21 = add i32 %20, -1, !dbg !6197
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !6197, !range !5828
  %23 = icmp ult i32 %22, 2, !dbg !6197
  br i1 %23, label %25, label %24, !dbg !6200

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 324) #26, !dbg !6201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.32, i32 0, i32 0)) #26, !dbg !6201
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 324) #26, !dbg !6201
  unreachable, !dbg !6201

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !6203
  br i1 %26, label %61, label %27, !dbg !6205

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !6206
  br i1 %28, label %61, label %29, !dbg !6207

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !6208
  %31 = add i32 %30, %20, !dbg !6209
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #27, !dbg !6210, !range !5659
  call void @llvm.dbg.value(metadata i32 %32, metadata !6173, metadata !DIExpression()), !dbg !6179
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #27, !dbg !6211
  call void @llvm.dbg.value(metadata i32 %33, metadata !6174, metadata !DIExpression()), !dbg !6179
  %34 = icmp eq i32 %33, 0, !dbg !6212
  br i1 %34, label %61, label %35, !dbg !6214

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #27, !dbg !6215
  call void @llvm.dbg.value(metadata i8* %36, metadata !6175, metadata !DIExpression()), !dbg !6179
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !6216
  %38 = ptrtoint i8* %37 to i32, !dbg !6216
  %39 = add i32 %21, %38, !dbg !6216
  %40 = sub i32 0, %20, !dbg !6216
  %41 = and i32 %39, %40, !dbg !6216
  %42 = inttoptr i32 %41 to i8*, !dbg !6217
  %43 = sub i32 0, %18, !dbg !6218
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !6218
  call void @llvm.dbg.value(metadata i8* %44, metadata !6175, metadata !DIExpression()), !dbg !6179
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !6219
  %46 = ptrtoint i8* %45 to i32, !dbg !6219
  %47 = add i32 %46, 7, !dbg !6219
  %48 = and i32 %47, -8, !dbg !6219
  call void @llvm.dbg.value(metadata i32 %48, metadata !6176, metadata !DIExpression()), !dbg !6179
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #27, !dbg !6220
  call void @llvm.dbg.value(metadata i32 %49, metadata !6177, metadata !DIExpression()), !dbg !6179
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !6221
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !6222
  %52 = sub i32 %48, %51, !dbg !6222
  %53 = ashr exact i32 %52, 3, !dbg !6222
  call void @llvm.dbg.value(metadata i32 %53, metadata !6178, metadata !DIExpression()), !dbg !6179
  %54 = icmp ugt i32 %49, %33, !dbg !6223
  br i1 %54, label %55, label %56, !dbg !6225

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #27, !dbg !6226
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #27, !dbg !6228
  br label %56, !dbg !6229

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !6230
  %58 = icmp ugt i32 %57, %53, !dbg !6232
  br i1 %58, label %59, label %60, !dbg !6233

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #27, !dbg !6234
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #27, !dbg !6236
  br label %60, !dbg !6237

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #27, !dbg !6238
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !6179
  ret i8* %62, !dbg !6239
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !6240 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !6244, metadata !DIExpression()), !dbg !6263
  call void @llvm.dbg.value(metadata i8* %1, metadata !6245, metadata !DIExpression()), !dbg !6263
  call void @llvm.dbg.value(metadata i32 %2, metadata !6246, metadata !DIExpression()), !dbg !6263
  call void @llvm.dbg.value(metadata i32 %3, metadata !6247, metadata !DIExpression()), !dbg !6263
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6264
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !6264
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !6248, metadata !DIExpression()), !dbg !6263
  %7 = icmp eq i8* %1, null, !dbg !6265
  br i1 %7, label %8, label %10, !dbg !6267

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !6268
  br label %63, !dbg !6270

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !6271
  br i1 %11, label %12, label %13, !dbg !6273

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !6274
  br label %63, !dbg !6276

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !6277
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !6277, !range !5828
  %16 = icmp ult i32 %15, 2, !dbg !6277
  br i1 %16, label %18, label %17, !dbg !6280

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 393) #26, !dbg !6281
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.32, i32 0, i32 0)) #26, !dbg !6281
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 393) #26, !dbg !6281
  unreachable, !dbg !6281

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !6283
  br i1 %19, label %63, label %20, !dbg !6285

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !6286, !range !5659
  call void @llvm.dbg.value(metadata i32 %21, metadata !6249, metadata !DIExpression()), !dbg !6263
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !6287
  call void @llvm.dbg.value(metadata i32 %22, metadata !6250, metadata !DIExpression()), !dbg !6263
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !6288
  %24 = ptrtoint i8* %1 to i32, !dbg !6289
  %25 = ptrtoint i8* %23 to i32, !dbg !6289
  %26 = sub i32 %24, %25, !dbg !6289
  call void @llvm.dbg.value(metadata i32 %26, metadata !6251, metadata !DIExpression()), !dbg !6263
  %27 = add i32 %26, %3, !dbg !6290
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #27, !dbg !6291
  call void @llvm.dbg.value(metadata i32 %28, metadata !6252, metadata !DIExpression()), !dbg !6263
  %29 = icmp eq i32 %2, 0, !dbg !6292
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !6293
  br i1 %32, label %33, label %53, !dbg !6293

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !6294
  %35 = icmp eq i32 %28, %34, !dbg !6295
  br i1 %35, label %63, label %36, !dbg !6296

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !6297
  br i1 %37, label %38, label %40, !dbg !6298

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !6299
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #27, !dbg !6301
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #27, !dbg !6302
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #27, !dbg !6303
  br label %63, !dbg !6304

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !6305
  br i1 %41, label %53, label %42, !dbg !6306

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !6307
  %44 = add i32 %43, %34, !dbg !6308
  %45 = icmp ult i32 %44, %28, !dbg !6309
  br i1 %45, label %53, label %46, !dbg !6310

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !6311
  call void @llvm.dbg.value(metadata i32 %47, metadata !6253, metadata !DIExpression()), !dbg !6312
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !6313
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !6314
  %49 = icmp ult i32 %47, %48, !dbg !6316
  br i1 %49, label %50, label %52, !dbg !6317

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !6318
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #27, !dbg !6320
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #27, !dbg !6321
  br label %52, !dbg !6322

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #27, !dbg !6323
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #27, !dbg !6324
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !6325
  call void @llvm.dbg.value(metadata i8* %54, metadata !6259, metadata !DIExpression()), !dbg !6263
  %55 = icmp eq i8* %54, null, !dbg !6326
  br i1 %55, label %63, label %56, !dbg !6327

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !6328, !range !5771
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #27, !dbg !6329
  %59 = sub i32 %58, %26, !dbg !6330
  call void @llvm.dbg.value(metadata i32 %59, metadata !6260, metadata !DIExpression()), !dbg !6331
  %60 = icmp ult i32 %59, %3, !dbg !6332
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !6332
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #26, !dbg !6333
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !6334
  br label %63, !dbg !6335

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !6263
  ret i8* %64, !dbg !6336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !6337 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6341, metadata !DIExpression()), !dbg !6343
  call void @llvm.dbg.value(metadata i32 %1, metadata !6342, metadata !DIExpression()), !dbg !6343
  %3 = shl i32 %1, 3, !dbg !6344
  %4 = add i32 %3, -4, !dbg !6345
  ret i32 %4, !dbg !6346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6347 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !6351, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i8* %1, metadata !6352, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %2, metadata !6353, metadata !DIExpression()), !dbg !6362
  %4 = icmp ult i32 %2, 262144, !dbg !6363
  br i1 %4, label %6, label %5, !dbg !6368

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 491) #26, !dbg !6369
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.34, i32 0, i32 0)) #26, !dbg !6369
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 491) #26, !dbg !6369
  unreachable, !dbg !6369

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !6371
  br i1 %7, label %9, label %8, !dbg !6374

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.35, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 498) #26, !dbg !6375
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.36, i32 0, i32 0)) #26, !dbg !6375
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 498) #26, !dbg !6375
  unreachable, !dbg !6375

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !6377
  call void @llvm.dbg.value(metadata i32 %10, metadata !6353, metadata !DIExpression()), !dbg !6362
  %11 = ptrtoint i8* %1 to i32, !dbg !6378
  %12 = add i32 %11, 7, !dbg !6378
  %13 = and i32 %12, -8, !dbg !6378
  call void @llvm.dbg.value(metadata i32 %13, metadata !6354, metadata !DIExpression()), !dbg !6362
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !6379
  %15 = ptrtoint i8* %14 to i32, !dbg !6379
  %16 = and i32 %15, -8, !dbg !6379
  call void @llvm.dbg.value(metadata i32 %16, metadata !6355, metadata !DIExpression()), !dbg !6362
  %17 = sub i32 %16, %13, !dbg !6380
  %18 = lshr exact i32 %17, 3, !dbg !6381
  call void @llvm.dbg.value(metadata i32 %18, metadata !6356, metadata !DIExpression()), !dbg !6362
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #27, !dbg !6382
  %20 = icmp ugt i32 %18, %19, !dbg !6382
  br i1 %20, label %22, label %21, !dbg !6385

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 507) #26, !dbg !6386
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.36, i32 0, i32 0)) #26, !dbg !6386
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 507) #26, !dbg !6386
  unreachable, !dbg !6386

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !6388
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !6357, metadata !DIExpression()), !dbg !6362
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6389
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !6390
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !6391
  store i32 %18, i32* %25, align 8, !dbg !6392
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !6393
  store i32 0, i32* %26, align 4, !dbg !6394
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #27, !dbg !6395
  call void @llvm.dbg.value(metadata i32 %27, metadata !6358, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6362
  %28 = shl i32 %27, 2, !dbg !6396
  %29 = add i32 %28, 20, !dbg !6397
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #27, !dbg !6398
  call void @llvm.dbg.value(metadata i32 %30, metadata !6359, metadata !DIExpression()), !dbg !6362
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #27, !dbg !6399
  %32 = add i32 %31, %30, !dbg !6399
  %33 = icmp ugt i32 %32, %18, !dbg !6399
  br i1 %33, label %36, label %34, !dbg !6402

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !6360, metadata !DIExpression()), !dbg !6403
  %35 = icmp slt i32 %27, 0, !dbg !6404
  br i1 %35, label %37, label %39, !dbg !6406

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 524) #26, !dbg !6407
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.36, i32 0, i32 0)) #26, !dbg !6407
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 524) #26, !dbg !6407
  unreachable, !dbg !6407

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #27, !dbg !6409
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #27, !dbg !6410
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !6411
  %38 = sub i32 %18, %30, !dbg !6412
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #27, !dbg !6413
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #27, !dbg !6414
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #27, !dbg !6415
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #27, !dbg !6416
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #27, !dbg !6417
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #27, !dbg !6418
  ret void, !dbg !6419

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !6360, metadata !DIExpression()), !dbg !6403
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !6420
  store i32 0, i32* %41, align 4, !dbg !6422
  %42 = add nuw i32 %40, 1, !dbg !6423
  call void @llvm.dbg.value(metadata i32 %42, metadata !6360, metadata !DIExpression()), !dbg !6403
  %43 = icmp eq i32 %40, %27, !dbg !6404
  br i1 %43, label %37, label %39, !dbg !6406, !llvm.loop !6424
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !6426 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !6439, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6436, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i8* %1, metadata !6437, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i8* %2, metadata !6438, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i32 %4, metadata !6440, metadata !DIExpression()), !dbg !6565
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !6566
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !6566
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !6441, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.value(metadata i32 0, metadata !6445, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i1 undef, metadata !6447, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6565
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !6568

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !6568

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !6569
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !6439, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i8* %30, metadata !6438, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i32 %29, metadata !6445, metadata !DIExpression()), !dbg !6565
  %31 = load i8, i8* %30, align 1, !dbg !6570
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !6568

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !6570
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6571
  call void @llvm.dbg.value(metadata i8* %34, metadata !6438, metadata !DIExpression()), !dbg !6565
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !6571
  call void @llvm.dbg.value(metadata i32 %35, metadata !6449, metadata !DIExpression()), !dbg !6572
  %36 = icmp slt i32 %35, 0, !dbg !6573
  %37 = add i32 %29, 1, !dbg !6571
  call void @llvm.dbg.value(metadata i32 undef, metadata !6445, metadata !DIExpression()), !dbg !6565
  br i1 %36, label %365, label %28, !llvm.loop !6575

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6577
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !6454, metadata !DIExpression()), !dbg !6578
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6578
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !6497, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !6500, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i8* %30, metadata !6503, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i32 -1, metadata !6504, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i32 -1, metadata !6505, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i8* null, metadata !6506, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i8* %14, metadata !6507, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i8 0, metadata !6508, metadata !DIExpression()), !dbg !6579
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !6580
  call void @llvm.dbg.value(metadata i8* %39, metadata !6438, metadata !DIExpression()), !dbg !6565
  %40 = load i24, i24* %15, align 8, !dbg !6581
  %41 = and i24 %40, 256, !dbg !6581
  %42 = icmp eq i24 %41, 0, !dbg !6581
  br i1 %42, label %51, label %43, !dbg !6583

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6584
  call void @llvm.dbg.value(metadata i8* %44, metadata !6439, metadata !DIExpression()), !dbg !6565
  %45 = bitcast i8* %27 to i32*, !dbg !6584
  %46 = load i32, i32* %45, align 4, !dbg !6584
  call void @llvm.dbg.value(metadata i32 %46, metadata !6504, metadata !DIExpression()), !dbg !6579
  %47 = icmp slt i32 %46, 0, !dbg !6586
  br i1 %47, label %48, label %56, !dbg !6588

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6589
  store i24 %49, i24* %15, align 8, !dbg !6589
  %50 = sub nsw i32 0, %46, !dbg !6591
  call void @llvm.dbg.value(metadata i32 %50, metadata !6504, metadata !DIExpression()), !dbg !6579
  br label %56, !dbg !6592

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6593
  %53 = icmp eq i24 %52, 0, !dbg !6593
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6595
  br label %56, !dbg !6595

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6596
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6579
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !6439, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i32 %58, metadata !6504, metadata !DIExpression()), !dbg !6579
  %60 = and i24 %57, 1024, !dbg !6596
  %61 = icmp eq i24 %60, 0, !dbg !6596
  br i1 %61, label %69, label %62, !dbg !6597

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6598
  call void @llvm.dbg.value(metadata i8* %63, metadata !6439, metadata !DIExpression()), !dbg !6565
  %64 = bitcast i8* %59 to i32*, !dbg !6598
  %65 = load i32, i32* %64, align 4, !dbg !6598
  call void @llvm.dbg.value(metadata i32 %65, metadata !6509, metadata !DIExpression()), !dbg !6599
  %66 = icmp slt i32 %65, 0, !dbg !6600
  br i1 %66, label %67, label %74, !dbg !6602

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6603
  store i24 %68, i24* %15, align 8, !dbg !6603
  br label %74, !dbg !6605

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6606
  %71 = icmp eq i24 %70, 0, !dbg !6606
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6608
  br label %74, !dbg !6608

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6609
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6579
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6579
  call void @llvm.dbg.value(metadata i8* %77, metadata !6439, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i32 %76, metadata !6505, metadata !DIExpression()), !dbg !6579
  store i32 0, i32* %16, align 4, !dbg !6610
  store i32 0, i32* %17, align 8, !dbg !6611
  %78 = lshr i24 %75, 16, !dbg !6609
  call void @llvm.dbg.value(metadata i24 %78, metadata !6512, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6579
  %79 = lshr i24 %75, 11, !dbg !6612
  %80 = and i24 %79, 15, !dbg !6612
  %81 = zext i24 %80 to i32, !dbg !6612
  call void @llvm.dbg.value(metadata i32 %81, metadata !6513, metadata !DIExpression()), !dbg !6579
  %82 = trunc i24 %78 to i3, !dbg !6613
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6613

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6614

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6617
  call void @llvm.dbg.value(metadata i8* %85, metadata !6439, metadata !DIExpression()), !dbg !6565
  %86 = bitcast i8* %77 to i32*, !dbg !6617
  %87 = load i32, i32* %86, align 4, !dbg !6617
  %88 = sext i32 %87 to i64, !dbg !6617
  store i64 %88, i64* %20, align 8, !dbg !6619
  br label %115, !dbg !6620

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6621
  call void @llvm.dbg.value(metadata i8* %90, metadata !6439, metadata !DIExpression()), !dbg !6565
  %91 = bitcast i8* %77 to i32*, !dbg !6621
  %92 = load i32, i32* %91, align 4, !dbg !6621
  %93 = sext i32 %92 to i64, !dbg !6621
  store i64 %93, i64* %20, align 8, !dbg !6624
  br label %115, !dbg !6625

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6626
  %96 = add i32 %95, 7, !dbg !6626
  %97 = and i32 %96, -8, !dbg !6626
  %98 = inttoptr i32 %97 to i8*, !dbg !6626
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6626
  call void @llvm.dbg.value(metadata i8* %99, metadata !6439, metadata !DIExpression()), !dbg !6565
  %100 = inttoptr i32 %97 to i64*, !dbg !6626
  %101 = load i64, i64* %100, align 8, !dbg !6626
  store i64 %101, i64* %20, align 8, !dbg !6627
  br label %115, !dbg !6628

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6629
  %104 = add i32 %103, 7, !dbg !6629
  %105 = and i32 %104, -8, !dbg !6629
  %106 = inttoptr i32 %105 to i8*, !dbg !6629
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6629
  call void @llvm.dbg.value(metadata i8* %107, metadata !6439, metadata !DIExpression()), !dbg !6565
  %108 = inttoptr i32 %105 to i64*, !dbg !6629
  %109 = load i64, i64* %108, align 8, !dbg !6629
  store i64 %109, i64* %20, align 8, !dbg !6630
  br label %115, !dbg !6631

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6632
  call void @llvm.dbg.value(metadata i8* %111, metadata !6439, metadata !DIExpression()), !dbg !6565
  %112 = bitcast i8* %77 to i32*, !dbg !6632
  %113 = load i32, i32* %112, align 4, !dbg !6632
  %114 = sext i32 %113 to i64, !dbg !6633
  store i64 %114, i64* %20, align 8, !dbg !6634
  br label %115, !dbg !6635

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6636
  call void @llvm.dbg.value(metadata i8* %117, metadata !6439, metadata !DIExpression()), !dbg !6565
  %118 = trunc i24 %79 to i4, !dbg !6637
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6637

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6638
  %121 = ashr exact i64 %120, 56, !dbg !6638
  store i64 %121, i64* %20, align 8, !dbg !6641
  br label %177, !dbg !6642

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6643
  %124 = ashr exact i64 %123, 48, !dbg !6643
  store i64 %124, i64* %20, align 8, !dbg !6646
  br label %177, !dbg !6647

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6648

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6651
  call void @llvm.dbg.value(metadata i8* %127, metadata !6439, metadata !DIExpression()), !dbg !6565
  %128 = bitcast i8* %77 to i32*, !dbg !6651
  %129 = load i32, i32* %128, align 4, !dbg !6651
  %130 = zext i32 %129 to i64, !dbg !6651
  store i64 %130, i64* %20, align 8, !dbg !6653
  br label %157, !dbg !6654

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6655
  call void @llvm.dbg.value(metadata i8* %132, metadata !6439, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i8* %132, metadata !6439, metadata !DIExpression()), !dbg !6565
  %133 = bitcast i8* %77 to i32*, !dbg !6655
  %134 = load i32, i32* %133, align 4, !dbg !6655
  %135 = zext i32 %134 to i64, !dbg !6655
  store i64 %135, i64* %20, align 8, !dbg !6655
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6657
  %138 = add i32 %137, 7, !dbg !6657
  %139 = and i32 %138, -8, !dbg !6657
  %140 = inttoptr i32 %139 to i8*, !dbg !6657
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6657
  call void @llvm.dbg.value(metadata i8* %141, metadata !6439, metadata !DIExpression()), !dbg !6565
  %142 = inttoptr i32 %139 to i64*, !dbg !6657
  %143 = load i64, i64* %142, align 8, !dbg !6657
  store i64 %143, i64* %20, align 8, !dbg !6658
  br label %157, !dbg !6659

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6660
  %146 = add i32 %145, 7, !dbg !6660
  %147 = and i32 %146, -8, !dbg !6660
  %148 = inttoptr i32 %147 to i8*, !dbg !6660
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6660
  call void @llvm.dbg.value(metadata i8* %149, metadata !6439, metadata !DIExpression()), !dbg !6565
  %150 = inttoptr i32 %147 to i64*, !dbg !6660
  %151 = load i64, i64* %150, align 8, !dbg !6660
  store i64 %151, i64* %20, align 8, !dbg !6661
  br label %157, !dbg !6662

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6663
  call void @llvm.dbg.value(metadata i8* %153, metadata !6439, metadata !DIExpression()), !dbg !6565
  %154 = bitcast i8* %77 to i32*, !dbg !6663
  %155 = load i32, i32* %154, align 4, !dbg !6663
  %156 = zext i32 %155 to i64, !dbg !6664
  store i64 %156, i64* %20, align 8, !dbg !6665
  br label %157, !dbg !6666

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6667
  call void @llvm.dbg.value(metadata i8* %159, metadata !6439, metadata !DIExpression()), !dbg !6565
  %160 = trunc i24 %79 to i4, !dbg !6668
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6668

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6669
  store i64 %162, i64* %20, align 8, !dbg !6672
  br label %177, !dbg !6673

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6674
  store i64 %164, i64* %20, align 8, !dbg !6677
  br label %177, !dbg !6678

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6679
  %167 = add i32 %166, 7, !dbg !6679
  %168 = and i32 %167, -8, !dbg !6679
  %169 = inttoptr i32 %168 to i8*, !dbg !6679
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6679
  call void @llvm.dbg.value(metadata i8* %170, metadata !6439, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i8* %170, metadata !6439, metadata !DIExpression()), !dbg !6565
  %171 = inttoptr i32 %168 to double*, !dbg !6679
  %172 = load double, double* %171, align 8, !dbg !6679
  store double %172, double* %19, align 8, !dbg !6679
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6683
  call void @llvm.dbg.value(metadata i8* %174, metadata !6439, metadata !DIExpression()), !dbg !6565
  %175 = bitcast i8* %77 to i8**, !dbg !6683
  %176 = load i8*, i8** %175, align 4, !dbg !6683
  store i8* %176, i8** %18, align 8, !dbg !6686
  br label %177, !dbg !6687

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6579
  call void @llvm.dbg.value(metadata i8* %178, metadata !6439, metadata !DIExpression()), !dbg !6565
  %179 = and i24 %75, 3, !dbg !6688
  %180 = icmp eq i24 %179, 0, !dbg !6688
  br i1 %180, label %185, label %181, !dbg !6688

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !6689
  call void @llvm.dbg.value(metadata i32 %182, metadata !6514, metadata !DIExpression()), !dbg !6690
  %183 = icmp slt i32 %182, 0, !dbg !6691
  %184 = add i32 %182, %29, !dbg !6689
  call void @llvm.dbg.value(metadata i32 undef, metadata !6445, metadata !DIExpression()), !dbg !6565
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6693
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6694

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !6695
  call void @llvm.dbg.value(metadata i32 %188, metadata !6518, metadata !DIExpression()), !dbg !6696
  %189 = icmp slt i32 %188, 0, !dbg !6697
  %190 = add i32 %29, 1, !dbg !6695
  call void @llvm.dbg.value(metadata i32 undef, metadata !6445, metadata !DIExpression()), !dbg !6565
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6699
  call void @llvm.dbg.value(metadata i8* %192, metadata !6506, metadata !DIExpression()), !dbg !6579
  %193 = icmp sgt i32 %76, -1, !dbg !6700
  br i1 %193, label %194, label %196, !dbg !6702

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !6703
  call void @llvm.dbg.value(metadata i32 %195, metadata !6521, metadata !DIExpression()), !dbg !6705
  br label %241, !dbg !6706

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !6707
  call void @llvm.dbg.value(metadata i32 %197, metadata !6521, metadata !DIExpression()), !dbg !6705
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !6506, metadata !DIExpression()), !dbg !6579
  %199 = load i64, i64* %20, align 8, !dbg !6709
  %200 = trunc i64 %199 to i8, !dbg !6710
  store i8 %200, i8* %10, align 1, !dbg !6711
  call void @llvm.dbg.value(metadata i8* %23, metadata !6507, metadata !DIExpression()), !dbg !6579
  br label %245, !dbg !6712

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6713
  %203 = icmp eq i24 %202, 0, !dbg !6713
  %204 = trunc i24 %75 to i8, !dbg !6715
  %205 = shl i8 %204, 1, !dbg !6715
  %206 = and i8 %205, 32, !dbg !6715
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6715
  call void @llvm.dbg.value(metadata i8 %207, metadata !6508, metadata !DIExpression()), !dbg !6579
  %208 = load i64, i64* %20, align 8, !dbg !6716
  call void @llvm.dbg.value(metadata i64 %208, metadata !6446, metadata !DIExpression()), !dbg !6565
  %209 = icmp slt i64 %208, 0, !dbg !6717
  br i1 %209, label %210, label %212, !dbg !6719

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !6508, metadata !DIExpression()), !dbg !6579
  %211 = sub nsw i64 0, %208, !dbg !6720
  store i64 %211, i64* %20, align 8, !dbg !6722
  br label %212, !dbg !6723

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6579
  call void @llvm.dbg.value(metadata i8 %213, metadata !6508, metadata !DIExpression()), !dbg !6579
  %214 = load i64, i64* %20, align 8, !dbg !6724
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !6725
  call void @llvm.dbg.value(metadata i8* %215, metadata !6506, metadata !DIExpression()), !dbg !6579
  br label %216, !dbg !6726

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6727
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6728
  call void @llvm.dbg.value(metadata i8* %218, metadata !6506, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i8 %217, metadata !6508, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.label(metadata !6564), !dbg !6729
  %219 = icmp sgt i32 %76, -1, !dbg !6730
  br i1 %219, label %222, label %220, !dbg !6731

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6732
  br label %245, !dbg !6731

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6734
  %224 = sub i32 %22, %223, !dbg !6734
  call void @llvm.dbg.value(metadata i32 %224, metadata !6523, metadata !DIExpression()), !dbg !6735
  %225 = load i24, i24* %15, align 8, !dbg !6736
  %226 = and i24 %225, -65, !dbg !6736
  store i24 %226, i24* %15, align 8, !dbg !6736
  %227 = icmp ugt i32 %76, %224, !dbg !6737
  br i1 %227, label %228, label %245, !dbg !6739

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6740
  store i32 %229, i32* %16, align 4, !dbg !6742
  br label %245, !dbg !6743

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6744
  %232 = icmp eq i8* %231, null, !dbg !6746
  br i1 %232, label %245, label %233, !dbg !6747

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6748
  %235 = zext i32 %234 to i64, !dbg !6748
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !6750
  call void @llvm.dbg.value(metadata i8* %236, metadata !6506, metadata !DIExpression()), !dbg !6579
  %237 = load i24, i24* %15, align 8, !dbg !6751
  %238 = or i24 %237, 1048576, !dbg !6751
  store i24 %238, i24* %15, align 8, !dbg !6751
  store i8 120, i8* %21, align 1, !dbg !6752
  br label %216, !dbg !6753

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6754
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !6757
  br label %363, !dbg !6758

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6759
  call void @llvm.dbg.value(metadata i32 %242, metadata !6521, metadata !DIExpression()), !dbg !6705
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6760
  call void @llvm.dbg.value(metadata i32 -1, metadata !6505, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i32 %29, metadata !6445, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i8* %192, metadata !6506, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i8* %243, metadata !6507, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i8 0, metadata !6508, metadata !DIExpression()), !dbg !6579
  %244 = icmp eq i8* %192, null, !dbg !6761
  br i1 %244, label %363, label %245, !dbg !6763, !llvm.loop !6575

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6732
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !6526, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6579
  call void @llvm.dbg.value(metadata i32 0, metadata !6527, metadata !DIExpression()), !dbg !6579
  %250 = zext i8 %249 to i32, !dbg !6764
  %251 = icmp eq i8 %249, 0, !dbg !6766
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !6526, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6579
  call void @llvm.dbg.value(metadata i32 undef, metadata !6526, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !6526, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6579
  call void @llvm.dbg.value(metadata i32 undef, metadata !6526, metadata !DIExpression()), !dbg !6579
  %252 = icmp sgt i32 %58, 0, !dbg !6767
  br i1 %252, label %253, label %302, !dbg !6768

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6732
  %255 = icmp eq i24 %254, 0, !dbg !6732
  %256 = ptrtoint i8* %248 to i32, !dbg !6769
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !6526, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6579
  %257 = ptrtoint i8* %247 to i32, !dbg !6769
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !6526, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6579
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !6526, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6579
  %258 = xor i1 %251, true, !dbg !6770
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6526, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6579
  %259 = sext i1 %258 to i32, !dbg !6770
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6526, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6579
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !6526, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6579
  %260 = lshr i24 %246, 19, !dbg !6771
  %261 = and i24 %260, 1, !dbg !6771
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6771
  %263 = zext i24 %262 to i32, !dbg !6771
  %264 = add i32 %257, %259, !dbg !6771
  %265 = add i32 %256, %263, !dbg !6771
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !6526, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6579
  %266 = and i24 %246, 4194304, !dbg !6772
  %267 = icmp eq i24 %266, 0, !dbg !6772
  %268 = load i32, i32* %16, align 4, !dbg !6774
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !6526, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6579
  call void @llvm.dbg.value(metadata i32 undef, metadata !6526, metadata !DIExpression()), !dbg !6579
  %269 = load i32, i32* %17, align 8, !dbg !6775
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6775
  call void @llvm.dbg.value(metadata i32 undef, metadata !6526, metadata !DIExpression()), !dbg !6579
  %271 = add i32 %264, %58, !dbg !6775
  %272 = add i32 %265, %268, !dbg !6775
  %273 = add i32 %272, %270, !dbg !6776
  %274 = sub i32 %271, %273, !dbg !6776
  call void @llvm.dbg.value(metadata i32 %274, metadata !6504, metadata !DIExpression()), !dbg !6579
  %275 = and i24 %246, 4, !dbg !6777
  %276 = icmp eq i24 %275, 0, !dbg !6777
  br i1 %276, label %277, label %302, !dbg !6778

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !6528, metadata !DIExpression()), !dbg !6779
  %278 = and i24 %246, 64, !dbg !6780
  %279 = icmp eq i24 %278, 0, !dbg !6780
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6781
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6781
  %282 = select i1 %279, i32 32, i32 48, !dbg !6781
  br i1 %280, label %287, label %283, !dbg !6781

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !6782
  call void @llvm.dbg.value(metadata i32 %284, metadata !6533, metadata !DIExpression()), !dbg !6783
  %285 = icmp slt i32 %284, 0, !dbg !6784
  %286 = add i32 %29, 1, !dbg !6782
  call void @llvm.dbg.value(metadata i32 undef, metadata !6445, metadata !DIExpression()), !dbg !6565
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6579
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !6569
  call void @llvm.dbg.value(metadata i32 %290, metadata !6445, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i8 undef, metadata !6528, metadata !DIExpression()), !dbg !6779
  call void @llvm.dbg.value(metadata i8 %288, metadata !6508, metadata !DIExpression()), !dbg !6579
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6786
  %292 = add i32 %291, -1, !dbg !6786
  br label %293, !dbg !6786

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6787
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !6569
  call void @llvm.dbg.value(metadata i32 %295, metadata !6445, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i32 %294, metadata !6504, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i32 %294, metadata !6504, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6579
  %296 = icmp sgt i32 %294, 0, !dbg !6788
  br i1 %296, label %297, label %302, !dbg !6786

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6789
  call void @llvm.dbg.value(metadata i32 %298, metadata !6504, metadata !DIExpression()), !dbg !6579
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !6790
  call void @llvm.dbg.value(metadata i32 %299, metadata !6539, metadata !DIExpression()), !dbg !6791
  %300 = icmp slt i32 %299, 0, !dbg !6792
  %301 = add i32 %295, 1, !dbg !6790
  call void @llvm.dbg.value(metadata i32 undef, metadata !6445, metadata !DIExpression()), !dbg !6565
  br i1 %300, label %361, label %293, !llvm.loop !6794

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6579
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6579
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !6569
  call void @llvm.dbg.value(metadata i32 %305, metadata !6445, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i32 %304, metadata !6504, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i8 %303, metadata !6508, metadata !DIExpression()), !dbg !6579
  %306 = icmp eq i8 %303, 0, !dbg !6796
  br i1 %306, label %312, label %307, !dbg !6797

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6798
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !6799
  call void @llvm.dbg.value(metadata i32 %309, metadata !6542, metadata !DIExpression()), !dbg !6800
  %310 = icmp slt i32 %309, 0, !dbg !6801
  %311 = add i32 %305, 1, !dbg !6799
  call void @llvm.dbg.value(metadata i32 undef, metadata !6445, metadata !DIExpression()), !dbg !6565
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !6569
  call void @llvm.dbg.value(metadata i32 %313, metadata !6445, metadata !DIExpression()), !dbg !6565
  %314 = lshr i24 %246, 20, !dbg !6803
  %315 = lshr i24 %246, 19, !dbg !6804
  %316 = or i24 %314, %315, !dbg !6805
  %317 = and i24 %316, 1, !dbg !6805
  %318 = icmp eq i24 %317, 0, !dbg !6805
  br i1 %318, label %323, label %319, !dbg !6806

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !6807
  call void @llvm.dbg.value(metadata i32 %320, metadata !6546, metadata !DIExpression()), !dbg !6808
  %321 = icmp slt i32 %320, 0, !dbg !6809
  %322 = add i32 %313, 1, !dbg !6807
  call void @llvm.dbg.value(metadata i32 undef, metadata !6445, metadata !DIExpression()), !dbg !6565
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !6569
  call void @llvm.dbg.value(metadata i32 %324, metadata !6445, metadata !DIExpression()), !dbg !6565
  %325 = and i24 %246, 1048576, !dbg !6811
  %326 = icmp eq i24 %325, 0, !dbg !6811
  br i1 %326, label %333, label %327, !dbg !6812

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6813
  %329 = zext i8 %328 to i32, !dbg !6813
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !6813
  call void @llvm.dbg.value(metadata i32 %330, metadata !6552, metadata !DIExpression()), !dbg !6814
  %331 = icmp slt i32 %330, 0, !dbg !6815
  %332 = add i32 %324, 1, !dbg !6813
  call void @llvm.dbg.value(metadata i32 undef, metadata !6445, metadata !DIExpression()), !dbg !6565
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !6569
  call void @llvm.dbg.value(metadata i32 %334, metadata !6445, metadata !DIExpression()), !dbg !6565
  %335 = load i32, i32* %16, align 4, !dbg !6817
  call void @llvm.dbg.value(metadata i32 %335, metadata !6527, metadata !DIExpression()), !dbg !6579
  br label %336, !dbg !6818

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6819
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !6569
  call void @llvm.dbg.value(metadata i32 %338, metadata !6445, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i32 %337, metadata !6527, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6579
  %339 = icmp sgt i32 %337, 0, !dbg !6820
  br i1 %339, label %340, label %345, !dbg !6818

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6821
  call void @llvm.dbg.value(metadata i32 %341, metadata !6527, metadata !DIExpression()), !dbg !6579
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !6822
  call void @llvm.dbg.value(metadata i32 %342, metadata !6556, metadata !DIExpression()), !dbg !6823
  %343 = icmp slt i32 %342, 0, !dbg !6824
  %344 = add i32 %338, 1, !dbg !6822
  call void @llvm.dbg.value(metadata i32 undef, metadata !6445, metadata !DIExpression()), !dbg !6565
  br i1 %343, label %361, label %336, !llvm.loop !6826

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !6828
  call void @llvm.dbg.value(metadata i32 %346, metadata !6559, metadata !DIExpression()), !dbg !6829
  %347 = icmp slt i32 %346, 0, !dbg !6830
  call void @llvm.dbg.value(metadata i32 undef, metadata !6445, metadata !DIExpression()), !dbg !6565
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6828
  call void @llvm.dbg.value(metadata i32 %349, metadata !6445, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i32 %304, metadata !6504, metadata !DIExpression()), !dbg !6579
  %350 = icmp sgt i32 %304, 0, !dbg !6832
  br i1 %350, label %351, label %363, !dbg !6833

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6833
  %353 = add i32 %352, %338, !dbg !6833
  br label %354, !dbg !6833

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6445, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata i32 %355, metadata !6504, metadata !DIExpression()), !dbg !6579
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !6834
  call void @llvm.dbg.value(metadata i32 %356, metadata !6561, metadata !DIExpression()), !dbg !6835
  %357 = icmp slt i32 %356, 0, !dbg !6836
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6838
  call void @llvm.dbg.value(metadata i32 undef, metadata !6445, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6565
  call void @llvm.dbg.value(metadata i32 %359, metadata !6504, metadata !DIExpression()), !dbg !6579
  %360 = icmp sgt i32 %355, 1, !dbg !6832
  br i1 %360, label %354, label %363, !dbg !6833, !llvm.loop !6839

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !6445, metadata !DIExpression()), !dbg !6565
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6576
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !6569
  call void @llvm.dbg.value(metadata i32 %364, metadata !6445, metadata !DIExpression()), !dbg !6565
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6576
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !6565
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !6841
  ret i32 %366, !dbg !6841
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6842 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6846, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.value(metadata i8* %1, metadata !6847, metadata !DIExpression()), !dbg !6848
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6849
  store i24 0, i24* %3, align 4, !dbg !6849
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6849
  store i8 0, i8* %4, align 1, !dbg !6849
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6849
  store i32 0, i32* %5, align 4, !dbg !6849
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6849
  store i32 0, i32* %6, align 4, !dbg !6849
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6850
  call void @llvm.dbg.value(metadata i8* %7, metadata !6847, metadata !DIExpression()), !dbg !6848
  %8 = load i8, i8* %7, align 1, !dbg !6851
  %9 = icmp eq i8 %8, 37, !dbg !6853
  br i1 %9, label %10, label %12, !dbg !6854

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6855
  call void @llvm.dbg.value(metadata i8* %11, metadata !6847, metadata !DIExpression()), !dbg !6848
  store i8 37, i8* %4, align 1, !dbg !6857
  br label %18, !dbg !6858

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !6859
  call void @llvm.dbg.value(metadata i8* %13, metadata !6847, metadata !DIExpression()), !dbg !6848
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !6860
  call void @llvm.dbg.value(metadata i8* %14, metadata !6847, metadata !DIExpression()), !dbg !6848
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !6861
  call void @llvm.dbg.value(metadata i8* %15, metadata !6847, metadata !DIExpression()), !dbg !6848
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !6862
  call void @llvm.dbg.value(metadata i8* %16, metadata !6847, metadata !DIExpression()), !dbg !6848
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !6863
  call void @llvm.dbg.value(metadata i8* %17, metadata !6847, metadata !DIExpression()), !dbg !6848
  br label %18, !dbg !6864

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6848
  ret i8* %19, !dbg !6865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6866 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6870, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i8* %1, metadata !6871, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i8* %2, metadata !6872, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i8* %3, metadata !6873, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i32 0, metadata !6874, metadata !DIExpression()), !dbg !6877
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6878

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6879
  call void @llvm.dbg.value(metadata i32 %9, metadata !6874, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i8* %8, metadata !6872, metadata !DIExpression()), !dbg !6877
  %10 = icmp ult i8* %8, %3, !dbg !6880
  br i1 %10, label %11, label %13, !dbg !6881

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6882
  br label %17, !dbg !6881

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6883

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6884
  %16 = icmp eq i8 %15, 0, !dbg !6883
  br i1 %16, label %24, label %17, !dbg !6878

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6882
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6885
  call void @llvm.dbg.value(metadata i8* %19, metadata !6872, metadata !DIExpression()), !dbg !6877
  %20 = zext i8 %18 to i32, !dbg !6886
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !6887
  call void @llvm.dbg.value(metadata i32 %21, metadata !6875, metadata !DIExpression()), !dbg !6888
  %22 = icmp slt i32 %21, 0, !dbg !6889
  %23 = add i32 %9, 1, !dbg !6891
  call void @llvm.dbg.value(metadata i32 undef, metadata !6874, metadata !DIExpression()), !dbg !6877
  br i1 %22, label %24, label %7, !llvm.loop !6892

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6877
  ret i32 %25, !dbg !6894
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !6895 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6899, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6900, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i8* %2, metadata !6901, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i8* %3, metadata !6902, metadata !DIExpression()), !dbg !6909
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6910
  %6 = load i8, i8* %5, align 1, !dbg !6910
  %7 = zext i8 %6 to i32, !dbg !6911
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !6912
  %9 = icmp eq i32 %8, 0, !dbg !6912
  call void @llvm.dbg.value(metadata i1 %9, metadata !6903, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6909
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !6913
  call void @llvm.dbg.value(metadata i32 %10, metadata !6904, metadata !DIExpression()), !dbg !6909
  %11 = ptrtoint i8* %3 to i32, !dbg !6914
  %12 = ptrtoint i8* %2 to i32, !dbg !6914
  %13 = sub i32 %11, %12, !dbg !6914
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6915
  call void @llvm.dbg.value(metadata i8* %14, metadata !6906, metadata !DIExpression()), !dbg !6909
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6916

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6909
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6899, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i8* %18, metadata !6906, metadata !DIExpression()), !dbg !6909
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6917
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6918
  call void @llvm.dbg.value(metadata i32 %25, metadata !6907, metadata !DIExpression()), !dbg !6919
  %26 = icmp ult i32 %25, 10, !dbg !6920
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6921
  %28 = add i32 %27, %25, !dbg !6919
  %29 = trunc i32 %28 to i8, !dbg !6921
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6922
  call void @llvm.dbg.value(metadata i8* %30, metadata !6906, metadata !DIExpression()), !dbg !6909
  store i8 %29, i8* %30, align 1, !dbg !6923
  call void @llvm.dbg.value(metadata i64 %22, metadata !6899, metadata !DIExpression()), !dbg !6909
  %31 = icmp uge i64 %19, %15, !dbg !6924
  %32 = icmp ugt i8* %30, %2, !dbg !6925
  %33 = and i1 %31, %32, !dbg !6925
  br i1 %33, label %17, label %34, !dbg !6926, !llvm.loop !6927

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6929
  %36 = load i24, i24* %35, align 4, !dbg !6929
  %37 = and i24 %36, 32, !dbg !6929
  %38 = icmp eq i24 %37, 0, !dbg !6929
  br i1 %38, label %44, label %39, !dbg !6931

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6932

40:                                               ; preds = %39
  br label %41, !dbg !6934

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6938
  store i24 %43, i24* %35, align 4, !dbg !6938
  br label %44, !dbg !6939

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !6940 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6946, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata i8* %1, metadata !6947, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata i32 %2, metadata !6948, metadata !DIExpression()), !dbg !6949
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6950
  %5 = load i24, i24* %4, align 4, !dbg !6950
  %6 = lshr i24 %5, 11, !dbg !6950
  %7 = and i24 %6, 15, !dbg !6950
  %8 = zext i24 %7 to i32, !dbg !6950
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6951

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6952
  store i32 %2, i32* %10, align 4, !dbg !6954
  br label %28, !dbg !6955

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6956
  store i8 %12, i8* %1, align 1, !dbg !6957
  br label %28, !dbg !6958

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6959
  %15 = bitcast i8* %1 to i16*, !dbg !6960
  store i16 %14, i16* %15, align 2, !dbg !6961
  br label %28, !dbg !6962

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6963
  store i32 %2, i32* %17, align 4, !dbg !6964
  br label %28, !dbg !6965

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6966
  %20 = bitcast i8* %1 to i64*, !dbg !6967
  store i64 %19, i64* %20, align 8, !dbg !6968
  br label %28, !dbg !6969

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6970
  %23 = bitcast i8* %1 to i64*, !dbg !6971
  store i64 %22, i64* %23, align 8, !dbg !6972
  br label %28, !dbg !6973

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6974
  store i32 %2, i32* %25, align 4, !dbg !6975
  br label %28, !dbg !6976

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6977
  store i32 %2, i32* %27, align 4, !dbg !6978
  br label %28, !dbg !6979

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6980
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #6 !dbg !6981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6984, metadata !DIExpression()), !dbg !6985
  %2 = add i32 %0, -65, !dbg !6986
  %3 = icmp ult i32 %2, 26, !dbg !6987
  %4 = zext i1 %3 to i32, !dbg !6987
  ret i32 %4, !dbg !6988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #6 !dbg !6989 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6993, metadata !DIExpression()), !dbg !6994
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6995

2:                                                ; preds = %1
  br label %4, !dbg !6996

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6998

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6999
  ret i32 %5, !dbg !7000
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !7001 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !7003, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i8* %1, metadata !7004, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i8 1, metadata !7005, metadata !DIExpression()), !dbg !7006
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !7007

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !7005, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i8* %5, metadata !7004, metadata !DIExpression()), !dbg !7006
  %6 = load i8, i8* %5, align 1, !dbg !7008
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !7010

7:                                                ; preds = %4
  br label %11, !dbg !7011

8:                                                ; preds = %4
  br label %11, !dbg !7013

9:                                                ; preds = %4
  br label %11, !dbg !7014

10:                                               ; preds = %4
  br label %11, !dbg !7015

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !7016
  %14 = or i24 %13, %12, !dbg !7016
  store i24 %14, i24* %3, align 4, !dbg !7016
  call void @llvm.dbg.value(metadata i8 poison, metadata !7005, metadata !DIExpression()), !dbg !7006
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !7004, metadata !DIExpression()), !dbg !7006
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !7005, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i8* %15, metadata !7004, metadata !DIExpression()), !dbg !7006
  %17 = load i24, i24* %3, align 4, !dbg !7017
  %18 = and i24 %17, 68, !dbg !7019
  %19 = icmp eq i24 %18, 68, !dbg !7019
  br i1 %19, label %20, label %22, !dbg !7019

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !7020
  store i24 %21, i24* %3, align 4, !dbg !7020
  br label %22, !dbg !7022

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !7023
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !7024 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !7026, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i8* %1, metadata !7027, metadata !DIExpression()), !dbg !7030
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !7031
  %5 = load i24, i24* %4, align 4, !dbg !7032
  %6 = or i24 %5, 128, !dbg !7032
  store i24 %6, i24* %4, align 4, !dbg !7032
  call void @llvm.dbg.value(metadata i8* %1, metadata !7027, metadata !DIExpression()), !dbg !7030
  %7 = load i8, i8* %1, align 1, !dbg !7033
  %8 = icmp eq i8 %7, 42, !dbg !7035
  br i1 %8, label %9, label %12, !dbg !7036

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !7037
  store i24 %10, i24* %4, align 4, !dbg !7037
  call void @llvm.dbg.value(metadata i8* %1, metadata !7027, metadata !DIExpression()), !dbg !7030
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7039
  call void @llvm.dbg.value(metadata i8* %11, metadata !7027, metadata !DIExpression()), !dbg !7030
  store i8* %11, i8** %3, align 4, !dbg !7039
  br label %29, !dbg !7040

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !7028, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i8** %3, metadata !7027, metadata !DIExpression(DW_OP_deref)), !dbg !7030
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !7041
  call void @llvm.dbg.value(metadata i32 %13, metadata !7029, metadata !DIExpression()), !dbg !7030
  %14 = load i8*, i8** %3, align 4, !dbg !7042
  call void @llvm.dbg.value(metadata i8* %14, metadata !7027, metadata !DIExpression()), !dbg !7030
  %15 = icmp eq i8* %14, %1, !dbg !7044
  br i1 %15, label %29, label %16, !dbg !7045

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !7046
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !7048
  store i32 %13, i32* %18, align 4, !dbg !7049
  %19 = lshr i32 %13, 31, !dbg !7050
  %20 = lshr i24 %17, 1, !dbg !7051
  %21 = and i24 %20, 1, !dbg !7051
  %22 = zext i24 %21 to i32, !dbg !7051
  %23 = or i32 %19, %22, !dbg !7051
  %24 = trunc i32 %23 to i24, !dbg !7051
  %25 = shl nuw nsw i24 %24, 1, !dbg !7051
  %26 = and i24 %17, -131, !dbg !7051
  %27 = or i24 %26, 128, !dbg !7051
  %28 = or i24 %25, %27, !dbg !7051
  store i24 %28, i24* %4, align 4, !dbg !7051
  br label %29, !dbg !7052

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !7030
  ret i8* %30, !dbg !7053
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !7054 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !7056, metadata !DIExpression()), !dbg !7059
  call void @llvm.dbg.value(metadata i8* %1, metadata !7057, metadata !DIExpression()), !dbg !7059
  %4 = load i8, i8* %1, align 1, !dbg !7060
  %5 = icmp eq i8 %4, 46, !dbg !7061
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !7062
  %7 = load i24, i24* %6, align 4, !dbg !7063
  %8 = select i1 %5, i24 512, i24 0, !dbg !7063
  %9 = and i24 %7, -513, !dbg !7063
  %10 = or i24 %9, %8, !dbg !7063
  store i24 %10, i24* %6, align 4, !dbg !7063
  br i1 %5, label %11, label %32, !dbg !7064

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !7057, metadata !DIExpression()), !dbg !7059
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7065
  call void @llvm.dbg.value(metadata i8* %12, metadata !7057, metadata !DIExpression()), !dbg !7059
  store i8* %12, i8** %3, align 4, !dbg !7065
  %13 = load i8, i8* %12, align 1, !dbg !7066
  %14 = icmp eq i8 %13, 42, !dbg !7068
  br i1 %14, label %15, label %18, !dbg !7069

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !7070
  store i24 %16, i24* %6, align 4, !dbg !7070
  call void @llvm.dbg.value(metadata i8* %12, metadata !7057, metadata !DIExpression()), !dbg !7059
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7072
  call void @llvm.dbg.value(metadata i8* %17, metadata !7057, metadata !DIExpression()), !dbg !7059
  store i8* %17, i8** %3, align 4, !dbg !7072
  br label %32, !dbg !7073

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !7057, metadata !DIExpression(DW_OP_deref)), !dbg !7059
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !7074
  call void @llvm.dbg.value(metadata i32 %19, metadata !7058, metadata !DIExpression()), !dbg !7059
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !7075
  store i32 %19, i32* %20, align 4, !dbg !7076
  %21 = lshr i32 %19, 31, !dbg !7077
  %22 = load i24, i24* %6, align 4, !dbg !7078
  %23 = lshr i24 %22, 1, !dbg !7078
  %24 = and i24 %23, 1, !dbg !7078
  %25 = zext i24 %24 to i32, !dbg !7078
  %26 = or i32 %21, %25, !dbg !7078
  %27 = trunc i32 %26 to i24, !dbg !7078
  %28 = shl nuw nsw i24 %27, 1, !dbg !7078
  %29 = and i24 %22, -3, !dbg !7078
  %30 = or i24 %28, %29, !dbg !7078
  store i24 %30, i24* %6, align 4, !dbg !7078
  %31 = load i8*, i8** %3, align 4, !dbg !7079
  call void @llvm.dbg.value(metadata i8* %31, metadata !7057, metadata !DIExpression()), !dbg !7059
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !7059
  ret i8* %33, !dbg !7080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !7081 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !7083, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata i8* %1, metadata !7084, metadata !DIExpression()), !dbg !7085
  %3 = load i8, i8* %1, align 1, !dbg !7086
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !7087

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7088
  call void @llvm.dbg.value(metadata i8* %5, metadata !7084, metadata !DIExpression()), !dbg !7085
  %6 = load i8, i8* %5, align 1, !dbg !7091
  %7 = icmp eq i8 %6, 104, !dbg !7092
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !7093
  %9 = load i24, i24* %8, align 4, !dbg !7093
  %10 = and i24 %9, -30721, !dbg !7093
  br i1 %7, label %11, label %14, !dbg !7094

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !7095
  store i24 %12, i24* %8, align 4, !dbg !7095
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7097
  call void @llvm.dbg.value(metadata i8* %13, metadata !7084, metadata !DIExpression()), !dbg !7085
  br label %56, !dbg !7098

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !7099
  store i24 %15, i24* %8, align 4, !dbg !7099
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7101
  call void @llvm.dbg.value(metadata i8* %17, metadata !7084, metadata !DIExpression()), !dbg !7085
  %18 = load i8, i8* %17, align 1, !dbg !7103
  %19 = icmp eq i8 %18, 108, !dbg !7104
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !7105
  %21 = load i24, i24* %20, align 4, !dbg !7105
  %22 = and i24 %21, -30721, !dbg !7105
  br i1 %19, label %23, label %26, !dbg !7106

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !7107
  store i24 %24, i24* %20, align 4, !dbg !7107
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7109
  call void @llvm.dbg.value(metadata i8* %25, metadata !7084, metadata !DIExpression()), !dbg !7085
  br label %56, !dbg !7110

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !7111
  store i24 %27, i24* %20, align 4, !dbg !7111
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !7113
  %30 = load i24, i24* %29, align 4, !dbg !7114
  %31 = and i24 %30, -30721, !dbg !7114
  %32 = or i24 %31, 10240, !dbg !7114
  store i24 %32, i24* %29, align 4, !dbg !7114
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7115
  call void @llvm.dbg.value(metadata i8* %33, metadata !7084, metadata !DIExpression()), !dbg !7085
  br label %56, !dbg !7116

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !7117
  %36 = load i24, i24* %35, align 4, !dbg !7118
  %37 = and i24 %36, -30721, !dbg !7118
  %38 = or i24 %37, 12288, !dbg !7118
  store i24 %38, i24* %35, align 4, !dbg !7118
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7119
  call void @llvm.dbg.value(metadata i8* %39, metadata !7084, metadata !DIExpression()), !dbg !7085
  br label %56, !dbg !7120

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !7121
  %42 = load i24, i24* %41, align 4, !dbg !7122
  %43 = and i24 %42, -30721, !dbg !7122
  %44 = or i24 %43, 14336, !dbg !7122
  store i24 %44, i24* %41, align 4, !dbg !7122
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7123
  call void @llvm.dbg.value(metadata i8* %45, metadata !7084, metadata !DIExpression()), !dbg !7085
  br label %56, !dbg !7124

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !7125
  %48 = load i24, i24* %47, align 4, !dbg !7126
  %49 = and i24 %48, -30723, !dbg !7126
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7127
  call void @llvm.dbg.value(metadata i8* %50, metadata !7084, metadata !DIExpression()), !dbg !7085
  %51 = or i24 %49, 16386, !dbg !7128
  store i24 %51, i24* %47, align 4, !dbg !7128
  br label %56, !dbg !7129

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !7130
  %54 = load i24, i24* %53, align 4, !dbg !7131
  %55 = and i24 %54, -30721, !dbg !7131
  store i24 %55, i24* %53, align 4, !dbg !7131
  br label %56, !dbg !7132

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !7084, metadata !DIExpression()), !dbg !7085
  ret i8* %57, !dbg !7133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !7134 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !7136, metadata !DIExpression()), !dbg !7141
  call void @llvm.dbg.value(metadata i8* %1, metadata !7137, metadata !DIExpression()), !dbg !7141
  call void @llvm.dbg.value(metadata i8 0, metadata !7138, metadata !DIExpression()), !dbg !7141
  call void @llvm.dbg.value(metadata i8* %1, metadata !7137, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7141
  %3 = load i8, i8* %1, align 1, !dbg !7142
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !7143
  store i8 %3, i8* %4, align 1, !dbg !7144
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !7145

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !7146

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !7147
  %9 = load i24, i24* %8, align 4, !dbg !7147
  %10 = and i24 %9, -458753, !dbg !7147
  %11 = or i24 %10, %7, !dbg !7147
  call void @llvm.dbg.label(metadata !7139), !dbg !7148
  %12 = and i24 %9, 30720, !dbg !7149
  %13 = icmp eq i24 %12, 16384, !dbg !7149
  %14 = zext i1 %13 to i24, !dbg !7151
  %15 = or i24 %11, %14, !dbg !7151
  %16 = icmp eq i8 %3, 99, !dbg !7152
  br i1 %16, label %17, label %43, !dbg !7154

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !7155
  %19 = icmp ne i24 %18, 0, !dbg !7155
  call void @llvm.dbg.value(metadata i1 %19, metadata !7138, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7141
  br label %43, !dbg !7157

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !7158
  %22 = load i24, i24* %21, align 4, !dbg !7159
  %23 = and i24 %22, -458753, !dbg !7159
  %24 = or i24 %23, 262144, !dbg !7159
  call void @llvm.dbg.value(metadata i8 1, metadata !7138, metadata !DIExpression()), !dbg !7141
  br label %43, !dbg !7160

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !7163
  %27 = load i24, i24* %26, align 4, !dbg !7164
  %28 = and i24 %27, -458753, !dbg !7164
  %29 = or i24 %28, 196608, !dbg !7164
  %30 = and i24 %27, 30720, !dbg !7165
  %31 = icmp eq i24 %30, 16384, !dbg !7165
  br label %43, !dbg !7167

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !7168
  %34 = load i24, i24* %33, align 4, !dbg !7169
  %35 = and i24 %34, -458753, !dbg !7169
  %36 = or i24 %35, 196608, !dbg !7169
  %37 = and i24 %34, 30720, !dbg !7170
  %38 = icmp ne i24 %37, 0, !dbg !7170
  br label %43, !dbg !7172

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !7173
  %41 = load i24, i24* %40, align 4, !dbg !7174
  %42 = or i24 %41, 1, !dbg !7174
  br label %43, !dbg !7175

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !7176
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !7177
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7178
  call void @llvm.dbg.value(metadata i8* %48, metadata !7137, metadata !DIExpression()), !dbg !7141
  call void @llvm.dbg.value(metadata i8 poison, metadata !7138, metadata !DIExpression()), !dbg !7141
  %49 = lshr i24 %44, 1, !dbg !7176
  %50 = and i24 %49, 1, !dbg !7176
  %51 = zext i24 %50 to i32, !dbg !7176
  %52 = or i32 %51, %47, !dbg !7176
  %53 = trunc i32 %52 to i24, !dbg !7176
  %54 = shl nuw nsw i24 %53, 1, !dbg !7176
  %55 = and i24 %44, -3, !dbg !7176
  %56 = or i24 %54, %55, !dbg !7176
  store i24 %56, i24* %46, align 4, !dbg !7176
  ret i8* %48, !dbg !7179
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !7180 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !7184, metadata !DIExpression()), !dbg !7187
  %2 = load i8*, i8** %0, align 4, !dbg !7188
  call void @llvm.dbg.value(metadata i8* %2, metadata !7185, metadata !DIExpression()), !dbg !7187
  call void @llvm.dbg.value(metadata i32 0, metadata !7186, metadata !DIExpression()), !dbg !7187
  %3 = load i8, i8* %2, align 1, !dbg !7189
  %4 = zext i8 %3 to i32, !dbg !7190
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !7191
  %6 = icmp eq i32 %5, 0, !dbg !7192
  br i1 %6, label %19, label %7, !dbg !7192

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7186, metadata !DIExpression()), !dbg !7187
  call void @llvm.dbg.value(metadata i8* %10, metadata !7185, metadata !DIExpression()), !dbg !7187
  %11 = mul i32 %9, 10, !dbg !7193
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7195
  call void @llvm.dbg.value(metadata i8* %12, metadata !7185, metadata !DIExpression()), !dbg !7187
  %13 = add i32 %11, -48, !dbg !7196
  %14 = add i32 %13, %8, !dbg !7197
  call void @llvm.dbg.value(metadata i32 %14, metadata !7186, metadata !DIExpression()), !dbg !7187
  %15 = load i8, i8* %12, align 1, !dbg !7189
  %16 = zext i8 %15 to i32, !dbg !7190
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !7191
  %18 = icmp eq i32 %17, 0, !dbg !7192
  br i1 %18, label %19, label %7, !dbg !7192, !llvm.loop !7198

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !7187
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !7187
  store i8* %20, i8** %0, align 4, !dbg !7200
  ret i32 %21, !dbg !7201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #6 !dbg !7202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7204, metadata !DIExpression()), !dbg !7205
  %2 = add i32 %0, -48, !dbg !7206
  %3 = icmp ult i32 %2, 10, !dbg !7207
  %4 = zext i1 %3 to i32, !dbg !7207
  ret i32 %4, !dbg !7208
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !7209 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7214, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.value(metadata i32 %1, metadata !7215, metadata !DIExpression()), !dbg !7216
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !7217, !srcloc !7219
  ret void, !dbg !7220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7221 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7223, metadata !DIExpression()), !dbg !7231
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7232
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7232
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7224, metadata !DIExpression()), !dbg !7233
  call void @llvm.va_start(i8* nonnull %3), !dbg !7234
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7235
  %5 = load i32, i32* %4, align 4, !dbg !7235
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7235
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !7235
  call void @llvm.va_end(i8* nonnull %3), !dbg !7236
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7237
  ret void, !dbg !7237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !7238 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !7240, !srcloc !7241
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !7242, !srcloc !7243
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !7244, !srcloc !7245
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !7246, !srcloc !7247
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !7248, !srcloc !7249
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !7250, !srcloc !7251
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !7252, !srcloc !7253
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !7254, !srcloc !7255
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !7256, !srcloc !7257
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !7258, !srcloc !7259
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !7260, !srcloc !7261
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !7262, !srcloc !7263
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !7264, !srcloc !7265
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !7266, !srcloc !7267
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !7268, !srcloc !7269
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !7270, !srcloc !7271
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !7272, !srcloc !7273
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !7274, !srcloc !7275
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !7276, !srcloc !7277
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !7278, !srcloc !7279
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !7280, !srcloc !7281
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !7282, !srcloc !7283
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !7284, !srcloc !7285
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !7286, !srcloc !7287
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !7288, !srcloc !7289
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !7290, !srcloc !7291
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !7292, !srcloc !7293
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #25, !dbg !7294, !srcloc !7295
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !7296, !srcloc !7297
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !7298, !srcloc !7299
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !7300, !srcloc !7301
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #25, !dbg !7302, !srcloc !7303
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !7304, !srcloc !7305
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #25, !dbg !7306, !srcloc !7307
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #25, !dbg !7308, !srcloc !7309
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #25, !dbg !7310, !srcloc !7311
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !7312, !srcloc !7313
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #25, !dbg !7314, !srcloc !7315
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #25, !dbg !7316, !srcloc !7317
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #25, !dbg !7318, !srcloc !7319
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !7320, !srcloc !7321
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !7322, !srcloc !7323
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !7324, !srcloc !7325
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !7326, !srcloc !7327
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !7328, !srcloc !7329
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !7330, !srcloc !7331
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !7332, !srcloc !7333
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !7334, !srcloc !7335
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !7336, !srcloc !7337
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !7338, !srcloc !7339
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !7340, !srcloc !7341
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !7342, !srcloc !7343
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !7344, !srcloc !7345
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !7346, !srcloc !7347
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !7348, !srcloc !7349
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !7350, !srcloc !7351
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !7352, !srcloc !7353
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !7354, !srcloc !7355
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !7356, !srcloc !7357
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !7358, !srcloc !7359
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !7360, !srcloc !7361
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !7362, !srcloc !7363
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !7364, !srcloc !7365
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !7366, !srcloc !7367
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !7368, !srcloc !7369
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !7370, !srcloc !7371
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !7372, !srcloc !7373
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !7374, !srcloc !7375
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !7376, !srcloc !7377
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !7378, !srcloc !7379
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !7380, !srcloc !7381
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !7382, !srcloc !7383
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !7384, !srcloc !7385
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !7386, !srcloc !7387
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !7388, !srcloc !7389
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !7390, !srcloc !7391
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !7392, !srcloc !7393
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !7394, !srcloc !7395
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !7396, !srcloc !7397
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !7398, !srcloc !7399
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !7400, !srcloc !7401
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !7402, !srcloc !7403
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !7404, !srcloc !7405
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !7406, !srcloc !7407
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !7408, !srcloc !7409
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !7410, !srcloc !7411
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !7412, !srcloc !7413
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !7414, !srcloc !7415
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #25, !dbg !7416, !srcloc !7417
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #25, !dbg !7418, !srcloc !7419
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !7420, !srcloc !7421
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !7422, !srcloc !7423
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !7424, !srcloc !7425
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !7426, !srcloc !7427
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #25, !dbg !7428, !srcloc !7429
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7430, !srcloc !7431
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !7432, !srcloc !7433
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !7434, !srcloc !7435
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !7436, !srcloc !7437
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !7438, !srcloc !7439
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !7440, !srcloc !7441
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !7442, !srcloc !7443
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !7444, !srcloc !7445
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !7446, !srcloc !7447
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !7448, !srcloc !7449
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !7450, !srcloc !7451
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !7452, !srcloc !7453
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !7454, !srcloc !7455
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #25, !dbg !7456, !srcloc !7457
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !7458, !srcloc !7459
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !7460, !srcloc !7461
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !7462, !srcloc !7463
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !7464, !srcloc !7465
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !7466, !srcloc !7467
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !7468, !srcloc !7469
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !7470, !srcloc !7471
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !7472, !srcloc !7473
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !7474, !srcloc !7475
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !7476, !srcloc !7477
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !7478, !srcloc !7479
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !7480, !srcloc !7481
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !7482, !srcloc !7483
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !7484, !srcloc !7485
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !7486, !srcloc !7487
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !7488, !srcloc !7489
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !7490, !srcloc !7491
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !7492, !srcloc !7493
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !7494, !srcloc !7495
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !7496, !srcloc !7497
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !7498, !srcloc !7499
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !7500, !srcloc !7501
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !7502, !srcloc !7503
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !7504, !srcloc !7505
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !7506, !srcloc !7507
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !7508, !srcloc !7509
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !7510, !srcloc !7511
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !7512, !srcloc !7513
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !7514, !srcloc !7515
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !7516, !srcloc !7517
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !7518, !srcloc !7519
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !7520, !srcloc !7521
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !7522, !srcloc !7523
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !7524, !srcloc !7525
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !7526, !srcloc !7527
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !7528, !srcloc !7529
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !7530, !srcloc !7531
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !7532, !srcloc !7533
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !7534, !srcloc !7535
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !7536, !srcloc !7537
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !7538, !srcloc !7539
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7540, !srcloc !7541
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !7542, !srcloc !7543
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !7544, !srcloc !7545
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !7546, !srcloc !7547
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !7548, !srcloc !7549
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !7550, !srcloc !7551
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !7552, !srcloc !7553
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !7554, !srcloc !7555
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !7556, !srcloc !7557
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !7558, !srcloc !7559
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !7560, !srcloc !7561
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7562, !srcloc !7563
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !7564, !srcloc !7565
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !7566, !srcloc !7567
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !7568, !srcloc !7569
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !7570, !srcloc !7571
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !7572, !srcloc !7573
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !7574, !srcloc !7575
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !7576, !srcloc !7577
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !7578, !srcloc !7579
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !7580, !srcloc !7581
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !7582, !srcloc !7583
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !7584, !srcloc !7585
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !7586, !srcloc !7587
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !7588, !srcloc !7589
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !7590, !srcloc !7591
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !7592, !srcloc !7593
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !7594, !srcloc !7595
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !7596, !srcloc !7597
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !7598, !srcloc !7599
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !7600, !srcloc !7601
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !7602, !srcloc !7603
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !7604, !srcloc !7605
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !7606, !srcloc !7607
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !7608, !srcloc !7609
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !7610, !srcloc !7611
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !7612, !srcloc !7613
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !7614, !srcloc !7615
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !7616, !srcloc !7617
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !7618, !srcloc !7619
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !7620, !srcloc !7621
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !7622, !srcloc !7623
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !7624, !srcloc !7625
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !7626, !srcloc !7627
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !7628, !srcloc !7629
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !7630, !srcloc !7631
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !7632, !srcloc !7633
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !7634, !srcloc !7635
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7636, !srcloc !7637
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !7638, !srcloc !7639
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !7640, !srcloc !7641
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !7642, !srcloc !7643
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !7644, !srcloc !7645
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !7646, !srcloc !7647
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !7648, !srcloc !7649
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !7650, !srcloc !7651
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !7652, !srcloc !7653
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !7654, !srcloc !7655
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !7656, !srcloc !7657
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !7658, !srcloc !7659
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !7660, !srcloc !7661
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !7662, !srcloc !7663
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !7664, !srcloc !7665
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !7666, !srcloc !7667
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !7668, !srcloc !7669
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7670, !srcloc !7671
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !7672, !srcloc !7673
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !7674, !srcloc !7675
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !7676, !srcloc !7677
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !7678, !srcloc !7679
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !7680, !srcloc !7681
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !7682, !srcloc !7683
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !7684, !srcloc !7685
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !7686, !srcloc !7687
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !7688, !srcloc !7689
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !7690, !srcloc !7691
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !7692, !srcloc !7693
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !7694, !srcloc !7695
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !7696, !srcloc !7697
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !7698, !srcloc !7699
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !7700, !srcloc !7701
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !7702, !srcloc !7703
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !7704, !srcloc !7705
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !7706, !srcloc !7707
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7708, !srcloc !7709
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !7710, !srcloc !7711
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !7712, !srcloc !7713
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !7714, !srcloc !7715
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !7716, !srcloc !7717
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7718, !srcloc !7719
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !7720, !srcloc !7721
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !7722, !srcloc !7723
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !7724, !srcloc !7725
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7726, !srcloc !7727
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !7728, !srcloc !7729
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !7730, !srcloc !7731
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !7732, !srcloc !7733
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !7734, !srcloc !7735
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !7736, !srcloc !7737
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !7738, !srcloc !7739
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !7740, !srcloc !7741
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !7742, !srcloc !7743
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !7744, !srcloc !7745
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !7746, !srcloc !7747
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !7748, !srcloc !7749
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !7750, !srcloc !7751
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !7752, !srcloc !7753
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !7754, !srcloc !7755
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !7756, !srcloc !7757
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !7758, !srcloc !7759
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !7760, !srcloc !7761
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !7762, !srcloc !7763
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !7764, !srcloc !7765
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !7766, !srcloc !7767
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !7768, !srcloc !7769
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !7770, !srcloc !7771
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !7772, !srcloc !7773
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !7774, !srcloc !7775
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !7776, !srcloc !7777
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #25, !dbg !7778, !srcloc !7779
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #25, !dbg !7780, !srcloc !7781
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #25, !dbg !7782, !srcloc !7783
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !7784, !srcloc !7785
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !7786, !srcloc !7787
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !7788, !srcloc !7789
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !7790, !srcloc !7791
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !7792, !srcloc !7793
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !7794, !srcloc !7795
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !7796, !srcloc !7797
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !7798, !srcloc !7799
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #25, !dbg !7800, !srcloc !7801
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #25, !dbg !7802, !srcloc !7803
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,2\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #25, !dbg !7804, !srcloc !7805
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_INF,%object", ""() #25, !dbg !7806, !srcloc !7807
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,3\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #25, !dbg !7808, !srcloc !7809
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !7810, !srcloc !7811
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7812, !srcloc !7813
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !7814, !srcloc !7815
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !7816, !srcloc !7817
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !7818, !srcloc !7819
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !7820, !srcloc !7821
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !7822, !srcloc !7823
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !7824, !srcloc !7825
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !7826, !srcloc !7827
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !7828, !srcloc !7829
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !7830, !srcloc !7831
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !7832, !srcloc !7833
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !7834, !srcloc !7835
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !7836, !srcloc !7837
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !7838, !srcloc !7839
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !7840, !srcloc !7841
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !7842, !srcloc !7843
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !7844, !srcloc !7845
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !7846, !srcloc !7847
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !7848, !srcloc !7849
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !7850, !srcloc !7851
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !7852, !srcloc !7853
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !7854, !srcloc !7855
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !7856, !srcloc !7857
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !7858, !srcloc !7859
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !7860, !srcloc !7861
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !7862, !srcloc !7863
  ret void, !dbg !7864
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7867, metadata !DIExpression()), !dbg !7869
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !7870, !srcloc !7879
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7870
  call void @llvm.dbg.value(metadata i32 %3, metadata !7876, metadata !DIExpression()) #25, !dbg !7880
  call void @llvm.dbg.value(metadata i32 undef, metadata !7877, metadata !DIExpression()) #25, !dbg !7880
  call void @llvm.dbg.value(metadata i32 %3, metadata !7868, metadata !DIExpression()), !dbg !7869
  call void @llvm.dbg.value(metadata i32 %3, metadata !7881, metadata !DIExpression()) #25, !dbg !7886
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !7888, !srcloc !7889
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !7890
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !7891
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #27, !dbg !7892
  ret i32 0, !dbg !7893
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #16 !dbg !7894 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !7899, metadata !DIExpression()), !dbg !7901
  %2 = bitcast i32* %1 to i8*, !dbg !7902
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !7902
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7900, metadata !DIExpression()), !dbg !7903
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !7904
  %4 = or i32 %3, 268435456, !dbg !7904
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !7904
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !7905
  %6 = and i32 %5, 268435456, !dbg !7905
  store volatile i32 %6, i32* %1, align 4, !dbg !7906
  %7 = load volatile i32, i32* %1, align 4, !dbg !7907
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !7908
  ret void, !dbg !7908
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #17 !dbg !7909 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !7912, metadata !DIExpression()), !dbg !7913
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !7914
  %2 = and i32 %1, -6145, !dbg !7914
  %3 = or i32 %2, 2048, !dbg !7914
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !7914
  ret void, !dbg !7915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #6 !dbg !7916 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7918, metadata !DIExpression()), !dbg !7919
  ret i32 0, !dbg !7920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7921 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7924, metadata !DIExpression()), !dbg !7932
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7933
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7933
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7925, metadata !DIExpression()), !dbg !7934
  call void @llvm.va_start(i8* nonnull %3), !dbg !7935
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7936
  %5 = load i32, i32* %4, align 4, !dbg !7936
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7936
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !7936
  call void @llvm.va_end(i8* nonnull %3), !dbg !7937
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7938
  ret void, !dbg !7938
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7939 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7944, metadata !DIExpression()), !dbg !7945
  call void @llvm.dbg.value(metadata i8* %0, metadata !7943, metadata !DIExpression()), !dbg !7945
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #26, !dbg !7946
  ret void, !dbg !7947
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7952, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %1, metadata !7953, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 %2, metadata !7954, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %1, metadata !7955, metadata !DIExpression()), !dbg !7956
  %4 = icmp eq i32 %2, 0, !dbg !7957
  br i1 %4, label %14, label %5, !dbg !7958

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #27, !dbg !7956
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7958

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7955, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 %10, metadata !7954, metadata !DIExpression()), !dbg !7956
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0), i32 noundef %7) #26, !dbg !7959
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #27, !dbg !7961
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7962
  call void @llvm.dbg.value(metadata i32 %11, metadata !7954, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %12, metadata !7955, metadata !DIExpression()), !dbg !7956
  br i1 %13, label %14, label %8, !dbg !7962, !llvm.loop !7963

14:                                               ; preds = %8, %3
  ret void, !dbg !7965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #6 !dbg !7966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7971, metadata !DIExpression()), !dbg !7972
  %2 = add i32 %0, -1, !dbg !7973
  %3 = icmp ult i32 %2, 4, !dbg !7973
  %4 = shl i32 %2, 3, !dbg !7973
  %5 = lshr i32 1145657157, %4, !dbg !7973
  %6 = trunc i32 %5 to i8, !dbg !7973
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7973
  ret i8 %7, !dbg !7974
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7975 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7979, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.value(metadata i32 %1, metadata !7980, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.value(metadata i32 0, metadata !7981, metadata !DIExpression()), !dbg !7991
  br label %4, !dbg !7992

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.51, i32 0, i32 0)) #26, !dbg !7993
  call void @llvm.dbg.value(metadata i32 0, metadata !7983, metadata !DIExpression()), !dbg !7994
  br label %16, !dbg !7995

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7981, metadata !DIExpression()), !dbg !7991
  %6 = icmp ult i32 %5, %1, !dbg !7996
  br i1 %6, label %7, label %11, !dbg !8000

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !8001
  %9 = load i8, i8* %8, align 1, !dbg !8001
  %10 = zext i8 %9 to i32, !dbg !8003
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.52, i32 0, i32 0), i32 noundef %10) #26, !dbg !8004
  br label %12, !dbg !8005

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.53, i32 0, i32 0)) #26, !dbg !8006
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !8008
  call void @llvm.dbg.value(metadata i32 %13, metadata !7981, metadata !DIExpression()), !dbg !7991
  %14 = icmp eq i32 %13, 8, !dbg !8009
  br i1 %14, label %3, label %4, !dbg !7992, !llvm.loop !8010

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.54, i32 0, i32 0)) #26, !dbg !8012
  ret void, !dbg !8013

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7983, metadata !DIExpression()), !dbg !7994
  %18 = icmp ult i32 %17, %1, !dbg !8014
  br i1 %18, label %19, label %26, !dbg !8015

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !8016
  %21 = load i8, i8* %20, align 1, !dbg !8016
  call void @llvm.dbg.value(metadata i8 %21, metadata !7985, metadata !DIExpression()), !dbg !8017
  %22 = zext i8 %21 to i32, !dbg !8018
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #27, !dbg !8019
  %24 = icmp eq i32 %23, 0, !dbg !8020
  %25 = select i1 %24, i32 46, i32 %22, !dbg !8019
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef %25) #26, !dbg !8021
  br label %27, !dbg !8022

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.56, i32 0, i32 0)) #26, !dbg !8023
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !8025
  call void @llvm.dbg.value(metadata i32 %28, metadata !7983, metadata !DIExpression()), !dbg !7994
  %29 = icmp eq i32 %28, 8, !dbg !8026
  br i1 %29, label %15, label %16, !dbg !7995, !llvm.loop !8027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #6 !dbg !8029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8031, metadata !DIExpression()), !dbg !8032
  %2 = add i32 %0, -32, !dbg !8033
  %3 = icmp ult i32 %2, 95, !dbg !8033
  %4 = zext i1 %3 to i32, !dbg !8033
  ret i32 %4, !dbg !8034
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !8035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8084, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !8085, metadata !DIExpression()), !dbg !8086
  %3 = icmp eq %struct.__esf* %1, null, !dbg !8087
  br i1 %3, label %5, label %4, !dbg !8089

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #27, !dbg !8090
  br label %5, !dbg !8092

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !8093
  ret void, !dbg !8094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8095 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8099, metadata !DIExpression()), !dbg !8100
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8101
  %3 = load i32, i32* %2, align 4, !dbg !8101
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !8101
  %5 = load i32, i32* %4, align 4, !dbg !8101
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !8101
  %7 = load i32, i32* %6, align 4, !dbg !8101
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.57, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #26, !dbg !8101
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !8106
  %9 = load i32, i32* %8, align 4, !dbg !8106
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !8106
  %11 = load i32, i32* %10, align 4, !dbg !8106
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !8106
  %13 = load i32, i32* %12, align 4, !dbg !8106
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.58, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #26, !dbg !8106
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !8111
  %15 = load i32, i32* %14, align 4, !dbg !8111
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.59, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #26, !dbg !8111
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8116
  %17 = load i32, i32* %16, align 4, !dbg !8116
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.60, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #26, !dbg !8116
  ret void, !dbg !8121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !8122 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8139, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !8140, metadata !DIExpression()), !dbg !8142
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8143
  %4 = load i32, i32* %3, align 4, !dbg !8143
  call void @llvm.dbg.value(metadata i32 %4, metadata !8141, metadata !DIExpression()), !dbg !8142
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !8144
  ret void, !dbg !8145
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !8146 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8150, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i8* %0, metadata !8151, metadata !DIExpression()), !dbg !8153
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !8154
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !8154
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !8152, metadata !DIExpression()), !dbg !8155
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !8155
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8156
  %5 = bitcast i8* %4 to i32*, !dbg !8156
  %6 = load i32, i32* %5, align 4, !dbg !8156
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !8157
  store i32 %6, i32* %7, align 4, !dbg !8158
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !8159
  unreachable, !dbg !8160
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8164, metadata !DIExpression()), !dbg !8165
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !8166
  ret void, !dbg !8167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8172, metadata !DIExpression()), !dbg !8173
  %2 = icmp sgt i32 %0, -1, !dbg !8174
  br i1 %2, label %3, label %8, !dbg !8176

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8177, !srcloc !8179
  %4 = and i32 %0, 31, !dbg !8180
  %5 = shl nuw i32 1, %4, !dbg !8181
  %6 = lshr i32 %0, 5, !dbg !8182
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !8183
  store volatile i32 %5, i32* %7, align 4, !dbg !8184
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8185, !srcloc !8186
  br label %8, !dbg !8187

8:                                                ; preds = %3, %1
  ret void, !dbg !8188
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !8189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8191, metadata !DIExpression()), !dbg !8192
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !8193
  ret void, !dbg !8194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8197, metadata !DIExpression()), !dbg !8198
  %2 = icmp sgt i32 %0, -1, !dbg !8199
  br i1 %2, label %3, label %8, !dbg !8201

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !8202
  %5 = shl nuw i32 1, %4, !dbg !8204
  %6 = lshr i32 %0, 5, !dbg !8205
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !8206
  store volatile i32 %5, i32* %7, align 4, !dbg !8207
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8208, !srcloc !8212
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8213, !srcloc !8216
  br label %8, !dbg !8217

8:                                                ; preds = %3, %1
  ret void, !dbg !8218
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #18 !dbg !8219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8223, metadata !DIExpression()), !dbg !8224
  %2 = lshr i32 %0, 5, !dbg !8225
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !8226
  %4 = load volatile i32, i32* %3, align 4, !dbg !8226
  %5 = and i32 %0, 31, !dbg !8227
  %6 = shl nuw i32 1, %5, !dbg !8227
  %7 = and i32 %4, %6, !dbg !8228
  ret i32 %7, !dbg !8229
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !8230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8234, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata i32 %1, metadata !8235, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata i32 %2, metadata !8236, metadata !DIExpression()), !dbg !8237
  %4 = add i32 %1, 1, !dbg !8238
  call void @llvm.dbg.value(metadata i32 %4, metadata !8235, metadata !DIExpression()), !dbg !8237
  %5 = icmp ult i32 %4, 16, !dbg !8241
  br i1 %5, label %7, label %6, !dbg !8244

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.61, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.63, i32 0, i32 0), i32 noundef 94) #26, !dbg !8245
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.64, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #26, !dbg !8245
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.63, i32 0, i32 0), i32 noundef 94) #26, !dbg !8245
  unreachable, !dbg !8245

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !8247
  ret void, !dbg !8248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !8249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8253, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.value(metadata i32 %1, metadata !8254, metadata !DIExpression()), !dbg !8255
  %3 = trunc i32 %1 to i8, !dbg !8256
  %4 = shl i8 %3, 4, !dbg !8256
  %5 = and i32 %0, 15, !dbg !8258
  %6 = add nsw i32 %5, -4, !dbg !8258
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !8258
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8258
  %9 = icmp slt i32 %0, 0, !dbg !8258
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !8258
  store volatile i8 %4, i8* %10, align 1, !dbg !8256
  ret void, !dbg !8259
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !8260 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8262, metadata !DIExpression()), !dbg !8263
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !8264
  ret void, !dbg !8265
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !8266 {
  tail call void @z_SysNmiOnReset() #26, !dbg !8268
  tail call void @z_arm_int_exit() #26, !dbg !8269
  ret void, !dbg !8270
}

; Function Attrs: optsize
declare !dbg !8271 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !8272 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #5 !dbg !8274 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !8276
  tail call void @z_bss_zero() #26, !dbg !8277
  tail call void @z_data_copy() #26, !dbg !8278
  tail call void @z_arm_interrupt_init() #26, !dbg !8279
  tail call void @z_cstart() #29, !dbg !8280
  unreachable, !dbg !8280
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !8281 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !8282
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8283, !srcloc !8286
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8287, !srcloc !8290
  ret void, !dbg !8291
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !8292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8295, metadata !DIExpression()), !dbg !8296
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8297
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !8298
  store i32 %0, i32* %3, align 4, !dbg !8299
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !8300
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !8301
  store i32 %4, i32* %5, align 4, !dbg !8302
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8303
  %7 = or i32 %6, 268435456, !dbg !8303
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8303
  call void @llvm.dbg.value(metadata i32 0, metadata !8304, metadata !DIExpression()) #25, !dbg !8307
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8309, !srcloc !8310
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8311
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !8312
  %10 = load i32, i32* %9, align 4, !dbg !8312
  ret i32 %10, !dbg !8313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !8314 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8426, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8427, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i8* %2, metadata !8428, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8429, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i8* %4, metadata !8430, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i8* %5, metadata !8431, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i8* %6, metadata !8432, metadata !DIExpression()), !dbg !8434
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8435
  call void @llvm.dbg.value(metadata i8* %8, metadata !8433, metadata !DIExpression()), !dbg !8434
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8436
  %10 = bitcast i8* %9 to i32*, !dbg !8436
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8437
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8438
  %12 = bitcast i8* %8 to i32*, !dbg !8439
  store i32 %11, i32* %12, align 4, !dbg !8440
  %13 = ptrtoint i8* %4 to i32, !dbg !8441
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8442
  %15 = bitcast i8* %14 to i32*, !dbg !8442
  store i32 %13, i32* %15, align 4, !dbg !8443
  %16 = ptrtoint i8* %5 to i32, !dbg !8444
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8445
  %18 = bitcast i8* %17 to i32*, !dbg !8445
  store i32 %16, i32* %18, align 4, !dbg !8446
  %19 = ptrtoint i8* %6 to i32, !dbg !8447
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8448
  %21 = bitcast i8* %20 to i32*, !dbg !8448
  store i32 %19, i32* %21, align 4, !dbg !8449
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8450
  %23 = bitcast i8* %22 to i32*, !dbg !8450
  store i32 16777216, i32* %23, align 4, !dbg !8451
  %24 = ptrtoint i8* %8 to i32, !dbg !8452
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8453
  store i32 %24, i32* %25, align 8, !dbg !8454
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8455
  store i32 0, i32* %26, align 4, !dbg !8456
  ret void, !dbg !8457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !8458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8463, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i32 %1, metadata !8464, metadata !DIExpression()), !dbg !8469
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8470
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8465, metadata !DIExpression()), !dbg !8469
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8471
  br i1 %4, label %19, label %5, !dbg !8473

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8468, metadata !DIExpression()), !dbg !8469
  %6 = icmp eq i32 %0, -22, !dbg !8474
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8474
  %8 = load i32, i32* %7, align 4, !dbg !8474
  br i1 %6, label %16, label %9, !dbg !8476

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8474
  %11 = icmp ule i32 %10, %0, !dbg !8474
  %12 = icmp ugt i32 %8, %0, !dbg !8474
  %13 = and i1 %12, %11, !dbg !8474
  %14 = icmp ugt i32 %8, %1, !dbg !8474
  %15 = and i1 %14, %13, !dbg !8474
  br i1 %15, label %18, label %19, !dbg !8474

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8474
  br i1 %17, label %18, label %19, !dbg !8476

18:                                               ; preds = %9, %16
  br label %19, !dbg !8477

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8469
  ret i32 %20, !dbg !8479
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #5 !dbg !8480 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8484, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.value(metadata i8* %1, metadata !8485, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8486, metadata !DIExpression()), !dbg !8487
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8488
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !8489
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !8490, !srcloc !8491
  unreachable, !dbg !8492
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8493 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8511, metadata !DIExpression()), !dbg !8521
  call void @llvm.dbg.value(metadata i32 %1, metadata !8512, metadata !DIExpression()), !dbg !8521
  call void @llvm.dbg.value(metadata i32 %2, metadata !8513, metadata !DIExpression()), !dbg !8521
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8514, metadata !DIExpression()), !dbg !8521
  call void @llvm.dbg.value(metadata i32 0, metadata !8515, metadata !DIExpression()), !dbg !8521
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8522
  call void @llvm.dbg.value(metadata i32 %8, metadata !8516, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !8521
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8523
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8523
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !8524
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !8524
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8520, metadata !DIExpression()), !dbg !8525
  call void @llvm.dbg.value(metadata i32 0, metadata !8526, metadata !DIExpression()) #25, !dbg !8529
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8531, !srcloc !8532
  call void @llvm.dbg.value(metadata i8* %6, metadata !8518, metadata !DIExpression(DW_OP_deref)), !dbg !8521
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !8533
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !8519, metadata !DIExpression()), !dbg !8521
  %11 = icmp eq %struct.__esf* %10, null, !dbg !8534
  br i1 %11, label %12, label %13, !dbg !8537

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 1057) #26, !dbg !8538
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.70, i32 0, i32 0)) #26, !dbg !8538
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 1057) #26, !dbg !8538
  unreachable, !dbg !8538

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !8540
  call void @llvm.dbg.value(metadata i32 %14, metadata !8516, metadata !DIExpression()), !dbg !8521
  call void @llvm.dbg.value(metadata i8* %5, metadata !8517, metadata !DIExpression(DW_OP_deref)), !dbg !8521
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #27, !dbg !8541
  call void @llvm.dbg.value(metadata i32 %15, metadata !8515, metadata !DIExpression()), !dbg !8521
  %16 = load i8, i8* %5, align 1, !dbg !8542, !range !8544
  call void @llvm.dbg.value(metadata i8 %16, metadata !8517, metadata !DIExpression()), !dbg !8521
  %17 = icmp eq i8 %16, 0, !dbg !8542
  br i1 %17, label %18, label %35, !dbg !8545

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !8546
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #26, !dbg !8547
  %21 = load i8, i8* %6, align 1, !dbg !8548, !range !8544
  call void @llvm.dbg.value(metadata i8 %21, metadata !8518, metadata !DIExpression()), !dbg !8521
  %22 = icmp eq i8 %21, 0, !dbg !8548
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8550
  %24 = load i32, i32* %23, align 4, !dbg !8550
  br i1 %22, label %30, label %25, !dbg !8551

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !8552
  %27 = icmp eq i32 %26, 0, !dbg !8555
  br i1 %27, label %28, label %34, !dbg !8556

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !8557
  br label %32, !dbg !8559

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !8560
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !8550
  br label %34, !dbg !8562

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #26, !dbg !8562
  br label %35, !dbg !8563

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !8563
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8563
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8563
  ret void, !dbg !8563
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8569, metadata !DIExpression()), !dbg !8575
  call void @llvm.dbg.value(metadata i32 %1, metadata !8570, metadata !DIExpression()), !dbg !8575
  call void @llvm.dbg.value(metadata i32 %2, metadata !8571, metadata !DIExpression()), !dbg !8575
  call void @llvm.dbg.value(metadata i8* %3, metadata !8572, metadata !DIExpression()), !dbg !8575
  call void @llvm.dbg.value(metadata i8 0, metadata !8573, metadata !DIExpression()), !dbg !8575
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8574, metadata !DIExpression()), !dbg !8575
  store i8 0, i8* %3, align 1, !dbg !8576
  %5 = icmp ugt i32 %2, -16777217, !dbg !8577
  br i1 %5, label %6, label %17, !dbg !8579

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8580
  %8 = icmp eq i32 %7, 8, !dbg !8580
  br i1 %8, label %9, label %10, !dbg !8580

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.81, i32 0, i32 0), i32 noundef 69) #26, !dbg !8582
  br label %17, !dbg !8588

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8589
  %12 = icmp eq i32 %11, 0, !dbg !8589
  br i1 %12, label %13, label %14, !dbg !8590

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8574, metadata !DIExpression()), !dbg !8575
  store i8 1, i8* %3, align 1, !dbg !8593
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8575
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8574, metadata !DIExpression()), !dbg !8575
  br label %17, !dbg !8596

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8575
  ret %struct.__esf* %18, !dbg !8597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8598 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8602, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i32 %1, metadata !8603, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i8* %2, metadata !8604, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i32 0, metadata !8605, metadata !DIExpression()), !dbg !8606
  store i8 0, i8* %2, align 1, !dbg !8607
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8608

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !8609
  call void @llvm.dbg.value(metadata i32 %5, metadata !8605, metadata !DIExpression()), !dbg !8606
  br label %12, !dbg !8611

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !8612
  call void @llvm.dbg.value(metadata i32 %7, metadata !8605, metadata !DIExpression()), !dbg !8606
  br label %12, !dbg !8613

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !8614
  call void @llvm.dbg.value(metadata i32 0, metadata !8605, metadata !DIExpression()), !dbg !8606
  br label %12, !dbg !8615

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !8616
  call void @llvm.dbg.value(metadata i32 0, metadata !8605, metadata !DIExpression()), !dbg !8606
  br label %12, !dbg !8617

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !8618
  br label %12, !dbg !8619

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #27, !dbg !8620
  br label %12, !dbg !8621

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8606
  call void @llvm.dbg.value(metadata i32 %13, metadata !8605, metadata !DIExpression()), !dbg !8606
  ret i32 %13, !dbg !8622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8623 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8627, metadata !DIExpression()), !dbg !8630
  call void @llvm.dbg.value(metadata i8* %1, metadata !8628, metadata !DIExpression()), !dbg !8630
  call void @llvm.dbg.value(metadata i32 0, metadata !8629, metadata !DIExpression()), !dbg !8630
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.73, i32 0, i32 0), i32 noundef 69) #26, !dbg !8631
  store i8 0, i8* %1, align 1, !dbg !8636
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8637
  %4 = and i32 %3, 2, !dbg !8639
  %5 = icmp eq i32 %4, 0, !dbg !8640
  br i1 %5, label %7, label %6, !dbg !8641

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.74, i32 0, i32 0), i32 noundef 69) #26, !dbg !8642
  br label %38, !dbg !8648

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8649
  %9 = icmp sgt i32 %8, -1, !dbg !8651
  br i1 %9, label %11, label %10, !dbg !8652

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.75, i32 0, i32 0), i32 noundef 69) #26, !dbg !8653
  br label %38, !dbg !8659

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8660
  %13 = and i32 %12, 1073741824, !dbg !8662
  %14 = icmp eq i32 %13, 0, !dbg !8663
  br i1 %14, label %37, label %15, !dbg !8664

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.76, i32 0, i32 0), i32 noundef 69) #26, !dbg !8665
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !8671
  br i1 %16, label %17, label %21, !dbg !8673

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8674
  %19 = load i32, i32* %18, align 4, !dbg !8674
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.77, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #26, !dbg !8674
  %20 = load i32, i32* %18, align 4, !dbg !8680
  call void @llvm.dbg.value(metadata i32 %20, metadata !8629, metadata !DIExpression()), !dbg !8630
  br label %38, !dbg !8681

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8682
  %23 = and i32 %22, 255, !dbg !8684
  %24 = icmp eq i32 %23, 0, !dbg !8685
  br i1 %24, label %27, label %25, !dbg !8686

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !8687
  call void @llvm.dbg.value(metadata i32 %26, metadata !8629, metadata !DIExpression()), !dbg !8630
  br label %38, !dbg !8689

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8690
  %29 = and i32 %28, 65280, !dbg !8692
  %30 = icmp eq i32 %29, 0, !dbg !8693
  br i1 %30, label %32, label %31, !dbg !8694

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !8695
  call void @llvm.dbg.value(metadata i32 0, metadata !8629, metadata !DIExpression()), !dbg !8630
  br label %38, !dbg !8697

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8698
  %34 = icmp ult i32 %33, 65536, !dbg !8700
  br i1 %34, label %36, label %35, !dbg !8701

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #27, !dbg !8702
  call void @llvm.dbg.value(metadata i32 0, metadata !8629, metadata !DIExpression()), !dbg !8630
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 755) #26, !dbg !8704
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.79, i32 0, i32 0)) #26, !dbg !8704
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 755) #26, !dbg !8704
  unreachable, !dbg !8704

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 760) #26, !dbg !8709
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.80, i32 0, i32 0)) #26, !dbg !8709
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 760) #26, !dbg !8709
  unreachable, !dbg !8709

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !8630
  call void @llvm.dbg.value(metadata i32 %39, metadata !8629, metadata !DIExpression()), !dbg !8630
  ret i32 %39, !dbg !8714
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8715 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8717, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i32 %1, metadata !8718, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i8* %2, metadata !8719, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i32 0, metadata !8720, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i32 -22, metadata !8721, metadata !DIExpression()), !dbg !8730
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.72, i32 0, i32 0), i32 noundef 69) #26, !dbg !8731
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8736
  %5 = and i32 %4, 16, !dbg !8738
  %6 = icmp eq i32 %5, 0, !dbg !8739
  br i1 %6, label %8, label %7, !dbg !8740

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #26, !dbg !8741
  br label %8, !dbg !8747

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8748
  %10 = and i32 %9, 8, !dbg !8750
  %11 = icmp eq i32 %10, 0, !dbg !8751
  br i1 %11, label %13, label %12, !dbg !8752

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #26, !dbg !8753
  br label %13, !dbg !8759

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8760
  %15 = and i32 %14, 2, !dbg !8761
  %16 = icmp eq i32 %15, 0, !dbg !8762
  br i1 %16, label %27, label %17, !dbg !8763

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #26, !dbg !8764
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8769
  call void @llvm.dbg.value(metadata i32 %18, metadata !8722, metadata !DIExpression()), !dbg !8770
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8771
  %20 = and i32 %19, 128, !dbg !8773
  %21 = icmp eq i32 %20, 0, !dbg !8774
  br i1 %21, label %27, label %22, !dbg !8775

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8721, metadata !DIExpression()), !dbg !8730
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #26, !dbg !8776
  %23 = icmp eq i32 %1, 0, !dbg !8782
  br i1 %23, label %27, label %24, !dbg !8784

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8785
  %26 = and i32 %25, -129, !dbg !8785
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8785
  br label %27, !dbg !8787

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8730
  call void @llvm.dbg.value(metadata i32 %28, metadata !8721, metadata !DIExpression()), !dbg !8730
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8788
  %30 = and i32 %29, 1, !dbg !8790
  %31 = icmp eq i32 %30, 0, !dbg !8791
  br i1 %31, label %33, label %32, !dbg !8792

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #26, !dbg !8793
  br label %33, !dbg !8799

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8800
  %35 = and i32 %34, 16, !dbg !8801
  %36 = icmp eq i32 %35, 0, !dbg !8801
  br i1 %36, label %37, label %41, !dbg !8802

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8803
  %39 = and i32 %38, 2, !dbg !8804
  %40 = icmp eq i32 %39, 0, !dbg !8804
  br i1 %40, label %55, label %41, !dbg !8805

41:                                               ; preds = %37, %33
  %42 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8806
  %43 = and i32 %42, 2048, !dbg !8807
  %44 = icmp eq i32 %43, 0, !dbg !8807
  br i1 %44, label %55, label %45, !dbg !8808

45:                                               ; preds = %41
  %46 = ptrtoint %struct.__esf* %0 to i32, !dbg !8809
  %47 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %46) #26, !dbg !8810
  call void @llvm.dbg.value(metadata i32 %47, metadata !8725, metadata !DIExpression()), !dbg !8811
  %48 = icmp eq i32 %47, 0, !dbg !8812
  br i1 %48, label %50, label %49, !dbg !8814

49:                                               ; preds = %45
  call void @llvm.dbg.value(metadata i32 %47, metadata !8815, metadata !DIExpression()) #25, !dbg !8818
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %47) #25, !dbg !8821, !srcloc !8822
  call void @llvm.dbg.value(metadata i32 2, metadata !8720, metadata !DIExpression()), !dbg !8730
  br label %55, !dbg !8823

50:                                               ; preds = %45
  %51 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8824
  %52 = and i32 %51, 16, !dbg !8824
  %53 = icmp eq i32 %52, 0, !dbg !8824
  br i1 %53, label %55, label %54, !dbg !8828

54:                                               ; preds = %50
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 343) #26, !dbg !8829
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i32 0, i32 0)) #26, !dbg !8829
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 343) #26, !dbg !8829
  unreachable, !dbg !8829

55:                                               ; preds = %49, %50, %41, %37
  %56 = phi i32 [ 0, %41 ], [ 0, %37 ], [ 2, %49 ], [ 0, %50 ], !dbg !8730
  call void @llvm.dbg.value(metadata i32 %56, metadata !8720, metadata !DIExpression()), !dbg !8730
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8831
  %58 = or i32 %57, 255, !dbg !8831
  store volatile i32 %58, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8831
  store i8 0, i8* %2, align 1, !dbg !8832
  ret i32 %56, !dbg !8833
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8834 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8838, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.value(metadata i32 %0, metadata !8839, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.value(metadata i8* %1, metadata !8840, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.value(metadata i32 0, metadata !8841, metadata !DIExpression()), !dbg !8845
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #26, !dbg !8846
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8851
  %4 = and i32 %3, 4096, !dbg !8853
  %5 = icmp eq i32 %4, 0, !dbg !8853
  br i1 %5, label %7, label %6, !dbg !8854

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #26, !dbg !8855
  br label %7, !dbg !8861

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8862
  %9 = and i32 %8, 2048, !dbg !8864
  %10 = icmp eq i32 %9, 0, !dbg !8864
  br i1 %10, label %12, label %11, !dbg !8865

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #26, !dbg !8866
  br label %12, !dbg !8872

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8873
  %14 = and i32 %13, 512, !dbg !8874
  %15 = icmp eq i32 %14, 0, !dbg !8874
  br i1 %15, label %26, label %16, !dbg !8875

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #26, !dbg !8876
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8881
  call void @llvm.dbg.value(metadata i32 %17, metadata !8842, metadata !DIExpression()), !dbg !8882
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8883
  %19 = and i32 %18, 32768, !dbg !8885
  %20 = icmp eq i32 %19, 0, !dbg !8886
  br i1 %20, label %26, label %21, !dbg !8887

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #26, !dbg !8888
  %22 = icmp eq i32 %0, 0, !dbg !8894
  br i1 %22, label %26, label %23, !dbg !8896

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8897
  %25 = and i32 %24, -32769, !dbg !8897
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8897
  br label %26, !dbg !8899

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8900
  %28 = and i32 %27, 1024, !dbg !8902
  %29 = icmp eq i32 %28, 0, !dbg !8902
  br i1 %29, label %31, label %30, !dbg !8903

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25.71, i32 0, i32 0), i32 noundef 69) #26, !dbg !8904
  br label %31, !dbg !8910

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8911
  %33 = and i32 %32, 256, !dbg !8913
  %34 = icmp eq i32 %33, 0, !dbg !8914
  br i1 %34, label %36, label %35, !dbg !8915

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #26, !dbg !8916
  br label %36, !dbg !8922

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8923
  %38 = or i32 %37, 65280, !dbg !8923
  store volatile i32 %38, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8923
  store i8 0, i8* %1, align 1, !dbg !8924
  ret void, !dbg !8925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8926 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8932, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata i32 0, metadata !8933, metadata !DIExpression()), !dbg !8934
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69) #26, !dbg !8935
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8940
  %2 = and i32 %1, 33554432, !dbg !8942
  %3 = icmp eq i32 %2, 0, !dbg !8943
  br i1 %3, label %5, label %4, !dbg !8944

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #26, !dbg !8945
  br label %5, !dbg !8951

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8952
  %7 = and i32 %6, 16777216, !dbg !8954
  %8 = icmp eq i32 %7, 0, !dbg !8955
  br i1 %8, label %10, label %9, !dbg !8956

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #26, !dbg !8957
  br label %10, !dbg !8963

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8964
  %12 = and i32 %11, 524288, !dbg !8966
  %13 = icmp eq i32 %12, 0, !dbg !8967
  br i1 %13, label %15, label %14, !dbg !8968

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #26, !dbg !8969
  br label %15, !dbg !8975

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8976
  %17 = and i32 %16, 262144, !dbg !8978
  %18 = icmp eq i32 %17, 0, !dbg !8979
  br i1 %18, label %20, label %19, !dbg !8980

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #26, !dbg !8981
  br label %20, !dbg !8987

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8988
  %22 = and i32 %21, 131072, !dbg !8990
  %23 = icmp eq i32 %22, 0, !dbg !8991
  br i1 %23, label %25, label %24, !dbg !8992

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #26, !dbg !8993
  br label %25, !dbg !8999

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9000
  %27 = and i32 %26, 65536, !dbg !9002
  %28 = icmp eq i32 %27, 0, !dbg !9003
  br i1 %28, label %30, label %29, !dbg !9004

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #26, !dbg !9005
  br label %30, !dbg !9011

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9012
  %32 = or i32 %31, -65536, !dbg !9012
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9012
  ret void, !dbg !9013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !9014 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9018, metadata !DIExpression()), !dbg !9020
  call void @llvm.dbg.value(metadata i8* %0, metadata !9019, metadata !DIExpression()), !dbg !9020
  store i8 0, i8* %0, align 1, !dbg !9021
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #26, !dbg !9022
  ret void, !dbg !9027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !9028 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9032, metadata !DIExpression()), !dbg !9034
  call void @llvm.dbg.value(metadata i32 %0, metadata !9033, metadata !DIExpression()), !dbg !9034
  %2 = icmp slt i32 %0, 16, !dbg !9035
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.37, i32 0, i32 0), !dbg !9035
  %4 = add nsw i32 %0, -16, !dbg !9035
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #26, !dbg !9035
  ret void, !dbg !9040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9041 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !9045, metadata !DIExpression()), !dbg !9048
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !9049
  %3 = load i32, i32* %2, align 4, !dbg !9049
  %4 = inttoptr i32 %3 to i16*, !dbg !9050
  call void @llvm.dbg.value(metadata i16* %4, metadata !9046, metadata !DIExpression()), !dbg !9048
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9051
  %6 = or i32 %5, 256, !dbg !9051
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9051
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9052, !srcloc !9055
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9056, !srcloc !9059
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !9060
  %8 = load i16, i16* %7, align 2, !dbg !9061
  call void @llvm.dbg.value(metadata i16 %8, metadata !9047, metadata !DIExpression()), !dbg !9048
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9062
  %10 = and i32 %9, -257, !dbg !9062
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9062
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9063, !srcloc !9055
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9065, !srcloc !9059
  %11 = icmp eq i16 %8, -8446, !dbg !9067
  ret i1 %11, !dbg !9069
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #17 !dbg !9070 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9071
  %2 = or i32 %1, 16, !dbg !9071
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9071
  ret void, !dbg !9072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #17 !dbg !9073 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9076, metadata !DIExpression()), !dbg !9077
  br label %1, !dbg !9078

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !9076, metadata !DIExpression()), !dbg !9077
  tail call fastcc void @__NVIC_SetPriority.84(i32 noundef %2) #27, !dbg !9080
  %3 = add nuw nsw i32 %2, 1, !dbg !9083
  call void @llvm.dbg.value(metadata i32 %3, metadata !9076, metadata !DIExpression()), !dbg !9077
  %4 = icmp eq i32 %3, 45, !dbg !9084
  br i1 %4, label %5, label %1, !dbg !9078, !llvm.loop !9085

5:                                                ; preds = %1
  ret void, !dbg !9087
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.84(i32 noundef %0) unnamed_addr #17 !dbg !9088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9090, metadata !DIExpression()), !dbg !9092
  call void @llvm.dbg.value(metadata i32 1, metadata !9091, metadata !DIExpression()), !dbg !9092
  %2 = and i32 %0, 15, !dbg !9093
  %3 = add nsw i32 %2, -4, !dbg !9093
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !9093
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !9093
  %6 = icmp slt i32 %0, 0, !dbg !9093
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !9093
  store volatile i8 16, i8* %7, align 1, !dbg !9094
  ret void, !dbg !9096
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !9097 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9205, metadata !DIExpression()), !dbg !9206
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9207
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !9209
  br i1 %3, label %4, label %12, !dbg !9210

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !9211, !srcloc !9225
  call void @llvm.dbg.value(metadata i32 %5, metadata !9216, metadata !DIExpression()) #25, !dbg !9226
  %6 = icmp eq i32 %5, 0, !dbg !9227
  br i1 %6, label %12, label %7, !dbg !9228

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9229
  %9 = or i32 %8, 268435456, !dbg !9229
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9229
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9231
  %11 = and i32 %10, -32769, !dbg !9231
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9231
  br label %12, !dbg !9232

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !9233
  ret void, !dbg !9234
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !9235 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !9236
  ret void, !dbg !9237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !902 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !1009, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata i8 0, metadata !1010, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata i32 64, metadata !1012, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata i32 undef, metadata !1011, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !9238
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !9239
  %3 = load i32, i32* %2, align 4, !dbg !9239
  call void @llvm.dbg.value(metadata i32 %3, metadata !1011, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !9238
  %4 = add i32 %3, -64, !dbg !9241
  call void @llvm.dbg.value(metadata i32 %4, metadata !1011, metadata !DIExpression()), !dbg !9238
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !9242
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !9243
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !9244
  call void @llvm.dbg.value(metadata i8 1, metadata !1010, metadata !DIExpression()), !dbg !9238
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !9245
  ret void, !dbg !9246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !9247 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9248
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9249, !srcloc !9252
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9253, !srcloc !9256
  ret void, !dbg !9257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !9258 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !9259, !srcloc !9262
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9263
  ret void, !dbg !9264
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9265 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9280, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.value(metadata i8 %1, metadata !9281, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.value(metadata i32 %2, metadata !9282, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.value(metadata i32 %3, metadata !9283, metadata !DIExpression()), !dbg !9284
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !9285
  %6 = icmp eq i32 %5, -22, !dbg !9287
  br i1 %6, label %7, label %9, !dbg !9288

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 283) #26, !dbg !9289
  %8 = zext i8 %1 to i32, !dbg !9289
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.96, i32 0, i32 0), i32 noundef %8) #26, !dbg !9289
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 283) #26, !dbg !9289
  unreachable, !dbg !9289

9:                                                ; preds = %4
  ret void, !dbg !9294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9295 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9300, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i8 %1, metadata !9301, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 undef, metadata !9302, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 undef, metadata !9303, metadata !DIExpression()), !dbg !9305
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9306
  call void @llvm.dbg.value(metadata i8 %3, metadata !9304, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9305
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !9307
  call void @llvm.dbg.value(metadata i32 %4, metadata !9304, metadata !DIExpression()), !dbg !9305
  %5 = trunc i32 %4 to i8, !dbg !9308
  store i8 %5, i8* @static_regions_num, align 1, !dbg !9309
  ret i32 %4, !dbg !9310
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !9311 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9315, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i8 %1, metadata !9316, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i8 %2, metadata !9317, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i1 %3, metadata !9318, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9321
  %5 = zext i8 %2 to i32, !dbg !9322
  call void @llvm.dbg.value(metadata i32 %5, metadata !9320, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i32 0, metadata !9319, metadata !DIExpression()), !dbg !9321
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !9320, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i32 0, metadata !9319, metadata !DIExpression()), !dbg !9321
  %7 = icmp eq i8 %1, 0, !dbg !9323
  br i1 %7, label %30, label %8, !dbg !9326

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9320, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i32 %10, metadata !9319, metadata !DIExpression()), !dbg !9321
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !9327
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !9330
  %13 = load i32, i32* %12, align 4, !dbg !9330
  %14 = icmp eq i32 %13, 0, !dbg !9331
  br i1 %14, label %26, label %15, !dbg !9332

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !9333

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !9335
  %18 = icmp eq i32 %17, 0, !dbg !9335
  br i1 %18, label %19, label %20, !dbg !9336

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.97, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #26, !dbg !9337
  br label %30, !dbg !9343

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !9344
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !9345
  call void @llvm.dbg.value(metadata i32 %22, metadata !9320, metadata !DIExpression()), !dbg !9321
  %23 = icmp eq i32 %22, -22, !dbg !9346
  br i1 %23, label %30, label %24, !dbg !9348

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !9349
  call void @llvm.dbg.value(metadata i32 %25, metadata !9320, metadata !DIExpression()), !dbg !9321
  br label %26, !dbg !9350

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !9321
  call void @llvm.dbg.value(metadata i32 %27, metadata !9320, metadata !DIExpression()), !dbg !9321
  %28 = add nuw nsw i32 %10, 1, !dbg !9351
  call void @llvm.dbg.value(metadata i32 %28, metadata !9319, metadata !DIExpression()), !dbg !9321
  %29 = icmp eq i32 %28, %6, !dbg !9323
  br i1 %29, label %30, label %8, !dbg !9326, !llvm.loop !9352

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !9321
  ret i32 %31, !dbg !9354
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #19 !dbg !9355 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9359, metadata !DIExpression()), !dbg !9361
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !9362
  %3 = load i32, i32* %2, align 4, !dbg !9362
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !9363, !range !5828
  %5 = icmp ult i32 %4, 2, !dbg !9363
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !9364
  br i1 %7, label %8, label %15, !dbg !9364

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !9365
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !9366
  %11 = load i32, i32* %10, align 4, !dbg !9366
  %12 = and i32 %11, %9, !dbg !9367
  %13 = icmp eq i32 %12, 0, !dbg !9368
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9360, metadata !DIExpression()), !dbg !9361
  ret i32 %16, !dbg !9369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9370 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !9374, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !9375, metadata !DIExpression()), !dbg !9377
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !9378
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9378
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !9376, metadata !DIExpression()), !dbg !9379
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !9380
  %6 = load i32, i32* %5, align 4, !dbg !9380
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !9381
  store i32 %6, i32* %7, align 4, !dbg !9382
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !9383
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !9384
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !9385
  %11 = load i32, i32* %10, align 4, !dbg !9385
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #27, !dbg !9386
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !9387
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9388
  ret i32 %12, !dbg !9389
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #13 !dbg !9390 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !9397, metadata !DIExpression()), !dbg !9401
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !9398, metadata !DIExpression()), !dbg !9401
  call void @llvm.dbg.value(metadata i32 undef, metadata !9399, metadata !DIExpression()), !dbg !9401
  call void @llvm.dbg.value(metadata i32 %2, metadata !9400, metadata !DIExpression()), !dbg !9401
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !9402
  %5 = load i32, i32* %4, align 4, !dbg !9402
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !9403
  %7 = or i32 %6, %5, !dbg !9404
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !9405
  store i32 %7, i32* %8, align 4, !dbg !9406
  ret void, !dbg !9407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9408 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9412, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9413, metadata !DIExpression()), !dbg !9414
  %3 = zext i8 %0 to i32, !dbg !9415
  %4 = icmp ugt i8 %0, 7, !dbg !9417
  br i1 %4, label %5, label %6, !dbg !9418

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.98, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #26, !dbg !9419
  br label %7, !dbg !9425

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !9426
  br label %7, !dbg !9427

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9414
  ret i32 %8, !dbg !9428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #17 !dbg !9429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9433, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9434, metadata !DIExpression()), !dbg !9435
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !9436
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9437
  %4 = load i32, i32* %3, align 4, !dbg !9437
  %5 = and i32 %4, -32, !dbg !9438
  %6 = or i32 %5, %0, !dbg !9439
  %7 = or i32 %6, 16, !dbg !9439
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9440
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9441
  %9 = load i32, i32* %8, align 4, !dbg !9441
  %10 = or i32 %9, 1, !dbg !9442
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9443
  ret void, !dbg !9444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #17 !dbg !9445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9448, metadata !DIExpression()), !dbg !9449
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9450
  ret void, !dbg !9451
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #12 !dbg !9452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9456, metadata !DIExpression()), !dbg !9457
  %2 = icmp ult i32 %0, 33, !dbg !9458
  br i1 %2, label %11, label %3, !dbg !9460

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9461
  br i1 %4, label %11, label %5, !dbg !9463

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9464
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9465, !range !5828
  %8 = mul nsw i32 %7, -2, !dbg !9466
  %9 = add nsw i32 %8, 62, !dbg !9466
  %10 = and i32 %9, 62, !dbg !9467
  br label %11, !dbg !9468

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9457
  ret i32 %12, !dbg !9469
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9470 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9474, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata i8 %1, metadata !9475, metadata !DIExpression()), !dbg !9476
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !9477
  %4 = icmp eq i32 %3, -22, !dbg !9479
  br i1 %4, label %5, label %7, !dbg !9480

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 314) #26, !dbg !9481
  %6 = zext i8 %1 to i32, !dbg !9481
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.101, i32 0, i32 0), i32 noundef %6) #26, !dbg !9481
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 314) #26, !dbg !9481
  unreachable, !dbg !9481

7:                                                ; preds = %2
  ret void, !dbg !9486
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9487 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9491, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.value(metadata i8 %1, metadata !9492, metadata !DIExpression()), !dbg !9498
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9499
  call void @llvm.dbg.value(metadata i8 %3, metadata !9493, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9498
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !9500
  call void @llvm.dbg.value(metadata i32 %4, metadata !9493, metadata !DIExpression()), !dbg !9498
  %5 = icmp ne i32 %4, -22, !dbg !9501
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9502
  call void @llvm.dbg.value(metadata i32 %4, metadata !9494, metadata !DIExpression()), !dbg !9503
  br i1 %7, label %8, label %12, !dbg !9502

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9494, metadata !DIExpression()), !dbg !9503
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !9504
  %10 = add i32 %9, 1, !dbg !9507
  call void @llvm.dbg.value(metadata i32 %10, metadata !9494, metadata !DIExpression()), !dbg !9503
  %11 = icmp eq i32 %10, 8, !dbg !9508
  br i1 %11, label %12, label %8, !dbg !9509, !llvm.loop !9510

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !9512
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #17 !dbg !9513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9516, metadata !DIExpression()), !dbg !9517
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9518
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9519
  ret void, !dbg !9520
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9521 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9526
  %2 = icmp ugt i32 %1, 8, !dbg !9528
  br i1 %2, label %3, label %4, !dbg !9529

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 341) #26, !dbg !9530
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.102, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #26, !dbg !9530
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 341) #26, !dbg !9530
  unreachable, !dbg !9530

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !9535
  call void @llvm.dbg.value(metadata i32 0, metadata !9525, metadata !DIExpression()), !dbg !9536
  %5 = icmp eq i32 %1, 0, !dbg !9537
  br i1 %5, label %13, label %6, !dbg !9540

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !9540

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9525, metadata !DIExpression()), !dbg !9536
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !9541
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #27, !dbg !9543
  %11 = add nuw i32 %9, 1, !dbg !9544
  call void @llvm.dbg.value(metadata i32 %11, metadata !9525, metadata !DIExpression()), !dbg !9536
  %12 = icmp eq i32 %11, %1, !dbg !9537
  br i1 %12, label %13, label %8, !dbg !9540, !llvm.loop !9545

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !9547
  store i8 %14, i8* @static_regions_num, align 1, !dbg !9548
  tail call void @arm_core_mpu_enable() #27, !dbg !9549
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !9550
  %16 = and i32 %15, 65280, !dbg !9550
  %17 = icmp eq i32 %16, 2048, !dbg !9550
  br i1 %17, label %19, label %18, !dbg !9553

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 435) #26, !dbg !9554
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.104, i32 0, i32 0)) #26, !dbg !9554
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 435) #26, !dbg !9554
  unreachable, !dbg !9554

19:                                               ; preds = %13
  ret i32 0, !dbg !9556
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9557 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9564, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata i8* %1, metadata !9565, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata i8* %0, metadata !9566, metadata !DIExpression()), !dbg !9567
  %3 = load i8, i8* %1, align 1, !dbg !9568
  %4 = icmp eq i8 %3, 0, !dbg !9569
  br i1 %4, label %13, label %5, !dbg !9570

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9564, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata i8* %8, metadata !9565, metadata !DIExpression()), !dbg !9567
  store i8 %6, i8* %7, align 1, !dbg !9571
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9573
  call void @llvm.dbg.value(metadata i8* %9, metadata !9564, metadata !DIExpression()), !dbg !9567
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9574
  call void @llvm.dbg.value(metadata i8* %10, metadata !9565, metadata !DIExpression()), !dbg !9567
  %11 = load i8, i8* %10, align 1, !dbg !9568
  %12 = icmp eq i8 %11, 0, !dbg !9569
  br i1 %12, label %13, label %5, !dbg !9570, !llvm.loop !9575

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9577
  ret i8* %0, !dbg !9578
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9579 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9583, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.value(metadata i8* %1, metadata !9584, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.value(metadata i32 %2, metadata !9585, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.value(metadata i8* %0, metadata !9586, metadata !DIExpression()), !dbg !9587
  %4 = icmp eq i32 %2, 0, !dbg !9588
  br i1 %4, label %22, label %5, !dbg !9589

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9583, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.value(metadata i32 %7, metadata !9585, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.value(metadata i8* %8, metadata !9584, metadata !DIExpression()), !dbg !9587
  %9 = load i8, i8* %8, align 1, !dbg !9590
  %10 = icmp eq i8 %9, 0, !dbg !9591
  br i1 %10, label %16, label %11, !dbg !9592

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9593
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9595
  call void @llvm.dbg.value(metadata i8* %12, metadata !9584, metadata !DIExpression()), !dbg !9587
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9596
  call void @llvm.dbg.value(metadata i8* %13, metadata !9583, metadata !DIExpression()), !dbg !9587
  %14 = add i32 %7, -1, !dbg !9597
  call void @llvm.dbg.value(metadata i32 %14, metadata !9585, metadata !DIExpression()), !dbg !9587
  %15 = icmp eq i32 %14, 0, !dbg !9588
  br i1 %15, label %22, label %5, !dbg !9589, !llvm.loop !9598

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9583, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.value(metadata i32 %18, metadata !9585, metadata !DIExpression()), !dbg !9587
  store i8 0, i8* %17, align 1, !dbg !9600
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9602
  call void @llvm.dbg.value(metadata i8* %19, metadata !9583, metadata !DIExpression()), !dbg !9587
  %20 = add i32 %18, -1, !dbg !9603
  call void @llvm.dbg.value(metadata i32 %20, metadata !9585, metadata !DIExpression()), !dbg !9587
  %21 = icmp eq i32 %20, 0, !dbg !9604
  br i1 %21, label %22, label %16, !dbg !9605, !llvm.loop !9606

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9608
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9609 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9613, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.value(metadata i32 %1, metadata !9614, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.value(metadata i32 %1, metadata !9615, metadata !DIExpression()), !dbg !9616
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9617

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9613, metadata !DIExpression()), !dbg !9616
  %6 = load i8, i8* %5, align 1, !dbg !9618
  %7 = icmp eq i8 %6, %3, !dbg !9619
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9620
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9621
  call void @llvm.dbg.value(metadata i8* %10, metadata !9613, metadata !DIExpression()), !dbg !9616
  br i1 %9, label %11, label %4, !dbg !9620, !llvm.loop !9623

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9625
  ret i8* %12, !dbg !9626
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9627 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9629, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %1, metadata !9630, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i8* null, metadata !9631, metadata !DIExpression()), !dbg !9632
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9633

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9632
  call void @llvm.dbg.value(metadata i8* %6, metadata !9631, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i8* %5, metadata !9629, metadata !DIExpression()), !dbg !9632
  %7 = load i8, i8* %5, align 1, !dbg !9634
  %8 = icmp eq i8 %7, %3, !dbg !9637
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9638
  call void @llvm.dbg.value(metadata i8* %9, metadata !9631, metadata !DIExpression()), !dbg !9632
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9639
  call void @llvm.dbg.value(metadata i8* %10, metadata !9629, metadata !DIExpression()), !dbg !9632
  %11 = icmp eq i8 %7, 0, !dbg !9640
  br i1 %11, label %12, label %4, !dbg !9640, !llvm.loop !9641

12:                                               ; preds = %4
  ret i8* %9, !dbg !9643
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !9644 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9648, metadata !DIExpression()), !dbg !9650
  call void @llvm.dbg.value(metadata i32 0, metadata !9649, metadata !DIExpression()), !dbg !9650
  %2 = load i8, i8* %0, align 1, !dbg !9651
  %3 = icmp eq i8 %2, 0, !dbg !9652
  br i1 %3, label %11, label %4, !dbg !9653

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9649, metadata !DIExpression()), !dbg !9650
  call void @llvm.dbg.value(metadata i8* %6, metadata !9648, metadata !DIExpression()), !dbg !9650
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9654
  call void @llvm.dbg.value(metadata i8* %7, metadata !9648, metadata !DIExpression()), !dbg !9650
  %8 = add i32 %5, 1, !dbg !9656
  call void @llvm.dbg.value(metadata i32 %8, metadata !9649, metadata !DIExpression()), !dbg !9650
  %9 = load i8, i8* %7, align 1, !dbg !9651
  %10 = icmp eq i8 %9, 0, !dbg !9652
  br i1 %10, label %11, label %4, !dbg !9653, !llvm.loop !9657

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9650
  ret i32 %12, !dbg !9659
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9660 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9664, metadata !DIExpression()), !dbg !9667
  call void @llvm.dbg.value(metadata i32 %1, metadata !9665, metadata !DIExpression()), !dbg !9667
  call void @llvm.dbg.value(metadata i32 0, metadata !9666, metadata !DIExpression()), !dbg !9667
  %3 = load i8, i8* %0, align 1, !dbg !9668
  %4 = icmp ne i8 %3, 0, !dbg !9669
  %5 = icmp ne i32 %1, 0, !dbg !9670
  %6 = and i1 %4, %5, !dbg !9670
  br i1 %6, label %7, label %16, !dbg !9671

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9666, metadata !DIExpression()), !dbg !9667
  call void @llvm.dbg.value(metadata i8* %9, metadata !9664, metadata !DIExpression()), !dbg !9667
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9672
  call void @llvm.dbg.value(metadata i8* %10, metadata !9664, metadata !DIExpression()), !dbg !9667
  %11 = add nuw i32 %8, 1, !dbg !9674
  call void @llvm.dbg.value(metadata i32 %11, metadata !9666, metadata !DIExpression()), !dbg !9667
  %12 = load i8, i8* %10, align 1, !dbg !9668
  %13 = icmp ne i8 %12, 0, !dbg !9669
  %14 = icmp ult i32 %11, %1, !dbg !9670
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9670
  br i1 %15, label %7, label %16, !dbg !9671, !llvm.loop !9675

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9667
  ret i32 %17, !dbg !9677
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !9678 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9682, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.value(metadata i8* %1, metadata !9683, metadata !DIExpression()), !dbg !9684
  %3 = load i8, i8* %0, align 1, !dbg !9685
  %4 = load i8, i8* %1, align 1, !dbg !9686
  %5 = icmp ne i8 %3, %4, !dbg !9687
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9688
  br i1 %7, label %18, label %8, !dbg !9688

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9683, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.value(metadata i8* %10, metadata !9682, metadata !DIExpression()), !dbg !9684
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9689
  call void @llvm.dbg.value(metadata i8* %11, metadata !9682, metadata !DIExpression()), !dbg !9684
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9691
  call void @llvm.dbg.value(metadata i8* %12, metadata !9683, metadata !DIExpression()), !dbg !9684
  %13 = load i8, i8* %11, align 1, !dbg !9685
  %14 = load i8, i8* %12, align 1, !dbg !9686
  %15 = icmp ne i8 %13, %14, !dbg !9687
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9688
  br i1 %17, label %18, label %8, !dbg !9688, !llvm.loop !9692

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9685
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9686
  %21 = zext i8 %19 to i32, !dbg !9695
  %22 = zext i8 %20 to i32, !dbg !9696
  %23 = sub nsw i32 %21, %22, !dbg !9697
  ret i32 %23, !dbg !9698
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9699 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9703, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i8* %1, metadata !9704, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i32 %2, metadata !9705, metadata !DIExpression()), !dbg !9706
  %4 = icmp eq i32 %2, 0, !dbg !9707
  br i1 %4, label %23, label %5, !dbg !9707

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9705, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i8* %7, metadata !9704, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i8* %8, metadata !9703, metadata !DIExpression()), !dbg !9706
  %9 = load i8, i8* %8, align 1, !dbg !9708
  %10 = load i8, i8* %7, align 1, !dbg !9709
  %11 = icmp ne i8 %9, %10, !dbg !9710
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9711
  br i1 %13, label %19, label %14, !dbg !9711

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9712
  call void @llvm.dbg.value(metadata i8* %15, metadata !9703, metadata !DIExpression()), !dbg !9706
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9714
  call void @llvm.dbg.value(metadata i8* %16, metadata !9704, metadata !DIExpression()), !dbg !9706
  %17 = add i32 %6, -1, !dbg !9715
  call void @llvm.dbg.value(metadata i32 %17, metadata !9705, metadata !DIExpression()), !dbg !9706
  %18 = icmp eq i32 %17, 0, !dbg !9707
  br i1 %18, label %23, label %5, !dbg !9707, !llvm.loop !9716

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9719
  %21 = zext i8 %10 to i32, !dbg !9720
  %22 = sub nsw i32 %20, %21, !dbg !9721
  br label %23, !dbg !9722

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9722
  ret i32 %24, !dbg !9723
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !9724 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9728, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.value(metadata i8* %1, metadata !9729, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.value(metadata i8** %2, metadata !9730, metadata !DIExpression()), !dbg !9733
  %4 = icmp eq i8* %0, null, !dbg !9734
  br i1 %4, label %5, label %7, !dbg !9734

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9735
  br label %7, !dbg !9734

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9734
  call void @llvm.dbg.value(metadata i8* %8, metadata !9731, metadata !DIExpression()), !dbg !9733
  %9 = load i8, i8* %8, align 1, !dbg !9736
  %10 = icmp eq i8 %9, 0, !dbg !9736
  br i1 %10, label %33, label %11, !dbg !9737

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9731, metadata !DIExpression()), !dbg !9733
  %14 = zext i8 %12 to i32, !dbg !9736
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !9738
  %16 = icmp eq i8* %15, null, !dbg !9737
  br i1 %16, label %21, label %17, !dbg !9739

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9740
  call void @llvm.dbg.value(metadata i8* %18, metadata !9731, metadata !DIExpression()), !dbg !9733
  %19 = load i8, i8* %18, align 1, !dbg !9736
  %20 = icmp eq i8 %19, 0, !dbg !9736
  br i1 %20, label %33, label %11, !dbg !9737, !llvm.loop !9742

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9732, metadata !DIExpression()), !dbg !9733
  %24 = zext i8 %22 to i32, !dbg !9744
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !9745
  %26 = icmp eq i8* %25, null, !dbg !9746
  br i1 %26, label %27, label %31, !dbg !9747

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9748
  call void @llvm.dbg.value(metadata i8* %28, metadata !9732, metadata !DIExpression()), !dbg !9733
  %29 = load i8, i8* %28, align 1, !dbg !9744
  %30 = icmp eq i8 %29, 0, !dbg !9744
  br i1 %30, label %33, label %21, !dbg !9750, !llvm.loop !9751

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9753
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9756
  br label %33, !dbg !9757

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9733
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9733
  store i8* %34, i8** %2, align 4, !dbg !9733
  ret i8* %35, !dbg !9758
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9759 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9761, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.value(metadata i8* %1, metadata !9762, metadata !DIExpression()), !dbg !9763
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9764
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9765
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !9766
  ret i8* %0, !dbg !9767
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9768 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9770, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i8* %1, metadata !9771, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i32 %2, metadata !9772, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i8* %0, metadata !9773, metadata !DIExpression()), !dbg !9775
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9776
  call void @llvm.dbg.value(metadata i32 %4, metadata !9774, metadata !DIExpression()), !dbg !9775
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9777
  call void @llvm.dbg.value(metadata i8* %5, metadata !9770, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i8* %1, metadata !9771, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i32 %2, metadata !9772, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i32 %2, metadata !9772, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9775
  %6 = icmp eq i32 %2, 0, !dbg !9778
  br i1 %6, label %18, label %7, !dbg !9779

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9780
  call void @llvm.dbg.value(metadata i8* %9, metadata !9770, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i8* %10, metadata !9771, metadata !DIExpression()), !dbg !9775
  %12 = load i8, i8* %10, align 1, !dbg !9781
  %13 = icmp eq i8 %12, 0, !dbg !9782
  br i1 %13, label %18, label %14, !dbg !9783

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9784
  call void @llvm.dbg.value(metadata i8* %15, metadata !9771, metadata !DIExpression()), !dbg !9775
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9786
  call void @llvm.dbg.value(metadata i8* %16, metadata !9770, metadata !DIExpression()), !dbg !9775
  store i8 %12, i8* %9, align 1, !dbg !9787
  call void @llvm.dbg.value(metadata i32 %11, metadata !9772, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i32 %11, metadata !9772, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9775
  %17 = icmp eq i32 %11, 0, !dbg !9778
  br i1 %17, label %18, label %7, !dbg !9779, !llvm.loop !9788

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9775
  store i8 0, i8* %19, align 1, !dbg !9790
  ret i8* %0, !dbg !9791
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9792 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9796, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i8* %1, metadata !9797, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i32 %2, metadata !9798, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i8* %0, metadata !9799, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i8* %1, metadata !9800, metadata !DIExpression()), !dbg !9801
  %4 = icmp eq i32 %2, 0, !dbg !9802
  br i1 %4, label %31, label %5, !dbg !9804

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9800, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i8* %0, metadata !9799, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i32 %2, metadata !9798, metadata !DIExpression()), !dbg !9801
  %6 = add i32 %2, -1, !dbg !9805
  call void @llvm.dbg.value(metadata i32 %6, metadata !9798, metadata !DIExpression()), !dbg !9801
  %7 = icmp eq i32 %6, 0, !dbg !9806
  br i1 %7, label %23, label %8, !dbg !9807

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9808
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9808
  br label %11, !dbg !9808

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9800, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i8* %14, metadata !9799, metadata !DIExpression()), !dbg !9801
  %15 = load i8, i8* %14, align 1, !dbg !9809
  %16 = load i8, i8* %13, align 1, !dbg !9810
  %17 = icmp eq i8 %15, %16, !dbg !9811
  br i1 %17, label %18, label %23, !dbg !9808

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9812
  call void @llvm.dbg.value(metadata i8* %19, metadata !9799, metadata !DIExpression()), !dbg !9801
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9814
  call void @llvm.dbg.value(metadata i8* %20, metadata !9800, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i32 %12, metadata !9798, metadata !DIExpression()), !dbg !9801
  %21 = add i32 %12, -1, !dbg !9805
  call void @llvm.dbg.value(metadata i32 %21, metadata !9798, metadata !DIExpression()), !dbg !9801
  %22 = icmp eq i32 %21, 0, !dbg !9806
  br i1 %22, label %23, label %11, !dbg !9807, !llvm.loop !9815

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9801
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9801
  %26 = load i8, i8* %24, align 1, !dbg !9817
  %27 = zext i8 %26 to i32, !dbg !9817
  %28 = load i8, i8* %25, align 1, !dbg !9818
  %29 = zext i8 %28 to i32, !dbg !9818
  %30 = sub nsw i32 %27, %29, !dbg !9819
  br label %31, !dbg !9820

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9801
  ret i32 %32, !dbg !9821
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9822 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9826, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i8* %1, metadata !9827, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i32 %2, metadata !9828, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i8* %0, metadata !9829, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i8* %1, metadata !9830, metadata !DIExpression()), !dbg !9831
  %4 = ptrtoint i8* %0 to i32, !dbg !9832
  %5 = ptrtoint i8* %1 to i32, !dbg !9832
  %6 = sub i32 %4, %5, !dbg !9832
  %7 = icmp ult i32 %6, %2, !dbg !9834
  br i1 %7, label %10, label %8, !dbg !9835

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9830, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i8* %0, metadata !9829, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i32 %2, metadata !9828, metadata !DIExpression()), !dbg !9831
  %9 = icmp eq i32 %2, 0, !dbg !9836
  br i1 %9, label %26, label %17, !dbg !9838

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9828, metadata !DIExpression()), !dbg !9831
  %12 = add i32 %11, -1, !dbg !9839
  call void @llvm.dbg.value(metadata i32 %12, metadata !9828, metadata !DIExpression()), !dbg !9831
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9842
  %14 = load i8, i8* %13, align 1, !dbg !9842
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9843
  store i8 %14, i8* %15, align 1, !dbg !9844
  %16 = icmp eq i32 %12, 0, !dbg !9845
  br i1 %16, label %26, label %10, !dbg !9846, !llvm.loop !9847

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9830, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i8* %19, metadata !9829, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i32 %20, metadata !9828, metadata !DIExpression()), !dbg !9831
  %21 = load i8, i8* %18, align 1, !dbg !9849
  store i8 %21, i8* %19, align 1, !dbg !9851
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9852
  call void @llvm.dbg.value(metadata i8* %22, metadata !9829, metadata !DIExpression()), !dbg !9831
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9853
  call void @llvm.dbg.value(metadata i8* %23, metadata !9830, metadata !DIExpression()), !dbg !9831
  %24 = add i32 %20, -1, !dbg !9854
  call void @llvm.dbg.value(metadata i32 %24, metadata !9828, metadata !DIExpression()), !dbg !9831
  %25 = icmp eq i32 %24, 0, !dbg !9836
  br i1 %25, label %26, label %17, !dbg !9838, !llvm.loop !9855

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9857
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9858 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9864, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.value(metadata i8* %1, metadata !9865, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.value(metadata i32 %2, metadata !9866, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.value(metadata i8* %0, metadata !9867, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.value(metadata i8* %1, metadata !9868, metadata !DIExpression()), !dbg !9869
  %4 = icmp eq i32 %2, 0, !dbg !9870
  br i1 %4, label %14, label %5, !dbg !9871

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9868, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.value(metadata i8* %7, metadata !9867, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.value(metadata i32 %8, metadata !9866, metadata !DIExpression()), !dbg !9869
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9872
  call void @llvm.dbg.value(metadata i8* %9, metadata !9868, metadata !DIExpression()), !dbg !9869
  %10 = load i8, i8* %6, align 1, !dbg !9874
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9875
  call void @llvm.dbg.value(metadata i8* %11, metadata !9867, metadata !DIExpression()), !dbg !9869
  store i8 %10, i8* %7, align 1, !dbg !9876
  %12 = add i32 %8, -1, !dbg !9877
  call void @llvm.dbg.value(metadata i32 %12, metadata !9866, metadata !DIExpression()), !dbg !9869
  %13 = icmp eq i32 %12, 0, !dbg !9870
  br i1 %13, label %14, label %5, !dbg !9871, !llvm.loop !9878

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9880
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !9881 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9885, metadata !DIExpression()), !dbg !9890
  call void @llvm.dbg.value(metadata i32 %1, metadata !9886, metadata !DIExpression()), !dbg !9890
  call void @llvm.dbg.value(metadata i32 %2, metadata !9887, metadata !DIExpression()), !dbg !9890
  call void @llvm.dbg.value(metadata i8* %0, metadata !9888, metadata !DIExpression()), !dbg !9890
  %4 = trunc i32 %1 to i8, !dbg !9891
  call void @llvm.dbg.value(metadata i8 %4, metadata !9889, metadata !DIExpression()), !dbg !9890
  call void @llvm.dbg.value(metadata i32 %2, metadata !9887, metadata !DIExpression()), !dbg !9890
  call void @llvm.dbg.value(metadata i8* %0, metadata !9888, metadata !DIExpression()), !dbg !9890
  %5 = icmp eq i32 %2, 0, !dbg !9892
  br i1 %5, label %12, label %6, !dbg !9893

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9887, metadata !DIExpression()), !dbg !9890
  call void @llvm.dbg.value(metadata i8* %8, metadata !9888, metadata !DIExpression()), !dbg !9890
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9894
  call void @llvm.dbg.value(metadata i8* %9, metadata !9888, metadata !DIExpression()), !dbg !9890
  store i8 %4, i8* %8, align 1, !dbg !9896
  %10 = add i32 %7, -1, !dbg !9897
  call void @llvm.dbg.value(metadata i32 %10, metadata !9887, metadata !DIExpression()), !dbg !9890
  %11 = icmp eq i32 %10, 0, !dbg !9892
  br i1 %11, label %12, label %6, !dbg !9893, !llvm.loop !9898

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9900
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9901 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9905, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i32 %1, metadata !9906, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i32 %2, metadata !9907, metadata !DIExpression()), !dbg !9911
  %4 = icmp eq i32 %2, 0, !dbg !9912
  br i1 %4, label %17, label %5, !dbg !9913

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9914

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9915
  call void @llvm.dbg.value(metadata i8* %9, metadata !9908, metadata !DIExpression()), !dbg !9915
  call void @llvm.dbg.value(metadata i32 %8, metadata !9907, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i8* %9, metadata !9908, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9915
  %10 = load i8, i8* %9, align 1, !dbg !9916
  %11 = icmp eq i8 %10, %6, !dbg !9919
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9920
  call void @llvm.dbg.value(metadata i8* %12, metadata !9908, metadata !DIExpression()), !dbg !9915
  call void @llvm.dbg.value(metadata i32 %13, metadata !9907, metadata !DIExpression()), !dbg !9911
  br i1 %15, label %16, label %7, !dbg !9920, !llvm.loop !9921

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9923

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9911
  ret i8* %19, !dbg !9924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !9925 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9927, metadata !DIExpression()), !dbg !9928
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9929
  ret void, !dbg !9930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #6 !dbg !9931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9933, metadata !DIExpression()), !dbg !9934
  ret i32 -1, !dbg !9935
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9940, metadata !DIExpression()), !dbg !9942
  call void @llvm.dbg.value(metadata i32* %1, metadata !9941, metadata !DIExpression()), !dbg !9942
  %3 = ptrtoint i32* %1 to i32, !dbg !9943
  %4 = and i32 %3, -2, !dbg !9943
  %5 = icmp eq i32 %4, 2, !dbg !9943
  br i1 %5, label %6, label %9, !dbg !9943

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9944
  %8 = tail call i32 %7(i32 noundef %0) #26, !dbg !9944
  br label %9, !dbg !9945

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9945
  ret i32 %10, !dbg !9946
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9949, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata i32* %1, metadata !9950, metadata !DIExpression()), !dbg !9951
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !9952
  ret i32 %3, !dbg !9953
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9957, metadata !DIExpression()), !dbg !9959
  call void @llvm.dbg.value(metadata i32* %1, metadata !9958, metadata !DIExpression()), !dbg !9959
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9960, !srcloc !9962
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !9963
  ret i32 %3, !dbg !9964
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9965 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9970, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.value(metadata i32* %1, metadata !9971, metadata !DIExpression()), !dbg !9974
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9975
  call void @llvm.dbg.value(metadata i32 %3, metadata !9972, metadata !DIExpression()), !dbg !9974
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !9976
  call void @llvm.dbg.value(metadata i32 %4, metadata !9973, metadata !DIExpression()), !dbg !9974
  %5 = icmp ne i32 %3, %4, !dbg !9977
  %6 = sext i1 %5 to i32, !dbg !9978
  ret i32 %6, !dbg !9979
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9980 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9984, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.value(metadata i32 %1, metadata !9985, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.value(metadata i32 %2, metadata !9986, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.value(metadata i32* %3, metadata !9987, metadata !DIExpression()), !dbg !9988
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !9989
  ret i32 %5, !dbg !9990
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9991 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9993, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i32 %1, metadata !9994, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i32 %2, metadata !9995, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i32* %3, metadata !9996, metadata !DIExpression()), !dbg !9997
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9998, !srcloc !10000
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !10001
  ret i32 %5, !dbg !10002
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !10003 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10005, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata i32 %1, metadata !10006, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata i32 %2, metadata !10007, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata i32* %3, metadata !10008, metadata !DIExpression()), !dbg !10013
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !10014
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !10016
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !10016
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !10016
  br i1 %11, label %33, label %12, !dbg !10016

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !10013
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !10013
  call void @llvm.dbg.value(metadata i8* %14, metadata !10011, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata i32 %13, metadata !10009, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata i32 %1, metadata !10010, metadata !DIExpression()), !dbg !10013
  br label %15, !dbg !10017

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !10019
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !10013
  call void @llvm.dbg.value(metadata i8* %17, metadata !10011, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata i32 %16, metadata !10010, metadata !DIExpression()), !dbg !10013
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10020
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !10023
  call void @llvm.dbg.value(metadata i8* %19, metadata !10011, metadata !DIExpression()), !dbg !10013
  %20 = load i8, i8* %17, align 1, !dbg !10024
  %21 = zext i8 %20 to i32, !dbg !10025
  %22 = tail call i32 %18(i32 noundef %21) #26, !dbg !10020
  %23 = icmp eq i32 %22, -1, !dbg !10026
  br i1 %23, label %30, label %24, !dbg !10027

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !10028
  call void @llvm.dbg.value(metadata i32 %25, metadata !10010, metadata !DIExpression()), !dbg !10013
  %26 = icmp eq i32 %25, 0, !dbg !10029
  br i1 %26, label %27, label %15, !dbg !10030, !llvm.loop !10031

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !10033
  call void @llvm.dbg.value(metadata i32 %28, metadata !10009, metadata !DIExpression()), !dbg !10013
  %29 = icmp eq i32 %28, 0, !dbg !10034
  br i1 %29, label %30, label %12, !dbg !10035, !llvm.loop !10036

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !10013
  call void @llvm.dbg.value(metadata i32 %31, metadata !10009, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.label(metadata !10012), !dbg !10039
  %32 = sub i32 %2, %31, !dbg !10040
  br label %33, !dbg !10041

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !10013
  ret i32 %34, !dbg !10042
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !10043 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10047, metadata !DIExpression()), !dbg !10048
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !10049
  %3 = icmp eq i32 %2, -1, !dbg !10051
  br i1 %3, label %8, label %4, !dbg !10052

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !10053
  %6 = icmp eq i32 %5, -1, !dbg !10054
  %7 = sext i1 %6 to i32, !dbg !10053
  br label %8, !dbg !10055

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !10048
  ret i32 %9, !dbg !10056
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10057 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10059, metadata !DIExpression()), !dbg !10070
  %8 = bitcast i64* %2 to i8*, !dbg !10071
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #25, !dbg !10071
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !10060, metadata !DIExpression()), !dbg !10072
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !10072
  store i64 %9, i64* %2, align 8, !dbg !10072
  %10 = bitcast i64* %4 to i8*, !dbg !10073
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #25, !dbg !10073
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !10068, metadata !DIExpression()), !dbg !10074
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !10074
  store i64 %11, i64* %4, align 8, !dbg !10074
  %12 = bitcast i64* %6 to i8*, !dbg !10075
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #25, !dbg !10075
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !10069, metadata !DIExpression()), !dbg !10076
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !10076
  store i64 %13, i64* %6, align 8, !dbg !10076
  %14 = trunc i64 %9 to i32, !dbg !10077
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !10077
  %16 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %15) #27, !dbg !10079
  %17 = trunc i64 %13 to i32, !dbg !10080
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !10080
  br i1 %16, label %19, label %26, !dbg !10080

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !10080
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !10080
  %22 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %21) #27, !dbg !10081
  br i1 %22, label %23, label %26, !dbg !10082

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %18) #27, !dbg !10083
  br i1 %24, label %25, label %26, !dbg !10084

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #27, !dbg !10085
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #27, !dbg !10086
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #27, !dbg !10087
  br label %26, !dbg !10088

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !10070
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #25, !dbg !10089
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #25, !dbg !10089
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #25, !dbg !10089
  ret i32 %27, !dbg !10089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !10090 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10095, metadata !DIExpression()), !dbg !10096
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10097, !srcloc !10099
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #27, !dbg !10100
  ret i1 %2, !dbg !10101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10102 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !10107, metadata !DIExpression()), !dbg !10109
  call void @llvm.dbg.value(metadata i32 %1, metadata !10108, metadata !DIExpression()), !dbg !10109
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !10110
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !10110
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !10111
  %6 = load i8, i8* %5, align 4, !dbg !10111
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !10112
  %8 = load i16, i16* %7, align 2, !dbg !10112
  %9 = zext i16 %8 to i32, !dbg !10113
  %10 = or i32 %9, %1, !dbg !10114
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #27, !dbg !10115
  ret void, !dbg !10116
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !10117 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10120, metadata !DIExpression()), !dbg !10123
  call void @llvm.dbg.value(metadata i8 %1, metadata !10121, metadata !DIExpression()), !dbg !10123
  call void @llvm.dbg.value(metadata i32 %2, metadata !10122, metadata !DIExpression()), !dbg !10123
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10124, !srcloc !10126
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #27, !dbg !10127
  ret void, !dbg !10128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !10129 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10131, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.value(metadata i8 %1, metadata !10132, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.value(metadata i32 %2, metadata !10133, metadata !DIExpression()), !dbg !10138
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10139
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !10139
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !10139
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !10134, metadata !DIExpression()), !dbg !10138
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10140
  %8 = bitcast i8** %7 to %struct.k_spinlock**, !dbg !10140
  %9 = load %struct.k_spinlock*, %struct.k_spinlock** %8, align 4, !dbg !10140
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !10135, metadata !DIExpression()), !dbg !10138
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10141
  %11 = bitcast i8** %10 to %struct.k_spinlock**, !dbg !10141
  %12 = load %struct.k_spinlock*, %struct.k_spinlock** %11, align 4, !dbg !10141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %12, metadata !10137, metadata !DIExpression()), !dbg !10138
  %13 = and i32 %2, 132120576, !dbg !10142
  %14 = icmp eq i32 %13, 0, !dbg !10142
  br i1 %14, label %16, label %15, !dbg !10145

15:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef 679) #26, !dbg !10146
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13.119, i32 0, i32 0)) #26, !dbg !10146
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef 679) #26, !dbg !10146
  unreachable, !dbg !10146

16:                                               ; preds = %3
  %17 = and i32 %2, 48, !dbg !10148
  %18 = icmp eq i32 %17, 48, !dbg !10148
  br i1 %18, label %19, label %20, !dbg !10151

19:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.14.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef 683) #26, !dbg !10152
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.15.121, i32 0, i32 0)) #26, !dbg !10152
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef 683) #26, !dbg !10152
  unreachable, !dbg !10152

20:                                               ; preds = %16
  %21 = and i32 %2, 131072, !dbg !10154
  %22 = icmp ne i32 %21, 0, !dbg !10154
  %23 = and i32 %2, 131074, !dbg !10154
  %24 = icmp eq i32 %23, 2, !dbg !10154
  br i1 %24, label %25, label %26, !dbg !10154

25:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef 687) #26, !dbg !10157
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.17.123, i32 0, i32 0)) #26, !dbg !10157
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef 687) #26, !dbg !10157
  unreachable, !dbg !10157

26:                                               ; preds = %20
  %27 = and i32 %2, 6, !dbg !10159
  %28 = icmp eq i32 %27, 4, !dbg !10159
  br i1 %28, label %29, label %30, !dbg !10159

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18.124, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef 690) #26, !dbg !10162
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef 690) #26, !dbg !10162
  unreachable, !dbg !10162

30:                                               ; preds = %26
  %31 = and i32 %2, 786432, !dbg !10164
  %32 = icmp eq i32 %31, 0, !dbg !10164
  %33 = or i1 %32, %22, !dbg !10164
  br i1 %33, label %35, label %34, !dbg !10164

34:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef 694) #26, !dbg !10167
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20.126, i32 0, i32 0)) #26, !dbg !10167
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef 694) #26, !dbg !10167
  unreachable, !dbg !10167

35:                                               ; preds = %30
  %36 = icmp eq i32 %31, 786432, !dbg !10169
  br i1 %36, label %37, label %38, !dbg !10172

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.21.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef 698) #26, !dbg !10173
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22.128, i32 0, i32 0)) #26, !dbg !10173
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef 698) #26, !dbg !10173
  unreachable, !dbg !10173

38:                                               ; preds = %35
  %39 = and i32 %2, 1048577, !dbg !10175
  %40 = icmp ne i32 %39, 1048577, !dbg !10175
  %41 = or i1 %40, %32, !dbg !10175
  %42 = xor i32 %2, 786432, !dbg !10175
  %43 = select i1 %41, i32 %2, i32 %42, !dbg !10175
  call void @llvm.dbg.value(metadata i32 %43, metadata !10133, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.value(metadata i32 %43, metadata !10133, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !10138
  %44 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %9, i32 0, i32 0, !dbg !10177
  %45 = load i32, i32* %44, align 4, !dbg !10177
  %46 = zext i8 %1 to i32, !dbg !10177
  %47 = shl nuw i32 1, %46, !dbg !10177
  %48 = and i32 %45, %47, !dbg !10177
  %49 = icmp eq i32 %48, 0, !dbg !10177
  br i1 %49, label %50, label %51, !dbg !10180

50:                                               ; preds = %38
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef 709) #26, !dbg !10181
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.130, i32 0, i32 0)) #26, !dbg !10181
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.118, i32 0, i32 0), i32 noundef 709) #26, !dbg !10181
  unreachable, !dbg !10181

51:                                               ; preds = %38
  %52 = and i32 %43, 1, !dbg !10183
  %53 = icmp eq i32 %52, 0, !dbg !10185
  br i1 %53, label %58, label %54, !dbg !10186

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !10187
  %56 = load i32, i32* %55, align 4, !dbg !10189
  %57 = or i32 %56, %47, !dbg !10189
  store i32 %57, i32* %55, align 4, !dbg !10189
  br label %63, !dbg !10190

58:                                               ; preds = %51
  %59 = xor i32 %47, -1, !dbg !10191
  %60 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !10193
  %61 = load i32, i32* %60, align 4, !dbg !10194
  %62 = and i32 %61, %59, !dbg !10194
  store i32 %62, i32* %60, align 4, !dbg !10194
  br label %63

63:                                               ; preds = %58, %54
  %64 = and i32 %43, -1048577, !dbg !10195
  call void @llvm.dbg.value(metadata i32 %64, metadata !10133, metadata !DIExpression()), !dbg !10138
  %65 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !10196
  %66 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %65, align 4, !dbg !10196
  %67 = tail call i32 %66(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %64) #26, !dbg !10197
  ret void, !dbg !10198
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !10199 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10201, metadata !DIExpression()), !dbg !10202
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10203
  ret i1 %2, !dbg !10204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !10205 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !10213, metadata !DIExpression()), !dbg !10215
  %3 = tail call i64 @sys_clock_tick_get() #26, !dbg !10216
  call void @llvm.dbg.value(metadata i64 %3, metadata !10214, metadata !DIExpression()), !dbg !10215
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !10217
  %5 = sub i64 %1, %3, !dbg !10217
  store i64 %5, i64* %4, align 8, !dbg !10217
  ret void, !dbg !10218
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel.18* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10219 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10225, metadata !DIExpression()), !dbg !10228
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10223, metadata !DIExpression()), !dbg !10228
  call void @llvm.dbg.value(metadata i8* %1, metadata !10224, metadata !DIExpression()), !dbg !10228
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #26, !dbg !10229
  call void @llvm.dbg.value(metadata i64 %4, metadata !10227, metadata !DIExpression()), !dbg !10228
  %5 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10230
  br i1 %5, label %6, label %7, !dbg !10233

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 108) #26, !dbg !10234
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.138, i32 0, i32 0)) #26, !dbg !10234
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 108) #26, !dbg !10234
  unreachable, !dbg !10234

7:                                                ; preds = %3
  %8 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10236
  br i1 %8, label %9, label %10, !dbg !10239

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 109) #26, !dbg !10240
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.140, i32 0, i32 0)) #26, !dbg !10240
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 109) #26, !dbg !10240
  unreachable, !dbg !10240

10:                                               ; preds = %7
  %11 = icmp eq i8* %1, null, !dbg !10242
  br i1 %11, label %12, label %13, !dbg !10245

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 110) #26, !dbg !10246
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.142, i32 0, i32 0)) #26, !dbg !10246
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 110) #26, !dbg !10246
  unreachable, !dbg !10246

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 3, !dbg !10248
  %15 = load i1 (i8*, i32)*, i1 (i8*, i32)** %14, align 4, !dbg !10248
  %16 = icmp eq i1 (i8*, i32)* %15, null, !dbg !10250
  br i1 %16, label %22, label %17, !dbg !10251

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 0, !dbg !10252
  %19 = load i16, i16* %18, align 4, !dbg !10252
  %20 = zext i16 %19 to i32, !dbg !10253
  %21 = tail call zeroext i1 %15(i8* noundef nonnull %1, i32 noundef %20) #26, !dbg !10254
  br i1 %21, label %22, label %36, !dbg !10255

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10256
  %24 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !10256
  %25 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %24, [1 x i64] %2) #27, !dbg !10257
  call void @llvm.dbg.value(metadata i32 %25, metadata !10226, metadata !DIExpression()), !dbg !10228
  %26 = icmp eq i32 %25, 0, !dbg !10258
  br i1 %26, label %27, label %36, !dbg !10260

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 2, !dbg !10261
  %29 = load i8*, i8** %28, align 4, !dbg !10261
  %30 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 0, !dbg !10262
  %31 = load i16, i16* %30, align 4, !dbg !10262
  %32 = zext i16 %31 to i32, !dbg !10263
  %33 = tail call i8* @memcpy(i8* noundef %29, i8* noundef nonnull %1, i32 noundef %32) #26, !dbg !10264
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel.18* noundef nonnull %0, i64 noundef %4) #27, !dbg !10265
  call void @llvm.dbg.value(metadata i32 0, metadata !10226, metadata !DIExpression()), !dbg !10228
  %34 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !10266
  %35 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %34) #27, !dbg !10267
  br label %36, !dbg !10268

36:                                               ; preds = %22, %17, %27
  %37 = phi i32 [ 0, %27 ], [ -35, %17 ], [ %25, %22 ], !dbg !10228
  ret i32 %37, !dbg !10269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10270 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10275, metadata !DIExpression()), !dbg !10276
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !10274, metadata !DIExpression()), !dbg !10276
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10277, !srcloc !10279
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #26, !dbg !10280
  ret i32 %3, !dbg !10281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_zbus_notify_observers(%struct.zbus_channel.18* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !10282 {
  %3 = alloca %struct.zbus_channel.18*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10286, metadata !DIExpression()), !dbg !10294
  store %struct.zbus_channel.18* %0, %struct.zbus_channel.18** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !10287, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata i32 0, metadata !10288, metadata !DIExpression()), !dbg !10294
  %5 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 6, !dbg !10295
  %6 = load %struct.zbus_observer.19**, %struct.zbus_observer.19*** %5, align 4, !dbg !10295
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %6, metadata !10290, metadata !DIExpression()), !dbg !10296
  %7 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %6, align 4, !dbg !10297
  %8 = icmp eq %struct.zbus_observer.19* %7, null, !dbg !10299
  br i1 %8, label %9, label %16, !dbg !10300

9:                                                ; preds = %27, %2
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10286, metadata !DIExpression()), !dbg !10294
  tail call fastcc void @_zbus_notify_runtime_listeners(%struct.zbus_channel.18* noundef %0) #27, !dbg !10301
  %10 = load %struct.zbus_observer.19**, %struct.zbus_observer.19*** %5, align 4, !dbg !10302
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %10, metadata !10292, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata i32 0, metadata !10288, metadata !DIExpression()), !dbg !10294
  %11 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %10, align 4, !dbg !10304
  %12 = icmp eq %struct.zbus_observer.19* %11, null, !dbg !10306
  br i1 %12, label %33, label %13, !dbg !10307

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel.18** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %35, !dbg !10307

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer.19* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer.19** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %18, metadata !10290, metadata !DIExpression()), !dbg !10296
  %19 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %17, i32 0, i32 0, !dbg !10308
  %20 = load i8, i8* %19, align 4, !dbg !10308, !range !8544
  %21 = icmp eq i8 %20, 0, !dbg !10308
  br i1 %21, label %27, label %22, !dbg !10311

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %17, i32 0, i32 2, !dbg !10312
  %24 = load void (%struct.zbus_channel.18*)*, void (%struct.zbus_channel.18*)** %23, align 4, !dbg !10312
  %25 = icmp eq void (%struct.zbus_channel.18*)* %24, null, !dbg !10313
  br i1 %25, label %27, label %26, !dbg !10314

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10286, metadata !DIExpression()), !dbg !10294
  tail call void %24(%struct.zbus_channel.18* noundef %0) #26, !dbg !10315
  br label %27, !dbg !10317

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer.19*, %struct.zbus_observer.19** %18, i32 1, !dbg !10318
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %28, metadata !10290, metadata !DIExpression()), !dbg !10296
  %29 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %28, align 4, !dbg !10297
  %30 = icmp eq %struct.zbus_observer.19* %29, null, !dbg !10299
  br i1 %30, label %9, label %16, !dbg !10300, !llvm.loop !10319

31:                                               ; preds = %51
  %32 = load %struct.zbus_channel.18*, %struct.zbus_channel.18** %3, align 4, !dbg !10321
  br label %33, !dbg !10321

33:                                               ; preds = %31, %9
  %34 = phi %struct.zbus_channel.18* [ %32, %31 ], [ %0, %9 ], !dbg !10321
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %34, metadata !10286, metadata !DIExpression()), !dbg !10294
  call fastcc void @_zbus_notify_runtime_subscribers(%struct.zbus_channel.18* noundef %34, i64 noundef %1) #27, !dbg !10322
  call void @llvm.dbg.value(metadata i32 0, metadata !10289, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata i32 0, metadata !10288, metadata !DIExpression()), !dbg !10294
  ret void, !dbg !10323

35:                                               ; preds = %13, %51
  %36 = phi %struct.zbus_observer.19* [ %11, %13 ], [ %53, %51 ]
  %37 = phi %struct.zbus_observer.19** [ %10, %13 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %37, metadata !10292, metadata !DIExpression()), !dbg !10303
  %38 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %36, i32 0, i32 0, !dbg !10324
  %39 = load i8, i8* %38, align 4, !dbg !10324, !range !8544
  %40 = icmp eq i8 %39, 0, !dbg !10324
  br i1 %40, label %51, label %41, !dbg !10327

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %36, i32 0, i32 1, !dbg !10328
  %43 = load %struct.k_msgq*, %struct.k_msgq** %42, align 4, !dbg !10328
  %44 = icmp eq %struct.k_msgq* %43, null, !dbg !10329
  br i1 %44, label %51, label %45, !dbg !10330

45:                                               ; preds = %41
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #27, !dbg !10331
  %46 = load i64, i64* %15, align 8, !dbg !10333
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !10333
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18** %3, metadata !10286, metadata !DIExpression(DW_OP_deref)), !dbg !10294
  %48 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %43, i8* noundef nonnull %14, [1 x i64] %47) #27, !dbg !10333
  call void @llvm.dbg.value(metadata i32 %48, metadata !10289, metadata !DIExpression()), !dbg !10294
  %49 = icmp eq i32 %48, 0, !dbg !10334
  br i1 %49, label %51, label %50, !dbg !10337

50:                                               ; preds = %45
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 85) #26, !dbg !10338
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.145, i32 0, i32 0)) #26, !dbg !10338
  call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 85) #26, !dbg !10338
  unreachable, !dbg !10338

51:                                               ; preds = %45, %35, %41
  call void @llvm.dbg.value(metadata i32 0, metadata !10288, metadata !DIExpression()), !dbg !10294
  %52 = getelementptr inbounds %struct.zbus_observer.19*, %struct.zbus_observer.19** %37, i32 1, !dbg !10340
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %52, metadata !10292, metadata !DIExpression()), !dbg !10303
  %53 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %52, align 4, !dbg !10304
  %54 = icmp eq %struct.zbus_observer.19* %53, null, !dbg !10306
  br i1 %54, label %31, label %35, !dbg !10307, !llvm.loop !10341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !10343 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !10347, metadata !DIExpression()), !dbg !10348
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10349, !srcloc !10351
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #26, !dbg !10352
  ret i32 %2, !dbg !10353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_zbus_notify_runtime_listeners(%struct.zbus_channel.18* noundef %0) unnamed_addr #1 !dbg !10354 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10356, metadata !DIExpression()), !dbg !10359
  %2 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10360
  br i1 %2, label %3, label %4, !dbg !10363

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 22) #26, !dbg !10364
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.140, i32 0, i32 0)) #26, !dbg !10364
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 22) #26, !dbg !10364
  unreachable, !dbg !10364

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 5, !dbg !10366
  %6 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !10366
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %6) #27, !dbg !10366
  %8 = icmp eq %struct._snode* %7, null, !dbg !10366
  br i1 %8, label %25, label %9, !dbg !10366

9:                                                ; preds = %4, %23
  %10 = phi %struct._snode* [ %11, %23 ], [ %7, %4 ]
  %11 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %10) #27, !dbg !10368
  call void @llvm.dbg.value(metadata %struct._snode* %11, metadata !10358, metadata !DIExpression()), !dbg !10359
  call void @llvm.dbg.value(metadata %struct._snode* %10, metadata !10357, metadata !DIExpression()), !dbg !10359
  %12 = getelementptr inbounds %struct._snode, %struct._snode* %10, i32 1, !dbg !10369
  %13 = bitcast %struct._snode* %12 to %struct.zbus_observer.19**, !dbg !10369
  %14 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %13, align 4, !dbg !10369
  %15 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %14, i32 0, i32 0, !dbg !10373
  %16 = load i8, i8* %15, align 4, !dbg !10373, !range !8544
  %17 = icmp eq i8 %16, 0, !dbg !10373
  br i1 %17, label %23, label %18, !dbg !10374

18:                                               ; preds = %9
  %19 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %14, i32 0, i32 2, !dbg !10375
  %20 = load void (%struct.zbus_channel.18*)*, void (%struct.zbus_channel.18*)** %19, align 4, !dbg !10375
  %21 = icmp eq void (%struct.zbus_channel.18*)* %20, null, !dbg !10376
  br i1 %21, label %23, label %22, !dbg !10377

22:                                               ; preds = %18
  tail call void %20(%struct.zbus_channel.18* noundef nonnull %0) #26, !dbg !10378
  br label %23, !dbg !10380

23:                                               ; preds = %9, %18, %22
  call void @llvm.dbg.value(metadata %struct._snode* %11, metadata !10357, metadata !DIExpression()), !dbg !10359
  %24 = icmp eq %struct._snode* %11, null, !dbg !10381
  br i1 %24, label %25, label %9, !dbg !10381

25:                                               ; preds = %23, %4
  ret void, !dbg !10382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_zbus_notify_runtime_subscribers(%struct.zbus_channel.18* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !10383 {
  %3 = alloca %struct.zbus_channel.18*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10385, metadata !DIExpression()), !dbg !10391
  store %struct.zbus_channel.18* %0, %struct.zbus_channel.18** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !10386, metadata !DIExpression()), !dbg !10391
  %5 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10392
  br i1 %5, label %6, label %7, !dbg !10395

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 39) #26, !dbg !10396
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.140, i32 0, i32 0)) #26, !dbg !10396
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 39) #26, !dbg !10396
  unreachable, !dbg !10396

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !10387, metadata !DIExpression()), !dbg !10391
  %8 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 5, !dbg !10398
  %9 = load %struct._slist*, %struct._slist** %8, align 4, !dbg !10398
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %9) #27, !dbg !10398
  %11 = icmp eq %struct._snode* %10, null, !dbg !10398
  br i1 %11, label %39, label %12, !dbg !10398

12:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10385, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata %struct._snode* %10, metadata !10389, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata %struct._snode* %10, metadata !10389, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata %struct._snode* undef, metadata !10390, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata i32 0, metadata !10387, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata %struct._snode* %10, metadata !10389, metadata !DIExpression()), !dbg !10391
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %10) #27, !dbg !10398
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10390, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10390, metadata !DIExpression()), !dbg !10391
  %14 = bitcast %struct.zbus_channel.18** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %16, !dbg !10398

16:                                               ; preds = %37, %12
  %17 = phi %struct._snode* [ %13, %12 ], [ %38, %37 ]
  %18 = phi %struct._snode* [ %10, %12 ], [ %17, %37 ]
  call void @llvm.dbg.value(metadata %struct._snode* %17, metadata !10390, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata %struct._snode* %18, metadata !10389, metadata !DIExpression()), !dbg !10391
  %19 = getelementptr inbounds %struct._snode, %struct._snode* %18, i32 1, !dbg !10400
  %20 = bitcast %struct._snode* %19 to %struct.zbus_observer.19**, !dbg !10400
  %21 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %20, align 4, !dbg !10400
  %22 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %21, i32 0, i32 0, !dbg !10404
  %23 = load i8, i8* %22, align 4, !dbg !10404, !range !8544
  %24 = icmp eq i8 %23, 0, !dbg !10404
  br i1 %24, label %35, label %25, !dbg !10405

25:                                               ; preds = %16
  %26 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %21, i32 0, i32 1, !dbg !10406
  %27 = load %struct.k_msgq*, %struct.k_msgq** %26, align 4, !dbg !10406
  %28 = icmp eq %struct.k_msgq* %27, null, !dbg !10407
  br i1 %28, label %35, label %29, !dbg !10408

29:                                               ; preds = %25
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #27, !dbg !10409
  %30 = load i64, i64* %15, align 8, !dbg !10411
  %31 = insertvalue [1 x i64] poison, i64 %30, 0, !dbg !10411
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18** %3, metadata !10385, metadata !DIExpression(DW_OP_deref)), !dbg !10391
  %32 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %27, i8* noundef nonnull %14, [1 x i64] %31) #27, !dbg !10411
  call void @llvm.dbg.value(metadata i32 %32, metadata !10388, metadata !DIExpression()), !dbg !10391
  %33 = icmp eq i32 %32, 0, !dbg !10412
  br i1 %33, label %35, label %34, !dbg !10415

34:                                               ; preds = %29
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 54) #26, !dbg !10416
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.17.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.145, i32 0, i32 0), i32 noundef %32) #26, !dbg !10416
  call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 54) #26, !dbg !10416
  unreachable, !dbg !10416

35:                                               ; preds = %29, %16, %25
  call void @llvm.dbg.value(metadata i32 0, metadata !10387, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata %struct._snode* %17, metadata !10389, metadata !DIExpression()), !dbg !10391
  %36 = icmp eq %struct._snode* %17, null, !dbg !10418
  br i1 %36, label %39, label %37, !dbg !10418

37:                                               ; preds = %35
  %38 = call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %17) #27, !dbg !10418
  call void @llvm.dbg.value(metadata %struct._snode* %38, metadata !10390, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata %struct._snode* %17, metadata !10389, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata i32 0, metadata !10387, metadata !DIExpression()), !dbg !10391
  br label %16, !dbg !10398

39:                                               ; preds = %35, %7
  ret void, !dbg !10419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !10420 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10426, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !10424, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata i8* %1, metadata !10425, metadata !DIExpression()), !dbg !10427
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10428, !srcloc !10430
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #26, !dbg !10431
  ret i32 %4, !dbg !10432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10433 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10437, metadata !DIExpression()), !dbg !10438
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10439
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10439
  ret %struct._snode* %3, !dbg !10440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !10441 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10445, metadata !DIExpression()), !dbg !10446
  %2 = icmp eq %struct._snode* %0, null, !dbg !10447
  br i1 %2, label %5, label %3, !dbg !10447

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !10447
  br label %5, !dbg !10447

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10447
  ret %struct._snode* %6, !dbg !10447
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10448 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10450, metadata !DIExpression()), !dbg !10451
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !10452
  ret %struct._snode* %2, !dbg !10452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10453 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10455, metadata !DIExpression()), !dbg !10456
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10457
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10457
  ret %struct._snode* %3, !dbg !10458
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel.18* noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10459 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10465, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10463, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata i8* %1, metadata !10464, metadata !DIExpression()), !dbg !10467
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10468
  br i1 %4, label %5, label %6, !dbg !10471

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 134) #26, !dbg !10472
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.138, i32 0, i32 0)) #26, !dbg !10472
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 134) #26, !dbg !10472
  unreachable, !dbg !10472

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10474
  br i1 %7, label %8, label %9, !dbg !10477

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 135) #26, !dbg !10478
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.140, i32 0, i32 0)) #26, !dbg !10478
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 135) #26, !dbg !10478
  unreachable, !dbg !10478

9:                                                ; preds = %6
  %10 = icmp eq i8* %1, null, !dbg !10480
  br i1 %10, label %11, label %12, !dbg !10483

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 136) #26, !dbg !10484
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.142, i32 0, i32 0)) #26, !dbg !10484
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 136) #26, !dbg !10484
  unreachable, !dbg !10484

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10486
  %14 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !10486
  %15 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %14, [1 x i64] %2) #27, !dbg !10487
  call void @llvm.dbg.value(metadata i32 %15, metadata !10466, metadata !DIExpression()), !dbg !10467
  %16 = icmp eq i32 %15, 0, !dbg !10488
  br i1 %16, label %17, label %26, !dbg !10490

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 2, !dbg !10491
  %19 = load i8*, i8** %18, align 4, !dbg !10491
  %20 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 0, !dbg !10492
  %21 = load i16, i16* %20, align 4, !dbg !10492
  %22 = zext i16 %21 to i32, !dbg !10493
  %23 = tail call i8* @memcpy(i8* noundef nonnull %1, i8* noundef %19, i32 noundef %22) #26, !dbg !10494
  %24 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !10495
  %25 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %24) #27, !dbg !10496
  br label %26, !dbg !10497

26:                                               ; preds = %12, %17
  %27 = phi i32 [ %25, %17 ], [ %15, %12 ], !dbg !10467
  ret i32 %27, !dbg !10498
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel.18* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !10499 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10504, metadata !DIExpression()), !dbg !10507
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10503, metadata !DIExpression()), !dbg !10507
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #26, !dbg !10508
  call void @llvm.dbg.value(metadata i64 %3, metadata !10506, metadata !DIExpression()), !dbg !10507
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10509
  br i1 %4, label %5, label %6, !dbg !10512

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 153) #26, !dbg !10513
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.138, i32 0, i32 0)) #26, !dbg !10513
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 153) #26, !dbg !10513
  unreachable, !dbg !10513

6:                                                ; preds = %2
  %7 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10515
  br i1 %7, label %8, label %9, !dbg !10518

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 154) #26, !dbg !10519
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.140, i32 0, i32 0)) #26, !dbg !10519
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 154) #26, !dbg !10519
  unreachable, !dbg !10519

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10521
  %11 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !10521
  %12 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %11, [1 x i64] %1) #27, !dbg !10522
  call void @llvm.dbg.value(metadata i32 %12, metadata !10505, metadata !DIExpression()), !dbg !10507
  %13 = icmp eq i32 %12, 0, !dbg !10523
  br i1 %13, label %14, label %17, !dbg !10525

14:                                               ; preds = %9
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel.18* noundef nonnull %0, i64 noundef %3) #27, !dbg !10526
  call void @llvm.dbg.value(metadata i32 0, metadata !10505, metadata !DIExpression()), !dbg !10507
  %15 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !10527
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #27, !dbg !10528
  br label %17, !dbg !10529

17:                                               ; preds = %9, %14
  ret i32 %12, !dbg !10530
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel.18* noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !10531 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10534, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10533, metadata !DIExpression()), !dbg !10536
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10537
  br i1 %3, label %4, label %5, !dbg !10540

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 170) #26, !dbg !10541
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.138, i32 0, i32 0)) #26, !dbg !10541
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 170) #26, !dbg !10541
  unreachable, !dbg !10541

5:                                                ; preds = %2
  %6 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10543
  br i1 %6, label %7, label %8, !dbg !10546

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 171) #26, !dbg !10547
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.140, i32 0, i32 0)) #26, !dbg !10547
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 171) #26, !dbg !10547
  unreachable, !dbg !10547

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10549
  %10 = load %struct.k_mutex*, %struct.k_mutex** %9, align 4, !dbg !10549
  %11 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %10, [1 x i64] %1) #27, !dbg !10550
  call void @llvm.dbg.value(metadata i32 %11, metadata !10535, metadata !DIExpression()), !dbg !10536
  ret i32 %11, !dbg !10551
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel.18* noundef readonly %0) local_unnamed_addr #1 !dbg !10552 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10556, metadata !DIExpression()), !dbg !10558
  %2 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10559
  br i1 %2, label %3, label %4, !dbg !10562

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 184) #26, !dbg !10563
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.138, i32 0, i32 0)) #26, !dbg !10563
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 184) #26, !dbg !10563
  unreachable, !dbg !10563

4:                                                ; preds = %1
  %5 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10565
  br i1 %5, label %6, label %7, !dbg !10568

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 185) #26, !dbg !10569
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.140, i32 0, i32 0)) #26, !dbg !10569
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 185) #26, !dbg !10569
  unreachable, !dbg !10569

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10571
  %9 = load %struct.k_mutex*, %struct.k_mutex** %8, align 4, !dbg !10571
  %10 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %9) #27, !dbg !10572
  call void @llvm.dbg.value(metadata i32 %10, metadata !10557, metadata !DIExpression()), !dbg !10558
  ret i32 %10, !dbg !10573
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer.19* noundef readonly %0, %struct.zbus_channel.18** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10574 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10581, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19* %0, metadata !10579, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18** %1, metadata !10580, metadata !DIExpression()), !dbg !10582
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10583
  br i1 %4, label %5, label %6, !dbg !10586

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 195) #26, !dbg !10587
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.138, i32 0, i32 0)) #26, !dbg !10587
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 195) #26, !dbg !10587
  unreachable, !dbg !10587

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_observer.19* %0, null, !dbg !10589
  br i1 %7, label %8, label %9, !dbg !10592

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 196) #26, !dbg !10593
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10.152, i32 0, i32 0)) #26, !dbg !10593
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 196) #26, !dbg !10593
  unreachable, !dbg !10593

9:                                                ; preds = %6
  %10 = icmp eq %struct.zbus_channel.18** %1, null, !dbg !10595
  br i1 %10, label %11, label %12, !dbg !10598

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 197) #26, !dbg !10599
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.140, i32 0, i32 0)) #26, !dbg !10599
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.137, i32 0, i32 0), i32 noundef 197) #26, !dbg !10599
  unreachable, !dbg !10599

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %0, i32 0, i32 1, !dbg !10601
  %14 = load %struct.k_msgq*, %struct.k_msgq** %13, align 4, !dbg !10601
  %15 = icmp eq %struct.k_msgq* %14, null, !dbg !10603
  br i1 %15, label %19, label %16, !dbg !10604

16:                                               ; preds = %12
  %17 = bitcast %struct.zbus_channel.18** %1 to i8*, !dbg !10605
  %18 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %14, i8* noundef nonnull %17, [1 x i64] %2) #27, !dbg !10606
  br label %19, !dbg !10607

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %18, %16 ], [ -22, %12 ], !dbg !10582
  ret i32 %20, !dbg !10608
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !10609 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10615, metadata !DIExpression()), !dbg !10616
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !10613, metadata !DIExpression()), !dbg !10616
  call void @llvm.dbg.value(metadata i8* %1, metadata !10614, metadata !DIExpression()), !dbg !10616
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10617, !srcloc !10619
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #26, !dbg !10620
  ret i32 %4, !dbg !10621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.k_mem_slab* @zbus_runtime_obs_pool() local_unnamed_addr #6 !dbg !10622 {
  ret %struct.k_mem_slab* @_zbus_runtime_obs_pool, !dbg !10626
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_add_obs(%struct.zbus_channel.18* noundef readonly %0, %struct.zbus_observer.19* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10627 {
  %4 = alloca %struct.zbus_observer_node*, align 4
  %5 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata i64 undef, metadata !10637, metadata !DIExpression()), !dbg !10644
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10635, metadata !DIExpression()), !dbg !10644
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19* %1, metadata !10636, metadata !DIExpression()), !dbg !10644
  %6 = bitcast %struct.zbus_observer_node** %4 to i8*, !dbg !10645
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !10645
  %7 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #26, !dbg !10646
  call void @llvm.dbg.value(metadata i64 %7, metadata !10641, metadata !DIExpression()), !dbg !10644
  %8 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10647
  br i1 %8, label %9, label %10, !dbg !10650

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.157, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.158, i32 0, i32 0), i32 noundef 26) #26, !dbg !10651
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.159, i32 0, i32 0)) #26, !dbg !10651
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.158, i32 0, i32 0), i32 noundef 26) #26, !dbg !10651
  unreachable, !dbg !10651

10:                                               ; preds = %3
  %11 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10653
  br i1 %11, label %12, label %13, !dbg !10656

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.160, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.158, i32 0, i32 0), i32 noundef 27) #26, !dbg !10657
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.161, i32 0, i32 0)) #26, !dbg !10657
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.158, i32 0, i32 0), i32 noundef 27) #26, !dbg !10657
  unreachable, !dbg !10657

13:                                               ; preds = %10
  %14 = icmp eq %struct.zbus_observer.19* %1, null, !dbg !10659
  br i1 %14, label %15, label %16, !dbg !10662

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.158, i32 0, i32 0), i32 noundef 28) #26, !dbg !10663
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7.163, i32 0, i32 0)) #26, !dbg !10663
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.158, i32 0, i32 0), i32 noundef 28) #26, !dbg !10663
  unreachable, !dbg !10663

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 6, !dbg !10665
  %18 = load %struct.zbus_observer.19**, %struct.zbus_observer.19*** %17, align 4, !dbg !10665
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %18, metadata !10642, metadata !DIExpression()), !dbg !10666
  %19 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %18, align 4, !dbg !10667
  %20 = icmp eq %struct.zbus_observer.19* %19, null, !dbg !10669
  br i1 %20, label %29, label %24, !dbg !10670

21:                                               ; preds = %24
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %28, metadata !10642, metadata !DIExpression()), !dbg !10666
  %22 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %28, align 4, !dbg !10667
  %23 = icmp eq %struct.zbus_observer.19* %22, null, !dbg !10669
  br i1 %23, label %29, label %24, !dbg !10670, !llvm.loop !10671

24:                                               ; preds = %16, %21
  %25 = phi %struct.zbus_observer.19* [ %22, %21 ], [ %19, %16 ]
  %26 = phi %struct.zbus_observer.19** [ %28, %21 ], [ %18, %16 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %26, metadata !10642, metadata !DIExpression()), !dbg !10666
  %27 = icmp eq %struct.zbus_observer.19* %25, %1, !dbg !10673
  %28 = getelementptr inbounds %struct.zbus_observer.19*, %struct.zbus_observer.19** %26, i32 1, !dbg !10676
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %28, metadata !10642, metadata !DIExpression()), !dbg !10666
  br i1 %27, label %72, label %21, !dbg !10677

29:                                               ; preds = %21, %16
  %30 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10678
  %31 = load %struct.k_mutex*, %struct.k_mutex** %30, align 4, !dbg !10678
  %32 = tail call fastcc i32 @k_mutex_lock.164(%struct.k_mutex* noundef %31, [1 x i64] %2) #27, !dbg !10679
  call void @llvm.dbg.value(metadata i32 %32, metadata !10638, metadata !DIExpression()), !dbg !10644
  %33 = icmp eq i32 %32, 0, !dbg !10680
  br i1 %33, label %34, label %72, !dbg !10682

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 5, !dbg !10683
  %36 = load %struct._slist*, %struct._slist** %35, align 4, !dbg !10683
  %37 = tail call fastcc %struct._snode* @sys_slist_peek_head.165(%struct._slist* noundef %36) #27, !dbg !10683
  %38 = icmp eq %struct._snode* %37, null, !dbg !10683
  call void @llvm.dbg.value(metadata %struct._snode* %37, metadata !10639, metadata !DIExpression()), !dbg !10644
  call void @llvm.dbg.value(metadata %struct._snode* %37, metadata !10639, metadata !DIExpression()), !dbg !10644
  br i1 %38, label %57, label %39, !dbg !10683

39:                                               ; preds = %34
  call void @llvm.dbg.value(metadata %struct._snode* undef, metadata !10640, metadata !DIExpression()), !dbg !10644
  call void @llvm.dbg.value(metadata %struct._snode* %37, metadata !10639, metadata !DIExpression()), !dbg !10644
  %40 = getelementptr inbounds %struct._snode, %struct._snode* %37, i32 1, !dbg !10685
  %41 = bitcast %struct._snode* %40 to %struct.zbus_observer.19**, !dbg !10685
  %42 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %41, align 4, !dbg !10685
  %43 = icmp eq %struct.zbus_observer.19* %42, %1, !dbg !10689
  br i1 %43, label %46, label %44, !dbg !10690

44:                                               ; preds = %39
  %45 = tail call fastcc %struct._snode* @sys_slist_peek_next.166(%struct._snode* noundef nonnull %37) #27, !dbg !10683
  call void @llvm.dbg.value(metadata %struct._snode* %45, metadata !10640, metadata !DIExpression()), !dbg !10644
  br label %48, !dbg !10690

46:                                               ; preds = %51, %39
  %47 = load %struct.k_mutex*, %struct.k_mutex** %30, align 4, !dbg !10691
  tail call fastcc void @k_mutex_unlock.167(%struct.k_mutex* noundef %47) #27, !dbg !10693
  br label %72, !dbg !10694

48:                                               ; preds = %44, %51
  %49 = phi %struct._snode* [ %45, %44 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata %struct._snode* %49, metadata !10640, metadata !DIExpression()), !dbg !10644
  call void @llvm.dbg.value(metadata %struct._snode* %49, metadata !10639, metadata !DIExpression()), !dbg !10644
  %50 = icmp eq %struct._snode* %49, null, !dbg !10695
  br i1 %50, label %57, label %51, !dbg !10695

51:                                               ; preds = %48
  %52 = tail call fastcc %struct._snode* @sys_slist_peek_next.166(%struct._snode* noundef nonnull %49) #27, !dbg !10695
  call void @llvm.dbg.value(metadata %struct._snode* %52, metadata !10640, metadata !DIExpression()), !dbg !10644
  call void @llvm.dbg.value(metadata %struct._snode* %49, metadata !10639, metadata !DIExpression()), !dbg !10644
  %53 = getelementptr inbounds %struct._snode, %struct._snode* %49, i32 1, !dbg !10685
  %54 = bitcast %struct._snode* %53 to %struct.zbus_observer.19**, !dbg !10685
  %55 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %54, align 4, !dbg !10685
  %56 = icmp eq %struct.zbus_observer.19* %55, %1, !dbg !10689
  br i1 %56, label %46, label %48, !dbg !10690

57:                                               ; preds = %48, %34
  store %struct.zbus_observer_node* null, %struct.zbus_observer_node** %4, align 4, !dbg !10695
  %58 = bitcast %struct.zbus_observer_node** %4 to i8**, !dbg !10696
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %5, i64 noundef %7) #26, !dbg !10697
  %59 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !10698
  %60 = load i64, i64* %59, align 8, !dbg !10698
  %61 = insertvalue [1 x i64] poison, i64 %60, 0, !dbg !10698
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node** %4, metadata !10639, metadata !DIExpression(DW_OP_deref)), !dbg !10644
  %62 = call i32 @k_mem_slab_alloc(%struct.k_mem_slab* noundef nonnull @_zbus_runtime_obs_pool, i8** noundef nonnull %58, [1 x i64] %61) #26, !dbg !10698
  call void @llvm.dbg.value(metadata i32 %62, metadata !10638, metadata !DIExpression()), !dbg !10644
  %63 = icmp eq i32 %62, 0, !dbg !10699
  br i1 %63, label %66, label %64, !dbg !10701

64:                                               ; preds = %57
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.8.168, i32 0, i32 0), i32 noundef 69) #26, !dbg !10702
  %65 = load %struct.k_mutex*, %struct.k_mutex** %30, align 4, !dbg !10708
  call fastcc void @k_mutex_unlock.167(%struct.k_mutex* noundef %65) #27, !dbg !10709
  br label %72, !dbg !10710

66:                                               ; preds = %57
  %67 = load %struct.zbus_observer_node*, %struct.zbus_observer_node** %4, align 4, !dbg !10711
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node* %67, metadata !10639, metadata !DIExpression()), !dbg !10644
  %68 = getelementptr inbounds %struct.zbus_observer_node, %struct.zbus_observer_node* %67, i32 0, i32 1, !dbg !10712
  store %struct.zbus_observer.19* %1, %struct.zbus_observer.19** %68, align 4, !dbg !10713
  %69 = load %struct._slist*, %struct._slist** %35, align 4, !dbg !10714
  %70 = getelementptr inbounds %struct.zbus_observer_node, %struct.zbus_observer_node* %67, i32 0, i32 0, !dbg !10715
  call fastcc void @sys_slist_append(%struct._slist* noundef %69, %struct._snode* noundef %70) #27, !dbg !10716
  %71 = load %struct.k_mutex*, %struct.k_mutex** %30, align 4, !dbg !10717
  call fastcc void @k_mutex_unlock.167(%struct.k_mutex* noundef %71) #27, !dbg !10718
  br label %72, !dbg !10719

72:                                               ; preds = %24, %29, %66, %64, %46
  %73 = phi i32 [ -120, %46 ], [ %62, %64 ], [ 0, %66 ], [ %32, %29 ], [ -17, %24 ], !dbg !10644
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !10720
  ret i32 %73, !dbg !10720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock.164(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10721 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10726, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !10725, metadata !DIExpression()), !dbg !10727
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10728, !srcloc !10730
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #26, !dbg !10731
  ret i32 %3, !dbg !10732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.165(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10733 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10737, metadata !DIExpression()), !dbg !10738
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10739
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10739
  ret %struct._snode* %3, !dbg !10740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next.166(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !10741 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10745, metadata !DIExpression()), !dbg !10746
  %2 = icmp eq %struct._snode* %0, null, !dbg !10747
  br i1 %2, label %5, label %3, !dbg !10747

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check.169(%struct._snode* noundef nonnull %0) #27, !dbg !10747
  br label %5, !dbg !10747

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10747
  ret %struct._snode* %6, !dbg !10747
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock.167(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !10748 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !10752, metadata !DIExpression()), !dbg !10753
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10754, !srcloc !10756
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #26, !dbg !10757
  ret void, !dbg !10758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_append(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !10759 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10763, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10764, metadata !DIExpression()), !dbg !10765
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef null) #27, !dbg !10766
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10767
  %4 = icmp eq %struct._snode* %3, null, !dbg !10767
  br i1 %4, label %5, label %6, !dbg !10766

5:                                                ; preds = %2
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !10769
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !10769
  br label %7, !dbg !10769

6:                                                ; preds = %2
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %3, %struct._snode* noundef %1) #27, !dbg !10771
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !10771
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !10766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10773 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10777, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10778, metadata !DIExpression()), !dbg !10779
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10780
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10781
  ret void, !dbg !10782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10783 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10785, metadata !DIExpression()), !dbg !10786
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10787
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10787
  ret %struct._snode* %3, !dbg !10788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10789 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10791, metadata !DIExpression()), !dbg !10793
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10792, metadata !DIExpression()), !dbg !10793
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10794
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10795
  ret void, !dbg !10796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10797 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10799, metadata !DIExpression()), !dbg !10801
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10800, metadata !DIExpression()), !dbg !10801
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10802
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10803
  ret void, !dbg !10804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check.169(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10805 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10807, metadata !DIExpression()), !dbg !10808
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek.170(%struct._snode* noundef %0) #27, !dbg !10809
  ret %struct._snode* %2, !dbg !10809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek.170(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10810 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10812, metadata !DIExpression()), !dbg !10813
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10814
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10814
  ret %struct._snode* %3, !dbg !10815
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_rm_obs(%struct.zbus_channel.18* noundef readonly %0, %struct.zbus_observer.19* noundef readnone %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10816 {
  %4 = alloca %struct.zbus_observer_node*, align 4
  call void @llvm.dbg.value(metadata i64 undef, metadata !10820, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10818, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19* %1, metadata !10819, metadata !DIExpression()), !dbg !10825
  %5 = bitcast %struct.zbus_observer_node** %4 to i8*, !dbg !10826
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10826
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node* null, metadata !10824, metadata !DIExpression()), !dbg !10825
  %6 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10827
  br i1 %6, label %7, label %8, !dbg !10830

7:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.157, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.158, i32 0, i32 0), i32 noundef 79) #26, !dbg !10831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.159, i32 0, i32 0)) #26, !dbg !10831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.158, i32 0, i32 0), i32 noundef 79) #26, !dbg !10831
  unreachable, !dbg !10831

8:                                                ; preds = %3
  %9 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10833
  br i1 %9, label %10, label %11, !dbg !10836

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.160, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.158, i32 0, i32 0), i32 noundef 80) #26, !dbg !10837
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.161, i32 0, i32 0)) #26, !dbg !10837
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.158, i32 0, i32 0), i32 noundef 80) #26, !dbg !10837
  unreachable, !dbg !10837

11:                                               ; preds = %8
  %12 = icmp eq %struct.zbus_observer.19* %1, null, !dbg !10839
  br i1 %12, label %13, label %14, !dbg !10842

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.158, i32 0, i32 0), i32 noundef 81) #26, !dbg !10843
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7.163, i32 0, i32 0)) #26, !dbg !10843
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.158, i32 0, i32 0), i32 noundef 81) #26, !dbg !10843
  unreachable, !dbg !10843

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10845
  %16 = load %struct.k_mutex*, %struct.k_mutex** %15, align 4, !dbg !10845
  %17 = tail call fastcc i32 @k_mutex_lock.164(%struct.k_mutex* noundef %16, [1 x i64] %2) #27, !dbg !10846
  call void @llvm.dbg.value(metadata i32 %17, metadata !10821, metadata !DIExpression()), !dbg !10825
  %18 = icmp eq i32 %17, 0, !dbg !10847
  br i1 %18, label %19, label %52, !dbg !10849

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 5, !dbg !10850
  %21 = load %struct._slist*, %struct._slist** %20, align 4, !dbg !10850
  %22 = tail call fastcc %struct._snode* @sys_slist_peek_head.165(%struct._slist* noundef %21) #27, !dbg !10850
  %23 = icmp eq %struct._snode* %22, null, !dbg !10850
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10822, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10822, metadata !DIExpression()), !dbg !10825
  br i1 %23, label %50, label %24, !dbg !10850

24:                                               ; preds = %19
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node* null, metadata !10824, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.value(metadata %struct._snode* undef, metadata !10823, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10822, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10822, metadata !DIExpression()), !dbg !10825
  %25 = getelementptr inbounds %struct._snode, %struct._snode* %22, i32 1, !dbg !10852
  %26 = bitcast %struct._snode* %25 to %struct.zbus_observer.19**, !dbg !10852
  %27 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %26, align 4, !dbg !10852
  %28 = icmp eq %struct.zbus_observer.19* %27, %1, !dbg !10856
  br i1 %28, label %33, label %29, !dbg !10857

29:                                               ; preds = %24
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10822, metadata !DIExpression()), !dbg !10825
  %30 = tail call fastcc %struct._snode* @sys_slist_peek_next.166(%struct._snode* noundef nonnull %22) #27, !dbg !10850
  call void @llvm.dbg.value(metadata %struct._snode* %30, metadata !10823, metadata !DIExpression()), !dbg !10825
  br label %40, !dbg !10857

31:                                               ; preds = %44
  %32 = bitcast %struct._snode* %41 to %struct.zbus_observer_node*
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node* %32, metadata !10824, metadata !DIExpression()), !dbg !10825
  br label %33, !dbg !10857

33:                                               ; preds = %31, %24
  %34 = phi %struct.zbus_observer_node* [ %32, %31 ], [ null, %24 ]
  %35 = phi %struct._snode* [ %42, %31 ], [ %22, %24 ]
  %36 = bitcast %struct.zbus_observer_node** %4 to %struct._snode**, !dbg !10858
  store %struct._snode* %35, %struct._snode** %36, align 4, !dbg !10858
  %37 = getelementptr inbounds %struct.zbus_observer_node, %struct.zbus_observer_node* %34, i32 0, i32 0, !dbg !10859
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %21, %struct._snode* noundef %37, %struct._snode* noundef nonnull %35) #27, !dbg !10861
  %38 = bitcast %struct.zbus_observer_node** %4 to i8**, !dbg !10862
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node** %4, metadata !10822, metadata !DIExpression(DW_OP_deref)), !dbg !10825
  call void @k_mem_slab_free(%struct.k_mem_slab* noundef nonnull @_zbus_runtime_obs_pool, i8** noundef nonnull %38) #26, !dbg !10863
  %39 = load %struct.k_mutex*, %struct.k_mutex** %15, align 4, !dbg !10864
  call fastcc void @k_mutex_unlock.167(%struct.k_mutex* noundef %39) #27, !dbg !10865
  br label %52, !dbg !10866

40:                                               ; preds = %29, %44
  %41 = phi %struct._snode* [ %22, %29 ], [ %42, %44 ]
  %42 = phi %struct._snode* [ %30, %29 ], [ %45, %44 ]
  call void @llvm.dbg.value(metadata %struct._snode* %42, metadata !10823, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.value(metadata %struct._snode* %41, metadata !10824, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.value(metadata %struct._snode* %42, metadata !10822, metadata !DIExpression()), !dbg !10825
  %43 = icmp eq %struct._snode* %42, null, !dbg !10858
  br i1 %43, label %50, label %44, !dbg !10858

44:                                               ; preds = %40
  call void @llvm.dbg.value(metadata %struct._snode* %41, metadata !10824, metadata !DIExpression()), !dbg !10825
  %45 = tail call fastcc %struct._snode* @sys_slist_peek_next.166(%struct._snode* noundef nonnull %42) #27, !dbg !10858
  call void @llvm.dbg.value(metadata %struct._snode* %41, metadata !10824, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.value(metadata %struct._snode* %45, metadata !10823, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.value(metadata %struct._snode* %42, metadata !10822, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.value(metadata %struct._snode* %42, metadata !10822, metadata !DIExpression()), !dbg !10825
  %46 = getelementptr inbounds %struct._snode, %struct._snode* %42, i32 1, !dbg !10852
  %47 = bitcast %struct._snode* %46 to %struct.zbus_observer.19**, !dbg !10852
  %48 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %47, align 4, !dbg !10852
  %49 = icmp eq %struct.zbus_observer.19* %48, %1, !dbg !10856
  br i1 %49, label %31, label %40, !dbg !10857

50:                                               ; preds = %40, %19
  %51 = load %struct.k_mutex*, %struct.k_mutex** %15, align 4, !dbg !10867
  tail call fastcc void @k_mutex_unlock.167(%struct.k_mutex* noundef %51) #27, !dbg !10868
  br label %52, !dbg !10869

52:                                               ; preds = %14, %50, %33
  %53 = phi i32 [ 0, %33 ], [ -61, %50 ], [ %17, %14 ], !dbg !10825
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10870
  ret i32 %53, !dbg !10870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !10871 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10875, metadata !DIExpression()), !dbg !10878
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10876, metadata !DIExpression()), !dbg !10878
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10877, metadata !DIExpression()), !dbg !10878
  %4 = icmp eq %struct._snode* %1, null, !dbg !10879
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek.170(%struct._snode* noundef %2) #27, !dbg !10881
  br i1 %4, label %6, label %11, !dbg !10882

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !10883
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10885
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10885
  br i1 %8, label %9, label %15, !dbg !10883

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head.165(%struct._slist* noundef %0) #27, !dbg !10887
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !10887
  br label %15, !dbg !10887

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !10889
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10891
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10891
  br i1 %13, label %14, label %15, !dbg !10889

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !10893
  br label %15, !dbg !10893

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !10882
  ret void, !dbg !10882
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !10895 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10897, metadata !DIExpression()), !dbg !10898
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !10899
  ret void, !dbg !10900
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !10901 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10905, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.value(metadata i32 %1, metadata !10906, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !10907, metadata !DIExpression()), !dbg !10911
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !10912
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !10912
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !10912
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !10908, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.value(metadata i32 %0, metadata !10910, metadata !DIExpression()), !dbg !10911
  %7 = icmp slt i32 %0, %1, !dbg !10913
  br i1 %7, label %8, label %22, !dbg !10916

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10910, metadata !DIExpression()), !dbg !10911
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !10917
  %11 = icmp eq i32 %10, 0, !dbg !10917
  br i1 %11, label %19, label %12, !dbg !10920

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !10921
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !10923
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !10923
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !10925
  br i1 %15, label %19, label %16, !dbg !10926

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !10927
  %18 = load i8*, i8** %17, align 4, !dbg !10927
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !10928
  br label %19, !dbg !10929

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !10930
  call void @llvm.dbg.value(metadata i32 %20, metadata !10910, metadata !DIExpression()), !dbg !10911
  %21 = icmp eq i32 %20, %1, !dbg !10913
  br i1 %21, label %22, label %8, !dbg !10916, !llvm.loop !10931

22:                                               ; preds = %19, %3
  ret void, !dbg !10933
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #18 !dbg !10934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10936, metadata !DIExpression()), !dbg !10937
  %2 = shl nuw i32 1, %0, !dbg !10938
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !10941
  ret i32 %3, !dbg !10942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #17 !dbg !10943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10947, metadata !DIExpression()), !dbg !10948
  %2 = shl nuw i32 1, %0, !dbg !10949
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !10952
  ret void, !dbg !10953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10957, metadata !DIExpression()), !dbg !10958
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !10959
  ret void, !dbg !10960
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #18 !dbg !10961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10963, metadata !DIExpression()), !dbg !10964
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !10965
  %3 = and i32 %2, %0, !dbg !10965
  %4 = icmp eq i32 %3, %0, !dbg !10966
  %5 = zext i1 %4 to i32, !dbg !10966
  ret i32 %5, !dbg !10967
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !10968 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10970, metadata !DIExpression()), !dbg !10971
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !10972
  ret void, !dbg !10973
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !10974 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10976, metadata !DIExpression()), !dbg !10977
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !10978
  ret void, !dbg !10979
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !10980 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10982, metadata !DIExpression()), !dbg !10983
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !10984
  ret void, !dbg !10985
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !10986 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10988, metadata !DIExpression()), !dbg !10989
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !10990
  ret void, !dbg !10991
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !10992 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10994, metadata !DIExpression()), !dbg !10995
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !10996
  ret void, !dbg !10997
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !10998 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11000, metadata !DIExpression()), !dbg !11001
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !11002
  ret void, !dbg !11003
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !11004 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11006, metadata !DIExpression()), !dbg !11007
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !11008
  ret i32 0, !dbg !11009
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !1695 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !1699, metadata !DIExpression()), !dbg !11010
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !11011
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !11013
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !11015
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !11017
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !11019
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !11021
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !11023
  ret void, !dbg !11025
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !11026 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11028, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.value(metadata i32 0, metadata !11029, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.value(metadata i32 undef, metadata !11029, metadata !DIExpression()), !dbg !11030
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !11031
  %3 = load i32, i32* %2, align 4, !dbg !11031
  call void @llvm.dbg.value(metadata i32 %3, metadata !11029, metadata !DIExpression()), !dbg !11030
  %4 = shl nuw i32 1, %0, !dbg !11032
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #27, !dbg !11033
  tail call void @arch_irq_enable(i32 noundef %3) #26, !dbg !11034
  ret void, !dbg !11035
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #17 !dbg !11036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11038, metadata !DIExpression()), !dbg !11039
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !11040
  %3 = or i32 %2, %0, !dbg !11040
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !11040
  ret void, !dbg !11041
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #17 !dbg !11042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11044, metadata !DIExpression()), !dbg !11045
  %2 = icmp slt i32 %0, 32, !dbg !11046
  br i1 %2, label %3, label %5, !dbg !11048

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !11049
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !11051
  br label %5, !dbg !11052

5:                                                ; preds = %1, %3
  ret void, !dbg !11053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #17 !dbg !11054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11056, metadata !DIExpression()), !dbg !11057
  %2 = xor i32 %0, -1, !dbg !11058
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !11058
  %4 = and i32 %3, %2, !dbg !11058
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !11058
  ret void, !dbg !11059
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #17 !dbg !11060 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11064, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 %1, metadata !11065, metadata !DIExpression()), !dbg !11066
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !11067

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !11068
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !11070
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !11071
  br label %11, !dbg !11072

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !11073
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !11074
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !11075
  br label %11, !dbg !11076

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !11077
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !11078
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !11079
  br label %11, !dbg !11080

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !11081
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !11082
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !11083
  br label %11, !dbg !11084

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !11085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !11086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11088, metadata !DIExpression()), !dbg !11089
  %2 = xor i32 %0, -1, !dbg !11090
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !11090
  %4 = and i32 %3, %2, !dbg !11090
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !11090
  ret void, !dbg !11091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !11092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11094, metadata !DIExpression()), !dbg !11095
  %2 = xor i32 %0, -1, !dbg !11096
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !11096
  %4 = and i32 %3, %2, !dbg !11096
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !11096
  ret void, !dbg !11097
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !11098 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11100, metadata !DIExpression()), !dbg !11101
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !11102
  %3 = or i32 %2, %0, !dbg !11102
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !11102
  ret void, !dbg !11103
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !11104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11106, metadata !DIExpression()), !dbg !11107
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !11108
  %3 = or i32 %2, %0, !dbg !11108
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !11108
  ret void, !dbg !11109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !11110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11114, metadata !DIExpression()), !dbg !11120
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !11115, metadata !DIExpression()), !dbg !11120
  call void @llvm.dbg.value(metadata i8* %2, metadata !11116, metadata !DIExpression()), !dbg !11120
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !11117, metadata !DIExpression()), !dbg !11120
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !11119, metadata !DIExpression()), !dbg !11120
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !11121
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !11121
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !11123
  br i1 %6, label %7, label %9, !dbg !11124

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !11125
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !11126
  store i8* %2, i8** %8, align 4, !dbg !11127
  br label %9, !dbg !11128

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !11120
  ret i32 %10, !dbg !11129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !11130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11132, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !11133, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !11134, metadata !DIExpression()), !dbg !11135
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !11136
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !11137
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !11138
  store i8* null, i8** %3, align 4, !dbg !11139
  ret void, !dbg !11140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #17 !dbg !11141 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11143, metadata !DIExpression()), !dbg !11148
  call void @llvm.dbg.value(metadata i8* %1, metadata !11144, metadata !DIExpression()), !dbg !11148
  call void @llvm.dbg.value(metadata i8* %1, metadata !11145, metadata !DIExpression()), !dbg !11148
  %3 = bitcast i8* %1 to i32*, !dbg !11149
  %4 = load i32, i32* %3, align 4, !dbg !11149
  %5 = add i32 %4, -37, !dbg !11149
  %6 = icmp ult i32 %5, -9, !dbg !11149
  br i1 %6, label %15, label %7, !dbg !11151

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !11152
  %9 = inttoptr i32 %8 to i32*, !dbg !11153
  call void @llvm.dbg.value(metadata i32* %9, metadata !11146, metadata !DIExpression()), !dbg !11148
  %10 = load volatile i32, i32* %9, align 4, !dbg !11154
  call void @llvm.dbg.value(metadata i32 %10, metadata !11147, metadata !DIExpression()), !dbg !11148
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11155
  %12 = bitcast i8* %11 to i32*, !dbg !11155
  %13 = load i32, i32* %12, align 4, !dbg !11155
  %14 = or i32 %13, %10, !dbg !11156
  call void @llvm.dbg.value(metadata i32 %14, metadata !11147, metadata !DIExpression()), !dbg !11148
  store volatile i32 %14, i32* %9, align 4, !dbg !11157
  br label %15, !dbg !11158

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !11148
  ret i32 %16, !dbg !11159
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #17 !dbg !11160 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11162, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.value(metadata i8* %1, metadata !11163, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.value(metadata i8* %1, metadata !11164, metadata !DIExpression()), !dbg !11167
  %3 = bitcast i8* %1 to i32*, !dbg !11168
  %4 = load i32, i32* %3, align 4, !dbg !11168
  %5 = add i32 %4, -37, !dbg !11168
  %6 = icmp ult i32 %5, -9, !dbg !11168
  br i1 %6, label %16, label %7, !dbg !11170

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !11171
  %9 = inttoptr i32 %8 to i32*, !dbg !11172
  call void @llvm.dbg.value(metadata i32* %9, metadata !11165, metadata !DIExpression()), !dbg !11167
  %10 = load volatile i32, i32* %9, align 4, !dbg !11173
  call void @llvm.dbg.value(metadata i32 %10, metadata !11166, metadata !DIExpression()), !dbg !11167
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11174
  %12 = bitcast i8* %11 to i32*, !dbg !11174
  %13 = load i32, i32* %12, align 4, !dbg !11174
  %14 = xor i32 %13, -1, !dbg !11175
  %15 = and i32 %10, %14, !dbg !11176
  call void @llvm.dbg.value(metadata i32 %15, metadata !11166, metadata !DIExpression()), !dbg !11167
  store volatile i32 %15, i32* %9, align 4, !dbg !11177
  br label %16, !dbg !11178

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !11167
  ret i32 %17, !dbg !11179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #11 !dbg !11180 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11182, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i8* %1, metadata !11183, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32* %2, metadata !11184, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i8* %1, metadata !11185, metadata !DIExpression()), !dbg !11189
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !11190
  call void @llvm.dbg.value(metadata i32 %4, metadata !11186, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 %4, metadata !11187, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 %4, metadata !11188, metadata !DIExpression()), !dbg !11189
  %5 = bitcast i8* %1 to i32*, !dbg !11191
  %6 = load i32, i32* %5, align 4, !dbg !11191
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !11192

7:                                                ; preds = %3
  br label %10, !dbg !11193

8:                                                ; preds = %3
  br label %10, !dbg !11195

9:                                                ; preds = %3
  br label %10, !dbg !11196

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !11197
  br label %12, !dbg !11198

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !11189
  ret i32 %13, !dbg !11198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #17 !dbg !11199 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11201, metadata !DIExpression()), !dbg !11209
  call void @llvm.dbg.value(metadata i8* %1, metadata !11202, metadata !DIExpression()), !dbg !11209
  call void @llvm.dbg.value(metadata i8* %2, metadata !11203, metadata !DIExpression()), !dbg !11209
  call void @llvm.dbg.value(metadata i8* %1, metadata !11204, metadata !DIExpression()), !dbg !11209
  %4 = bitcast i8* %1 to i32*, !dbg !11210
  %5 = load i32, i32* %4, align 4, !dbg !11210
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !11211
  call void @llvm.dbg.value(metadata i32 %6, metadata !11208, metadata !DIExpression()), !dbg !11209
  %7 = icmp slt i32 %6, 0, !dbg !11212
  br i1 %7, label %22, label %8, !dbg !11214

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !11204, metadata !DIExpression()), !dbg !11209
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11215
  %10 = bitcast i8* %9 to i32*, !dbg !11215
  %11 = load i32, i32* %10, align 4, !dbg !11215
  %12 = lshr i32 %11, 16, !dbg !11215
  %13 = and i32 %12, 7, !dbg !11215
  %14 = lshr i32 %11, 8, !dbg !11216
  %15 = and i32 %14, 31, !dbg !11216
  %16 = shl i32 %13, %15, !dbg !11217
  call void @llvm.dbg.value(metadata i32 %16, metadata !11207, metadata !DIExpression()), !dbg !11209
  %17 = and i32 %11, 255, !dbg !11218
  %18 = or i32 %17, 1073887232, !dbg !11219
  %19 = inttoptr i32 %18 to i32*, !dbg !11220
  call void @llvm.dbg.value(metadata i32* %19, metadata !11205, metadata !DIExpression()), !dbg !11209
  %20 = load volatile i32, i32* %19, align 4, !dbg !11221
  call void @llvm.dbg.value(metadata i32 %20, metadata !11206, metadata !DIExpression()), !dbg !11209
  %21 = or i32 %16, %20, !dbg !11222
  call void @llvm.dbg.value(metadata i32 %21, metadata !11206, metadata !DIExpression()), !dbg !11209
  store volatile i32 %21, i32* %19, align 4, !dbg !11223
  br label %22, !dbg !11224

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !11209
  ret i32 %23, !dbg !11225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #6 !dbg !11226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11230, metadata !DIExpression()), !dbg !11232
  call void @llvm.dbg.value(metadata i32 0, metadata !11231, metadata !DIExpression()), !dbg !11232
  %2 = add i32 %0, -1, !dbg !11233
  %3 = icmp ult i32 %2, 4, !dbg !11233
  br i1 %3, label %4, label %7, !dbg !11233

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !11233
  %6 = load i32, i32* %5, align 4, !dbg !11233
  call void @llvm.dbg.value(metadata i32 %6, metadata !11231, metadata !DIExpression()), !dbg !11232
  br label %7, !dbg !11234

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !11232
  ret i32 %8, !dbg !11235
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !11236 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !11238, metadata !DIExpression()), !dbg !11241
  tail call void @config_enable_default_clocks() #26, !dbg !11242
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11243
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !11243
  %4 = lshr i32 %3, 4, !dbg !11243
  %5 = and i32 %4, 15, !dbg !11243
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !11243
  %7 = load i8, i8* %6, align 1, !dbg !11243
  %8 = zext i8 %7 to i32, !dbg !11243
  %9 = lshr i32 %2, %8, !dbg !11243
  call void @llvm.dbg.value(metadata i32 %9, metadata !11239, metadata !DIExpression()), !dbg !11241
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !11240, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !11241
  %10 = icmp ult i32 %9, 32000000, !dbg !11244
  br i1 %10, label %11, label %13, !dbg !11246

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #26, !dbg !11247
  br label %13, !dbg !11249

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !11250
  tail call fastcc void @set_up_plls() #27, !dbg !11251
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !11252
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #27, !dbg !11255
  br label %14, !dbg !11256

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !11257
  %16 = icmp eq i32 %15, 12, !dbg !11258
  br i1 %16, label %17, label %14, !dbg !11256, !llvm.loop !11259

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !11261
  br i1 %18, label %19, label %21, !dbg !11263

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #26, !dbg !11264
  br label %21, !dbg !11266

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !11267
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !11268
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !11269
  ret i32 0, !dbg !11270
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #18 !dbg !11271 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11273
  %2 = and i32 %1, 240, !dbg !11273
  ret i32 %2, !dbg !11274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #17 !dbg !11275 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !11276
  %2 = icmp eq i32 %1, 1, !dbg !11280
  br i1 %2, label %7, label %3, !dbg !11281

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !11282
  br label %4, !dbg !11284

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !11285
  %6 = icmp eq i32 %5, 1, !dbg !11286
  br i1 %6, label %7, label %4, !dbg !11284, !llvm.loop !11287

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #27, !dbg !11289
  br label %8, !dbg !11292

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #27, !dbg !11293
  %10 = icmp eq i32 %9, 1, !dbg !11294
  br i1 %10, label %11, label %8, !dbg !11292, !llvm.loop !11295

11:                                               ; preds = %8
  ret void, !dbg !11297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !11298 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !11299
  %2 = icmp eq i32 %1, 12, !dbg !11301
  br i1 %2, label %3, label %4, !dbg !11302

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !11303
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !11305
  br label %4, !dbg !11306

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !11307
  tail call void @config_pll_sysclock() #26, !dbg !11308
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !11309
  br label %5, !dbg !11310

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !11311
  %7 = icmp eq i32 %6, 1, !dbg !11312
  br i1 %7, label %8, label %5, !dbg !11310, !llvm.loop !11313

8:                                                ; preds = %5
  ret void, !dbg !11315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #17 !dbg !11316 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11318, metadata !DIExpression()), !dbg !11319
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11320
  %2 = and i32 %1, -241, !dbg !11320
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11320
  ret void, !dbg !11321
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #17 !dbg !11322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11324, metadata !DIExpression()), !dbg !11325
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11326
  %3 = and i32 %2, -4, !dbg !11326
  %4 = or i32 %3, %0, !dbg !11326
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11326
  ret void, !dbg !11327
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #18 !dbg !11328 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11329
  %2 = and i32 %1, 12, !dbg !11329
  ret i32 %2, !dbg !11330
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #17 !dbg !11331 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11333, metadata !DIExpression()), !dbg !11334
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11335
  %2 = and i32 %1, -1793, !dbg !11335
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11335
  ret void, !dbg !11336
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #17 !dbg !11337 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11339, metadata !DIExpression()), !dbg !11340
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11341
  %2 = and i32 %1, -14337, !dbg !11341
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11341
  ret void, !dbg !11342
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #17 !dbg !11343 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !11344
  %2 = icmp eq i32 %1, 1, !dbg !11346
  br i1 %2, label %7, label %3, !dbg !11347

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !11348
  br label %4, !dbg !11350

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !11351
  %6 = icmp eq i32 %5, 1, !dbg !11352
  br i1 %6, label %7, label %4, !dbg !11350, !llvm.loop !11353

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #27, !dbg !11355
  br label %8, !dbg !11356

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !11357
  %10 = icmp eq i32 %9, 4, !dbg !11358
  br i1 %10, label %11, label %8, !dbg !11356, !llvm.loop !11359

11:                                               ; preds = %8
  ret void, !dbg !11361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #17 !dbg !11362 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11363
  %2 = and i32 %1, -16777217, !dbg !11363
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11363
  ret void, !dbg !11364
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #17 !dbg !11365 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11366
  %2 = or i32 %1, 16777216, !dbg !11366
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11366
  ret void, !dbg !11367
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #18 !dbg !11368 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11369
  %2 = lshr i32 %1, 25, !dbg !11370
  %3 = and i32 %2, 1, !dbg !11370
  ret i32 %3, !dbg !11371
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #18 !dbg !11372 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11373
  %2 = lshr i32 %1, 1, !dbg !11374
  %3 = and i32 %2, 1, !dbg !11374
  ret i32 %3, !dbg !11375
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #17 !dbg !11376 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11377
  %2 = or i32 %1, 1, !dbg !11377
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11377
  ret void, !dbg !11378
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #17 !dbg !11379 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11380
  %2 = or i32 %1, 1, !dbg !11380
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11380
  ret void, !dbg !11381
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #18 !dbg !11382 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11383
  %2 = lshr i32 %1, 1, !dbg !11384
  %3 = and i32 %2, 1, !dbg !11384
  ret i32 %3, !dbg !11385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #6 !dbg !11386 {
  ret i32 16000000, !dbg !11388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #17 !dbg !11391 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !11392
  ret void, !dbg !11393
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #17 !dbg !11394 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11398, metadata !DIExpression()), !dbg !11401
  call void @llvm.dbg.value(metadata i32 262144, metadata !11399, metadata !DIExpression()), !dbg !11401
  call void @llvm.dbg.value(metadata i32 4194304, metadata !11400, metadata !DIExpression()), !dbg !11401
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11402
  %2 = and i32 %1, -16580609, !dbg !11402
  %3 = or i32 %2, 4456448, !dbg !11402
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11402
  ret void, !dbg !11403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #6 !dbg !11404 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !11405
  %2 = zext i8 %1 to i32, !dbg !11405
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !11405
  ret i32 %3, !dbg !11406
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #16 !dbg !11407 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #27, !dbg !11408
  ret void, !dbg !11409
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #16 !dbg !11410 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !11412, metadata !DIExpression()), !dbg !11414
  %2 = bitcast i32* %1 to i8*, !dbg !11415
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !11415
  call void @llvm.dbg.declare(metadata i32* %1, metadata !11413, metadata !DIExpression()), !dbg !11416
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !11417
  %4 = or i32 %3, 1, !dbg !11417
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !11417
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !11418
  %6 = and i32 %5, 1, !dbg !11418
  store volatile i32 %6, i32* %1, align 4, !dbg !11419
  %7 = load volatile i32, i32* %1, align 4, !dbg !11420
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !11421
  ret void, !dbg !11421
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !11422 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11424, metadata !DIExpression()), !dbg !11425
  %2 = tail call fastcc zeroext i1 @device_is_ready.182() #27, !dbg !11426
  br i1 %2, label %3, label %4, !dbg !11428

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !11429
  br label %4, !dbg !11430

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !11425
  ret i32 %5, !dbg !11431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.182() unnamed_addr #1 !dbg !11432 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !11436, metadata !DIExpression()), !dbg !11437
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11438, !srcloc !11440
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.183() #27, !dbg !11441
  ret i1 %1, !dbg !11442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !11443 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !11444
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !11445
  ret void, !dbg !11446
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !11447 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11449, metadata !DIExpression()), !dbg !11450
  %2 = icmp eq i32 %0, 10, !dbg !11451
  br i1 %2, label %3, label %4, !dbg !11453

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !11454
  br label %4, !dbg !11456

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !11457
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !11458
  ret i32 %0, !dbg !11459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !11460 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !11463, metadata !DIExpression()), !dbg !11465
  call void @llvm.dbg.value(metadata i8 %0, metadata !11464, metadata !DIExpression()), !dbg !11465
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11466, !srcloc !11468
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !11469
  ret void, !dbg !11470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !11471 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !11473, metadata !DIExpression()), !dbg !11476
  call void @llvm.dbg.value(metadata i8 %0, metadata !11474, metadata !DIExpression()), !dbg !11476
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !11477
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !11475, metadata !DIExpression()), !dbg !11476
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !11478
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !11478
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #26, !dbg !11479
  ret void, !dbg !11480
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.183() unnamed_addr #1 !dbg !11481 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !11483, metadata !DIExpression()), !dbg !11484
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #26, !dbg !11485
  ret i1 %1, !dbg !11486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #6 !dbg !11487 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !11536, metadata !DIExpression()), !dbg !11539
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !11537, metadata !DIExpression()), !dbg !11539
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !11538, metadata !DIExpression()), !dbg !11539
  ret void, !dbg !11540
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !11541 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11543, metadata !DIExpression()), !dbg !11548
  call void @llvm.dbg.value(metadata i8 %1, metadata !11544, metadata !DIExpression()), !dbg !11548
  call void @llvm.dbg.value(metadata i32 %2, metadata !11545, metadata !DIExpression()), !dbg !11548
  %5 = bitcast i32* %4 to i8*, !dbg !11549
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11549
  call void @llvm.dbg.value(metadata i32* %4, metadata !11547, metadata !DIExpression(DW_OP_deref)), !dbg !11548
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !11550
  call void @llvm.dbg.value(metadata i32 %6, metadata !11546, metadata !DIExpression()), !dbg !11548
  %7 = icmp eq i32 %6, 0, !dbg !11551
  br i1 %7, label %8, label %31, !dbg !11553

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !11546, metadata !DIExpression()), !dbg !11548
  %9 = and i32 %2, 131072, !dbg !11554
  %10 = icmp eq i32 %9, 0, !dbg !11556
  br i1 %10, label %28, label %11, !dbg !11557

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !11558
  %13 = icmp eq i32 %12, 0, !dbg !11561
  br i1 %13, label %18, label %14, !dbg !11562

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !11563
  %16 = shl nuw i32 1, %15, !dbg !11563
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !11565
  br label %25, !dbg !11566

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !11567
  %20 = icmp eq i32 %19, 0, !dbg !11569
  %21 = zext i8 %1 to i32, !dbg !11548
  br i1 %20, label %25, label %22, !dbg !11570

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !11571
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !11573
  br label %25, !dbg !11574

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !11575
  %27 = load i32, i32* %4, align 4, !dbg !11576
  call void @llvm.dbg.value(metadata i32 %30, metadata !11547, metadata !DIExpression()), !dbg !11548
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !11577
  br label %31, !dbg !11578

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !11575
  %30 = load i32, i32* %4, align 4, !dbg !11576
  call void @llvm.dbg.value(metadata i32 %30, metadata !11547, metadata !DIExpression()), !dbg !11548
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !11577
  call void @llvm.dbg.value(metadata i32 0, metadata !11546, metadata !DIExpression()), !dbg !11548
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11579
  ret i32 %6, !dbg !11579
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #18 !dbg !11580 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11584, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.value(metadata i32* %1, metadata !11585, metadata !DIExpression()), !dbg !11589
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11590
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11590
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11590
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11586, metadata !DIExpression()), !dbg !11589
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11591
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11591
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11591
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11588, metadata !DIExpression()), !dbg !11589
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !11592
  store i32 %9, i32* %1, align 4, !dbg !11593
  ret i32 0, !dbg !11594
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #17 !dbg !11595 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11597, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata i32 %1, metadata !11598, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata i32 %2, metadata !11599, metadata !DIExpression()), !dbg !11603
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11604
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !11604
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !11604
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !11600, metadata !DIExpression()), !dbg !11603
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !11605
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !11605
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !11605
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !11601, metadata !DIExpression()), !dbg !11603
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !11606
  call void @llvm.dbg.value(metadata i32 %10, metadata !11602, metadata !DIExpression()), !dbg !11603
  %11 = xor i32 %1, -1, !dbg !11607
  %12 = and i32 %10, %11, !dbg !11608
  %13 = and i32 %2, %1, !dbg !11609
  %14 = or i32 %12, %13, !dbg !11610
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !11611
  ret i32 0, !dbg !11612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !11613 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11615, metadata !DIExpression()), !dbg !11619
  call void @llvm.dbg.value(metadata i32 %1, metadata !11616, metadata !DIExpression()), !dbg !11619
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11620
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11620
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11620
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11617, metadata !DIExpression()), !dbg !11619
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11621
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11621
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11621
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11618, metadata !DIExpression()), !dbg !11619
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !11622
  store volatile i32 %1, i32* %9, align 4, !dbg !11622
  ret i32 0, !dbg !11623
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !11624 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11626, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.value(metadata i32 %1, metadata !11627, metadata !DIExpression()), !dbg !11630
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11631
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11631
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11631
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11628, metadata !DIExpression()), !dbg !11630
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11632
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11632
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11632
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11629, metadata !DIExpression()), !dbg !11630
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !11633
  ret i32 0, !dbg !11634
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !11635 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11637, metadata !DIExpression()), !dbg !11641
  call void @llvm.dbg.value(metadata i32 %1, metadata !11638, metadata !DIExpression()), !dbg !11641
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11642
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11642
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11642
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11639, metadata !DIExpression()), !dbg !11641
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11643
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11643
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11643
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11640, metadata !DIExpression()), !dbg !11641
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !11644
  %10 = load volatile i32, i32* %9, align 4, !dbg !11644
  %11 = xor i32 %10, %1, !dbg !11644
  store volatile i32 %11, i32* %9, align 4, !dbg !11644
  ret i32 0, !dbg !11645
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !11646 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11648, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i8 %1, metadata !11649, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 %2, metadata !11650, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 %3, metadata !11651, metadata !DIExpression()), !dbg !11658
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11659
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11659
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11659
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11652, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i8* undef, metadata !11653, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 0, metadata !11655, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 0, metadata !11656, metadata !DIExpression()), !dbg !11658
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !11660

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !11661
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !11665
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11666
  %12 = load i32, i32* %11, align 4, !dbg !11666
  %13 = icmp eq i32 %10, %12, !dbg !11667
  br i1 %13, label %14, label %29, !dbg !11668

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !11669
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !11671
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !11672
  br label %29, !dbg !11673

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11674
  %17 = load i8*, i8** %16, align 4, !dbg !11674
  call void @llvm.dbg.value(metadata i8* %17, metadata !11653, metadata !DIExpression()), !dbg !11658
  %18 = zext i8 %1 to i32, !dbg !11675
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !11677
  %20 = icmp eq i32 %19, 0, !dbg !11678
  br i1 %20, label %21, label %29, !dbg !11679

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11680
  %23 = load i32, i32* %22, align 4, !dbg !11680
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !11681
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !11682

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !11655, metadata !DIExpression()), !dbg !11658
  br label %27, !dbg !11683

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !11655, metadata !DIExpression()), !dbg !11658
  br label %27, !dbg !11685

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !11655, metadata !DIExpression()), !dbg !11658
  br label %27, !dbg !11686

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !11658
  call void @llvm.dbg.value(metadata i32 %28, metadata !11655, metadata !DIExpression()), !dbg !11658
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !11687
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !11688
  br label %29, !dbg !11688

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !11658
  call void @llvm.dbg.value(metadata i32 %30, metadata !11656, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.label(metadata !11657), !dbg !11689
  ret i32 %30, !dbg !11690
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !11691 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11693, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11694, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.value(metadata i1 %2, metadata !11695, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11697
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11698
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !11698
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !11698
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !11696, metadata !DIExpression()), !dbg !11697
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !11699
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !11700
  ret i32 %8, !dbg !11701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !11702 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11708, metadata !DIExpression()), !dbg !11711
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11709, metadata !DIExpression()), !dbg !11711
  call void @llvm.dbg.value(metadata i1 %2, metadata !11710, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11711
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !11712
  br i1 %4, label %5, label %6, !dbg !11715

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.189, i32 0, i32 0), i32 noundef 42) #26, !dbg !11716
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33.190, i32 0, i32 0)) #26, !dbg !11716
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.189, i32 0, i32 0), i32 noundef 42) #26, !dbg !11716
  unreachable, !dbg !11716

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !11718
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !11718
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !11718
  br i1 %9, label %10, label %11, !dbg !11721

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34.191, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.189, i32 0, i32 0), i32 noundef 43) #26, !dbg !11722
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.192, i32 0, i32 0)) #26, !dbg !11722
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.189, i32 0, i32 0), i32 noundef 43) #26, !dbg !11722
  unreachable, !dbg !11722

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !11724
  br i1 %12, label %18, label %13, !dbg !11726

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11727
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #27, !dbg !11730
  %16 = or i1 %15, %2, !dbg !11731
  %17 = select i1 %16, i32 0, i32 -22, !dbg !11731
  br i1 %2, label %19, label %21, !dbg !11731

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !11732

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11733
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #27, !dbg !11736
  br label %21, !dbg !11737

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !11711
  ret i32 %22, !dbg !11738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11739 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11743, metadata !DIExpression()), !dbg !11744
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.193(%struct._slist* noundef %0) #27, !dbg !11745
  %3 = icmp eq %struct._snode* %2, null, !dbg !11745
  ret i1 %3, !dbg !11745
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !11746 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11750, metadata !DIExpression()), !dbg !11754
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11751, metadata !DIExpression()), !dbg !11754
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11752, metadata !DIExpression()), !dbg !11754
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head.193(%struct._slist* noundef %0) #27, !dbg !11755
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11753, metadata !DIExpression()), !dbg !11754
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11752, metadata !DIExpression()), !dbg !11754
  %4 = icmp eq %struct._snode* %3, null, !dbg !11757
  br i1 %4, label %15, label %5, !dbg !11755

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11753, metadata !DIExpression()), !dbg !11754
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11752, metadata !DIExpression()), !dbg !11754
  %6 = icmp eq %struct._snode* %3, %1, !dbg !11759
  br i1 %6, label %9, label %11, !dbg !11762

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11753, metadata !DIExpression()), !dbg !11754
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11752, metadata !DIExpression()), !dbg !11754
  %8 = icmp eq %struct._snode* %13, %1, !dbg !11759
  br i1 %8, label %9, label %11, !dbg !11762, !llvm.loop !11763

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove.198(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !11764
  br label %15, !dbg !11764

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11753, metadata !DIExpression()), !dbg !11754
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11752, metadata !DIExpression()), !dbg !11754
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next.199(%struct._snode* noundef nonnull %12) #27, !dbg !11757
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11753, metadata !DIExpression()), !dbg !11754
  %14 = icmp eq %struct._snode* %13, null, !dbg !11757
  br i1 %14, label %15, label %7, !dbg !11755, !llvm.loop !11763

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !11766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !11767 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11771, metadata !DIExpression()), !dbg !11773
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11772, metadata !DIExpression()), !dbg !11773
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head.193(%struct._slist* noundef %0) #27, !dbg !11774
  tail call fastcc void @z_snode_next_set.194(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !11774
  tail call fastcc void @z_slist_head_set.195(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !11774
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail.196(%struct._slist* noundef %0) #27, !dbg !11775
  %5 = icmp eq %struct._snode* %4, null, !dbg !11775
  br i1 %5, label %6, label %8, !dbg !11774

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head.193(%struct._slist* noundef %0) #27, !dbg !11777
  tail call fastcc void @z_slist_tail_set.197(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !11777
  br label %8, !dbg !11777

8:                                                ; preds = %6, %2
  ret void, !dbg !11774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.193(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11779 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11783, metadata !DIExpression()), !dbg !11784
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11785
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11785
  ret %struct._snode* %3, !dbg !11786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set.194(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11787 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11791, metadata !DIExpression()), !dbg !11793
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11792, metadata !DIExpression()), !dbg !11793
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11794
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11795
  ret void, !dbg !11796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set.195(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11797 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11799, metadata !DIExpression()), !dbg !11801
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11800, metadata !DIExpression()), !dbg !11801
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11802
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11803
  ret void, !dbg !11804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail.196(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11805 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11807, metadata !DIExpression()), !dbg !11808
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11809
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11809
  ret %struct._snode* %3, !dbg !11810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set.197(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11811 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11813, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11814, metadata !DIExpression()), !dbg !11815
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11816
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11817
  ret void, !dbg !11818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove.198(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !11819 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11823, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11824, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !11825, metadata !DIExpression()), !dbg !11826
  %4 = icmp eq %struct._snode* %1, null, !dbg !11827
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek.201(%struct._snode* noundef %2) #27, !dbg !11829
  br i1 %4, label %6, label %11, !dbg !11830

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set.195(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !11831
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail.196(%struct._slist* noundef %0) #27, !dbg !11833
  %8 = icmp eq %struct._snode* %7, %2, !dbg !11833
  br i1 %8, label %9, label %15, !dbg !11831

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head.193(%struct._slist* noundef %0) #27, !dbg !11835
  tail call fastcc void @z_slist_tail_set.197(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !11835
  br label %15, !dbg !11835

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set.194(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !11837
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail.196(%struct._slist* noundef %0) #27, !dbg !11839
  %13 = icmp eq %struct._snode* %12, %2, !dbg !11839
  br i1 %13, label %14, label %15, !dbg !11837

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set.197(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !11841
  br label %15, !dbg !11841

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set.194(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !11830
  ret void, !dbg !11830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next.199(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !11843 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11847, metadata !DIExpression()), !dbg !11848
  %2 = icmp eq %struct._snode* %0, null, !dbg !11849
  br i1 %2, label %5, label %3, !dbg !11849

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check.200(%struct._snode* noundef nonnull %0) #27, !dbg !11849
  br label %5, !dbg !11849

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !11849
  ret %struct._snode* %6, !dbg !11849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check.200(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11850 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11852, metadata !DIExpression()), !dbg !11853
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek.201(%struct._snode* noundef %0) #27, !dbg !11854
  ret %struct._snode* %2, !dbg !11854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek.201(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11855 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11857, metadata !DIExpression()), !dbg !11858
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11859
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11859
  ret %struct._snode* %3, !dbg !11860
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !11861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11863, metadata !DIExpression()), !dbg !11866
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !11867, !range !11868
  call void @llvm.dbg.value(metadata i32 %2, metadata !11864, metadata !DIExpression()), !dbg !11866
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !11869
  call void @llvm.dbg.value(metadata i32 %3, metadata !11865, metadata !DIExpression()), !dbg !11866
  ret i32 %3, !dbg !11870
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !11871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11873, metadata !DIExpression()), !dbg !11876
  call void @llvm.dbg.value(metadata i8* %1, metadata !11874, metadata !DIExpression()), !dbg !11876
  call void @llvm.dbg.value(metadata i8* %1, metadata !11875, metadata !DIExpression()), !dbg !11876
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !11877
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !11877
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11878
  %6 = bitcast i8* %5 to %struct.device**, !dbg !11878
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !11878
  %8 = shl nuw i32 1, %0, !dbg !11879
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !11880
  ret void, !dbg !11881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11882 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !11886, metadata !DIExpression()), !dbg !11892
  call void @llvm.dbg.value(metadata i32 %1, metadata !11887, metadata !DIExpression()), !dbg !11892
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11888, metadata !DIExpression()), !dbg !11892
  %4 = bitcast i64* %3 to i8*, !dbg !11893
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11893
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !11890, metadata !DIExpression()), !dbg !11892
  store i64 4294967328, i64* %3, align 8, !dbg !11894
  call void @llvm.dbg.value(metadata i64* %3, metadata !11890, metadata !DIExpression(DW_OP_deref)), !dbg !11892
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !11895
  call void @llvm.dbg.value(metadata i32 %5, metadata !11891, metadata !DIExpression()), !dbg !11892
  %6 = icmp eq i32 %5, 0, !dbg !11896
  br i1 %6, label %7, label %8, !dbg !11898

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !11899
  br label %8, !dbg !11900

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11901
  ret void, !dbg !11901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !11902 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11904, metadata !DIExpression()), !dbg !11907
  call void @llvm.dbg.value(metadata i8* %0, metadata !11905, metadata !DIExpression()), !dbg !11907
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !11908
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !11906, metadata !DIExpression()), !dbg !11907
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !11909
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !11909
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #26, !dbg !11910
  ret i32 %5, !dbg !11911
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11912 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11914, metadata !DIExpression()), !dbg !11917
  call void @llvm.dbg.value(metadata i32 %1, metadata !11915, metadata !DIExpression()), !dbg !11917
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !11918
  call void @llvm.dbg.value(metadata i32 %3, metadata !11916, metadata !DIExpression()), !dbg !11917
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !11919
  ret void, !dbg !11920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #6 !dbg !11921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11925, metadata !DIExpression()), !dbg !11926
  %2 = sdiv i32 %0, 4, !dbg !11927
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !11928
  %6 = add nsw i32 %5, 16, !dbg !11929
  %7 = shl i32 15, %6, !dbg !11930
  %8 = or i32 %7, %2, !dbg !11931
  ret i32 %8, !dbg !11932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11938, metadata !DIExpression()), !dbg !11940
  call void @llvm.dbg.value(metadata i32 %1, metadata !11939, metadata !DIExpression()), !dbg !11940
  %3 = and i32 %1, 3, !dbg !11941
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !11941
  %5 = load volatile i32, i32* %4, align 4, !dbg !11941
  %6 = lshr i32 %1, 16, !dbg !11941
  %7 = xor i32 %6, -1, !dbg !11941
  %8 = and i32 %5, %7, !dbg !11941
  call void @llvm.dbg.value(metadata i32 %6, metadata !11942, metadata !DIExpression()) #25, !dbg !11946
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11948, !srcloc !11949
  call void @llvm.dbg.value(metadata i32 %9, metadata !11945, metadata !DIExpression()) #25, !dbg !11946
  call void @llvm.dbg.value(metadata i32 %9, metadata !11950, metadata !DIExpression()) #25, !dbg !11955
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !11957, !range !5828
  %11 = shl i32 %0, %10, !dbg !11941
  %12 = or i32 %11, %8, !dbg !11941
  store volatile i32 %12, i32* %4, align 4, !dbg !11941
  ret void, !dbg !11958
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11959 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11963, metadata !DIExpression()), !dbg !11968
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !11964, metadata !DIExpression()), !dbg !11968
  call void @llvm.dbg.value(metadata i32 %2, metadata !11965, metadata !DIExpression()), !dbg !11968
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head.193(%struct._slist* noundef %0) #27, !dbg !11969
  %5 = icmp eq %struct._snode* %4, null, !dbg !11969
  br i1 %5, label %24, label %6, !dbg !11969

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next.199(%struct._snode* noundef nonnull %7) #27, !dbg !11971
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11967, metadata !DIExpression()), !dbg !11968
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !11966, metadata !DIExpression()), !dbg !11968
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !11972
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !11972
  %12 = load i32, i32* %11, align 4, !dbg !11972
  %13 = and i32 %12, %2, !dbg !11976
  %14 = icmp eq i32 %13, 0, !dbg !11976
  br i1 %14, label %22, label %15, !dbg !11977

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !11978
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !11978
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !11978
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !11978
  br i1 %19, label %20, label %21, !dbg !11982

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.189, i32 0, i32 0), i32 noundef 77) #26, !dbg !11983
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.192, i32 0, i32 0)) #26, !dbg !11983
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.189, i32 0, i32 0), i32 noundef 77) #26, !dbg !11983
  unreachable, !dbg !11983

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #26, !dbg !11985
  br label %22, !dbg !11986

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11966, metadata !DIExpression()), !dbg !11968
  %23 = icmp eq %struct._snode* %8, null, !dbg !11987
  br i1 %23, label %24, label %6, !dbg !11987

24:                                               ; preds = %22, %3
  ret void, !dbg !11988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !11989 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11991, metadata !DIExpression()), !dbg !11992
  %2 = and i32 %0, 3, !dbg !11993
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !11993
  %4 = load volatile i32, i32* %3, align 4, !dbg !11993
  %5 = lshr i32 %0, 16, !dbg !11993
  %6 = and i32 %4, %5, !dbg !11993
  call void @llvm.dbg.value(metadata i32 %5, metadata !11942, metadata !DIExpression()) #25, !dbg !11994
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !11996, !srcloc !11949
  call void @llvm.dbg.value(metadata i32 %7, metadata !11945, metadata !DIExpression()) #25, !dbg !11994
  call void @llvm.dbg.value(metadata i32 %7, metadata !11950, metadata !DIExpression()) #25, !dbg !11997
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11999, !range !5828
  %9 = lshr i32 %6, %8, !dbg !12000
  ret i32 %9, !dbg !12001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !12002 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12007, metadata !DIExpression()), !dbg !12009
  call void @llvm.dbg.value(metadata i32 %1, metadata !12008, metadata !DIExpression()), !dbg !12009
  %3 = shl i32 %1, 16, !dbg !12010
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !12010
  store volatile i32 %3, i32* %4, align 4, !dbg !12010
  ret void, !dbg !12011
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #18 !dbg !12012 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12016, metadata !DIExpression()), !dbg !12017
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !12018
  %3 = load volatile i32, i32* %2, align 4, !dbg !12018
  ret i32 %3, !dbg !12019
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !12020 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12022, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i32 %1, metadata !12023, metadata !DIExpression()), !dbg !12024
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !12025
  store volatile i32 %1, i32* %3, align 4, !dbg !12025
  ret void, !dbg !12026
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #18 !dbg !12027 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12029, metadata !DIExpression()), !dbg !12030
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !12031
  %3 = load volatile i32, i32* %2, align 4, !dbg !12031
  ret i32 %3, !dbg !12032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !12033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12037, metadata !DIExpression()), !dbg !12039
  call void @llvm.dbg.value(metadata i32* %1, metadata !12038, metadata !DIExpression()), !dbg !12039
  %3 = and i32 %0, 131072, !dbg !12040
  %4 = icmp eq i32 %3, 0, !dbg !12042
  br i1 %4, label %22, label %5, !dbg !12043

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !12044
  %6 = and i32 %0, 2, !dbg !12046
  %7 = icmp eq i32 %6, 0, !dbg !12048
  br i1 %7, label %11, label %8, !dbg !12049

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !12050
  %10 = icmp eq i32 %9, 0, !dbg !12050
  br i1 %10, label %33, label %11, !dbg !12053

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !12054
  store i32 %12, i32* %1, align 4, !dbg !12054
  %13 = and i32 %0, 16, !dbg !12055
  %14 = icmp eq i32 %13, 0, !dbg !12057
  br i1 %14, label %17, label %15, !dbg !12058

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !12059
  br label %31, !dbg !12061

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !12062
  %19 = icmp eq i32 %18, 0, !dbg !12064
  br i1 %19, label %33, label %20, !dbg !12065

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !12066
  br label %31, !dbg !12068

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !12069
  %24 = icmp eq i32 %23, 0, !dbg !12071
  br i1 %24, label %31, label %25, !dbg !12072

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !12073
  %27 = icmp eq i32 %26, 0, !dbg !12076
  br i1 %27, label %28, label %31, !dbg !12077

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !12078
  br label %33, !dbg !12079

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !12039
  ret i32 %34, !dbg !12079
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12080 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12084, metadata !DIExpression()), !dbg !12095
  call void @llvm.dbg.value(metadata i32 %1, metadata !12085, metadata !DIExpression()), !dbg !12095
  call void @llvm.dbg.value(metadata i32 %2, metadata !12086, metadata !DIExpression()), !dbg !12095
  call void @llvm.dbg.value(metadata i32 %3, metadata !12087, metadata !DIExpression()), !dbg !12095
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12096
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !12096
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !12096
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !12088, metadata !DIExpression()), !dbg !12095
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !12097
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !12097
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !12097
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !12089, metadata !DIExpression()), !dbg !12095
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !12098
  call void @llvm.dbg.value(metadata i32 %11, metadata !12090, metadata !DIExpression()), !dbg !12095
  %12 = and i32 %2, 48, !dbg !12099
  call void @llvm.dbg.value(metadata i32 %12, metadata !12091, metadata !DIExpression()), !dbg !12095
  call void @llvm.dbg.value(metadata i32 %2, metadata !12092, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !12095
  call void @llvm.dbg.value(metadata i32 %2, metadata !12093, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !12095
  call void @llvm.dbg.value(metadata i32 %2, metadata !12094, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !12095
  %13 = lshr i32 %2, 6, !dbg !12100
  %14 = and i32 %13, 1, !dbg !12100
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !12101
  %15 = lshr i32 %2, 7, !dbg !12102
  %16 = and i32 %15, 3, !dbg !12102
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !12103
  %17 = lshr i32 %2, 9, !dbg !12104
  %18 = and i32 %17, 3, !dbg !12104
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !12105
  %19 = icmp eq i32 %12, 32, !dbg !12106
  br i1 %19, label %20, label %24, !dbg !12108

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !12109
  br i1 %21, label %22, label %23, !dbg !12112

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !12113
  br label %24, !dbg !12115

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !12116
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !12118
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !12119
  ret void, !dbg !12120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #6 !dbg !12121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12123, metadata !DIExpression()), !dbg !12125
  %2 = shl nuw i32 1, %0, !dbg !12126
  call void @llvm.dbg.value(metadata i32 %2, metadata !12124, metadata !DIExpression()), !dbg !12125
  ret i32 %2, !dbg !12127
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !12128 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12132, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.value(metadata i32 %1, metadata !12133, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.value(metadata i32 %2, metadata !12134, metadata !DIExpression()), !dbg !12135
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !12136
  %5 = load volatile i32, i32* %4, align 4, !dbg !12136
  %6 = xor i32 %1, -1, !dbg !12136
  %7 = and i32 %5, %6, !dbg !12136
  %8 = mul i32 %2, %1, !dbg !12136
  %9 = or i32 %7, %8, !dbg !12136
  store volatile i32 %9, i32* %4, align 4, !dbg !12136
  ret void, !dbg !12137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12138 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12140, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata i32 %1, metadata !12141, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata i32 %2, metadata !12142, metadata !DIExpression()), !dbg !12143
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !12144
  %5 = load volatile i32, i32* %4, align 4, !dbg !12144
  call void @llvm.dbg.value(metadata i32 %1, metadata !11942, metadata !DIExpression()) #25, !dbg !12145
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !12147, !srcloc !11949
  call void @llvm.dbg.value(metadata i32 %6, metadata !11945, metadata !DIExpression()) #25, !dbg !12145
  call void @llvm.dbg.value(metadata i32 %6, metadata !11950, metadata !DIExpression()) #25, !dbg !12148
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !12150, !range !5828
  %8 = shl nuw nsw i32 %7, 1, !dbg !12144
  %9 = shl i32 3, %8, !dbg !12144
  %10 = xor i32 %9, -1, !dbg !12144
  %11 = and i32 %5, %10, !dbg !12144
  call void @llvm.dbg.value(metadata i32 %1, metadata !11942, metadata !DIExpression()) #25, !dbg !12151
  call void @llvm.dbg.value(metadata i32 %6, metadata !11945, metadata !DIExpression()) #25, !dbg !12151
  call void @llvm.dbg.value(metadata i32 %6, metadata !11950, metadata !DIExpression()) #25, !dbg !12153
  %12 = shl i32 %2, %8, !dbg !12144
  %13 = or i32 %11, %12, !dbg !12144
  store volatile i32 %13, i32* %4, align 4, !dbg !12144
  ret void, !dbg !12155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12156 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12158, metadata !DIExpression()), !dbg !12161
  call void @llvm.dbg.value(metadata i32 %1, metadata !12159, metadata !DIExpression()), !dbg !12161
  call void @llvm.dbg.value(metadata i32 %2, metadata !12160, metadata !DIExpression()), !dbg !12161
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !12162
  %5 = load volatile i32, i32* %4, align 4, !dbg !12162
  call void @llvm.dbg.value(metadata i32 %1, metadata !11942, metadata !DIExpression()) #25, !dbg !12163
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !12165, !srcloc !11949
  call void @llvm.dbg.value(metadata i32 %6, metadata !11945, metadata !DIExpression()) #25, !dbg !12163
  call void @llvm.dbg.value(metadata i32 %6, metadata !11950, metadata !DIExpression()) #25, !dbg !12166
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !12168, !range !5828
  %8 = shl nuw nsw i32 %7, 1, !dbg !12162
  %9 = shl i32 3, %8, !dbg !12162
  %10 = xor i32 %9, -1, !dbg !12162
  %11 = and i32 %5, %10, !dbg !12162
  call void @llvm.dbg.value(metadata i32 %1, metadata !11942, metadata !DIExpression()) #25, !dbg !12169
  call void @llvm.dbg.value(metadata i32 %6, metadata !11945, metadata !DIExpression()) #25, !dbg !12169
  call void @llvm.dbg.value(metadata i32 %6, metadata !11950, metadata !DIExpression()) #25, !dbg !12171
  %12 = shl i32 %2, %8, !dbg !12162
  %13 = or i32 %11, %12, !dbg !12162
  store volatile i32 %13, i32* %4, align 4, !dbg !12162
  ret void, !dbg !12173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12174 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12176, metadata !DIExpression()), !dbg !12179
  call void @llvm.dbg.value(metadata i32 %1, metadata !12177, metadata !DIExpression()), !dbg !12179
  call void @llvm.dbg.value(metadata i32 %2, metadata !12178, metadata !DIExpression()), !dbg !12179
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !12180
  %5 = load volatile i32, i32* %4, align 4, !dbg !12180
  call void @llvm.dbg.value(metadata i32 %1, metadata !11942, metadata !DIExpression()) #25, !dbg !12181
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !12183, !srcloc !11949
  call void @llvm.dbg.value(metadata i32 %6, metadata !11945, metadata !DIExpression()) #25, !dbg !12181
  call void @llvm.dbg.value(metadata i32 %6, metadata !11950, metadata !DIExpression()) #25, !dbg !12184
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !12186, !range !5828
  %8 = shl nuw nsw i32 %7, 2, !dbg !12180
  %9 = shl i32 15, %8, !dbg !12180
  %10 = xor i32 %9, -1, !dbg !12180
  %11 = and i32 %5, %10, !dbg !12180
  call void @llvm.dbg.value(metadata i32 %1, metadata !11942, metadata !DIExpression()) #25, !dbg !12187
  call void @llvm.dbg.value(metadata i32 %6, metadata !11945, metadata !DIExpression()) #25, !dbg !12187
  call void @llvm.dbg.value(metadata i32 %6, metadata !11950, metadata !DIExpression()) #25, !dbg !12189
  %12 = shl i32 %2, %8, !dbg !12180
  %13 = or i32 %11, %12, !dbg !12180
  store volatile i32 %13, i32* %4, align 4, !dbg !12180
  ret void, !dbg !12191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12192 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12194, metadata !DIExpression()), !dbg !12197
  call void @llvm.dbg.value(metadata i32 %1, metadata !12195, metadata !DIExpression()), !dbg !12197
  call void @llvm.dbg.value(metadata i32 %2, metadata !12196, metadata !DIExpression()), !dbg !12197
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !12198
  %5 = load volatile i32, i32* %4, align 4, !dbg !12198
  %6 = lshr i32 %1, 8, !dbg !12198
  call void @llvm.dbg.value(metadata i32 %6, metadata !11942, metadata !DIExpression()) #25, !dbg !12199
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !12201, !srcloc !11949
  call void @llvm.dbg.value(metadata i32 %7, metadata !11945, metadata !DIExpression()) #25, !dbg !12199
  call void @llvm.dbg.value(metadata i32 %7, metadata !11950, metadata !DIExpression()) #25, !dbg !12202
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !12204, !range !5828
  %9 = shl nuw nsw i32 %8, 2, !dbg !12198
  %10 = shl i32 15, %9, !dbg !12198
  %11 = xor i32 %10, -1, !dbg !12198
  %12 = and i32 %5, %11, !dbg !12198
  call void @llvm.dbg.value(metadata i32 %6, metadata !11942, metadata !DIExpression()) #25, !dbg !12205
  call void @llvm.dbg.value(metadata i32 %7, metadata !11945, metadata !DIExpression()) #25, !dbg !12205
  call void @llvm.dbg.value(metadata i32 %7, metadata !11950, metadata !DIExpression()) #25, !dbg !12207
  %13 = shl i32 %2, %9, !dbg !12198
  %14 = or i32 %12, %13, !dbg !12198
  store volatile i32 %14, i32* %4, align 4, !dbg !12198
  ret void, !dbg !12209
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12210 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12212, metadata !DIExpression()), !dbg !12215
  call void @llvm.dbg.value(metadata i32 %1, metadata !12213, metadata !DIExpression()), !dbg !12215
  call void @llvm.dbg.value(metadata i32 %2, metadata !12214, metadata !DIExpression()), !dbg !12215
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !12216
  %5 = load volatile i32, i32* %4, align 4, !dbg !12216
  call void @llvm.dbg.value(metadata i32 %1, metadata !11942, metadata !DIExpression()) #25, !dbg !12217
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !12219, !srcloc !11949
  call void @llvm.dbg.value(metadata i32 %6, metadata !11945, metadata !DIExpression()) #25, !dbg !12217
  call void @llvm.dbg.value(metadata i32 %6, metadata !11950, metadata !DIExpression()) #25, !dbg !12220
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !12222, !range !5828
  %8 = shl nuw nsw i32 %7, 1, !dbg !12216
  %9 = shl i32 3, %8, !dbg !12216
  %10 = xor i32 %9, -1, !dbg !12216
  %11 = and i32 %5, %10, !dbg !12216
  call void @llvm.dbg.value(metadata i32 %1, metadata !11942, metadata !DIExpression()) #25, !dbg !12223
  call void @llvm.dbg.value(metadata i32 %6, metadata !11945, metadata !DIExpression()) #25, !dbg !12223
  call void @llvm.dbg.value(metadata i32 %6, metadata !11950, metadata !DIExpression()) #25, !dbg !12225
  %12 = shl i32 %2, %8, !dbg !12216
  %13 = or i32 %11, %12, !dbg !12216
  store volatile i32 %13, i32* %4, align 4, !dbg !12216
  ret void, !dbg !12227
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !12228 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12230, metadata !DIExpression()), !dbg !12233
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12234
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !12234
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !12234
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !12231, metadata !DIExpression()), !dbg !12233
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !12235
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !12236
  %6 = tail call fastcc zeroext i1 @device_is_ready.211() #27, !dbg !12237
  br i1 %6, label %7, label %11, !dbg !12239

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !12240
  call void @llvm.dbg.value(metadata i32 %8, metadata !12232, metadata !DIExpression()), !dbg !12233
  %9 = icmp slt i32 %8, 0, !dbg !12241
  %10 = select i1 %9, i32 %8, i32 0, !dbg !12243
  br label %11, !dbg !12243

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !12233
  ret i32 %12, !dbg !12244
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.211() unnamed_addr #1 !dbg !12245 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !12249, metadata !DIExpression()), !dbg !12250
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12251, !srcloc !12253
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.212() #27, !dbg !12254
  ret i1 %1, !dbg !12255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !12256 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12260, metadata !DIExpression()), !dbg !12265
  call void @llvm.dbg.value(metadata i8 1, metadata !12261, metadata !DIExpression()), !dbg !12265
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12266
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !12266
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !12266
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !12262, metadata !DIExpression()), !dbg !12265
  call void @llvm.dbg.value(metadata i32 0, metadata !12263, metadata !DIExpression()), !dbg !12265
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !12264, metadata !DIExpression()), !dbg !12265
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !12267
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !12270
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !12271
  call void @llvm.dbg.value(metadata i32 %7, metadata !12263, metadata !DIExpression()), !dbg !12265
  ret i32 %7, !dbg !12272
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.212() unnamed_addr #1 !dbg !12273 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !12275, metadata !DIExpression()), !dbg !12276
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #26, !dbg !12277
  ret i1 %1, !dbg !12278
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !12279 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12283, metadata !DIExpression()), !dbg !12291
  call void @llvm.dbg.value(metadata i32 %1, metadata !12284, metadata !DIExpression()), !dbg !12291
  call void @llvm.dbg.value(metadata i32 %2, metadata !12285, metadata !DIExpression()), !dbg !12291
  call void @llvm.dbg.value(metadata i32 %3, metadata !12286, metadata !DIExpression()), !dbg !12291
  call void @llvm.dbg.value(metadata i32 0, metadata !12287, metadata !DIExpression()), !dbg !12291
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !12292
  %5 = icmp eq i32 %3, 17, !dbg !12293
  br i1 %5, label %6, label %14, !dbg !12294

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !12295
  call void @llvm.dbg.value(metadata i32 %7, metadata !12288, metadata !DIExpression()), !dbg !12296
  %8 = icmp eq i32 %7, 0, !dbg !12297
  %9 = shl nuw i32 1, %1, !dbg !12299
  br i1 %8, label %12, label %10, !dbg !12300

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !12301
  br label %14, !dbg !12303

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !12304
  br label %14, !dbg !12307

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !12308
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #16 !dbg !12309 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12311, metadata !DIExpression()), !dbg !12315
  call void @llvm.dbg.value(metadata i8* %1, metadata !12312, metadata !DIExpression()), !dbg !12315
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12316
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12316
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12316
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12313, metadata !DIExpression()), !dbg !12315
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12317
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12317
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !12319
  %9 = icmp eq i32 %8, 0, !dbg !12319
  br i1 %9, label %12, label %10, !dbg !12320

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12321
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !12323
  br label %12, !dbg !12324

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12325
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !12327
  %15 = icmp eq i32 %14, 0, !dbg !12327
  br i1 %15, label %19, label %16, !dbg !12328

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12329
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !12330
  store i8 %18, i8* %1, align 1, !dbg !12331
  br label %19, !dbg !12332

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !12315
  ret i32 %20, !dbg !12333
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !12334 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12336, metadata !DIExpression()), !dbg !12340
  call void @llvm.dbg.value(metadata i8 %1, metadata !12337, metadata !DIExpression()), !dbg !12340
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12341
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12341
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12341
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12338, metadata !DIExpression()), !dbg !12340
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !12342

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12343
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !12346
  %10 = icmp eq i32 %9, 0, !dbg !12346
  br i1 %10, label %18, label %11, !dbg !12347

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12348, !srcloc !12355
  call void @llvm.dbg.value(metadata i32 undef, metadata !12351, metadata !DIExpression()) #25, !dbg !12356
  call void @llvm.dbg.value(metadata i32 undef, metadata !12352, metadata !DIExpression()) #25, !dbg !12356
  call void @llvm.dbg.value(metadata i32 undef, metadata !12339, metadata !DIExpression()), !dbg !12340
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12357
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !12359
  %15 = icmp eq i32 %14, 0, !dbg !12359
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !12348
  br i1 %15, label %17, label %19, !dbg !12360

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !12351, metadata !DIExpression()) #25, !dbg !12356
  call void @llvm.dbg.value(metadata i32 %16, metadata !12339, metadata !DIExpression()), !dbg !12340
  call void @llvm.dbg.value(metadata i32 undef, metadata !12361, metadata !DIExpression()) #25, !dbg !12364
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !12366, !srcloc !12367
  br label %18, !dbg !12368

18:                                               ; preds = %17, %7
  br label %7, !dbg !12343, !llvm.loop !12369

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !12348
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12371
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !12372
  call void @llvm.dbg.value(metadata i32 %20, metadata !12361, metadata !DIExpression()) #25, !dbg !12373
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !12375, !srcloc !12367
  ret void, !dbg !12376
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #16 !dbg !12377 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12379, metadata !DIExpression()), !dbg !12382
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12383
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12383
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12383
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12380, metadata !DIExpression()), !dbg !12382
  call void @llvm.dbg.value(metadata i32 0, metadata !12381, metadata !DIExpression()), !dbg !12382
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12384
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12384
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !12386
  %8 = icmp ne i32 %7, 0, !dbg !12386
  %9 = zext i1 %8 to i32, !dbg !12387
  call void @llvm.dbg.value(metadata i32 %9, metadata !12381, metadata !DIExpression()), !dbg !12382
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12388
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !12390
  %12 = icmp eq i32 %11, 0, !dbg !12390
  %13 = or i32 %9, 2, !dbg !12391
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !12391
  call void @llvm.dbg.value(metadata i32 %14, metadata !12381, metadata !DIExpression()), !dbg !12382
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12392
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !12394
  %17 = icmp eq i32 %16, 0, !dbg !12394
  %18 = or i32 %14, 4, !dbg !12395
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !12395
  call void @llvm.dbg.value(metadata i32 %19, metadata !12381, metadata !DIExpression()), !dbg !12382
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12396
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !12398
  %22 = icmp eq i32 %21, 0, !dbg !12398
  %23 = or i32 %19, 8, !dbg !12399
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !12399
  call void @llvm.dbg.value(metadata i32 %24, metadata !12381, metadata !DIExpression()), !dbg !12382
  %25 = and i32 %24, 8, !dbg !12400
  %26 = icmp eq i32 %25, 0, !dbg !12400
  br i1 %26, label %29, label %27, !dbg !12402

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12403
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !12405
  br label %29, !dbg !12406

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !12407
  %31 = icmp eq i32 %30, 0, !dbg !12407
  br i1 %31, label %34, label %32, !dbg !12409

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12410
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !12412
  br label %34, !dbg !12413

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !12414
  %36 = icmp eq i32 %35, 0, !dbg !12414
  br i1 %36, label %39, label %37, !dbg !12416

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12417
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !12419
  br label %39, !dbg !12420

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !12421
  %41 = icmp eq i32 %40, 0, !dbg !12421
  br i1 %41, label %44, label %42, !dbg !12423

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12424
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !12426
  br label %44, !dbg !12427

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12428
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !12429
  ret i32 %24, !dbg !12430
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !12431 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12433, metadata !DIExpression()), !dbg !12442
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12434, metadata !DIExpression()), !dbg !12442
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12443
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12443
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12443
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12435, metadata !DIExpression()), !dbg !12442
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12444
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !12444
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !12444
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !12436, metadata !DIExpression()), !dbg !12442
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12445
  %10 = load i8, i8* %9, align 4, !dbg !12445
  %11 = zext i8 %10 to i32, !dbg !12446
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !12447
  call void @llvm.dbg.value(metadata i32 %12, metadata !12438, metadata !DIExpression()), !dbg !12442
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12448
  %14 = load i8, i8* %13, align 1, !dbg !12448
  %15 = zext i8 %14 to i32, !dbg !12449
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !12450
  call void @llvm.dbg.value(metadata i32 %16, metadata !12439, metadata !DIExpression()), !dbg !12442
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12451
  %18 = load i8, i8* %17, align 2, !dbg !12451
  %19 = zext i8 %18 to i32, !dbg !12452
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !12453
  call void @llvm.dbg.value(metadata i32 %20, metadata !12440, metadata !DIExpression()), !dbg !12442
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12454
  %22 = load i8, i8* %21, align 1, !dbg !12454
  %23 = zext i8 %22 to i32, !dbg !12455
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !12456
  call void @llvm.dbg.value(metadata i32 %24, metadata !12441, metadata !DIExpression()), !dbg !12442
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !12457

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !12459
  br i1 %26, label %69, label %27, !dbg !12461

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !12462

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !12463
  br i1 %29, label %65, label %30, !dbg !12463

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !12465
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !12442
  br i1 %31, label %38, label %34, !dbg !12467

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !12468
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !12468

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !12471
  br i1 %37, label %38, label %69, !dbg !12472

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12473
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !12474
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !12475
  %41 = icmp eq i32 %12, %40, !dbg !12477
  br i1 %41, label %43, label %42, !dbg !12478

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !12479
  br label %43, !dbg !12481

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !12482
  %45 = icmp eq i32 %16, %44, !dbg !12484
  br i1 %45, label %47, label %46, !dbg !12485

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !12486
  br label %47, !dbg !12488

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !12489
  %49 = icmp eq i32 %20, %48, !dbg !12491
  br i1 %49, label %51, label %50, !dbg !12492

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !12493
  br label %51, !dbg !12495

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !12496
  %53 = icmp eq i32 %24, %52, !dbg !12498
  br i1 %53, label %55, label %54, !dbg !12499

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !12500
  br label %55, !dbg !12502

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12503
  %57 = load i32, i32* %56, align 4, !dbg !12503
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !12505
  %59 = load i32, i32* %58, align 4, !dbg !12505
  %60 = icmp eq i32 %57, %59, !dbg !12506
  br i1 %60, label %63, label %61, !dbg !12507

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !12508
  %62 = load i32, i32* %56, align 4, !dbg !12510
  store i32 %62, i32* %58, align 4, !dbg !12511
  br label %63, !dbg !12512

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !12513
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !12514
  br label %69, !dbg !12515

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !12463
  %67 = and i8 %66, 1, !dbg !12463
  %68 = icmp eq i8 %67, 0, !dbg !12463
  br i1 %68, label %30, label %69, !dbg !12463

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !12442
  ret i32 %70, !dbg !12516
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !12517 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12519, metadata !DIExpression()), !dbg !12522
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12520, metadata !DIExpression()), !dbg !12522
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12523
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !12523
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !12523
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !12521, metadata !DIExpression()), !dbg !12522
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !12524
  %7 = load i32, i32* %6, align 4, !dbg !12524
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12525
  store i32 %7, i32* %8, align 4, !dbg !12526
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !12527, !range !12528
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !12529
  %11 = trunc i32 %10 to i8, !dbg !12529
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12530
  store i8 %11, i8* %12, align 4, !dbg !12531
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !12532, !range !12533
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !12534
  %15 = trunc i32 %14 to i8, !dbg !12534
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12535
  store i8 %15, i8* %16, align 1, !dbg !12536
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !12537
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !12538, !range !12528
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !12539
  %20 = trunc i32 %19 to i8, !dbg !12539
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12540
  store i8 %20, i8* %21, align 2, !dbg !12541
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !12542, !range !12543
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !12544
  %24 = trunc i32 %23 to i8, !dbg !12544
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12545
  store i8 %24, i8* %25, align 1, !dbg !12546
  ret i32 0, !dbg !12547
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !12548 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12552, metadata !DIExpression()), !dbg !12554
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12555
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12555
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12555
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12553, metadata !DIExpression()), !dbg !12554
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12556
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12556
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !12557
  ret i32 %7, !dbg !12558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #6 !dbg !12559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12563, metadata !DIExpression()), !dbg !12564
  %2 = icmp eq i32 %0, 1024, !dbg !12565
  %3 = select i1 %2, i32 2, i32 0, !dbg !12565
  %4 = icmp eq i32 %0, 1536, !dbg !12565
  %5 = select i1 %4, i32 1, i32 %3, !dbg !12565
  ret i32 %5, !dbg !12566
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !12567 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12569, metadata !DIExpression()), !dbg !12571
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12572
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12572
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12572
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12570, metadata !DIExpression()), !dbg !12571
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12573
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12573
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !12574
  ret i32 %7, !dbg !12575
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !12576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12580, metadata !DIExpression()), !dbg !12581
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !12582
  %3 = icmp ult i32 %2, 4, !dbg !12582
  br i1 %3, label %4, label %7, !dbg !12582

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !12582
  %6 = load i32, i32* %5, align 4, !dbg !12582
  br label %7, !dbg !12582

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !12583
  ret i32 %8, !dbg !12585
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !12586 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12588, metadata !DIExpression()), !dbg !12590
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12591
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12591
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12591
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12589, metadata !DIExpression()), !dbg !12590
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12592
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12592
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !12593
  ret i32 %7, !dbg !12594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !12595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12599, metadata !DIExpression()), !dbg !12601
  call void @llvm.dbg.value(metadata i32 %1, metadata !12600, metadata !DIExpression()), !dbg !12601
  %3 = icmp eq i32 %0, 4096, !dbg !12602
  %4 = icmp eq i32 %1, 0, !dbg !12602
  %5 = select i1 %4, i32 4, i32 3, !dbg !12602
  %6 = select i1 %4, i32 3, i32 2, !dbg !12602
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !12602
  ret i32 %7, !dbg !12603
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !12604 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12606, metadata !DIExpression()), !dbg !12608
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12609
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12609
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12609
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12607, metadata !DIExpression()), !dbg !12608
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12610
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12610
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !12611
  ret i32 %7, !dbg !12612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !12613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12617, metadata !DIExpression()), !dbg !12618
  %2 = icmp eq i32 %0, 768, !dbg !12619
  %3 = zext i1 %2 to i32, !dbg !12618
  ret i32 %3, !dbg !12621
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12622 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12627, metadata !DIExpression()), !dbg !12628
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12629
  %3 = load volatile i32, i32* %2, align 4, !dbg !12629
  %4 = and i32 %3, 768, !dbg !12629
  ret i32 %4, !dbg !12630
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12631 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12633, metadata !DIExpression()), !dbg !12634
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12635
  %3 = load volatile i32, i32* %2, align 4, !dbg !12635
  %4 = and i32 %3, 4096, !dbg !12635
  ret i32 %4, !dbg !12636
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12637 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12639, metadata !DIExpression()), !dbg !12640
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12641
  %3 = load volatile i32, i32* %2, align 4, !dbg !12641
  %4 = and i32 %3, 12288, !dbg !12641
  ret i32 %4, !dbg !12642
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12643 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12645, metadata !DIExpression()), !dbg !12646
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12647
  %3 = load volatile i32, i32* %2, align 4, !dbg !12647
  %4 = and i32 %3, 1536, !dbg !12647
  ret i32 %4, !dbg !12648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #6 !dbg !12649 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12653, metadata !DIExpression()), !dbg !12654
  %2 = icmp eq i32 %0, 2, !dbg !12655
  %3 = select i1 %2, i32 1024, i32 0, !dbg !12655
  %4 = icmp eq i32 %0, 1, !dbg !12655
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !12655
  ret i32 %5, !dbg !12656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #6 !dbg !12657 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12661, metadata !DIExpression()), !dbg !12662
  %2 = icmp ult i32 %0, 3, !dbg !12663
  br i1 %2, label %3, label %6, !dbg !12663

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !12663
  %5 = load i32, i32* %4, align 4, !dbg !12663
  br label %6, !dbg !12663

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !12664
  ret i32 %7, !dbg !12666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !12667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12671, metadata !DIExpression()), !dbg !12673
  call void @llvm.dbg.value(metadata i32 %1, metadata !12672, metadata !DIExpression()), !dbg !12673
  %3 = icmp eq i32 %0, 4, !dbg !12674
  %4 = icmp eq i32 %1, 0, !dbg !12674
  %5 = select i1 %4, i32 0, i32 4096, !dbg !12674
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !12674
  ret i32 %6, !dbg !12675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !12676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12680, metadata !DIExpression()), !dbg !12681
  %2 = icmp eq i32 %0, 1, !dbg !12682
  %3 = select i1 %2, i32 768, i32 0, !dbg !12681
  ret i32 %3, !dbg !12684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12685 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12689, metadata !DIExpression()), !dbg !12690
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12691
  %3 = load volatile i32, i32* %2, align 4, !dbg !12691
  %4 = and i32 %3, -8193, !dbg !12691
  store volatile i32 %4, i32* %2, align 4, !dbg !12691
  ret void, !dbg !12692
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !12693 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12697, metadata !DIExpression()), !dbg !12700
  call void @llvm.dbg.value(metadata i32 %1, metadata !12698, metadata !DIExpression()), !dbg !12700
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12701
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12701
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12701
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12699, metadata !DIExpression()), !dbg !12700
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12702
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12702
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12703
  ret void, !dbg !12704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !12705 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12707, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.value(metadata i32 %1, metadata !12708, metadata !DIExpression()), !dbg !12710
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12711
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12711
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12711
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12709, metadata !DIExpression()), !dbg !12710
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12712
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12712
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12713
  ret void, !dbg !12714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !12715 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12717, metadata !DIExpression()), !dbg !12720
  call void @llvm.dbg.value(metadata i32 %1, metadata !12718, metadata !DIExpression()), !dbg !12720
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12721
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12721
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12721
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12719, metadata !DIExpression()), !dbg !12720
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12722
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12722
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12723
  ret void, !dbg !12724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !12725 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12727, metadata !DIExpression()), !dbg !12730
  call void @llvm.dbg.value(metadata i32 %1, metadata !12728, metadata !DIExpression()), !dbg !12730
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12731
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12731
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12731
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12729, metadata !DIExpression()), !dbg !12730
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12732
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12732
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12733
  ret void, !dbg !12734
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !12735 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12737, metadata !DIExpression()), !dbg !12742
  call void @llvm.dbg.value(metadata i32 %1, metadata !12738, metadata !DIExpression()), !dbg !12742
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12743
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !12743
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !12743
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !12739, metadata !DIExpression()), !dbg !12742
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12744
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !12744
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !12744
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !12740, metadata !DIExpression()), !dbg !12742
  %10 = bitcast i32* %3 to i8*, !dbg !12745
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12745
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !12746
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !12746
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !12750
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !12750
  %15 = load i8*, i8** %14, align 4, !dbg !12750
  call void @llvm.dbg.value(metadata i32* %3, metadata !12741, metadata !DIExpression(DW_OP_deref)), !dbg !12742
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !12751
  %17 = icmp slt i32 %16, 0, !dbg !12752
  br i1 %17, label %18, label %21, !dbg !12753

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.215(i32 noundef 1) #27, !dbg !12754
  %20 = zext i8 %19 to i32, !dbg !12754
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.216, i32 0, i32 0), i32 noundef %20) #26, !dbg !12754
  br label %31, !dbg !12760

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !12761
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12761
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #27, !dbg !12762
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12763
  %25 = load i32, i32* %3, align 4, !dbg !12764
  call void @llvm.dbg.value(metadata i32 %25, metadata !12741, metadata !DIExpression()), !dbg !12742
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #27, !dbg !12765
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12766
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !12766
  %28 = load volatile i32, i32* %27, align 4, !dbg !12766
  %29 = icmp ugt i32 %28, 16, !dbg !12766
  br i1 %29, label %31, label %30, !dbg !12769

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.219, i32 0, i32 0), i32 noundef 190) #26, !dbg !12770
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.220, i32 0, i32 0)) #26, !dbg !12770
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.219, i32 0, i32 0), i32 noundef 190) #26, !dbg !12770
  unreachable, !dbg !12770

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12772
  ret void, !dbg !12772
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12773 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12775, metadata !DIExpression()), !dbg !12776
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12777
  %3 = load volatile i32, i32* %2, align 4, !dbg !12777
  %4 = or i32 %3, 8192, !dbg !12777
  store volatile i32 %4, i32* %2, align 4, !dbg !12777
  ret void, !dbg !12778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !12779 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12781, metadata !DIExpression()), !dbg !12785
  call void @llvm.dbg.value(metadata i8* %1, metadata !12782, metadata !DIExpression()), !dbg !12785
  call void @llvm.dbg.value(metadata i32* %2, metadata !12783, metadata !DIExpression()), !dbg !12785
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12786
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !12786
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !12786
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !12784, metadata !DIExpression()), !dbg !12785
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !12787
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !12787
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !12789
  br i1 %9, label %12, label %10, !dbg !12790

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !12791
  br label %12, !dbg !12792

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !12785
  ret i32 %13, !dbg !12793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.215(i32 noundef %0) unnamed_addr #6 !dbg !12794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12796, metadata !DIExpression()), !dbg !12797
  %2 = icmp eq i32 %0, 2, !dbg !12798
  %3 = select i1 %2, i8 87, i8 63, !dbg !12798
  %4 = icmp eq i32 %0, 1, !dbg !12798
  %5 = select i1 %4, i8 69, i8 %3, !dbg !12798
  ret i8 %5, !dbg !12799
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12800 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12804, metadata !DIExpression()), !dbg !12806
  call void @llvm.dbg.value(metadata i32 0, metadata !12805, metadata !DIExpression()), !dbg !12806
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12807
  %3 = load volatile i32, i32* %2, align 4, !dbg !12807
  %4 = and i32 %3, -32769, !dbg !12807
  store volatile i32 %4, i32* %2, align 4, !dbg !12807
  ret void, !dbg !12808
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !12809 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12813, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata i32 %1, metadata !12814, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata i32 0, metadata !12815, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata i32 %2, metadata !12816, metadata !DIExpression()), !dbg !12817
  %4 = mul i32 %1, 25, !dbg !12818
  %5 = shl i32 %2, 2, !dbg !12818
  %6 = udiv i32 %4, %5, !dbg !12818
  %7 = udiv i32 %6, 100, !dbg !12818
  %8 = shl nuw nsw i32 %7, 4, !dbg !12818
  %9 = mul i32 %7, -100, !dbg !12818
  %10 = add i32 %9, %6, !dbg !12818
  %11 = shl i32 %10, 4, !dbg !12818
  %12 = add i32 %11, 50, !dbg !12818
  %13 = udiv i32 %12, 100, !dbg !12818
  %14 = and i32 %13, 240, !dbg !12818
  %15 = add nuw nsw i32 %14, %8, !dbg !12818
  %16 = and i32 %13, 15, !dbg !12818
  %17 = and i32 %15, 65520, !dbg !12821
  %18 = or i32 %17, %16, !dbg !12821
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !12822
  store volatile i32 %18, i32* %19, align 4, !dbg !12823
  ret void, !dbg !12824
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !12825 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12827, metadata !DIExpression()), !dbg !12829
  call void @llvm.dbg.value(metadata i32 %1, metadata !12828, metadata !DIExpression()), !dbg !12829
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12830
  %4 = load volatile i32, i32* %3, align 4, !dbg !12830
  %5 = and i32 %4, -769, !dbg !12830
  %6 = or i32 %5, %1, !dbg !12830
  store volatile i32 %6, i32* %3, align 4, !dbg !12830
  ret void, !dbg !12831
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !12832 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12834, metadata !DIExpression()), !dbg !12836
  call void @llvm.dbg.value(metadata i32 %1, metadata !12835, metadata !DIExpression()), !dbg !12836
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12837
  %4 = load volatile i32, i32* %3, align 4, !dbg !12837
  %5 = and i32 %4, -4097, !dbg !12837
  %6 = or i32 %5, %1, !dbg !12837
  store volatile i32 %6, i32* %3, align 4, !dbg !12837
  ret void, !dbg !12838
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !12839 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12841, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 %1, metadata !12842, metadata !DIExpression()), !dbg !12843
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12844
  %4 = load volatile i32, i32* %3, align 4, !dbg !12844
  %5 = and i32 %4, -12289, !dbg !12844
  %6 = or i32 %5, %1, !dbg !12844
  store volatile i32 %6, i32* %3, align 4, !dbg !12844
  ret void, !dbg !12845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !12846 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12848, metadata !DIExpression()), !dbg !12850
  call void @llvm.dbg.value(metadata i32 %1, metadata !12849, metadata !DIExpression()), !dbg !12850
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12851
  %4 = load volatile i32, i32* %3, align 4, !dbg !12851
  %5 = and i32 %4, -1537, !dbg !12851
  %6 = or i32 %5, %1, !dbg !12851
  store volatile i32 %6, i32* %3, align 4, !dbg !12851
  ret void, !dbg !12852
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12853 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12855, metadata !DIExpression()), !dbg !12856
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12857
  %3 = load volatile i32, i32* %2, align 4, !dbg !12857
  %4 = lshr i32 %3, 3, !dbg !12858
  %5 = and i32 %4, 1, !dbg !12858
  ret i32 %5, !dbg !12859
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12860 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12862, metadata !DIExpression()), !dbg !12863
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12864
  %3 = load volatile i32, i32* %2, align 4, !dbg !12864
  %4 = and i32 %3, 1, !dbg !12864
  ret i32 %4, !dbg !12865
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12866 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12868, metadata !DIExpression()), !dbg !12869
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12870
  %3 = load volatile i32, i32* %2, align 4, !dbg !12870
  %4 = lshr i32 %3, 1, !dbg !12871
  %5 = and i32 %4, 1, !dbg !12871
  ret i32 %5, !dbg !12872
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12873 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12875, metadata !DIExpression()), !dbg !12876
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12877
  %3 = load volatile i32, i32* %2, align 4, !dbg !12877
  %4 = lshr i32 %3, 8, !dbg !12878
  %5 = and i32 %4, 1, !dbg !12878
  ret i32 %5, !dbg !12879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12880 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12882, metadata !DIExpression()), !dbg !12883
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12884
  store volatile i32 -257, i32* %2, align 4, !dbg !12884
  ret void, !dbg !12885
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12886 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12888, metadata !DIExpression()), !dbg !12890
  %3 = bitcast i32* %2 to i8*, !dbg !12891
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12891
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12889, metadata !DIExpression()), !dbg !12892
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12893
  %5 = load volatile i32, i32* %4, align 4, !dbg !12893
  store volatile i32 %5, i32* %2, align 4, !dbg !12894
  %6 = load volatile i32, i32* %2, align 4, !dbg !12895
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12896
  %8 = load volatile i32, i32* %7, align 4, !dbg !12896
  store volatile i32 %8, i32* %2, align 4, !dbg !12897
  %9 = load volatile i32, i32* %2, align 4, !dbg !12898
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12899
  ret void, !dbg !12899
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12900 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12902, metadata !DIExpression()), !dbg !12904
  %3 = bitcast i32* %2 to i8*, !dbg !12905
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12905
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12903, metadata !DIExpression()), !dbg !12906
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12907
  %5 = load volatile i32, i32* %4, align 4, !dbg !12907
  store volatile i32 %5, i32* %2, align 4, !dbg !12908
  %6 = load volatile i32, i32* %2, align 4, !dbg !12909
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12910
  %8 = load volatile i32, i32* %7, align 4, !dbg !12910
  store volatile i32 %8, i32* %2, align 4, !dbg !12911
  %9 = load volatile i32, i32* %2, align 4, !dbg !12912
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12913
  ret void, !dbg !12913
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12914 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12916, metadata !DIExpression()), !dbg !12918
  %3 = bitcast i32* %2 to i8*, !dbg !12919
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12919
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12917, metadata !DIExpression()), !dbg !12920
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12921
  %5 = load volatile i32, i32* %4, align 4, !dbg !12921
  store volatile i32 %5, i32* %2, align 4, !dbg !12922
  %6 = load volatile i32, i32* %2, align 4, !dbg !12923
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12924
  %8 = load volatile i32, i32* %7, align 4, !dbg !12924
  store volatile i32 %8, i32* %2, align 4, !dbg !12925
  %9 = load volatile i32, i32* %2, align 4, !dbg !12926
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12927
  ret void, !dbg !12927
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12928 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12930, metadata !DIExpression()), !dbg !12932
  %3 = bitcast i32* %2 to i8*, !dbg !12933
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12933
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12931, metadata !DIExpression()), !dbg !12934
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12935
  %5 = load volatile i32, i32* %4, align 4, !dbg !12935
  store volatile i32 %5, i32* %2, align 4, !dbg !12936
  %6 = load volatile i32, i32* %2, align 4, !dbg !12937
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12938
  %8 = load volatile i32, i32* %7, align 4, !dbg !12938
  store volatile i32 %8, i32* %2, align 4, !dbg !12939
  %9 = load volatile i32, i32* %2, align 4, !dbg !12940
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12941
  ret void, !dbg !12941
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12942 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12944, metadata !DIExpression()), !dbg !12945
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12946
  %3 = load volatile i32, i32* %2, align 4, !dbg !12946
  %4 = lshr i32 %3, 7, !dbg !12947
  %5 = and i32 %4, 1, !dbg !12947
  ret i32 %5, !dbg !12948
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !12949 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12953, metadata !DIExpression()), !dbg !12955
  call void @llvm.dbg.value(metadata i8 %1, metadata !12954, metadata !DIExpression()), !dbg !12955
  %3 = zext i8 %1 to i32, !dbg !12956
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12957
  store volatile i32 %3, i32* %4, align 4, !dbg !12958
  ret void, !dbg !12959
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12960 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12962, metadata !DIExpression()), !dbg !12963
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12964
  %3 = load volatile i32, i32* %2, align 4, !dbg !12964
  %4 = lshr i32 %3, 5, !dbg !12965
  %5 = and i32 %4, 1, !dbg !12965
  ret i32 %5, !dbg !12966
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12967 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12971, metadata !DIExpression()), !dbg !12972
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12973
  %3 = load volatile i32, i32* %2, align 4, !dbg !12973
  %4 = trunc i32 %3 to i8, !dbg !12974
  ret i8 %4, !dbg !12975
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !12976 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12978, metadata !DIExpression()), !dbg !12984
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12985
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12985
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12985
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12979, metadata !DIExpression()), !dbg !12984
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12986
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !12986
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !12986
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !12980, metadata !DIExpression()), !dbg !12984
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !12987
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !12988
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !12988
  %10 = tail call fastcc zeroext i1 @device_is_ready.225(%struct.device* noundef %9) #27, !dbg !12990
  br i1 %10, label %14, label %11, !dbg !12991

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.215(i32 noundef 1) #27, !dbg !12992
  %13 = zext i8 %12 to i32, !dbg !12992
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.226, i32 0, i32 0), i32 noundef %13) #26, !dbg !12992
  br label %62, !dbg !12998

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !12999
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !13000
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !13000
  %18 = load i8*, i8** %17, align 4, !dbg !13000
  %19 = tail call fastcc i32 @clock_control_on.227(%struct.device* noundef %15, i8* noundef %18) #27, !dbg !13001
  call void @llvm.dbg.value(metadata i32 %19, metadata !12983, metadata !DIExpression()), !dbg !12984
  %20 = icmp eq i32 %19, 0, !dbg !13002
  br i1 %20, label %24, label %21, !dbg !13004

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.215(i32 noundef 1) #27, !dbg !13005
  %23 = zext i8 %22 to i32, !dbg !13005
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9.228, i32 0, i32 0), i32 noundef %23) #26, !dbg !13005
  br label %62, !dbg !13011

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !13012
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !13012
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #27, !dbg !13013
  call void @llvm.dbg.value(metadata i32 %27, metadata !12983, metadata !DIExpression()), !dbg !12984
  %28 = icmp slt i32 %27, 0, !dbg !13014
  br i1 %28, label %62, label %29, !dbg !13016

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !13017
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !13017
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #27, !dbg !13018
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !13019
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #27, !dbg !13020
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !13021
  %34 = load i32, i32* %33, align 4, !dbg !13021
  %35 = icmp ult i32 %34, 3, !dbg !13023
  br i1 %35, label %39, label %36, !dbg !13023

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.215(i32 noundef 2) #27, !dbg !13024
  %38 = zext i8 %37 to i32, !dbg !13024
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10.229, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #26, !dbg !13024
  call void @llvm.dbg.value(metadata i32 0, metadata !12981, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i32 0, metadata !12982, metadata !DIExpression()), !dbg !12984
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !13023
  %41 = load i32, i32* %40, align 4, !dbg !13023
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.11, i32 0, i32 %34, !dbg !13023
  %43 = load i32, i32* %42, align 4, !dbg !13023
  br label %44, !dbg !13023

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !13033
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !13033
  call void @llvm.dbg.value(metadata i32 %46, metadata !12982, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i32 %45, metadata !12981, metadata !DIExpression()), !dbg !12984
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !13034
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #27, !dbg !13035
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !13036
  %49 = load i8, i8* %48, align 4, !dbg !13036, !range !8544
  %50 = icmp eq i8 %49, 0, !dbg !13036
  br i1 %50, label %52, label %51, !dbg !13038

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !13039
  br label %52, !dbg !13041

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !13042
  %54 = load i32, i32* %53, align 4, !dbg !13042
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #27, !dbg !13043
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !13044
  %56 = load i8, i8* %55, align 4, !dbg !13044, !range !8544
  %57 = icmp eq i8 %56, 0, !dbg !13044
  br i1 %57, label %60, label %58, !dbg !13046

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !13047
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #27, !dbg !13049
  br label %60, !dbg !13050

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !13051
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #27, !dbg !13052
  br label %62, !dbg !13053

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !12984
  ret i32 %63, !dbg !13054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !13055 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13059, metadata !DIExpression()), !dbg !13063
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !13064
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !13064
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !13064
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !13060, metadata !DIExpression()), !dbg !13063
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !13061, metadata !DIExpression()), !dbg !13063
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !13065
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !13066
  ret void, !dbg !13067
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.225(%struct.device* noundef %0) unnamed_addr #1 !dbg !13068 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13072, metadata !DIExpression()), !dbg !13073
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13074, !srcloc !13076
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.230(%struct.device* noundef %0) #27, !dbg !13077
  ret i1 %2, !dbg !13078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.227(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !13079 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13081, metadata !DIExpression()), !dbg !13084
  call void @llvm.dbg.value(metadata i8* %1, metadata !13082, metadata !DIExpression()), !dbg !13084
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !13085
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !13085
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !13085
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !13083, metadata !DIExpression()), !dbg !13084
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !13086
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !13086
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !13087
  ret i32 %8, !dbg !13088
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !13089 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !13093, metadata !DIExpression()), !dbg !13097
  call void @llvm.dbg.value(metadata i8 0, metadata !13094, metadata !DIExpression()), !dbg !13097
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !13098
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !13098
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !13096, metadata !DIExpression(DW_OP_deref)), !dbg !13097
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !13099
  call void @llvm.dbg.value(metadata i32 %4, metadata !13095, metadata !DIExpression()), !dbg !13097
  %5 = icmp slt i32 %4, 0, !dbg !13100
  br i1 %5, label %9, label %6, !dbg !13102

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !13103
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !13096, metadata !DIExpression()), !dbg !13097
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !13104
  br label %9, !dbg !13105

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !13097
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !13106
  ret i32 %10, !dbg !13106
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !13107 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13109, metadata !DIExpression()), !dbg !13111
  call void @llvm.dbg.value(metadata i32 12, metadata !13110, metadata !DIExpression()), !dbg !13111
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !13112
  %3 = load volatile i32, i32* %2, align 4, !dbg !13112
  %4 = or i32 %3, 12, !dbg !13112
  store volatile i32 %4, i32* %2, align 4, !dbg !13112
  ret void, !dbg !13113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !13114 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13116, metadata !DIExpression()), !dbg !13120
  call void @llvm.dbg.value(metadata i32 %1, metadata !13117, metadata !DIExpression()), !dbg !13120
  call void @llvm.dbg.value(metadata i32 %2, metadata !13118, metadata !DIExpression()), !dbg !13120
  call void @llvm.dbg.value(metadata i32 0, metadata !13119, metadata !DIExpression()), !dbg !13120
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !13121
  %5 = load volatile i32, i32* %4, align 4, !dbg !13121
  %6 = and i32 %5, -5633, !dbg !13121
  %7 = or i32 %2, %1, !dbg !13121
  %8 = or i32 %7, %6, !dbg !13121
  store volatile i32 %8, i32* %4, align 4, !dbg !13121
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !13122
  %10 = load volatile i32, i32* %9, align 4, !dbg !13122
  %11 = and i32 %10, -12289, !dbg !13122
  store volatile i32 %11, i32* %9, align 4, !dbg !13122
  ret void, !dbg !13123
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !13124 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13126, metadata !DIExpression()), !dbg !13127
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !13128
  %3 = load volatile i32, i32* %2, align 4, !dbg !13128
  %4 = or i32 %3, 8, !dbg !13128
  store volatile i32 %4, i32* %2, align 4, !dbg !13128
  ret void, !dbg !13129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !13130 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !13134, metadata !DIExpression()), !dbg !13137
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !13135, metadata !DIExpression()), !dbg !13137
  call void @llvm.dbg.value(metadata i32 0, metadata !13136, metadata !DIExpression()), !dbg !13137
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !13138
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !13138
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !13139
  %5 = load i8, i8* %4, align 4, !dbg !13139
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !13140
  ret i32 %6, !dbg !13141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.230(%struct.device* noundef %0) unnamed_addr #1 !dbg !13142 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13144, metadata !DIExpression()), !dbg !13145
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !13146
  ret i1 %2, !dbg !13147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #17 !dbg !13148 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13150, metadata !DIExpression()), !dbg !13151
  tail call fastcc void @__NVIC_SetPriority.232() #27, !dbg !13152
  store i32 3199, i32* @last_load, align 4, !dbg !13153
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !13154
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13155
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13156
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13157
  %3 = or i32 %2, 7, !dbg !13157
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13157
  ret i32 0, !dbg !13158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.232() unnamed_addr #17 !dbg !13159 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !13161, metadata !DIExpression()), !dbg !13163
  call void @llvm.dbg.value(metadata i32 1, metadata !13162, metadata !DIExpression()), !dbg !13163
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !13164
  ret void, !dbg !13167
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !13168 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13170, metadata !DIExpression()), !dbg !13172
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !13173
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !13174
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13175
  %5 = add i32 %4, %3, !dbg !13175
  store i32 %5, i32* @cycle_count, align 4, !dbg !13175
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !13176
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !13177
  %7 = sub i32 %5, %6, !dbg !13180
  %8 = udiv i32 %7, 3200, !dbg !13181
  call void @llvm.dbg.value(metadata i32 %8, metadata !13171, metadata !DIExpression()), !dbg !13172
  %9 = mul nuw i32 %8, 3200, !dbg !13182
  %10 = add i32 %9, %6, !dbg !13183
  store i32 %10, i32* @announced_cycles, align 4, !dbg !13183
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !13184
  tail call void @z_arm_int_exit() #26, !dbg !13185
  ret void, !dbg !13186
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #17 !dbg !13187 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13192
  call void @llvm.dbg.value(metadata i32 %1, metadata !13189, metadata !DIExpression()), !dbg !13193
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13194
  call void @llvm.dbg.value(metadata i32 %2, metadata !13190, metadata !DIExpression()), !dbg !13193
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13195
  call void @llvm.dbg.value(metadata i32 %3, metadata !13191, metadata !DIExpression()), !dbg !13193
  %4 = and i32 %2, 65536, !dbg !13196
  %5 = icmp ne i32 %4, 0, !dbg !13196
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !13198
  %8 = load i32, i32* @last_load, align 4, !dbg !13193
  br i1 %7, label %9, label %13, !dbg !13198

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !13199
  %11 = add i32 %10, %8, !dbg !13199
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !13199
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13201
  br label %13, !dbg !13202

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !13203
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !13204
  %16 = add i32 %14, %15, !dbg !13205
  ret i32 %16, !dbg !13206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13211, metadata !DIExpression()), !dbg !13224
  call void @llvm.dbg.value(metadata i1 %1, metadata !13212, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13224
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !13225
  br i1 %4, label %5, label %8, !dbg !13225

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13227
  %7 = and i32 %6, -2, !dbg !13227
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13227
  store i32 -16777216, i32* @last_load, align 4, !dbg !13229
  br label %60, !dbg !13230

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !13231
  call void @llvm.dbg.value(metadata i32 %9, metadata !13216, metadata !DIExpression()), !dbg !13224
  br i1 %3, label %18, label %10, !dbg !13232

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !13232
  call void @llvm.dbg.value(metadata i32 undef, metadata !13211, metadata !DIExpression()), !dbg !13224
  %12 = icmp slt i32 %11, 1, !dbg !13233
  br i1 %12, label %18, label %13, !dbg !13233

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !13233
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !13233
  %16 = mul nuw nsw i32 %15, 3200, !dbg !13233
  %17 = add nuw nsw i32 %16, 3199, !dbg !13233
  br label %18, !dbg !13233

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !13211, metadata !DIExpression()), !dbg !13224
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !13234, metadata !DIExpression()) #25, !dbg !13241
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13243, !srcloc !13249
  call void @llvm.dbg.value(metadata i32 undef, metadata !13246, metadata !DIExpression()) #25, !dbg !13250
  call void @llvm.dbg.value(metadata i32 undef, metadata !13247, metadata !DIExpression()) #25, !dbg !13250
  call void @llvm.dbg.value(metadata i32 undef, metadata !13240, metadata !DIExpression()) #25, !dbg !13241
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13251
  br i1 %21, label %23, label %22, !dbg !13254

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 148) #26, !dbg !13255
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.236, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 148) #26, !dbg !13255
  unreachable, !dbg !13255

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !13243
  call void @llvm.dbg.value(metadata i32 %24, metadata !13246, metadata !DIExpression()) #25, !dbg !13250
  call void @llvm.dbg.value(metadata i32 %24, metadata !13240, metadata !DIExpression()) #25, !dbg !13241
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13257
  call void @llvm.dbg.value(metadata i32 %24, metadata !13217, metadata !DIExpression()), !dbg !13224
  %25 = tail call fastcc i32 @elapsed() #27, !dbg !13258
  call void @llvm.dbg.value(metadata i32 %25, metadata !13222, metadata !DIExpression()), !dbg !13224
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13259
  call void @llvm.dbg.value(metadata i32 %26, metadata !13214, metadata !DIExpression()), !dbg !13224
  %27 = load i32, i32* @cycle_count, align 4, !dbg !13260
  %28 = add i32 %27, %25, !dbg !13260
  store i32 %28, i32* @cycle_count, align 4, !dbg !13260
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !13261
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !13262
  %30 = sub i32 %28, %29, !dbg !13263
  call void @llvm.dbg.value(metadata i32 %30, metadata !13223, metadata !DIExpression()), !dbg !13224
  %31 = icmp slt i32 %30, 0, !dbg !13264
  br i1 %31, label %41, label %32, !dbg !13266

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !13213, metadata !DIExpression()), !dbg !13224
  call void @llvm.dbg.value(metadata i32 undef, metadata !13213, metadata !DIExpression()), !dbg !13224
  %33 = add nuw i32 %19, %30, !dbg !13267
  %34 = urem i32 %33, 3200, !dbg !13269
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !13213, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13224
  %35 = sub nuw nsw i32 %19, %34, !dbg !13270
  call void @llvm.dbg.value(metadata i32 %35, metadata !13213, metadata !DIExpression()), !dbg !13224
  %36 = icmp ugt i32 %35, 1024, !dbg !13271
  br i1 %36, label %37, label %39, !dbg !13271

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !13213, metadata !DIExpression()), !dbg !13224
  %38 = icmp ugt i32 %35, 16771200, !dbg !13272
  br i1 %38, label %41, label %39, !dbg !13274

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16771200, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !13275
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13276
  call void @llvm.dbg.value(metadata i32 %43, metadata !13215, metadata !DIExpression()), !dbg !13224
  %44 = add nsw i32 %42, -1, !dbg !13277
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13278
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13279
  %45 = icmp ult i32 %26, %43, !dbg !13280
  br i1 %45, label %46, label %51, !dbg !13282

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !13283
  %48 = add i32 %26, %9, !dbg !13285
  %49 = sub i32 %48, %43, !dbg !13286
  %50 = add i32 %49, %47, !dbg !13283
  br label %55, !dbg !13287

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !13288
  %53 = load i32, i32* @cycle_count, align 4, !dbg !13290
  %54 = add i32 %52, %53, !dbg !13290
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !13291
  store i32 %56, i32* @cycle_count, align 4, !dbg !13291
  call void @llvm.dbg.value(metadata i32 undef, metadata !13292, metadata !DIExpression()) #25, !dbg !13298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !13297, metadata !DIExpression()) #25, !dbg !13298
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13300
  br i1 %57, label %59, label %58, !dbg !13303

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 194) #26, !dbg !13304
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13304
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 194) #26, !dbg !13304
  unreachable, !dbg !13304

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !13292, metadata !DIExpression()) #25, !dbg !13298
  call void @llvm.dbg.value(metadata i32 %24, metadata !13306, metadata !DIExpression()) #25, !dbg !13309
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !13311, !srcloc !13312
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !13313
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !13314 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !13234, metadata !DIExpression()) #25, !dbg !13318
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13320, !srcloc !13249
  call void @llvm.dbg.value(metadata i32 undef, metadata !13246, metadata !DIExpression()) #25, !dbg !13322
  call void @llvm.dbg.value(metadata i32 undef, metadata !13247, metadata !DIExpression()) #25, !dbg !13322
  call void @llvm.dbg.value(metadata i32 undef, metadata !13240, metadata !DIExpression()) #25, !dbg !13318
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13323
  br i1 %2, label %4, label %3, !dbg !13324

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 148) #26, !dbg !13325
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.236, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13325
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 148) #26, !dbg !13325
  unreachable, !dbg !13325

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13246, metadata !DIExpression()) #25, !dbg !13322
  call void @llvm.dbg.value(metadata i32 undef, metadata !13240, metadata !DIExpression()) #25, !dbg !13318
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13326
  call void @llvm.dbg.value(metadata i32 undef, metadata !13316, metadata !DIExpression()), !dbg !13327
  %5 = tail call fastcc i32 @elapsed() #27, !dbg !13328
  %6 = load i32, i32* @cycle_count, align 4, !dbg !13329
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !13330
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !13317, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13327
  call void @llvm.dbg.value(metadata i32 undef, metadata !13292, metadata !DIExpression()) #25, !dbg !13331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !13297, metadata !DIExpression()) #25, !dbg !13331
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13333
  br i1 %8, label %10, label %9, !dbg !13334

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 194) #26, !dbg !13335
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13335
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 194) #26, !dbg !13335
  unreachable, !dbg !13335

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !13336
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !13317, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13327
  %12 = sub i32 %11, %7, !dbg !13337
  call void @llvm.dbg.value(metadata i32 %12, metadata !13317, metadata !DIExpression()), !dbg !13327
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !13320
  call void @llvm.dbg.value(metadata i32 %13, metadata !13246, metadata !DIExpression()) #25, !dbg !13322
  call void @llvm.dbg.value(metadata i32 %13, metadata !13240, metadata !DIExpression()) #25, !dbg !13318
  call void @llvm.dbg.value(metadata i32 %13, metadata !13316, metadata !DIExpression()), !dbg !13327
  call void @llvm.dbg.value(metadata i32 undef, metadata !13292, metadata !DIExpression()) #25, !dbg !13331
  call void @llvm.dbg.value(metadata i32 undef, metadata !13306, metadata !DIExpression()) #25, !dbg !13338
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !13340, !srcloc !13312
  %14 = udiv i32 %12, 3200, !dbg !13341
  ret i32 %14, !dbg !13342
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !13343 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !13234, metadata !DIExpression()) #25, !dbg !13347
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13349, !srcloc !13249
  call void @llvm.dbg.value(metadata i32 undef, metadata !13246, metadata !DIExpression()) #25, !dbg !13351
  call void @llvm.dbg.value(metadata i32 undef, metadata !13247, metadata !DIExpression()) #25, !dbg !13351
  call void @llvm.dbg.value(metadata i32 undef, metadata !13240, metadata !DIExpression()) #25, !dbg !13347
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13352
  br i1 %2, label %4, label %3, !dbg !13353

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 148) #26, !dbg !13354
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.236, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13354
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 148) #26, !dbg !13354
  unreachable, !dbg !13354

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13246, metadata !DIExpression()) #25, !dbg !13351
  call void @llvm.dbg.value(metadata i32 undef, metadata !13240, metadata !DIExpression()) #25, !dbg !13347
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13355
  call void @llvm.dbg.value(metadata i32 undef, metadata !13345, metadata !DIExpression()), !dbg !13356
  %5 = tail call fastcc i32 @elapsed() #27, !dbg !13357
  %6 = load i32, i32* @cycle_count, align 4, !dbg !13358
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !13346, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !13356
  call void @llvm.dbg.value(metadata i32 undef, metadata !13292, metadata !DIExpression()) #25, !dbg !13359
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !13297, metadata !DIExpression()) #25, !dbg !13359
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13361
  br i1 %7, label %9, label %8, !dbg !13362

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 194) #26, !dbg !13363
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13363
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 194) #26, !dbg !13363
  unreachable, !dbg !13363

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !13364
  call void @llvm.dbg.value(metadata i32 %10, metadata !13346, metadata !DIExpression()), !dbg !13356
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !13349
  call void @llvm.dbg.value(metadata i32 %11, metadata !13246, metadata !DIExpression()) #25, !dbg !13351
  call void @llvm.dbg.value(metadata i32 %11, metadata !13240, metadata !DIExpression()) #25, !dbg !13347
  call void @llvm.dbg.value(metadata i32 %11, metadata !13345, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.value(metadata i32 undef, metadata !13292, metadata !DIExpression()) #25, !dbg !13359
  call void @llvm.dbg.value(metadata i32 undef, metadata !13306, metadata !DIExpression()) #25, !dbg !13365
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !13367, !srcloc !13312
  ret i32 %10, !dbg !13368
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #17 !dbg !13369 {
  %1 = load i32, i32* @last_load, align 4, !dbg !13370
  %2 = icmp eq i32 %1, -16777216, !dbg !13372
  br i1 %2, label %3, label %6, !dbg !13373

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13374
  %5 = or i32 %4, 1, !dbg !13374
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13374
  br label %6, !dbg !13376

6:                                                ; preds = %3, %0
  ret void, !dbg !13377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #17 !dbg !13378 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13379
  %2 = and i32 %1, -2, !dbg !13379
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13379
  ret void, !dbg !13380
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !13381 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !13407, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata i8 %1, metadata !13408, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !13409, metadata !DIExpression()), !dbg !13410
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !13411
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13411
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !13410
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13412
  %8 = load i8, i8* %6, align 4, !dbg !13413
  %9 = zext i8 %8 to i32, !dbg !13414
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !13414
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !13415
  br i1 %11, label %18, label %24, !dbg !13416

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !13410
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13412
  %14 = load i8, i8* %6, align 4, !dbg !13413
  %15 = zext i8 %14 to i32, !dbg !13414
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !13414
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !13415
  br i1 %17, label %18, label %24, !dbg !13416, !llvm.loop !13417

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !13419
  %21 = load i8, i8* %20, align 1, !dbg !13419
  %22 = icmp eq i8 %21, %1, !dbg !13422
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !13423
  br i1 %22, label %24, label %12, !dbg !13424

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !13410
  ret i32 %25, !dbg !13425
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13426 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !13437, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata i8 %1, metadata !13438, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata i32 %2, metadata !13439, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata i32 0, metadata !13442, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata i32 0, metadata !13443, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata i8 0, metadata !13444, metadata !DIExpression()), !dbg !13454
  %4 = icmp eq i8 %1, 0, !dbg !13455
  br i1 %4, label %35, label %5, !dbg !13456

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !13455
  br label %9, !dbg !13456

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !13444, metadata !DIExpression()), !dbg !13454
  call void @llvm.dbg.value(metadata i32 %29, metadata !13442, metadata !DIExpression()), !dbg !13453
  %8 = icmp eq i32 %34, %6, !dbg !13455
  br i1 %8, label %35, label %9, !dbg !13456, !llvm.loop !13457

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13444, metadata !DIExpression()), !dbg !13454
  call void @llvm.dbg.value(metadata i32 %11, metadata !13442, metadata !DIExpression()), !dbg !13453
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !13459
  %13 = load i32, i32* %12, align 4, !dbg !13459
  call void @llvm.dbg.value(metadata i32 %13, metadata !13441, metadata !DIExpression()), !dbg !13453
  %14 = and i32 %13, 31, !dbg !13460
  %15 = icmp ult i32 %14, 16, !dbg !13461
  br i1 %15, label %16, label %20, !dbg !13462

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13463
  %18 = load i32, i32* %17, align 4, !dbg !13463
  %19 = or i32 %18, 32, !dbg !13465
  call void @llvm.dbg.value(metadata i32 %19, metadata !13442, metadata !DIExpression()), !dbg !13453
  br label %28, !dbg !13466

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !13467

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13468
  %23 = load i32, i32* %22, align 4, !dbg !13468
  call void @llvm.dbg.value(metadata i32 %23, metadata !13446, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !13469
  %24 = lshr i32 %23, 7, !dbg !13470
  %25 = and i32 %24, 16, !dbg !13470
  %26 = or i32 %25, %23, !dbg !13470
  call void @llvm.dbg.value(metadata i32 %26, metadata !13442, metadata !DIExpression()), !dbg !13453
  br label %28, !dbg !13471

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !13453
  call void @llvm.dbg.value(metadata i32 %29, metadata !13442, metadata !DIExpression()), !dbg !13453
  %30 = lshr i32 %13, 5, !dbg !13472
  %31 = and i32 %30, 255, !dbg !13472
  call void @llvm.dbg.value(metadata i32 %31, metadata !13440, metadata !DIExpression()), !dbg !13453
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !13473
  call void @llvm.dbg.value(metadata i32 %32, metadata !13443, metadata !DIExpression()), !dbg !13453
  %33 = icmp slt i32 %32, 0, !dbg !13474
  %34 = add nuw nsw i32 %10, 1, !dbg !13476
  call void @llvm.dbg.value(metadata i32 %34, metadata !13444, metadata !DIExpression()), !dbg !13454
  br i1 %33, label %35, label %7, !dbg !13477

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !13478
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !13479 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13483, metadata !DIExpression()), !dbg !13487
  call void @llvm.dbg.value(metadata i32 %1, metadata !13484, metadata !DIExpression()), !dbg !13487
  call void @llvm.dbg.value(metadata i32 %2, metadata !13485, metadata !DIExpression()), !dbg !13487
  %4 = icmp ugt i32 %0, 175, !dbg !13488
  br i1 %4, label %17, label %5, !dbg !13490

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !13491
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !13492
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !13492
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13486, metadata !DIExpression()), !dbg !13487
  %9 = lshr i32 1888, %6, !dbg !13493
  %10 = and i32 %9, 1, !dbg !13493
  %11 = icmp eq i32 %10, 0, !dbg !13493
  br i1 %11, label %12, label %17, !dbg !13495

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.243(%struct.device* noundef %8) #27, !dbg !13496
  br i1 %13, label %14, label %17, !dbg !13497

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !13498
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #26, !dbg !13499
  br label %17, !dbg !13500

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !13487
  ret i32 %18, !dbg !13501
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.243(%struct.device* noundef %0) unnamed_addr #1 !dbg !13502 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13506, metadata !DIExpression()), !dbg !13507
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13508, !srcloc !13510
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.244(%struct.device* noundef %0) #27, !dbg !13511
  ret i1 %2, !dbg !13512
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.244(%struct.device* noundef %0) unnamed_addr #1 !dbg !13513 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13515, metadata !DIExpression()), !dbg !13516
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !13517
  ret i1 %2, !dbg !13518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #6 !dbg !13519 {
  ret void, !dbg !13520
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #18 !dbg !13521 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13523, metadata !DIExpression()), !dbg !13528
  call void @llvm.dbg.value(metadata i32 0, metadata !13524, metadata !DIExpression()), !dbg !13528
  call void @llvm.dbg.value(metadata i32 0, metadata !13525, metadata !DIExpression()), !dbg !13528
  call void @llvm.dbg.value(metadata i32 0, metadata !13526, metadata !DIExpression()), !dbg !13528
  call void @llvm.dbg.value(metadata i32 0, metadata !13527, metadata !DIExpression()), !dbg !13528
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13529
  call void @llvm.dbg.value(metadata i32 %1, metadata !13523, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !13528
  %2 = lshr i32 %1, 2, !dbg !13530
  %3 = and i32 %2, 3, !dbg !13530
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !13530

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13531
  %6 = lshr i32 %5, 13, !dbg !13533
  %7 = and i32 %6, 7, !dbg !13533
  call void @llvm.dbg.value(metadata i32 %7, metadata !13527, metadata !DIExpression()), !dbg !13528
  %8 = shl nuw nsw i32 65536, %7, !dbg !13534
  br label %31, !dbg !13535

9:                                                ; preds = %0
  br label %31, !dbg !13536

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13537
  call void @llvm.dbg.value(metadata i32 %11, metadata !13524, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !13528
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13538
  call void @llvm.dbg.value(metadata i32 %12, metadata !13525, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !13528
  %13 = lshr i32 %11, 18, !dbg !13539
  %14 = and i32 %13, 15, !dbg !13539
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !13540
  %16 = load i8, i8* %15, align 1, !dbg !13540
  %17 = zext i8 %16 to i32, !dbg !13540
  call void @llvm.dbg.value(metadata i32 %17, metadata !13524, metadata !DIExpression()), !dbg !13528
  %18 = lshr i32 %12, 22, !dbg !13541
  %19 = and i32 %18, 3, !dbg !13541
  %20 = add nuw nsw i32 %19, 1, !dbg !13542
  call void @llvm.dbg.value(metadata i32 %20, metadata !13525, metadata !DIExpression()), !dbg !13528
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13543
  %22 = and i32 %21, 65536, !dbg !13544
  call void @llvm.dbg.value(metadata i32 %22, metadata !13526, metadata !DIExpression()), !dbg !13528
  %23 = icmp eq i32 %22, 0, !dbg !13545
  br i1 %23, label %24, label %27, !dbg !13547

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !13548
  %26 = udiv i32 %25, %20, !dbg !13550
  br label %31, !dbg !13551

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !13552
  %29 = udiv i32 %28, %20, !dbg !13554
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !13555
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13556
  %34 = lshr i32 %33, 4, !dbg !13557
  %35 = and i32 %34, 15, !dbg !13557
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !13558
  %37 = load i8, i8* %36, align 1, !dbg !13558
  %38 = zext i8 %37 to i32, !dbg !13558
  call void @llvm.dbg.value(metadata i32 %38, metadata !13523, metadata !DIExpression()), !dbg !13528
  %39 = lshr i32 %32, %38, !dbg !13559
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !13559
  ret void, !dbg !13560
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !13561 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13569
  %2 = and i32 %1, 16711935, !dbg !13569
  %3 = or i32 %2, 45056, !dbg !13569
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13569
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13570
  %5 = or i32 %4, 256, !dbg !13570
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13570
  %6 = tail call i32 @HAL_GetTick() #26, !dbg !13571
  call void @llvm.dbg.value(metadata i32 %6, metadata !13567, metadata !DIExpression()), !dbg !13572
  br label %7, !dbg !13573

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13574
  %9 = and i32 %8, 512, !dbg !13574
  %10 = icmp eq i32 %9, 0, !dbg !13575
  br i1 %10, label %11, label %15, !dbg !13573

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #26, !dbg !13576
  %13 = sub i32 %12, %6, !dbg !13579
  %14 = icmp ugt i32 %13, 2, !dbg !13580
  br i1 %14, label %47, label %7, !dbg !13581, !llvm.loop !13582

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13584
  %17 = and i32 %16, -4, !dbg !13584
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13584
  br label %18, !dbg !13585

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13586
  %20 = and i32 %19, 12, !dbg !13586
  %21 = icmp eq i32 %20, 0, !dbg !13587
  br i1 %21, label %26, label %22, !dbg !13585

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #26, !dbg !13588
  %24 = sub i32 %23, %6, !dbg !13591
  %25 = icmp ugt i32 %24, 5000, !dbg !13592
  br i1 %25, label %47, label %18, !dbg !13593, !llvm.loop !13594

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !13596
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !13597
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #26, !dbg !13598
  call void @llvm.dbg.value(metadata i32 %28, metadata !13568, metadata !DIExpression()), !dbg !13572
  %29 = icmp eq i32 %28, 0, !dbg !13599
  br i1 %29, label %30, label %47, !dbg !13601

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13602
  %32 = and i32 %31, -285278210, !dbg !13602
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13602
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13603
  %34 = and i32 %33, -262145, !dbg !13603
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13603
  %35 = tail call i32 @HAL_GetTick() #26, !dbg !13604
  call void @llvm.dbg.value(metadata i32 %35, metadata !13567, metadata !DIExpression()), !dbg !13572
  br label %36, !dbg !13605

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13606
  %38 = and i32 %37, 33554432, !dbg !13606
  %39 = icmp eq i32 %38, 0, !dbg !13607
  br i1 %39, label %44, label %40, !dbg !13605

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #26, !dbg !13608
  %42 = sub i32 %41, %35, !dbg !13611
  %43 = icmp ugt i32 %42, 2, !dbg !13612
  br i1 %43, label %47, label %36, !dbg !13613, !llvm.loop !13614

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13616
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13617
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13618
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13619
  %46 = or i32 %45, 16777216, !dbg !13619
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13619
  br label %47, !dbg !13620

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !13572
  ret i32 %48, !dbg !13621
}

; Function Attrs: optsize
declare !dbg !13622 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13624 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !13627 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13653, metadata !DIExpression()), !dbg !13666
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13667
  br i1 %3, label %385, label %4, !dbg !13669

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13670
  %6 = and i32 %5, 12, !dbg !13670
  call void @llvm.dbg.value(metadata i32 %6, metadata !13656, metadata !DIExpression()), !dbg !13666
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13671
  %8 = and i32 %7, 65536, !dbg !13671
  call void @llvm.dbg.value(metadata i32 %8, metadata !13657, metadata !DIExpression()), !dbg !13666
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13672
  %10 = load i32, i32* %9, align 4, !dbg !13672
  %11 = and i32 %10, 1, !dbg !13674
  %12 = icmp eq i32 %11, 0, !dbg !13675
  br i1 %12, label %69, label %13, !dbg !13676

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !13677
  br i1 %14, label %19, label %15, !dbg !13680

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !13681
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !13682
  br i1 %18, label %19, label %27, !dbg !13682

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13683
  %21 = and i32 %20, 131072, !dbg !13683
  %22 = icmp eq i32 %21, 0, !dbg !13686
  br i1 %22, label %69, label %23, !dbg !13687

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13688
  %25 = load i32, i32* %24, align 4, !dbg !13688
  %26 = icmp eq i32 %25, 0, !dbg !13689
  br i1 %26, label %385, label %69, !dbg !13690

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13691
  %29 = load i32, i32* %28, align 4, !dbg !13691
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !13695

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13696
  %32 = or i32 %31, 65536, !dbg !13696
  br label %48, !dbg !13696

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13698
  %35 = and i32 %34, -65537, !dbg !13698
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13698
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13698
  %37 = and i32 %36, -262145, !dbg !13698
  br label %48, !dbg !13698

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13701
  %40 = or i32 %39, 262144, !dbg !13701
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13701
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13701
  %42 = or i32 %41, 65536, !dbg !13701
  br label %48, !dbg !13701

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13704
  %45 = and i32 %44, -65537, !dbg !13704
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13704
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13704
  %47 = and i32 %46, -262145, !dbg !13704
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13706
  %50 = load i32, i32* %28, align 4, !dbg !13707
  %51 = icmp eq i32 %50, 0, !dbg !13709
  %52 = tail call i32 @HAL_GetTick() #26, !dbg !13710
  call void @llvm.dbg.value(metadata i32 %52, metadata !13654, metadata !DIExpression()), !dbg !13666
  call void @llvm.dbg.value(metadata i32 %52, metadata !13654, metadata !DIExpression()), !dbg !13666
  br i1 %51, label %61, label %53, !dbg !13711

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13712
  %55 = and i32 %54, 131072, !dbg !13712
  %56 = icmp eq i32 %55, 0, !dbg !13714
  br i1 %56, label %57, label %69, !dbg !13715

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #26, !dbg !13716
  %59 = sub i32 %58, %52, !dbg !13719
  %60 = icmp ugt i32 %59, 100, !dbg !13720
  br i1 %60, label %385, label %53, !dbg !13721, !llvm.loop !13722

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13724
  %63 = and i32 %62, 131072, !dbg !13724
  %64 = icmp eq i32 %63, 0, !dbg !13726
  br i1 %64, label %69, label %65, !dbg !13727

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #26, !dbg !13728
  %67 = sub i32 %66, %52, !dbg !13731
  %68 = icmp ugt i32 %67, 100, !dbg !13732
  br i1 %68, label %385, label %61, !dbg !13733, !llvm.loop !13734

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !13736
  %71 = and i32 %70, 2, !dbg !13738
  %72 = icmp eq i32 %71, 0, !dbg !13739
  br i1 %72, label %118, label %73, !dbg !13740

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !13741
  br i1 %74, label %79, label %75, !dbg !13744

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !13745
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !13746
  br i1 %78, label %79, label %87, !dbg !13746

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13747
  %81 = and i32 %80, 2, !dbg !13747
  %82 = icmp eq i32 %81, 0, !dbg !13750
  br i1 %82, label %111, label %83, !dbg !13751

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13752
  %85 = load i32, i32* %84, align 4, !dbg !13752
  %86 = icmp eq i32 %85, 1, !dbg !13753
  br i1 %86, label %111, label %385, !dbg !13754

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13755
  %89 = load i32, i32* %88, align 4, !dbg !13755
  %90 = icmp eq i32 %89, 0, !dbg !13758
  br i1 %90, label %101, label %91, !dbg !13759

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13760
  %92 = tail call i32 @HAL_GetTick() #26, !dbg !13762
  call void @llvm.dbg.value(metadata i32 %92, metadata !13654, metadata !DIExpression()), !dbg !13666
  br label %93, !dbg !13763

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13764
  %95 = and i32 %94, 2, !dbg !13764
  %96 = icmp eq i32 %95, 0, !dbg !13765
  br i1 %96, label %97, label %111, !dbg !13763

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #26, !dbg !13766
  %99 = sub i32 %98, %92, !dbg !13769
  %100 = icmp ugt i32 %99, 2, !dbg !13770
  br i1 %100, label %385, label %93, !dbg !13771, !llvm.loop !13772

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13774
  %102 = tail call i32 @HAL_GetTick() #26, !dbg !13776
  call void @llvm.dbg.value(metadata i32 %102, metadata !13654, metadata !DIExpression()), !dbg !13666
  br label %103, !dbg !13777

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13778
  %105 = and i32 %104, 2, !dbg !13778
  %106 = icmp eq i32 %105, 0, !dbg !13779
  br i1 %106, label %118, label %107, !dbg !13777

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #26, !dbg !13780
  %109 = sub i32 %108, %102, !dbg !13783
  %110 = icmp ugt i32 %109, 2, !dbg !13784
  br i1 %110, label %385, label %103, !dbg !13785, !llvm.loop !13786

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13788
  %113 = and i32 %112, -7937, !dbg !13788
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13788
  %115 = load i32, i32* %114, align 4, !dbg !13788
  %116 = shl i32 %115, 8, !dbg !13788
  %117 = or i32 %116, %113, !dbg !13788
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13788
  br label %118, !dbg !13789

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !13789
  %120 = and i32 %119, 16, !dbg !13791
  %121 = icmp eq i32 %120, 0, !dbg !13792
  br i1 %121, label %215, label %122, !dbg !13793

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !13794
  br i1 %123, label %124, label %179, !dbg !13797

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13798
  %126 = and i32 %125, 512, !dbg !13798
  %127 = icmp eq i32 %126, 0, !dbg !13801
  br i1 %127, label %132, label %128, !dbg !13802

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !13803
  %130 = load i32, i32* %129, align 4, !dbg !13803
  %131 = icmp eq i32 %130, 0, !dbg !13804
  br i1 %131, label %385, label %132, !dbg !13805

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !13806
  %134 = load i32, i32* %133, align 4, !dbg !13806
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13809
  %136 = and i32 %135, 57344, !dbg !13809
  %137 = icmp ugt i32 %134, %136, !dbg !13810
  br i1 %137, label %138, label %152, !dbg !13811

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #27, !dbg !13812
  %140 = icmp eq i32 %139, 0, !dbg !13815
  br i1 %140, label %141, label %385, !dbg !13816

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13817
  %143 = and i32 %142, -57345, !dbg !13817
  %144 = load i32, i32* %133, align 4, !dbg !13817
  %145 = or i32 %143, %144, !dbg !13817
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13817
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13818
  %147 = and i32 %146, 16777215, !dbg !13818
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !13818
  %149 = load i32, i32* %148, align 4, !dbg !13818
  %150 = shl i32 %149, 24, !dbg !13818
  %151 = or i32 %150, %147, !dbg !13818
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13818
  br label %165, !dbg !13819

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13820
  %154 = and i32 %153, -57345, !dbg !13820
  %155 = or i32 %154, %134, !dbg !13820
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13820
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13822
  %157 = and i32 %156, 16777215, !dbg !13822
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !13822
  %159 = load i32, i32* %158, align 4, !dbg !13822
  %160 = shl i32 %159, 24, !dbg !13822
  %161 = or i32 %160, %157, !dbg !13822
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13822
  %162 = load i32, i32* %133, align 4, !dbg !13823
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #27, !dbg !13825
  %164 = icmp eq i32 %163, 0, !dbg !13826
  br i1 %164, label %165, label %385, !dbg !13827

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !13828
  %167 = lshr i32 %166, 13, !dbg !13829
  %168 = shl i32 65536, %167, !dbg !13830
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13831
  %170 = lshr i32 %169, 4, !dbg !13832
  %171 = and i32 %170, 15, !dbg !13832
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !13833
  %173 = load i8, i8* %172, align 1, !dbg !13833
  %174 = zext i8 %173 to i32, !dbg !13833
  %175 = lshr i32 %168, %174, !dbg !13834
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !13835
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !13836
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #26, !dbg !13837
  call void @llvm.dbg.value(metadata i32 %177, metadata !13655, metadata !DIExpression()), !dbg !13666
  %178 = icmp eq i32 %177, 0, !dbg !13838
  br i1 %178, label %215, label %385, !dbg !13840

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !13841
  %181 = load i32, i32* %180, align 4, !dbg !13841
  %182 = icmp eq i32 %181, 0, !dbg !13844
  br i1 %182, label %205, label %183, !dbg !13845

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !13846
  %184 = tail call i32 @HAL_GetTick() #26, !dbg !13848
  call void @llvm.dbg.value(metadata i32 %184, metadata !13654, metadata !DIExpression()), !dbg !13666
  br label %185, !dbg !13849

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13850
  %187 = and i32 %186, 512, !dbg !13850
  %188 = icmp eq i32 %187, 0, !dbg !13851
  br i1 %188, label %189, label %193, !dbg !13849

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #26, !dbg !13852
  %191 = sub i32 %190, %184, !dbg !13855
  %192 = icmp ugt i32 %191, 2, !dbg !13856
  br i1 %192, label %385, label %185, !dbg !13857, !llvm.loop !13858

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13860
  %195 = and i32 %194, -57345, !dbg !13860
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !13860
  %197 = load i32, i32* %196, align 4, !dbg !13860
  %198 = or i32 %195, %197, !dbg !13860
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13860
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13861
  %200 = and i32 %199, 16777215, !dbg !13861
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !13861
  %202 = load i32, i32* %201, align 4, !dbg !13861
  %203 = shl i32 %202, 24, !dbg !13861
  %204 = or i32 %203, %200, !dbg !13861
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13861
  br label %215, !dbg !13862

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !13863
  %206 = tail call i32 @HAL_GetTick() #26, !dbg !13865
  call void @llvm.dbg.value(metadata i32 %206, metadata !13654, metadata !DIExpression()), !dbg !13666
  br label %207, !dbg !13866

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13867
  %209 = and i32 %208, 512, !dbg !13867
  %210 = icmp eq i32 %209, 0, !dbg !13868
  br i1 %210, label %215, label %211, !dbg !13866

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #26, !dbg !13869
  %213 = sub i32 %212, %206, !dbg !13872
  %214 = icmp ugt i32 %213, 2, !dbg !13873
  br i1 %214, label %385, label %207, !dbg !13874, !llvm.loop !13875

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !13877
  %217 = and i32 %216, 8, !dbg !13879
  %218 = icmp eq i32 %217, 0, !dbg !13880
  br i1 %218, label %243, label %219, !dbg !13881

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13882
  %221 = load i32, i32* %220, align 4, !dbg !13882
  %222 = icmp eq i32 %221, 0, !dbg !13885
  br i1 %222, label %233, label %223, !dbg !13886

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !13887
  %224 = tail call i32 @HAL_GetTick() #26, !dbg !13889
  call void @llvm.dbg.value(metadata i32 %224, metadata !13654, metadata !DIExpression()), !dbg !13666
  br label %225, !dbg !13890

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13891
  %227 = and i32 %226, 2, !dbg !13891
  %228 = icmp eq i32 %227, 0, !dbg !13892
  br i1 %228, label %229, label %243, !dbg !13890

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #26, !dbg !13893
  %231 = sub i32 %230, %224, !dbg !13896
  %232 = icmp ugt i32 %231, 2, !dbg !13897
  br i1 %232, label %385, label %225, !dbg !13898, !llvm.loop !13899

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !13901
  %234 = tail call i32 @HAL_GetTick() #26, !dbg !13903
  call void @llvm.dbg.value(metadata i32 %234, metadata !13654, metadata !DIExpression()), !dbg !13666
  br label %235, !dbg !13904

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13905
  %237 = and i32 %236, 2, !dbg !13905
  %238 = icmp eq i32 %237, 0, !dbg !13906
  br i1 %238, label %243, label %239, !dbg !13904

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #26, !dbg !13907
  %241 = sub i32 %240, %234, !dbg !13910
  %242 = icmp ugt i32 %241, 2, !dbg !13911
  br i1 %242, label %385, label %235, !dbg !13912, !llvm.loop !13913

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !13915
  %245 = and i32 %244, 4, !dbg !13916
  %246 = icmp eq i32 %245, 0, !dbg !13917
  br i1 %246, label %320, label %247, !dbg !13918

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !13658, metadata !DIExpression()), !dbg !13919
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13920
  %249 = and i32 %248, 268435456, !dbg !13920
  %250 = icmp eq i32 %249, 0, !dbg !13920
  br i1 %250, label %251, label %258, !dbg !13921

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !13922
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !13922
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13662, metadata !DIExpression()), !dbg !13922
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13922
  %254 = or i32 %253, 268435456, !dbg !13922
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13922
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13922
  %256 = and i32 %255, 268435456, !dbg !13922
  store volatile i32 %256, i32* %2, align 4, !dbg !13922
  %257 = load volatile i32, i32* %2, align 4, !dbg !13922
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !13923
  call void @llvm.dbg.value(metadata i32 1, metadata !13658, metadata !DIExpression()), !dbg !13919
  br label %258, !dbg !13924

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !13658, metadata !DIExpression()), !dbg !13919
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13925
  %260 = and i32 %259, 256, !dbg !13925
  %261 = icmp eq i32 %260, 0, !dbg !13925
  br i1 %261, label %262, label %274, !dbg !13927

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13928
  %264 = or i32 %263, 256, !dbg !13928
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13928
  %265 = tail call i32 @HAL_GetTick() #26, !dbg !13930
  call void @llvm.dbg.value(metadata i32 %265, metadata !13654, metadata !DIExpression()), !dbg !13666
  br label %266, !dbg !13931

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13932
  %268 = and i32 %267, 256, !dbg !13932
  %269 = icmp eq i32 %268, 0, !dbg !13932
  br i1 %269, label %270, label %274, !dbg !13931

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #26, !dbg !13933
  %272 = sub i32 %271, %265, !dbg !13936
  %273 = icmp ugt i32 %272, 100, !dbg !13937
  br i1 %273, label %385, label %266, !dbg !13938, !llvm.loop !13939

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13941
  %276 = load i32, i32* %275, align 4, !dbg !13941
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !13944

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13945
  %279 = or i32 %278, 256, !dbg !13945
  br label %295, !dbg !13945

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13947
  %282 = and i32 %281, -257, !dbg !13947
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13947
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13947
  %284 = and i32 %283, -1025, !dbg !13947
  br label %295, !dbg !13947

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13950
  %287 = or i32 %286, 1024, !dbg !13950
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13950
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13950
  %289 = or i32 %288, 256, !dbg !13950
  br label %295, !dbg !13950

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13953
  %292 = and i32 %291, -257, !dbg !13953
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13953
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13953
  %294 = and i32 %293, -1025, !dbg !13953
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13955
  %297 = load i32, i32* %275, align 4, !dbg !13956
  %298 = icmp eq i32 %297, 0, !dbg !13958
  %299 = tail call i32 @HAL_GetTick() #26, !dbg !13959
  call void @llvm.dbg.value(metadata i32 %299, metadata !13654, metadata !DIExpression()), !dbg !13666
  call void @llvm.dbg.value(metadata i32 %299, metadata !13654, metadata !DIExpression()), !dbg !13666
  br i1 %298, label %308, label %300, !dbg !13960

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13961
  %302 = and i32 %301, 512, !dbg !13961
  %303 = icmp eq i32 %302, 0, !dbg !13963
  br i1 %303, label %304, label %316, !dbg !13964

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #26, !dbg !13965
  %306 = sub i32 %305, %299, !dbg !13968
  %307 = icmp ugt i32 %306, 5000, !dbg !13969
  br i1 %307, label %385, label %300, !dbg !13970, !llvm.loop !13971

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13973
  %310 = and i32 %309, 512, !dbg !13973
  %311 = icmp eq i32 %310, 0, !dbg !13975
  br i1 %311, label %316, label %312, !dbg !13976

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #26, !dbg !13977
  %314 = sub i32 %313, %299, !dbg !13980
  %315 = icmp ugt i32 %314, 5000, !dbg !13981
  br i1 %315, label %385, label %308, !dbg !13982, !llvm.loop !13983

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !13985

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13986
  %319 = and i32 %318, -268435457, !dbg !13986
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13986
  br label %320, !dbg !13989

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !13990
  %322 = load i32, i32* %321, align 4, !dbg !13990
  %323 = icmp eq i32 %322, 0, !dbg !13992
  br i1 %323, label %384, label %324, !dbg !13993

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !13994
  br i1 %325, label %366, label %326, !dbg !13997

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !13998
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !14001
  %328 = tail call i32 @HAL_GetTick() #26, !dbg !14001
  call void @llvm.dbg.value(metadata i32 %328, metadata !13654, metadata !DIExpression()), !dbg !13666
  call void @llvm.dbg.value(metadata i32 %328, metadata !13654, metadata !DIExpression()), !dbg !13666
  br i1 %327, label %329, label %358, !dbg !14002

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14003
  %331 = and i32 %330, 33554432, !dbg !14003
  %332 = icmp eq i32 %331, 0, !dbg !14005
  br i1 %332, label %337, label %333, !dbg !14006

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #26, !dbg !14007
  %335 = sub i32 %334, %328, !dbg !14010
  %336 = icmp ugt i32 %335, 2, !dbg !14011
  br i1 %336, label %385, label %329, !dbg !14012, !llvm.loop !14013

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14015
  %339 = and i32 %338, -16580609, !dbg !14015
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !14015
  %341 = load i32, i32* %340, align 4, !dbg !14015
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !14015
  %343 = load i32, i32* %342, align 4, !dbg !14015
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !14015
  %345 = load i32, i32* %344, align 4, !dbg !14015
  %346 = or i32 %339, %341, !dbg !14015
  %347 = or i32 %346, %343, !dbg !14015
  %348 = or i32 %347, %345, !dbg !14015
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14015
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !14016
  %349 = tail call i32 @HAL_GetTick() #26, !dbg !14017
  call void @llvm.dbg.value(metadata i32 %349, metadata !13654, metadata !DIExpression()), !dbg !13666
  br label %350, !dbg !14018

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14019
  %352 = and i32 %351, 33554432, !dbg !14019
  %353 = icmp eq i32 %352, 0, !dbg !14020
  br i1 %353, label %354, label %384, !dbg !14018

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #26, !dbg !14021
  %356 = sub i32 %355, %349, !dbg !14024
  %357 = icmp ugt i32 %356, 2, !dbg !14025
  br i1 %357, label %385, label %350, !dbg !14026, !llvm.loop !14027

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14029
  %360 = and i32 %359, 33554432, !dbg !14029
  %361 = icmp eq i32 %360, 0, !dbg !14031
  br i1 %361, label %384, label %362, !dbg !14032

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #26, !dbg !14033
  %364 = sub i32 %363, %328, !dbg !14036
  %365 = icmp ugt i32 %364, 2, !dbg !14037
  br i1 %365, label %385, label %358, !dbg !14038, !llvm.loop !14039

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !14041
  br i1 %367, label %385, label %368, !dbg !14044

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14045
  call void @llvm.dbg.value(metadata i32 %369, metadata !13657, metadata !DIExpression()), !dbg !13666
  %370 = and i32 %369, 65536, !dbg !14047
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !14049
  %372 = load i32, i32* %371, align 4, !dbg !14049
  %373 = icmp eq i32 %370, %372, !dbg !14050
  br i1 %373, label %374, label %385, !dbg !14051

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !14052
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !14053
  %377 = load i32, i32* %376, align 4, !dbg !14053
  %378 = icmp eq i32 %375, %377, !dbg !14054
  br i1 %378, label %379, label %385, !dbg !14055

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !14056
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !14057
  %382 = load i32, i32* %381, align 4, !dbg !14057
  %383 = icmp eq i32 %380, %382, !dbg !14058
  br i1 %383, label %384, label %385, !dbg !14059

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !14060

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !13666
  ret i32 %386, !dbg !14061
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #16 !dbg !14062 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14064, metadata !DIExpression()), !dbg !14073
  call void @llvm.dbg.value(metadata i32 0, metadata !14066, metadata !DIExpression()), !dbg !14073
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14074
  %4 = and i32 %3, 240, !dbg !14074
  %5 = icmp eq i32 %4, 0, !dbg !14075
  br i1 %5, label %6, label %31, !dbg !14076

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !14077
  %8 = and i32 %7, 268435456, !dbg !14077
  %9 = icmp eq i32 %8, 0, !dbg !14077
  br i1 %9, label %12, label %10, !dbg !14078

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14079
  call void @llvm.dbg.value(metadata i32 %11, metadata !14065, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !14073
  br label %22, !dbg !14081

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !14082
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !14082
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14067, metadata !DIExpression()), !dbg !14082
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !14082
  %15 = or i32 %14, 268435456, !dbg !14082
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !14082
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !14082
  %17 = and i32 %16, 268435456, !dbg !14082
  store volatile i32 %17, i32* %2, align 4, !dbg !14082
  %18 = load volatile i32, i32* %2, align 4, !dbg !14082
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !14083
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14084
  call void @llvm.dbg.value(metadata i32 %19, metadata !14065, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !14073
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !14085
  %21 = and i32 %20, -268435457, !dbg !14085
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !14085
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !14086
  call void @llvm.dbg.value(metadata i32 %24, metadata !14065, metadata !DIExpression()), !dbg !14073
  %25 = icmp eq i32 %24, 6144, !dbg !14087
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !14089
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()), !dbg !14073
  br i1 %27, label %28, label %31, !dbg !14090

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14092
  %30 = or i32 %29, 4, !dbg !14092
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14092
  br label %31, !dbg !14092

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14090
  %34 = and i32 %33, -2, !dbg !14090
  %35 = or i32 %34, %32, !dbg !14090
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14090
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14095
  %37 = and i32 %36, 1, !dbg !14095
  %38 = xor i32 %37, %32, !dbg !14073
  ret i32 %38, !dbg !14097
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14098 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !14111, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.value(metadata i32 %1, metadata !14112, metadata !DIExpression()), !dbg !14115
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !14116
  br i1 %3, label %136, label %4, !dbg !14118

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14119
  %6 = and i32 %5, 1, !dbg !14119
  %7 = icmp ult i32 %6, %1, !dbg !14121
  br i1 %7, label %8, label %20, !dbg !14122

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !14123
  br i1 %9, label %10, label %13, !dbg !14127

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14128
  %12 = or i32 %11, 4, !dbg !14128
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14128
  br label %13, !dbg !14128

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14127
  %15 = and i32 %14, -2, !dbg !14127
  %16 = or i32 %15, %1, !dbg !14127
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14127
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14130
  %18 = and i32 %17, 1, !dbg !14130
  %19 = icmp eq i32 %18, %1, !dbg !14132
  br i1 %19, label %20, label %136, !dbg !14133

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !14134
  %22 = load i32, i32* %21, align 4, !dbg !14134
  %23 = and i32 %22, 2, !dbg !14136
  %24 = icmp eq i32 %23, 0, !dbg !14137
  br i1 %24, label %32, label %25, !dbg !14138

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14139
  %27 = and i32 %26, -241, !dbg !14139
  %28 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !14139
  %29 = load i32, i32* %28, align 4, !dbg !14139
  %30 = or i32 %27, %29, !dbg !14139
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14139
  %31 = load i32, i32* %21, align 4, !dbg !14141
  br label %32, !dbg !14143

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !14141
  %34 = and i32 %33, 1, !dbg !14144
  %35 = icmp eq i32 %34, 0, !dbg !14145
  br i1 %35, label %93, label %36, !dbg !14146

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !14147
  %38 = load i32, i32* %37, align 4, !dbg !14147
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !14150

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14151
  %41 = and i32 %40, 131072, !dbg !14151
  %42 = icmp eq i32 %41, 0, !dbg !14154
  br i1 %42, label %136, label %55, !dbg !14155

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14156
  %45 = and i32 %44, 33554432, !dbg !14156
  %46 = icmp eq i32 %45, 0, !dbg !14160
  br i1 %46, label %136, label %55, !dbg !14161

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14162
  %49 = and i32 %48, 2, !dbg !14162
  %50 = icmp eq i32 %49, 0, !dbg !14166
  br i1 %50, label %136, label %55, !dbg !14167

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14168
  %53 = and i32 %52, 512, !dbg !14168
  %54 = icmp eq i32 %53, 0, !dbg !14171
  br i1 %54, label %136, label %55, !dbg !14172

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14173
  %57 = and i32 %56, -4, !dbg !14173
  %58 = or i32 %57, %38, !dbg !14173
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14173
  %59 = tail call i32 @HAL_GetTick() #26, !dbg !14174
  call void @llvm.dbg.value(metadata i32 %59, metadata !14113, metadata !DIExpression()), !dbg !14115
  %60 = load i32, i32* %37, align 4, !dbg !14175
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !14177

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14178
  %63 = and i32 %62, 12, !dbg !14178
  %64 = icmp eq i32 %63, 8, !dbg !14180
  br i1 %64, label %93, label %65, !dbg !14181

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #26, !dbg !14182
  %67 = sub i32 %66, %59, !dbg !14185
  %68 = icmp ugt i32 %67, 5000, !dbg !14186
  br i1 %68, label %136, label %61, !dbg !14187, !llvm.loop !14188

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14190
  %71 = and i32 %70, 12, !dbg !14190
  %72 = icmp eq i32 %71, 12, !dbg !14193
  br i1 %72, label %93, label %73, !dbg !14194

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #26, !dbg !14195
  %75 = sub i32 %74, %59, !dbg !14198
  %76 = icmp ugt i32 %75, 5000, !dbg !14199
  br i1 %76, label %136, label %69, !dbg !14200, !llvm.loop !14201

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14203
  %79 = and i32 %78, 12, !dbg !14203
  %80 = icmp eq i32 %79, 4, !dbg !14206
  br i1 %80, label %93, label %81, !dbg !14207

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #26, !dbg !14208
  %83 = sub i32 %82, %59, !dbg !14211
  %84 = icmp ugt i32 %83, 5000, !dbg !14212
  br i1 %84, label %136, label %77, !dbg !14213, !llvm.loop !14214

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14216
  %87 = and i32 %86, 12, !dbg !14216
  %88 = icmp eq i32 %87, 0, !dbg !14218
  br i1 %88, label %93, label %89, !dbg !14219

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #26, !dbg !14220
  %91 = sub i32 %90, %59, !dbg !14223
  %92 = icmp ugt i32 %91, 5000, !dbg !14224
  br i1 %92, label %136, label %85, !dbg !14225, !llvm.loop !14226

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14228
  %95 = and i32 %94, 1, !dbg !14228
  %96 = icmp ugt i32 %95, %1, !dbg !14230
  br i1 %96, label %97, label %103, !dbg !14231

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14232
  %99 = and i32 %98, -2, !dbg !14232
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14232
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14235
  %101 = and i32 %100, 1, !dbg !14235
  %102 = icmp eq i32 %101, 0, !dbg !14237
  br i1 %102, label %103, label %136, !dbg !14238

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !14239
  %105 = and i32 %104, 4, !dbg !14241
  %106 = icmp eq i32 %105, 0, !dbg !14242
  br i1 %106, label %114, label %107, !dbg !14243

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14244
  %109 = and i32 %108, -1793, !dbg !14244
  %110 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !14244
  %111 = load i32, i32* %110, align 4, !dbg !14244
  %112 = or i32 %109, %111, !dbg !14244
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14244
  %113 = load i32, i32* %21, align 4, !dbg !14246
  br label %114, !dbg !14248

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !14246
  %116 = and i32 %115, 8, !dbg !14249
  %117 = icmp eq i32 %116, 0, !dbg !14250
  br i1 %117, label %125, label %118, !dbg !14251

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14252
  %120 = and i32 %119, -14337, !dbg !14252
  %121 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !14252
  %122 = load i32, i32* %121, align 4, !dbg !14252
  %123 = shl i32 %122, 3, !dbg !14252
  %124 = or i32 %123, %120, !dbg !14252
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14252
  br label %125, !dbg !14254

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !14255
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14256
  %128 = lshr i32 %127, 4, !dbg !14257
  %129 = and i32 %128, 15, !dbg !14257
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !14258
  %131 = load i8, i8* %130, align 1, !dbg !14258
  %132 = zext i8 %131 to i32, !dbg !14258
  %133 = lshr i32 %126, %132, !dbg !14259
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !14260
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !14261
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #26, !dbg !14262
  call void @llvm.dbg.value(metadata i32 %135, metadata !14114, metadata !DIExpression()), !dbg !14115
  br label %136, !dbg !14263

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !14115
  ret i32 %137, !dbg !14264
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #18 !dbg !14265 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14273
  call void @llvm.dbg.value(metadata i32 %1, metadata !14267, metadata !DIExpression()), !dbg !14274
  %2 = lshr i32 %1, 2, !dbg !14275
  %3 = and i32 %2, 3, !dbg !14275
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !14275

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !14272, metadata !DIExpression()), !dbg !14274
  br label %26, !dbg !14276

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !14279
  %7 = and i32 %6, 15, !dbg !14279
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !14281
  %9 = load i8, i8* %8, align 1, !dbg !14281
  call void @llvm.dbg.value(metadata i8 %9, metadata !14268, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14274
  %10 = lshr i32 %1, 22, !dbg !14282
  %11 = and i32 %10, 3, !dbg !14282
  %12 = add nuw nsw i32 %11, 1, !dbg !14283
  call void @llvm.dbg.value(metadata i32 %12, metadata !14269, metadata !DIExpression()), !dbg !14274
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14284
  %14 = and i32 %13, 65536, !dbg !14284
  %15 = icmp eq i32 %14, 0, !dbg !14286
  %16 = zext i8 %9 to i32, !dbg !14287
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !14287
  %18 = mul nuw i32 %17, %16, !dbg !14287
  %19 = udiv i32 %18, %12, !dbg !14288
  call void @llvm.dbg.value(metadata i32 %19, metadata !14270, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i32 %19, metadata !14272, metadata !DIExpression()), !dbg !14274
  br label %26, !dbg !14289

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14290
  %23 = lshr i32 %22, 13, !dbg !14292
  %24 = and i32 %23, 7, !dbg !14292
  call void @llvm.dbg.value(metadata i32 %24, metadata !14271, metadata !DIExpression()), !dbg !14274
  %25 = shl nuw nsw i32 65536, %24, !dbg !14293
  call void @llvm.dbg.value(metadata i32 %25, metadata !14272, metadata !DIExpression()), !dbg !14274
  br label %26, !dbg !14294

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !14295
  call void @llvm.dbg.value(metadata i32 %27, metadata !14272, metadata !DIExpression()), !dbg !14274
  ret i32 %27, !dbg !14296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14297 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14299, metadata !DIExpression()), !dbg !14314
  call void @llvm.dbg.value(metadata i32 %1, metadata !14300, metadata !DIExpression()), !dbg !14314
  call void @llvm.dbg.value(metadata i32 %2, metadata !14301, metadata !DIExpression()), !dbg !14314
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !14315
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #25, !dbg !14315
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !14302, metadata !DIExpression()), !dbg !14316
  %7 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !14317
  store i32 2, i32* %7, align 4, !dbg !14318
  %8 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !14319
  store i32 2, i32* %8, align 4, !dbg !14320
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !14321
  store i32 0, i32* %9, align 4, !dbg !14322
  %10 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !14323
  store i32 256, i32* %10, align 4, !dbg !14324
  %11 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !14325
  store i32 0, i32* %11, align 4, !dbg !14326
  %12 = bitcast i32* %5 to i8*, !dbg !14327
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !14327
  call void @llvm.dbg.declare(metadata i32* %5, metadata !14312, metadata !DIExpression()), !dbg !14327
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !14327
  %14 = or i32 %13, 1, !dbg !14327
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !14327
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !14327
  %16 = and i32 %15, 1, !dbg !14327
  store volatile i32 %16, i32* %5, align 4, !dbg !14327
  %17 = load volatile i32, i32* %5, align 4, !dbg !14327
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !14328
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !14329
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14330
  %19 = and i32 %18, -1996488705, !dbg !14330
  %20 = or i32 %2, %1, !dbg !14330
  %21 = or i32 %20, %19, !dbg !14330
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14330
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #25, !dbg !14331
  ret void, !dbg !14331
}

; Function Attrs: optsize
declare !dbg !14332 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #17 !dbg !14336 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !14337
  ret void, !dbg !14338
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #17 !dbg !14339 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !14340
  ret void, !dbg !14341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !14342 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !14343
  ret i32 %1, !dbg !14344
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #18 !dbg !14345 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !14346
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14347
  %3 = lshr i32 %2, 8, !dbg !14348
  %4 = and i32 %3, 7, !dbg !14348
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !14349
  %6 = load i8, i8* %5, align 1, !dbg !14349
  %7 = zext i8 %6 to i32, !dbg !14349
  %8 = lshr i32 %1, %7, !dbg !14350
  ret i32 %8, !dbg !14351
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #18 !dbg !14352 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !14353
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14354
  %3 = lshr i32 %2, 11, !dbg !14355
  %4 = and i32 %3, 7, !dbg !14355
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !14356
  %6 = load i8, i8* %5, align 1, !dbg !14356
  %7 = zext i8 %6 to i32, !dbg !14356
  %8 = lshr i32 %1, %7, !dbg !14357
  ret i32 %8, !dbg !14358
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #18 !dbg !14359 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !14363, metadata !DIExpression()), !dbg !14364
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !14365
  store i32 31, i32* %2, align 4, !dbg !14366
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14367
  %4 = and i32 %3, 262144, !dbg !14369
  %5 = icmp eq i32 %4, 0, !dbg !14370
  br i1 %5, label %8, label %6, !dbg !14371

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14372
  store i32 5, i32* %7, align 4, !dbg !14374
  br label %15, !dbg !14375

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14376
  %10 = and i32 %9, 65536, !dbg !14378
  %11 = icmp eq i32 %10, 0, !dbg !14379
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14380
  br i1 %11, label %14, label %13, !dbg !14381

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !14382
  br label %15, !dbg !14384

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !14385
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14387
  %17 = and i32 %16, 1, !dbg !14389
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !14390
  store i32 %17, i32* %18, align 4, !dbg !14392
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14393
  %20 = lshr i32 %19, 8, !dbg !14394
  %21 = and i32 %20, 31, !dbg !14394
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !14395
  store i32 %21, i32* %22, align 4, !dbg !14396
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14397
  %24 = lshr i32 %23, 8, !dbg !14399
  %25 = and i32 %24, 1, !dbg !14399
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !14400
  store i32 %25, i32* %26, align 4, !dbg !14402
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14403
  %28 = lshr i32 %27, 24, !dbg !14404
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !14405
  store i32 %28, i32* %29, align 4, !dbg !14406
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14407
  %31 = and i32 %30, 57344, !dbg !14408
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !14409
  store i32 %31, i32* %32, align 4, !dbg !14410
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !14411
  %34 = and i32 %33, 1024, !dbg !14413
  %35 = icmp eq i32 %34, 0, !dbg !14414
  br i1 %35, label %38, label %36, !dbg !14415

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14416
  store i32 5, i32* %37, align 4, !dbg !14418
  br label %45, !dbg !14419

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !14420
  %40 = and i32 %39, 256, !dbg !14422
  %41 = icmp eq i32 %40, 0, !dbg !14423
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14424
  br i1 %41, label %44, label %43, !dbg !14425

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !14426
  br label %45, !dbg !14428

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !14429
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !14431
  %47 = and i32 %46, 1, !dbg !14433
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !14434
  store i32 %47, i32* %48, align 4, !dbg !14436
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14437
  %50 = and i32 %49, 16777216, !dbg !14439
  %51 = icmp eq i32 %50, 0, !dbg !14440
  %52 = select i1 %51, i32 1, i32 2, !dbg !14441
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !14442
  store i32 %52, i32* %53, align 4, !dbg !14444
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14445
  %55 = and i32 %54, 65536, !dbg !14446
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !14447
  store i32 %55, i32* %56, align 4, !dbg !14448
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14449
  %58 = and i32 %57, 3932160, !dbg !14450
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !14451
  store i32 %58, i32* %59, align 4, !dbg !14452
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14453
  %61 = and i32 %60, 12582912, !dbg !14454
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !14455
  store i32 %61, i32* %62, align 4, !dbg !14456
  ret void, !dbg !14457
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #18 !dbg !14458 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !14462, metadata !DIExpression()), !dbg !14464
  call void @llvm.dbg.value(metadata i32* %1, metadata !14463, metadata !DIExpression()), !dbg !14464
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !14465
  store i32 15, i32* %3, align 4, !dbg !14466
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14467
  %5 = and i32 %4, 3, !dbg !14468
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !14469
  store i32 %5, i32* %6, align 4, !dbg !14470
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14471
  %8 = and i32 %7, 240, !dbg !14472
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !14473
  store i32 %8, i32* %9, align 4, !dbg !14474
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14475
  %11 = and i32 %10, 1792, !dbg !14476
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !14477
  store i32 %11, i32* %12, align 4, !dbg !14478
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14479
  %14 = lshr i32 %13, 3, !dbg !14480
  %15 = and i32 %14, 1792, !dbg !14480
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !14481
  store i32 %15, i32* %16, align 4, !dbg !14482
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14483
  %18 = and i32 %17, 1, !dbg !14483
  store i32 %18, i32* %1, align 4, !dbg !14484
  ret void, !dbg !14485
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !14486 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14487
  %2 = and i32 %1, 128, !dbg !14487
  %3 = icmp eq i32 %2, 0, !dbg !14487
  br i1 %3, label %5, label %4, !dbg !14489

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #27, !dbg !14490
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !14492
  br label %5, !dbg !14493

5:                                                ; preds = %4, %0
  ret void, !dbg !14494
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !14495 {
  ret void, !dbg !14496
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #17 !dbg !14497 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14500, metadata !DIExpression()), !dbg !14501
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !14502
  ret void, !dbg !14503
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #17 !dbg !14504 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14507, metadata !DIExpression()), !dbg !14509
  call void @llvm.dbg.value(metadata i32 1000, metadata !14508, metadata !DIExpression()), !dbg !14509
  %2 = udiv i32 %0, 1000, !dbg !14510
  %3 = add nsw i32 %2, -1, !dbg !14511
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !14512
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !14513
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14514
  ret void, !dbg !14515
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #16 !dbg !14516 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14518, metadata !DIExpression()), !dbg !14521
  %3 = bitcast i32* %2 to i8*, !dbg !14522
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !14522
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14519, metadata !DIExpression()), !dbg !14523
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14524
  store volatile i32 %4, i32* %2, align 4, !dbg !14523
  call void @llvm.dbg.value(metadata i32 %0, metadata !14520, metadata !DIExpression()), !dbg !14521
  %5 = load volatile i32, i32* %2, align 4, !dbg !14525
  %6 = icmp eq i32 %0, -1, !dbg !14526
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14520, metadata !DIExpression()), !dbg !14521
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !14521
  call void @llvm.dbg.value(metadata i32 %8, metadata !14520, metadata !DIExpression()), !dbg !14521
  br label %9, !dbg !14528

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !14520, metadata !DIExpression()), !dbg !14521
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14529
  call void @llvm.dbg.value(metadata i32 undef, metadata !14520, metadata !DIExpression()), !dbg !14521
  %12 = shl i32 %11, 15, !dbg !14521
  %13 = ashr i32 %12, 31, !dbg !14521
  %14 = add i32 %13, %10, !dbg !14521
  call void @llvm.dbg.value(metadata i32 %14, metadata !14520, metadata !DIExpression()), !dbg !14521
  %15 = icmp eq i32 %14, 0, !dbg !14532
  br i1 %15, label %16, label %9, !dbg !14528

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !14533
  ret void, !dbg !14533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !14534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14536, metadata !DIExpression()), !dbg !14537
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !14538
  ret void, !dbg !14539
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #17 !dbg !14540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14545, metadata !DIExpression()), !dbg !14548
  call void @llvm.dbg.value(metadata i32 0, metadata !14546, metadata !DIExpression()), !dbg !14548
  call void @llvm.dbg.value(metadata i32 0, metadata !14547, metadata !DIExpression()), !dbg !14548
  %2 = add i32 %0, -32000001, !dbg !14549
  %3 = icmp ult i32 %2, -32000000, !dbg !14549
  br i1 %3, label %22, label %4, !dbg !14549

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !14551
  %6 = icmp eq i32 %5, 2048, !dbg !14554
  br i1 %6, label %7, label %9, !dbg !14555

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !14556
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()), !dbg !14548
  br i1 %8, label %16, label %17, !dbg !14559

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !14560
  %11 = icmp eq i32 %10, 4096, !dbg !14562
  br i1 %11, label %12, label %14, !dbg !14563

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !14564
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()), !dbg !14548
  br i1 %13, label %16, label %17, !dbg !14559

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !14567
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()), !dbg !14548
  br i1 %15, label %16, label %17, !dbg !14559

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #27, !dbg !14570
  br label %17, !dbg !14573

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #27, !dbg !14574
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !14575
  %20 = icmp ne i32 %19, %18, !dbg !14577
  %21 = zext i1 %20 to i32, !dbg !14578
  br label %22, !dbg !14578

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !14548
  call void @llvm.dbg.value(metadata i32 %23, metadata !14546, metadata !DIExpression()), !dbg !14548
  ret i32 %23, !dbg !14579
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #18 !dbg !14580 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14581
  %2 = and i32 %1, 6144, !dbg !14581
  ret i32 %2, !dbg !14582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #17 !dbg !14583 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14584
  %2 = or i32 %1, 4, !dbg !14584
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14584
  ret void, !dbg !14585
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #17 !dbg !14586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14588, metadata !DIExpression()), !dbg !14589
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14590
  %3 = and i32 %2, -2, !dbg !14590
  %4 = or i32 %3, %0, !dbg !14590
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14590
  ret void, !dbg !14591
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #18 !dbg !14592 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14593
  %2 = and i32 %1, 1, !dbg !14593
  ret i32 %2, !dbg !14594
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !14595 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !14612, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14613, metadata !DIExpression()), !dbg !14616
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !14617
  %4 = icmp eq i32 %3, 0, !dbg !14619
  br i1 %4, label %5, label %19, !dbg !14620

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #27, !dbg !14621
  call void @llvm.dbg.value(metadata i32 %6, metadata !14615, metadata !DIExpression()), !dbg !14616
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.255() #27, !dbg !14623
  %8 = icmp eq i32 %7, 1, !dbg !14625
  br i1 %8, label %13, label %9, !dbg !14626

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.256() #27, !dbg !14627
  br label %10, !dbg !14629

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.255() #27, !dbg !14630
  %12 = icmp eq i32 %11, 1, !dbg !14631
  br i1 %12, label %13, label %10, !dbg !14629, !llvm.loop !14632

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !14634
  %15 = load i32, i32* %14, align 4, !dbg !14634
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !14635
  %17 = load i32, i32* %16, align 4, !dbg !14635
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.257(i32 noundef 0, i32 noundef %15, i32 noundef %17) #27, !dbg !14636
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !14637
  call void @llvm.dbg.value(metadata i32 %18, metadata !14614, metadata !DIExpression()), !dbg !14616
  br label %19, !dbg !14638

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !14639
  call void @llvm.dbg.value(metadata i32 %20, metadata !14614, metadata !DIExpression()), !dbg !14616
  ret i32 %20, !dbg !14640
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #18 !dbg !14641 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14645, metadata !DIExpression()), !dbg !14646
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.259() #27, !dbg !14647
  %2 = icmp ne i32 %1, 0, !dbg !14649
  %3 = zext i1 %2 to i32, !dbg !14650
  call void @llvm.dbg.value(metadata i32 %3, metadata !14645, metadata !DIExpression()), !dbg !14646
  ret i32 %3, !dbg !14651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #10 !dbg !14652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14656, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !14657, metadata !DIExpression()), !dbg !14659
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !14660
  %4 = load i32, i32* %3, align 4, !dbg !14660
  %5 = lshr i32 %4, 18, !dbg !14661
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !14662
  %7 = load i8, i8* %6, align 1, !dbg !14662
  %8 = zext i8 %7 to i32, !dbg !14663
  %9 = mul i32 %8, %0, !dbg !14664
  call void @llvm.dbg.value(metadata i32 %9, metadata !14658, metadata !DIExpression()), !dbg !14659
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !14665
  %11 = load i32, i32* %10, align 4, !dbg !14665
  %12 = lshr i32 %11, 22, !dbg !14666
  %13 = add nuw nsw i32 %12, 1, !dbg !14667
  %14 = udiv i32 %9, %13, !dbg !14668
  call void @llvm.dbg.value(metadata i32 %14, metadata !14658, metadata !DIExpression()), !dbg !14659
  ret i32 %14, !dbg !14669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.255() unnamed_addr #18 !dbg !14670 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14671
  %2 = lshr i32 %1, 1, !dbg !14672
  %3 = and i32 %2, 1, !dbg !14672
  ret i32 %3, !dbg !14673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.256() unnamed_addr #17 !dbg !14674 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14675
  %2 = or i32 %1, 1, !dbg !14675
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14675
  ret void, !dbg !14676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.257(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !14677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14679, metadata !DIExpression()), !dbg !14682
  call void @llvm.dbg.value(metadata i32 %1, metadata !14680, metadata !DIExpression()), !dbg !14682
  call void @llvm.dbg.value(metadata i32 %2, metadata !14681, metadata !DIExpression()), !dbg !14682
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14683
  %5 = and i32 %4, -16580609, !dbg !14683
  %6 = or i32 %1, %0, !dbg !14683
  %7 = or i32 %6, %2, !dbg !14683
  %8 = or i32 %7, %5, !dbg !14683
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14683
  ret void, !dbg !14684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #17 !dbg !14685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14689, metadata !DIExpression()), !dbg !14693
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14690, metadata !DIExpression()), !dbg !14693
  call void @llvm.dbg.value(metadata i32 0, metadata !14691, metadata !DIExpression()), !dbg !14693
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14694
  %4 = load i32, i32* %3, align 4, !dbg !14694
  %5 = lshr i32 %4, 4, !dbg !14694
  %6 = and i32 %5, 15, !dbg !14694
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !14694
  %8 = load i8, i8* %7, align 1, !dbg !14694
  %9 = zext i8 %8 to i32, !dbg !14694
  %10 = lshr i32 %0, %9, !dbg !14694
  call void @llvm.dbg.value(metadata i32 %10, metadata !14692, metadata !DIExpression()), !dbg !14693
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !14695
  %12 = icmp ult i32 %11, %10, !dbg !14697
  br i1 %12, label %13, label %16, !dbg !14698

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !14699
  call void @llvm.dbg.value(metadata i32 %14, metadata !14691, metadata !DIExpression()), !dbg !14693
  %15 = icmp eq i32 %14, 0, !dbg !14701
  br i1 %15, label %16, label %30, !dbg !14703

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.258() #27, !dbg !14704
  br label %17, !dbg !14706

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.259() #27, !dbg !14707
  %19 = icmp eq i32 %18, 1, !dbg !14708
  br i1 %19, label %20, label %17, !dbg !14706, !llvm.loop !14709

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !14711
  tail call fastcc void @LL_RCC_SetAHBPrescaler.260(i32 noundef %21) #27, !dbg !14712
  tail call fastcc void @LL_RCC_SetSysClkSource.261() #27, !dbg !14713
  br label %22, !dbg !14714

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.262() #27, !dbg !14715
  %24 = icmp eq i32 %23, 12, !dbg !14716
  br i1 %24, label %25, label %22, !dbg !14714, !llvm.loop !14717

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14719
  %27 = load i32, i32* %26, align 4, !dbg !14719
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.263(i32 noundef %27) #27, !dbg !14720
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14721
  %29 = load i32, i32* %28, align 4, !dbg !14721
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.264(i32 noundef %29) #27, !dbg !14722
  br label %30, !dbg !14723

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !14724
  %33 = icmp ugt i32 %32, %10, !dbg !14726
  br i1 %33, label %34, label %36, !dbg !14727

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !14728
  call void @llvm.dbg.value(metadata i32 %35, metadata !14691, metadata !DIExpression()), !dbg !14693
  br label %36, !dbg !14730

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !14693
  call void @llvm.dbg.value(metadata i32 %37, metadata !14691, metadata !DIExpression()), !dbg !14693
  %38 = icmp eq i32 %37, 0, !dbg !14731
  br i1 %38, label %39, label %40, !dbg !14733

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !14734
  br label %40, !dbg !14736

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !14737
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.258() unnamed_addr #17 !dbg !14738 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14739
  %2 = or i32 %1, 16777216, !dbg !14739
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14739
  ret void, !dbg !14740
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.259() unnamed_addr #18 !dbg !14741 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14742
  %2 = lshr i32 %1, 25, !dbg !14743
  %3 = and i32 %2, 1, !dbg !14743
  ret i32 %3, !dbg !14744
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.260(i32 noundef %0) unnamed_addr #17 !dbg !14745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14747, metadata !DIExpression()), !dbg !14748
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14749
  %3 = and i32 %2, -241, !dbg !14749
  %4 = or i32 %3, %0, !dbg !14749
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14749
  ret void, !dbg !14750
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.261() unnamed_addr #17 !dbg !14751 {
  call void @llvm.dbg.value(metadata i32 3, metadata !14753, metadata !DIExpression()), !dbg !14754
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14755
  %2 = or i32 %1, 3, !dbg !14755
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14755
  ret void, !dbg !14756
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.262() unnamed_addr #18 !dbg !14757 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14758
  %2 = and i32 %1, 12, !dbg !14758
  ret i32 %2, !dbg !14759
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.263(i32 noundef %0) unnamed_addr #17 !dbg !14760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14762, metadata !DIExpression()), !dbg !14763
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14764
  %3 = and i32 %2, -1793, !dbg !14764
  %4 = or i32 %3, %0, !dbg !14764
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14764
  ret void, !dbg !14765
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.264(i32 noundef %0) unnamed_addr #17 !dbg !14766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14768, metadata !DIExpression()), !dbg !14769
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14770
  %3 = and i32 %2, -14337, !dbg !14770
  %4 = or i32 %3, %0, !dbg !14770
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14770
  ret void, !dbg !14771
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #17 !dbg !14772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14776, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata i32 %1, metadata !14777, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !14778, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !14779, metadata !DIExpression()), !dbg !14782
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !14783
  %6 = icmp eq i32 %5, 0, !dbg !14785
  br i1 %6, label %7, label %25, !dbg !14786

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #27, !dbg !14787
  call void @llvm.dbg.value(metadata i32 %8, metadata !14781, metadata !DIExpression()), !dbg !14782
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !14789
  %10 = icmp eq i32 %9, 1, !dbg !14791
  br i1 %10, label %19, label %11, !dbg !14792

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !14793
  br i1 %12, label %13, label %14, !dbg !14796

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !14797
  br label %15, !dbg !14799

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !14800
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !14802
  br label %16, !dbg !14803

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !14804
  %18 = icmp eq i32 %17, 1, !dbg !14805
  br i1 %18, label %19, label %16, !dbg !14803, !llvm.loop !14806

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !14808
  %21 = load i32, i32* %20, align 4, !dbg !14808
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !14809
  %23 = load i32, i32* %22, align 4, !dbg !14809
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.257(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #27, !dbg !14810
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !14811
  call void @llvm.dbg.value(metadata i32 %24, metadata !14780, metadata !DIExpression()), !dbg !14782
  br label %25, !dbg !14812

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !14813
  call void @llvm.dbg.value(metadata i32 %26, metadata !14780, metadata !DIExpression()), !dbg !14782
  ret i32 %26, !dbg !14814
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #18 !dbg !14815 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14816
  %2 = lshr i32 %1, 17, !dbg !14817
  %3 = and i32 %2, 1, !dbg !14817
  ret i32 %3, !dbg !14818
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #17 !dbg !14819 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14820
  %2 = or i32 %1, 262144, !dbg !14820
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14820
  ret void, !dbg !14821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #17 !dbg !14822 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14823
  %2 = and i32 %1, -262145, !dbg !14823
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14823
  ret void, !dbg !14824
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #17 !dbg !14825 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14826
  %2 = or i32 %1, 65536, !dbg !14826
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14826
  ret void, !dbg !14827
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !14828 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14831, metadata !DIExpression()), !dbg !14847
  call void @llvm.dbg.value(metadata i32 undef, metadata !14831, metadata !DIExpression()), !dbg !14847
  call void @llvm.dbg.value(metadata i32 undef, metadata !14831, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !14847
  ret void, !dbg !14848
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !14849 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14853, metadata !DIExpression()), !dbg !14855
  %2 = icmp eq i8* %0, null, !dbg !14856
  br i1 %2, label %29, label %3, !dbg !14858

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !14859
  %5 = icmp eq i8 %4, 0, !dbg !14860
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !14861
  br i1 %6, label %29, label %8, !dbg !14861

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14854, metadata !DIExpression()), !dbg !14855
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !14862

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !14854, metadata !DIExpression()), !dbg !14855
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !14864
  br i1 %10, label %11, label %15, !dbg !14869

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !14870
  %13 = load i8*, i8** %12, align 4, !dbg !14870
  %14 = icmp eq i8* %13, %0, !dbg !14871
  br i1 %14, label %29, label %15, !dbg !14872

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !14873
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !14854, metadata !DIExpression()), !dbg !14855
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14874
  br i1 %17, label %7, label %8, !dbg !14875, !llvm.loop !14876

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !14854, metadata !DIExpression()), !dbg !14855
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !14878
  br i1 %20, label %21, label %26, !dbg !14882

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !14883
  %23 = load i8*, i8** %22, align 4, !dbg !14883
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !14884
  %25 = icmp eq i32 %24, 0, !dbg !14885
  br i1 %25, label %29, label %26, !dbg !14886

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !14887
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !14854, metadata !DIExpression()), !dbg !14855
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14888
  br i1 %28, label %29, label %18, !dbg !14862, !llvm.loop !14889

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !14855
  ret %struct.device* %30, !dbg !14891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !14892 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14896, metadata !DIExpression()), !dbg !14897
  %2 = icmp eq %struct.device* %0, null, !dbg !14898
  br i1 %2, label %14, label %3, !dbg !14900

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14901
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !14901
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14902
  %7 = load i8, i8* %6, align 1, !dbg !14902
  %8 = and i8 %7, 1, !dbg !14902
  %9 = icmp eq i8 %8, 0, !dbg !14902
  br i1 %9, label %14, label %10, !dbg !14903

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !14904
  %12 = load i8, i8* %11, align 1, !dbg !14904
  %13 = icmp eq i8 %12, 0, !dbg !14905
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !14897
  ret i1 %15, !dbg !14906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14907 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !14912, metadata !DIExpression()), !dbg !14913
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !14914
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !14915
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14916 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14924, metadata !DIExpression()), !dbg !14929
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14925, metadata !DIExpression()), !dbg !14929
  call void @llvm.dbg.value(metadata i8* %2, metadata !14926, metadata !DIExpression()), !dbg !14929
  %5 = bitcast i32* %4 to i8*, !dbg !14930
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14930
  call void @llvm.dbg.value(metadata i32 0, metadata !14927, metadata !DIExpression()), !dbg !14929
  store i32 0, i32* %4, align 4, !dbg !14931
  call void @llvm.dbg.value(metadata i32* %4, metadata !14927, metadata !DIExpression(DW_OP_deref)), !dbg !14929
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !14932
  call void @llvm.dbg.value(metadata i16* %6, metadata !14928, metadata !DIExpression()), !dbg !14929
  %7 = load i32, i32* %4, align 4, !dbg !14933
  call void @llvm.dbg.value(metadata i32 %7, metadata !14927, metadata !DIExpression()), !dbg !14929
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !14934
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14935
  ret i32 %8, !dbg !14936
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !14937 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14941, metadata !DIExpression()), !dbg !14947
  call void @llvm.dbg.value(metadata i32* %1, metadata !14942, metadata !DIExpression()), !dbg !14947
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14948
  %4 = load i16*, i16** %3, align 4, !dbg !14948
  call void @llvm.dbg.value(metadata i16* %4, metadata !14943, metadata !DIExpression()), !dbg !14947
  %5 = icmp eq i16* %4, null, !dbg !14949
  br i1 %5, label %14, label %6, !dbg !14950

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14951
  call void @llvm.dbg.value(metadata i32 %7, metadata !14944, metadata !DIExpression()), !dbg !14951
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14952
  %9 = load i16, i16* %8, align 2, !dbg !14952
  %10 = add i16 %9, -32767, !dbg !14953
  %11 = icmp ult i16 %10, 2, !dbg !14953
  %12 = add i32 %7, 1, !dbg !14954
  call void @llvm.dbg.value(metadata i32 %12, metadata !14944, metadata !DIExpression()), !dbg !14951
  br i1 %11, label %13, label %6, !dbg !14953, !llvm.loop !14956

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14959
  br label %14, !dbg !14960

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14962 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14966, metadata !DIExpression()), !dbg !14977
  call void @llvm.dbg.value(metadata i32 %1, metadata !14967, metadata !DIExpression()), !dbg !14977
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14968, metadata !DIExpression()), !dbg !14977
  call void @llvm.dbg.value(metadata i8* %3, metadata !14969, metadata !DIExpression()), !dbg !14977
  call void @llvm.dbg.value(metadata i32 0, metadata !14970, metadata !DIExpression()), !dbg !14978
  %5 = icmp eq i32 %1, 0, !dbg !14979
  br i1 %5, label %16, label %8, !dbg !14980

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14970, metadata !DIExpression()), !dbg !14978
  %7 = icmp eq i32 %15, %1, !dbg !14979
  br i1 %7, label %16, label %8, !dbg !14980, !llvm.loop !14981

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14970, metadata !DIExpression()), !dbg !14978
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14983
  %11 = load i16, i16* %10, align 2, !dbg !14983
  call void @llvm.dbg.value(metadata i16 %11, metadata !14972, metadata !DIExpression()), !dbg !14984
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !14985
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14975, metadata !DIExpression()), !dbg !14984
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !14986
  call void @llvm.dbg.value(metadata i32 %13, metadata !14976, metadata !DIExpression()), !dbg !14984
  %14 = icmp slt i32 %13, 0, !dbg !14987
  %15 = add nuw i32 %9, 1, !dbg !14989
  call void @llvm.dbg.value(metadata i32 %15, metadata !14970, metadata !DIExpression()), !dbg !14978
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #6 !dbg !14991 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14995, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14996, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14997, metadata !DIExpression()), !dbg !14998
  %2 = sext i16 %0 to i32, !dbg !14999
  %3 = icmp slt i16 %0, 1, !dbg !15001
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !15002
  %6 = add nsw i32 %2, -1, !dbg !15002
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !15002
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !15002
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14996, metadata !DIExpression()), !dbg !14998
  ret %struct.device* %8, !dbg !15003
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15004 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15006, metadata !DIExpression()), !dbg !15011
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !15007, metadata !DIExpression()), !dbg !15011
  call void @llvm.dbg.value(metadata i8* %2, metadata !15008, metadata !DIExpression()), !dbg !15011
  %5 = bitcast i32* %4 to i8*, !dbg !15012
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15012
  call void @llvm.dbg.value(metadata i32 0, metadata !15009, metadata !DIExpression()), !dbg !15011
  store i32 0, i32* %4, align 4, !dbg !15013
  call void @llvm.dbg.value(metadata i32* %4, metadata !15009, metadata !DIExpression(DW_OP_deref)), !dbg !15011
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !15014
  call void @llvm.dbg.value(metadata i16* %6, metadata !15010, metadata !DIExpression()), !dbg !15011
  %7 = load i32, i32* %4, align 4, !dbg !15015
  call void @llvm.dbg.value(metadata i32 %7, metadata !15009, metadata !DIExpression()), !dbg !15011
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !15016
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15017
  ret i32 %8, !dbg !15018
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !15019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15021, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i32* %1, metadata !15022, metadata !DIExpression()), !dbg !15026
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !15027
  %4 = load i16*, i16** %3, align 4, !dbg !15027
  call void @llvm.dbg.value(metadata i16* %4, metadata !15023, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i32 0, metadata !15024, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i32 0, metadata !15025, metadata !DIExpression()), !dbg !15026
  %5 = icmp eq i16* %4, null, !dbg !15028
  br i1 %5, label %22, label %6, !dbg !15030

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !15024, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata i16* %8, metadata !15023, metadata !DIExpression()), !dbg !15026
  %9 = load i16, i16* %8, align 2, !dbg !15031
  %10 = icmp eq i16 %9, -32768, !dbg !15035
  call void @llvm.dbg.value(metadata i32 undef, metadata !15024, metadata !DIExpression()), !dbg !15026
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !15036
  call void @llvm.dbg.value(metadata i16* %11, metadata !15023, metadata !DIExpression()), !dbg !15026
  %12 = zext i1 %10 to i32, !dbg !15037
  %13 = add i32 %7, %12, !dbg !15037
  call void @llvm.dbg.value(metadata i32 %13, metadata !15024, metadata !DIExpression()), !dbg !15026
  %14 = icmp eq i32 %13, 2, !dbg !15038
  br i1 %14, label %15, label %6, !dbg !15039

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !15026
  call void @llvm.dbg.value(metadata i32 %16, metadata !15025, metadata !DIExpression()), !dbg !15026
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !15040
  %18 = load i16, i16* %17, align 2, !dbg !15040
  %19 = icmp eq i16 %18, 32767, !dbg !15041
  %20 = add i32 %16, 1, !dbg !15042
  call void @llvm.dbg.value(metadata i32 %20, metadata !15025, metadata !DIExpression()), !dbg !15026
  br i1 %19, label %21, label %15, !dbg !15044, !llvm.loop !15045

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !15047
  br label %22, !dbg !15048

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !15049
  call void @llvm.dbg.value(metadata i16* %23, metadata !15023, metadata !DIExpression()), !dbg !15026
  ret i16* %23, !dbg !15050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !15051 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15054
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !15055
  ret i32* %2, !dbg !15056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #6 !dbg !15057 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15207, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !15208, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15209, metadata !DIExpression()), !dbg !15210
  ret void, !dbg !15211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !15212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15216, metadata !DIExpression()), !dbg !15218
  call void @llvm.dbg.value(metadata i32 %1, metadata !15217, metadata !DIExpression()), !dbg !15218
  ret void, !dbg !15219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !15220 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15224, metadata !DIExpression()), !dbg !15226
  call void @llvm.dbg.value(metadata i32 %1, metadata !15225, metadata !DIExpression()), !dbg !15226
  ret void, !dbg !15227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !15228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15232, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i8* %1, metadata !15233, metadata !DIExpression()), !dbg !15234
  ret i32 -134, !dbg !15235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !15236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15240, metadata !DIExpression()), !dbg !15242
  call void @llvm.dbg.value(metadata i8* %1, metadata !15241, metadata !DIExpression()), !dbg !15242
  ret i32 -134, !dbg !15243
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !15244 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15247, metadata !DIExpression()), !dbg !15248
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15249, !srcloc !15255
  call void @llvm.dbg.value(metadata i32 undef, metadata !15252, metadata !DIExpression()) #25, !dbg !15256
  call void @llvm.dbg.value(metadata i32 undef, metadata !15253, metadata !DIExpression()) #25, !dbg !15256
  br label %3, !dbg !15257

3:                                                ; preds = %3, %1
  br label %3, !dbg !15258, !llvm.loop !15261
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !15264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15268, metadata !DIExpression()), !dbg !15270
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15269, metadata !DIExpression()), !dbg !15270
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.269, i32 0, i32 0), i32 noundef 69) #26, !dbg !15271
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !15276
  unreachable, !dbg !15276
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !15277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15279, metadata !DIExpression()), !dbg !15280
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !15281
  unreachable, !dbg !15281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !15282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15284, metadata !DIExpression()), !dbg !15288
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15285, metadata !DIExpression()), !dbg !15288
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15289, !srcloc !15255
  call void @llvm.dbg.value(metadata i32 undef, metadata !15252, metadata !DIExpression()) #25, !dbg !15291
  call void @llvm.dbg.value(metadata i32 undef, metadata !15253, metadata !DIExpression()) #25, !dbg !15291
  call void @llvm.dbg.value(metadata i32 undef, metadata !15286, metadata !DIExpression()), !dbg !15288
  %4 = tail call fastcc %struct.k_thread* @k_current_get.272() #28, !dbg !15292
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15287, metadata !DIExpression()), !dbg !15288
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #27, !dbg !15293
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.273, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #26, !dbg !15293
  %6 = icmp eq %struct.__esf* %1, null, !dbg !15298
  br i1 %6, label %13, label %7, !dbg !15300

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15301, metadata !DIExpression()), !dbg !15306
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !15308
  %9 = load i32, i32* %8, align 4, !dbg !15308
  %10 = and i32 %9, 511, !dbg !15309
  %11 = icmp eq i32 %10, 0, !dbg !15310
  br i1 %11, label %13, label %12, !dbg !15311

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.274, i32 0, i32 0), i32 noundef 69) #26, !dbg !15312
  br label %13, !dbg !15318

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #27, !dbg !15319
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.275, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #26, !dbg !15319
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !15324
  %15 = icmp eq i32 %0, 4, !dbg !15325
  br i1 %15, label %16, label %17, !dbg !15330

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.278, i32 0, i32 0), i32 noundef 148) #26, !dbg !15331
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.279, i32 0, i32 0)) #26, !dbg !15331
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.278, i32 0, i32 0), i32 noundef 148) #26, !dbg !15331
  unreachable, !dbg !15331

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !15289
  call void @llvm.dbg.value(metadata i32 %18, metadata !15252, metadata !DIExpression()) #25, !dbg !15291
  call void @llvm.dbg.value(metadata i32 %18, metadata !15286, metadata !DIExpression()), !dbg !15288
  call void @llvm.dbg.value(metadata i32 undef, metadata !15333, metadata !DIExpression()) #25, !dbg !15336
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !15338, !srcloc !15339
  tail call fastcc void @k_thread_abort.280(%struct.k_thread* noundef %4) #27, !dbg !15340
  ret void, !dbg !15343
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.272() unnamed_addr #12 !dbg !15344 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.288() #28, !dbg !15348
  ret %struct.k_thread* %1, !dbg !15349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #6 !dbg !15350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15354, metadata !DIExpression()), !dbg !15355
  %2 = icmp ult i32 %0, 5, !dbg !15356
  br i1 %2, label %3, label %6, !dbg !15356

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !15356
  %5 = load i8*, i8** %4, align 4, !dbg !15356
  br label %6, !dbg !15356

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.282, i32 0, i32 0), %1 ], !dbg !15357
  ret i8* %7, !dbg !15359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15360 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15364, metadata !DIExpression()), !dbg !15366
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !15367
  br i1 %2, label %9, label %3, !dbg !15368

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #26, !dbg !15369
  call void @llvm.dbg.value(metadata i8* %4, metadata !15365, metadata !DIExpression()), !dbg !15366
  %5 = icmp eq i8* %4, null, !dbg !15370
  br i1 %5, label %9, label %6, !dbg !15372

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !15373
  %8 = icmp eq i8 %7, 0, !dbg !15374
  br i1 %8, label %9, label %10, !dbg !15375

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.281, i32 0, i32 0), metadata !15365, metadata !DIExpression()), !dbg !15366
  br label %10, !dbg !15376

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.281, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !15366
  call void @llvm.dbg.value(metadata i8* %11, metadata !15365, metadata !DIExpression()), !dbg !15366
  ret i8* %11, !dbg !15378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.280(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15379 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15383, metadata !DIExpression()), !dbg !15384
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15385, !srcloc !15387
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !15388
  ret void, !dbg !15389
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.288() unnamed_addr #12 !dbg !15390 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15391, !srcloc !15393
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !15394
  ret %struct.k_thread* %1, !dbg !15395
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15396 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15400, metadata !DIExpression()), !dbg !15403
  call void @llvm.dbg.value(metadata i32 %1, metadata !15401, metadata !DIExpression()), !dbg !15403
  call void @llvm.dbg.value(metadata i32 %2, metadata !15402, metadata !DIExpression()), !dbg !15403
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !15404
  ret void, !dbg !15405
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15406 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15410, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i8* %1, metadata !15411, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i32 %2, metadata !15412, metadata !DIExpression()), !dbg !15413
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !15414
  ret void, !dbg !15415
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !15416 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !15417
  ret void, !dbg !15418
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !15419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15421, metadata !DIExpression()), !dbg !15422
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !15423
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !15424
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !15425
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !15426
  %4 = trunc i32 %0 to i8, !dbg !15427
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !15428
  store i8 %4, i8* %5, align 4, !dbg !15429
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !15430
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !15431
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !15432
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !15433
  store i8* %8, i8** %9, align 4, !dbg !15434
  ret void, !dbg !15435
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !15436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15438, metadata !DIExpression()), !dbg !15444
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !15445
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15439, metadata !DIExpression()), !dbg !15444
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !15446
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !15440, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i8* null, metadata !15443, metadata !DIExpression()), !dbg !15444
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !15447
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !15448
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #26, !dbg !15449
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !15450
  ret void, !dbg !15451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !15452 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15456, metadata !DIExpression()), !dbg !15457
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15458
  ret i8* %2, !dbg !15459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15460 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15465, metadata !DIExpression()), !dbg !15466
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15467
  %3 = load i8, i8* %2, align 1, !dbg !15468
  %4 = and i8 %3, -5, !dbg !15468
  store i8 %4, i8* %2, align 1, !dbg !15468
  ret void, !dbg !15469
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #5 !dbg !15470 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !15473
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !15474
  %3 = ptrtoint i8* %2 to i32, !dbg !15483
  %4 = add i32 %3, 2048, !dbg !15484
  call void @llvm.dbg.value(metadata i32 %4, metadata !15478, metadata !DIExpression()) #25, !dbg !15485
  call void @llvm.dbg.value(metadata i32 %4, metadata !15486, metadata !DIExpression()) #25, !dbg !15489
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !15491, !srcloc !15492
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15493
  %6 = or i32 %5, 512, !dbg !15493
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15493
  tail call fastcc void @__NVIC_SetPriority.297(i32 noundef -2, i32 noundef 255) #26, !dbg !15494
  tail call fastcc void @__NVIC_SetPriority.297(i32 noundef -5, i32 noundef 0) #26, !dbg !15497
  tail call fastcc void @__NVIC_SetPriority.297(i32 noundef -12, i32 noundef 0) #26, !dbg !15498
  tail call fastcc void @__NVIC_SetPriority.297(i32 noundef -11, i32 noundef 0) #26, !dbg !15499
  tail call fastcc void @__NVIC_SetPriority.297(i32 noundef -10, i32 noundef 0) #26, !dbg !15500
  tail call fastcc void @__NVIC_SetPriority.297(i32 noundef -4, i32 noundef 0) #26, !dbg !15501
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15502
  %8 = or i32 %7, 458752, !dbg !15502
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15502
  tail call void @z_arm_fault_init() #26, !dbg !15503
  tail call void @z_arm_cpu_idle_init() #26, !dbg !15504
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !15505
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !15508
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !15509
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !15510
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !15511
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !15511
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !15472, metadata !DIExpression()), !dbg !15512
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !15513
  call void @z_device_state_init() #26, !dbg !15514
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !15515
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !15516
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !15517
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !15518
  unreachable, !dbg !15518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2931, metadata !DIExpression()), !dbg !15519
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !15520
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !15520
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2932, metadata !DIExpression()), !dbg !15519
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2932, metadata !DIExpression()), !dbg !15519
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !15521
  br i1 %7, label %8, label %35, !dbg !15522

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2932, metadata !DIExpression()), !dbg !15519
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !15523
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !15523
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2942, metadata !DIExpression()), !dbg !15524
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !15525
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !15525
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !15526
  call void @llvm.dbg.value(metadata i32 %14, metadata !2946, metadata !DIExpression()), !dbg !15524
  %15 = icmp eq %struct.device* %11, null, !dbg !15527
  br i1 %15, label %32, label %16, !dbg !15529

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !15530
  br i1 %17, label %26, label %18, !dbg !15533

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !15534
  call void @llvm.dbg.value(metadata i32 %19, metadata !2946, metadata !DIExpression()), !dbg !15524
  %20 = icmp ult i32 %19, 255, !dbg !15536
  %21 = select i1 %20, i32 %19, i32 255, !dbg !15536
  call void @llvm.dbg.value(metadata i32 %21, metadata !2946, metadata !DIExpression()), !dbg !15524
  %22 = trunc i32 %21 to i8, !dbg !15537
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15538
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !15538
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !15539
  store i8 %22, i8* %25, align 1, !dbg !15540
  br label %26, !dbg !15541

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15542
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !15542
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !15543
  %30 = load i8, i8* %29, align 1, !dbg !15544
  %31 = or i8 %30, 1, !dbg !15544
  store i8 %31, i8* %29, align 1, !dbg !15544
  br label %32, !dbg !15545

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !15546
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2932, metadata !DIExpression()), !dbg !15519
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !15521
  br i1 %34, label %8, label %35, !dbg !15522, !llvm.loop !15547

35:                                               ; preds = %32, %1
  ret void, !dbg !15549
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.297(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !15550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15552, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata i32 %1, metadata !15553, metadata !DIExpression()), !dbg !15554
  %3 = trunc i32 %1 to i8, !dbg !15555
  %4 = shl i8 %3, 4, !dbg !15555
  %5 = and i32 %0, 15, !dbg !15558
  %6 = add nsw i32 %5, -4, !dbg !15559
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !15560
  store volatile i8 %4, i8* %7, align 1, !dbg !15561
  ret void, !dbg !15562
}

; Function Attrs: optsize
declare !dbg !15563 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !15564 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15567, metadata !DIExpression()), !dbg !15568
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15569
  store i8 1, i8* %2, align 1, !dbg !15570
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15571
  store i8 1, i8* %3, align 4, !dbg !15572
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15573
  store i32 0, i32* %4, align 4, !dbg !15574
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15575
  store i32 0, i32* %5, align 4, !dbg !15576
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15577
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !15578
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15579
  ret void, !dbg !15580
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !15581 {
  tail call void @z_sched_init() #26, !dbg !15586
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15587
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.298, i32 0, i32 0)) #26, !dbg !15588
  call void @llvm.dbg.value(metadata i8* %1, metadata !15585, metadata !DIExpression()), !dbg !15589
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !15590
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !15591
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !15592
  ret i8* %1, !dbg !15593
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #5 !dbg !15594 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15598, metadata !DIExpression()), !dbg !15599
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !15600
  unreachable, !dbg !15601
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !15602 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15604, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.value(metadata i8* %1, metadata !15605, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.value(metadata i8* %2, metadata !15606, metadata !DIExpression()), !dbg !15607
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !15608
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !15609
  tail call void @boot_banner() #26, !dbg !15610
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !15611
  tail call void @z_init_static_threads() #26, !dbg !15612
  tail call void @main() #26, !dbg !15613
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15614
  %5 = and i8 %4, -2, !dbg !15614
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15614
  ret void, !dbg !15615
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define internal i32 @init_mem_slab_module(%struct.device* nocapture noundef readnone %0) #1 !dbg !15616 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15618, metadata !DIExpression()), !dbg !15641
  call void @llvm.dbg.value(metadata i32 0, metadata !15619, metadata !DIExpression()), !dbg !15641
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_start, i32 0, i32 0), metadata !15620, metadata !DIExpression()), !dbg !15642
  br i1 icmp ugt (%struct.k_mem_slab* getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_start, i32 0, i32 0), %struct.k_mem_slab* getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_end, i32 0, i32 0)), label %4, label %5, !dbg !15643

2:                                                ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %11, metadata !15620, metadata !DIExpression()), !dbg !15642
  call void @llvm.dbg.value(metadata i32 0, metadata !15619, metadata !DIExpression()), !dbg !15641
  %3 = icmp ugt %struct.k_mem_slab* %11, getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_end, i32 0, i32 0), !dbg !15647
  br i1 %3, label %4, label %5, !dbg !15643, !llvm.loop !15649

4:                                                ; preds = %2, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.302, i32 0, i32 0), i32 noundef 61) #26, !dbg !15652
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.303, i32 0, i32 0)) #26, !dbg !15652
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.302, i32 0, i32 0), i32 noundef 61) #26, !dbg !15652
  unreachable, !dbg !15652

5:                                                ; preds = %1, %2
  %6 = phi %struct.k_mem_slab* [ %11, %2 ], [ getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %6, metadata !15620, metadata !DIExpression()), !dbg !15642
  %7 = icmp ult %struct.k_mem_slab* %6, getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_end, i32 0, i32 0), !dbg !15654
  br i1 %7, label %8, label %12, !dbg !15650

8:                                                ; preds = %5
  %9 = tail call fastcc i32 @create_free_list(%struct.k_mem_slab* noundef %6) #27, !dbg !15655
  call void @llvm.dbg.value(metadata i32 %9, metadata !15619, metadata !DIExpression()), !dbg !15641
  %10 = icmp slt i32 %9, 0, !dbg !15657
  %11 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %6, i32 1, !dbg !15659
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %11, metadata !15620, metadata !DIExpression()), !dbg !15642
  br i1 %10, label %12, label %2, !dbg !15660

12:                                               ; preds = %8, %5
  %13 = phi i32 [ 0, %5 ], [ %9, %8 ], !dbg !15641
  call void @llvm.dbg.value(metadata i32 %13, metadata !15619, metadata !DIExpression()), !dbg !15641
  ret i32 %13, !dbg !15661
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @create_free_list(%struct.k_mem_slab* nocapture noundef %0) unnamed_addr #15 !dbg !15662 {
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !15666, metadata !DIExpression()), !dbg !15669
  %2 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 3, !dbg !15670
  %3 = load i32, i32* %2, align 4, !dbg !15670
  %4 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 4, !dbg !15670
  %5 = load i8*, i8** %4, align 4, !dbg !15670
  %6 = ptrtoint i8* %5 to i32, !dbg !15670
  %7 = or i32 %3, %6, !dbg !15670
  %8 = and i32 %7, 3, !dbg !15670
  %9 = icmp eq i32 %8, 0, !dbg !15670
  br i1 %9, label %10, label %25, !dbg !15672

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 5, !dbg !15673
  store i8* null, i8** %11, align 4, !dbg !15674
  call void @llvm.dbg.value(metadata i8* %5, metadata !15668, metadata !DIExpression()), !dbg !15669
  call void @llvm.dbg.value(metadata i32 0, metadata !15667, metadata !DIExpression()), !dbg !15669
  %12 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 2
  call void @llvm.dbg.value(metadata i8* %5, metadata !15668, metadata !DIExpression()), !dbg !15669
  call void @llvm.dbg.value(metadata i32 0, metadata !15667, metadata !DIExpression()), !dbg !15669
  %13 = load i32, i32* %12, align 4, !dbg !15675
  %14 = icmp eq i32 %13, 0, !dbg !15678
  br i1 %14, label %25, label %15, !dbg !15679

15:                                               ; preds = %10, %15
  %16 = phi i8* [ %17, %15 ], [ null, %10 ], !dbg !15680
  %17 = phi i8* [ %21, %15 ], [ %5, %10 ]
  %18 = phi i32 [ %22, %15 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !15668, metadata !DIExpression()), !dbg !15669
  call void @llvm.dbg.value(metadata i32 %18, metadata !15667, metadata !DIExpression()), !dbg !15669
  %19 = bitcast i8* %17 to i8**, !dbg !15682
  store i8* %16, i8** %19, align 4, !dbg !15683
  store i8* %17, i8** %11, align 4, !dbg !15684
  %20 = load i32, i32* %2, align 4, !dbg !15685
  %21 = getelementptr inbounds i8, i8* %17, i32 %20, !dbg !15686
  call void @llvm.dbg.value(metadata i8* %21, metadata !15668, metadata !DIExpression()), !dbg !15669
  %22 = add nuw i32 %18, 1, !dbg !15687
  call void @llvm.dbg.value(metadata i32 %22, metadata !15667, metadata !DIExpression()), !dbg !15669
  %23 = load i32, i32* %12, align 4, !dbg !15675
  %24 = icmp ult i32 %22, %23, !dbg !15678
  br i1 %24, label %15, label %25, !dbg !15679, !llvm.loop !15688

25:                                               ; preds = %15, %10, %1
  %26 = phi i32 [ -22, %1 ], [ 0, %10 ], [ 0, %15 ], !dbg !15669
  ret i32 %26, !dbg !15690
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @k_mem_slab_init(%struct.k_mem_slab* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !15691 {
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !15695, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.value(metadata i8* %1, metadata !15696, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.value(metadata i32 %2, metadata !15697, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.value(metadata i32 %3, metadata !15698, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.value(metadata i32 0, metadata !15699, metadata !DIExpression()), !dbg !15701
  %5 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 2, !dbg !15702
  store i32 %3, i32* %5, align 4, !dbg !15703
  %6 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 3, !dbg !15704
  store i32 %2, i32* %6, align 4, !dbg !15705
  %7 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 4, !dbg !15706
  store i8* %1, i8** %7, align 4, !dbg !15707
  %8 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 6, !dbg !15708
  store i32 0, i32* %8, align 4, !dbg !15709
  %9 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 1, i32 0, !dbg !15710
  store i32 0, i32* %9, align 4, !dbg !15710
  %10 = tail call fastcc i32 @create_free_list(%struct.k_mem_slab* noundef %0) #27, !dbg !15711
  call void @llvm.dbg.value(metadata i32 %10, metadata !15699, metadata !DIExpression()), !dbg !15701
  %11 = icmp slt i32 %10, 0, !dbg !15712
  br i1 %11, label %14, label %12, !dbg !15714

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 0, !dbg !15715
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef %13) #27, !dbg !15716
  br label %14, !dbg !15717

14:                                               ; preds = %12, %4
  call void @llvm.dbg.label(metadata !15700), !dbg !15718
  ret i32 %10, !dbg !15719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !15720 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15726, metadata !DIExpression()), !dbg !15727
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15728
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !15729
  ret void, !dbg !15730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15731 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15736, metadata !DIExpression()), !dbg !15737
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15738
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15739
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15740
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15741
  ret void, !dbg !15742
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_mem_slab_alloc(%struct.k_mem_slab* noundef %0, i8** nocapture noundef writeonly %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15743 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15753, metadata !DIExpression()), !dbg !15760
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !15751, metadata !DIExpression()), !dbg !15760
  call void @llvm.dbg.value(metadata i8** %1, metadata !15752, metadata !DIExpression()), !dbg !15760
  %4 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 1, !dbg !15761
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !15762, metadata !DIExpression()) #25, !dbg !15769
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15771, !srcloc !15777
  call void @llvm.dbg.value(metadata i32 undef, metadata !15774, metadata !DIExpression()) #25, !dbg !15778
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()) #25, !dbg !15778
  call void @llvm.dbg.value(metadata i32 undef, metadata !15768, metadata !DIExpression()) #25, !dbg !15769
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %4) #26, !dbg !15779
  br i1 %6, label %8, label %7, !dbg !15782

7:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.307, i32 0, i32 0), i32 noundef 148) #26, !dbg !15783
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.308, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %4) #26, !dbg !15783
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.307, i32 0, i32 0), i32 noundef 148) #26, !dbg !15783
  unreachable, !dbg !15783

8:                                                ; preds = %3
  %9 = extractvalue { i32, i32 } %5, 0, !dbg !15771
  call void @llvm.dbg.value(metadata i32 %9, metadata !15774, metadata !DIExpression()) #25, !dbg !15778
  call void @llvm.dbg.value(metadata i32 %9, metadata !15768, metadata !DIExpression()) #25, !dbg !15769
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %4) #26, !dbg !15785
  call void @llvm.dbg.value(metadata i32 %9, metadata !15754, metadata !DIExpression()), !dbg !15760
  %10 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 5, !dbg !15786
  %11 = load i8*, i8** %10, align 4, !dbg !15786
  %12 = icmp eq i8* %11, null, !dbg !15788
  br i1 %12, label %20, label %13, !dbg !15789

13:                                               ; preds = %8
  store i8* %11, i8** %1, align 4, !dbg !15790
  %14 = bitcast i8** %10 to i8***, !dbg !15792
  %15 = load i8**, i8*** %14, align 4, !dbg !15792
  %16 = load i8*, i8** %15, align 4, !dbg !15793
  store i8* %16, i8** %10, align 4, !dbg !15794
  %17 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 6, !dbg !15795
  %18 = load i32, i32* %17, align 4, !dbg !15796
  %19 = add i32 %18, 1, !dbg !15796
  store i32 %19, i32* %17, align 4, !dbg !15796
  call void @llvm.dbg.value(metadata i32 0, metadata !15759, metadata !DIExpression()), !dbg !15760
  br label %33, !dbg !15797

20:                                               ; preds = %8
  %21 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %21, metadata !15753, metadata !DIExpression()), !dbg !15760
  %22 = icmp eq i64 %21, 0, !dbg !15798
  br i1 %22, label %23, label %24, !dbg !15800

23:                                               ; preds = %20
  store i8* null, i8** %1, align 4, !dbg !15801
  call void @llvm.dbg.value(metadata i32 -12, metadata !15759, metadata !DIExpression()), !dbg !15760
  br label %33

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 0, !dbg !15803
  %26 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !15805
  %27 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %26, %struct._wait_q_t* noundef %25, [1 x i64] %2) #26, !dbg !15805
  call void @llvm.dbg.value(metadata i32 %27, metadata !15759, metadata !DIExpression()), !dbg !15760
  %28 = icmp eq i32 %27, 0, !dbg !15806
  br i1 %28, label %29, label %38, !dbg !15808

29:                                               ; preds = %24
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15809
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %30, i32 0, i32 0, i32 6, !dbg !15811
  %32 = load i8*, i8** %31, align 4, !dbg !15811
  store i8* %32, i8** %1, align 4, !dbg !15812
  br label %38, !dbg !15813

33:                                               ; preds = %13, %23
  %34 = phi i32 [ 0, %13 ], [ -12, %23 ], !dbg !15814
  call void @llvm.dbg.value(metadata i32 %34, metadata !15759, metadata !DIExpression()), !dbg !15760
  call void @llvm.dbg.value(metadata i32 undef, metadata !15815, metadata !DIExpression()) #25, !dbg !15821
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !15820, metadata !DIExpression()) #25, !dbg !15821
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %4) #26, !dbg !15823
  br i1 %35, label %37, label %36, !dbg !15826

36:                                               ; preds = %33
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.307, i32 0, i32 0), i32 noundef 194) #26, !dbg !15827
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.310, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %4) #26, !dbg !15827
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.307, i32 0, i32 0), i32 noundef 194) #26, !dbg !15827
  unreachable, !dbg !15827

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %9, metadata !15815, metadata !DIExpression()) #25, !dbg !15821
  call void @llvm.dbg.value(metadata i32 %9, metadata !15829, metadata !DIExpression()) #25, !dbg !15832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15834, !srcloc !15835
  br label %38, !dbg !15836

38:                                               ; preds = %29, %24, %37
  %39 = phi i32 [ %34, %37 ], [ %27, %24 ], [ 0, %29 ], !dbg !15760
  ret i32 %39, !dbg !15837
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_mem_slab_free(%struct.k_mem_slab* noundef %0, i8** nocapture noundef readonly %1) local_unnamed_addr #1 !dbg !15838 {
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !15842, metadata !DIExpression()), !dbg !15927
  call void @llvm.dbg.value(metadata i8** %1, metadata !15843, metadata !DIExpression()), !dbg !15927
  %3 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 1, !dbg !15928
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15762, metadata !DIExpression()) #25, !dbg !15929
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15931, !srcloc !15777
  call void @llvm.dbg.value(metadata i32 undef, metadata !15774, metadata !DIExpression()) #25, !dbg !15933
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()) #25, !dbg !15933
  call void @llvm.dbg.value(metadata i32 undef, metadata !15768, metadata !DIExpression()) #25, !dbg !15929
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !15934
  br i1 %5, label %7, label %6, !dbg !15935

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.307, i32 0, i32 0), i32 noundef 148) #26, !dbg !15936
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.308, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !15936
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.307, i32 0, i32 0), i32 noundef 148) #26, !dbg !15936
  unreachable, !dbg !15936

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !15931
  call void @llvm.dbg.value(metadata i32 %8, metadata !15774, metadata !DIExpression()) #25, !dbg !15933
  call void @llvm.dbg.value(metadata i32 %8, metadata !15768, metadata !DIExpression()) #25, !dbg !15929
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !15937
  call void @llvm.dbg.value(metadata i32 %8, metadata !15844, metadata !DIExpression()), !dbg !15927
  %9 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 5, !dbg !15938
  %10 = load i8*, i8** %9, align 4, !dbg !15938
  %11 = icmp eq i8* %10, null, !dbg !15939
  br i1 %11, label %12, label %23, !dbg !15940

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 0, !dbg !15941
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #26, !dbg !15942
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15845, metadata !DIExpression()), !dbg !15943
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !15944
  br i1 %15, label %16, label %18, !dbg !15946

16:                                               ; preds = %12
  %17 = load i8*, i8** %9, align 4, !dbg !15947
  br label %23, !dbg !15946

18:                                               ; preds = %12
  %19 = load i8*, i8** %1, align 4, !dbg !15948
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15950, metadata !DIExpression()), !dbg !15958
  call void @llvm.dbg.value(metadata i32 0, metadata !15956, metadata !DIExpression()), !dbg !15958
  call void @llvm.dbg.value(metadata i8* %19, metadata !15957, metadata !DIExpression()), !dbg !15958
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15960, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.value(metadata i32 0, metadata !15965, metadata !DIExpression()), !dbg !15966
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !15968
  store i32 0, i32* %20, align 4, !dbg !15969
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !15970
  store i8* %19, i8** %21, align 4, !dbg !15971
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #26, !dbg !15972
  %22 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !15973
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %22) #26, !dbg !15973
  br label %34

23:                                               ; preds = %16, %7
  %24 = phi i8* [ %17, %16 ], [ %10, %7 ], !dbg !15947
  %25 = bitcast i8** %1 to i8***, !dbg !15974
  %26 = load i8**, i8*** %25, align 4, !dbg !15974
  store i8* %24, i8** %26, align 4, !dbg !15975
  %27 = load i8*, i8** %1, align 4, !dbg !15976
  store i8* %27, i8** %9, align 4, !dbg !15977
  %28 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 6, !dbg !15978
  %29 = load i32, i32* %28, align 4, !dbg !15979
  %30 = add i32 %29, -1, !dbg !15979
  store i32 %30, i32* %28, align 4, !dbg !15979
  call void @llvm.dbg.value(metadata i32 undef, metadata !15815, metadata !DIExpression()) #25, !dbg !15980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15820, metadata !DIExpression()) #25, !dbg !15980
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !15982
  br i1 %31, label %33, label %32, !dbg !15983

32:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.307, i32 0, i32 0), i32 noundef 194) #26, !dbg !15984
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.310, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !15984
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.307, i32 0, i32 0), i32 noundef 194) #26, !dbg !15984
  unreachable, !dbg !15984

33:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 %8, metadata !15815, metadata !DIExpression()) #25, !dbg !15980
  call void @llvm.dbg.value(metadata i32 %8, metadata !15829, metadata !DIExpression()) #25, !dbg !15985
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15987, !srcloc !15835
  br label %34, !dbg !15988

34:                                               ; preds = %18, %33
  ret void, !dbg !15988
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_mem_slab_runtime_stats_get(%struct.k_mem_slab* noundef %0, %struct._thread_stack_info* noundef writeonly %1) local_unnamed_addr #1 !dbg !15989 {
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !16000, metadata !DIExpression()), !dbg !16003
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !16001, metadata !DIExpression()), !dbg !16003
  %3 = icmp eq %struct.k_mem_slab* %0, null, !dbg !16004
  %4 = icmp eq %struct._thread_stack_info* %1, null
  %5 = or i1 %3, %4, !dbg !16006
  br i1 %5, label %30, label %6, !dbg !16006

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 1, !dbg !16007
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %7, metadata !15762, metadata !DIExpression()) #25, !dbg !16008
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16010, !srcloc !15777
  call void @llvm.dbg.value(metadata i32 undef, metadata !15774, metadata !DIExpression()) #25, !dbg !16012
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()) #25, !dbg !16012
  call void @llvm.dbg.value(metadata i32 undef, metadata !15768, metadata !DIExpression()) #25, !dbg !16008
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %7) #26, !dbg !16013
  br i1 %9, label %11, label %10, !dbg !16014

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.307, i32 0, i32 0), i32 noundef 148) #26, !dbg !16015
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.308, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %7) #26, !dbg !16015
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.307, i32 0, i32 0), i32 noundef 148) #26, !dbg !16015
  unreachable, !dbg !16015

11:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !15774, metadata !DIExpression()) #25, !dbg !16012
  call void @llvm.dbg.value(metadata i32 undef, metadata !15768, metadata !DIExpression()) #25, !dbg !16008
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %7) #26, !dbg !16016
  call void @llvm.dbg.value(metadata i32 undef, metadata !16002, metadata !DIExpression()), !dbg !16003
  %12 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 6, !dbg !16017
  %13 = load i32, i32* %12, align 4, !dbg !16017
  %14 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 3, !dbg !16018
  %15 = load i32, i32* %14, align 4, !dbg !16018
  %16 = mul i32 %15, %13, !dbg !16019
  %17 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !16020
  store i32 %16, i32* %17, align 4, !dbg !16021
  %18 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 2, !dbg !16022
  %19 = load i32, i32* %18, align 4, !dbg !16022
  %20 = load i32, i32* %12, align 4, !dbg !16023
  %21 = sub i32 %19, %20, !dbg !16024
  %22 = load i32, i32* %14, align 4, !dbg !16025
  %23 = mul i32 %21, %22, !dbg !16026
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !16027
  store i32 %23, i32* %24, align 4, !dbg !16028
  %25 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !16029
  store i32 0, i32* %25, align 4, !dbg !16030
  call void @llvm.dbg.value(metadata i32 undef, metadata !15815, metadata !DIExpression()) #25, !dbg !16031
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %7, metadata !15820, metadata !DIExpression()) #25, !dbg !16031
  %26 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %7) #26, !dbg !16033
  br i1 %26, label %28, label %27, !dbg !16034

27:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.307, i32 0, i32 0), i32 noundef 194) #26, !dbg !16035
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.310, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %7) #26, !dbg !16035
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.307, i32 0, i32 0), i32 noundef 194) #26, !dbg !16035
  unreachable, !dbg !16035

28:                                               ; preds = %11
  %29 = extractvalue { i32, i32 } %8, 0, !dbg !16010
  call void @llvm.dbg.value(metadata i32 %29, metadata !15774, metadata !DIExpression()) #25, !dbg !16012
  call void @llvm.dbg.value(metadata i32 %29, metadata !15768, metadata !DIExpression()) #25, !dbg !16008
  call void @llvm.dbg.value(metadata i32 %29, metadata !16002, metadata !DIExpression()), !dbg !16003
  call void @llvm.dbg.value(metadata i32 undef, metadata !15815, metadata !DIExpression()) #25, !dbg !16031
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #25, !dbg !16036
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #25, !dbg !16038, !srcloc !15835
  br label %30

30:                                               ; preds = %2, %28
  %31 = phi i32 [ 0, %28 ], [ -22, %2 ], !dbg !16003
  ret i32 %31, !dbg !16039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !16040 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !16050, metadata !DIExpression()), !dbg !16052
  call void @llvm.dbg.value(metadata i8* %1, metadata !16051, metadata !DIExpression()), !dbg !16052
  ret void, !dbg !16053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !16054 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !16056, metadata !DIExpression()), !dbg !16058
  call void @llvm.dbg.value(metadata i8* %1, metadata !16057, metadata !DIExpression()), !dbg !16058
  ret void, !dbg !16059
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !16060 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16061, !srcloc !16068
  call void @llvm.dbg.value(metadata i32 %1, metadata !16064, metadata !DIExpression()) #25, !dbg !16069
  %2 = icmp ne i32 %1, 0, !dbg !16070
  ret i1 %2, !dbg !16071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !16072 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16073
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !16074
  %3 = load i8, i8* %2, align 4, !dbg !16075
  %4 = or i8 %3, 1, !dbg !16075
  store i8 %4, i8* %2, align 4, !dbg !16075
  ret void, !dbg !16076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !16077 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16078
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !16079
  %3 = load i8, i8* %2, align 4, !dbg !16080
  %4 = and i8 %3, -2, !dbg !16080
  store i8 %4, i8* %2, align 4, !dbg !16080
  ret void, !dbg !16081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !16082 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16083
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !16084
  %3 = load i8, i8* %2, align 4, !dbg !16084
  %4 = and i8 %3, 1, !dbg !16085
  %5 = icmp ne i8 %4, 0, !dbg !16086
  ret i1 %5, !dbg !16087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !16088 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16092, metadata !DIExpression()), !dbg !16094
  call void @llvm.dbg.value(metadata i8* %1, metadata !16093, metadata !DIExpression()), !dbg !16094
  ret i32 -88, !dbg !16095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !16096 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16100, metadata !DIExpression()), !dbg !16101
  ret i8* null, !dbg !16102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #6 !dbg !16103 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16107, metadata !DIExpression()), !dbg !16110
  call void @llvm.dbg.value(metadata i8* %1, metadata !16108, metadata !DIExpression()), !dbg !16110
  call void @llvm.dbg.value(metadata i32 %2, metadata !16109, metadata !DIExpression()), !dbg !16110
  ret i32 -88, !dbg !16111
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2989 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3105, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata i8* %1, metadata !3106, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata i32 %2, metadata !3107, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata i32 0, metadata !3108, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata i8 undef, metadata !3110, metadata !DIExpression()), !dbg !16112
  %4 = icmp eq i8* %1, null, !dbg !16113
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !16115
  br i1 %6, label %46, label %7, !dbg !16115

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16116
  %9 = load i8, i8* %8, align 1, !dbg !16116
  call void @llvm.dbg.value(metadata i8 %9, metadata !3110, metadata !DIExpression()), !dbg !16112
  %10 = add i32 %2, -1, !dbg !16117
  call void @llvm.dbg.value(metadata i32 %10, metadata !3107, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata i8 0, metadata !3111, metadata !DIExpression()), !dbg !16118
  call void @llvm.dbg.value(metadata i8 %9, metadata !3110, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata i32 0, metadata !3108, metadata !DIExpression()), !dbg !16112
  %11 = icmp eq i8 %9, 0, !dbg !16119
  br i1 %11, label %12, label %15, !dbg !16121

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !16122
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !16123
  store i8 0, i8* %14, align 1, !dbg !16124
  br label %46, !dbg !16125

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !3111, metadata !DIExpression()), !dbg !16118
  call void @llvm.dbg.value(metadata i8 %17, metadata !3110, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata i32 %18, metadata !3108, metadata !DIExpression()), !dbg !16112
  %19 = zext i8 %17 to i32, !dbg !16126
  %20 = zext i8 %16 to i32, !dbg !16127
  %21 = shl nuw i32 1, %20, !dbg !16127
  call void @llvm.dbg.value(metadata i32 %21, metadata !3109, metadata !DIExpression()), !dbg !16112
  %22 = and i32 %21, %19, !dbg !16129
  %23 = icmp eq i32 %22, 0, !dbg !16131
  br i1 %23, label %42, label %24, !dbg !16132

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !16133
  %26 = sub i32 %10, %18, !dbg !16134
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !16135
  %28 = load i8*, i8** %27, align 4, !dbg !16135
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !16136
  %30 = load i32, i32* %29, align 4, !dbg !16136
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !16137
  %32 = add i32 %31, %18, !dbg !16138
  call void @llvm.dbg.value(metadata i32 %32, metadata !3108, metadata !DIExpression()), !dbg !16112
  %33 = trunc i32 %21 to i8, !dbg !16139
  %34 = xor i8 %33, -1, !dbg !16139
  %35 = and i8 %17, %34, !dbg !16139
  call void @llvm.dbg.value(metadata i8 %35, metadata !3110, metadata !DIExpression()), !dbg !16112
  %36 = icmp eq i8 %35, 0, !dbg !16140
  br i1 %36, label %12, label %37, !dbg !16142

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !16143
  %39 = sub i32 %10, %32, !dbg !16145
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.317, i32 0, i32 0), i32 noundef 1) #27, !dbg !16146
  %41 = add i32 %40, %32, !dbg !16147
  call void @llvm.dbg.value(metadata i32 %41, metadata !3108, metadata !DIExpression()), !dbg !16112
  br label %42, !dbg !16148

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !16112
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !16112
  call void @llvm.dbg.value(metadata i8 %44, metadata !3110, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata i32 %43, metadata !3108, metadata !DIExpression()), !dbg !16112
  %45 = add i8 %16, 1, !dbg !16149
  call void @llvm.dbg.value(metadata i8 %45, metadata !3111, metadata !DIExpression()), !dbg !16118
  br label %15, !dbg !16121

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.318, i32 0, i32 0), %3 ], !dbg !16112
  ret i8* %47, !dbg !16150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !16151 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16155, metadata !DIExpression()), !dbg !16160
  call void @llvm.dbg.value(metadata i32 %1, metadata !16156, metadata !DIExpression()), !dbg !16160
  call void @llvm.dbg.value(metadata i8* %2, metadata !16157, metadata !DIExpression()), !dbg !16160
  call void @llvm.dbg.value(metadata i32 %3, metadata !16158, metadata !DIExpression()), !dbg !16160
  %5 = icmp ult i32 %1, %3, !dbg !16161
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !16161
  call void @llvm.dbg.value(metadata i32 %6, metadata !16159, metadata !DIExpression()), !dbg !16160
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !16162
  ret i32 %6, !dbg !16163
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16164 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16168, metadata !DIExpression()), !dbg !16169
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !16170
  ret void, !dbg !16171
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !16172 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16181, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !16182, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.value(metadata i32 %2, metadata !16183, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !16184, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.value(metadata i8* %4, metadata !16185, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.value(metadata i8* %5, metadata !16186, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.value(metadata i8* %6, metadata !16187, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.value(metadata i32 %7, metadata !16188, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.value(metadata i32 %8, metadata !16189, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.value(metadata i8* undef, metadata !16190, metadata !DIExpression()), !dbg !16192
  %11 = icmp eq i32 %7, 15, !dbg !16193
  br i1 %11, label %12, label %15, !dbg !16193

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !16193
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #27, !dbg !16193
  br i1 %14, label %19, label %18, !dbg !16193

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !16193
  %17 = icmp ult i32 %16, 31, !dbg !16193
  br i1 %17, label %19, label %18, !dbg !16193

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.330, i32 0, i32 0), i32 noundef 536) #26, !dbg !16197
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.331, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #26, !dbg !16197
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.330, i32 0, i32 0), i32 noundef 536) #26, !dbg !16197
  unreachable, !dbg !16197

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16199
  tail call fastcc void @z_waitq_init.332(%struct._wait_q_t* noundef nonnull %20) #27, !dbg !16200
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !16201
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !16202
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !16203
  call void @llvm.dbg.value(metadata i8* %22, metadata !16191, metadata !DIExpression()), !dbg !16192
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !16204
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !16205
  store i8* null, i8** %23, align 4, !dbg !16206
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16207
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !16207
  br i1 %25, label %29, label %26, !dbg !16209

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !16210
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !16210
  br label %29, !dbg !16211

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !16192
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !16212
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !16214
  ret i8* %22, !dbg !16215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #6 !dbg !16216 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16220, metadata !DIExpression()), !dbg !16221
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !16222
  ret i1 %2, !dbg !16223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.332(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !16224 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16228, metadata !DIExpression()), !dbg !16229
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16230
  tail call fastcc void @sys_dlist_init.334(%struct._dnode* noundef %2) #27, !dbg !16231
  ret void, !dbg !16232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !16233 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !16238, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata i32 %1, metadata !16239, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata i32 %2, metadata !16240, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata i32 %3, metadata !16241, metadata !DIExpression()), !dbg !16242
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !16243
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !16244
  %6 = trunc i32 %3 to i8, !dbg !16245
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !16246
  store i8 %6, i8* %7, align 4, !dbg !16247
  %8 = trunc i32 %2 to i8, !dbg !16248
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !16249
  store i8 %8, i8* %9, align 1, !dbg !16250
  %10 = trunc i32 %1 to i8, !dbg !16251
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !16252
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !16252
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !16252
  store i8 %10, i8* %13, align 2, !dbg !16253
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !16254
  store i8 0, i8* %14, align 1, !dbg !16255
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !16256
  ret void, !dbg !16257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !16258 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16262, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !16263, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i32 %2, metadata !16264, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i32 0, metadata !16269, metadata !DIExpression()), !dbg !16270
  %4 = add i32 %2, 7, !dbg !16271
  %5 = and i32 %4, -8, !dbg !16271
  %6 = add i32 %5, 64, !dbg !16271
  call void @llvm.dbg.value(metadata i32 %6, metadata !16265, metadata !DIExpression()), !dbg !16270
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.333(%struct.z_thread_stack_element* noundef %1) #27, !dbg !16273
  call void @llvm.dbg.value(metadata i8* %7, metadata !16268, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i32 %5, metadata !16266, metadata !DIExpression()), !dbg !16270
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !16274
  call void @llvm.dbg.value(metadata i8* %8, metadata !16267, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i32 0, metadata !16269, metadata !DIExpression()), !dbg !16270
  %9 = ptrtoint i8* %7 to i32, !dbg !16275
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !16276
  store i32 %9, i32* %10, align 4, !dbg !16277
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !16278
  store i32 %5, i32* %11, align 4, !dbg !16279
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !16280
  store i32 0, i32* %12, align 4, !dbg !16281
  call void @llvm.dbg.value(metadata i8* %8, metadata !16267, metadata !DIExpression()), !dbg !16270
  ret i8* %8, !dbg !16282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.333(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !16283 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !16287, metadata !DIExpression()), !dbg !16288
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !16289
  ret i8* %2, !dbg !16290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16291 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !16296, metadata !DIExpression()), !dbg !16297
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !16298
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16299
  ret void, !dbg !16300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16301 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16303, metadata !DIExpression()), !dbg !16304
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16305
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !16306
  ret void, !dbg !16307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16308 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16312, metadata !DIExpression()), !dbg !16313
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16314
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16315
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16316
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16317
  ret void, !dbg !16318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.334(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16319 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16324, metadata !DIExpression()), !dbg !16325
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16326
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16327
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16328
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16329
  ret void, !dbg !16330
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !16331 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16348, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16339, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !16340, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata i32 %2, metadata !16341, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !16342, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata i8* %4, metadata !16343, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata i8* %5, metadata !16344, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata i8* %6, metadata !16345, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata i32 %7, metadata !16346, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata i32 %8, metadata !16347, metadata !DIExpression()), !dbg !16349
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16350, !srcloc !16068
  call void @llvm.dbg.value(metadata i32 %11, metadata !16064, metadata !DIExpression()) #25, !dbg !16355
  %12 = icmp eq i32 %11, 0, !dbg !16356
  br i1 %12, label %14, label %13, !dbg !16357

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.330, i32 0, i32 0), i32 noundef 647) #26, !dbg !16358
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.336, i32 0, i32 0)) #26, !dbg !16358
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.330, i32 0, i32 0), i32 noundef 647) #26, !dbg !16358
  unreachable, !dbg !16358

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !16348, metadata !DIExpression()), !dbg !16349
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !16360
  %17 = icmp eq i64 %15, -1, !dbg !16361
  br i1 %17, label %19, label %18, !dbg !16363

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !16364
  br label %19, !dbg !16366

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !16367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16368 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16373, metadata !DIExpression()), !dbg !16374
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16372, metadata !DIExpression()), !dbg !16374
  %4 = icmp eq i64 %3, 0, !dbg !16375
  br i1 %4, label %5, label %6, !dbg !16377

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !16378
  br label %7, !dbg !16380

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !16381
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !16383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16384 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16388, metadata !DIExpression()), !dbg !16389
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16390, !srcloc !16392
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !16393
  ret void, !dbg !16394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16395 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16398, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16397, metadata !DIExpression()), !dbg !16399
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16400
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !16401
  ret void, !dbg !16402
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !16403 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !16405, metadata !DIExpression()), !dbg !16424
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !16425

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.330, i32 0, i32 0), i32 noundef 750) #26, !dbg !16429
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.340, i32 0, i32 0)) #26, !dbg !16429
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.330, i32 0, i32 0), i32 noundef 750) #26, !dbg !16429
  unreachable, !dbg !16429

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !16405, metadata !DIExpression()), !dbg !16424
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !16432
  br i1 %4, label %6, label %5, !dbg !16433

5:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !16434
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !16422, metadata !DIExpression()), !dbg !16435
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !16436

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !16440
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !16440
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !16442
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !16442
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !16443
  %12 = load i32, i32* %11, align 4, !dbg !16443
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !16444
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !16444
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !16445
  %16 = load i8*, i8** %15, align 4, !dbg !16445
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !16446
  %18 = load i8*, i8** %17, align 4, !dbg !16446
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !16447
  %20 = load i8*, i8** %19, align 4, !dbg !16447
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !16448
  %22 = load i32, i32* %21, align 4, !dbg !16448
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !16449
  %24 = load i32, i32* %23, align 4, !dbg !16449
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #27, !dbg !16450
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !16451
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !16452
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !16453
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !16453
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !16454
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !16405, metadata !DIExpression()), !dbg !16424
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !16455
  br i1 %30, label %1, label %2, !dbg !16425, !llvm.loop !16456

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.330, i32 0, i32 0), i32 noundef 781) #26, !dbg !16458
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.340, i32 0, i32 0)) #26, !dbg !16458
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.330, i32 0, i32 0), i32 noundef 781) #26, !dbg !16458
  unreachable, !dbg !16458

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !16422, metadata !DIExpression()), !dbg !16435
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !16461
  br i1 %34, label %36, label %35, !dbg !16462

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #26, !dbg !16463
  ret void, !dbg !16464

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !16465
  %38 = load i32, i32* %37, align 4, !dbg !16465
  %39 = icmp eq i32 %38, -1, !dbg !16468
  br i1 %39, label %48, label %40, !dbg !16469

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !16470
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !16470
  %43 = icmp sgt i32 %38, 0, !dbg !16472
  %44 = select i1 %43, i32 %38, i32 0, !dbg !16472
  %45 = zext i32 %44 to i64, !dbg !16472
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64.341(i64 noundef %45) #27, !dbg !16472
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !16473
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #27, !dbg !16473
  br label %48, !dbg !16474

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !16475
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !16422, metadata !DIExpression()), !dbg !16435
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !16476
  br i1 %50, label %31, label %32, !dbg !16436, !llvm.loop !16477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.341(i64 noundef %0) unnamed_addr #6 !dbg !16479 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16481, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.value(metadata i64 %0, metadata !16483, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i32 1000, metadata !16486, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i32 10000, metadata !16487, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i8 1, metadata !16488, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i8 0, metadata !16489, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i8 1, metadata !16490, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i8 0, metadata !16491, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i8 1, metadata !16492, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i8 0, metadata !16493, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i64 0, metadata !16494, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i64 0, metadata !16494, metadata !DIExpression()), !dbg !16498
  %2 = mul i64 %0, 10, !dbg !16500
  ret i64 %2, !dbg !16506
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #5 !dbg !16507 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !16509, metadata !DIExpression()), !dbg !16513
  call void @llvm.dbg.value(metadata i8* %1, metadata !16510, metadata !DIExpression()), !dbg !16513
  call void @llvm.dbg.value(metadata i8* %2, metadata !16511, metadata !DIExpression()), !dbg !16513
  call void @llvm.dbg.value(metadata i8* %3, metadata !16512, metadata !DIExpression()), !dbg !16513
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16514
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !16515
  %7 = load i8, i8* %6, align 4, !dbg !16516
  %8 = or i8 %7, 4, !dbg !16516
  store i8 %8, i8* %6, align 4, !dbg !16516
  tail call void @z_thread_essential_clear() #27, !dbg !16517
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !16518
  unreachable, !dbg !16518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !16519 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16524, metadata !DIExpression()), !dbg !16526
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !16527
  %3 = load i32, i32* %2, align 4, !dbg !16527
  call void @llvm.dbg.value(metadata i32 %3, metadata !16525, metadata !DIExpression()), !dbg !16526
  %4 = icmp eq i32 %3, 0, !dbg !16528
  br i1 %4, label %10, label %5, !dbg !16530

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !16531
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16534
  %8 = zext i8 %7 to i32, !dbg !16535
  %9 = icmp eq i32 %6, %8, !dbg !16536
  br i1 %9, label %11, label %10, !dbg !16537

10:                                               ; preds = %5, %1
  br label %11, !dbg !16538

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !16526
  ret i1 %12, !dbg !16539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #11 !dbg !16540 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16542, metadata !DIExpression()), !dbg !16543
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !16544
  %3 = load i32, i32* %2, align 4, !dbg !16544
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16546
  %5 = zext i8 %4 to i32, !dbg !16547
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16548
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !16549
  %8 = or i32 %7, %5, !dbg !16550
  %9 = icmp eq i32 %3, %8, !dbg !16551
  br i1 %9, label %10, label %11, !dbg !16552

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !16553
  br label %11, !dbg !16554

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !16555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #11 !dbg !16556 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16560, metadata !DIExpression()), !dbg !16561
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16562
  %3 = zext i8 %2 to i32, !dbg !16563
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16564
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !16565
  %6 = or i32 %5, %3, !dbg !16566
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !16567
  store i32 %6, i32* %7, align 4, !dbg !16568
  ret void, !dbg !16569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !16570 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16574, metadata !DIExpression()), !dbg !16575
  ret i32 -134, !dbg !16576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #6 !dbg !16577 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16581, metadata !DIExpression()), !dbg !16583
  call void @llvm.dbg.value(metadata i32 %1, metadata !16582, metadata !DIExpression()), !dbg !16583
  ret i32 -134, !dbg !16584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #6 !dbg !16585 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16592, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !16593, metadata !DIExpression()), !dbg !16594
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !16595
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !16597
  %6 = select i1 %5, i32 -22, i32 0, !dbg !16594
  ret i32 %6, !dbg !16598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #6 !dbg !16599 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !16603, metadata !DIExpression()), !dbg !16604
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !16605
  %3 = select i1 %2, i32 -22, i32 0, !dbg !16604
  ret i32 %3, !dbg !16607
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !16608 {
  tail call void @sys_clock_idle_exit() #26, !dbg !16610
  ret void, !dbg !16611
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #5 !dbg !16612 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16614, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i8* %1, metadata !16615, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i8* %2, metadata !16616, metadata !DIExpression()), !dbg !16617
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16618
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !16618
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !16618
  %7 = load i8, i8* %6, align 2, !dbg !16618
  %8 = icmp sgt i8 %7, -1, !dbg !16618
  br i1 %8, label %10, label %9, !dbg !16621

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 39) #26, !dbg !16622
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 39) #26, !dbg !16622
  unreachable, !dbg !16622

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16624, !srcloc !16631
  call void @llvm.dbg.value(metadata i32 undef, metadata !16627, metadata !DIExpression()) #25, !dbg !16632
  call void @llvm.dbg.value(metadata i32 undef, metadata !16628, metadata !DIExpression()) #25, !dbg !16632
  tail call fastcc void @k_cpu_idle() #27, !dbg !16633
  br label %10, !dbg !16634, !llvm.loop !16635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !16637 {
  tail call void @arch_cpu_idle() #26, !dbg !16638
  ret void, !dbg !16639
}

; Function Attrs: optsize
declare !dbg !16640 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !16641 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16659, metadata !DIExpression()), !dbg !16663
  call void @llvm.dbg.value(metadata i8* %1, metadata !16660, metadata !DIExpression()), !dbg !16663
  call void @llvm.dbg.value(metadata i32 %2, metadata !16661, metadata !DIExpression()), !dbg !16663
  call void @llvm.dbg.value(metadata i32 %3, metadata !16662, metadata !DIExpression()), !dbg !16663
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !16664
  store i32 %2, i32* %5, align 4, !dbg !16665
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !16666
  store i32 %3, i32* %6, align 4, !dbg !16667
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !16668
  store i8* %1, i8** %7, align 4, !dbg !16669
  %8 = mul i32 %3, %2, !dbg !16670
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !16671
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !16672
  store i8* %9, i8** %10, align 4, !dbg !16673
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !16674
  store i8* %1, i8** %11, align 4, !dbg !16675
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !16676
  store i8* %1, i8** %12, align 4, !dbg !16677
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !16678
  store i32 0, i32* %13, align 4, !dbg !16679
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !16680
  store i8 0, i8* %14, align 4, !dbg !16681
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !16682
  tail call fastcc void @z_waitq_init.353(%struct._wait_q_t* noundef %15) #27, !dbg !16683
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !16684
  store i32 0, i32* %16, align 4, !dbg !16684
  ret void, !dbg !16685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.353(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !16686 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16690, metadata !DIExpression()), !dbg !16691
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16692
  tail call fastcc void @sys_dlist_init.354(%struct._dnode* noundef %2) #27, !dbg !16693
  ret void, !dbg !16694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.354(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16695 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16700, metadata !DIExpression()), !dbg !16701
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16702
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16703
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16704
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16705
  ret void, !dbg !16706
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !16707 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16711, metadata !DIExpression()), !dbg !16717
  call void @llvm.dbg.value(metadata i32 %1, metadata !16712, metadata !DIExpression()), !dbg !16717
  call void @llvm.dbg.value(metadata i32 %2, metadata !16713, metadata !DIExpression()), !dbg !16717
  %5 = bitcast i32* %4 to i8*, !dbg !16718
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !16718
  call void @llvm.dbg.value(metadata i32* %4, metadata !16716, metadata !DIExpression(DW_OP_deref)), !dbg !16717
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !16719
  br i1 %6, label %13, label %7, !dbg !16721

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !16722
  call void @llvm.dbg.value(metadata i32 %8, metadata !16716, metadata !DIExpression()), !dbg !16717
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #27, !dbg !16724
  call void @llvm.dbg.value(metadata i8* %9, metadata !16714, metadata !DIExpression()), !dbg !16717
  %10 = icmp eq i8* %9, null, !dbg !16725
  br i1 %10, label %13, label %11, !dbg !16727

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #27, !dbg !16728
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !16730
  store i8 1, i8* %12, align 4, !dbg !16731
  call void @llvm.dbg.value(metadata i32 0, metadata !16715, metadata !DIExpression()), !dbg !16717
  br label %13, !dbg !16732

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !16733
  call void @llvm.dbg.value(metadata i32 %14, metadata !16715, metadata !DIExpression()), !dbg !16717
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !16734
  ret i32 %14, !dbg !16735
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !16736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16741, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.value(metadata i32 %1, metadata !16742, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.value(metadata i32* %2, metadata !16743, metadata !DIExpression()), !dbg !16744
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !16745
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !16745
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !16745
  store i32 %6, i32* %2, align 4, !dbg !16745
  ret i1 %5, !dbg !16746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !16747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16750, metadata !DIExpression()), !dbg !16751
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #26, !dbg !16752
  ret i8* %2, !dbg !16753
}

; Function Attrs: optsize
declare !dbg !16754 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !16757 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16761, metadata !DIExpression()), !dbg !16762
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !16763
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #27, !dbg !16763
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !16763
  br i1 %4, label %5, label %15, !dbg !16765

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !16766
  %7 = load i8, i8* %6, align 4, !dbg !16766
  %8 = and i8 %7, 1, !dbg !16768
  %9 = icmp eq i8 %8, 0, !dbg !16769
  br i1 %9, label %15, label %10, !dbg !16770

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !16771
  %12 = load i8*, i8** %11, align 4, !dbg !16771
  tail call void @k_free(i8* noundef %12) #26, !dbg !16773
  %13 = load i8, i8* %6, align 4, !dbg !16774
  %14 = and i8 %13, -2, !dbg !16774
  store i8 %14, i8* %6, align 4, !dbg !16774
  br label %15, !dbg !16775

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !16762
  ret i32 %16, !dbg !16776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !16777 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16781, metadata !DIExpression()), !dbg !16782
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16783
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !16784
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16785
  ret %struct.k_thread* %4, !dbg !16786
}

; Function Attrs: optsize
declare !dbg !16787 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !16788 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16792, metadata !DIExpression()), !dbg !16793
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !16794
  br i1 %2, label %6, label %3, !dbg !16794

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16795
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16795
  br label %6, !dbg !16794

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16794
  ret %struct._dnode* %7, !dbg !16796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16797 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16801, metadata !DIExpression()), !dbg !16802
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16803
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16803
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16804
  ret i1 %4, !dbg !16805
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16806 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16816, metadata !DIExpression()), !dbg !16824
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16814, metadata !DIExpression()), !dbg !16824
  call void @llvm.dbg.value(metadata i8* %1, metadata !16815, metadata !DIExpression()), !dbg !16824
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16825, !srcloc !16834
  call void @llvm.dbg.value(metadata i32 %5, metadata !16828, metadata !DIExpression()) #25, !dbg !16835
  %6 = icmp eq i32 %5, 0, !dbg !16836
  %7 = icmp eq i64 %4, 0, !dbg !16837
  %8 = select i1 %6, i1 true, i1 %7, !dbg !16837
  br i1 %8, label %10, label %9, !dbg !16837

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.358, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.359, i32 0, i32 0), i32 noundef 118) #26, !dbg !16838
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.360, i32 0, i32 0)) #26, !dbg !16838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.359, i32 0, i32 0), i32 noundef 118) #26, !dbg !16838
  unreachable, !dbg !16838

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !16840
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !16841, metadata !DIExpression()) #25, !dbg !16848
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16850, !srcloc !16856
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #25, !dbg !16857
  call void @llvm.dbg.value(metadata i32 undef, metadata !16854, metadata !DIExpression()) #25, !dbg !16857
  call void @llvm.dbg.value(metadata i32 undef, metadata !16847, metadata !DIExpression()) #25, !dbg !16848
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !16858
  br i1 %13, label %15, label %14, !dbg !16861

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.362, i32 0, i32 0), i32 noundef 148) #26, !dbg !16862
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.363, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !16862
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.362, i32 0, i32 0), i32 noundef 148) #26, !dbg !16862
  unreachable, !dbg !16862

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16850
  call void @llvm.dbg.value(metadata i32 %16, metadata !16853, metadata !DIExpression()) #25, !dbg !16857
  call void @llvm.dbg.value(metadata i32 %16, metadata !16847, metadata !DIExpression()) #25, !dbg !16848
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !16864
  call void @llvm.dbg.value(metadata i32 %16, metadata !16818, metadata !DIExpression()), !dbg !16824
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !16865
  %18 = load i32, i32* %17, align 4, !dbg !16865
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !16867
  %20 = load i32, i32* %19, align 4, !dbg !16867
  %21 = icmp ult i32 %18, %20, !dbg !16868
  br i1 %21, label %22, label %52, !dbg !16869

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !16870
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %23) #26, !dbg !16872
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !16817, metadata !DIExpression()), !dbg !16824
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !16873
  br i1 %25, label %34, label %26, !dbg !16875

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !16876
  %28 = load i8*, i8** %27, align 4, !dbg !16876
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !16878
  %30 = load i32, i32* %29, align 4, !dbg !16878
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #26, !dbg !16879
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !16880, metadata !DIExpression()), !dbg !16886
  call void @llvm.dbg.value(metadata i32 0, metadata !16885, metadata !DIExpression()), !dbg !16886
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 7, i32 1, !dbg !16888
  store i32 0, i32* %32, align 4, !dbg !16889
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #26, !dbg !16890
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16891
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #26, !dbg !16891
  br label %64, !dbg !16892

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !16893
  %36 = load i8*, i8** %35, align 4, !dbg !16893
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !16895
  %38 = load i32, i32* %37, align 4, !dbg !16895
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #26, !dbg !16896
  %40 = load i32, i32* %37, align 4, !dbg !16897
  %41 = load i8*, i8** %35, align 4, !dbg !16898
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !16898
  store i8* %42, i8** %35, align 4, !dbg !16898
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !16899
  %44 = load i8*, i8** %43, align 4, !dbg !16899
  %45 = icmp eq i8* %42, %44, !dbg !16901
  br i1 %45, label %46, label %49, !dbg !16902

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !16903
  %48 = load i8*, i8** %47, align 4, !dbg !16903
  store i8* %48, i8** %35, align 4, !dbg !16905
  br label %49, !dbg !16906

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !16907
  %51 = add i32 %50, 1, !dbg !16907
  store i32 %51, i32* %17, align 4, !dbg !16907
  call void @llvm.dbg.value(metadata i32 0, metadata !16823, metadata !DIExpression()), !dbg !16824
  br label %59, !dbg !16908

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !16909

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16910
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !16913
  store i8* %1, i8** %55, align 4, !dbg !16914
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !16915
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16916
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %struct._wait_q_t* noundef %56, [1 x i64] %2) #26, !dbg !16916
  call void @llvm.dbg.value(metadata i32 %58, metadata !16823, metadata !DIExpression()), !dbg !16824
  br label %64, !dbg !16917

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !16918
  call void @llvm.dbg.value(metadata i32 %60, metadata !16823, metadata !DIExpression()), !dbg !16824
  call void @llvm.dbg.value(metadata i32 undef, metadata !16919, metadata !DIExpression()) #25, !dbg !16925
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !16924, metadata !DIExpression()) #25, !dbg !16925
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !16927
  br i1 %61, label %63, label %62, !dbg !16930

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.364, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.362, i32 0, i32 0), i32 noundef 194) #26, !dbg !16931
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !16931
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.362, i32 0, i32 0), i32 noundef 194) #26, !dbg !16931
  unreachable, !dbg !16931

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16919, metadata !DIExpression()) #25, !dbg !16925
  call void @llvm.dbg.value(metadata i32 %16, metadata !16933, metadata !DIExpression()) #25, !dbg !16936
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !16938, !srcloc !16939
  br label %64, !dbg !16940

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !16824
  ret i32 %65, !dbg !16941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !16942 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16952, metadata !DIExpression()), !dbg !16954
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !16953, metadata !DIExpression()), !dbg !16954
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !16955
  %4 = load i32, i32* %3, align 4, !dbg !16955
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !16956
  store i32 %4, i32* %5, align 4, !dbg !16957
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !16958
  %7 = load i32, i32* %6, align 4, !dbg !16958
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !16959
  store i32 %7, i32* %8, align 4, !dbg !16960
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !16961
  %10 = load i32, i32* %9, align 4, !dbg !16961
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !16962
  store i32 %10, i32* %11, align 4, !dbg !16963
  ret void, !dbg !16964
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16965 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16971, metadata !DIExpression()), !dbg !16975
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16969, metadata !DIExpression()), !dbg !16975
  call void @llvm.dbg.value(metadata i8* %1, metadata !16970, metadata !DIExpression()), !dbg !16975
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16976, !srcloc !16834
  call void @llvm.dbg.value(metadata i32 %5, metadata !16828, metadata !DIExpression()) #25, !dbg !16981
  %6 = icmp eq i32 %5, 0, !dbg !16982
  %7 = icmp eq i64 %4, 0, !dbg !16983
  %8 = select i1 %6, i1 true, i1 %7, !dbg !16983
  br i1 %8, label %10, label %9, !dbg !16983

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.358, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.359, i32 0, i32 0), i32 noundef 208) #26, !dbg !16984
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.360, i32 0, i32 0)) #26, !dbg !16984
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.359, i32 0, i32 0), i32 noundef 208) #26, !dbg !16984
  unreachable, !dbg !16984

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !16986
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !16841, metadata !DIExpression()) #25, !dbg !16987
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16989, !srcloc !16856
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #25, !dbg !16991
  call void @llvm.dbg.value(metadata i32 undef, metadata !16854, metadata !DIExpression()) #25, !dbg !16991
  call void @llvm.dbg.value(metadata i32 undef, metadata !16847, metadata !DIExpression()) #25, !dbg !16987
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !16992
  br i1 %13, label %15, label %14, !dbg !16993

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.362, i32 0, i32 0), i32 noundef 148) #26, !dbg !16994
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.363, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !16994
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.362, i32 0, i32 0), i32 noundef 148) #26, !dbg !16994
  unreachable, !dbg !16994

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16989
  call void @llvm.dbg.value(metadata i32 %16, metadata !16853, metadata !DIExpression()) #25, !dbg !16991
  call void @llvm.dbg.value(metadata i32 %16, metadata !16847, metadata !DIExpression()) #25, !dbg !16987
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !16995
  call void @llvm.dbg.value(metadata i32 %16, metadata !16972, metadata !DIExpression()), !dbg !16975
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !16996
  %18 = load i32, i32* %17, align 4, !dbg !16996
  %19 = icmp eq i32 %18, 0, !dbg !16998
  br i1 %19, label %61, label %20, !dbg !16999

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !17000
  %22 = load i8*, i8** %21, align 4, !dbg !17000
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !17002
  %24 = load i32, i32* %23, align 4, !dbg !17002
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #26, !dbg !17003
  %26 = load i32, i32* %23, align 4, !dbg !17004
  %27 = load i8*, i8** %21, align 4, !dbg !17005
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !17005
  store i8* %28, i8** %21, align 4, !dbg !17005
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !17006
  %30 = load i8*, i8** %29, align 4, !dbg !17006
  %31 = icmp eq i8* %28, %30, !dbg !17008
  br i1 %31, label %32, label %35, !dbg !17009

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !17010
  %34 = load i8*, i8** %33, align 4, !dbg !17010
  store i8* %34, i8** %21, align 4, !dbg !17012
  br label %35, !dbg !17013

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !17014
  %37 = add i32 %36, -1, !dbg !17014
  store i32 %37, i32* %17, align 4, !dbg !17014
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !17015
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %38) #26, !dbg !17016
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !16973, metadata !DIExpression()), !dbg !16975
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !17017
  br i1 %40, label %68, label %41, !dbg !17019

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !17020
  %43 = load i8*, i8** %42, align 4, !dbg !17020
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !17022
  %45 = load i8*, i8** %44, align 4, !dbg !17022
  %46 = load i32, i32* %23, align 4, !dbg !17023
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #26, !dbg !17024
  %48 = load i32, i32* %23, align 4, !dbg !17025
  %49 = load i8*, i8** %42, align 4, !dbg !17026
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !17026
  store i8* %50, i8** %42, align 4, !dbg !17026
  %51 = load i8*, i8** %29, align 4, !dbg !17027
  %52 = icmp eq i8* %50, %51, !dbg !17029
  br i1 %52, label %53, label %56, !dbg !17030

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !17031
  %55 = load i8*, i8** %54, align 4, !dbg !17031
  store i8* %55, i8** %42, align 4, !dbg !17033
  br label %56, !dbg !17034

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !17035
  %58 = add i32 %57, 1, !dbg !17035
  store i32 %58, i32* %17, align 4, !dbg !17035
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !16880, metadata !DIExpression()), !dbg !17036
  call void @llvm.dbg.value(metadata i32 0, metadata !16885, metadata !DIExpression()), !dbg !17036
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 7, i32 1, !dbg !17038
  store i32 0, i32* %59, align 4, !dbg !17039
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #26, !dbg !17040
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !17041
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #26, !dbg !17041
  br label %73, !dbg !17042

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !17043

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17044
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !17047
  store i8* %1, i8** %64, align 4, !dbg !17048
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !17049
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !17050
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %struct._wait_q_t* noundef %65, [1 x i64] %2) #26, !dbg !17050
  call void @llvm.dbg.value(metadata i32 %67, metadata !16974, metadata !DIExpression()), !dbg !16975
  br label %73, !dbg !17051

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !17052
  call void @llvm.dbg.value(metadata i32 %69, metadata !16974, metadata !DIExpression()), !dbg !16975
  call void @llvm.dbg.value(metadata i32 undef, metadata !16919, metadata !DIExpression()) #25, !dbg !17053
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !16924, metadata !DIExpression()) #25, !dbg !17053
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !17055
  br i1 %70, label %72, label %71, !dbg !17056

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.364, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.362, i32 0, i32 0), i32 noundef 194) #26, !dbg !17057
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !17057
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.362, i32 0, i32 0), i32 noundef 194) #26, !dbg !17057
  unreachable, !dbg !17057

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !16919, metadata !DIExpression()) #25, !dbg !17053
  call void @llvm.dbg.value(metadata i32 %16, metadata !16933, metadata !DIExpression()) #25, !dbg !17058
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !17060, !srcloc !16939
  br label %73, !dbg !17061

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !16975
  ret i32 %74, !dbg !17062
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17063 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !17067, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata i8* %1, metadata !17068, metadata !DIExpression()), !dbg !17071
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !17072
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !16841, metadata !DIExpression()) #25, !dbg !17073
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17075, !srcloc !16856
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #25, !dbg !17077
  call void @llvm.dbg.value(metadata i32 undef, metadata !16854, metadata !DIExpression()) #25, !dbg !17077
  call void @llvm.dbg.value(metadata i32 undef, metadata !16847, metadata !DIExpression()) #25, !dbg !17073
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !17078
  br i1 %5, label %7, label %6, !dbg !17079

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.362, i32 0, i32 0), i32 noundef 148) #26, !dbg !17080
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.363, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !17080
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.362, i32 0, i32 0), i32 noundef 148) #26, !dbg !17080
  unreachable, !dbg !17080

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #25, !dbg !17077
  call void @llvm.dbg.value(metadata i32 undef, metadata !16847, metadata !DIExpression()) #25, !dbg !17073
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !17081
  call void @llvm.dbg.value(metadata i32 undef, metadata !17069, metadata !DIExpression()), !dbg !17071
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !17082
  %9 = load i32, i32* %8, align 4, !dbg !17082
  %10 = icmp eq i32 %9, 0, !dbg !17084
  br i1 %10, label %17, label %11, !dbg !17085

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !17086
  %13 = load i8*, i8** %12, align 4, !dbg !17086
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !17088
  %15 = load i32, i32* %14, align 4, !dbg !17088
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #26, !dbg !17089
  call void @llvm.dbg.value(metadata i32 0, metadata !17070, metadata !DIExpression()), !dbg !17071
  br label %17, !dbg !17090

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !17091
  call void @llvm.dbg.value(metadata i32 %18, metadata !17070, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata i32 undef, metadata !16919, metadata !DIExpression()) #25, !dbg !17092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !16924, metadata !DIExpression()) #25, !dbg !17092
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !17094
  br i1 %19, label %21, label %20, !dbg !17095

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.364, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.362, i32 0, i32 0), i32 noundef 194) #26, !dbg !17096
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !17096
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.362, i32 0, i32 0), i32 noundef 194) #26, !dbg !17096
  unreachable, !dbg !17096

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !17075
  call void @llvm.dbg.value(metadata i32 %22, metadata !16853, metadata !DIExpression()) #25, !dbg !17077
  call void @llvm.dbg.value(metadata i32 %22, metadata !16847, metadata !DIExpression()) #25, !dbg !17073
  call void @llvm.dbg.value(metadata i32 %22, metadata !17069, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata i32 undef, metadata !16919, metadata !DIExpression()) #25, !dbg !17092
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #25, !dbg !17097
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #25, !dbg !17099, !srcloc !16939
  ret i32 %18, !dbg !17100
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !17101 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !17105, metadata !DIExpression()), !dbg !17108
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !17109
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !16841, metadata !DIExpression()) #25, !dbg !17110
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17112, !srcloc !16856
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #25, !dbg !17114
  call void @llvm.dbg.value(metadata i32 undef, metadata !16854, metadata !DIExpression()) #25, !dbg !17114
  call void @llvm.dbg.value(metadata i32 undef, metadata !16847, metadata !DIExpression()) #25, !dbg !17110
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #26, !dbg !17115
  br i1 %4, label %6, label %5, !dbg !17116

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.362, i32 0, i32 0), i32 noundef 148) #26, !dbg !17117
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.363, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #26, !dbg !17117
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.362, i32 0, i32 0), i32 noundef 148) #26, !dbg !17117
  unreachable, !dbg !17117

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #25, !dbg !17114
  call void @llvm.dbg.value(metadata i32 undef, metadata !16847, metadata !DIExpression()) #25, !dbg !17110
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #26, !dbg !17118
  call void @llvm.dbg.value(metadata i32 undef, metadata !17106, metadata !DIExpression()), !dbg !17108
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #26, !dbg !17119
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17107, metadata !DIExpression()), !dbg !17108
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17120
  br i1 %9, label %15, label %10, !dbg !17121

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !16880, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i32 -35, metadata !16885, metadata !DIExpression()), !dbg !17122
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 7, i32 1, !dbg !17125
  store i32 -35, i32* %12, align 4, !dbg !17126
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #26, !dbg !17127
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #26, !dbg !17119
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !17107, metadata !DIExpression()), !dbg !17108
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !17120
  br i1 %14, label %15, label %10, !dbg !17121, !llvm.loop !17128

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !17112
  call void @llvm.dbg.value(metadata i32 %16, metadata !16853, metadata !DIExpression()) #25, !dbg !17114
  call void @llvm.dbg.value(metadata i32 %16, metadata !16847, metadata !DIExpression()) #25, !dbg !17110
  call void @llvm.dbg.value(metadata i32 %16, metadata !17106, metadata !DIExpression()), !dbg !17108
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !17130
  store i32 0, i32* %17, align 4, !dbg !17131
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !17132
  %19 = load i8*, i8** %18, align 4, !dbg !17132
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !17133
  store i8* %19, i8** %20, align 4, !dbg !17134
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !17135
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #26, !dbg !17135
  ret void, !dbg !17136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #9 !dbg !17137 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !17148, metadata !DIExpression()), !dbg !17149
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !17150
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !17151
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !17152
  store i32 0, i32* %3, align 4, !dbg !17153
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !17154
  tail call fastcc void @z_waitq_init.368(%struct._wait_q_t* noundef %4) #27, !dbg !17155
  ret i32 0, !dbg !17156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.368(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !17157 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17161, metadata !DIExpression()), !dbg !17162
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17163
  tail call fastcc void @sys_dlist_init.369(%struct._dnode* noundef %2) #27, !dbg !17164
  ret void, !dbg !17165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.369(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17166 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17171, metadata !DIExpression()), !dbg !17172
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17173
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17174
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17175
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17176
  ret void, !dbg !17177
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17178 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !17187, metadata !DIExpression()), !dbg !17199
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !17186, metadata !DIExpression()), !dbg !17199
  call void @llvm.dbg.value(metadata i8 0, metadata !17194, metadata !DIExpression()), !dbg !17199
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17200, !srcloc !17209
  call void @llvm.dbg.value(metadata i32 %4, metadata !17203, metadata !DIExpression()) #25, !dbg !17210
  %5 = icmp eq i32 %4, 0, !dbg !17211
  br i1 %5, label %7, label %6, !dbg !17212

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.372, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.373, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.374, i32 0, i32 0), i32 noundef 101) #26, !dbg !17213
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.375, i32 0, i32 0)) #26, !dbg !17213
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.374, i32 0, i32 0), i32 noundef 101) #26, !dbg !17213
  unreachable, !dbg !17213

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.376, metadata !17215, metadata !DIExpression()) #25, !dbg !17222
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17224, !srcloc !17230
  call void @llvm.dbg.value(metadata i32 undef, metadata !17227, metadata !DIExpression()) #25, !dbg !17231
  call void @llvm.dbg.value(metadata i32 undef, metadata !17228, metadata !DIExpression()) #25, !dbg !17231
  call void @llvm.dbg.value(metadata i32 undef, metadata !17221, metadata !DIExpression()) #25, !dbg !17222
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17232
  br i1 %9, label %11, label %10, !dbg !17235

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.372, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !17236
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17236
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !17236
  unreachable, !dbg !17236

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !17224
  call void @llvm.dbg.value(metadata i32 %12, metadata !17227, metadata !DIExpression()) #25, !dbg !17231
  call void @llvm.dbg.value(metadata i32 %12, metadata !17221, metadata !DIExpression()) #25, !dbg !17222
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17238
  call void @llvm.dbg.value(metadata i32 %12, metadata !17189, metadata !DIExpression()), !dbg !17199
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !17239
  %14 = load i32, i32* %13, align 4, !dbg !17239
  %15 = icmp eq i32 %14, 0, !dbg !17239
  br i1 %15, label %21, label %16, !dbg !17239

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !17239
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !17239
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17239
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !17239
  br i1 %20, label %27, label %39, !dbg !17241, !prof !17242

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17243
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !17245
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !17245
  %25 = load i8, i8* %24, align 2, !dbg !17245
  %26 = sext i8 %25 to i32, !dbg !17243
  br label %30, !dbg !17246

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !17247
  %29 = load i32, i32* %28, align 4, !dbg !17247
  br label %30, !dbg !17246

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !17248
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !17246
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !17249
  store i32 %32, i32* %33, align 4, !dbg !17250
  %34 = add i32 %14, 1, !dbg !17251
  store i32 %34, i32* %13, align 4, !dbg !17251
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !17252
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !17253
  call void @llvm.dbg.value(metadata i32 undef, metadata !17254, metadata !DIExpression()) #25, !dbg !17260
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.376, metadata !17259, metadata !DIExpression()) #25, !dbg !17260
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17262
  br i1 %36, label %38, label %37, !dbg !17265

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.372, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !17266
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17266
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !17266
  unreachable, !dbg !17266

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !17254, metadata !DIExpression()) #25, !dbg !17260
  call void @llvm.dbg.value(metadata i32 %12, metadata !17268, metadata !DIExpression()) #25, !dbg !17271
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !17273, !srcloc !17274
  br label %97, !dbg !17275

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !17276
  br i1 %40, label %41, label %45, !dbg !17278, !prof !17279

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !17254, metadata !DIExpression()) #25, !dbg !17280
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.376, metadata !17259, metadata !DIExpression()) #25, !dbg !17280
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17283
  br i1 %42, label %44, label %43, !dbg !17284

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.372, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !17285
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !17285
  unreachable, !dbg !17285

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !17254, metadata !DIExpression()) #25, !dbg !17280
  call void @llvm.dbg.value(metadata i32 %12, metadata !17268, metadata !DIExpression()) #25, !dbg !17286
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !17288, !srcloc !17274
  br label %97, !dbg !17289

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !17290
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !17290
  %48 = load i8, i8* %47, align 2, !dbg !17290
  %49 = sext i8 %48 to i32, !dbg !17291
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !17292
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !17292
  %52 = load i8, i8* %51, align 2, !dbg !17292
  %53 = sext i8 %52 to i32, !dbg !17293
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #27, !dbg !17294
  call void @llvm.dbg.value(metadata i32 %54, metadata !17188, metadata !DIExpression()), !dbg !17199
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #27, !dbg !17295
  br i1 %55, label %56, label %58, !dbg !17297

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #27, !dbg !17298
  call void @llvm.dbg.value(metadata i1 %57, metadata !17194, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17199
  br label %58, !dbg !17300

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !17194, metadata !DIExpression()), !dbg !17199
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !17301
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !17302
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.376, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #26, !dbg !17302
  call void @llvm.dbg.value(metadata i32 %62, metadata !17195, metadata !DIExpression()), !dbg !17199
  %63 = icmp eq i32 %62, 0, !dbg !17303
  br i1 %63, label %97, label %64, !dbg !17305

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.376, metadata !17215, metadata !DIExpression()) #25, !dbg !17306
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17308, !srcloc !17230
  call void @llvm.dbg.value(metadata i32 undef, metadata !17227, metadata !DIExpression()) #25, !dbg !17310
  call void @llvm.dbg.value(metadata i32 undef, metadata !17228, metadata !DIExpression()) #25, !dbg !17310
  call void @llvm.dbg.value(metadata i32 undef, metadata !17221, metadata !DIExpression()) #25, !dbg !17306
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17311
  br i1 %66, label %68, label %67, !dbg !17312

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.372, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !17313
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17313
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !17313
  unreachable, !dbg !17313

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !17308
  call void @llvm.dbg.value(metadata i32 %69, metadata !17227, metadata !DIExpression()) #25, !dbg !17310
  call void @llvm.dbg.value(metadata i32 %69, metadata !17221, metadata !DIExpression()) #25, !dbg !17306
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17314
  call void @llvm.dbg.value(metadata i32 %69, metadata !17189, metadata !DIExpression()), !dbg !17199
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !17315
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !17315
  br i1 %71, label %90, label %72, !dbg !17316, !prof !17279

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head.382(%struct._wait_q_t* noundef nonnull %60) #27, !dbg !17317
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !17196, metadata !DIExpression()), !dbg !17318
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !17319
  br i1 %74, label %83, label %75, !dbg !17320

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !17321
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !17321
  %78 = load i8, i8* %77, align 2, !dbg !17321
  %79 = sext i8 %78 to i32, !dbg !17322
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !17323
  %81 = load i32, i32* %80, align 4, !dbg !17323
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #27, !dbg !17324
  br label %86, !dbg !17320

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !17325
  %85 = load i32, i32* %84, align 4, !dbg !17325
  br label %86, !dbg !17320

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !17320
  call void @llvm.dbg.value(metadata i32 %87, metadata !17188, metadata !DIExpression()), !dbg !17199
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #27, !dbg !17326
  %89 = select i1 %88, i1 true, i1 %59, !dbg !17327
  call void @llvm.dbg.value(metadata i1 %89, metadata !17194, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17199
  call void @llvm.dbg.value(metadata i8 poison, metadata !17194, metadata !DIExpression()), !dbg !17199
  br i1 %89, label %91, label %93, !dbg !17328

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !17194, metadata !DIExpression()), !dbg !17199
  br i1 %59, label %91, label %93, !dbg !17328

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !17329
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.376, [1 x i32] %92) #26, !dbg !17329
  br label %97, !dbg !17332

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !17254, metadata !DIExpression()) #25, !dbg !17333
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.376, metadata !17259, metadata !DIExpression()) #25, !dbg !17333
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17336
  br i1 %94, label %96, label %95, !dbg !17337

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.372, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !17338
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17338
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !17338
  unreachable, !dbg !17338

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !17254, metadata !DIExpression()) #25, !dbg !17333
  call void @llvm.dbg.value(metadata i32 %69, metadata !17268, metadata !DIExpression()) #25, !dbg !17339
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #25, !dbg !17341, !srcloc !17274
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !17199
  ret i32 %98, !dbg !17342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !17343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17347, metadata !DIExpression()), !dbg !17350
  call void @llvm.dbg.value(metadata i32 %1, metadata !17348, metadata !DIExpression()), !dbg !17350
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #27, !dbg !17351
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !17351
  call void @llvm.dbg.value(metadata i32 %4, metadata !17349, metadata !DIExpression()), !dbg !17350
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #27, !dbg !17352
  call void @llvm.dbg.value(metadata i32 %5, metadata !17349, metadata !DIExpression()), !dbg !17350
  ret i32 %5, !dbg !17353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !17354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17358, metadata !DIExpression()), !dbg !17360
  call void @llvm.dbg.value(metadata i32 %1, metadata !17359, metadata !DIExpression()), !dbg !17360
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !17361
  ret i1 %3, !dbg !17362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !17363 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !17367, metadata !DIExpression()), !dbg !17369
  call void @llvm.dbg.value(metadata i32 %1, metadata !17368, metadata !DIExpression()), !dbg !17369
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !17370
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !17370
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !17372
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !17372
  %7 = load i8, i8* %6, align 2, !dbg !17372
  %8 = sext i8 %7 to i32, !dbg !17373
  %9 = icmp eq i32 %8, %1, !dbg !17374
  br i1 %9, label %12, label %10, !dbg !17375

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #26, !dbg !17376
  br label %12, !dbg !17378

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !17369
  ret i1 %13, !dbg !17379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.382(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !17380 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17384, metadata !DIExpression()), !dbg !17385
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17386
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.383(%struct._dnode* noundef %2) #27, !dbg !17387
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17388
  ret %struct.k_thread* %4, !dbg !17389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.383(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !17390 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17394, metadata !DIExpression()), !dbg !17395
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.384(%struct._dnode* noundef %0) #27, !dbg !17396
  br i1 %2, label %6, label %3, !dbg !17396

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17397
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17397
  br label %6, !dbg !17396

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !17396
  ret %struct._dnode* %7, !dbg !17398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.384(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17399 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17403, metadata !DIExpression()), !dbg !17404
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17405
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17405
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !17406
  ret i1 %4, !dbg !17407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !17408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17410, metadata !DIExpression()), !dbg !17412
  call void @llvm.dbg.value(metadata i32 %1, metadata !17411, metadata !DIExpression()), !dbg !17412
  %3 = icmp slt i32 %0, %1, !dbg !17413
  ret i1 %3, !dbg !17414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #6 !dbg !17415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17417, metadata !DIExpression()), !dbg !17418
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #27, !dbg !17419
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !17419
  ret i32 %3, !dbg !17420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #6 !dbg !17421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17425, metadata !DIExpression()), !dbg !17426
  %2 = icmp sgt i32 %0, -128, !dbg !17427
  ret i1 %2, !dbg !17428
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !17429 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !17431, metadata !DIExpression()), !dbg !17435
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17436, !srcloc !17209
  call void @llvm.dbg.value(metadata i32 %2, metadata !17203, metadata !DIExpression()) #25, !dbg !17441
  %3 = icmp eq i32 %2, 0, !dbg !17442
  br i1 %3, label %5, label %4, !dbg !17443

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.372, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.373, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.374, i32 0, i32 0), i32 noundef 205) #26, !dbg !17444
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.375, i32 0, i32 0)) #26, !dbg !17444
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.374, i32 0, i32 0), i32 noundef 205) #26, !dbg !17444
  unreachable, !dbg !17444

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !17446
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !17446
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17446
  br i1 %8, label %41, label %9, !dbg !17448

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17449
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !17449
  br i1 %11, label %12, label %41, !dbg !17451

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !17452
  %14 = load i32, i32* %13, align 4, !dbg !17452
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !17455

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.372, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.374, i32 0, i32 0), i32 noundef 229) #26, !dbg !17456
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.374, i32 0, i32 0), i32 noundef 229) #26, !dbg !17456
  unreachable, !dbg !17456

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !17458
  store i32 %17, i32* %13, align 4, !dbg !17458
  br label %41, !dbg !17461

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.376, metadata !17215, metadata !DIExpression()) #25, !dbg !17462
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17464, !srcloc !17230
  call void @llvm.dbg.value(metadata i32 undef, metadata !17227, metadata !DIExpression()) #25, !dbg !17466
  call void @llvm.dbg.value(metadata i32 undef, metadata !17228, metadata !DIExpression()) #25, !dbg !17466
  call void @llvm.dbg.value(metadata i32 undef, metadata !17221, metadata !DIExpression()) #25, !dbg !17462
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17467
  br i1 %20, label %22, label %21, !dbg !17468

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.372, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !17469
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17469
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !17469
  unreachable, !dbg !17469

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17464
  call void @llvm.dbg.value(metadata i32 %23, metadata !17227, metadata !DIExpression()) #25, !dbg !17466
  call void @llvm.dbg.value(metadata i32 %23, metadata !17221, metadata !DIExpression()) #25, !dbg !17462
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17470
  call void @llvm.dbg.value(metadata i32 %23, metadata !17433, metadata !DIExpression()), !dbg !17435
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !17471
  %25 = load i32, i32* %24, align 4, !dbg !17471
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #27, !dbg !17472
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !17473
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #26, !dbg !17474
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !17432, metadata !DIExpression()), !dbg !17435
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !17475
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !17476
  br i1 %29, label %37, label %30, !dbg !17478

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !17479
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !17479
  %33 = load i8, i8* %32, align 2, !dbg !17479
  %34 = sext i8 %33 to i32, !dbg !17481
  store i32 %34, i32* %24, align 4, !dbg !17482
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !17483, metadata !DIExpression()), !dbg !17489
  call void @llvm.dbg.value(metadata i32 0, metadata !17488, metadata !DIExpression()), !dbg !17489
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 7, i32 1, !dbg !17491
  store i32 0, i32* %35, align 4, !dbg !17492
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #26, !dbg !17493
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17494
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.376, [1 x i32] %36) #26, !dbg !17494
  br label %41, !dbg !17495

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !17496
  call void @llvm.dbg.value(metadata i32 undef, metadata !17254, metadata !DIExpression()) #25, !dbg !17498
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.376, metadata !17259, metadata !DIExpression()) #25, !dbg !17498
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17500
  br i1 %38, label %40, label %39, !dbg !17501

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.372, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !17502
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.376) #26, !dbg !17502
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !17502
  unreachable, !dbg !17502

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !17254, metadata !DIExpression()) #25, !dbg !17498
  call void @llvm.dbg.value(metadata i32 %23, metadata !17268, metadata !DIExpression()) #25, !dbg !17503
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !17505, !srcloc !17274
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !17435
  ret i32 %42, !dbg !17506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !17507 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17511, metadata !DIExpression()), !dbg !17515
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17512, metadata !DIExpression()), !dbg !17515
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17516
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !17516
  %5 = load i8, i8* %4, align 2, !dbg !17516
  call void @llvm.dbg.value(metadata i8 %5, metadata !17513, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !17515
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !17517
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !17517
  %8 = load i8, i8* %7, align 2, !dbg !17517
  call void @llvm.dbg.value(metadata i8 %8, metadata !17514, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !17515
  %9 = icmp eq i8 %8, %5, !dbg !17518
  %10 = sext i8 %5 to i32, !dbg !17520
  %11 = sext i8 %8 to i32, !dbg !17520
  %12 = sub nsw i32 %11, %10, !dbg !17520
  %13 = select i1 %9, i32 0, i32 %12, !dbg !17520
  ret i32 %13, !dbg !17521
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !17522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !17526, metadata !DIExpression()), !dbg !17527
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !17528
  %3 = icmp eq i32 %2, 0, !dbg !17530
  br i1 %3, label %8, label %4, !dbg !17531

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !17532
  %6 = add i32 %5, %2, !dbg !17534
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17535
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !17536
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !17537
  br label %8, !dbg !17538

8:                                                ; preds = %4, %1
  ret void, !dbg !17539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !17540 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !17544, metadata !DIExpression()), !dbg !17546
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !17547
  call void @llvm.dbg.value(metadata i32 %1, metadata !17545, metadata !DIExpression()), !dbg !17546
  ret i32 %1, !dbg !17548
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17553, metadata !DIExpression()), !dbg !17562
  call void @llvm.dbg.value(metadata i32 %1, metadata !17554, metadata !DIExpression()), !dbg !17562
  call void @llvm.dbg.value(metadata i32 0, metadata !17555, metadata !DIExpression()), !dbg !17563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !17571
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17573, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !17580
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !17580
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !17571
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17581
  br i1 %4, label %6, label %5, !dbg !17584

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !17585
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17585
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !17585
  unreachable, !dbg !17585

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !17580
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !17571
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17587
  call void @llvm.dbg.value(metadata i32 undef, metadata !17561, metadata !DIExpression()), !dbg !17563
  call void @llvm.dbg.value(metadata i32 undef, metadata !17555, metadata !DIExpression()), !dbg !17563
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17588
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !17591
  %8 = icmp sgt i32 %0, 0, !dbg !17592
  %9 = icmp sgt i32 %7, 2, !dbg !17594
  %10 = select i1 %9, i32 %7, i32 2, !dbg !17594
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !17594
  store i32 %11, i32* @slice_ticks, align 4, !dbg !17595
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !17596
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !17597
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !17604
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !17604
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17606
  br i1 %12, label %14, label %13, !dbg !17609

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !17610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !17610
  unreachable, !dbg !17610

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !17573
  call void @llvm.dbg.value(metadata i32 %15, metadata !17576, metadata !DIExpression()) #25, !dbg !17580
  call void @llvm.dbg.value(metadata i32 %15, metadata !17570, metadata !DIExpression()) #25, !dbg !17571
  call void @llvm.dbg.value(metadata i32 %15, metadata !17561, metadata !DIExpression()), !dbg !17563
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !17604
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !17615
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !17617, !srcloc !17618
  call void @llvm.dbg.value(metadata i32 1, metadata !17555, metadata !DIExpression()), !dbg !17563
  call void @llvm.dbg.value(metadata i32 undef, metadata !17555, metadata !DIExpression()), !dbg !17563
  ret void, !dbg !17619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #6 !dbg !17620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17622, metadata !DIExpression()), !dbg !17623
  call void @llvm.dbg.value(metadata i32 %0, metadata !17624, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17639
  call void @llvm.dbg.value(metadata i32 1000, metadata !17627, metadata !DIExpression()), !dbg !17639
  call void @llvm.dbg.value(metadata i32 10000, metadata !17628, metadata !DIExpression()), !dbg !17639
  call void @llvm.dbg.value(metadata i8 1, metadata !17629, metadata !DIExpression()), !dbg !17639
  call void @llvm.dbg.value(metadata i1 true, metadata !17630, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17639
  call void @llvm.dbg.value(metadata i1 true, metadata !17631, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17639
  call void @llvm.dbg.value(metadata i8 0, metadata !17632, metadata !DIExpression()), !dbg !17639
  call void @llvm.dbg.value(metadata i1 true, metadata !17633, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17639
  call void @llvm.dbg.value(metadata i1 false, metadata !17634, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17639
  call void @llvm.dbg.value(metadata i64 0, metadata !17635, metadata !DIExpression()), !dbg !17639
  call void @llvm.dbg.value(metadata i64 0, metadata !17635, metadata !DIExpression()), !dbg !17639
  %2 = mul i32 %0, 10, !dbg !17641
  ret i32 %2, !dbg !17647
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !17648 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17650, metadata !DIExpression()), !dbg !17652
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !17653
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17655, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !17657
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !17657
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !17653
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17658
  br i1 %3, label %5, label %4, !dbg !17659

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !17660
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17660
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !17660
  unreachable, !dbg !17660

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17655
  call void @llvm.dbg.value(metadata i32 %6, metadata !17576, metadata !DIExpression()) #25, !dbg !17657
  call void @llvm.dbg.value(metadata i32 %6, metadata !17570, metadata !DIExpression()) #25, !dbg !17653
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17661
  call void @llvm.dbg.value(metadata i32 %6, metadata !17651, metadata !DIExpression()), !dbg !17652
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !17662
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17664
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !17665
  br i1 %9, label %10, label %14, !dbg !17666

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !17667
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !17669
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !17669
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17671
  br i1 %11, label %13, label %12, !dbg !17672

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !17673
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17673
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !17673
  unreachable, !dbg !17673

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !17598, metadata !DIExpression()) #25, !dbg !17669
  call void @llvm.dbg.value(metadata i32 %6, metadata !17612, metadata !DIExpression()) #25, !dbg !17674
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !17676, !srcloc !17618
  br label %33, !dbg !17677

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !17678
  %15 = tail call fastcc i32 @slice_time() #27, !dbg !17679
  %16 = icmp eq i32 %15, 0, !dbg !17679
  br i1 %16, label %27, label %17, !dbg !17681

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #27, !dbg !17682
  br i1 %18, label %19, label %27, !dbg !17683

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17684
  %21 = icmp sgt i32 %20, %0, !dbg !17687
  br i1 %21, label %25, label %22, !dbg !17688

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !17689
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #27, !dbg !17689
  call void @llvm.dbg.value(metadata i32 %24, metadata !17651, metadata !DIExpression()), !dbg !17652
  br label %28, !dbg !17691

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !17692
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17692
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17694
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !17652
  call void @llvm.dbg.value(metadata i32 %29, metadata !17651, metadata !DIExpression()), !dbg !17652
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !17696
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !17696
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17698
  br i1 %30, label %32, label %31, !dbg !17699

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !17700
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17700
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !17700
  unreachable, !dbg !17700

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !17598, metadata !DIExpression()) #25, !dbg !17696
  call void @llvm.dbg.value(metadata i32 %29, metadata !17612, metadata !DIExpression()) #25, !dbg !17701
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #25, !dbg !17703, !srcloc !17618
  br label %33, !dbg !17704

33:                                               ; preds = %32, %13
  ret void, !dbg !17704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !17705 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17709, metadata !DIExpression()), !dbg !17711
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !17712
  %3 = icmp eq i32 %2, 0, !dbg !17712
  br i1 %3, label %16, label %4, !dbg !17713

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !17714
  br i1 %5, label %16, label %6, !dbg !17715

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17716
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !17716
  %9 = load i8, i8* %8, align 2, !dbg !17716
  %10 = sext i8 %9 to i32, !dbg !17717
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !17718
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.401(i32 noundef %10, i32 noundef %11) #27, !dbg !17719
  br i1 %12, label %16, label %13, !dbg !17720

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !17721
  %15 = xor i1 %14, true, !dbg !17722
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !17711
  call void @llvm.dbg.value(metadata i1 %17, metadata !17710, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17711
  ret i1 %17, !dbg !17723
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !17724 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17728, metadata !DIExpression()), !dbg !17730
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17731
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17729, metadata !DIExpression()), !dbg !17730
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !17732
  br i1 %3, label %5, label %4, !dbg !17734

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !17735
  br label %5, !dbg !17737

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !17728, metadata !DIExpression()), !dbg !17730
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !17738
  ret i32 %6, !dbg !17739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17740 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17742, metadata !DIExpression()), !dbg !17744
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17745
  %3 = load i8, i8* %2, align 1, !dbg !17745
  call void @llvm.dbg.value(metadata i8 %3, metadata !17743, metadata !DIExpression()), !dbg !17744
  %4 = and i8 %3, 31, !dbg !17746
  %5 = icmp ne i8 %4, 0, !dbg !17747
  ret i1 %5, !dbg !17748
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17749 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17751, metadata !DIExpression()), !dbg !17752
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !17753
  br i1 %2, label %3, label %7, !dbg !17755

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17756, metadata !DIExpression()) #25, !dbg !17759
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17762
  %5 = load i8, i8* %4, align 1, !dbg !17763
  %6 = and i8 %5, 127, !dbg !17763
  store i8 %6, i8* %4, align 1, !dbg !17763
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17764, metadata !DIExpression()) #25, !dbg !17767
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !17771
  br label %7, !dbg !17772

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17773, metadata !DIExpression()) #25, !dbg !17776
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17778
  %9 = load i8, i8* %8, align 1, !dbg !17779
  %10 = or i8 %9, -128, !dbg !17779
  store i8 %10, i8* %8, align 1, !dbg !17779
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17780, metadata !DIExpression()) #25, !dbg !17783
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !17787, metadata !DIExpression()) #25, !dbg !17795
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17793, metadata !DIExpression()) #25, !dbg !17795
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !17797
  br i1 %11, label %12, label %13, !dbg !17800

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 186) #26, !dbg !17801
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 186) #26, !dbg !17801
  unreachable, !dbg !17801

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.396(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !17803
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !17794, metadata !DIExpression()) #25, !dbg !17795
  %15 = icmp eq %struct._dnode* %14, null, !dbg !17805
  br i1 %15, label %26, label %16, !dbg !17803

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !17794, metadata !DIExpression()) #25, !dbg !17795
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !17807
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !17794, metadata !DIExpression()) #25, !dbg !17795
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #26, !dbg !17808
  %20 = icmp sgt i32 %19, 0, !dbg !17811
  br i1 %20, label %21, label %23, !dbg !17812

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17813
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #26, !dbg !17815
  br label %28, !dbg !17816

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #26, !dbg !17805
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !17794, metadata !DIExpression()) #25, !dbg !17795
  %25 = icmp eq %struct._dnode* %24, null, !dbg !17805
  br i1 %25, label %26, label %16, !dbg !17803, !llvm.loop !17817

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17819
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #26, !dbg !17820
  br label %28, !dbg !17821

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17822
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !17823
  %31 = zext i1 %30 to i32, !dbg !17823
  tail call fastcc void @update_cache(i32 noundef %31) #27, !dbg !17824
  ret void, !dbg !17825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17826 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17828, metadata !DIExpression()), !dbg !17829
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #27, !dbg !17830
  ret i1 %2, !dbg !17831
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17832 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !17834, metadata !DIExpression()), !dbg !17836
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17835, metadata !DIExpression()), !dbg !17836
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !17837
  br i1 %3, label %4, label %5, !dbg !17840

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1139) #26, !dbg !17841
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1139) #26, !dbg !17841
  unreachable, !dbg !17841

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !17843
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #27, !dbg !17844
  ret void, !dbg !17845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #6 !dbg !17846 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17848, metadata !DIExpression()), !dbg !17849
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !17850
  ret i1 %2, !dbg !17851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.396(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !17852 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17856, metadata !DIExpression()), !dbg !17857
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.399(%struct._dnode* noundef %0) #27, !dbg !17858
  br i1 %2, label %6, label %3, !dbg !17858

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17859
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17859
  br label %6, !dbg !17858

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !17858
  ret %struct._dnode* %7, !dbg !17860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !17861 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17865, metadata !DIExpression()), !dbg !17869
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17866, metadata !DIExpression()), !dbg !17869
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17870
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17870
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17867, metadata !DIExpression()), !dbg !17869
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17871
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17872
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17873
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17874
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17875
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17876
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17877
  ret void, !dbg !17878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !17879 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17883, metadata !DIExpression()), !dbg !17885
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17884, metadata !DIExpression()), !dbg !17885
  %3 = icmp eq %struct._dnode* %1, null, !dbg !17886
  br i1 %3, label %6, label %4, !dbg !17887

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !17888
  br label %6, !dbg !17887

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !17887
  ret %struct._dnode* %7, !dbg !17889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !17890 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17894, metadata !DIExpression()), !dbg !17897
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17895, metadata !DIExpression()), !dbg !17897
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17898
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17898
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17896, metadata !DIExpression()), !dbg !17897
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17899
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17900
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17901
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !17902
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17903
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17904
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17905
  ret void, !dbg !17906
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !17907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17909, metadata !DIExpression()), !dbg !17911
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !17912
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17919, metadata !DIExpression()) #25, !dbg !17921
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17922
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !17923
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !17923
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17910, metadata !DIExpression()), !dbg !17911
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17924, metadata !DIExpression()) #25, !dbg !17930
  call void @llvm.dbg.value(metadata i32 %0, metadata !17929, metadata !DIExpression()) #25, !dbg !17930
  %6 = icmp eq i32 %0, 0, !dbg !17933
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17935
  br i1 %6, label %8, label %18, !dbg !17936

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !17937
  br i1 %9, label %10, label %11, !dbg !17940

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.397, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 137) #26, !dbg !17941
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.398, i32 0, i32 0)) #26, !dbg !17941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 137) #26, !dbg !17941
  unreachable, !dbg !17941

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #26, !dbg !17943
  br i1 %12, label %18, label %13, !dbg !17945

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !17946
  br i1 %14, label %18, label %15, !dbg !17948

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #26, !dbg !17949
  %17 = icmp eq i32 %16, 0, !dbg !17949
  br i1 %17, label %21, label %18, !dbg !17951

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !17952
  br i1 %19, label %21, label %20, !dbg !17955

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !17956
  br label %21, !dbg !17958

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !17935
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17935
  ret void, !dbg !17959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !17960 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17964, metadata !DIExpression()), !dbg !17967
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17965, metadata !DIExpression()), !dbg !17967
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.396(%struct._dnode* noundef %0) #27, !dbg !17968
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17966, metadata !DIExpression()), !dbg !17967
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17965, metadata !DIExpression()), !dbg !17967
  ret %struct.k_thread* %3, !dbg !17969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17970 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17972, metadata !DIExpression()), !dbg !17973
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17974
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !17975
  %4 = xor i1 %3, true, !dbg !17976
  ret i1 %4, !dbg !17977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17978 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17980, metadata !DIExpression()), !dbg !17981
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !17982
  %3 = load i16, i16* %2, align 2, !dbg !17982
  %4 = icmp ult i16 %3, 128, !dbg !17983
  %5 = zext i1 %4 to i32, !dbg !17983
  ret i32 %5, !dbg !17984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17985 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17991, metadata !DIExpression()), !dbg !17992
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17993
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !17994
  %4 = xor i1 %3, true, !dbg !17995
  ret i1 %4, !dbg !17996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17997 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18003, metadata !DIExpression()), !dbg !18004
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18005
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18005
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18006
  ret i1 %4, !dbg !18007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !18008 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18010, metadata !DIExpression()), !dbg !18012
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18011, metadata !DIExpression()), !dbg !18012
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18013
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !18013
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !18014
  br i1 %5, label %9, label %6, !dbg !18015

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !18016
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !18016
  br label %9, !dbg !18015

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !18015
  ret %struct._dnode* %10, !dbg !18017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.399(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !18018 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18022, metadata !DIExpression()), !dbg !18023
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18024
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18024
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !18025
  ret i1 %4, !dbg !18026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !18027 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18031, metadata !DIExpression()), !dbg !18034
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18035
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18035
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18032, metadata !DIExpression()), !dbg !18034
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18036
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18036
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18033, metadata !DIExpression()), !dbg !18034
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18037
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18038
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18039
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18040
  tail call fastcc void @sys_dnode_init.400(%struct._dnode* noundef %0) #27, !dbg !18041
  ret void, !dbg !18042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.400(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !18043 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18045, metadata !DIExpression()), !dbg !18046
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18047
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18048
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18049
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18050
  ret void, !dbg !18051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !18052 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18056, metadata !DIExpression()), !dbg !18058
  call void @llvm.dbg.value(metadata i32 %1, metadata !18057, metadata !DIExpression()), !dbg !18058
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18059
  %4 = load i8, i8* %3, align 1, !dbg !18059
  %5 = zext i8 %4 to i32, !dbg !18060
  %6 = and i32 %5, %1, !dbg !18061
  %7 = icmp ne i32 %6, 0, !dbg !18062
  ret i1 %7, !dbg !18063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.401(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !18064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18066, metadata !DIExpression()), !dbg !18068
  call void @llvm.dbg.value(metadata i32 %1, metadata !18067, metadata !DIExpression()), !dbg !18068
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.402(i32 noundef %0, i32 noundef %1) #27, !dbg !18069
  ret i1 %3, !dbg !18070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.402(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !18071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18073, metadata !DIExpression()), !dbg !18075
  call void @llvm.dbg.value(metadata i32 %1, metadata !18074, metadata !DIExpression()), !dbg !18075
  %3 = icmp slt i32 %0, %1, !dbg !18076
  ret i1 %3, !dbg !18077
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18078 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18080, metadata !DIExpression()), !dbg !18084
  call void @llvm.dbg.value(metadata i32 0, metadata !18081, metadata !DIExpression()), !dbg !18085
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18086
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18088, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18090
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18090
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18086
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18091
  br i1 %3, label %5, label %4, !dbg !18092

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18093
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18093
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18093
  unreachable, !dbg !18093

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18090
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18086
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18094
  call void @llvm.dbg.value(metadata i32 undef, metadata !18083, metadata !DIExpression()), !dbg !18085
  call void @llvm.dbg.value(metadata i32 undef, metadata !18081, metadata !DIExpression()), !dbg !18085
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !18095
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18100
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !18100
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18102
  br i1 %6, label %8, label %7, !dbg !18103

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18104
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18104
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18104
  unreachable, !dbg !18104

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !18088
  call void @llvm.dbg.value(metadata i32 %9, metadata !17576, metadata !DIExpression()) #25, !dbg !18090
  call void @llvm.dbg.value(metadata i32 %9, metadata !17570, metadata !DIExpression()) #25, !dbg !18086
  call void @llvm.dbg.value(metadata i32 %9, metadata !18083, metadata !DIExpression()), !dbg !18085
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18100
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !18105
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !18107, !srcloc !17618
  call void @llvm.dbg.value(metadata i32 1, metadata !18081, metadata !DIExpression()), !dbg !18085
  call void @llvm.dbg.value(metadata i32 undef, metadata !18081, metadata !DIExpression()), !dbg !18085
  ret void, !dbg !18108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18109 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18111, metadata !DIExpression()), !dbg !18112
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !18113
  br i1 %2, label %27, label %3, !dbg !18115

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !18116
  br i1 %4, label %5, label %27, !dbg !18117

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17773, metadata !DIExpression()) #25, !dbg !18118
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18121
  %7 = load i8, i8* %6, align 1, !dbg !18122
  %8 = or i8 %7, -128, !dbg !18122
  store i8 %8, i8* %6, align 1, !dbg !18122
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17780, metadata !DIExpression()) #25, !dbg !18123
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !17787, metadata !DIExpression()) #25, !dbg !18125
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17793, metadata !DIExpression()) #25, !dbg !18125
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !18127
  br i1 %9, label %10, label %11, !dbg !18128

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 186) #26, !dbg !18129
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 186) #26, !dbg !18129
  unreachable, !dbg !18129

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.396(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !18130
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !17794, metadata !DIExpression()) #25, !dbg !18125
  %13 = icmp eq %struct._dnode* %12, null, !dbg !18131
  br i1 %13, label %24, label %14, !dbg !18130

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !17794, metadata !DIExpression()) #25, !dbg !18125
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !18132
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !17794, metadata !DIExpression()) #25, !dbg !18125
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #26, !dbg !18133
  %18 = icmp sgt i32 %17, 0, !dbg !18134
  br i1 %18, label %19, label %21, !dbg !18135

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !18136
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #26, !dbg !18137
  br label %26, !dbg !18138

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #26, !dbg !18131
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !17794, metadata !DIExpression()) #25, !dbg !18125
  %23 = icmp eq %struct._dnode* %22, null, !dbg !18131
  br i1 %23, label %24, label %14, !dbg !18130, !llvm.loop !18139

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !18141
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #26, !dbg !18142
  br label %26, !dbg !18143

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !18144
  br label %27, !dbg !18145

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !18146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18147 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18149, metadata !DIExpression()), !dbg !18150
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !18151
  br i1 %2, label %6, label %3, !dbg !18152

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !18153
  %5 = xor i1 %4, true, !dbg !18152
  br label %6, !dbg !18152

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !18154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18155 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18157, metadata !DIExpression()), !dbg !18161
  call void @llvm.dbg.value(metadata i32 0, metadata !18158, metadata !DIExpression()), !dbg !18162
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18163
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18165, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18167
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18167
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18163
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18168
  br i1 %3, label %5, label %4, !dbg !18169

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18170
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18170
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18170
  unreachable, !dbg !18170

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18167
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18163
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18171
  call void @llvm.dbg.value(metadata i32 undef, metadata !18160, metadata !DIExpression()), !dbg !18162
  call void @llvm.dbg.value(metadata i32 undef, metadata !18158, metadata !DIExpression()), !dbg !18162
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !18172
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !18175
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18177
  br i1 %6, label %8, label %7, !dbg !18178

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18179
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18179
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18179
  unreachable, !dbg !18179

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !18165
  call void @llvm.dbg.value(metadata i32 %9, metadata !17576, metadata !DIExpression()) #25, !dbg !18167
  call void @llvm.dbg.value(metadata i32 %9, metadata !17570, metadata !DIExpression()) #25, !dbg !18163
  call void @llvm.dbg.value(metadata i32 %9, metadata !18160, metadata !DIExpression()), !dbg !18162
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18175
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !18180
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !18182, !srcloc !17618
  call void @llvm.dbg.value(metadata i32 1, metadata !18158, metadata !DIExpression()), !dbg !18162
  call void @llvm.dbg.value(metadata i32 undef, metadata !18158, metadata !DIExpression()), !dbg !18162
  ret void, !dbg !18183
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18184 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18186, metadata !DIExpression()), !dbg !18188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18189
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18191, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18193
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18193
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18189
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18194
  br i1 %3, label %5, label %4, !dbg !18195

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18196
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18196
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18196
  unreachable, !dbg !18196

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !18191
  call void @llvm.dbg.value(metadata i32 %6, metadata !17576, metadata !DIExpression()) #25, !dbg !18193
  call void @llvm.dbg.value(metadata i32 %6, metadata !17570, metadata !DIExpression()) #25, !dbg !18189
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18197
  call void @llvm.dbg.value(metadata i32 %6, metadata !18187, metadata !DIExpression()), !dbg !18188
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !18198
  br i1 %7, label %8, label %12, !dbg !18200

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18201
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !18201
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18204
  br i1 %9, label %11, label %10, !dbg !18205

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18206
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18206
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18206
  unreachable, !dbg !18206

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !17598, metadata !DIExpression()) #25, !dbg !18201
  call void @llvm.dbg.value(metadata i32 %6, metadata !17612, metadata !DIExpression()) #25, !dbg !18207
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !18209, !srcloc !17618
  br label %14, !dbg !18210

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.407(%struct.k_thread* noundef %0) #27, !dbg !18211
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !18212
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !18213
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #27, !dbg !18213
  br label %14, !dbg !18214

14:                                               ; preds = %12, %11
  ret void, !dbg !18214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18215 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18217, metadata !DIExpression()), !dbg !18218
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18219
  %3 = load i8, i8* %2, align 1, !dbg !18219
  %4 = and i8 %3, 4, !dbg !18220
  %5 = icmp eq i8 %4, 0, !dbg !18221
  ret i1 %5, !dbg !18222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.407(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !18223 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18225, metadata !DIExpression()), !dbg !18226
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18227
  %3 = load i8, i8* %2, align 1, !dbg !18228
  %4 = and i8 %3, -5, !dbg !18228
  store i8 %4, i8* %2, align 1, !dbg !18228
  ret void, !dbg !18229
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !18230 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !18233, metadata !DIExpression()), !dbg !18234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18232, metadata !DIExpression()), !dbg !18234
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !18235
  br i1 %4, label %5, label %12, !dbg !18237

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !18238
  br i1 %6, label %7, label %12, !dbg !18239

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !18240, metadata !DIExpression()) #25, !dbg !18246
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18245, metadata !DIExpression()) #25, !dbg !18246
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18249, metadata !DIExpression()) #25, !dbg !18254
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !18256
  br i1 %8, label %10, label %9, !dbg !18259

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 225) #26, !dbg !18260
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !18260
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 225) #26, !dbg !18260
  unreachable, !dbg !18260

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !18240, metadata !DIExpression()) #25, !dbg !18246
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !18262
  br label %16, !dbg !18263

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17603, metadata !DIExpression()) #25, !dbg !18264
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !18267
  br i1 %13, label %15, label %14, !dbg !18268

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18269
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !18269
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18269
  unreachable, !dbg !18269

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !17598, metadata !DIExpression()) #25, !dbg !18264
  call void @llvm.dbg.value(metadata i32 %3, metadata !17612, metadata !DIExpression()) #25, !dbg !18270
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18272, !srcloc !17618
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !18273
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !18274 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18278, metadata !DIExpression()), !dbg !18279
  call void @llvm.dbg.value(metadata i32 %0, metadata !18280, metadata !DIExpression()), !dbg !18285
  %2 = icmp eq i32 %0, 0, !dbg !18287
  br i1 %2, label %3, label %6, !dbg !18288

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18289, !srcloc !18296
  call void @llvm.dbg.value(metadata i32 %4, metadata !18292, metadata !DIExpression()) #25, !dbg !18297
  %5 = icmp eq i32 %4, 0, !dbg !18298
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !18279
  ret i1 %7, !dbg !18299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !18300 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !18303
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18302, metadata !DIExpression()), !dbg !18304
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18305
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !18306
  ret i1 %3, !dbg !18307
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !18308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18310, metadata !DIExpression()), !dbg !18312
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !18313
  call void @llvm.dbg.value(metadata i32 %2, metadata !18311, metadata !DIExpression()), !dbg !18312
  ret i32 %2, !dbg !18314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18315 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18317, metadata !DIExpression()), !dbg !18321
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !18322
  call void @llvm.dbg.value(metadata i32 0, metadata !18318, metadata !DIExpression()), !dbg !18323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18324
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18326, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18328
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18328
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18324
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18329
  br i1 %4, label %6, label %5, !dbg !18330

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18331
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18331
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18331
  unreachable, !dbg !18331

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !18326
  call void @llvm.dbg.value(metadata i32 %7, metadata !17576, metadata !DIExpression()) #25, !dbg !18328
  call void @llvm.dbg.value(metadata i32 %7, metadata !17570, metadata !DIExpression()) #25, !dbg !18324
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18332
  call void @llvm.dbg.value(metadata i32 %7, metadata !18320, metadata !DIExpression()), !dbg !18323
  call void @llvm.dbg.value(metadata i32 undef, metadata !18318, metadata !DIExpression()), !dbg !18323
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !18333
  br i1 %8, label %9, label %13, !dbg !18337

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17756, metadata !DIExpression()) #25, !dbg !18338
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18341
  %11 = load i8, i8* %10, align 1, !dbg !18342
  %12 = and i8 %11, 127, !dbg !18342
  store i8 %12, i8* %10, align 1, !dbg !18342
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17764, metadata !DIExpression()) #25, !dbg !18343
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !18345
  br label %13, !dbg !18346

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !18347
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18348
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !18349
  %16 = zext i1 %15 to i32, !dbg !18349
  tail call fastcc void @update_cache(i32 noundef %16) #27, !dbg !18350
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18351
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !18351
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18353
  br i1 %17, label %19, label %18, !dbg !18354

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18355
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18355
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18355
  unreachable, !dbg !18355

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !17598, metadata !DIExpression()) #25, !dbg !18351
  call void @llvm.dbg.value(metadata i32 %7, metadata !17612, metadata !DIExpression()) #25, !dbg !18356
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !18358, !srcloc !17618
  call void @llvm.dbg.value(metadata i32 1, metadata !18318, metadata !DIExpression()), !dbg !18323
  call void @llvm.dbg.value(metadata i32 undef, metadata !18318, metadata !DIExpression()), !dbg !18323
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18359
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !18361
  br i1 %21, label %22, label %23, !dbg !18362

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !18363
  br label %23, !dbg !18365

23:                                               ; preds = %22, %19
  ret void, !dbg !18366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18367 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18369, metadata !DIExpression()), !dbg !18370
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !18371
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !18372
  ret i32 %3, !dbg !18373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !18374 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18376, metadata !DIExpression()), !dbg !18377
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18378
  %3 = load i8, i8* %2, align 1, !dbg !18379
  %4 = or i8 %3, 16, !dbg !18379
  store i8 %4, i8* %2, align 1, !dbg !18379
  ret void, !dbg !18380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !18381 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18382, !srcloc !17579
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18382
  call void @llvm.dbg.value(metadata i32 %2, metadata !17576, metadata !DIExpression()) #25, !dbg !18384
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18384
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !18385
  ret void, !dbg !18386
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !18387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18389, metadata !DIExpression()), !dbg !18390
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !18391
  br i1 %2, label %3, label %5, !dbg !18393

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !18394
  br label %6, !dbg !18396

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !17612, metadata !DIExpression()) #25, !dbg !18397
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !18400, !srcloc !17618
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !18401
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18402 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18404, metadata !DIExpression()), !dbg !18406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18407
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18409, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18411
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18411
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18407
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18412
  br i1 %3, label %5, label %4, !dbg !18413

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18414
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18414
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18414
  unreachable, !dbg !18414

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !18409
  call void @llvm.dbg.value(metadata i32 %6, metadata !17576, metadata !DIExpression()) #25, !dbg !18411
  call void @llvm.dbg.value(metadata i32 %6, metadata !17570, metadata !DIExpression()) #25, !dbg !18407
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18415
  call void @llvm.dbg.value(metadata i32 %6, metadata !18405, metadata !DIExpression()), !dbg !18406
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !18416
  br i1 %7, label %12, label %8, !dbg !18418

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18419
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !18419
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18422
  br i1 %9, label %11, label %10, !dbg !18423

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18424
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18424
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18424
  unreachable, !dbg !18424

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !17598, metadata !DIExpression()) #25, !dbg !18419
  call void @llvm.dbg.value(metadata i32 %6, metadata !17612, metadata !DIExpression()) #25, !dbg !18425
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !18427, !srcloc !17618
  br label %14, !dbg !18428

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !18429
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !18430
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !18431
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #27, !dbg !18431
  br label %14, !dbg !18432

14:                                               ; preds = %12, %11
  ret void, !dbg !18432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18433 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18435, metadata !DIExpression()), !dbg !18436
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18437
  %3 = load i8, i8* %2, align 1, !dbg !18437
  %4 = and i8 %3, 16, !dbg !18438
  %5 = icmp ne i8 %4, 0, !dbg !18439
  ret i1 %5, !dbg !18440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !18441 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18443, metadata !DIExpression()), !dbg !18444
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18445
  %3 = load i8, i8* %2, align 1, !dbg !18446
  %4 = and i8 %3, -17, !dbg !18446
  store i8 %4, i8* %2, align 1, !dbg !18446
  ret void, !dbg !18447
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18448 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18458, metadata !DIExpression()), !dbg !18462
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18456, metadata !DIExpression()), !dbg !18462
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !18457, metadata !DIExpression()), !dbg !18462
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18463
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !18463
  br i1 %5, label %9, label %6, !dbg !18463

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #27, !dbg !18463
  br i1 %7, label %9, label %8, !dbg !18466

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 773) #26, !dbg !18467
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 773) #26, !dbg !18467
  unreachable, !dbg !18467

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !18459, metadata !DIExpression()), !dbg !18469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18470
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18472, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18474
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18474
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18470
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18475
  br i1 %11, label %13, label %12, !dbg !18476

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18477
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18477
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18477
  unreachable, !dbg !18477

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18474
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18470
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18478
  call void @llvm.dbg.value(metadata i32 undef, metadata !18461, metadata !DIExpression()), !dbg !18469
  call void @llvm.dbg.value(metadata i32 undef, metadata !18459, metadata !DIExpression()), !dbg !18469
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !18479
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !18482
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18484
  br i1 %14, label %16, label %15, !dbg !18485

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18486
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18486
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18486
  unreachable, !dbg !18486

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !18472
  call void @llvm.dbg.value(metadata i32 %17, metadata !17576, metadata !DIExpression()) #25, !dbg !18474
  call void @llvm.dbg.value(metadata i32 %17, metadata !17570, metadata !DIExpression()) #25, !dbg !18470
  call void @llvm.dbg.value(metadata i32 %17, metadata !18461, metadata !DIExpression()), !dbg !18469
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18482
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !18487
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #25, !dbg !18489, !srcloc !17618
  call void @llvm.dbg.value(metadata i32 1, metadata !18459, metadata !DIExpression()), !dbg !18469
  call void @llvm.dbg.value(metadata i32 undef, metadata !18459, metadata !DIExpression()), !dbg !18469
  ret void, !dbg !18490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18491 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18493, metadata !DIExpression()), !dbg !18494
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18495
  %3 = load i8, i8* %2, align 1, !dbg !18495
  %4 = and i8 %3, 1, !dbg !18496
  %5 = icmp ne i8 %4, 0, !dbg !18497
  ret i1 %5, !dbg !18498
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !18499 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18503, metadata !DIExpression()), !dbg !18504
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18501, metadata !DIExpression()), !dbg !18504
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !18502, metadata !DIExpression()), !dbg !18504
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #27, !dbg !18505
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !18506
  ret void, !dbg !18507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !18508 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18512, metadata !DIExpression()), !dbg !18514
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !18513, metadata !DIExpression()), !dbg !18514
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !18515
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !18516
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !18517
  br i1 %3, label %24, label %4, !dbg !18519

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18520
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !18522
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !18523
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !17787, metadata !DIExpression()) #25, !dbg !18524
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17793, metadata !DIExpression()) #25, !dbg !18524
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !18526
  br i1 %7, label %8, label %9, !dbg !18527

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 186) #26, !dbg !18528
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 186) #26, !dbg !18528
  unreachable, !dbg !18528

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.396(%struct._dnode* noundef nonnull %6) #26, !dbg !18529
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !17794, metadata !DIExpression()) #25, !dbg !18524
  %11 = icmp eq %struct._dnode* %10, null, !dbg !18530
  br i1 %11, label %22, label %12, !dbg !18529

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !17794, metadata !DIExpression()) #25, !dbg !18524
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !18531
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !17794, metadata !DIExpression()) #25, !dbg !18524
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #26, !dbg !18532
  %16 = icmp sgt i32 %15, 0, !dbg !18533
  br i1 %16, label %17, label %19, !dbg !18534

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !18535
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !18536
  br label %24, !dbg !18537

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #26, !dbg !18530
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !17794, metadata !DIExpression()) #25, !dbg !18524
  %21 = icmp eq %struct._dnode* %20, null, !dbg !18530
  br i1 %21, label %22, label %12, !dbg !18529, !llvm.loop !18538

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !18540
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #26, !dbg !18541
  br label %24, !dbg !18542

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !18543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !18544 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !18549, metadata !DIExpression()), !dbg !18550
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18548, metadata !DIExpression()), !dbg !18550
  %4 = icmp eq i64 %3, -1, !dbg !18551
  br i1 %4, label %6, label %5, !dbg !18553

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.411(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !18554
  br label %6, !dbg !18556

6:                                                ; preds = %5, %2
  ret void, !dbg !18557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.411(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !18558 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18561, metadata !DIExpression()), !dbg !18562
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18560, metadata !DIExpression()), !dbg !18562
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !18563
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !18564
  ret void, !dbg !18565
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !18566 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18568, metadata !DIExpression()), !dbg !18576
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !18577
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !18577
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !18569, metadata !DIExpression()), !dbg !18576
  call void @llvm.dbg.value(metadata i32 0, metadata !18570, metadata !DIExpression()), !dbg !18578
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18579
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18581, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18583
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18583
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18579
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18584
  br i1 %5, label %7, label %6, !dbg !18585

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18586
  unreachable, !dbg !18586

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18583
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18579
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18587
  call void @llvm.dbg.value(metadata i32 undef, metadata !18572, metadata !DIExpression()), !dbg !18578
  call void @llvm.dbg.value(metadata i32 undef, metadata !18570, metadata !DIExpression()), !dbg !18578
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !18588
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !18589
  %10 = load i8, i8* %9, align 1, !dbg !18589
  %11 = and i8 %10, 40, !dbg !18590
  %12 = icmp eq i8 %11, 0, !dbg !18590
  call void @llvm.dbg.value(metadata i1 %12, metadata !18573, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18591
  br i1 %12, label %13, label %20, !dbg !18592

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !18593
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !18593
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !18593
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !18597
  br i1 %17, label %19, label %18, !dbg !18598

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !18599
  br label %19, !dbg !18601

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.407(%struct.k_thread* noundef nonnull %3) #27, !dbg !18602
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !18603
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !18604
  br label %20, !dbg !18605

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18606
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !18606
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18608
  br i1 %21, label %23, label %22, !dbg !18609

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18610
  unreachable, !dbg !18610

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !18581
  call void @llvm.dbg.value(metadata i32 %24, metadata !17576, metadata !DIExpression()) #25, !dbg !18583
  call void @llvm.dbg.value(metadata i32 %24, metadata !17570, metadata !DIExpression()) #25, !dbg !18579
  call void @llvm.dbg.value(metadata i32 %24, metadata !18572, metadata !DIExpression()), !dbg !18578
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18606
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !18611
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !18613, !srcloc !17618
  call void @llvm.dbg.value(metadata i32 1, metadata !18570, metadata !DIExpression()), !dbg !18578
  call void @llvm.dbg.value(metadata i32 undef, metadata !18570, metadata !DIExpression()), !dbg !18578
  ret void, !dbg !18614
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18615 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18617, metadata !DIExpression()), !dbg !18618
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #27, !dbg !18619
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !18620
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !18621
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18622
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !18623
  ret void, !dbg !18624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !18625 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18629, metadata !DIExpression()), !dbg !18630
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18631
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !18631
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !18631
  br i1 %4, label %5, label %6, !dbg !18634

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.414, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 726) #26, !dbg !18635
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 726) #26, !dbg !18635
  unreachable, !dbg !18635

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !18637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !18638 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18640, metadata !DIExpression()), !dbg !18641
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18642
  %3 = load i8, i8* %2, align 1, !dbg !18643
  %4 = and i8 %3, -3, !dbg !18643
  store i8 %4, i8* %2, align 1, !dbg !18643
  ret void, !dbg !18644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18645 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18647, metadata !DIExpression()), !dbg !18648
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !18649
  br i1 %2, label %3, label %7, !dbg !18651

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17756, metadata !DIExpression()) #25, !dbg !18652
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18655
  %5 = load i8, i8* %4, align 1, !dbg !18656
  %6 = and i8 %5, 127, !dbg !18656
  store i8 %6, i8* %4, align 1, !dbg !18656
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17764, metadata !DIExpression()) #25, !dbg !18657
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !18659
  br label %7, !dbg !18660

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18661
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !18662
  %10 = zext i1 %9 to i32, !dbg !18662
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !18663
  ret void, !dbg !18664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !18665 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18667, metadata !DIExpression()), !dbg !18668
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18669
  %3 = load i8, i8* %2, align 1, !dbg !18670
  %4 = or i8 %3, 2, !dbg !18670
  store i8 %4, i8* %2, align 1, !dbg !18670
  ret void, !dbg !18671
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #24 !dbg !18672 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18674, metadata !DIExpression()), !dbg !18678
  call void @llvm.dbg.value(metadata i32 0, metadata !18675, metadata !DIExpression()), !dbg !18679
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18680
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18682, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18684
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18684
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18680
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18685
  br i1 %3, label %5, label %4, !dbg !18686

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18687
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18687
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18687
  unreachable, !dbg !18687

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18684
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18680
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18688
  call void @llvm.dbg.value(metadata i32 undef, metadata !18677, metadata !DIExpression()), !dbg !18679
  call void @llvm.dbg.value(metadata i32 undef, metadata !18675, metadata !DIExpression()), !dbg !18679
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !18689
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18692
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !18692
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18694
  br i1 %6, label %8, label %7, !dbg !18695

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18696
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18696
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18696
  unreachable, !dbg !18696

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !18682
  call void @llvm.dbg.value(metadata i32 %9, metadata !17576, metadata !DIExpression()) #25, !dbg !18684
  call void @llvm.dbg.value(metadata i32 %9, metadata !17570, metadata !DIExpression()) #25, !dbg !18680
  call void @llvm.dbg.value(metadata i32 %9, metadata !18677, metadata !DIExpression()), !dbg !18679
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18692
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !18697
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !18699, !srcloc !17618
  call void @llvm.dbg.value(metadata i32 1, metadata !18675, metadata !DIExpression()), !dbg !18679
  call void @llvm.dbg.value(metadata i32 undef, metadata !18675, metadata !DIExpression()), !dbg !18679
  ret void, !dbg !18700
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18701 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18707, metadata !DIExpression()), !dbg !18712
  call void @llvm.dbg.value(metadata i32 %0, metadata !18705, metadata !DIExpression()), !dbg !18712
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !18706, metadata !DIExpression()), !dbg !18712
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18713
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !18714
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18715
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !18716
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !18717
  call void @llvm.dbg.value(metadata i32 %6, metadata !18708, metadata !DIExpression()), !dbg !18712
  call void @llvm.dbg.value(metadata i32 0, metadata !18709, metadata !DIExpression()), !dbg !18718
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18719
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18721, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18723
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18723
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18719
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18724
  br i1 %8, label %10, label %9, !dbg !18725

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18726
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18726
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18726
  unreachable, !dbg !18726

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18723
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18719
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18727
  call void @llvm.dbg.value(metadata i32 undef, metadata !18711, metadata !DIExpression()), !dbg !18718
  call void @llvm.dbg.value(metadata i32 undef, metadata !18709, metadata !DIExpression()), !dbg !18718
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !18728
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18732
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !18733
  br i1 %13, label %14, label %15, !dbg !18734

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !18735
  br label %15, !dbg !18737

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18738
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !18738
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18740
  br i1 %16, label %18, label %17, !dbg !18741

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18742
  unreachable, !dbg !18742

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !18721
  call void @llvm.dbg.value(metadata i32 %19, metadata !17576, metadata !DIExpression()) #25, !dbg !18723
  call void @llvm.dbg.value(metadata i32 %19, metadata !17570, metadata !DIExpression()) #25, !dbg !18719
  call void @llvm.dbg.value(metadata i32 %19, metadata !18711, metadata !DIExpression()), !dbg !18718
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18738
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !18743
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #25, !dbg !18745, !srcloc !17618
  call void @llvm.dbg.value(metadata i32 1, metadata !18709, metadata !DIExpression()), !dbg !18718
  call void @llvm.dbg.value(metadata i32 undef, metadata !18709, metadata !DIExpression()), !dbg !18718
  ret i32 %6, !dbg !18746
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18747 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18752, metadata !DIExpression()), !dbg !18755
  call void @llvm.dbg.value(metadata i64 undef, metadata !18754, metadata !DIExpression()), !dbg !18755
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18751, metadata !DIExpression()), !dbg !18755
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !18753, metadata !DIExpression()), !dbg !18755
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18756
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !18757
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !18758
  br i1 %6, label %7, label %8, !dbg !18761

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.417, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 846) #26, !dbg !18762
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 846) #26, !dbg !18762
  unreachable, !dbg !18762

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18764
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18766, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18768
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18768
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18764
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18769
  br i1 %10, label %12, label %11, !dbg !18770

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18771
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18771
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18771
  unreachable, !dbg !18771

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18768
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18764
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18772
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18773
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !18774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18249, metadata !DIExpression()) #25, !dbg !18775
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !18777
  br i1 %14, label %16, label %15, !dbg !18778

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 225) #26, !dbg !18779
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !18779
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 225) #26, !dbg !18779
  unreachable, !dbg !18779

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !18240, metadata !DIExpression()) #25, !dbg !18780
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18245, metadata !DIExpression()) #25, !dbg !18780
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18249, metadata !DIExpression()) #25, !dbg !18782
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18784
  br i1 %17, label %19, label %18, !dbg !18785

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 225) #26, !dbg !18786
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18786
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 225) #26, !dbg !18786
  unreachable, !dbg !18786

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !18240, metadata !DIExpression()) #25, !dbg !18780
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #26, !dbg !18787
  ret i32 %21, !dbg !18788
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !18789 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18793, metadata !DIExpression()), !dbg !18798
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18794, metadata !DIExpression()), !dbg !18798
  call void @llvm.dbg.value(metadata i32 0, metadata !18795, metadata !DIExpression()), !dbg !18799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18800
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18802, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18804
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18804
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18800
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18805
  br i1 %3, label %5, label %4, !dbg !18806

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18807
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18807
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18807
  unreachable, !dbg !18807

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18804
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18800
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18808
  call void @llvm.dbg.value(metadata i32 undef, metadata !18797, metadata !DIExpression()), !dbg !18799
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18794, metadata !DIExpression()), !dbg !18798
  call void @llvm.dbg.value(metadata i32 undef, metadata !18795, metadata !DIExpression()), !dbg !18799
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #27, !dbg !18809
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !18794, metadata !DIExpression()), !dbg !18798
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !18812
  br i1 %8, label %10, label %9, !dbg !18814

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !18815
  br label %10, !dbg !18817

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18818
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !18818
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18820
  br i1 %11, label %13, label %12, !dbg !18821

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18822
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18822
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18822
  unreachable, !dbg !18822

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !18802
  call void @llvm.dbg.value(metadata i32 %14, metadata !17576, metadata !DIExpression()) #25, !dbg !18804
  call void @llvm.dbg.value(metadata i32 %14, metadata !17570, metadata !DIExpression()) #25, !dbg !18800
  call void @llvm.dbg.value(metadata i32 %14, metadata !18797, metadata !DIExpression()), !dbg !18799
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18818
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !18823
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !18825, !srcloc !17618
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !18794, metadata !DIExpression()), !dbg !18798
  call void @llvm.dbg.value(metadata i32 undef, metadata !18795, metadata !DIExpression()), !dbg !18799
  ret %struct.k_thread* %7, !dbg !18826
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !18827 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18829, metadata !DIExpression()), !dbg !18834
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18830, metadata !DIExpression()), !dbg !18834
  call void @llvm.dbg.value(metadata i32 0, metadata !18831, metadata !DIExpression()), !dbg !18835
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18836
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18838, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18840
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18840
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18836
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18841
  br i1 %3, label %5, label %4, !dbg !18842

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18843
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18843
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18843
  unreachable, !dbg !18843

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18840
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18836
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18844
  call void @llvm.dbg.value(metadata i32 undef, metadata !18833, metadata !DIExpression()), !dbg !18835
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18830, metadata !DIExpression()), !dbg !18834
  call void @llvm.dbg.value(metadata i32 undef, metadata !18831, metadata !DIExpression()), !dbg !18835
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #27, !dbg !18845
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !18830, metadata !DIExpression()), !dbg !18834
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !18848
  br i1 %8, label %11, label %9, !dbg !18850

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !18851
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !18853
  br label %11, !dbg !18854

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !18855
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18857
  br i1 %12, label %14, label %13, !dbg !18858

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18859
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18859
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18859
  unreachable, !dbg !18859

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !18838
  call void @llvm.dbg.value(metadata i32 %15, metadata !17576, metadata !DIExpression()) #25, !dbg !18840
  call void @llvm.dbg.value(metadata i32 %15, metadata !17570, metadata !DIExpression()) #25, !dbg !18836
  call void @llvm.dbg.value(metadata i32 %15, metadata !18833, metadata !DIExpression()), !dbg !18835
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18855
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !18860
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !18862, !srcloc !17618
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !18830, metadata !DIExpression()), !dbg !18834
  call void @llvm.dbg.value(metadata i32 undef, metadata !18831, metadata !DIExpression()), !dbg !18835
  ret %struct.k_thread* %7, !dbg !18863
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18864 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18866, metadata !DIExpression()), !dbg !18867
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18674, metadata !DIExpression()) #25, !dbg !18868
  call void @llvm.dbg.value(metadata i32 0, metadata !18675, metadata !DIExpression()) #25, !dbg !18870
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18871
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18873, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18875
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18875
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18871
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18876
  br i1 %3, label %5, label %4, !dbg !18877

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18878
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18878
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18878
  unreachable, !dbg !18878

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18875
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18871
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18879
  call void @llvm.dbg.value(metadata i32 undef, metadata !18677, metadata !DIExpression()) #25, !dbg !18870
  call void @llvm.dbg.value(metadata i32 undef, metadata !18675, metadata !DIExpression()) #25, !dbg !18870
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !18880
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18881
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !18881
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18883
  br i1 %6, label %8, label %7, !dbg !18884

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18885
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18885
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18885
  unreachable, !dbg !18885

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !18873
  call void @llvm.dbg.value(metadata i32 %9, metadata !17576, metadata !DIExpression()) #25, !dbg !18875
  call void @llvm.dbg.value(metadata i32 %9, metadata !17570, metadata !DIExpression()) #25, !dbg !18871
  call void @llvm.dbg.value(metadata i32 %9, metadata !18677, metadata !DIExpression()) #25, !dbg !18870
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18881
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !18886
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !18888, !srcloc !17618
  call void @llvm.dbg.value(metadata i32 1, metadata !18675, metadata !DIExpression()) #25, !dbg !18870
  call void @llvm.dbg.value(metadata i32 undef, metadata !18675, metadata !DIExpression()) #25, !dbg !18870
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !18889
  ret void, !dbg !18890
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18891 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18893, metadata !DIExpression()), !dbg !18899
  call void @llvm.dbg.value(metadata i32 %1, metadata !18894, metadata !DIExpression()), !dbg !18899
  call void @llvm.dbg.value(metadata i8 0, metadata !18895, metadata !DIExpression()), !dbg !18899
  call void @llvm.dbg.value(metadata i32 0, metadata !18896, metadata !DIExpression()), !dbg !18900
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18901
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18903, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18905
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18905
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18901
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18906
  br i1 %4, label %6, label %5, !dbg !18907

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18908
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18908
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18908
  unreachable, !dbg !18908

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18905
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18901
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18909
  call void @llvm.dbg.value(metadata i32 undef, metadata !18898, metadata !DIExpression()), !dbg !18900
  call void @llvm.dbg.value(metadata i8 poison, metadata !18895, metadata !DIExpression()), !dbg !18899
  call void @llvm.dbg.value(metadata i32 undef, metadata !18896, metadata !DIExpression()), !dbg !18900
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !18910
  call void @llvm.dbg.value(metadata i1 %9, metadata !18895, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18899
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !18913

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17756, metadata !DIExpression()) #25, !dbg !18914
  %14 = load i8, i8* %7, align 1, !dbg !18920
  %15 = and i8 %14, 127, !dbg !18920
  store i8 %15, i8* %7, align 1, !dbg !18920
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17764, metadata !DIExpression()) #25, !dbg !18921
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !18923
  store i8 %12, i8* %11, align 2, !dbg !18924
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17773, metadata !DIExpression()) #25, !dbg !18925
  %16 = load i8, i8* %7, align 1, !dbg !18927
  %17 = or i8 %16, -128, !dbg !18927
  store i8 %17, i8* %7, align 1, !dbg !18927
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17780, metadata !DIExpression()) #25, !dbg !18928
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !17787, metadata !DIExpression()) #25, !dbg !18930
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17793, metadata !DIExpression()) #25, !dbg !18930
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !18932
  br i1 %18, label %19, label %20, !dbg !18933

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 186) #26, !dbg !18934
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 186) #26, !dbg !18934
  unreachable, !dbg !18934

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.396(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !18935
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !17794, metadata !DIExpression()) #25, !dbg !18930
  %22 = icmp eq %struct._dnode* %21, null, !dbg !18936
  br i1 %22, label %32, label %23, !dbg !18935

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !17794, metadata !DIExpression()) #25, !dbg !18930
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !18937
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !17794, metadata !DIExpression()) #25, !dbg !18930
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #26, !dbg !18938
  %27 = icmp sgt i32 %26, 0, !dbg !18939
  br i1 %27, label %28, label %29, !dbg !18940

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #26, !dbg !18941
  br label %33, !dbg !18942

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #26, !dbg !18936
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !17794, metadata !DIExpression()) #25, !dbg !18930
  %31 = icmp eq %struct._dnode* %30, null, !dbg !18936
  br i1 %31, label %32, label %23, !dbg !18935, !llvm.loop !18943

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #26, !dbg !18945
  br label %33, !dbg !18946

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !18947
  br label %35, !dbg !18948

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !18949
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18951
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !18951
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18953
  br i1 %36, label %38, label %37, !dbg !18954

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18955
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18955
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !18955
  unreachable, !dbg !18955

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !18903
  call void @llvm.dbg.value(metadata i32 %39, metadata !17576, metadata !DIExpression()) #25, !dbg !18905
  call void @llvm.dbg.value(metadata i32 %39, metadata !17570, metadata !DIExpression()) #25, !dbg !18901
  call void @llvm.dbg.value(metadata i32 %39, metadata !18898, metadata !DIExpression()), !dbg !18900
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18951
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !18956
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #25, !dbg !18958, !srcloc !17618
  call void @llvm.dbg.value(metadata i8 poison, metadata !18895, metadata !DIExpression()), !dbg !18899
  call void @llvm.dbg.value(metadata i32 undef, metadata !18896, metadata !DIExpression()), !dbg !18900
  ret i1 %9, !dbg !18959
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18960 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18964, metadata !DIExpression()), !dbg !18967
  call void @llvm.dbg.value(metadata i32 %1, metadata !18965, metadata !DIExpression()), !dbg !18967
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !18968
  call void @llvm.dbg.value(metadata i1 %3, metadata !18966, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18967
  br i1 %3, label %4, label %12, !dbg !18969

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18971
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !18972
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !18972
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !18972
  %9 = load i8, i8* %8, align 1, !dbg !18972
  %10 = icmp eq i8 %9, 0, !dbg !18973
  br i1 %10, label %11, label %12, !dbg !18974

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !18975
  br label %12, !dbg !18977

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !18978
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !18979 {
  call void @llvm.dbg.value(metadata i32 0, metadata !18981, metadata !DIExpression()), !dbg !18984
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !18985
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18987, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18989
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !18989
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18985
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18990
  br i1 %2, label %4, label %3, !dbg !18991

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18992
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18992
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !18992
  unreachable, !dbg !18992

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !18989
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !18985
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18993
  call void @llvm.dbg.value(metadata i32 undef, metadata !18983, metadata !DIExpression()), !dbg !18984
  call void @llvm.dbg.value(metadata i32 undef, metadata !18981, metadata !DIExpression()), !dbg !18984
  tail call fastcc void @z_sched_lock() #27, !dbg !18994
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18997
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !18997
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18999
  br i1 %5, label %7, label %6, !dbg !19000

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !19001
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19001
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !19001
  unreachable, !dbg !19001

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !18987
  call void @llvm.dbg.value(metadata i32 %8, metadata !17576, metadata !DIExpression()) #25, !dbg !18989
  call void @llvm.dbg.value(metadata i32 %8, metadata !17570, metadata !DIExpression()) #25, !dbg !18985
  call void @llvm.dbg.value(metadata i32 %8, metadata !18983, metadata !DIExpression()), !dbg !18984
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !18997
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !19002
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !19004, !srcloc !17618
  call void @llvm.dbg.value(metadata i32 1, metadata !18981, metadata !DIExpression()), !dbg !18984
  call void @llvm.dbg.value(metadata i32 undef, metadata !18981, metadata !DIExpression()), !dbg !18984
  ret void, !dbg !19005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !19006 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19007, !srcloc !18296
  call void @llvm.dbg.value(metadata i32 %1, metadata !18292, metadata !DIExpression()) #25, !dbg !19012
  %2 = icmp eq i32 %1, 0, !dbg !19013
  br i1 %2, label %4, label %3, !dbg !19014

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.425, i32 0, i32 0), i32 noundef 253) #26, !dbg !19015
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.398, i32 0, i32 0)) #26, !dbg !19015
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.425, i32 0, i32 0), i32 noundef 253) #26, !dbg !19015
  unreachable, !dbg !19015

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19017
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !19017
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !19017
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !19017
  %9 = load i8, i8* %8, align 1, !dbg !19017
  %10 = icmp eq i8 %9, 1, !dbg !19017
  br i1 %10, label %11, label %12, !dbg !19020

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.426, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.425, i32 0, i32 0), i32 noundef 254) #26, !dbg !19021
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.398, i32 0, i32 0)) #26, !dbg !19021
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.425, i32 0, i32 0), i32 noundef 254) #26, !dbg !19021
  unreachable, !dbg !19021

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !19023
  store i8 %13, i8* %8, align 1, !dbg !19023
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !19024, !srcloc !19026
  ret void, !dbg !19027
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !19028 {
  call void @llvm.dbg.value(metadata i32 0, metadata !19030, metadata !DIExpression()), !dbg !19033
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !19034
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19036, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !19038
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !19038
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !19034
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19039
  br i1 %2, label %4, label %3, !dbg !19040

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !19041
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19041
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !19041
  unreachable, !dbg !19041

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !19038
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !19034
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19042
  call void @llvm.dbg.value(metadata i32 undef, metadata !19032, metadata !DIExpression()), !dbg !19033
  call void @llvm.dbg.value(metadata i32 undef, metadata !19030, metadata !DIExpression()), !dbg !19033
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19043
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !19043
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !19043
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !19043
  %9 = load i8, i8* %8, align 1, !dbg !19043
  %10 = icmp eq i8 %9, 0, !dbg !19043
  br i1 %10, label %11, label %12, !dbg !19048

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.429, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 999) #26, !dbg !19049
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.398, i32 0, i32 0)) #26, !dbg !19049
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 999) #26, !dbg !19049
  unreachable, !dbg !19049

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19051, !srcloc !18296
  call void @llvm.dbg.value(metadata i32 %13, metadata !18292, metadata !DIExpression()) #25, !dbg !19056
  %14 = icmp eq i32 %13, 0, !dbg !19057
  br i1 %14, label %16, label %15, !dbg !19058

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1000) #26, !dbg !19059
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.398, i32 0, i32 0)) #26, !dbg !19059
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1000) #26, !dbg !19059
  unreachable, !dbg !19059

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19061
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !19062
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !19062
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !19062
  %21 = load i8, i8* %20, align 1, !dbg !19063
  %22 = add i8 %21, 1, !dbg !19063
  store i8 %22, i8* %20, align 1, !dbg !19063
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !19064
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !19065
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !19065
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19067
  br i1 %23, label %25, label %24, !dbg !19068

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !19069
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19069
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !19069
  unreachable, !dbg !19069

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !19036
  call void @llvm.dbg.value(metadata i32 %26, metadata !17576, metadata !DIExpression()) #25, !dbg !19038
  call void @llvm.dbg.value(metadata i32 %26, metadata !17570, metadata !DIExpression()) #25, !dbg !19034
  call void @llvm.dbg.value(metadata i32 %26, metadata !19032, metadata !DIExpression()), !dbg !19033
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !19065
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !19070
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #25, !dbg !19072, !srcloc !17618
  call void @llvm.dbg.value(metadata i32 1, metadata !19030, metadata !DIExpression()), !dbg !19033
  call void @llvm.dbg.value(metadata i32 undef, metadata !19030, metadata !DIExpression()), !dbg !19033
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !19073
  ret void, !dbg !19074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !19075 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !19076
  ret %struct.k_thread* %1, !dbg !19077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !19078 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !19082, metadata !DIExpression()), !dbg !19087
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !19083, metadata !DIExpression()), !dbg !19087
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !19088
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !19084, metadata !DIExpression()), !dbg !19087
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !19089
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !19085, metadata !DIExpression()), !dbg !19087
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !19090
  call void @llvm.dbg.value(metadata i32 %5, metadata !19086, metadata !DIExpression()), !dbg !19087
  %6 = icmp sgt i32 %5, 0, !dbg !19091
  br i1 %6, label %17, label %7, !dbg !19093

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !19094
  br i1 %8, label %17, label %9, !dbg !19096

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !19097
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !19097
  %12 = load i32, i32* %11, align 8, !dbg !19097
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !19099
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !19099
  %15 = load i32, i32* %14, align 8, !dbg !19099
  %16 = icmp ult i32 %12, %15, !dbg !19100
  br label %17, !dbg !19101

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !19102
  ret i1 %18, !dbg !19103
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !19104 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !19121, metadata !DIExpression()), !dbg !19136
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !19122, metadata !DIExpression()), !dbg !19136
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !19137
  br i1 %4, label %5, label %6, !dbg !19140

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1179) #26, !dbg !19141
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1179) #26, !dbg !19141
  unreachable, !dbg !19141

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !19143
  %8 = load i32, i32* %7, align 4, !dbg !19144
  %9 = add nsw i32 %8, 1, !dbg !19144
  store i32 %9, i32* %7, align 4, !dbg !19144
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !19145
  store i32 %8, i32* %10, align 8, !dbg !19146
  %11 = load i32, i32* %7, align 4, !dbg !19147
  %12 = icmp eq i32 %11, 0, !dbg !19148
  br i1 %12, label %13, label %35, !dbg !19149

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !19150
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #25, !dbg !19150
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !19124, metadata !DIExpression()), !dbg !19150
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !19150
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !19150
  %17 = load i32, i32* %16, align 4, !dbg !19150
  %18 = shl i32 %17, 2, !dbg !19150
  %19 = alloca i8, i32 %18, align 8, !dbg !19150
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !19150
  store i8* %19, i8** %20, align 4, !dbg !19150
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !19150
  %22 = alloca i8, i32 %17, align 8, !dbg !19150
  store i8* %22, i8** %21, align 4, !dbg !19150
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !19150
  store i32 -1, i32* %23, align 4, !dbg !19150
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !19151
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !19133, metadata !DIExpression()), !dbg !19152
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !19123, metadata !DIExpression()), !dbg !19136
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !19153
  br i1 %25, label %26, label %27, !dbg !19150

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #25, !dbg !19153
  br label %35, !dbg !19154

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !19123, metadata !DIExpression()), !dbg !19136
  %29 = load i32, i32* %7, align 4, !dbg !19155
  %30 = add nsw i32 %29, 1, !dbg !19155
  store i32 %30, i32* %7, align 4, !dbg !19155
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !19157
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !19157
  store i32 %29, i32* %32, align 8, !dbg !19158
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !19151
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !19133, metadata !DIExpression()), !dbg !19152
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !19123, metadata !DIExpression()), !dbg !19136
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !19153
  br i1 %34, label %26, label %27, !dbg !19150, !llvm.loop !19159

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !19161
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !19162
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #26, !dbg !19163
  ret void, !dbg !19164
}

; Function Attrs: optsize
declare !dbg !19165 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !19170 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !19173 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !19175, metadata !DIExpression()), !dbg !19177
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !19176, metadata !DIExpression()), !dbg !19177
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !19178
  br i1 %3, label %4, label %5, !dbg !19181

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1200) #26, !dbg !19182
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1200) #26, !dbg !19182
  unreachable, !dbg !19182

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !19184
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !19185
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #26, !dbg !19186
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !19187
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !19187
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !19189
  br i1 %10, label %11, label %13, !dbg !19190

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !19191
  store i32 0, i32* %12, align 4, !dbg !19193
  br label %13, !dbg !19194

13:                                               ; preds = %11, %5
  ret void, !dbg !19195
}

; Function Attrs: optsize
declare !dbg !19196 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !19197 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !19201, metadata !DIExpression()), !dbg !19204
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !19202, metadata !DIExpression()), !dbg !19204
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !19205
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !19206
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !19203, metadata !DIExpression()), !dbg !19204
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !19202, metadata !DIExpression()), !dbg !19204
  ret %struct.k_thread* %4, !dbg !19207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !19208 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !19212, metadata !DIExpression()), !dbg !19213
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !19214
  ret %struct.rbnode* %2, !dbg !19215
}

; Function Attrs: optsize
declare !dbg !19216 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !19219 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !19229, metadata !DIExpression()), !dbg !19233
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !19234
  %3 = load i32, i32* %2, align 4, !dbg !19234
  %4 = icmp eq i32 %3, 0, !dbg !19236
  br i1 %4, label %10, label %5, !dbg !19237

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !19230, metadata !DIExpression()), !dbg !19233
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !19238, !range !5828
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !19239
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !19231, metadata !DIExpression()), !dbg !19233
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.396(%struct._dnode* noundef %7) #27, !dbg !19240
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !19232, metadata !DIExpression()), !dbg !19233
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !19230, metadata !DIExpression()), !dbg !19233
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !19233
  ret %struct.k_thread* %11, !dbg !19241
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !19242 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !19246, metadata !DIExpression()), !dbg !19249
  call void @llvm.dbg.value(metadata i32 0, metadata !19247, metadata !DIExpression()), !dbg !19249
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.430(%struct._wait_q_t* noundef %0) #27, !dbg !19250
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !19248, metadata !DIExpression()), !dbg !19249
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !19251
  br i1 %3, label %8, label %4, !dbg !19252

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !19253
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !19255
  call void @llvm.dbg.value(metadata i32 1, metadata !19247, metadata !DIExpression()), !dbg !19249
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.430(%struct._wait_q_t* noundef %0) #27, !dbg !19250
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !19248, metadata !DIExpression()), !dbg !19249
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !19251
  br i1 %7, label %8, label %4, !dbg !19252, !llvm.loop !19256

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !19249
  ret i32 %9, !dbg !19258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.430(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !19259 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !19261, metadata !DIExpression()), !dbg !19262
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !19263
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.396(%struct._dnode* noundef %2) #27, !dbg !19264
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !19265
  ret %struct.k_thread* %4, !dbg !19266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !19267 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !19276, metadata !DIExpression()), !dbg !19277
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !19278
  tail call fastcc void @sys_dlist_init.431(%struct._dnode* noundef nonnull %2) #27, !dbg !19279
  ret void, !dbg !19280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.431(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !19281 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19285, metadata !DIExpression()), !dbg !19286
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19287
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !19288
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19289
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !19290
  ret void, !dbg !19291
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !19292 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !19293
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !19294
  ret void, !dbg !19295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !19296 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19301, metadata !DIExpression()), !dbg !19302
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !19303
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !19303
  %4 = load i8, i8* %3, align 2, !dbg !19303
  %5 = sext i8 %4 to i32, !dbg !19304
  ret i32 %5, !dbg !19305
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !19306 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19310, metadata !DIExpression()), !dbg !19313
  call void @llvm.dbg.value(metadata i32 %1, metadata !19311, metadata !DIExpression()), !dbg !19313
  %3 = add i32 %1, 16, !dbg !19314
  %4 = icmp ult i32 %3, 31, !dbg !19314
  br i1 %4, label %6, label %5, !dbg !19314

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1331) #26, !dbg !19318
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.435, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #26, !dbg !19318
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1331) #26, !dbg !19318
  unreachable, !dbg !19318

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19320, !srcloc !18296
  call void @llvm.dbg.value(metadata i32 %7, metadata !18292, metadata !DIExpression()) #25, !dbg !19325
  %8 = icmp eq i32 %7, 0, !dbg !19326
  br i1 %8, label %10, label %9, !dbg !19327

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1332) #26, !dbg !19328
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.398, i32 0, i32 0)) #26, !dbg !19328
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1332) #26, !dbg !19328
  unreachable, !dbg !19328

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19312, metadata !DIExpression()), !dbg !19313
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !19330
  ret void, !dbg !19331
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !19332 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !19333
  br i1 %1, label %8, label %2, !dbg !19334

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !19335
  br i1 %3, label %8, label %4, !dbg !19336

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19337
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !19338
  %7 = xor i1 %6, true, !dbg !19336
  br label %8, !dbg !19336

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !19339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !19340 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !19341, !range !8544
  %2 = icmp eq i8 %1, 0, !dbg !19341
  ret i1 %2, !dbg !19342
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !19343 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19346, !srcloc !18296
  call void @llvm.dbg.value(metadata i32 %1, metadata !18292, metadata !DIExpression()) #25, !dbg !19351
  %2 = icmp eq i32 %1, 0, !dbg !19352
  br i1 %2, label %4, label %3, !dbg !19353

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1392) #26, !dbg !19354
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.398, i32 0, i32 0)) #26, !dbg !19354
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1392) #26, !dbg !19354
  unreachable, !dbg !19354

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !19356
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19358, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !19360
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !19360
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !19356
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19361
  br i1 %6, label %8, label %7, !dbg !19362

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !19363
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19363
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !19363
  unreachable, !dbg !19363

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !19360
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !19356
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19364
  call void @llvm.dbg.value(metadata i32 undef, metadata !19345, metadata !DIExpression()), !dbg !19365
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19366
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17756, metadata !DIExpression()) #25, !dbg !19369
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !19371
  %11 = load i8, i8* %10, align 1, !dbg !19372
  %12 = and i8 %11, 127, !dbg !19372
  store i8 %12, i8* %10, align 1, !dbg !19372
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17764, metadata !DIExpression()) #25, !dbg !19373
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #26, !dbg !19375
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19376
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !17773, metadata !DIExpression()) #25, !dbg !19377
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !19379
  %15 = load i8, i8* %14, align 1, !dbg !19380
  %16 = or i8 %15, -128, !dbg !19380
  store i8 %16, i8* %14, align 1, !dbg !19380
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !17780, metadata !DIExpression()) #25, !dbg !19381
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !17787, metadata !DIExpression()) #25, !dbg !19383
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !17793, metadata !DIExpression()) #25, !dbg !19383
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #26, !dbg !19385
  br i1 %17, label %18, label %19, !dbg !19386

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 186) #26, !dbg !19387
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 186) #26, !dbg !19387
  unreachable, !dbg !19387

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.396(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !19388
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !17794, metadata !DIExpression()) #25, !dbg !19383
  %21 = icmp eq %struct._dnode* %20, null, !dbg !19389
  br i1 %21, label %32, label %22, !dbg !19388

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !17794, metadata !DIExpression()) #25, !dbg !19383
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !19390
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !17794, metadata !DIExpression()) #25, !dbg !19383
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #26, !dbg !19391
  %26 = icmp sgt i32 %25, 0, !dbg !19392
  br i1 %26, label %27, label %29, !dbg !19393

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !19394
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #26, !dbg !19395
  br label %34, !dbg !19396

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #26, !dbg !19389
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !17794, metadata !DIExpression()) #25, !dbg !19383
  %31 = icmp eq %struct._dnode* %30, null, !dbg !19389
  br i1 %31, label %32, label %22, !dbg !19388, !llvm.loop !19397

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !19399
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #26, !dbg !19400
  br label %34, !dbg !19401

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !19402
  call void @llvm.dbg.value(metadata i32 undef, metadata !18240, metadata !DIExpression()) #25, !dbg !19403
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18245, metadata !DIExpression()) #25, !dbg !19403
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18249, metadata !DIExpression()) #25, !dbg !19405
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19407
  br i1 %35, label %37, label %36, !dbg !19408

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 225) #26, !dbg !19409
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19409
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 225) #26, !dbg !19409
  unreachable, !dbg !19409

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !19358
  call void @llvm.dbg.value(metadata i32 %38, metadata !17576, metadata !DIExpression()) #25, !dbg !19360
  call void @llvm.dbg.value(metadata i32 %38, metadata !17570, metadata !DIExpression()) #25, !dbg !19356
  call void @llvm.dbg.value(metadata i32 %38, metadata !19345, metadata !DIExpression()), !dbg !19365
  call void @llvm.dbg.value(metadata i32 undef, metadata !18240, metadata !DIExpression()) #25, !dbg !19403
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #26, !dbg !19410
  ret void, !dbg !19411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !19412 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !19416, metadata !DIExpression()), !dbg !19419
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19420, !srcloc !18296
  call void @llvm.dbg.value(metadata i32 %3, metadata !18292, metadata !DIExpression()) #25, !dbg !19425
  %4 = icmp eq i32 %3, 0, !dbg !19426
  br i1 %4, label %6, label %5, !dbg !19427

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1463) #26, !dbg !19428
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.398, i32 0, i32 0)) #26, !dbg !19428
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1463) #26, !dbg !19428
  unreachable, !dbg !19428

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !19430
  br i1 %7, label %8, label %10, !dbg !19432

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19433
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #27, !dbg !19435
  br label %15, !dbg !19436

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !19417, metadata !DIExpression()), !dbg !19419
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !19437
  %12 = sext i32 %11 to i64, !dbg !19437
  call void @llvm.dbg.value(metadata i64 %12, metadata !19417, metadata !DIExpression()), !dbg !19419
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #27, !dbg !19438
  %14 = trunc i64 %13 to i32, !dbg !19438
  call void @llvm.dbg.value(metadata i32 %14, metadata !19418, metadata !DIExpression()), !dbg !19419
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !19419
  ret i32 %16, !dbg !19439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !19440 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19444, metadata !DIExpression()), !dbg !19445
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !19446, !srcloc !19448
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !19449
  ret void, !dbg !19450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !19451 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !19455, metadata !DIExpression()), !dbg !19459
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19460, !srcloc !18296
  call void @llvm.dbg.value(metadata i32 %2, metadata !18292, metadata !DIExpression()) #25, !dbg !19465
  %3 = icmp eq i32 %2, 0, !dbg !19466
  br i1 %3, label %5, label %4, !dbg !19467

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1420) #26, !dbg !19468
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.398, i32 0, i32 0)) #26, !dbg !19468
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1420) #26, !dbg !19468
  unreachable, !dbg !19468

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !19470
  br i1 %6, label %7, label %8, !dbg !19472

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #27, !dbg !19473
  br label %43, !dbg !19475

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !19457, metadata !DIExpression()), !dbg !19459
  %9 = icmp sgt i64 %0, -3, !dbg !19476
  br i1 %9, label %10, label %14, !dbg !19478

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !19479
  %12 = trunc i64 %0 to i32, !dbg !19481
  %13 = add i32 %11, %12, !dbg !19481
  call void @llvm.dbg.value(metadata i32 %13, metadata !19456, metadata !DIExpression()), !dbg !19459
  br label %17, !dbg !19482

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !19483
  %16 = sub i32 -2, %15, !dbg !19483
  call void @llvm.dbg.value(metadata i32 %16, metadata !19456, metadata !DIExpression()), !dbg !19459
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !19485
  call void @llvm.dbg.value(metadata i32 %18, metadata !19456, metadata !DIExpression()), !dbg !19459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !19486
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19488, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !19490
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !19490
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !19486
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19491
  br i1 %20, label %22, label %21, !dbg !19492

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !19493
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19493
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !19493
  unreachable, !dbg !19493

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !19490
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !19486
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19494
  call void @llvm.dbg.value(metadata i32 undef, metadata !19458, metadata !DIExpression()), !dbg !19459
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19495
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !19496
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #27, !dbg !19497
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19498
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !19499
  tail call fastcc void @z_add_thread_timeout.411(%struct.k_thread* noundef %24, [1 x i64] %25) #27, !dbg !19499
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19500
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #27, !dbg !19501
  call void @llvm.dbg.value(metadata i32 undef, metadata !18240, metadata !DIExpression()) #25, !dbg !19502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18245, metadata !DIExpression()) #25, !dbg !19502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18249, metadata !DIExpression()) #25, !dbg !19504
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19506
  br i1 %27, label %29, label %28, !dbg !19507

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 225) #26, !dbg !19508
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19508
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 225) #26, !dbg !19508
  unreachable, !dbg !19508

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !19488
  call void @llvm.dbg.value(metadata i32 %30, metadata !17576, metadata !DIExpression()) #25, !dbg !19490
  call void @llvm.dbg.value(metadata i32 %30, metadata !17570, metadata !DIExpression()) #25, !dbg !19486
  call void @llvm.dbg.value(metadata i32 %30, metadata !19458, metadata !DIExpression()), !dbg !19459
  call void @llvm.dbg.value(metadata i32 undef, metadata !18240, metadata !DIExpression()) #25, !dbg !19502
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #26, !dbg !19509
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19510
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #27, !dbg !19510
  br i1 %33, label %34, label %35, !dbg !19513

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.438, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1448) #26, !dbg !19514
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.398, i32 0, i32 0)) #26, !dbg !19514
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1448) #26, !dbg !19514
  unreachable, !dbg !19514

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !19516
  %37 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !19517
  %38 = zext i32 %37 to i64, !dbg !19517
  %39 = sub nsw i64 %36, %38, !dbg !19518
  call void @llvm.dbg.value(metadata i64 %39, metadata !19455, metadata !DIExpression()), !dbg !19459
  %40 = icmp sgt i64 %39, 0, !dbg !19519
  %41 = select i1 %40, i64 %39, i64 0, !dbg !19519
  %42 = trunc i64 %41 to i32, !dbg !19519
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !19459
  ret i32 %44, !dbg !19520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #6 !dbg !19521 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !19523, metadata !DIExpression()), !dbg !19524
  call void @llvm.dbg.value(metadata i64 %0, metadata !17624, metadata !DIExpression()), !dbg !19525
  call void @llvm.dbg.value(metadata i32 10000, metadata !17627, metadata !DIExpression()), !dbg !19525
  call void @llvm.dbg.value(metadata i32 1000, metadata !17628, metadata !DIExpression()), !dbg !19525
  call void @llvm.dbg.value(metadata i8 1, metadata !17629, metadata !DIExpression()), !dbg !19525
  call void @llvm.dbg.value(metadata i1 false, metadata !17630, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19525
  call void @llvm.dbg.value(metadata i1 false, metadata !17631, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19525
  call void @llvm.dbg.value(metadata i8 0, metadata !17632, metadata !DIExpression()), !dbg !19525
  call void @llvm.dbg.value(metadata i1 false, metadata !17633, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19525
  call void @llvm.dbg.value(metadata i1 true, metadata !17634, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19525
  call void @llvm.dbg.value(metadata i64 0, metadata !17635, metadata !DIExpression()), !dbg !19525
  call void @llvm.dbg.value(metadata i64 0, metadata !17635, metadata !DIExpression()), !dbg !19525
  call void @llvm.dbg.value(metadata i64 %0, metadata !17624, metadata !DIExpression()), !dbg !19525
  %2 = udiv i64 %0, 10, !dbg !19527
  ret i64 %2, !dbg !19531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !19532 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !19533, !srcloc !19535
  tail call void @z_impl_k_yield() #27, !dbg !19536
  ret void, !dbg !19537
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !19538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19542, metadata !DIExpression()), !dbg !19544
  %2 = sext i32 %0 to i64, !dbg !19545
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !19546
  call void @llvm.dbg.value(metadata i64 %3, metadata !19543, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19544
  %4 = shl i64 %3, 32, !dbg !19547
  %5 = ashr exact i64 %4, 32, !dbg !19547
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !19548
  call void @llvm.dbg.value(metadata i32 %6, metadata !19543, metadata !DIExpression()), !dbg !19544
  %7 = sext i32 %6 to i64, !dbg !19549
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !19550
  %9 = trunc i64 %8 to i32, !dbg !19550
  ret i32 %9, !dbg !19551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #6 !dbg !19552 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !19554, metadata !DIExpression()), !dbg !19555
  call void @llvm.dbg.value(metadata i64 %0, metadata !17624, metadata !DIExpression()), !dbg !19556
  call void @llvm.dbg.value(metadata i32 1000000, metadata !17627, metadata !DIExpression()), !dbg !19556
  call void @llvm.dbg.value(metadata i32 10000, metadata !17628, metadata !DIExpression()), !dbg !19556
  call void @llvm.dbg.value(metadata i8 1, metadata !17629, metadata !DIExpression()), !dbg !19556
  call void @llvm.dbg.value(metadata i1 false, metadata !17630, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19556
  call void @llvm.dbg.value(metadata i1 true, metadata !17631, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19556
  call void @llvm.dbg.value(metadata i8 0, metadata !17632, metadata !DIExpression()), !dbg !19556
  call void @llvm.dbg.value(metadata i1 false, metadata !17633, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19556
  call void @llvm.dbg.value(metadata i1 true, metadata !17634, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19556
  call void @llvm.dbg.value(metadata i64 0, metadata !17635, metadata !DIExpression()), !dbg !19556
  call void @llvm.dbg.value(metadata i64 0, metadata !17635, metadata !DIExpression()), !dbg !19556
  %2 = add i64 %0, 99, !dbg !19558
  call void @llvm.dbg.value(metadata i64 %2, metadata !17624, metadata !DIExpression()), !dbg !19556
  %3 = udiv i64 %2, 100, !dbg !19559
  ret i64 %3, !dbg !19560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #6 !dbg !19561 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !19563, metadata !DIExpression()), !dbg !19564
  call void @llvm.dbg.value(metadata i64 %0, metadata !17624, metadata !DIExpression()), !dbg !19565
  call void @llvm.dbg.value(metadata i32 10000, metadata !17627, metadata !DIExpression()), !dbg !19565
  call void @llvm.dbg.value(metadata i32 1000000, metadata !17628, metadata !DIExpression()), !dbg !19565
  call void @llvm.dbg.value(metadata i8 1, metadata !17629, metadata !DIExpression()), !dbg !19565
  call void @llvm.dbg.value(metadata i1 false, metadata !17630, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19565
  call void @llvm.dbg.value(metadata i1 false, metadata !17631, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19565
  call void @llvm.dbg.value(metadata i8 0, metadata !17632, metadata !DIExpression()), !dbg !19565
  call void @llvm.dbg.value(metadata i1 true, metadata !17633, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19565
  call void @llvm.dbg.value(metadata i1 false, metadata !17634, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19565
  call void @llvm.dbg.value(metadata i64 0, metadata !17635, metadata !DIExpression()), !dbg !19565
  call void @llvm.dbg.value(metadata i64 0, metadata !17635, metadata !DIExpression()), !dbg !19565
  %2 = mul i64 %0, 100, !dbg !19567
  ret i64 %2, !dbg !19569
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !19570 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19572, metadata !DIExpression()), !dbg !19573
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !19574
  br i1 %2, label %14, label %3, !dbg !19576

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !19577
  %5 = icmp slt i32 %4, 0, !dbg !19579
  br i1 %5, label %6, label %10, !dbg !19580

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !19581
  %8 = load i8, i8* %7, align 1, !dbg !19581
  %9 = icmp eq i8 %8, 16, !dbg !19584
  br i1 %9, label %10, label %14, !dbg !19585

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !19586
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !19587
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19588, !srcloc !18296
  call void @llvm.dbg.value(metadata i32 %11, metadata !18292, metadata !DIExpression()) #25, !dbg !19592
  %12 = icmp eq i32 %11, 0, !dbg !19593
  br i1 %12, label %13, label %14, !dbg !19594

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !19595
  br label %14, !dbg !19597

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !19598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !19599 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19601, metadata !DIExpression()), !dbg !19602
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !19603
  %3 = load i8, i8* %2, align 1, !dbg !19603
  %4 = and i8 %3, 2, !dbg !19604
  %5 = icmp ne i8 %4, 0, !dbg !19605
  ret i1 %5, !dbg !19606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !19607 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19612
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !19611, metadata !DIExpression()), !dbg !19613
  ret %struct.k_thread* %1, !dbg !19614
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !19615 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19616, !srcloc !18296
  call void @llvm.dbg.value(metadata i32 %1, metadata !18292, metadata !DIExpression()) #25, !dbg !19619
  %2 = icmp eq i32 %1, 0, !dbg !19620
  br i1 %2, label %3, label %8, !dbg !19621

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19622
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !19623
  %6 = icmp ne i32 %5, 0, !dbg !19621
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !19624
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !19625 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19627, metadata !DIExpression()), !dbg !19629
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !19630
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19632, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !19634
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !19634
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !19630
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19635
  br i1 %3, label %5, label %4, !dbg !19636

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !19637
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19637
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !19637
  unreachable, !dbg !19637

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !19632
  call void @llvm.dbg.value(metadata i32 %6, metadata !17576, metadata !DIExpression()) #25, !dbg !19634
  call void @llvm.dbg.value(metadata i32 %6, metadata !17570, metadata !DIExpression()) #25, !dbg !19630
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19638
  call void @llvm.dbg.value(metadata i32 %6, metadata !19628, metadata !DIExpression()), !dbg !19629
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !19639
  %8 = load i8, i8* %7, align 4, !dbg !19639
  %9 = and i8 %8, 1, !dbg !19641
  %10 = icmp eq i8 %9, 0, !dbg !19642
  br i1 %10, label %15, label %11, !dbg !19643

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !19644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !19644
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19647
  br i1 %12, label %14, label %13, !dbg !19648

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !19649
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19649
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !19649
  unreachable, !dbg !19649

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !17598, metadata !DIExpression()) #25, !dbg !19644
  call void @llvm.dbg.value(metadata i32 %6, metadata !17612, metadata !DIExpression()) #25, !dbg !19650
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !19652, !srcloc !17618
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.443, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1731) #26, !dbg !19653
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.444, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #26, !dbg !19653
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1731) #26, !dbg !19653
  unreachable, !dbg !19653

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !19657
  %17 = load i8, i8* %16, align 1, !dbg !19657
  %18 = and i8 %17, 8, !dbg !19659
  %19 = icmp eq i8 %18, 0, !dbg !19660
  br i1 %19, label %24, label %20, !dbg !19661

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !19662
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !19662
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19665
  br i1 %21, label %23, label %22, !dbg !19666

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !19667
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19667
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !19667
  unreachable, !dbg !19667

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !17598, metadata !DIExpression()) #25, !dbg !19662
  call void @llvm.dbg.value(metadata i32 %6, metadata !17612, metadata !DIExpression()) #25, !dbg !19668
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !19670, !srcloc !17618
  br label %39, !dbg !19671

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !19672
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19673
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !19675
  br i1 %26, label %27, label %35, !dbg !19676

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19677, !srcloc !18296
  call void @llvm.dbg.value(metadata i32 %28, metadata !18292, metadata !DIExpression()) #25, !dbg !19680
  %29 = icmp eq i32 %28, 0, !dbg !19681
  br i1 %29, label %30, label %35, !dbg !19682

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !18240, metadata !DIExpression()) #25, !dbg !19683
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18245, metadata !DIExpression()) #25, !dbg !19683
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18249, metadata !DIExpression()) #25, !dbg !19686
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19688
  br i1 %31, label %33, label %32, !dbg !19689

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 225) #26, !dbg !19690
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19690
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 225) #26, !dbg !19690
  unreachable, !dbg !19690

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !18240, metadata !DIExpression()) #25, !dbg !19683
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #26, !dbg !19691
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.443, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1778) #26, !dbg !19692
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.445, i32 0, i32 0)) #26, !dbg !19692
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1778) #26, !dbg !19692
  unreachable, !dbg !19692

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !19696
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !19696
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19698
  br i1 %36, label %38, label %37, !dbg !19699

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !19700
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19700
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !19700
  unreachable, !dbg !19700

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !17598, metadata !DIExpression()) #25, !dbg !19696
  call void @llvm.dbg.value(metadata i32 %6, metadata !17612, metadata !DIExpression()) #25, !dbg !19701
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !19703, !srcloc !17618
  br label %39, !dbg !19704

39:                                               ; preds = %38, %23
  ret void, !dbg !19704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !19705 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19707, metadata !DIExpression()), !dbg !19708
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !19709
  %3 = load i8, i8* %2, align 1, !dbg !19709
  %4 = and i8 %3, 8, !dbg !19711
  %5 = icmp eq i8 %4, 0, !dbg !19712
  br i1 %5, label %6, label %20, !dbg !19713

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !19714
  %8 = or i8 %7, 8, !dbg !19714
  store i8 %8, i8* %2, align 1, !dbg !19714
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !19716
  br i1 %9, label %10, label %12, !dbg !19718

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17756, metadata !DIExpression()) #25, !dbg !19719
  %11 = and i8 %8, 95, !dbg !19722
  store i8 %11, i8* %2, align 1, !dbg !19722
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17764, metadata !DIExpression()) #25, !dbg !19723
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #26, !dbg !19725
  br label %12, !dbg !19726

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !19727
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !19727
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !19729
  br i1 %15, label %17, label %16, !dbg !19730

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !19731
  br label %17, !dbg !19733

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !19734
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !19735
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #27, !dbg !19736
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !19737
  br label %20, !dbg !19738

20:                                               ; preds = %17, %1
  ret void, !dbg !19739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !19740 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !19744, metadata !DIExpression()), !dbg !19746
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.430(%struct._wait_q_t* noundef %0) #27, !dbg !19747
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !19745, metadata !DIExpression()), !dbg !19746
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !19748
  br i1 %3, label %10, label %4, !dbg !19749

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !19750
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !19752
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !19753, metadata !DIExpression()), !dbg !19759
  call void @llvm.dbg.value(metadata i32 0, metadata !19758, metadata !DIExpression()), !dbg !19759
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !19761
  store i32 0, i32* %7, align 4, !dbg !19762
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !19763
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.430(%struct._wait_q_t* noundef %0) #27, !dbg !19747
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !19745, metadata !DIExpression()), !dbg !19746
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !19748
  br i1 %9, label %10, label %4, !dbg !19749, !llvm.loop !19764

10:                                               ; preds = %4, %1
  ret void, !dbg !19766
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !19767 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19772, metadata !DIExpression()), !dbg !19775
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19771, metadata !DIExpression()), !dbg !19775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !19776
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19778, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !19780
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !19780
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !19776
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19781
  br i1 %4, label %6, label %5, !dbg !19782

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !19783
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19783
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !19783
  unreachable, !dbg !19783

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !19778
  call void @llvm.dbg.value(metadata i32 %7, metadata !17576, metadata !DIExpression()) #25, !dbg !19780
  call void @llvm.dbg.value(metadata i32 %7, metadata !17570, metadata !DIExpression()) #25, !dbg !19776
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19784
  call void @llvm.dbg.value(metadata i32 %7, metadata !19773, metadata !DIExpression()), !dbg !19775
  call void @llvm.dbg.value(metadata i32 0, metadata !19774, metadata !DIExpression()), !dbg !19775
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !19785
  %9 = load i8, i8* %8, align 1, !dbg !19785
  %10 = and i8 %9, 8, !dbg !19787
  %11 = icmp eq i8 %10, 0, !dbg !19788
  br i1 %11, label %12, label %35, !dbg !19789

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !19772, metadata !DIExpression()), !dbg !19775
  %14 = icmp eq i64 %13, 0, !dbg !19790
  br i1 %14, label %35, label %15, !dbg !19792

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19793
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !19795
  br i1 %17, label %35, label %18, !dbg !19796

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !19797
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !19797
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !19798
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !19799
  br i1 %22, label %35, label %23, !dbg !19800

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19801, !srcloc !18296
  call void @llvm.dbg.value(metadata i32 %24, metadata !18292, metadata !DIExpression()) #25, !dbg !19807
  %25 = icmp eq i32 %24, 0, !dbg !19808
  br i1 %25, label %27, label %26, !dbg !19809

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1809) #26, !dbg !19810
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.446, i32 0, i32 0)) #26, !dbg !19810
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.395, i32 0, i32 0), i32 noundef 1809) #26, !dbg !19810
  unreachable, !dbg !19810

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19812
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !19813
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #27, !dbg !19814
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19815
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #27, !dbg !19816
  call void @llvm.dbg.value(metadata i32 undef, metadata !18240, metadata !DIExpression()) #25, !dbg !19817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18245, metadata !DIExpression()) #25, !dbg !19817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18249, metadata !DIExpression()) #25, !dbg !19819
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19821
  br i1 %31, label %33, label %32, !dbg !19822

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 225) #26, !dbg !19823
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19823
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 225) #26, !dbg !19823
  unreachable, !dbg !19823

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !18240, metadata !DIExpression()) #25, !dbg !19817
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #26, !dbg !19824
  call void @llvm.dbg.value(metadata i32 %34, metadata !19774, metadata !DIExpression()), !dbg !19775
  br label %40, !dbg !19825

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !19826
  call void @llvm.dbg.value(metadata i32 %36, metadata !19774, metadata !DIExpression()), !dbg !19775
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !19827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !19827
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19829
  br i1 %37, label %39, label %38, !dbg !19830

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !19831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !19831
  unreachable, !dbg !19831

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !17598, metadata !DIExpression()) #25, !dbg !19827
  call void @llvm.dbg.value(metadata i32 %7, metadata !17612, metadata !DIExpression()) #25, !dbg !19832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !19834, !srcloc !17618
  br label %40, !dbg !19835

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !19775
  ret i32 %41, !dbg !19836
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !19837 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !19841, metadata !DIExpression()), !dbg !19849
  call void @llvm.dbg.value(metadata i32 %1, metadata !19842, metadata !DIExpression()), !dbg !19849
  call void @llvm.dbg.value(metadata i8* %2, metadata !19843, metadata !DIExpression()), !dbg !19849
  call void @llvm.dbg.value(metadata i8 0, metadata !19845, metadata !DIExpression()), !dbg !19849
  call void @llvm.dbg.value(metadata i32 0, metadata !19846, metadata !DIExpression()), !dbg !19850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17564, metadata !DIExpression()) #25, !dbg !19851
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19853, !srcloc !17579
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !19855
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()) #25, !dbg !19855
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !19851
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19856
  br i1 %5, label %7, label %6, !dbg !19857

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !19858
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19858
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 148) #26, !dbg !19858
  unreachable, !dbg !19858

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()) #25, !dbg !19855
  call void @llvm.dbg.value(metadata i32 undef, metadata !17570, metadata !DIExpression()) #25, !dbg !19851
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19859
  call void @llvm.dbg.value(metadata i32 undef, metadata !19848, metadata !DIExpression()), !dbg !19850
  call void @llvm.dbg.value(metadata i8 poison, metadata !19845, metadata !DIExpression()), !dbg !19849
  call void @llvm.dbg.value(metadata i32 undef, metadata !19846, metadata !DIExpression()), !dbg !19850
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #27, !dbg !19860
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !19844, metadata !DIExpression()), !dbg !19849
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !19863
  br i1 %10, label %15, label %11, !dbg !19865

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !19866, metadata !DIExpression()), !dbg !19873
  call void @llvm.dbg.value(metadata i32 %1, metadata !19871, metadata !DIExpression()), !dbg !19873
  call void @llvm.dbg.value(metadata i8* %2, metadata !19872, metadata !DIExpression()), !dbg !19873
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !19753, metadata !DIExpression()), !dbg !19876
  call void @llvm.dbg.value(metadata i32 %1, metadata !19758, metadata !DIExpression()), !dbg !19876
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !19878
  store i32 %1, i32* %12, align 4, !dbg !19879
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !19880
  store i8* %2, i8** %13, align 4, !dbg !19881
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #27, !dbg !19882
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #27, !dbg !19883
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #27, !dbg !19884
  call void @llvm.dbg.value(metadata i8 1, metadata !19845, metadata !DIExpression()), !dbg !19849
  br label %15, !dbg !19885

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !19845, metadata !DIExpression()), !dbg !19849
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !19886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17603, metadata !DIExpression()) #25, !dbg !19886
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19888
  br i1 %16, label %18, label %17, !dbg !19889

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !19890
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19890
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.390, i32 0, i32 0), i32 noundef 194) #26, !dbg !19890
  unreachable, !dbg !19890

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !19849
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !19853
  call void @llvm.dbg.value(metadata i32 %20, metadata !17576, metadata !DIExpression()) #25, !dbg !19855
  call void @llvm.dbg.value(metadata i32 %20, metadata !17570, metadata !DIExpression()) #25, !dbg !19851
  call void @llvm.dbg.value(metadata i32 %20, metadata !19848, metadata !DIExpression()), !dbg !19850
  call void @llvm.dbg.value(metadata i32 undef, metadata !17598, metadata !DIExpression()) #25, !dbg !19886
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !19891
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !19893, !srcloc !17618
  call void @llvm.dbg.value(metadata i8 poison, metadata !19845, metadata !DIExpression()), !dbg !19849
  call void @llvm.dbg.value(metadata i32 undef, metadata !19846, metadata !DIExpression()), !dbg !19850
  ret i1 %19, !dbg !19894
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !19895 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !19900, metadata !DIExpression()), !dbg !19905
  call void @llvm.dbg.value(metadata i64 undef, metadata !19902, metadata !DIExpression()), !dbg !19905
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !19899, metadata !DIExpression()), !dbg !19905
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !19901, metadata !DIExpression()), !dbg !19905
  call void @llvm.dbg.value(metadata i8** %4, metadata !19903, metadata !DIExpression()), !dbg !19905
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !19906
  call void @llvm.dbg.value(metadata i32 %6, metadata !19904, metadata !DIExpression()), !dbg !19905
  %7 = icmp eq i8** %4, null, !dbg !19907
  br i1 %7, label %12, label %8, !dbg !19909

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19910
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !19912
  %11 = load i8*, i8** %10, align 4, !dbg !19912
  store i8* %11, i8** %4, align 4, !dbg !19913
  br label %12, !dbg !19914

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !19915
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !19916 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !19918
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !19919
  ret void, !dbg !19920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !19921 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !19931, metadata !DIExpression()), !dbg !19948
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19929, metadata !DIExpression()), !dbg !19948
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !19930, metadata !DIExpression()), !dbg !19948
  %5 = icmp eq i64 %4, -1, !dbg !19949
  br i1 %5, label %63, label %6, !dbg !19951

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19952
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.451(%struct._dnode* noundef %7) #27, !dbg !19952
  br i1 %8, label %9, label %10, !dbg !19955

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.453, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.454, i32 0, i32 0), i32 noundef 99) #26, !dbg !19956
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.455, i32 0, i32 0)) #26, !dbg !19956
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.454, i32 0, i32 0), i32 noundef 99) #26, !dbg !19956
  unreachable, !dbg !19956

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !19958
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !19959
  call void @llvm.dbg.value(metadata i32 0, metadata !19932, metadata !DIExpression()), !dbg !19960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19961, metadata !DIExpression()) #25, !dbg !19968
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19970, !srcloc !19976
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !19977
  call void @llvm.dbg.value(metadata i32 undef, metadata !19974, metadata !DIExpression()) #25, !dbg !19977
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !19968
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19978
  br i1 %13, label %15, label %14, !dbg !19981

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.456, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !19982
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.458, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19982
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !19982
  unreachable, !dbg !19982

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !19970
  call void @llvm.dbg.value(metadata i32 %16, metadata !19973, metadata !DIExpression()) #25, !dbg !19977
  call void @llvm.dbg.value(metadata i32 %16, metadata !19967, metadata !DIExpression()) #25, !dbg !19968
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19984
  call void @llvm.dbg.value(metadata i32 %16, metadata !19938, metadata !DIExpression()), !dbg !19960
  call void @llvm.dbg.value(metadata i32 undef, metadata !19932, metadata !DIExpression()), !dbg !19960
  %17 = icmp slt i64 %4, -1, !dbg !19985
  br i1 %17, label %18, label %24, !dbg !19986

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !19987
  %20 = add i64 %4, %19, !dbg !19988
  %21 = sub i64 -2, %20, !dbg !19988
  call void @llvm.dbg.value(metadata i64 %21, metadata !19942, metadata !DIExpression()), !dbg !19989
  %22 = icmp sgt i64 %21, 1, !dbg !19990
  %23 = select i1 %22, i64 %21, i64 1, !dbg !19990
  br label %29, !dbg !19991

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !19992
  %26 = tail call fastcc i32 @elapsed.459() #27, !dbg !19994
  %27 = sext i32 %26 to i64, !dbg !19994
  %28 = add nsw i64 %25, %27, !dbg !19995
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !19996
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !19997
  store i64 %30, i64* %31, align 8, !dbg !19998
  %32 = tail call fastcc %struct._timeout* @first() #27, !dbg !19999
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !19939, metadata !DIExpression()), !dbg !20001
  %33 = icmp eq %struct._timeout* %32, null, !dbg !20002
  br i1 %33, label %48, label %34, !dbg !20002

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !20003
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !19939, metadata !DIExpression()), !dbg !20001
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !20007
  %38 = load i64, i64* %37, align 8, !dbg !20007
  %39 = icmp slt i64 %35, %38, !dbg !20008
  br i1 %39, label %40, label %44, !dbg !20009

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !20007
  %42 = sub nsw i64 %38, %35, !dbg !20010
  store i64 %42, i64* %41, align 8, !dbg !20010
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !20012
  tail call fastcc void @sys_dlist_insert.460(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #27, !dbg !20013
  br label %49, !dbg !20014

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !20015
  store i64 %45, i64* %31, align 8, !dbg !20015
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #27, !dbg !20016
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !19939, metadata !DIExpression()), !dbg !20001
  %47 = icmp eq %struct._timeout* %46, null, !dbg !20002
  br i1 %47, label %48, label %34, !dbg !20002, !llvm.loop !20017

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.461(%struct._dnode* noundef nonnull %7) #27, !dbg !20019
  br label %49, !dbg !20022

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #27, !dbg !20023
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !20024
  br i1 %51, label %52, label %59, !dbg !20025

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #27, !dbg !20026
  call void @llvm.dbg.value(metadata i32 %53, metadata !19945, metadata !DIExpression()), !dbg !20027
  %54 = icmp ne i32 %53, 0, !dbg !20028
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !20030
  br i1 %57, label %59, label %58, !dbg !20030

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #26, !dbg !20031
  br label %59, !dbg !20033

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20040
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20039, metadata !DIExpression()) #25, !dbg !20040
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20042
  br i1 %60, label %62, label %61, !dbg !20045

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20046
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.463, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20046
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20046
  unreachable, !dbg !20046

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !20034, metadata !DIExpression()) #25, !dbg !20040
  call void @llvm.dbg.value(metadata i32 %16, metadata !20048, metadata !DIExpression()) #25, !dbg !20051
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !20053, !srcloc !20054
  call void @llvm.dbg.value(metadata i32 undef, metadata !19932, metadata !DIExpression()), !dbg !19960
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !20055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.451(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !20056 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20062, metadata !DIExpression()), !dbg !20063
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !20064
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !20064
  %4 = icmp ne %struct._dnode* %3, null, !dbg !20065
  ret i1 %4, !dbg !20066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.459() unnamed_addr #1 !dbg !20067 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !20070
  %2 = icmp eq i32 %1, 0, !dbg !20071
  br i1 %2, label %3, label %5, !dbg !20070

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !20072
  br label %5, !dbg !20070

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !20070
  ret i32 %6, !dbg !20073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !20074 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.466() #27, !dbg !20080
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !20078, metadata !DIExpression()), !dbg !20081
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !20082
  ret %struct._timeout* %2, !dbg !20083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.460(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !20084 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20088, metadata !DIExpression()), !dbg !20092
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !20089, metadata !DIExpression()), !dbg !20092
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !20093
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !20093
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !20090, metadata !DIExpression()), !dbg !20092
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !20094
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !20095
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !20096
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !20097
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !20098
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !20099
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !20100
  ret void, !dbg !20101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !20102 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20106, metadata !DIExpression()), !dbg !20108
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !20109
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.464(%struct._dnode* noundef %2) #27, !dbg !20110
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !20107, metadata !DIExpression()), !dbg !20108
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !20111
  ret %struct._timeout* %4, !dbg !20112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.461(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !20113 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !20118, metadata !DIExpression()), !dbg !20121
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20119, metadata !DIExpression()), !dbg !20121
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !20122
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !20120, metadata !DIExpression()), !dbg !20121
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !20123
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !20124
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !20125
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !20126
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !20127
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !20128
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !20129
  ret void, !dbg !20130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !20131 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !20136
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !20133, metadata !DIExpression()), !dbg !20137
  %2 = tail call fastcc i32 @elapsed.459() #27, !dbg !20138
  call void @llvm.dbg.value(metadata i32 %2, metadata !20134, metadata !DIExpression()), !dbg !20137
  %3 = icmp eq %struct._timeout* %1, null, !dbg !20139
  br i1 %3, label %14, label %4, !dbg !20141

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !20142
  %6 = load i64, i64* %5, align 8, !dbg !20142
  %7 = sext i32 %2 to i64, !dbg !20143
  %8 = sub nsw i64 %6, %7, !dbg !20144
  %9 = icmp sgt i64 %8, 2147483647, !dbg !20145
  br i1 %9, label %14, label %10, !dbg !20146

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !20147
  %12 = select i1 %11, i64 %8, i64 0, !dbg !20147
  %13 = trunc i64 %12 to i32, !dbg !20147
  call void @llvm.dbg.value(metadata i32 %13, metadata !20135, metadata !DIExpression()), !dbg !20137
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !20149
  call void @llvm.dbg.value(metadata i32 %15, metadata !20135, metadata !DIExpression()), !dbg !20137
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !20150
  %17 = icmp ne i32 %16, 0, !dbg !20152
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !20153
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !20153
  call void @llvm.dbg.value(metadata i32 %20, metadata !20135, metadata !DIExpression()), !dbg !20137
  ret i32 %20, !dbg !20154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.464(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !20155 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !20159, metadata !DIExpression()), !dbg !20161
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20160, metadata !DIExpression()), !dbg !20161
  %2 = icmp eq %struct._dnode* %0, null, !dbg !20162
  br i1 %2, label %5, label %3, !dbg !20163

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.465(%struct._dnode* noundef nonnull %0) #27, !dbg !20164
  br label %5, !dbg !20163

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !20163
  ret %struct._dnode* %6, !dbg !20165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.465(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !20166 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !20168, metadata !DIExpression()), !dbg !20170
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20169, metadata !DIExpression()), !dbg !20170
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !20171
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !20172
  br i1 %3, label %7, label %4, !dbg !20173

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !20174
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !20174
  br label %7, !dbg !20173

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !20173
  ret %struct._dnode* %8, !dbg !20175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.466() unnamed_addr #10 !dbg !20176 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !20180, metadata !DIExpression()), !dbg !20181
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.467() #27, !dbg !20182
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !20182
  ret %struct._dnode* %3, !dbg !20183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.467() unnamed_addr #10 !dbg !20184 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !20188, metadata !DIExpression()), !dbg !20189
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !20190
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !20191
  ret i1 %2, !dbg !20192
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !20193 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20197, metadata !DIExpression()), !dbg !20202
  call void @llvm.dbg.value(metadata i32 -22, metadata !20198, metadata !DIExpression()), !dbg !20202
  call void @llvm.dbg.value(metadata i32 0, metadata !20199, metadata !DIExpression()), !dbg !20203
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19961, metadata !DIExpression()) #25, !dbg !20204
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20206, !srcloc !19976
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20208
  call void @llvm.dbg.value(metadata i32 undef, metadata !19974, metadata !DIExpression()) #25, !dbg !20208
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20204
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20209
  br i1 %3, label %5, label %4, !dbg !20210

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.456, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20211
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.458, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20211
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20211
  unreachable, !dbg !20211

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20208
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20204
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20212
  call void @llvm.dbg.value(metadata i32 undef, metadata !20201, metadata !DIExpression()), !dbg !20203
  call void @llvm.dbg.value(metadata i32 -22, metadata !20198, metadata !DIExpression()), !dbg !20202
  call void @llvm.dbg.value(metadata i32 undef, metadata !20199, metadata !DIExpression()), !dbg !20203
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !20198, metadata !DIExpression()), !dbg !20202
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.451(%struct._dnode* noundef %6) #27, !dbg !20213
  br i1 %7, label %8, label %9, !dbg !20217

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !20218
  call void @llvm.dbg.value(metadata i32 0, metadata !20198, metadata !DIExpression()), !dbg !20202
  br label %9, !dbg !20220

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !20202
  call void @llvm.dbg.value(metadata i32 %10, metadata !20198, metadata !DIExpression()), !dbg !20202
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20221
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20039, metadata !DIExpression()) #25, !dbg !20221
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20223
  br i1 %11, label %13, label %12, !dbg !20224

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20225
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.463, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20225
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20225
  unreachable, !dbg !20225

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !20206
  call void @llvm.dbg.value(metadata i32 %14, metadata !19973, metadata !DIExpression()) #25, !dbg !20208
  call void @llvm.dbg.value(metadata i32 %14, metadata !19967, metadata !DIExpression()) #25, !dbg !20204
  call void @llvm.dbg.value(metadata i32 %14, metadata !20201, metadata !DIExpression()), !dbg !20203
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20221
  call void @llvm.dbg.value(metadata i32 undef, metadata !20048, metadata !DIExpression()) #25, !dbg !20226
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !20228, !srcloc !20054
  call void @llvm.dbg.value(metadata i32 %10, metadata !20198, metadata !DIExpression()), !dbg !20202
  call void @llvm.dbg.value(metadata i32 undef, metadata !20199, metadata !DIExpression()), !dbg !20203
  ret i32 %10, !dbg !20229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !20230 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20232, metadata !DIExpression()), !dbg !20233
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !20234
  %3 = icmp eq %struct._timeout* %2, null, !dbg !20236
  br i1 %3, label %10, label %4, !dbg !20237

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !20238
  %6 = load i64, i64* %5, align 8, !dbg !20238
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !20240
  %8 = load i64, i64* %7, align 8, !dbg !20241
  %9 = add nsw i64 %8, %6, !dbg !20241
  store i64 %9, i64* %7, align 8, !dbg !20241
  br label %10, !dbg !20242

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !20243
  tail call fastcc void @sys_dlist_remove.470(%struct._dnode* noundef %11) #27, !dbg !20244
  ret void, !dbg !20245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.470(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !20246 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20250, metadata !DIExpression()), !dbg !20253
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !20254
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !20254
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !20251, metadata !DIExpression()), !dbg !20253
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !20255
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !20255
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !20252, metadata !DIExpression()), !dbg !20253
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !20256
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !20257
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !20258
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !20259
  tail call fastcc void @sys_dnode_init.471(%struct._dnode* noundef %0) #27, !dbg !20260
  ret void, !dbg !20261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.471(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !20262 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20264, metadata !DIExpression()), !dbg !20265
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !20266
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !20267
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !20268
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !20269
  ret void, !dbg !20270
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !20271 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20277, metadata !DIExpression()), !dbg !20282
  call void @llvm.dbg.value(metadata i64 0, metadata !20278, metadata !DIExpression()), !dbg !20282
  call void @llvm.dbg.value(metadata i32 0, metadata !20279, metadata !DIExpression()), !dbg !20283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19961, metadata !DIExpression()) #25, !dbg !20284
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20286, !srcloc !19976
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20288
  call void @llvm.dbg.value(metadata i32 undef, metadata !19974, metadata !DIExpression()) #25, !dbg !20288
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20284
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20289
  br i1 %3, label %5, label %4, !dbg !20290

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.456, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20291
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.458, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20291
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20291
  unreachable, !dbg !20291

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20288
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20284
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20292
  call void @llvm.dbg.value(metadata i32 undef, metadata !20281, metadata !DIExpression()), !dbg !20283
  call void @llvm.dbg.value(metadata i64 0, metadata !20278, metadata !DIExpression()), !dbg !20282
  call void @llvm.dbg.value(metadata i32 undef, metadata !20279, metadata !DIExpression()), !dbg !20283
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !20293
  call void @llvm.dbg.value(metadata i64 %6, metadata !20278, metadata !DIExpression()), !dbg !20282
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20039, metadata !DIExpression()) #25, !dbg !20296
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20298
  br i1 %7, label %9, label %8, !dbg !20299

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20300
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.463, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20300
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20300
  unreachable, !dbg !20300

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !20286
  call void @llvm.dbg.value(metadata i32 %10, metadata !19973, metadata !DIExpression()) #25, !dbg !20288
  call void @llvm.dbg.value(metadata i32 %10, metadata !19967, metadata !DIExpression()) #25, !dbg !20284
  call void @llvm.dbg.value(metadata i32 %10, metadata !20281, metadata !DIExpression()), !dbg !20283
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20296
  call void @llvm.dbg.value(metadata i32 undef, metadata !20048, metadata !DIExpression()) #25, !dbg !20301
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !20303, !srcloc !20054
  call void @llvm.dbg.value(metadata i64 %6, metadata !20278, metadata !DIExpression()), !dbg !20282
  call void @llvm.dbg.value(metadata i32 undef, metadata !20279, metadata !DIExpression()), !dbg !20283
  ret i64 %6, !dbg !20304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !20305 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20307, metadata !DIExpression()), !dbg !20311
  call void @llvm.dbg.value(metadata i64 0, metadata !20308, metadata !DIExpression()), !dbg !20311
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.472(%struct._timeout* noundef %0) #27, !dbg !20312
  br i1 %2, label %21, label %3, !dbg !20314

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !20315
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !20309, metadata !DIExpression()), !dbg !20316
  call void @llvm.dbg.value(metadata i64 0, metadata !20308, metadata !DIExpression()), !dbg !20311
  %5 = icmp eq %struct._timeout* %4, null, !dbg !20317
  br i1 %5, label %16, label %6, !dbg !20319

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !20309, metadata !DIExpression()), !dbg !20316
  call void @llvm.dbg.value(metadata i64 %8, metadata !20308, metadata !DIExpression()), !dbg !20311
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !20320
  %10 = load i64, i64* %9, align 8, !dbg !20320
  %11 = add nsw i64 %10, %8, !dbg !20322
  call void @llvm.dbg.value(metadata i64 %11, metadata !20308, metadata !DIExpression()), !dbg !20311
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !20323
  br i1 %12, label %16, label %13, !dbg !20325

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !20326
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !20309, metadata !DIExpression()), !dbg !20316
  call void @llvm.dbg.value(metadata i64 %11, metadata !20308, metadata !DIExpression()), !dbg !20311
  %15 = icmp eq %struct._timeout* %14, null, !dbg !20317
  br i1 %15, label %16, label %6, !dbg !20319, !llvm.loop !20327

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !20311
  call void @llvm.dbg.value(metadata i64 %17, metadata !20308, metadata !DIExpression()), !dbg !20311
  %18 = tail call fastcc i32 @elapsed.459() #27, !dbg !20329
  %19 = sext i32 %18 to i64, !dbg !20329
  %20 = sub nsw i64 %17, %19, !dbg !20330
  br label %21, !dbg !20331

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !20311
  ret i64 %22, !dbg !20332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.472(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !20333 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20337, metadata !DIExpression()), !dbg !20338
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !20339
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.451(%struct._dnode* noundef %2) #27, !dbg !20340
  %4 = xor i1 %3, true, !dbg !20341
  ret i1 %4, !dbg !20342
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !20343 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20345, metadata !DIExpression()), !dbg !20350
  call void @llvm.dbg.value(metadata i64 0, metadata !20346, metadata !DIExpression()), !dbg !20350
  call void @llvm.dbg.value(metadata i32 0, metadata !20347, metadata !DIExpression()), !dbg !20351
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19961, metadata !DIExpression()) #25, !dbg !20352
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20354, !srcloc !19976
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20356
  call void @llvm.dbg.value(metadata i32 undef, metadata !19974, metadata !DIExpression()) #25, !dbg !20356
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20352
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20357
  br i1 %3, label %5, label %4, !dbg !20358

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.456, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20359
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.458, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20359
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20359
  unreachable, !dbg !20359

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20356
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20352
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20360
  call void @llvm.dbg.value(metadata i32 undef, metadata !20349, metadata !DIExpression()), !dbg !20351
  call void @llvm.dbg.value(metadata i64 0, metadata !20346, metadata !DIExpression()), !dbg !20350
  call void @llvm.dbg.value(metadata i32 undef, metadata !20347, metadata !DIExpression()), !dbg !20351
  %6 = load i64, i64* @curr_tick, align 8, !dbg !20361
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !20364
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !20346, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !20350
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20039, metadata !DIExpression()) #25, !dbg !20365
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20367
  br i1 %8, label %10, label %9, !dbg !20368

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20369
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.463, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20369
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20369
  unreachable, !dbg !20369

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !20354
  call void @llvm.dbg.value(metadata i32 %11, metadata !19973, metadata !DIExpression()) #25, !dbg !20356
  call void @llvm.dbg.value(metadata i32 %11, metadata !19967, metadata !DIExpression()) #25, !dbg !20352
  call void @llvm.dbg.value(metadata i32 %11, metadata !20349, metadata !DIExpression()), !dbg !20351
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !20346, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !20350
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20365
  call void @llvm.dbg.value(metadata i32 undef, metadata !20048, metadata !DIExpression()) #25, !dbg !20370
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !20372, !srcloc !20054
  call void @llvm.dbg.value(metadata i32 undef, metadata !20347, metadata !DIExpression()), !dbg !20351
  %12 = add i64 %7, %6, !dbg !20373
  ret i64 %12, !dbg !20374
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !20375 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !20377, metadata !DIExpression()), !dbg !20381
  call void @llvm.dbg.value(metadata i32 0, metadata !20378, metadata !DIExpression()), !dbg !20382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19961, metadata !DIExpression()) #25, !dbg !20383
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20385, !srcloc !19976
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20387
  call void @llvm.dbg.value(metadata i32 undef, metadata !19974, metadata !DIExpression()) #25, !dbg !20387
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20383
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20388
  br i1 %2, label %4, label %3, !dbg !20389

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.456, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20390
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.458, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20390
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20390
  unreachable, !dbg !20390

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20387
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20383
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20391
  call void @llvm.dbg.value(metadata i32 undef, metadata !20380, metadata !DIExpression()), !dbg !20382
  call void @llvm.dbg.value(metadata i32 -1, metadata !20377, metadata !DIExpression()), !dbg !20381
  call void @llvm.dbg.value(metadata i32 undef, metadata !20378, metadata !DIExpression()), !dbg !20382
  %5 = tail call fastcc i32 @next_timeout() #27, !dbg !20392
  call void @llvm.dbg.value(metadata i32 %5, metadata !20377, metadata !DIExpression()), !dbg !20381
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20395
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20039, metadata !DIExpression()) #25, !dbg !20395
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20397
  br i1 %6, label %8, label %7, !dbg !20398

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20399
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.463, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20399
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20399
  unreachable, !dbg !20399

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !20385
  call void @llvm.dbg.value(metadata i32 %9, metadata !19973, metadata !DIExpression()) #25, !dbg !20387
  call void @llvm.dbg.value(metadata i32 %9, metadata !19967, metadata !DIExpression()) #25, !dbg !20383
  call void @llvm.dbg.value(metadata i32 %9, metadata !20380, metadata !DIExpression()), !dbg !20382
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20395
  call void @llvm.dbg.value(metadata i32 undef, metadata !20048, metadata !DIExpression()) #25, !dbg !20400
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !20402, !srcloc !20054
  call void @llvm.dbg.value(metadata i32 %5, metadata !20377, metadata !DIExpression()), !dbg !20381
  call void @llvm.dbg.value(metadata i32 undef, metadata !20378, metadata !DIExpression()), !dbg !20382
  ret i32 %5, !dbg !20403
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !20404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20406, metadata !DIExpression()), !dbg !20416
  call void @llvm.dbg.value(metadata i1 %1, metadata !20407, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20416
  call void @llvm.dbg.value(metadata i32 0, metadata !20408, metadata !DIExpression()), !dbg !20417
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19961, metadata !DIExpression()) #25, !dbg !20418
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20420, !srcloc !19976
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20422
  call void @llvm.dbg.value(metadata i32 undef, metadata !19974, metadata !DIExpression()) #25, !dbg !20422
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20418
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20423
  br i1 %4, label %6, label %5, !dbg !20424

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.456, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20425
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.458, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20425
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20425
  unreachable, !dbg !20425

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20422
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20418
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20426
  call void @llvm.dbg.value(metadata i32 undef, metadata !20410, metadata !DIExpression()), !dbg !20417
  call void @llvm.dbg.value(metadata i32 undef, metadata !20408, metadata !DIExpression()), !dbg !20417
  %7 = tail call fastcc i32 @next_timeout() #27, !dbg !20427
  call void @llvm.dbg.value(metadata i32 %7, metadata !20411, metadata !DIExpression()), !dbg !20428
  call void @llvm.dbg.value(metadata i1 undef, metadata !20414, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20428
  %8 = icmp slt i32 %7, 2, !dbg !20429
  call void @llvm.dbg.value(metadata i1 %8, metadata !20415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20428
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !20430
  call void @llvm.dbg.value(metadata i1 %9, metadata !20414, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20428
  br i1 %10, label %14, label %11, !dbg !20430

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !20432
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !20432
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #26, !dbg !20434
  br label %14, !dbg !20435

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20436
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20039, metadata !DIExpression()) #25, !dbg !20436
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20438
  br i1 %15, label %17, label %16, !dbg !20439

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20440
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.463, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20440
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20440
  unreachable, !dbg !20440

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !20420
  call void @llvm.dbg.value(metadata i32 %18, metadata !19973, metadata !DIExpression()) #25, !dbg !20422
  call void @llvm.dbg.value(metadata i32 %18, metadata !19967, metadata !DIExpression()) #25, !dbg !20418
  call void @llvm.dbg.value(metadata i32 %18, metadata !20410, metadata !DIExpression()), !dbg !20417
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20436
  call void @llvm.dbg.value(metadata i32 undef, metadata !20048, metadata !DIExpression()) #25, !dbg !20441
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !20443, !srcloc !20054
  call void @llvm.dbg.value(metadata i32 1, metadata !20408, metadata !DIExpression()), !dbg !20417
  call void @llvm.dbg.value(metadata i32 undef, metadata !20408, metadata !DIExpression()), !dbg !20417
  ret void, !dbg !20444
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !20445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20449, metadata !DIExpression()), !dbg !20454
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !20455
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19961, metadata !DIExpression()) #25, !dbg !20456
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20458, !srcloc !19976
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20460
  call void @llvm.dbg.value(metadata i32 undef, metadata !19974, metadata !DIExpression()) #25, !dbg !20460
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20456
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20461
  br i1 %3, label %5, label %4, !dbg !20462

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.456, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20463
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.458, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20463
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20463
  unreachable, !dbg !20463

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20460
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20456
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20464
  call void @llvm.dbg.value(metadata i32 undef, metadata !20450, metadata !DIExpression()), !dbg !20454
  store i32 %0, i32* @announce_remaining, align 4, !dbg !20454
  call void @llvm.dbg.value(metadata i32 undef, metadata !20450, metadata !DIExpression()), !dbg !20454
  %6 = tail call fastcc %struct._timeout* @first() #27, !dbg !20465
  %7 = icmp eq %struct._timeout* %6, null, !dbg !20466
  br i1 %7, label %37, label %8, !dbg !20467

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !20454
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !20468
  %14 = load i64, i64* %13, align 8, !dbg !20468
  %15 = sext i32 %11 to i64, !dbg !20469
  %16 = icmp sgt i64 %14, %15, !dbg !20470
  br i1 %16, label %35, label %17, !dbg !20471

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !20451, metadata !DIExpression()), !dbg !20472
  %18 = trunc i64 %14 to i32, !dbg !20473
  call void @llvm.dbg.value(metadata i32 %18, metadata !20453, metadata !DIExpression()), !dbg !20472
  %19 = sext i32 %18 to i64, !dbg !20474
  %20 = load i64, i64* @curr_tick, align 8, !dbg !20475
  %21 = add i64 %20, %19, !dbg !20475
  store i64 %21, i64* @curr_tick, align 8, !dbg !20475
  store i64 0, i64* %13, align 8, !dbg !20476
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #27, !dbg !20477
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20478
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20039, metadata !DIExpression()) #25, !dbg !20478
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20480
  br i1 %22, label %24, label %23, !dbg !20481

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20482
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.463, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20482
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20482
  unreachable, !dbg !20482

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !20034, metadata !DIExpression()) #25, !dbg !20478
  call void @llvm.dbg.value(metadata i32 %12, metadata !20048, metadata !DIExpression()) #25, !dbg !20483
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !20485, !srcloc !20054
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !20486
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !20486
  tail call void %26(%struct._timeout* noundef nonnull %9) #26, !dbg !20487
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19961, metadata !DIExpression()) #25, !dbg !20488
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20490, !srcloc !19976
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20492
  call void @llvm.dbg.value(metadata i32 undef, metadata !19974, metadata !DIExpression()) #25, !dbg !20492
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20488
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20493
  br i1 %28, label %30, label %29, !dbg !20494

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.456, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20495
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.458, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20495
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20495
  unreachable, !dbg !20495

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20492
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20488
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20496
  call void @llvm.dbg.value(metadata i32 undef, metadata !20450, metadata !DIExpression()), !dbg !20454
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !20497
  %32 = sub nsw i32 %31, %18, !dbg !20497
  store i32 %32, i32* @announce_remaining, align 4, !dbg !20454
  call void @llvm.dbg.value(metadata i32 undef, metadata !20450, metadata !DIExpression()), !dbg !20454
  %33 = tail call fastcc %struct._timeout* @first() #27, !dbg !20465
  %34 = icmp eq %struct._timeout* %33, null, !dbg !20466
  br i1 %34, label %37, label %8, !dbg !20467, !llvm.loop !20498

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !20500
  store i64 %36, i64* %13, align 8, !dbg !20500
  br label %41, !dbg !20503

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !20454
  %40 = sext i32 %39 to i64, !dbg !20504
  br label %41, !dbg !20504

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !20504
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !20505
  %45 = add i64 %44, %42, !dbg !20505
  store i64 %45, i64* @curr_tick, align 8, !dbg !20505
  store i32 0, i32* @announce_remaining, align 4, !dbg !20506
  %46 = tail call fastcc i32 @next_timeout() #27, !dbg !20507
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #26, !dbg !20508
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20509
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20039, metadata !DIExpression()) #25, !dbg !20509
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20511
  br i1 %47, label %49, label %48, !dbg !20512

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20513
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.463, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20513
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20513
  unreachable, !dbg !20513

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !20454
  call void @llvm.dbg.value(metadata i32 %50, metadata !20034, metadata !DIExpression()) #25, !dbg !20509
  call void @llvm.dbg.value(metadata i32 %50, metadata !20048, metadata !DIExpression()) #25, !dbg !20514
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #25, !dbg !20516, !srcloc !20054
  ret void, !dbg !20517
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !20518 {
  call void @llvm.dbg.value(metadata i64 0, metadata !20522, metadata !DIExpression()), !dbg !20526
  call void @llvm.dbg.value(metadata i32 0, metadata !20523, metadata !DIExpression()), !dbg !20527
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19961, metadata !DIExpression()) #25, !dbg !20528
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20530, !srcloc !19976
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20532
  call void @llvm.dbg.value(metadata i32 undef, metadata !19974, metadata !DIExpression()) #25, !dbg !20532
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20528
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20533
  br i1 %2, label %4, label %3, !dbg !20534

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.456, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20535
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.458, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20535
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 148) #26, !dbg !20535
  unreachable, !dbg !20535

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !19973, metadata !DIExpression()) #25, !dbg !20532
  call void @llvm.dbg.value(metadata i32 undef, metadata !19967, metadata !DIExpression()) #25, !dbg !20528
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20536
  call void @llvm.dbg.value(metadata i32 undef, metadata !20525, metadata !DIExpression()), !dbg !20527
  call void @llvm.dbg.value(metadata i64 0, metadata !20522, metadata !DIExpression()), !dbg !20526
  call void @llvm.dbg.value(metadata i32 undef, metadata !20523, metadata !DIExpression()), !dbg !20527
  %5 = load i64, i64* @curr_tick, align 8, !dbg !20537
  %6 = tail call fastcc i32 @elapsed.459() #27, !dbg !20540
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !20522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !20526
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20541
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20039, metadata !DIExpression()) #25, !dbg !20541
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20543
  br i1 %7, label %9, label %8, !dbg !20544

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20545
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.463, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20545
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.457, i32 0, i32 0), i32 noundef 194) #26, !dbg !20545
  unreachable, !dbg !20545

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !20530
  call void @llvm.dbg.value(metadata i32 %10, metadata !19973, metadata !DIExpression()) #25, !dbg !20532
  call void @llvm.dbg.value(metadata i32 %10, metadata !19967, metadata !DIExpression()) #25, !dbg !20528
  call void @llvm.dbg.value(metadata i32 %10, metadata !20525, metadata !DIExpression()), !dbg !20527
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !20522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !20526
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !20522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !20526
  call void @llvm.dbg.value(metadata i32 undef, metadata !20034, metadata !DIExpression()) #25, !dbg !20541
  call void @llvm.dbg.value(metadata i32 undef, metadata !20048, metadata !DIExpression()) #25, !dbg !20546
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !20548, !srcloc !20054
  call void @llvm.dbg.value(metadata i32 undef, metadata !20523, metadata !DIExpression()), !dbg !20527
  %11 = sext i32 %6 to i64, !dbg !20540
  %12 = add i64 %5, %11, !dbg !20549
  ret i64 %12, !dbg !20550
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !20551 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !20552
  %2 = trunc i64 %1 to i32, !dbg !20553
  ret i32 %2, !dbg !20554
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !20555 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !20556
  ret i64 %1, !dbg !20557
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !20558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20560, metadata !DIExpression()), !dbg !20567
  %2 = icmp eq i32 %0, 0, !dbg !20568
  br i1 %2, label %10, label %3, !dbg !20570

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !20571
  call void @llvm.dbg.value(metadata i32 %4, metadata !20561, metadata !DIExpression()), !dbg !20567
  %5 = shl i32 %0, 5, !dbg !20572
  call void @llvm.dbg.value(metadata i32 %5, metadata !20562, metadata !DIExpression()), !dbg !20567
  br label %6, !dbg !20573

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !20574
  call void @llvm.dbg.value(metadata i32 %7, metadata !20563, metadata !DIExpression()), !dbg !20575
  %8 = sub i32 %7, %4, !dbg !20576
  %9 = icmp ult i32 %8, %5, !dbg !20578
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !20579
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !20580 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !20581
  ret i32 %1, !dbg !20582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !20583 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !20585
  ret i32 %1, !dbg !20586
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !20587 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !20591, metadata !DIExpression()), !dbg !20593
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !20594

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !20595
  br label %14, !dbg !20599

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !20592, metadata !DIExpression()), !dbg !20593
  %6 = icmp slt i64 %2, -1, !dbg !20600
  br i1 %6, label %7, label %9, !dbg !20603

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !20604
  br label %14, !dbg !20605

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !20607
  %11 = icmp ugt i64 %2, 1, !dbg !20608
  %12 = select i1 %11, i64 %2, i64 1, !dbg !20608
  %13 = add nsw i64 %10, %12, !dbg !20609
  br label %14, !dbg !20610

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !20611
  ret i64 %15, !dbg !20612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @boot_banner() local_unnamed_addr #6 !dbg !20613 {
  ret void, !dbg !20615
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !20616 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !20618, metadata !DIExpression()), !dbg !20640
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !20619, metadata !DIExpression()), !dbg !20641
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !20642

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.486, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.487, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.488, i32 0, i32 0), i32 noundef 24) #26, !dbg !20646
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.489, i32 0, i32 0)) #26, !dbg !20646
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.488, i32 0, i32 0), i32 noundef 24) #26, !dbg !20646
  unreachable, !dbg !20646

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !20619, metadata !DIExpression()), !dbg !20641
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !20649
  br i1 %5, label %7, label %6, !dbg !20650

6:                                                ; preds = %3
  ret i32 0, !dbg !20651

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !20652
  %9 = load i8*, i8** %8, align 4, !dbg !20652
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !20655
  %11 = load i32, i32* %10, align 4, !dbg !20655
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #27, !dbg !20656
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !20657
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !20619, metadata !DIExpression()), !dbg !20641
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !20658
  br i1 %13, label %2, label %3, !dbg !20642, !llvm.loop !20659
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !20661 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !20665, metadata !DIExpression()), !dbg !20668
  call void @llvm.dbg.value(metadata i8* %1, metadata !20666, metadata !DIExpression()), !dbg !20668
  call void @llvm.dbg.value(metadata i32 %2, metadata !20667, metadata !DIExpression()), !dbg !20668
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !20669
  tail call fastcc void @z_waitq_init.490(%struct._wait_q_t* noundef nonnull %4) #27, !dbg !20670
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !20671
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #26, !dbg !20672
  ret void, !dbg !20673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.490(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !20674 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !20679, metadata !DIExpression()), !dbg !20680
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !20681
  tail call fastcc void @sys_dlist_init.491(%struct._dnode* noundef %2) #27, !dbg !20682
  ret void, !dbg !20683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.491(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !20684 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20689, metadata !DIExpression()), !dbg !20690
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !20691
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !20692
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !20693
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !20694
  ret void, !dbg !20695
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !20696 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !20707, metadata !DIExpression()), !dbg !20717
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !20704, metadata !DIExpression()), !dbg !20717
  call void @llvm.dbg.value(metadata i32 %1, metadata !20705, metadata !DIExpression()), !dbg !20717
  call void @llvm.dbg.value(metadata i32 %2, metadata !20706, metadata !DIExpression()), !dbg !20717
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #26, !dbg !20718
  call void @llvm.dbg.value(metadata i64 %6, metadata !20709, metadata !DIExpression()), !dbg !20717
  call void @llvm.dbg.value(metadata i8* null, metadata !20710, metadata !DIExpression()), !dbg !20717
  %7 = icmp eq i64 %5, -1, !dbg !20719
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !20719
  call void @llvm.dbg.value(metadata i64 %8, metadata !20709, metadata !DIExpression()), !dbg !20717
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !20720
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !20721, metadata !DIExpression()) #25, !dbg !20728
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20730, !srcloc !20736
  call void @llvm.dbg.value(metadata i32 undef, metadata !20733, metadata !DIExpression()) #25, !dbg !20737
  call void @llvm.dbg.value(metadata i32 undef, metadata !20734, metadata !DIExpression()) #25, !dbg !20737
  call void @llvm.dbg.value(metadata i32 undef, metadata !20727, metadata !DIExpression()) #25, !dbg !20728
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !20738
  br i1 %11, label %13, label %12, !dbg !20741

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.486, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.492, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.493, i32 0, i32 0), i32 noundef 148) #26, !dbg !20742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.494, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !20742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.493, i32 0, i32 0), i32 noundef 148) #26, !dbg !20742
  unreachable, !dbg !20742

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !20733, metadata !DIExpression()) #25, !dbg !20737
  call void @llvm.dbg.value(metadata i32 undef, metadata !20727, metadata !DIExpression()) #25, !dbg !20728
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !20744
  call void @llvm.dbg.value(metadata i32 undef, metadata !20711, metadata !DIExpression()), !dbg !20717
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !20745, !srcloc !20754
  call void @llvm.dbg.value(metadata i32 %14, metadata !20748, metadata !DIExpression()) #25, !dbg !20755
  %15 = icmp eq i32 %14, 0, !dbg !20756
  %16 = icmp eq i64 %5, 0, !dbg !20757
  %17 = select i1 %15, i1 true, i1 %16, !dbg !20757
  br i1 %17, label %18, label %25, !dbg !20757

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !20710, metadata !DIExpression()), !dbg !20717
  call void @llvm.dbg.value(metadata i8 0, metadata !20716, metadata !DIExpression()), !dbg !20717
  call void @llvm.dbg.value(metadata i32 undef, metadata !20711, metadata !DIExpression()), !dbg !20717
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #26, !dbg !20758
  call void @llvm.dbg.value(metadata i8* %20, metadata !20710, metadata !DIExpression()), !dbg !20717
  %21 = tail call i64 @sys_clock_tick_get() #26, !dbg !20760
  call void @llvm.dbg.value(metadata i64 %21, metadata !20708, metadata !DIExpression()), !dbg !20717
  %22 = icmp eq i8* %20, null, !dbg !20761
  br i1 %22, label %23, label %43, !dbg !20763

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !20711, metadata !DIExpression()), !dbg !20717
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !20763

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.486, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.495, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.488, i32 0, i32 0), i32 noundef 76) #26, !dbg !20764
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.496, i32 0, i32 0)) #26, !dbg !20764
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.488, i32 0, i32 0), i32 noundef 76) #26, !dbg !20764
  unreachable, !dbg !20764

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !20716, metadata !DIExpression()), !dbg !20717
  %29 = sub nsw i64 %8, %27, !dbg !20766
  %30 = icmp slt i64 %29, 1, !dbg !20767
  br i1 %30, label %43, label %31, !dbg !20768

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !20717
  call void @llvm.dbg.value(metadata i8 undef, metadata !20716, metadata !DIExpression()), !dbg !20717
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !20769
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !20769
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %struct._wait_q_t* noundef nonnull %24, [1 x i64] %34) #26, !dbg !20769
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !20721, metadata !DIExpression()) #25, !dbg !20770
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20772, !srcloc !20736
  call void @llvm.dbg.value(metadata i32 undef, metadata !20733, metadata !DIExpression()) #25, !dbg !20774
  call void @llvm.dbg.value(metadata i32 undef, metadata !20734, metadata !DIExpression()) #25, !dbg !20774
  call void @llvm.dbg.value(metadata i32 undef, metadata !20727, metadata !DIExpression()) #25, !dbg !20770
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !20775
  br i1 %37, label %39, label %38, !dbg !20776

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.486, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.492, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.493, i32 0, i32 0), i32 noundef 148) #26, !dbg !20777
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.494, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !20777
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.493, i32 0, i32 0), i32 noundef 148) #26, !dbg !20777
  unreachable, !dbg !20777

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !20716, metadata !DIExpression()), !dbg !20717
  call void @llvm.dbg.value(metadata i32 undef, metadata !20733, metadata !DIExpression()) #25, !dbg !20774
  call void @llvm.dbg.value(metadata i32 undef, metadata !20727, metadata !DIExpression()) #25, !dbg !20770
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !20778
  call void @llvm.dbg.value(metadata i32 undef, metadata !20711, metadata !DIExpression()), !dbg !20717
  call void @llvm.dbg.value(metadata i8* null, metadata !20710, metadata !DIExpression()), !dbg !20717
  call void @llvm.dbg.value(metadata i32 undef, metadata !20711, metadata !DIExpression()), !dbg !20717
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #26, !dbg !20758
  call void @llvm.dbg.value(metadata i8* %40, metadata !20710, metadata !DIExpression()), !dbg !20717
  %41 = tail call i64 @sys_clock_tick_get() #26, !dbg !20760
  call void @llvm.dbg.value(metadata i64 %41, metadata !20708, metadata !DIExpression()), !dbg !20717
  %42 = icmp eq i8* %40, null, !dbg !20761
  br i1 %42, label %26, label %43, !dbg !20763, !llvm.loop !20779

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !20758
  call void @llvm.dbg.value(metadata i8* %45, metadata !20710, metadata !DIExpression()), !dbg !20717
  call void @llvm.dbg.value(metadata i32 undef, metadata !20782, metadata !DIExpression()) #25, !dbg !20788
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !20787, metadata !DIExpression()) #25, !dbg !20788
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !20790
  br i1 %46, label %48, label %47, !dbg !20793

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.486, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.497, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.493, i32 0, i32 0), i32 noundef 194) #26, !dbg !20794
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.498, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !20794
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.493, i32 0, i32 0), i32 noundef 194) #26, !dbg !20794
  unreachable, !dbg !20794

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !20717
  call void @llvm.dbg.value(metadata i32 %49, metadata !20782, metadata !DIExpression()) #25, !dbg !20788
  call void @llvm.dbg.value(metadata i32 %49, metadata !20796, metadata !DIExpression()) #25, !dbg !20799
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #25, !dbg !20801, !srcloc !20802
  ret i8* %45, !dbg !20803
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !20804 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !20810, metadata !DIExpression()), !dbg !20812
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !20808, metadata !DIExpression()), !dbg !20812
  call void @llvm.dbg.value(metadata i32 %1, metadata !20809, metadata !DIExpression()), !dbg !20812
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !20813
  call void @llvm.dbg.value(metadata i8* %4, metadata !20811, metadata !DIExpression()), !dbg !20812
  ret i8* %4, !dbg !20814
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !20815 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !20819, metadata !DIExpression()), !dbg !20822
  call void @llvm.dbg.value(metadata i8* %1, metadata !20820, metadata !DIExpression()), !dbg !20822
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !20823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !20721, metadata !DIExpression()) #25, !dbg !20824
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20826, !srcloc !20736
  call void @llvm.dbg.value(metadata i32 undef, metadata !20733, metadata !DIExpression()) #25, !dbg !20828
  call void @llvm.dbg.value(metadata i32 undef, metadata !20734, metadata !DIExpression()) #25, !dbg !20828
  call void @llvm.dbg.value(metadata i32 undef, metadata !20727, metadata !DIExpression()) #25, !dbg !20824
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !20829
  br i1 %5, label %7, label %6, !dbg !20830

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.486, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.492, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.493, i32 0, i32 0), i32 noundef 148) #26, !dbg !20831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.494, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !20831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.493, i32 0, i32 0), i32 noundef 148) #26, !dbg !20831
  unreachable, !dbg !20831

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !20826
  call void @llvm.dbg.value(metadata i32 %8, metadata !20733, metadata !DIExpression()) #25, !dbg !20828
  call void @llvm.dbg.value(metadata i32 %8, metadata !20727, metadata !DIExpression()) #25, !dbg !20824
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !20832
  call void @llvm.dbg.value(metadata i32 %8, metadata !20821, metadata !DIExpression()), !dbg !20822
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !20833
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #26, !dbg !20834
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !20835
  %11 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %10) #26, !dbg !20837
  %12 = icmp eq i32 %11, 0, !dbg !20838
  br i1 %12, label %15, label %13, !dbg !20839

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !20840
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #26, !dbg !20840
  br label %19, !dbg !20842

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !20782, metadata !DIExpression()) #25, !dbg !20843
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !20787, metadata !DIExpression()) #25, !dbg !20843
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !20846
  br i1 %16, label %18, label %17, !dbg !20847

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.486, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.497, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.493, i32 0, i32 0), i32 noundef 194) #26, !dbg !20848
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.498, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !20848
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.493, i32 0, i32 0), i32 noundef 194) #26, !dbg !20848
  unreachable, !dbg !20848

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !20782, metadata !DIExpression()) #25, !dbg !20843
  call void @llvm.dbg.value(metadata i32 %8, metadata !20796, metadata !DIExpression()) #25, !dbg !20849
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !20851, !srcloc !20802
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !20852
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1723, !2, !3409, !27, !356, !548, !770, !794, !3411, !3413, !3446, !3480, !3482, !804, !867, !3484, !3487, !3498, !3544, !3546, !3574, !3602, !3645, !3716, !3761, !896, !1036, !3789, !1072, !1082, !1107, !1214, !1390, !1573, !1753, !3794, !1871, !1937, !2206, !2446, !3815, !2561, !2648, !3817, !3888, !3937, !2683, !3940, !2690, !2955, !3096, !3958, !3960, !3116, !3226, !4066, !3343, !4069, !3384}
!llvm.ident = !{!4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071, !4071}
!llvm.module.flags = !{!4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_consumer_sub", scope: !27, file: !114, line: 11, type: !123, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/runtime_obs_registration/src/consumer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !108, !109}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !110)
!110 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!111 = !{!25, !112, !305, !338, !342, !347, !352}
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "consumer_sub", scope: !27, file: !114, line: 11, type: !115, isLocal: false, isDefinition: true, align: 32)
!114 = !DIFile(filename: "zephyr/samples/subsys/zbus/runtime_obs_registration/src/consumer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !117)
!116 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = !{!118, !120, !166}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !115, file: !116, line: 91, baseType: !119, size: 8)
!119 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !115, file: !116, line: 93, baseType: !121, size: 32, offset: 32)
!121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !122)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !125)
!124 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!125 = !{!126, !147, !152, !155, !156, !159, !160, !161, !162, !163}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !123, file: !124, line: 4206, baseType: !127, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !130)
!130 = !{!131}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !129, file: !128, line: 232, baseType: !132, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !134)
!133 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !135)
!135 = !{!136, !142}
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !134, file: !133, line: 38, baseType: !137, size: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !134, file: !133, line: 38, size: 32, elements: !138)
!138 = !{!139, !141}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !137, file: !133, line: 39, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !137, file: !133, line: 40, baseType: !140, size: 32)
!142 = !DIDerivedType(tag: DW_TAG_member, scope: !134, file: !133, line: 42, baseType: !143, size: 32, offset: 32)
!143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !134, file: !133, line: 42, size: 32, elements: !144)
!144 = !{!145, !146}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !143, file: !133, line: 43, baseType: !140, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !143, file: !133, line: 44, baseType: !140, size: 32)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !123, file: !124, line: 4208, baseType: !148, size: 32, offset: 64)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !150)
!149 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!150 = !{!151}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !148, file: !149, line: 52, baseType: !22, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !123, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!153 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !154, line: 214, baseType: !32)
!154 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!155 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !123, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !123, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!158 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !123, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !123, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !123, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !123, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !123, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !165)
!165 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !115, file: !116, line: 96, baseType: !167, size: 32, offset: 64)
!167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!169 = !DISubroutineType(types: !170)
!170 = !{null, !171}
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !174)
!174 = !{!175, !179, !181, !182, !187, !286, !300}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !173, file: !116, line: 35, baseType: !176, size: 16)
!176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !178)
!178 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !173, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !173, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !173, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!185 = !DISubroutineType(types: !186)
!186 = !{!119, !13, !153}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !173, file: !116, line: 56, baseType: !188, size: 32, offset: 128)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !190)
!190 = !{!191, !192, !284, !285}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !189, file: !124, line: 2722, baseType: !127, size: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !189, file: !124, line: 2724, baseType: !193, size: 32, offset: 64)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !196)
!195 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!196 = !{!197, !242, !255, !256, !257, !258, !264, !279}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !194, file: !195, line: 247, baseType: !198, size: 384)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !199)
!199 = !{!200, !214, !216, !217, !218, !229, !230, !231}
!200 = !DIDerivedType(tag: DW_TAG_member, scope: !198, file: !195, line: 60, baseType: !201, size: 64)
!201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !198, file: !195, line: 60, size: 64, elements: !202)
!202 = !{!203, !205}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !201, file: !195, line: 61, baseType: !204, size: 64)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !134)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !201, file: !195, line: 62, baseType: !206, size: 64)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !208)
!207 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!208 = !{!209}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !206, file: !207, line: 50, baseType: !210, size: 64)
!210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 64, elements: !212)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 32)
!212 = !{!213}
!213 = !DISubrange(count: 2)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !198, file: !195, line: 68, baseType: !215, size: 32, offset: 64)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !198, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !198, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!218 = !DIDerivedType(tag: DW_TAG_member, scope: !198, file: !195, line: 90, baseType: !219, size: 16, offset: 112)
!219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !198, file: !195, line: 90, size: 16, elements: !220)
!220 = !{!221, !228}
!221 = !DIDerivedType(tag: DW_TAG_member, scope: !219, file: !195, line: 91, baseType: !222, size: 16)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !219, file: !195, line: 91, size: 16, elements: !223)
!223 = !{!224, !227}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !222, file: !195, line: 96, baseType: !225, size: 8)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !226)
!226 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !222, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !219, file: !195, line: 100, baseType: !177, size: 16)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !198, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !198, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !198, file: !195, line: 131, baseType: !232, size: 192, offset: 192)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !233)
!233 = !{!234, !235, !241}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !232, file: !128, line: 245, baseType: !204, size: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !232, file: !128, line: 246, baseType: !236, size: 32, offset: 64)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !237)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 32)
!238 = !DISubroutineType(types: !239)
!239 = !{null, !240}
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !232, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !194, file: !195, line: 250, baseType: !243, size: 288, offset: 384)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !245)
!244 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!245 = !{!246, !247, !248, !249, !250, !251, !252, !253, !254}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !243, file: !244, line: 26, baseType: !108, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !243, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !243, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !243, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !243, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !243, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !243, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !243, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !243, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !194, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !194, file: !195, line: 256, baseType: !127, size: 64, offset: 704)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !194, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !194, file: !195, line: 300, baseType: !259, size: 96, offset: 800)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !260)
!260 = !{!261, !262, !263}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !259, file: !195, line: 153, baseType: !22, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !259, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !259, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !194, file: !195, line: 325, baseType: !265, size: 32, offset: 896)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !267)
!267 = !{!268, !277, !278}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !266, file: !124, line: 5074, baseType: !269, size: 96)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !271)
!270 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!271 = !{!272, !275, !276}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !269, file: !270, line: 57, baseType: !273, size: 32)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !270, line: 57, flags: DIFlagFwdDecl)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !269, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !269, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !266, file: !124, line: 5075, baseType: !127, size: 64, offset: 96)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !266, file: !124, line: 5076, baseType: !148, size: 32, offset: 160)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !194, file: !195, line: 343, baseType: !280, size: 64, offset: 928)
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !281)
!281 = !{!282, !283}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !280, file: !244, line: 63, baseType: !108, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !280, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !189, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !189, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !173, file: !116, line: 61, baseType: !287, size: 32, offset: 160)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !289, line: 40, baseType: !290)
!289 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !289, line: 35, size: 64, elements: !291)
!291 = !{!292, !299}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !290, file: !289, line: 36, baseType: !293, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !295)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !296)
!296 = !{!297}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !295, file: !289, line: 30, baseType: !298, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 32)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !290, file: !289, line: 37, baseType: !293, size: 32, offset: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !173, file: !116, line: 67, baseType: !301, size: 32, offset: 192)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !303)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 32)
!304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !115)
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "_k_thread_data_consumer_thread_id", scope: !27, file: !114, line: 25, type: !307, isLocal: false, isDefinition: true, align: 32)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !124, line: 620, size: 384, elements: !308)
!308 = !{!309, !310, !318, !319, !324, !325, !326, !327, !328, !329, !331, !335}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !307, file: !124, line: 621, baseType: !193, size: 32)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !307, file: !124, line: 622, baseType: !311, size: 32, offset: 32)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !313, line: 44, baseType: !314)
!313 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !315, line: 47, size: 8, elements: !316)
!315 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!316 = !{!317}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !314, file: !315, line: 48, baseType: !158, size: 8)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !307, file: !124, line: 623, baseType: !32, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !307, file: !124, line: 624, baseType: !320, size: 32, offset: 96)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !313, line: 46, baseType: !321)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!322 = !DISubroutineType(types: !323)
!323 = !{null, !102, !102, !102}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !307, file: !124, line: 625, baseType: !102, size: 32, offset: 128)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !307, file: !124, line: 626, baseType: !102, size: 32, offset: 160)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !307, file: !124, line: 627, baseType: !102, size: 32, offset: 192)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !307, file: !124, line: 628, baseType: !103, size: 32, offset: 224)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !307, file: !124, line: 629, baseType: !108, size: 32, offset: 256)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !307, file: !124, line: 630, baseType: !330, size: 32, offset: 288)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !307, file: !124, line: 631, baseType: !332, size: 32, offset: 320)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 32)
!333 = !DISubroutineType(types: !334)
!334 = !{null}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !307, file: !124, line: 632, baseType: !336, size: 32, offset: 352)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !158)
!338 = !DIGlobalVariableExpression(var: !339, expr: !DIExpression())
!339 = distinct !DIGlobalVariable(name: "consumer_thread_id", scope: !27, file: !114, line: 25, type: !340, isLocal: false, isDefinition: true)
!340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !341)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !193)
!342 = !DIGlobalVariableExpression(var: !343, expr: !DIExpression())
!343 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_consumer_sub", scope: !27, file: !114, line: 11, type: !344, isLocal: true, isDefinition: true, align: 32)
!344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 128, elements: !345)
!345 = !{!346}
!346 = !DISubrange(count: 16)
!347 = !DIGlobalVariableExpression(var: !348, expr: !DIExpression())
!348 = distinct !DIGlobalVariable(name: "_k_thread_stack_consumer_thread_id", scope: !27, file: !114, line: 25, type: !349, isLocal: false, isDefinition: true, align: 512)
!349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 4608, elements: !350)
!350 = !{!351}
!351 = !DISubrange(count: 576)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "_k_thread_obj_consumer_thread_id", scope: !27, file: !114, line: 25, type: !194, isLocal: false, isDefinition: true)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "_zbus_mutex_processed_data_chan", scope: !356, file: !362, line: 15, type: !372, isLocal: true, isDefinition: true, align: 32)
!356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !358, globals: !359, splitDebugInlining: false, nameTableKind: None)
!357 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/runtime_obs_registration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!358 = !{!104, !102, !103, !108, !109}
!359 = !{!354, !360, !522, !524, !526, !528, !530, !535, !543}
!360 = !DIGlobalVariableExpression(var: !361, expr: !DIExpression())
!361 = distinct !DIGlobalVariable(name: "processed_data_chan", scope: !356, file: !362, line: 15, type: !363, isLocal: false, isDefinition: true, align: 32)
!362 = !DIFile(filename: "zephyr/samples/subsys/zbus/runtime_obs_registration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !364)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !365)
!365 = !{!366, !367, !368, !369, !370, !480, !493}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !364, file: !116, line: 35, baseType: !176, size: 16)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !364, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !364, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !364, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !364, file: !116, line: 56, baseType: !371, size: 32, offset: 128)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !373)
!373 = !{!374, !393, !478, !479}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !372, file: !124, line: 2722, baseType: !375, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !376)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !377)
!377 = !{!378}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !376, file: !128, line: 232, baseType: !379, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !381)
!381 = !{!382, !388}
!382 = !DIDerivedType(tag: DW_TAG_member, scope: !380, file: !133, line: 38, baseType: !383, size: 32)
!383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !380, file: !133, line: 38, size: 32, elements: !384)
!384 = !{!385, !387}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !383, file: !133, line: 39, baseType: !386, size: 32)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !383, file: !133, line: 40, baseType: !386, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, scope: !380, file: !133, line: 42, baseType: !389, size: 32, offset: 32)
!389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !380, file: !133, line: 42, size: 32, elements: !390)
!390 = !{!391, !392}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !389, file: !133, line: 43, baseType: !386, size: 32)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !389, file: !133, line: 44, baseType: !386, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !372, file: !124, line: 2724, baseType: !394, size: 32, offset: 64)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 32)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !396)
!396 = !{!397, !437, !449, !450, !451, !452, !458, !473}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !395, file: !195, line: 247, baseType: !398, size: 384)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !399)
!399 = !{!400, !411, !413, !414, !415, !424, !425, !426}
!400 = !DIDerivedType(tag: DW_TAG_member, scope: !398, file: !195, line: 60, baseType: !401, size: 64)
!401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !398, file: !195, line: 60, size: 64, elements: !402)
!402 = !{!403, !405}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !401, file: !195, line: 61, baseType: !404, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !380)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !401, file: !195, line: 62, baseType: !406, size: 64)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !407)
!407 = !{!408}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !406, file: !207, line: 50, baseType: !409, size: 64)
!409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 64, elements: !212)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 32)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !398, file: !195, line: 68, baseType: !412, size: 32, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !398, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !398, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!415 = !DIDerivedType(tag: DW_TAG_member, scope: !398, file: !195, line: 90, baseType: !416, size: 16, offset: 112)
!416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !398, file: !195, line: 90, size: 16, elements: !417)
!417 = !{!418, !423}
!418 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !195, line: 91, baseType: !419, size: 16)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !416, file: !195, line: 91, size: 16, elements: !420)
!420 = !{!421, !422}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !419, file: !195, line: 96, baseType: !225, size: 8)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !419, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !416, file: !195, line: 100, baseType: !177, size: 16)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !398, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !398, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !398, file: !195, line: 131, baseType: !427, size: 192, offset: 192)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !428)
!428 = !{!429, !430, !436}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !427, file: !128, line: 245, baseType: !404, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !427, file: !128, line: 246, baseType: !431, size: 32, offset: 64)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !432)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 32)
!433 = !DISubroutineType(types: !434)
!434 = !{null, !435}
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !427, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !395, file: !195, line: 250, baseType: !438, size: 288, offset: 384)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !439)
!439 = !{!440, !441, !442, !443, !444, !445, !446, !447, !448}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !438, file: !244, line: 26, baseType: !108, size: 32)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !438, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !438, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !438, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !438, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !438, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !438, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !438, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !438, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !395, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !395, file: !195, line: 256, baseType: !375, size: 64, offset: 704)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !395, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !395, file: !195, line: 300, baseType: !453, size: 96, offset: 800)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !454)
!454 = !{!455, !456, !457}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !453, file: !195, line: 153, baseType: !22, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !453, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !453, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !395, file: !195, line: 325, baseType: !459, size: 32, offset: 896)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 32)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !461)
!461 = !{!462, !468, !469}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !460, file: !124, line: 5074, baseType: !463, size: 96)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !464)
!464 = !{!465, !466, !467}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !463, file: !270, line: 57, baseType: !273, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !463, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !463, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !460, file: !124, line: 5075, baseType: !375, size: 64, offset: 96)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !460, file: !124, line: 5076, baseType: !470, size: 32, offset: 160)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !471)
!471 = !{!472}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !470, file: !149, line: 52, baseType: !22, size: 32)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !395, file: !195, line: 343, baseType: !474, size: 64, offset: 928)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !475)
!475 = !{!476, !477}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !474, file: !244, line: 63, baseType: !108, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !474, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !372, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !372, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !364, file: !116, line: 61, baseType: !481, size: 32, offset: 160)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 32)
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !289, line: 40, baseType: !483)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !289, line: 35, size: 64, elements: !484)
!484 = !{!485, !492}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !483, file: !289, line: 36, baseType: !486, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !488)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !489)
!489 = !{!490}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !488, file: !289, line: 30, baseType: !491, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !483, file: !289, line: 37, baseType: !486, size: 32, offset: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !364, file: !116, line: 67, baseType: !494, size: 32, offset: 192)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !496)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !498)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !499)
!499 = !{!500, !501, !516}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !498, file: !116, line: 91, baseType: !119, size: 8)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !498, file: !116, line: 93, baseType: !502, size: 32, offset: 32)
!502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !503)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 32)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !505)
!505 = !{!506, !507, !508, !509, !510, !511, !512, !513, !514, !515}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !504, file: !124, line: 4206, baseType: !375, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !504, file: !124, line: 4208, baseType: !470, size: 32, offset: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !504, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !504, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !504, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !504, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !504, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !504, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !504, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !504, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !498, file: !116, line: 96, baseType: !517, size: 32, offset: 64)
!517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !518)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 32)
!519 = !DISubroutineType(types: !520)
!520 = !{null, !521}
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 32)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "filter_lis", scope: !356, file: !362, line: 38, type: !498, isLocal: false, isDefinition: true, align: 32)
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_state_change_sub", scope: !356, file: !362, line: 40, type: !504, isLocal: false, isDefinition: true, align: 32)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "state_change_sub", scope: !356, file: !362, line: 40, type: !498, isLocal: false, isDefinition: true, align: 32)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "_runtime_observers_processed_data_chan", scope: !356, file: !362, line: 15, type: !482, isLocal: true, isDefinition: true)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_state_change_sub", scope: !356, file: !362, line: 40, type: !532, isLocal: true, isDefinition: true, align: 32)
!532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 160, elements: !533)
!533 = !{!534}
!534 = !DISubrange(count: 20)
!535 = !DIGlobalVariableExpression(var: !536, expr: !DIExpression())
!536 = distinct !DIGlobalVariable(name: "_zbus_message_processed_data_chan", scope: !356, file: !362, line: 15, type: !537, isLocal: true, isDefinition: true)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_msg", file: !538, line: 11, size: 96, elements: !539)
!538 = !DIFile(filename: "zephyr/samples/subsys/zbus/runtime_obs_registration/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!539 = !{!540, !541, !542}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !537, file: !538, line: 12, baseType: !103, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !537, file: !538, line: 13, baseType: !103, size: 32, offset: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !537, file: !538, line: 14, baseType: !103, size: 32, offset: 64)
!543 = !DIGlobalVariableExpression(var: !544, expr: !DIExpression())
!544 = distinct !DIGlobalVariable(name: "_zbus_observers_processed_data_chan", scope: !356, file: !362, line: 15, type: !545, isLocal: true, isDefinition: true)
!545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !495, size: 64, elements: !212)
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "_zbus_mutex_raw_data_chan", scope: !548, file: !553, line: 11, type: !563, isLocal: true, isDefinition: true, align: 32)
!548 = distinct !DICompileUnit(language: DW_LANG_C99, file: !549, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !550, splitDebugInlining: false, nameTableKind: None)
!549 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/runtime_obs_registration/src/producer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!550 = !{!546, !551, !713, !715, !717, !738, !742, !744, !746, !749, !751, !758, !763, !765}
!551 = !DIGlobalVariableExpression(var: !552, expr: !DIExpression())
!552 = distinct !DIGlobalVariable(name: "raw_data_chan", scope: !548, file: !553, line: 11, type: !554, isLocal: false, isDefinition: true, align: 32)
!553 = !DIFile(filename: "zephyr/samples/subsys/zbus/runtime_obs_registration/src/producer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !556)
!556 = !{!557, !558, !559, !560, !561, !671, !684}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !555, file: !116, line: 35, baseType: !176, size: 16)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !555, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !555, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !555, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !555, file: !116, line: 56, baseType: !562, size: 32, offset: 128)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 32)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !564)
!564 = !{!565, !584, !669, !670}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !563, file: !124, line: 2722, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !567)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !568)
!568 = !{!569}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !567, file: !128, line: 232, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !571)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !572)
!572 = !{!573, !579}
!573 = !DIDerivedType(tag: DW_TAG_member, scope: !571, file: !133, line: 38, baseType: !574, size: 32)
!574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !571, file: !133, line: 38, size: 32, elements: !575)
!575 = !{!576, !578}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !574, file: !133, line: 39, baseType: !577, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !574, file: !133, line: 40, baseType: !577, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, scope: !571, file: !133, line: 42, baseType: !580, size: 32, offset: 32)
!580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !571, file: !133, line: 42, size: 32, elements: !581)
!581 = !{!582, !583}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !580, file: !133, line: 43, baseType: !577, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !580, file: !133, line: 44, baseType: !577, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !563, file: !124, line: 2724, baseType: !585, size: 32, offset: 64)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !587)
!587 = !{!588, !628, !640, !641, !642, !643, !649, !664}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !586, file: !195, line: 247, baseType: !589, size: 384)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !590)
!590 = !{!591, !602, !604, !605, !606, !615, !616, !617}
!591 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !195, line: 60, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !195, line: 60, size: 64, elements: !593)
!593 = !{!594, !596}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !592, file: !195, line: 61, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !571)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !592, file: !195, line: 62, baseType: !597, size: 64)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !598)
!598 = !{!599}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !597, file: !207, line: 50, baseType: !600, size: 64)
!600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !601, size: 64, elements: !212)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !589, file: !195, line: 68, baseType: !603, size: 32, offset: 64)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !589, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !589, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!606 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !195, line: 90, baseType: !607, size: 16, offset: 112)
!607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !195, line: 90, size: 16, elements: !608)
!608 = !{!609, !614}
!609 = !DIDerivedType(tag: DW_TAG_member, scope: !607, file: !195, line: 91, baseType: !610, size: 16)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !607, file: !195, line: 91, size: 16, elements: !611)
!611 = !{!612, !613}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !610, file: !195, line: 96, baseType: !225, size: 8)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !610, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !607, file: !195, line: 100, baseType: !177, size: 16)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !589, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !589, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !589, file: !195, line: 131, baseType: !618, size: 192, offset: 192)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !619)
!619 = !{!620, !621, !627}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !618, file: !128, line: 245, baseType: !595, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !618, file: !128, line: 246, baseType: !622, size: 32, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !623)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 32)
!624 = !DISubroutineType(types: !625)
!625 = !{null, !626}
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !618, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !586, file: !195, line: 250, baseType: !629, size: 288, offset: 384)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !630)
!630 = !{!631, !632, !633, !634, !635, !636, !637, !638, !639}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !629, file: !244, line: 26, baseType: !108, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !629, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !629, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !629, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !629, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !629, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !629, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !629, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !629, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !586, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !586, file: !195, line: 256, baseType: !566, size: 64, offset: 704)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !586, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !586, file: !195, line: 300, baseType: !644, size: 96, offset: 800)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !645)
!645 = !{!646, !647, !648}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !644, file: !195, line: 153, baseType: !22, size: 32)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !644, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !644, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !586, file: !195, line: 325, baseType: !650, size: 32, offset: 896)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 32)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !652)
!652 = !{!653, !659, !660}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !651, file: !124, line: 5074, baseType: !654, size: 96)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !655)
!655 = !{!656, !657, !658}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !654, file: !270, line: 57, baseType: !273, size: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !654, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !654, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !651, file: !124, line: 5075, baseType: !566, size: 64, offset: 96)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !651, file: !124, line: 5076, baseType: !661, size: 32, offset: 160)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !662)
!662 = !{!663}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !661, file: !149, line: 52, baseType: !22, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !586, file: !195, line: 343, baseType: !665, size: 64, offset: 928)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !666)
!666 = !{!667, !668}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !665, file: !244, line: 63, baseType: !108, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !665, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !563, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !563, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !555, file: !116, line: 61, baseType: !672, size: 32, offset: 160)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 32)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !289, line: 40, baseType: !674)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !289, line: 35, size: 64, elements: !675)
!675 = !{!676, !683}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !674, file: !289, line: 36, baseType: !677, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !679)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !680)
!680 = !{!681}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !679, file: !289, line: 30, baseType: !682, size: 32)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !674, file: !289, line: 37, baseType: !677, size: 32, offset: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !555, file: !116, line: 67, baseType: !685, size: 32, offset: 192)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !687)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !689)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !690)
!690 = !{!691, !692, !707}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !689, file: !116, line: 91, baseType: !119, size: 8)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !689, file: !116, line: 93, baseType: !693, size: 32, offset: 32)
!693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 32)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !696)
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !695, file: !124, line: 4206, baseType: !566, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !695, file: !124, line: 4208, baseType: !661, size: 32, offset: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !695, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !695, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !695, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !695, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !695, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !695, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !695, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !695, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !689, file: !116, line: 96, baseType: !708, size: 32, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !709)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 32)
!710 = !DISubroutineType(types: !711)
!711 = !{null, !712}
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 32)
!713 = !DIGlobalVariableExpression(var: !714, expr: !DIExpression())
!714 = distinct !DIGlobalVariable(name: "_zbus_mutex_state_chan", scope: !548, file: !553, line: 14, type: !563, isLocal: true, isDefinition: true, align: 32)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "state_chan", scope: !548, file: !553, line: 14, type: !554, isLocal: false, isDefinition: true, align: 32)
!717 = !DIGlobalVariableExpression(var: !718, expr: !DIExpression())
!718 = distinct !DIGlobalVariable(name: "_k_thread_data_produce_thread_id", scope: !548, file: !553, line: 43, type: !719, isLocal: false, isDefinition: true, align: 32)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !124, line: 620, size: 384, elements: !720)
!720 = !{!721, !722, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !719, file: !124, line: 621, baseType: !585, size: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !719, file: !124, line: 622, baseType: !723, size: 32, offset: 32)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !313, line: 44, baseType: !725)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !315, line: 47, size: 8, elements: !726)
!726 = !{!727}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !725, file: !315, line: 48, baseType: !158, size: 8)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !719, file: !124, line: 623, baseType: !32, size: 32, offset: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !719, file: !124, line: 624, baseType: !320, size: 32, offset: 96)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !719, file: !124, line: 625, baseType: !102, size: 32, offset: 128)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !719, file: !124, line: 626, baseType: !102, size: 32, offset: 160)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !719, file: !124, line: 627, baseType: !102, size: 32, offset: 192)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !719, file: !124, line: 628, baseType: !103, size: 32, offset: 224)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !719, file: !124, line: 629, baseType: !108, size: 32, offset: 256)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !719, file: !124, line: 630, baseType: !330, size: 32, offset: 288)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !719, file: !124, line: 631, baseType: !332, size: 32, offset: 320)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !719, file: !124, line: 632, baseType: !336, size: 32, offset: 352)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "produce_thread_id", scope: !548, file: !553, line: 43, type: !740, isLocal: false, isDefinition: true)
!740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !741)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !585)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "_runtime_observers_raw_data_chan", scope: !548, file: !553, line: 11, type: !673, isLocal: true, isDefinition: true)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "_runtime_observers_state_chan", scope: !548, file: !553, line: 14, type: !673, isLocal: true, isDefinition: true)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "_k_thread_stack_produce_thread_id", scope: !548, file: !553, line: 43, type: !748, isLocal: false, isDefinition: true, align: 512)
!748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 4608, elements: !350)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "_k_thread_obj_produce_thread_id", scope: !548, file: !553, line: 43, type: !586, isLocal: false, isDefinition: true)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "_zbus_message_raw_data_chan", scope: !548, file: !553, line: 11, type: !753, isLocal: true, isDefinition: true)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_msg", file: !538, line: 11, size: 96, elements: !754)
!754 = !{!755, !756, !757}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !753, file: !538, line: 12, baseType: !103, size: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !753, file: !538, line: 13, baseType: !103, size: 32, offset: 32)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !753, file: !538, line: 14, baseType: !103, size: 32, offset: 64)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "_zbus_observers_raw_data_chan", scope: !548, file: !553, line: 11, type: !760, isLocal: true, isDefinition: true)
!760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !686, size: 32, elements: !761)
!761 = !{!762}
!762 = !DISubrange(count: 1)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "_zbus_message_state_chan", scope: !548, file: !553, line: 14, type: !119, isLocal: true, isDefinition: true)
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "_zbus_observers_state_chan", scope: !548, file: !553, line: 14, type: !767, isLocal: true, isDefinition: true)
!767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !686, size: 64, elements: !212)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !770, file: !785, line: 18, type: !786, isLocal: false, isDefinition: true)
!770 = distinct !DICompileUnit(language: DW_LANG_C99, file: !771, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !772, globals: !784, splitDebugInlining: false, nameTableKind: None)
!771 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!772 = !{!22, !102, !24, !773, !775, !777, !153, !103, !778, !779, !781, !782, !157, !783, !177, !336}
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 32)
!774 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 32)
!776 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 32)
!780 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!784 = !{!768}
!785 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !787)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !788, line: 16, size: 64, elements: !789)
!788 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!789 = !{!790, !791}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !787, file: !788, line: 17, baseType: !336, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !787, file: !788, line: 18, baseType: !164, size: 8, offset: 32)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "_char_out", scope: !794, file: !798, line: 54, type: !799, isLocal: false, isDefinition: true)
!794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !795, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, globals: !797, splitDebugInlining: false, nameTableKind: None)
!795 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!796 = !{!102, !103}
!797 = !{!792}
!798 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 32)
!800 = !DISubroutineType(types: !801)
!801 = !{!103, !103}
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !804, file: !834, line: 60, type: !835, isLocal: true, isDefinition: true, align: 32)
!804 = distinct !DICompileUnit(language: DW_LANG_C99, file: !805, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !806, globals: !833, splitDebugInlining: false, nameTableKind: None)
!805 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!806 = !{!807, !827}
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !809, line: 386, baseType: !810)
!809 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 370, size: 448, elements: !811)
!811 = !{!812, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !810, file: !809, line: 372, baseType: !813, size: 32)
!813 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !810, file: !809, line: 373, baseType: !813, size: 32, offset: 32)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !810, file: !809, line: 374, baseType: !813, size: 32, offset: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !810, file: !809, line: 375, baseType: !813, size: 32, offset: 96)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !810, file: !809, line: 376, baseType: !813, size: 32, offset: 128)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !810, file: !809, line: 377, baseType: !813, size: 32, offset: 160)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !810, file: !809, line: 378, baseType: !813, size: 32, offset: 192)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !810, file: !809, line: 379, baseType: !813, size: 32, offset: 224)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !810, file: !809, line: 380, baseType: !813, size: 32, offset: 256)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !810, file: !809, line: 381, baseType: !813, size: 32, offset: 288)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !810, file: !809, line: 382, baseType: !813, size: 32, offset: 320)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !810, file: !809, line: 383, baseType: !813, size: 32, offset: 352)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !810, file: !809, line: 384, baseType: !813, size: 32, offset: 384)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !810, file: !809, line: 385, baseType: !813, size: 32, offset: 416)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !809, line: 364, baseType: !829)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 360, size: 64, elements: !830)
!830 = !{!831, !832}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !829, file: !809, line: 362, baseType: !813, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !829, file: !809, line: 363, baseType: !813, size: 32, offset: 32)
!833 = !{!802}
!834 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !836)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !837, line: 51, size: 64, elements: !838)
!837 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!838 = !{!839, !864}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !836, file: !837, line: 60, baseType: !840, size: 32)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = !DISubroutineType(types: !842)
!842 = !{!103, !843}
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !845)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !846, line: 378, size: 192, elements: !847)
!846 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!847 = !{!848, !849, !850, !851, !857, !858}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !845, file: !846, line: 380, baseType: !336, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !845, file: !846, line: 382, baseType: !13, size: 32, offset: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !845, file: !846, line: 384, baseType: !13, size: 32, offset: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !845, file: !846, line: 386, baseType: !852, size: 32, offset: 96)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 32)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !846, line: 351, size: 16, elements: !854)
!854 = !{!855, !856}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !853, file: !846, line: 359, baseType: !164, size: 8)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !853, file: !846, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !845, file: !846, line: 388, baseType: !102, size: 32, offset: 128)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !845, file: !846, line: 396, baseType: !859, size: 32, offset: 160)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !861)
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !846, line: 43, baseType: !862)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !863)
!863 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !836, file: !837, line: 65, baseType: !843, size: 32, offset: 32)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !867, file: !870, line: 71, type: !871, isLocal: true, isDefinition: true, align: 32)
!867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !869, splitDebugInlining: false, nameTableKind: None)
!868 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!869 = !{!865}
!870 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !872)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !837, line: 51, size: 64, elements: !873)
!873 = !{!874, !893}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !872, file: !837, line: 60, baseType: !875, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 32)
!876 = !DISubroutineType(types: !877)
!877 = !{!103, !878}
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !880)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !846, line: 378, size: 192, elements: !881)
!881 = !{!882, !883, !884, !885, !891, !892}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !880, file: !846, line: 380, baseType: !336, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !880, file: !846, line: 382, baseType: !13, size: 32, offset: 32)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !880, file: !846, line: 384, baseType: !13, size: 32, offset: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !880, file: !846, line: 386, baseType: !886, size: 32, offset: 96)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 32)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !846, line: 351, size: 16, elements: !888)
!888 = !{!889, !890}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !887, file: !846, line: 359, baseType: !164, size: 8)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !887, file: !846, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !880, file: !846, line: 388, baseType: !102, size: 32, offset: 128)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !880, file: !846, line: 396, baseType: !859, size: 32, offset: 160)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !872, file: !837, line: 65, baseType: !878, size: 32, offset: 32)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !896, file: !903, line: 17, type: !1029, isLocal: false, isDefinition: true)
!896 = distinct !DICompileUnit(language: DW_LANG_C99, file: !897, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !898, globals: !899, splitDebugInlining: false, nameTableKind: None)
!897 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!898 = !{!153, !103, !108, !102}
!899 = !{!894, !900, !1025}
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !902, file: !903, line: 198, type: !1013, isLocal: true, isDefinition: true)
!902 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !903, file: !903, line: 175, type: !904, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !1008)
!903 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!904 = !DISubroutineType(types: !905)
!905 = !{null, !906}
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 32)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !908)
!908 = !{!909, !967, !979, !980, !981, !982, !988, !1003}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !907, file: !195, line: 247, baseType: !910, size: 384)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !911)
!911 = !{!912, !936, !943, !944, !945, !954, !955, !956}
!912 = !DIDerivedType(tag: DW_TAG_member, scope: !910, file: !195, line: 60, baseType: !913, size: 64)
!913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !910, file: !195, line: 60, size: 64, elements: !914)
!914 = !{!915, !930}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !913, file: !195, line: 61, baseType: !916, size: 64)
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !917)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !918)
!918 = !{!919, !925}
!919 = !DIDerivedType(tag: DW_TAG_member, scope: !917, file: !133, line: 38, baseType: !920, size: 32)
!920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !917, file: !133, line: 38, size: 32, elements: !921)
!921 = !{!922, !924}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !920, file: !133, line: 39, baseType: !923, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !920, file: !133, line: 40, baseType: !923, size: 32)
!925 = !DIDerivedType(tag: DW_TAG_member, scope: !917, file: !133, line: 42, baseType: !926, size: 32, offset: 32)
!926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !917, file: !133, line: 42, size: 32, elements: !927)
!927 = !{!928, !929}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !926, file: !133, line: 43, baseType: !923, size: 32)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !926, file: !133, line: 44, baseType: !923, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !913, file: !195, line: 62, baseType: !931, size: 64)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !932)
!932 = !{!933}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !931, file: !207, line: 50, baseType: !934, size: 64)
!934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !935, size: 64, elements: !212)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !910, file: !195, line: 68, baseType: !937, size: 32, offset: 64)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !939)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !940)
!940 = !{!941}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !939, file: !128, line: 232, baseType: !942, size: 64)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !917)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !910, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !910, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!945 = !DIDerivedType(tag: DW_TAG_member, scope: !910, file: !195, line: 90, baseType: !946, size: 16, offset: 112)
!946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !910, file: !195, line: 90, size: 16, elements: !947)
!947 = !{!948, !953}
!948 = !DIDerivedType(tag: DW_TAG_member, scope: !946, file: !195, line: 91, baseType: !949, size: 16)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !946, file: !195, line: 91, size: 16, elements: !950)
!950 = !{!951, !952}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !949, file: !195, line: 96, baseType: !225, size: 8)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !949, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !946, file: !195, line: 100, baseType: !177, size: 16)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !910, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !910, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !910, file: !195, line: 131, baseType: !957, size: 192, offset: 192)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !958)
!958 = !{!959, !960, !966}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !957, file: !128, line: 245, baseType: !916, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !957, file: !128, line: 246, baseType: !961, size: 32, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !962)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DISubroutineType(types: !964)
!964 = !{null, !965}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !957, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !907, file: !195, line: 250, baseType: !968, size: 288, offset: 384)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !969)
!969 = !{!970, !971, !972, !973, !974, !975, !976, !977, !978}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !968, file: !244, line: 26, baseType: !108, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !968, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !968, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !968, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !968, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !968, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !968, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !968, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !968, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !907, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !907, file: !195, line: 256, baseType: !938, size: 64, offset: 704)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !907, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !907, file: !195, line: 300, baseType: !983, size: 96, offset: 800)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !984)
!984 = !{!985, !986, !987}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !983, file: !195, line: 153, baseType: !22, size: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !983, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !983, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !907, file: !195, line: 325, baseType: !989, size: 32, offset: 896)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 32)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !991)
!991 = !{!992, !998, !999}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !990, file: !124, line: 5074, baseType: !993, size: 96)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !994)
!994 = !{!995, !996, !997}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !993, file: !270, line: 57, baseType: !273, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !993, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !993, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !990, file: !124, line: 5075, baseType: !938, size: 64, offset: 96)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !990, file: !124, line: 5076, baseType: !1000, size: 32, offset: 160)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !1001)
!1001 = !{!1002}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1000, file: !149, line: 52, baseType: !22, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !907, file: !195, line: 343, baseType: !1004, size: 64, offset: 928)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !1005)
!1005 = !{!1006, !1007}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1004, file: !244, line: 63, baseType: !108, size: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1004, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!1008 = !{!1009, !1010, !1011, !1012}
!1009 = !DILocalVariable(name: "thread", arg: 1, scope: !902, file: !903, line: 175, type: !906)
!1010 = !DILocalVariable(name: "region_num", scope: !902, file: !903, line: 200, type: !164)
!1011 = !DILocalVariable(name: "guard_start", scope: !902, file: !903, line: 265, type: !22)
!1012 = !DILocalVariable(name: "guard_size", scope: !902, file: !903, line: 266, type: !153)
!1013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1014, size: 96, elements: !761)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !1015, line: 52, size: 96, elements: !1016)
!1015 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1016 = !{!1017, !1018, !1019}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1014, file: !1015, line: 53, baseType: !22, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1014, file: !1015, line: 54, baseType: !153, size: 32, offset: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1014, file: !1015, line: 55, baseType: !1020, size: 32, offset: 64)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !1021, line: 151, baseType: !1022)
!1021 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1021, line: 149, size: 32, elements: !1023)
!1023 = !{!1024}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !1022, file: !1021, line: 150, baseType: !108, size: 32)
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(name: "static_regions", scope: !896, file: !903, line: 62, type: !1027, isLocal: true, isDefinition: true)
!1027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 96, elements: !761)
!1028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1014)
!1029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !788, line: 16, size: 64, elements: !1031)
!1031 = !{!1032, !1033}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1030, file: !788, line: 17, baseType: !336, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1030, file: !788, line: 18, baseType: !164, size: 8, offset: 32)
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !1036, file: !1069, line: 39, type: !164, isLocal: true, isDefinition: true)
!1036 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1037, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1038, globals: !1068, splitDebugInlining: false, nameTableKind: None)
!1037 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!1038 = !{!1039, !102, !103, !1056, !164}
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !1041, line: 1168, baseType: !1042)
!1041 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 1155, size: 352, elements: !1043)
!1043 = !{!1044, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !1042, file: !1041, line: 1157, baseType: !1045, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1042, file: !1041, line: 1158, baseType: !813, size: 32, offset: 32)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !1042, file: !1041, line: 1159, baseType: !813, size: 32, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !1042, file: !1041, line: 1160, baseType: !813, size: 32, offset: 96)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !1042, file: !1041, line: 1161, baseType: !813, size: 32, offset: 128)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !1042, file: !1041, line: 1162, baseType: !813, size: 32, offset: 160)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !1042, file: !1041, line: 1163, baseType: !813, size: 32, offset: 192)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !1042, file: !1041, line: 1164, baseType: !813, size: 32, offset: 224)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !1042, file: !1041, line: 1165, baseType: !813, size: 32, offset: 256)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !1042, file: !1041, line: 1166, baseType: !813, size: 32, offset: 288)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !1042, file: !1041, line: 1167, baseType: !813, size: 32, offset: 320)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1058)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !1059, line: 27, size: 96, elements: !1060)
!1059 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1060 = !{!1061, !1062, !1063}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1058, file: !1059, line: 29, baseType: !108, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1058, file: !1059, line: 31, baseType: !336, size: 32, offset: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1058, file: !1059, line: 37, baseType: !1064, size: 32, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !1021, line: 146, baseType: !1065)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !1021, line: 141, size: 32, elements: !1066)
!1066 = !{!1067}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !1065, file: !1021, line: 143, baseType: !108, size: 32)
!1068 = !{!1034}
!1069 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1070 = !DIGlobalVariableExpression(var: !1071, expr: !DIExpression())
!1071 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !1072, file: !1079, line: 21, type: !799, isLocal: true, isDefinition: true)
!1072 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1073, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1074, globals: !1078, splitDebugInlining: false, nameTableKind: None)
!1073 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!1074 = !{!1075, !103, !102}
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1077, line: 22, baseType: !103)
!1077 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1078 = !{!1070}
!1079 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !1082, file: !1087, line: 13, type: !1104, isLocal: true, isDefinition: true)
!1082 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1083, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1084, splitDebugInlining: false, nameTableKind: None)
!1083 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!1084 = !{!1085, !1080}
!1085 = !DIGlobalVariableExpression(var: !1086, expr: !DIExpression())
!1086 = distinct !DIGlobalVariable(name: "mpu_config", scope: !1082, file: !1087, line: 37, type: !1088, isLocal: false, isDefinition: true)
!1087 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !1059, line: 41, size: 64, elements: !1090)
!1090 = !{!1091, !1092}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !1089, file: !1059, line: 43, baseType: !108, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !1089, file: !1059, line: 45, baseType: !1093, size: 32, offset: 32)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1095)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !1059, line: 27, size: 96, elements: !1096)
!1096 = !{!1097, !1098, !1099}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1095, file: !1059, line: 29, baseType: !108, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1095, file: !1059, line: 31, baseType: !336, size: 32, offset: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1095, file: !1059, line: 37, baseType: !1100, size: 32, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !1021, line: 146, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !1021, line: 141, size: 32, elements: !1102)
!1102 = !{!1103}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !1101, file: !1021, line: 143, baseType: !108, size: 32)
!1104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1094, size: 192, elements: !212)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !1107, file: !1203, line: 36, type: !1204, isLocal: true, isDefinition: true, align: 32)
!1107 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1108, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1109, retainedTypes: !1121, globals: !1202, splitDebugInlining: false, nameTableKind: None)
!1108 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!1109 = !{!1110, !1116}
!1110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1111, line: 506, baseType: !32, size: 32, elements: !1112)
!1111 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1112 = !{!1113, !1114, !1115}
!1113 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1114 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1115 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1111, line: 512, baseType: !32, size: 32, elements: !1117)
!1117 = !{!1118, !1119, !1120}
!1118 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1119 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1120 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1121 = !{!1122, !1191, !1196, !1157, !1116, !1110, !1201, !102}
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1111, line: 523, size: 288, elements: !1125)
!1125 = !{!1126, !1147, !1153, !1158, !1162, !1163, !1164, !1168, !1187}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1124, file: !1111, line: 524, baseType: !1127, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!103, !1130, !1145, !1146}
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1132)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !846, line: 378, size: 192, elements: !1133)
!1133 = !{!1134, !1135, !1136, !1137, !1143, !1144}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1132, file: !846, line: 380, baseType: !336, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1132, file: !846, line: 382, baseType: !13, size: 32, offset: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1132, file: !846, line: 384, baseType: !13, size: 32, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1132, file: !846, line: 386, baseType: !1138, size: 32, offset: 96)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !846, line: 351, size: 16, elements: !1140)
!1140 = !{!1141, !1142}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1139, file: !846, line: 359, baseType: !164, size: 8)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1139, file: !846, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1132, file: !846, line: 388, baseType: !102, size: 32, offset: 128)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1132, file: !846, line: 396, baseType: !859, size: 32, offset: 160)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1111, line: 237, baseType: !164)
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1111, line: 257, baseType: !108)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1124, file: !1111, line: 530, baseType: !1148, size: 32, offset: 32)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 32)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{!103, !1130, !1151}
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1111, line: 229, baseType: !108)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1124, file: !1111, line: 532, baseType: !1154, size: 32, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!103, !1130, !1157, !1152}
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1111, line: 216, baseType: !108)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1124, file: !1111, line: 535, baseType: !1159, size: 32, offset: 96)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 32)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!103, !1130, !1157}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1124, file: !1111, line: 537, baseType: !1159, size: 32, offset: 128)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1124, file: !1111, line: 539, baseType: !1159, size: 32, offset: 160)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1124, file: !1111, line: 541, baseType: !1165, size: 32, offset: 192)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 32)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{!103, !1130, !1145, !1110, !1116}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1124, file: !1111, line: 544, baseType: !1169, size: 32, offset: 224)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!103, !1130, !1172, !119}
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1111, line: 478, size: 96, elements: !1174)
!1174 = !{!1175, !1181, !1186}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1173, file: !1111, line: 482, baseType: !1176, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !1178)
!1178 = !{!1179}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1177, file: !289, line: 30, baseType: !1180, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1173, file: !1111, line: 485, baseType: !1182, size: 32, offset: 32)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1111, line: 464, baseType: !1183)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{null, !1130, !1172, !1157}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1173, file: !1111, line: 493, baseType: !1157, size: 32, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1124, file: !1111, line: 547, baseType: !1188, size: 32, offset: 256)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!108, !1130}
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1193)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1111, line: 428, size: 32, elements: !1194)
!1194 = !{!1195}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1193, file: !1111, line: 434, baseType: !1157, size: 32)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1111, line: 441, size: 32, elements: !1199)
!1199 = !{!1200}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1198, file: !1111, line: 447, baseType: !1157, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 32)
!1202 = !{!1105}
!1203 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1205)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !837, line: 51, size: 64, elements: !1206)
!1206 = !{!1207, !1211}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1205, file: !837, line: 60, baseType: !1208, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!103, !1130}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1205, file: !837, line: 65, baseType: !1130, size: 32, offset: 32)
!1212 = !DIGlobalVariableExpression(var: !1213, expr: !DIExpression())
!1213 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !1214, file: !1382, line: 10, type: !1383, isLocal: false, isDefinition: true)
!1214 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1215, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1216, globals: !1381, splitDebugInlining: false, nameTableKind: None)
!1215 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!1216 = !{!104, !102, !103, !1217, !157}
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 32)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer_node", file: !116, line: 507, size: 64, elements: !1219)
!1219 = !{!1220, !1226}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1218, file: !116, line: 508, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !1223)
!1223 = !{!1224}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1222, file: !289, line: 30, baseType: !1225, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "obs", scope: !1218, file: !116, line: 509, baseType: !1227, size: 32, offset: 32)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1229)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !1230)
!1230 = !{!1231, !1232, !1268}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1229, file: !116, line: 91, baseType: !119, size: 8)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1229, file: !116, line: 93, baseType: !1233, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1234)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !1236)
!1236 = !{!1237, !1256, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1235, file: !124, line: 4206, baseType: !1238, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !1239)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !1240)
!1240 = !{!1241}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1239, file: !128, line: 232, baseType: !1242, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !1243)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !1244)
!1244 = !{!1245, !1251}
!1245 = !DIDerivedType(tag: DW_TAG_member, scope: !1243, file: !133, line: 38, baseType: !1246, size: 32)
!1246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1243, file: !133, line: 38, size: 32, elements: !1247)
!1247 = !{!1248, !1250}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1246, file: !133, line: 39, baseType: !1249, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1246, file: !133, line: 40, baseType: !1249, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, scope: !1243, file: !133, line: 42, baseType: !1252, size: 32, offset: 32)
!1252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1243, file: !133, line: 42, size: 32, elements: !1253)
!1253 = !{!1254, !1255}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1252, file: !133, line: 43, baseType: !1249, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1252, file: !133, line: 44, baseType: !1249, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1235, file: !124, line: 4208, baseType: !1257, size: 32, offset: 64)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !1258)
!1258 = !{!1259}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1257, file: !149, line: 52, baseType: !22, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !1235, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !1235, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !1235, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1235, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !1235, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !1235, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !1235, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1235, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1229, file: !116, line: 96, baseType: !1269, size: 32, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1270)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{null, !1273}
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1275)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !1276)
!1276 = !{!1277, !1278, !1279, !1280, !1281, !1370, !1378}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !1275, file: !116, line: 35, baseType: !176, size: 16)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1275, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1275, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !1275, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1275, file: !116, line: 56, baseType: !1282, size: 32, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !1284)
!1284 = !{!1285, !1286, !1368, !1369}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1283, file: !124, line: 2722, baseType: !1238, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1283, file: !124, line: 2724, baseType: !1287, size: 32, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !1289)
!1289 = !{!1290, !1330, !1342, !1343, !1344, !1345, !1351, !1363}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1288, file: !195, line: 247, baseType: !1291, size: 384)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !1292)
!1292 = !{!1293, !1304, !1306, !1307, !1308, !1317, !1318, !1319}
!1293 = !DIDerivedType(tag: DW_TAG_member, scope: !1291, file: !195, line: 60, baseType: !1294, size: 64)
!1294 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1291, file: !195, line: 60, size: 64, elements: !1295)
!1295 = !{!1296, !1298}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1294, file: !195, line: 61, baseType: !1297, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !1243)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1294, file: !195, line: 62, baseType: !1299, size: 64)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !1300)
!1300 = !{!1301}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1299, file: !207, line: 50, baseType: !1302, size: 64)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1303, size: 64, elements: !212)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1291, file: !195, line: 68, baseType: !1305, size: 32, offset: 64)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1291, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1291, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!1308 = !DIDerivedType(tag: DW_TAG_member, scope: !1291, file: !195, line: 90, baseType: !1309, size: 16, offset: 112)
!1309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1291, file: !195, line: 90, size: 16, elements: !1310)
!1310 = !{!1311, !1316}
!1311 = !DIDerivedType(tag: DW_TAG_member, scope: !1309, file: !195, line: 91, baseType: !1312, size: 16)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1309, file: !195, line: 91, size: 16, elements: !1313)
!1313 = !{!1314, !1315}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1312, file: !195, line: 96, baseType: !225, size: 8)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1312, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1309, file: !195, line: 100, baseType: !177, size: 16)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1291, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1291, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1291, file: !195, line: 131, baseType: !1320, size: 192, offset: 192)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !1321)
!1321 = !{!1322, !1323, !1329}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1320, file: !128, line: 245, baseType: !1297, size: 64)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1320, file: !128, line: 246, baseType: !1324, size: 32, offset: 64)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !1325)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 32)
!1326 = !DISubroutineType(types: !1327)
!1327 = !{null, !1328}
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1320, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1288, file: !195, line: 250, baseType: !1331, size: 288, offset: 384)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !1332)
!1332 = !{!1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1331, file: !244, line: 26, baseType: !108, size: 32)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1331, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1331, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1331, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1331, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1331, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1331, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1331, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1331, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1288, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1288, file: !195, line: 256, baseType: !1238, size: 64, offset: 704)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1288, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1288, file: !195, line: 300, baseType: !1346, size: 96, offset: 800)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !1347)
!1347 = !{!1348, !1349, !1350}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1346, file: !195, line: 153, baseType: !22, size: 32)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1346, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1346, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1288, file: !195, line: 325, baseType: !1352, size: 32, offset: 896)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 32)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !1354)
!1354 = !{!1355, !1361, !1362}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1353, file: !124, line: 5074, baseType: !1356, size: 96)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !1357)
!1357 = !{!1358, !1359, !1360}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1356, file: !270, line: 57, baseType: !273, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1356, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1356, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1353, file: !124, line: 5075, baseType: !1238, size: 64, offset: 96)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1353, file: !124, line: 5076, baseType: !1257, size: 32, offset: 160)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1288, file: !195, line: 343, baseType: !1364, size: 64, offset: 928)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !1365)
!1365 = !{!1366, !1367}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1364, file: !244, line: 63, baseType: !108, size: 32)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1364, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !1283, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !1283, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !1275, file: !116, line: 61, baseType: !1371, size: 32, offset: 160)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 32)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !289, line: 40, baseType: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !289, line: 35, size: 64, elements: !1374)
!1374 = !{!1375, !1377}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1373, file: !289, line: 36, baseType: !1376, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1373, file: !289, line: 37, baseType: !1376, size: 32, offset: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !1275, file: !116, line: 67, baseType: !1379, size: 32, offset: 192)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1227)
!1381 = !{!1212}
!1382 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !788, line: 16, size: 64, elements: !1385)
!1385 = !{!1386, !1387}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1384, file: !788, line: 17, baseType: !336, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1384, file: !788, line: 18, baseType: !164, size: 8, offset: 32)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "_zbus_runtime_obs_pool", scope: !1390, file: !1561, line: 11, type: !1562, isLocal: true, isDefinition: true, align: 32)
!1390 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1391, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1392, globals: !1558, splitDebugInlining: false, nameTableKind: None)
!1391 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus_runtime_observers.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!1392 = !{!102, !1393, !157, !1557, !103}
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 32)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer_node", file: !116, line: 507, size: 64, elements: !1395)
!1395 = !{!1396, !1402}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1394, file: !116, line: 508, baseType: !1397, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !1398)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !1399)
!1399 = !{!1400}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1398, file: !289, line: 30, baseType: !1401, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "obs", scope: !1394, file: !116, line: 509, baseType: !1403, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1405)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !1406)
!1406 = !{!1407, !1408, !1444}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1405, file: !116, line: 91, baseType: !119, size: 8)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1405, file: !116, line: 93, baseType: !1409, size: 32, offset: 32)
!1409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1410)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 32)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !1412)
!1412 = !{!1413, !1432, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1411, file: !124, line: 4206, baseType: !1414, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !1416)
!1416 = !{!1417}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1415, file: !128, line: 232, baseType: !1418, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !1419)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !1420)
!1420 = !{!1421, !1427}
!1421 = !DIDerivedType(tag: DW_TAG_member, scope: !1419, file: !133, line: 38, baseType: !1422, size: 32)
!1422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1419, file: !133, line: 38, size: 32, elements: !1423)
!1423 = !{!1424, !1426}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1422, file: !133, line: 39, baseType: !1425, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1422, file: !133, line: 40, baseType: !1425, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, scope: !1419, file: !133, line: 42, baseType: !1428, size: 32, offset: 32)
!1428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1419, file: !133, line: 42, size: 32, elements: !1429)
!1429 = !{!1430, !1431}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1428, file: !133, line: 43, baseType: !1425, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1428, file: !133, line: 44, baseType: !1425, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1411, file: !124, line: 4208, baseType: !1433, size: 32, offset: 64)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !1434)
!1434 = !{!1435}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1433, file: !149, line: 52, baseType: !22, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !1411, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !1411, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !1411, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1411, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !1411, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !1411, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !1411, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1411, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1405, file: !116, line: 96, baseType: !1445, size: 32, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1446)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 32)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{null, !1449}
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !1452)
!1452 = !{!1453, !1454, !1455, !1456, !1457, !1546, !1554}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !1451, file: !116, line: 35, baseType: !176, size: 16)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1451, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1451, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !1451, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1451, file: !116, line: 56, baseType: !1458, size: 32, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !1460)
!1460 = !{!1461, !1462, !1544, !1545}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1459, file: !124, line: 2722, baseType: !1414, size: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1459, file: !124, line: 2724, baseType: !1463, size: 32, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !1465)
!1465 = !{!1466, !1506, !1518, !1519, !1520, !1521, !1527, !1539}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1464, file: !195, line: 247, baseType: !1467, size: 384)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !1468)
!1468 = !{!1469, !1480, !1482, !1483, !1484, !1493, !1494, !1495}
!1469 = !DIDerivedType(tag: DW_TAG_member, scope: !1467, file: !195, line: 60, baseType: !1470, size: 64)
!1470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1467, file: !195, line: 60, size: 64, elements: !1471)
!1471 = !{!1472, !1474}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1470, file: !195, line: 61, baseType: !1473, size: 64)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !1419)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1470, file: !195, line: 62, baseType: !1475, size: 64)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !1476)
!1476 = !{!1477}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1475, file: !207, line: 50, baseType: !1478, size: 64)
!1478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1479, size: 64, elements: !212)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1467, file: !195, line: 68, baseType: !1481, size: 32, offset: 64)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 32)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1467, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1467, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!1484 = !DIDerivedType(tag: DW_TAG_member, scope: !1467, file: !195, line: 90, baseType: !1485, size: 16, offset: 112)
!1485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1467, file: !195, line: 90, size: 16, elements: !1486)
!1486 = !{!1487, !1492}
!1487 = !DIDerivedType(tag: DW_TAG_member, scope: !1485, file: !195, line: 91, baseType: !1488, size: 16)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1485, file: !195, line: 91, size: 16, elements: !1489)
!1489 = !{!1490, !1491}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1488, file: !195, line: 96, baseType: !225, size: 8)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1488, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1485, file: !195, line: 100, baseType: !177, size: 16)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1467, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1467, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1467, file: !195, line: 131, baseType: !1496, size: 192, offset: 192)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !1497)
!1497 = !{!1498, !1499, !1505}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1496, file: !128, line: 245, baseType: !1473, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1496, file: !128, line: 246, baseType: !1500, size: 32, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !1501)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{null, !1504}
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1496, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1464, file: !195, line: 250, baseType: !1507, size: 288, offset: 384)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !1508)
!1508 = !{!1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1507, file: !244, line: 26, baseType: !108, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1507, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1507, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1507, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1507, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1507, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1507, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1507, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1507, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1464, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1464, file: !195, line: 256, baseType: !1414, size: 64, offset: 704)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1464, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1464, file: !195, line: 300, baseType: !1522, size: 96, offset: 800)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !1523)
!1523 = !{!1524, !1525, !1526}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1522, file: !195, line: 153, baseType: !22, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1522, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1522, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1464, file: !195, line: 325, baseType: !1528, size: 32, offset: 896)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !1530)
!1530 = !{!1531, !1537, !1538}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1529, file: !124, line: 5074, baseType: !1532, size: 96)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !1533)
!1533 = !{!1534, !1535, !1536}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1532, file: !270, line: 57, baseType: !273, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1532, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1532, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1529, file: !124, line: 5075, baseType: !1414, size: 64, offset: 96)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1529, file: !124, line: 5076, baseType: !1433, size: 32, offset: 160)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1464, file: !195, line: 343, baseType: !1540, size: 64, offset: 928)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !1541)
!1541 = !{!1542, !1543}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1540, file: !244, line: 63, baseType: !108, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1540, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !1459, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !1459, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !1451, file: !116, line: 61, baseType: !1547, size: 32, offset: 160)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !289, line: 40, baseType: !1549)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !289, line: 35, size: 64, elements: !1550)
!1550 = !{!1551, !1553}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1549, file: !289, line: 36, baseType: !1552, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1549, file: !289, line: 37, baseType: !1552, size: 32, offset: 32)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !1451, file: !116, line: 67, baseType: !1555, size: 32, offset: 192)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1403)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!1558 = !{!1388, !1559}
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "_k_mem_slab_buf__zbus_runtime_obs_pool", scope: !1390, file: !1561, line: 11, type: !344, isLocal: true, isDefinition: true, align: 32)
!1561 = !DIFile(filename: "zephyr/subsys/zbus/zbus_runtime_observers.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_slab", file: !124, line: 4836, size: 256, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569, !1570}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1562, file: !124, line: 4837, baseType: !1414, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1562, file: !124, line: 4838, baseType: !1433, size: 32, offset: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "num_blocks", scope: !1562, file: !124, line: 4839, baseType: !108, size: 32, offset: 96)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !1562, file: !124, line: 4840, baseType: !153, size: 32, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1562, file: !124, line: 4841, baseType: !157, size: 32, offset: 160)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "free_list", scope: !1562, file: !124, line: 4842, baseType: !157, size: 32, offset: 192)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "num_used", scope: !1562, file: !124, line: 4843, baseType: !108, size: 32, offset: 224)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !1573, file: !1645, line: 48, type: !1718, isLocal: true, isDefinition: true)
!1573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1574, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1575, retainedTypes: !1631, globals: !1642, splitDebugInlining: false, nameTableKind: None)
!1574 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!1575 = !{!30, !1576}
!1576 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !809, line: 69, baseType: !103, size: 32, elements: !1577)
!1577 = !{!1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630}
!1578 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1579 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1580 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1581 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1582 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1583 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1584 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1585 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1586 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1587 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!1588 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!1589 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!1590 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!1591 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!1592 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!1593 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!1594 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!1595 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!1596 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!1597 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!1598 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!1599 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!1600 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!1601 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!1602 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!1603 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!1604 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!1605 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!1606 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!1607 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!1608 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!1609 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!1610 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!1611 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!1612 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!1613 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!1614 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!1615 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!1616 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!1617 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!1618 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!1619 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!1620 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!1621 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!1622 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!1623 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!1624 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!1625 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!1626 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!1627 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!1628 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!1629 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!1630 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!1631 = !{!153, !103, !102, !1632}
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !809, line: 270, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 262, size: 192, elements: !1635)
!1635 = !{!1636, !1637, !1638, !1639, !1640, !1641}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1634, file: !809, line: 264, baseType: !813, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1634, file: !809, line: 265, baseType: !813, size: 32, offset: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1634, file: !809, line: 266, baseType: !813, size: 32, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1634, file: !809, line: 267, baseType: !813, size: 32, offset: 96)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1634, file: !809, line: 268, baseType: !813, size: 32, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1634, file: !809, line: 269, baseType: !813, size: 32, offset: 160)
!1642 = !{!1643, !1649, !1665, !1676, !1691, !1571, !1693, !1706, !1708, !1710, !1712, !1714, !1716}
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !1573, file: !1645, line: 424, type: !1646, isLocal: false, isDefinition: true, align: 16)
!1645 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 64, elements: !1647)
!1647 = !{!1648}
!1648 = !DISubrange(count: 4)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !1573, file: !1645, line: 424, type: !1651, isLocal: false, isDefinition: true, align: 32)
!1651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1652)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !846, line: 378, size: 192, elements: !1653)
!1653 = !{!1654, !1655, !1656, !1657, !1663, !1664}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1652, file: !846, line: 380, baseType: !336, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1652, file: !846, line: 382, baseType: !13, size: 32, offset: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1652, file: !846, line: 384, baseType: !13, size: 32, offset: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1652, file: !846, line: 386, baseType: !1658, size: 32, offset: 96)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 32)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !846, line: 351, size: 16, elements: !1660)
!1660 = !{!1661, !1662}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1659, file: !846, line: 359, baseType: !164, size: 8)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1659, file: !846, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1652, file: !846, line: 388, baseType: !102, size: 32, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1652, file: !846, line: 396, baseType: !859, size: 32, offset: 160)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !1573, file: !1645, line: 424, type: !1667, isLocal: true, isDefinition: true, align: 32)
!1667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !837, line: 51, size: 64, elements: !1669)
!1669 = !{!1670, !1675}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1668, file: !837, line: 60, baseType: !1671, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 32)
!1672 = !DISubroutineType(types: !1673)
!1673 = !{!103, !1674}
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1668, file: !837, line: 65, baseType: !1674, size: 32, offset: 32)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "exti_data", scope: !1573, file: !1645, line: 423, type: !1678, isLocal: true, isDefinition: true)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !1645, line: 107, size: 1024, elements: !1679)
!1679 = !{!1680}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1678, file: !1645, line: 109, baseType: !1681, size: 1024)
!1681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1682, size: 1024, elements: !345)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !1645, line: 101, size: 64, elements: !1683)
!1683 = !{!1684, !1690}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1682, file: !1645, line: 102, baseType: !1685, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !1686, line: 63, baseType: !1687)
!1686 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{null, !103, !102}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1682, file: !1645, line: 103, baseType: !102, size: 32, offset: 32)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !1573, file: !1645, line: 424, type: !1659, isLocal: true, isDefinition: true, align: 8)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !1695, file: !1645, line: 493, type: !1700, isLocal: true, isDefinition: true, align: 32)
!1695 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !1645, file: !1645, line: 460, type: !1696, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !1698)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{null, !1674}
!1698 = !{!1699}
!1699 = !DILocalVariable(name: "dev", arg: 1, scope: !1695, file: !1645, line: 460, type: !1674)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1701)
!1701 = !{!1702, !1703, !1704, !1705}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1700, file: !10, line: 55, baseType: !330, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1700, file: !10, line: 57, baseType: !330, size: 32, offset: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1700, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1700, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !1695, file: !1645, line: 497, type: !1700, isLocal: true, isDefinition: true, align: 32)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !1695, file: !1645, line: 507, type: !1700, isLocal: true, isDefinition: true, align: 32)
!1710 = !DIGlobalVariableExpression(var: !1711, expr: !DIExpression())
!1711 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !1695, file: !1645, line: 512, type: !1700, isLocal: true, isDefinition: true, align: 32)
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !1695, file: !1645, line: 516, type: !1700, isLocal: true, isDefinition: true, align: 32)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !1695, file: !1645, line: 523, type: !1700, isLocal: true, isDefinition: true, align: 32)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !1695, file: !1645, line: 527, type: !1700, isLocal: true, isDefinition: true, align: 32)
!1718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1719, size: 512, elements: !345)
!1719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !809, line: 127, baseType: !1576)
!1721 = !DIGlobalVariableExpression(var: !1722, expr: !DIExpression())
!1722 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !1723, file: !1728, line: 21, type: !1748, isLocal: false, isDefinition: true, align: 16)
!1723 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1724, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1725, splitDebugInlining: false, nameTableKind: None)
!1724 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!1725 = !{!1726, !1721, !1732, !1734, !1736, !1738, !1740, !1742, !1744, !1746}
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1723, file: !1728, line: 16, type: !1729, isLocal: false, isDefinition: true, align: 16)
!1728 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 176, elements: !1730)
!1730 = !{!1731}
!1731 = !DISubrange(count: 11)
!1732 = !DIGlobalVariableExpression(var: !1733, expr: !DIExpression())
!1733 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1723, file: !1728, line: 28, type: !1646, isLocal: false, isDefinition: true, align: 16)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1723, file: !1728, line: 35, type: !1646, isLocal: false, isDefinition: true, align: 16)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1723, file: !1728, line: 42, type: !1646, isLocal: false, isDefinition: true, align: 16)
!1738 = !DIGlobalVariableExpression(var: !1739, expr: !DIExpression())
!1739 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1723, file: !1728, line: 49, type: !1646, isLocal: false, isDefinition: true, align: 16)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1723, file: !1728, line: 56, type: !1646, isLocal: false, isDefinition: true, align: 16)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1723, file: !1728, line: 63, type: !1646, isLocal: false, isDefinition: true, align: 16)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1723, file: !1728, line: 70, type: !1646, isLocal: false, isDefinition: true, align: 16)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1723, file: !1728, line: 77, type: !1646, isLocal: false, isDefinition: true, align: 16)
!1748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 48, elements: !1749)
!1749 = !{!1750}
!1750 = !DISubrange(count: 3)
!1751 = !DIGlobalVariableExpression(var: !1752, expr: !DIExpression())
!1752 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1753, file: !1797, line: 398, type: !1830, isLocal: true, isDefinition: true)
!1753 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1754, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1755, retainedTypes: !1768, globals: !1794, splitDebugInlining: false, nameTableKind: None)
!1754 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!1755 = !{!1756, !30, !1761}
!1756 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1757, line: 190, baseType: !32, size: 32, elements: !1758)
!1757 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1758 = !{!1759, !1760}
!1759 = !DIEnumerator(name: "SUCCESS", value: 0)
!1760 = !DIEnumerator(name: "ERROR", value: 1)
!1761 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1762, line: 44, baseType: !32, size: 32, elements: !1763)
!1762 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1763 = !{!1764, !1765, !1766, !1767}
!1764 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1765 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1766 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1767 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1768 = !{!102, !103, !108, !1769, !1787, !1793}
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !809, line: 386, baseType: !1771)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 370, size: 448, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1771, file: !809, line: 372, baseType: !813, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1771, file: !809, line: 373, baseType: !813, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1771, file: !809, line: 374, baseType: !813, size: 32, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1771, file: !809, line: 375, baseType: !813, size: 32, offset: 96)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1771, file: !809, line: 376, baseType: !813, size: 32, offset: 128)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1771, file: !809, line: 377, baseType: !813, size: 32, offset: 160)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1771, file: !809, line: 378, baseType: !813, size: 32, offset: 192)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1771, file: !809, line: 379, baseType: !813, size: 32, offset: 224)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1771, file: !809, line: 380, baseType: !813, size: 32, offset: 256)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1771, file: !809, line: 381, baseType: !813, size: 32, offset: 288)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1771, file: !809, line: 382, baseType: !813, size: 32, offset: 320)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1771, file: !809, line: 383, baseType: !813, size: 32, offset: 352)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1771, file: !809, line: 384, baseType: !813, size: 32, offset: 384)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1771, file: !809, line: 385, baseType: !813, size: 32, offset: 416)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 32)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1789, line: 343, size: 64, elements: !1790)
!1789 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1790 = !{!1791, !1792}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1788, file: !1789, line: 344, baseType: !108, size: 32)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1788, file: !1789, line: 345, baseType: !108, size: 32, offset: 32)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!1794 = !{!1795, !1801, !1817, !1828, !1751}
!1795 = !DIGlobalVariableExpression(var: !1796, expr: !DIExpression())
!1796 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1753, file: !1797, line: 752, type: !1798, isLocal: false, isDefinition: true, align: 16)
!1797 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 512, elements: !1799)
!1799 = !{!1800}
!1800 = !DISubrange(count: 32)
!1801 = !DIGlobalVariableExpression(var: !1802, expr: !DIExpression())
!1802 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !1753, file: !1797, line: 752, type: !1803, isLocal: false, isDefinition: true, align: 32)
!1803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1804)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !846, line: 378, size: 192, elements: !1805)
!1805 = !{!1806, !1807, !1808, !1809, !1815, !1816}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1804, file: !846, line: 380, baseType: !336, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1804, file: !846, line: 382, baseType: !13, size: 32, offset: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1804, file: !846, line: 384, baseType: !13, size: 32, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1804, file: !846, line: 386, baseType: !1810, size: 32, offset: 96)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !846, line: 351, size: 16, elements: !1812)
!1812 = !{!1813, !1814}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1811, file: !846, line: 359, baseType: !164, size: 8)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1811, file: !846, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1804, file: !846, line: 388, baseType: !102, size: 32, offset: 128)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1804, file: !846, line: 396, baseType: !859, size: 32, offset: 160)
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !1753, file: !1797, line: 752, type: !1819, isLocal: true, isDefinition: true, align: 32)
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !837, line: 51, size: 64, elements: !1821)
!1821 = !{!1822, !1827}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1820, file: !837, line: 60, baseType: !1823, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!103, !1826}
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1820, file: !837, line: 65, baseType: !1826, size: 32, offset: 32)
!1828 = !DIGlobalVariableExpression(var: !1829, expr: !DIExpression())
!1829 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !1753, file: !1797, line: 752, type: !1811, isLocal: true, isDefinition: true, align: 8)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1762, line: 100, size: 224, elements: !1831)
!1831 = !{!1832, !1838, !1839, !1848, !1853, !1858, !1864}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1830, file: !1762, line: 101, baseType: !1833, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1762, line: 76, baseType: !1834)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 32)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{!103, !1826, !1837}
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1762, line: 56, baseType: !102)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1830, file: !1762, line: 102, baseType: !1833, size: 32, offset: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1830, file: !1762, line: 103, baseType: !1840, size: 32, offset: 64)
!1840 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1762, line: 83, baseType: !1841)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1842 = !DISubroutineType(types: !1843)
!1843 = !{!103, !1826, !1837, !1844, !102}
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1762, line: 72, baseType: !1845)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = !DISubroutineType(types: !1847)
!1847 = !{null, !1826, !1837, !102}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1830, file: !1762, line: 104, baseType: !1849, size: 32, offset: 96)
!1849 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1762, line: 79, baseType: !1850)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!103, !1826, !1837, !1793}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1830, file: !1762, line: 105, baseType: !1854, size: 32, offset: 128)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1762, line: 88, baseType: !1855)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DISubroutineType(types: !1857)
!1857 = !{!1761, !1826, !1837}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1830, file: !1762, line: 106, baseType: !1859, size: 32, offset: 160)
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1762, line: 92, baseType: !1860)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!103, !1826, !1837, !1863}
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1762, line: 64, baseType: !102)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1830, file: !1762, line: 107, baseType: !1865, size: 32, offset: 192)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1762, line: 96, baseType: !1866)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1867 = !DISubroutineType(types: !1868)
!1868 = !{!103, !1826, !1837, !102}
!1869 = !DIGlobalVariableExpression(var: !1870, expr: !DIExpression())
!1870 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1871, file: !1928, line: 603, type: !1930, isLocal: true, isDefinition: true, align: 32)
!1871 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1872, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1873, globals: !1925, splitDebugInlining: false, nameTableKind: None)
!1872 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!1873 = !{!102, !103, !1874}
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1877, line: 336, size: 160, elements: !1878)
!1877 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1878 = !{!1879, !1899, !1903, !1907, !1920}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1876, file: !1877, line: 365, baseType: !1880, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!1881 = !DISubroutineType(types: !1882)
!1882 = !{!103, !1883, !1898}
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !846, line: 378, size: 192, elements: !1886)
!1886 = !{!1887, !1888, !1889, !1890, !1896, !1897}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1885, file: !846, line: 380, baseType: !336, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1885, file: !846, line: 382, baseType: !13, size: 32, offset: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1885, file: !846, line: 384, baseType: !13, size: 32, offset: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1885, file: !846, line: 386, baseType: !1891, size: 32, offset: 96)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 32)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !846, line: 351, size: 16, elements: !1893)
!1893 = !{!1894, !1895}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1892, file: !846, line: 359, baseType: !164, size: 8)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1892, file: !846, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1885, file: !846, line: 388, baseType: !102, size: 32, offset: 128)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1885, file: !846, line: 396, baseType: !859, size: 32, offset: 160)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1876, file: !1877, line: 366, baseType: !1900, size: 32, offset: 32)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{null, !1883, !165}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1876, file: !1877, line: 374, baseType: !1904, size: 32, offset: 64)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 32)
!1905 = !DISubroutineType(types: !1906)
!1906 = !{!103, !1883}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1876, file: !1877, line: 377, baseType: !1908, size: 32, offset: 96)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{!103, !1883, !1911}
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1913)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1877, line: 122, size: 64, elements: !1914)
!1914 = !{!1915, !1916, !1917, !1918, !1919}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1913, file: !1877, line: 123, baseType: !108, size: 32)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1913, file: !1877, line: 124, baseType: !164, size: 8, offset: 32)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1913, file: !1877, line: 125, baseType: !164, size: 8, offset: 40)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1913, file: !1877, line: 126, baseType: !164, size: 8, offset: 48)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1913, file: !1877, line: 127, baseType: !164, size: 8, offset: 56)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1876, file: !1877, line: 379, baseType: !1921, size: 32, offset: 128)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{!103, !1883, !1924}
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 32)
!1925 = !{!1869, !1926}
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1871, file: !1928, line: 38, type: !1929, isLocal: true, isDefinition: true)
!1928 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1883)
!1930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !837, line: 51, size: 64, elements: !1932)
!1932 = !{!1933, !1934}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1931, file: !837, line: 60, baseType: !1904, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1931, file: !837, line: 65, baseType: !1883, size: 32, offset: 32)
!1935 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression())
!1936 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1937, file: !2087, line: 762, type: !2185, isLocal: true, isDefinition: true)
!1937 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1938, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1939, retainedTypes: !1946, globals: !2084, splitDebugInlining: false, nameTableKind: None)
!1938 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!1939 = !{!30, !1110, !1116, !1940, !1761}
!1940 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !1686, line: 43, baseType: !32, size: 32, elements: !1941)
!1941 = !{!1942, !1943, !1944, !1945}
!1942 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1943 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1944 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1945 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1946 = !{!102, !103, !1947, !2011, !2016, !1157, !1116, !1110, !2021, !2022, !108, !2036, !1992, !157, !2044, !2045}
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1949)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1111, line: 523, size: 288, elements: !1950)
!1950 = !{!1951, !1970, !1974, !1978, !1982, !1983, !1984, !1988, !2007}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1949, file: !1111, line: 524, baseType: !1952, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 32)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{!103, !1955, !1145, !1146}
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1957)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !846, line: 378, size: 192, elements: !1958)
!1958 = !{!1959, !1960, !1961, !1962, !1968, !1969}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1957, file: !846, line: 380, baseType: !336, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1957, file: !846, line: 382, baseType: !13, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1957, file: !846, line: 384, baseType: !13, size: 32, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1957, file: !846, line: 386, baseType: !1963, size: 32, offset: 96)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !846, line: 351, size: 16, elements: !1965)
!1965 = !{!1966, !1967}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1964, file: !846, line: 359, baseType: !164, size: 8)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1964, file: !846, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1957, file: !846, line: 388, baseType: !102, size: 32, offset: 128)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1957, file: !846, line: 396, baseType: !859, size: 32, offset: 160)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1949, file: !1111, line: 530, baseType: !1971, size: 32, offset: 32)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{!103, !1955, !1151}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1949, file: !1111, line: 532, baseType: !1975, size: 32, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 32)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{!103, !1955, !1157, !1152}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1949, file: !1111, line: 535, baseType: !1979, size: 32, offset: 96)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 32)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{!103, !1955, !1157}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1949, file: !1111, line: 537, baseType: !1979, size: 32, offset: 128)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1949, file: !1111, line: 539, baseType: !1979, size: 32, offset: 160)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1949, file: !1111, line: 541, baseType: !1985, size: 32, offset: 192)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 32)
!1986 = !DISubroutineType(types: !1987)
!1987 = !{!103, !1955, !1145, !1110, !1116}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1949, file: !1111, line: 544, baseType: !1989, size: 32, offset: 224)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 32)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{!103, !1955, !1992, !119}
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 32)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1111, line: 478, size: 96, elements: !1994)
!1994 = !{!1995, !2001, !2006}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1993, file: !1111, line: 482, baseType: !1996, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !1997)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !1998)
!1998 = !{!1999}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1997, file: !289, line: 30, baseType: !2000, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1993, file: !1111, line: 485, baseType: !2002, size: 32, offset: 32)
!2002 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1111, line: 464, baseType: !2003)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2004 = !DISubroutineType(types: !2005)
!2005 = !{null, !1955, !1992, !1157}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1993, file: !1111, line: 493, baseType: !1157, size: 32, offset: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1949, file: !1111, line: 547, baseType: !2008, size: 32, offset: 256)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 32)
!2009 = !DISubroutineType(types: !2010)
!2010 = !{!108, !1955}
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2013)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1111, line: 428, size: 32, elements: !2014)
!2014 = !{!2015}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2013, file: !1111, line: 434, baseType: !1157, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2018)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1111, line: 441, size: 32, elements: !2019)
!2019 = !{!2020}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2018, file: !1111, line: 447, baseType: !1157, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !809, line: 314, baseType: !2024)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 303, size: 320, elements: !2025)
!2025 = !{!2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2024, file: !809, line: 305, baseType: !813, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2024, file: !809, line: 306, baseType: !813, size: 32, offset: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2024, file: !809, line: 307, baseType: !813, size: 32, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2024, file: !809, line: 308, baseType: !813, size: 32, offset: 96)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2024, file: !809, line: 309, baseType: !813, size: 32, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2024, file: !809, line: 310, baseType: !813, size: 32, offset: 160)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2024, file: !809, line: 311, baseType: !813, size: 32, offset: 192)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2024, file: !809, line: 312, baseType: !813, size: 32, offset: 224)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2024, file: !809, line: 313, baseType: !2035, size: 64, offset: 256)
!2035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !813, size: 64, elements: !212)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 32)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !809, line: 325, baseType: !2038)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 320, size: 192, elements: !2039)
!2039 = !{!2040, !2041, !2042}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !2038, file: !809, line: 322, baseType: !813, size: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !2038, file: !809, line: 323, baseType: !813, size: 32, offset: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !2038, file: !809, line: 324, baseType: !2043, size: 128, offset: 64)
!2043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !813, size: 128, elements: !1647)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2047)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1762, line: 100, size: 224, elements: !2048)
!2048 = !{!2049, !2054, !2055, !2064, !2069, !2074, !2079}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !2047, file: !1762, line: 101, baseType: !2050, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1762, line: 76, baseType: !2051)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 32)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{!103, !1955, !1837}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !2047, file: !1762, line: 102, baseType: !2050, size: 32, offset: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !2047, file: !1762, line: 103, baseType: !2056, size: 32, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1762, line: 83, baseType: !2057)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!2058 = !DISubroutineType(types: !2059)
!2059 = !{!103, !1955, !1837, !2060, !102}
!2060 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1762, line: 72, baseType: !2061)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 32)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{null, !1955, !1837, !102}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !2047, file: !1762, line: 104, baseType: !2065, size: 32, offset: 96)
!2065 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1762, line: 79, baseType: !2066)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 32)
!2067 = !DISubroutineType(types: !2068)
!2068 = !{!103, !1955, !1837, !1793}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !2047, file: !1762, line: 105, baseType: !2070, size: 32, offset: 128)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1762, line: 88, baseType: !2071)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{!1761, !1955, !1837}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !2047, file: !1762, line: 106, baseType: !2075, size: 32, offset: 160)
!2075 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1762, line: 92, baseType: !2076)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 32)
!2077 = !DISubroutineType(types: !2078)
!2078 = !{!103, !1955, !1837, !1863}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2047, file: !1762, line: 107, baseType: !2080, size: 32, offset: 192)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1762, line: 96, baseType: !2081)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{!103, !1955, !1837, !102}
!2084 = !{!2085, !2091, !2093, !2103, !2108, !2110, !2112, !2117, !2119, !2121, !2126, !2128, !2130, !2132, !2134, !2136, !2141, !2143, !2145, !2159, !2161, !2163, !2165, !2167, !2169, !2171, !2173, !2175, !2177, !2179, !1935, !2181, !2183, !2196, !2198, !2200, !2202}
!2085 = !DIGlobalVariableExpression(var: !2086, expr: !DIExpression())
!2086 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1937, file: !2087, line: 762, type: !2088, isLocal: false, isDefinition: true, align: 16)
!2087 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 128, elements: !2089)
!2089 = !{!2090}
!2090 = !DISubrange(count: 8)
!2091 = !DIGlobalVariableExpression(var: !2092, expr: !DIExpression())
!2092 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1937, file: !2087, line: 762, type: !1956, isLocal: false, isDefinition: true, align: 32)
!2093 = !DIGlobalVariableExpression(var: !2094, expr: !DIExpression())
!2094 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1937, file: !2087, line: 762, type: !2095, isLocal: true, isDefinition: true, align: 32)
!2095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2096)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !837, line: 51, size: 64, elements: !2097)
!2097 = !{!2098, !2102}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2096, file: !837, line: 60, baseType: !2099, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 32)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!103, !1955}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2096, file: !837, line: 65, baseType: !1955, size: 32, offset: 32)
!2103 = !DIGlobalVariableExpression(var: !2104, expr: !DIExpression())
!2104 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1937, file: !2087, line: 766, type: !2105, isLocal: false, isDefinition: true, align: 16)
!2105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 144, elements: !2106)
!2106 = !{!2107}
!2107 = !DISubrange(count: 9)
!2108 = !DIGlobalVariableExpression(var: !2109, expr: !DIExpression())
!2109 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1937, file: !2087, line: 766, type: !1956, isLocal: false, isDefinition: true, align: 32)
!2110 = !DIGlobalVariableExpression(var: !2111, expr: !DIExpression())
!2111 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1937, file: !2087, line: 766, type: !2095, isLocal: true, isDefinition: true, align: 32)
!2112 = !DIGlobalVariableExpression(var: !2113, expr: !DIExpression())
!2113 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1937, file: !2087, line: 770, type: !2114, isLocal: false, isDefinition: true, align: 16)
!2114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 96, elements: !2115)
!2115 = !{!2116}
!2116 = !DISubrange(count: 6)
!2117 = !DIGlobalVariableExpression(var: !2118, expr: !DIExpression())
!2118 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !1937, file: !2087, line: 770, type: !1956, isLocal: false, isDefinition: true, align: 32)
!2119 = !DIGlobalVariableExpression(var: !2120, expr: !DIExpression())
!2120 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !1937, file: !2087, line: 770, type: !2095, isLocal: true, isDefinition: true, align: 32)
!2121 = !DIGlobalVariableExpression(var: !2122, expr: !DIExpression())
!2122 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1937, file: !2087, line: 774, type: !2123, isLocal: false, isDefinition: true, align: 16)
!2123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 80, elements: !2124)
!2124 = !{!2125}
!2125 = !DISubrange(count: 5)
!2126 = !DIGlobalVariableExpression(var: !2127, expr: !DIExpression())
!2127 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1937, file: !2087, line: 774, type: !1956, isLocal: false, isDefinition: true, align: 32)
!2128 = !DIGlobalVariableExpression(var: !2129, expr: !DIExpression())
!2129 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1937, file: !2087, line: 774, type: !2095, isLocal: true, isDefinition: true, align: 32)
!2130 = !DIGlobalVariableExpression(var: !2131, expr: !DIExpression())
!2131 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1937, file: !2087, line: 778, type: !2123, isLocal: false, isDefinition: true, align: 16)
!2132 = !DIGlobalVariableExpression(var: !2133, expr: !DIExpression())
!2133 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1937, file: !2087, line: 778, type: !1956, isLocal: false, isDefinition: true, align: 32)
!2134 = !DIGlobalVariableExpression(var: !2135, expr: !DIExpression())
!2135 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1937, file: !2087, line: 778, type: !2095, isLocal: true, isDefinition: true, align: 32)
!2136 = !DIGlobalVariableExpression(var: !2137, expr: !DIExpression())
!2137 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1937, file: !2087, line: 790, type: !2138, isLocal: false, isDefinition: true, align: 16)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 112, elements: !2139)
!2139 = !{!2140}
!2140 = !DISubrange(count: 7)
!2141 = !DIGlobalVariableExpression(var: !2142, expr: !DIExpression())
!2142 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1937, file: !2087, line: 790, type: !1956, isLocal: false, isDefinition: true, align: 32)
!2143 = !DIGlobalVariableExpression(var: !2144, expr: !DIExpression())
!2144 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1937, file: !2087, line: 790, type: !2095, isLocal: true, isDefinition: true, align: 32)
!2145 = !DIGlobalVariableExpression(var: !2146, expr: !DIExpression())
!2146 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1937, file: !2087, line: 762, type: !2147, isLocal: true, isDefinition: true)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !2148, line: 237, size: 128, elements: !2149)
!2148 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2149 = !{!2150, !2151, !2152}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2147, file: !2148, line: 239, baseType: !2018, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2147, file: !2148, line: 241, baseType: !1955, size: 32, offset: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2147, file: !2148, line: 243, baseType: !2153, size: 64, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !289, line: 40, baseType: !2154)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !289, line: 35, size: 64, elements: !2155)
!2155 = !{!2156, !2158}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2154, file: !289, line: 36, baseType: !2157, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2154, file: !289, line: 37, baseType: !2157, size: 32, offset: 32)
!2159 = !DIGlobalVariableExpression(var: !2160, expr: !DIExpression())
!2160 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1937, file: !2087, line: 762, type: !1964, isLocal: true, isDefinition: true, align: 8)
!2161 = !DIGlobalVariableExpression(var: !2162, expr: !DIExpression())
!2162 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1937, file: !2087, line: 766, type: !2147, isLocal: true, isDefinition: true)
!2163 = !DIGlobalVariableExpression(var: !2164, expr: !DIExpression())
!2164 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1937, file: !2087, line: 766, type: !1964, isLocal: true, isDefinition: true, align: 8)
!2165 = !DIGlobalVariableExpression(var: !2166, expr: !DIExpression())
!2166 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1937, file: !2087, line: 770, type: !2147, isLocal: true, isDefinition: true)
!2167 = !DIGlobalVariableExpression(var: !2168, expr: !DIExpression())
!2168 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !1937, file: !2087, line: 770, type: !1964, isLocal: true, isDefinition: true, align: 8)
!2169 = !DIGlobalVariableExpression(var: !2170, expr: !DIExpression())
!2170 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1937, file: !2087, line: 774, type: !2147, isLocal: true, isDefinition: true)
!2171 = !DIGlobalVariableExpression(var: !2172, expr: !DIExpression())
!2172 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1937, file: !2087, line: 774, type: !1964, isLocal: true, isDefinition: true, align: 8)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1937, file: !2087, line: 778, type: !2147, isLocal: true, isDefinition: true)
!2175 = !DIGlobalVariableExpression(var: !2176, expr: !DIExpression())
!2176 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1937, file: !2087, line: 778, type: !1964, isLocal: true, isDefinition: true, align: 8)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1937, file: !2087, line: 790, type: !2147, isLocal: true, isDefinition: true)
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1937, file: !2087, line: 790, type: !1964, isLocal: true, isDefinition: true, align: 8)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1937, file: !2087, line: 656, type: !1948, isLocal: true, isDefinition: true)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1937, file: !2087, line: 766, type: !2185, isLocal: true, isDefinition: true)
!2185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2186)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !2148, line: 224, size: 160, elements: !2187)
!2187 = !{!2188, !2189, !2190, !2191}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2186, file: !2148, line: 226, baseType: !2013, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2186, file: !2148, line: 228, baseType: !1793, size: 32, offset: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2186, file: !2148, line: 230, baseType: !103, size: 32, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !2186, file: !2148, line: 231, baseType: !2192, size: 64, offset: 96)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1789, line: 343, size: 64, elements: !2193)
!2193 = !{!2194, !2195}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2192, file: !1789, line: 344, baseType: !108, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !2192, file: !1789, line: 345, baseType: !108, size: 32, offset: 32)
!2196 = !DIGlobalVariableExpression(var: !2197, expr: !DIExpression())
!2197 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1937, file: !2087, line: 770, type: !2185, isLocal: true, isDefinition: true)
!2198 = !DIGlobalVariableExpression(var: !2199, expr: !DIExpression())
!2199 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1937, file: !2087, line: 774, type: !2185, isLocal: true, isDefinition: true)
!2200 = !DIGlobalVariableExpression(var: !2201, expr: !DIExpression())
!2201 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1937, file: !2087, line: 778, type: !2185, isLocal: true, isDefinition: true)
!2202 = !DIGlobalVariableExpression(var: !2203, expr: !DIExpression())
!2203 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1937, file: !2087, line: 790, type: !2185, isLocal: true, isDefinition: true)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !2206, file: !2344, line: 44, type: !2439, isLocal: false, isDefinition: true)
!2206 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2207, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2208, retainedTypes: !2241, globals: !2341, splitDebugInlining: false, nameTableKind: None)
!2207 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!2208 = !{!30, !2209, !2216, !2223, !2230, !2236, !1761}
!2209 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1877, line: 47, baseType: !32, size: 32, elements: !2210)
!2210 = !{!2211, !2212, !2213, !2214, !2215}
!2211 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!2212 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!2213 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!2214 = !DIEnumerator(name: "UART_BREAK", value: 8)
!2215 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!2216 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1877, line: 75, baseType: !32, size: 32, elements: !2217)
!2217 = !{!2218, !2219, !2220, !2221, !2222}
!2218 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!2219 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!2220 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!2221 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!2222 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!2223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1877, line: 92, baseType: !32, size: 32, elements: !2224)
!2224 = !{!2225, !2226, !2227, !2228, !2229}
!2225 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!2226 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!2227 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!2228 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!2229 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!2230 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1877, line: 84, baseType: !32, size: 32, elements: !2231)
!2231 = !{!2232, !2233, !2234, !2235}
!2232 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!2233 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!2234 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!2235 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!2236 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1877, line: 107, baseType: !32, size: 32, elements: !2237)
!2237 = !{!2238, !2239, !2240}
!2238 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!2239 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!2240 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!2241 = !{!102, !103, !2242, !165, !164, !2291, !108, !1837, !2302, !177}
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2244)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1877, line: 336, size: 160, elements: !2245)
!2245 = !{!2246, !2265, !2269, !2273, !2286}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2244, file: !1877, line: 365, baseType: !2247, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{!103, !2250, !1898}
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2252)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !846, line: 378, size: 192, elements: !2253)
!2253 = !{!2254, !2255, !2256, !2257, !2263, !2264}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2252, file: !846, line: 380, baseType: !336, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2252, file: !846, line: 382, baseType: !13, size: 32, offset: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2252, file: !846, line: 384, baseType: !13, size: 32, offset: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2252, file: !846, line: 386, baseType: !2258, size: 32, offset: 96)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !846, line: 351, size: 16, elements: !2260)
!2260 = !{!2261, !2262}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2259, file: !846, line: 359, baseType: !164, size: 8)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2259, file: !846, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2252, file: !846, line: 388, baseType: !102, size: 32, offset: 128)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2252, file: !846, line: 396, baseType: !859, size: 32, offset: 160)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2244, file: !1877, line: 366, baseType: !2266, size: 32, offset: 32)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{null, !2250, !165}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2244, file: !1877, line: 374, baseType: !2270, size: 32, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 32)
!2271 = !DISubroutineType(types: !2272)
!2272 = !{!103, !2250}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2244, file: !1877, line: 377, baseType: !2274, size: 32, offset: 96)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 32)
!2275 = !DISubroutineType(types: !2276)
!2276 = !{!103, !2250, !2277}
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2279)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1877, line: 122, size: 64, elements: !2280)
!2280 = !{!2281, !2282, !2283, !2284, !2285}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2279, file: !1877, line: 123, baseType: !108, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2279, file: !1877, line: 124, baseType: !164, size: 8, offset: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2279, file: !1877, line: 125, baseType: !164, size: 8, offset: 40)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2279, file: !1877, line: 126, baseType: !164, size: 8, offset: 48)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2279, file: !1877, line: 127, baseType: !164, size: 8, offset: 56)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2244, file: !1877, line: 379, baseType: !2287, size: 32, offset: 128)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{!103, !2250, !2290}
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !809, line: 505, baseType: !2293)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 496, size: 224, elements: !2294)
!2294 = !{!2295, !2296, !2297, !2298, !2299, !2300, !2301}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2293, file: !809, line: 498, baseType: !813, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !2293, file: !809, line: 499, baseType: !813, size: 32, offset: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !2293, file: !809, line: 500, baseType: !813, size: 32, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !2293, file: !809, line: 501, baseType: !813, size: 32, offset: 96)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !2293, file: !809, line: 502, baseType: !813, size: 32, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !2293, file: !809, line: 503, baseType: !813, size: 32, offset: 160)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !2293, file: !809, line: 504, baseType: !813, size: 32, offset: 192)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2304)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1762, line: 100, size: 224, elements: !2305)
!2305 = !{!2306, !2311, !2312, !2321, !2326, !2331, !2336}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !2304, file: !1762, line: 101, baseType: !2307, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1762, line: 76, baseType: !2308)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 32)
!2309 = !DISubroutineType(types: !2310)
!2310 = !{!103, !2250, !1837}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !2304, file: !1762, line: 102, baseType: !2307, size: 32, offset: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !2304, file: !1762, line: 103, baseType: !2313, size: 32, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1762, line: 83, baseType: !2314)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 32)
!2315 = !DISubroutineType(types: !2316)
!2316 = !{!103, !2250, !1837, !2317, !102}
!2317 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1762, line: 72, baseType: !2318)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 32)
!2319 = !DISubroutineType(types: !2320)
!2320 = !{null, !2250, !1837, !102}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !2304, file: !1762, line: 104, baseType: !2322, size: 32, offset: 96)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1762, line: 79, baseType: !2323)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 32)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{!103, !2250, !1837, !1793}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !2304, file: !1762, line: 105, baseType: !2327, size: 32, offset: 128)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1762, line: 88, baseType: !2328)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 32)
!2329 = !DISubroutineType(types: !2330)
!2330 = !{!1761, !2250, !1837}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !2304, file: !1762, line: 106, baseType: !2332, size: 32, offset: 160)
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1762, line: 92, baseType: !2333)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 32)
!2334 = !DISubroutineType(types: !2335)
!2335 = !{!103, !2250, !1837, !1863}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2304, file: !1762, line: 107, baseType: !2337, size: 32, offset: 192)
!2337 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1762, line: 96, baseType: !2338)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 32)
!2339 = !DISubroutineType(types: !2340)
!2340 = !{!103, !2250, !1837, !102}
!2341 = !{!2204, !2342, !2345, !2347, !2354, !2356, !2358, !2360, !2362, !2364, !2408, !2411, !2413, !2416, !2419, !2421, !2427, !2429, !2431, !2433, !2435, !2437}
!2342 = !DIGlobalVariableExpression(var: !2343, expr: !DIExpression())
!2343 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !2206, file: !2344, line: 1914, type: !2088, isLocal: false, isDefinition: true, align: 16)
!2344 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2345 = !DIGlobalVariableExpression(var: !2346, expr: !DIExpression())
!2346 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !2206, file: !2344, line: 1914, type: !2251, isLocal: false, isDefinition: true, align: 32)
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !2206, file: !2344, line: 1914, type: !2349, isLocal: true, isDefinition: true, align: 32)
!2349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2350)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !837, line: 51, size: 64, elements: !2351)
!2351 = !{!2352, !2353}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2350, file: !837, line: 60, baseType: !2270, size: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2350, file: !837, line: 65, baseType: !2250, size: 32, offset: 32)
!2354 = !DIGlobalVariableExpression(var: !2355, expr: !DIExpression())
!2355 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !2206, file: !2344, line: 1914, type: !2088, isLocal: false, isDefinition: true, align: 16)
!2356 = !DIGlobalVariableExpression(var: !2357, expr: !DIExpression())
!2357 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !2206, file: !2344, line: 1914, type: !2251, isLocal: false, isDefinition: true, align: 32)
!2358 = !DIGlobalVariableExpression(var: !2359, expr: !DIExpression())
!2359 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !2206, file: !2344, line: 1914, type: !2349, isLocal: true, isDefinition: true, align: 32)
!2360 = !DIGlobalVariableExpression(var: !2361, expr: !DIExpression())
!2361 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !2206, file: !2344, line: 1914, type: !2259, isLocal: true, isDefinition: true, align: 8)
!2362 = !DIGlobalVariableExpression(var: !2363, expr: !DIExpression())
!2363 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !2206, file: !2344, line: 1914, type: !2259, isLocal: true, isDefinition: true, align: 8)
!2364 = !DIGlobalVariableExpression(var: !2365, expr: !DIExpression())
!2365 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !2206, file: !2344, line: 1914, type: !2366, isLocal: true, isDefinition: true)
!2366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2367)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !2368, line: 22, size: 224, elements: !2369)
!2368 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2369 = !{!2370, !2371, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !2367, file: !2368, line: 24, baseType: !2291, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !2367, file: !2368, line: 26, baseType: !2372, size: 32, offset: 32)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2374)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1789, line: 343, size: 64, elements: !2375)
!2375 = !{!2376, !2377}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2374, file: !1789, line: 344, baseType: !108, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !2374, file: !1789, line: 345, baseType: !108, size: 32, offset: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !2367, file: !2368, line: 28, baseType: !153, size: 32, offset: 64)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !2367, file: !2368, line: 30, baseType: !119, size: 8, offset: 96)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2367, file: !2368, line: 32, baseType: !103, size: 32, offset: 128)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !2367, file: !2368, line: 34, baseType: !119, size: 8, offset: 160)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !2367, file: !2368, line: 36, baseType: !119, size: 8, offset: 168)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !2367, file: !2368, line: 38, baseType: !119, size: 8, offset: 176)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !2367, file: !2368, line: 40, baseType: !119, size: 8, offset: 184)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !2367, file: !2368, line: 41, baseType: !2386, size: 32, offset: 192)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 32)
!2387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2388)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2389, line: 60, size: 64, elements: !2390)
!2389 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2390 = !{!2391, !2407}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !2388, file: !2389, line: 69, baseType: !2392, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2394)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2389, line: 50, size: 64, elements: !2395)
!2395 = !{!2396, !2405, !2406}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !2394, file: !2389, line: 52, baseType: !2397, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2399)
!2399 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2400, line: 37, baseType: !2401)
!2400 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2400, line: 32, size: 64, elements: !2402)
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !2401, file: !2400, line: 34, baseType: !108, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !2401, file: !2400, line: 36, baseType: !108, size: 32, offset: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !2394, file: !2389, line: 54, baseType: !164, size: 8, offset: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2394, file: !2389, line: 56, baseType: !164, size: 8, offset: 40)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !2388, file: !2389, line: 71, baseType: !164, size: 8, offset: 32)
!2408 = !DIGlobalVariableExpression(var: !2409, expr: !DIExpression())
!2409 = distinct !DIGlobalVariable(name: "pclken_0", scope: !2206, file: !2344, line: 1914, type: !2410, isLocal: true, isDefinition: true)
!2410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2373, size: 64, elements: !761)
!2411 = !DIGlobalVariableExpression(var: !2412, expr: !DIExpression())
!2412 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !2206, file: !2344, line: 1914, type: !2387, isLocal: true, isDefinition: true)
!2413 = !DIGlobalVariableExpression(var: !2414, expr: !DIExpression())
!2414 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !2206, file: !2344, line: 1914, type: !2415, isLocal: true, isDefinition: true)
!2415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2393, size: 64, elements: !761)
!2416 = !DIGlobalVariableExpression(var: !2417, expr: !DIExpression())
!2417 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !2206, file: !2344, line: 1914, type: !2418, isLocal: true, isDefinition: true)
!2418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2398, size: 128, elements: !212)
!2419 = !DIGlobalVariableExpression(var: !2420, expr: !DIExpression())
!2420 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !2206, file: !2344, line: 1539, type: !2243, isLocal: true, isDefinition: true)
!2421 = !DIGlobalVariableExpression(var: !2422, expr: !DIExpression())
!2422 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !2206, file: !2344, line: 1914, type: !2423, isLocal: true, isDefinition: true)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !2368, line: 74, size: 64, elements: !2424)
!2424 = !{!2425, !2426}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !2423, file: !2368, line: 76, baseType: !108, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !2423, file: !2368, line: 78, baseType: !2250, size: 32, offset: 32)
!2427 = !DIGlobalVariableExpression(var: !2428, expr: !DIExpression())
!2428 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !2206, file: !2344, line: 1914, type: !2366, isLocal: true, isDefinition: true)
!2429 = !DIGlobalVariableExpression(var: !2430, expr: !DIExpression())
!2430 = distinct !DIGlobalVariable(name: "pclken_1", scope: !2206, file: !2344, line: 1914, type: !2410, isLocal: true, isDefinition: true)
!2431 = !DIGlobalVariableExpression(var: !2432, expr: !DIExpression())
!2432 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !2206, file: !2344, line: 1914, type: !2387, isLocal: true, isDefinition: true)
!2433 = !DIGlobalVariableExpression(var: !2434, expr: !DIExpression())
!2434 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !2206, file: !2344, line: 1914, type: !2415, isLocal: true, isDefinition: true)
!2435 = !DIGlobalVariableExpression(var: !2436, expr: !DIExpression())
!2436 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !2206, file: !2344, line: 1914, type: !2418, isLocal: true, isDefinition: true)
!2437 = !DIGlobalVariableExpression(var: !2438, expr: !DIExpression())
!2438 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !2206, file: !2344, line: 1914, type: !2423, isLocal: true, isDefinition: true)
!2439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2440)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !788, line: 16, size: 64, elements: !2441)
!2441 = !{!2442, !2443}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2440, file: !788, line: 17, baseType: !336, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2440, file: !788, line: 18, baseType: !164, size: 8, offset: 32)
!2444 = !DIGlobalVariableExpression(var: !2445, expr: !DIExpression())
!2445 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !2446, file: !2524, line: 65, type: !813, isLocal: true, isDefinition: true)
!2446 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2447, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2448, retainedTypes: !2449, globals: !2521, splitDebugInlining: false, nameTableKind: None)
!2447 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!2448 = !{!1576}
!2449 = !{!104, !2450, !330, !164, !108, !2458, !2489}
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1041, line: 712, baseType: !2452)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 706, size: 128, elements: !2453)
!2453 = !{!2454, !2455, !2456, !2457}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2452, file: !1041, line: 708, baseType: !813, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2452, file: !1041, line: 709, baseType: !813, size: 32, offset: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2452, file: !1041, line: 710, baseType: !813, size: 32, offset: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2452, file: !1041, line: 711, baseType: !1045, size: 32, offset: 96)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1041, line: 360, baseType: !2460)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 345, size: 28704, elements: !2461)
!2461 = !{!2462, !2464, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2479, !2484, !2488}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2460, file: !1041, line: 347, baseType: !2463, size: 256)
!2463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !813, size: 256, elements: !2089)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2460, file: !1041, line: 348, baseType: !2465, size: 768, offset: 256)
!2465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 768, elements: !2466)
!2466 = !{!2467}
!2467 = !DISubrange(count: 24)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2460, file: !1041, line: 349, baseType: !2463, size: 256, offset: 1024)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2460, file: !1041, line: 350, baseType: !2465, size: 768, offset: 1280)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2460, file: !1041, line: 351, baseType: !2463, size: 256, offset: 2048)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2460, file: !1041, line: 352, baseType: !2465, size: 768, offset: 2304)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2460, file: !1041, line: 353, baseType: !2463, size: 256, offset: 3072)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2460, file: !1041, line: 354, baseType: !2465, size: 768, offset: 3328)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2460, file: !1041, line: 355, baseType: !2463, size: 256, offset: 4096)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2460, file: !1041, line: 356, baseType: !2476, size: 1792, offset: 4352)
!2476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1792, elements: !2477)
!2477 = !{!2478}
!2478 = !DISubrange(count: 56)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2460, file: !1041, line: 357, baseType: !2480, size: 1920, offset: 6144)
!2480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2481, size: 1920, elements: !2482)
!2481 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !164)
!2482 = !{!2483}
!2483 = !DISubrange(count: 240)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2460, file: !1041, line: 358, baseType: !2485, size: 20608, offset: 8064)
!2485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 20608, elements: !2486)
!2486 = !{!2487}
!2487 = !DISubrange(count: 644)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2460, file: !1041, line: 359, baseType: !813, size: 32, offset: 28672)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1041, line: 402, baseType: !2491)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 379, size: 1120, elements: !2492)
!2492 = !{!2493, !2494, !2495, !2496, !2497, !2498, !2499, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2512, !2513, !2514, !2516, !2518, !2520}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2491, file: !1041, line: 381, baseType: !1045, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2491, file: !1041, line: 382, baseType: !813, size: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2491, file: !1041, line: 383, baseType: !813, size: 32, offset: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2491, file: !1041, line: 384, baseType: !813, size: 32, offset: 96)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2491, file: !1041, line: 385, baseType: !813, size: 32, offset: 128)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2491, file: !1041, line: 386, baseType: !813, size: 32, offset: 160)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2491, file: !1041, line: 387, baseType: !2500, size: 96, offset: 192)
!2500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2481, size: 96, elements: !2501)
!2501 = !{!2502}
!2502 = !DISubrange(count: 12)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2491, file: !1041, line: 388, baseType: !813, size: 32, offset: 288)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2491, file: !1041, line: 389, baseType: !813, size: 32, offset: 320)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2491, file: !1041, line: 390, baseType: !813, size: 32, offset: 352)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2491, file: !1041, line: 391, baseType: !813, size: 32, offset: 384)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2491, file: !1041, line: 392, baseType: !813, size: 32, offset: 416)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2491, file: !1041, line: 393, baseType: !813, size: 32, offset: 448)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2491, file: !1041, line: 394, baseType: !813, size: 32, offset: 480)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2491, file: !1041, line: 395, baseType: !2511, size: 64, offset: 512)
!2511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1045, size: 64, elements: !212)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2491, file: !1041, line: 396, baseType: !1045, size: 32, offset: 576)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2491, file: !1041, line: 397, baseType: !1045, size: 32, offset: 608)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2491, file: !1041, line: 398, baseType: !2515, size: 128, offset: 640)
!2515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1045, size: 128, elements: !1647)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2491, file: !1041, line: 399, baseType: !2517, size: 160, offset: 768)
!2517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1045, size: 160, elements: !2124)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2491, file: !1041, line: 400, baseType: !2519, size: 160, offset: 928)
!2519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 160, elements: !2124)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2491, file: !1041, line: 401, baseType: !813, size: 32, offset: 1088)
!2521 = !{!2522, !2548, !2553, !2555, !2557, !2444}
!2522 = !DIGlobalVariableExpression(var: !2523, expr: !DIExpression())
!2523 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !2446, file: !2524, line: 285, type: !2525, isLocal: true, isDefinition: true, align: 32)
!2524 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2526)
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !837, line: 51, size: 64, elements: !2527)
!2527 = !{!2528, !2547}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2526, file: !837, line: 60, baseType: !2529, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 32)
!2530 = !DISubroutineType(types: !2531)
!2531 = !{!103, !2532}
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2534)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !846, line: 378, size: 192, elements: !2535)
!2535 = !{!2536, !2537, !2538, !2539, !2545, !2546}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2534, file: !846, line: 380, baseType: !336, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2534, file: !846, line: 382, baseType: !13, size: 32, offset: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2534, file: !846, line: 384, baseType: !13, size: 32, offset: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2534, file: !846, line: 386, baseType: !2540, size: 32, offset: 96)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 32)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !846, line: 351, size: 16, elements: !2542)
!2542 = !{!2543, !2544}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2541, file: !846, line: 359, baseType: !164, size: 8)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2541, file: !846, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2534, file: !846, line: 388, baseType: !102, size: 32, offset: 128)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2534, file: !846, line: 396, baseType: !859, size: 32, offset: 160)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2526, file: !837, line: 65, baseType: !2532, size: 32, offset: 32)
!2548 = !DIGlobalVariableExpression(var: !2549, expr: !DIExpression())
!2549 = distinct !DIGlobalVariable(name: "lock", scope: !2446, file: !2524, line: 34, type: !2550, isLocal: true, isDefinition: true)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !2551)
!2551 = !{!2552}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2550, file: !149, line: 52, baseType: !22, size: 32)
!2553 = !DIGlobalVariableExpression(var: !2554, expr: !DIExpression())
!2554 = distinct !DIGlobalVariable(name: "last_load", scope: !2446, file: !2524, line: 36, type: !108, isLocal: true, isDefinition: true)
!2555 = !DIGlobalVariableExpression(var: !2556, expr: !DIExpression())
!2556 = distinct !DIGlobalVariable(name: "cycle_count", scope: !2446, file: !2524, line: 48, type: !108, isLocal: true, isDefinition: true)
!2557 = !DIGlobalVariableExpression(var: !2558, expr: !DIExpression())
!2558 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !2446, file: !2524, line: 54, type: !108, isLocal: true, isDefinition: true)
!2559 = !DIGlobalVariableExpression(var: !2560, expr: !DIExpression())
!2560 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2561, file: !2642, line: 22, type: !2644, isLocal: true, isDefinition: true)
!2561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2562, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1109, retainedTypes: !2563, globals: !2639, splitDebugInlining: false, nameTableKind: None)
!2562 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!2563 = !{!2564, !2628, !2633, !1157, !1116, !1110, !2638, !102}
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2566)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1111, line: 523, size: 288, elements: !2567)
!2567 = !{!2568, !2587, !2591, !2595, !2599, !2600, !2601, !2605, !2624}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2566, file: !1111, line: 524, baseType: !2569, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 32)
!2570 = !DISubroutineType(types: !2571)
!2571 = !{!103, !2572, !1145, !1146}
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 32)
!2573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2574)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !846, line: 378, size: 192, elements: !2575)
!2575 = !{!2576, !2577, !2578, !2579, !2585, !2586}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2574, file: !846, line: 380, baseType: !336, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2574, file: !846, line: 382, baseType: !13, size: 32, offset: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2574, file: !846, line: 384, baseType: !13, size: 32, offset: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2574, file: !846, line: 386, baseType: !2580, size: 32, offset: 96)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 32)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !846, line: 351, size: 16, elements: !2582)
!2582 = !{!2583, !2584}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2581, file: !846, line: 359, baseType: !164, size: 8)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2581, file: !846, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2574, file: !846, line: 388, baseType: !102, size: 32, offset: 128)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2574, file: !846, line: 396, baseType: !859, size: 32, offset: 160)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2566, file: !1111, line: 530, baseType: !2588, size: 32, offset: 32)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!2589 = !DISubroutineType(types: !2590)
!2590 = !{!103, !2572, !1151}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2566, file: !1111, line: 532, baseType: !2592, size: 32, offset: 64)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 32)
!2593 = !DISubroutineType(types: !2594)
!2594 = !{!103, !2572, !1157, !1152}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2566, file: !1111, line: 535, baseType: !2596, size: 32, offset: 96)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 32)
!2597 = !DISubroutineType(types: !2598)
!2598 = !{!103, !2572, !1157}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2566, file: !1111, line: 537, baseType: !2596, size: 32, offset: 128)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2566, file: !1111, line: 539, baseType: !2596, size: 32, offset: 160)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2566, file: !1111, line: 541, baseType: !2602, size: 32, offset: 192)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 32)
!2603 = !DISubroutineType(types: !2604)
!2604 = !{!103, !2572, !1145, !1110, !1116}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2566, file: !1111, line: 544, baseType: !2606, size: 32, offset: 224)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 32)
!2607 = !DISubroutineType(types: !2608)
!2608 = !{!103, !2572, !2609, !119}
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 32)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1111, line: 478, size: 96, elements: !2611)
!2611 = !{!2612, !2618, !2623}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2610, file: !1111, line: 482, baseType: !2613, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !2614)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !2615)
!2615 = !{!2616}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2614, file: !289, line: 30, baseType: !2617, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2610, file: !1111, line: 485, baseType: !2619, size: 32, offset: 32)
!2619 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1111, line: 464, baseType: !2620)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 32)
!2621 = !DISubroutineType(types: !2622)
!2622 = !{null, !2572, !2609, !1157}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2610, file: !1111, line: 493, baseType: !1157, size: 32, offset: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2566, file: !1111, line: 547, baseType: !2625, size: 32, offset: 256)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 32)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{!108, !2572}
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2630)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1111, line: 428, size: 32, elements: !2631)
!2631 = !{!2632}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2630, file: !1111, line: 434, baseType: !1157, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2635)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1111, line: 441, size: 32, elements: !2636)
!2636 = !{!2637}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2635, file: !1111, line: 447, baseType: !1157, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 32)
!2639 = !{!2640, !2559}
!2640 = !DIGlobalVariableExpression(var: !2641, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2641 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2561, file: !2642, line: 37, type: !2643, isLocal: true, isDefinition: true)
!2642 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!2644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2645, size: 352, elements: !1730)
!2645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2572)
!2646 = !DIGlobalVariableExpression(var: !2647, expr: !DIExpression())
!2647 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2648, file: !2672, line: 129, type: !2680, isLocal: false, isDefinition: true)
!2648 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2649, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2650, globals: !2669, splitDebugInlining: false, nameTableKind: None)
!2649 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!2650 = !{!2651}
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !809, line: 386, baseType: !2653)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 370, size: 448, elements: !2654)
!2654 = !{!2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2653, file: !809, line: 372, baseType: !813, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2653, file: !809, line: 373, baseType: !813, size: 32, offset: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2653, file: !809, line: 374, baseType: !813, size: 32, offset: 64)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2653, file: !809, line: 375, baseType: !813, size: 32, offset: 96)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2653, file: !809, line: 376, baseType: !813, size: 32, offset: 128)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2653, file: !809, line: 377, baseType: !813, size: 32, offset: 160)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2653, file: !809, line: 378, baseType: !813, size: 32, offset: 192)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2653, file: !809, line: 379, baseType: !813, size: 32, offset: 224)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2653, file: !809, line: 380, baseType: !813, size: 32, offset: 256)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2653, file: !809, line: 381, baseType: !813, size: 32, offset: 288)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2653, file: !809, line: 382, baseType: !813, size: 32, offset: 320)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2653, file: !809, line: 383, baseType: !813, size: 32, offset: 352)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2653, file: !809, line: 384, baseType: !813, size: 32, offset: 384)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2653, file: !809, line: 385, baseType: !813, size: 32, offset: 416)
!2669 = !{!2670, !2673, !2677, !2646}
!2670 = !DIGlobalVariableExpression(var: !2671, expr: !DIExpression())
!2671 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2648, file: !2672, line: 126, type: !108, isLocal: false, isDefinition: true)
!2672 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2673 = !DIGlobalVariableExpression(var: !2674, expr: !DIExpression())
!2674 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !2648, file: !2672, line: 127, type: !2675, isLocal: false, isDefinition: true)
!2675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2676, size: 72, elements: !2106)
!2676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!2677 = !DIGlobalVariableExpression(var: !2678, expr: !DIExpression())
!2678 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2648, file: !2672, line: 128, type: !2679, isLocal: false, isDefinition: true)
!2679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2676, size: 128, elements: !345)
!2680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2676, size: 64, elements: !2089)
!2681 = !DIGlobalVariableExpression(var: !2682, expr: !DIExpression())
!2682 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2683, file: !2686, line: 23, type: !2687, isLocal: false, isDefinition: true)
!2683 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2684, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, globals: !2685, splitDebugInlining: false, nameTableKind: None)
!2684 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!2685 = !{!2681}
!2686 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!2688 = !DIGlobalVariableExpression(var: !2689, expr: !DIExpression())
!2689 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2690, file: !2694, line: 37, type: !2948, isLocal: false, isDefinition: true)
!2690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2692, retainedTypes: !2701, globals: !2774, splitDebugInlining: false, nameTableKind: None)
!2691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!2692 = !{!2693, !30, !1576}
!2693 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2694, line: 63, baseType: !32, size: 32, elements: !2695)
!2694 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2695 = !{!2696, !2697, !2698, !2699, !2700}
!2696 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2697 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2698 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2699 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2700 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2701 = !{!153, !102, !103, !2702, !157, !108, !2732, !330, !164, !2757}
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2704)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2705, line: 51, size: 64, elements: !2706)
!2705 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2706 = !{!2707, !2727}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2704, file: !2705, line: 52, baseType: !2708, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2705, line: 38, baseType: !2709)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 32)
!2710 = !DISubroutineType(types: !2711)
!2711 = !{!103, !2712, !783, !177}
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2714)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !846, line: 378, size: 192, elements: !2715)
!2715 = !{!2716, !2717, !2718, !2719, !2725, !2726}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2714, file: !846, line: 380, baseType: !336, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2714, file: !846, line: 382, baseType: !13, size: 32, offset: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2714, file: !846, line: 384, baseType: !13, size: 32, offset: 64)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2714, file: !846, line: 386, baseType: !2720, size: 32, offset: 96)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 32)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !846, line: 351, size: 16, elements: !2722)
!2722 = !{!2723, !2724}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2721, file: !846, line: 359, baseType: !164, size: 8)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2721, file: !846, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2714, file: !846, line: 388, baseType: !102, size: 32, offset: 128)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2714, file: !846, line: 396, baseType: !859, size: 32, offset: 160)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2704, file: !2705, line: 53, baseType: !2728, size: 32, offset: 32)
!2728 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2705, line: 47, baseType: !2729)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 32)
!2730 = !DISubroutineType(types: !2731)
!2731 = !{!103, !2712, !783, !177, !108}
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1041, line: 402, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 379, size: 1120, elements: !2735)
!2735 = !{!2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2734, file: !1041, line: 381, baseType: !1045, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2734, file: !1041, line: 382, baseType: !813, size: 32, offset: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2734, file: !1041, line: 383, baseType: !813, size: 32, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2734, file: !1041, line: 384, baseType: !813, size: 32, offset: 96)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2734, file: !1041, line: 385, baseType: !813, size: 32, offset: 128)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2734, file: !1041, line: 386, baseType: !813, size: 32, offset: 160)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2734, file: !1041, line: 387, baseType: !2500, size: 96, offset: 192)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2734, file: !1041, line: 388, baseType: !813, size: 32, offset: 288)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2734, file: !1041, line: 389, baseType: !813, size: 32, offset: 320)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2734, file: !1041, line: 390, baseType: !813, size: 32, offset: 352)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2734, file: !1041, line: 391, baseType: !813, size: 32, offset: 384)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2734, file: !1041, line: 392, baseType: !813, size: 32, offset: 416)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2734, file: !1041, line: 393, baseType: !813, size: 32, offset: 448)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2734, file: !1041, line: 394, baseType: !813, size: 32, offset: 480)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2734, file: !1041, line: 395, baseType: !2511, size: 64, offset: 512)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2734, file: !1041, line: 396, baseType: !1045, size: 32, offset: 576)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2734, file: !1041, line: 397, baseType: !1045, size: 32, offset: 608)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2734, file: !1041, line: 398, baseType: !2515, size: 128, offset: 640)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2734, file: !1041, line: 399, baseType: !2517, size: 160, offset: 768)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2734, file: !1041, line: 400, baseType: !2519, size: 160, offset: 928)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2734, file: !1041, line: 401, baseType: !813, size: 32, offset: 1088)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1041, line: 360, baseType: !2759)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 345, size: 28704, elements: !2760)
!2760 = !{!2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2759, file: !1041, line: 347, baseType: !2463, size: 256)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2759, file: !1041, line: 348, baseType: !2465, size: 768, offset: 256)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2759, file: !1041, line: 349, baseType: !2463, size: 256, offset: 1024)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2759, file: !1041, line: 350, baseType: !2465, size: 768, offset: 1280)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2759, file: !1041, line: 351, baseType: !2463, size: 256, offset: 2048)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2759, file: !1041, line: 352, baseType: !2465, size: 768, offset: 2304)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2759, file: !1041, line: 353, baseType: !2463, size: 256, offset: 3072)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2759, file: !1041, line: 354, baseType: !2465, size: 768, offset: 3328)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2759, file: !1041, line: 355, baseType: !2463, size: 256, offset: 4096)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2759, file: !1041, line: 356, baseType: !2476, size: 1792, offset: 4352)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2759, file: !1041, line: 357, baseType: !2480, size: 1920, offset: 6144)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2759, file: !1041, line: 358, baseType: !2485, size: 20608, offset: 8064)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2759, file: !1041, line: 359, baseType: !813, size: 32, offset: 28672)
!2774 = !{!2688, !2775, !2900, !2908, !2910, !2913, !2918, !2920, !2925}
!2775 = !DIGlobalVariableExpression(var: !2776, expr: !DIExpression())
!2776 = distinct !DIGlobalVariable(name: "_kernel", scope: !2690, file: !2694, line: 40, type: !2777, isLocal: false, isDefinition: true)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !128, line: 158, size: 288, elements: !2778)
!2778 = !{!2779, !2895}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2777, file: !128, line: 159, baseType: !2780, size: 192)
!2780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2781, size: 192, elements: !761)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !128, line: 100, size: 192, elements: !2782)
!2782 = !{!2783, !2784, !2785, !2888, !2889, !2890, !2891}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2781, file: !128, line: 102, baseType: !108, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2781, file: !128, line: 105, baseType: !157, size: 32, offset: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2781, file: !128, line: 108, baseType: !2786, size: 32, offset: 64)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 32)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !2788)
!2788 = !{!2789, !2847, !2859, !2860, !2861, !2862, !2868, !2883}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2787, file: !195, line: 247, baseType: !2790, size: 384)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !2791)
!2791 = !{!2792, !2816, !2823, !2824, !2825, !2834, !2835, !2836}
!2792 = !DIDerivedType(tag: DW_TAG_member, scope: !2790, file: !195, line: 60, baseType: !2793, size: 64)
!2793 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2790, file: !195, line: 60, size: 64, elements: !2794)
!2794 = !{!2795, !2810}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2793, file: !195, line: 61, baseType: !2796, size: 64)
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !2797)
!2797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !2798)
!2798 = !{!2799, !2805}
!2799 = !DIDerivedType(tag: DW_TAG_member, scope: !2797, file: !133, line: 38, baseType: !2800, size: 32)
!2800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2797, file: !133, line: 38, size: 32, elements: !2801)
!2801 = !{!2802, !2804}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2800, file: !133, line: 39, baseType: !2803, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2800, file: !133, line: 40, baseType: !2803, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, scope: !2797, file: !133, line: 42, baseType: !2806, size: 32, offset: 32)
!2806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2797, file: !133, line: 42, size: 32, elements: !2807)
!2807 = !{!2808, !2809}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2806, file: !133, line: 43, baseType: !2803, size: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2806, file: !133, line: 44, baseType: !2803, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2793, file: !195, line: 62, baseType: !2811, size: 64)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !2812)
!2812 = !{!2813}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2811, file: !207, line: 50, baseType: !2814, size: 64)
!2814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2815, size: 64, elements: !212)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2790, file: !195, line: 68, baseType: !2817, size: 32, offset: 64)
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !2819)
!2819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !2820)
!2820 = !{!2821}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2819, file: !128, line: 232, baseType: !2822, size: 64)
!2822 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !2797)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2790, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2790, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!2825 = !DIDerivedType(tag: DW_TAG_member, scope: !2790, file: !195, line: 90, baseType: !2826, size: 16, offset: 112)
!2826 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2790, file: !195, line: 90, size: 16, elements: !2827)
!2827 = !{!2828, !2833}
!2828 = !DIDerivedType(tag: DW_TAG_member, scope: !2826, file: !195, line: 91, baseType: !2829, size: 16)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2826, file: !195, line: 91, size: 16, elements: !2830)
!2830 = !{!2831, !2832}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2829, file: !195, line: 96, baseType: !225, size: 8)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2829, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2826, file: !195, line: 100, baseType: !177, size: 16)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2790, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2790, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2790, file: !195, line: 131, baseType: !2837, size: 192, offset: 192)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !2838)
!2838 = !{!2839, !2840, !2846}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2837, file: !128, line: 245, baseType: !2796, size: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2837, file: !128, line: 246, baseType: !2841, size: 32, offset: 64)
!2841 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !2842)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 32)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{null, !2845}
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2837, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2787, file: !195, line: 250, baseType: !2848, size: 288, offset: 384)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !2849)
!2849 = !{!2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2848, file: !244, line: 26, baseType: !108, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2848, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2848, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2848, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2848, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2848, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2848, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2848, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2848, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2787, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2787, file: !195, line: 256, baseType: !2818, size: 64, offset: 704)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2787, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2787, file: !195, line: 300, baseType: !2863, size: 96, offset: 800)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !2864)
!2864 = !{!2865, !2866, !2867}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2863, file: !195, line: 153, baseType: !22, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2863, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2863, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2787, file: !195, line: 325, baseType: !2869, size: 32, offset: 896)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 32)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !2871)
!2871 = !{!2872, !2878, !2879}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2870, file: !124, line: 5074, baseType: !2873, size: 96)
!2873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !2874)
!2874 = !{!2875, !2876, !2877}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2873, file: !270, line: 57, baseType: !273, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2873, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2873, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2870, file: !124, line: 5075, baseType: !2818, size: 64, offset: 96)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2870, file: !124, line: 5076, baseType: !2880, size: 32, offset: 160)
!2880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !2881)
!2881 = !{!2882}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2880, file: !149, line: 52, baseType: !22, size: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2787, file: !195, line: 343, baseType: !2884, size: 64, offset: 928)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !2885)
!2885 = !{!2886, !2887}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2884, file: !244, line: 63, baseType: !108, size: 32)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2884, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2781, file: !128, line: 111, baseType: !2786, size: 32, offset: 96)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2781, file: !128, line: 124, baseType: !103, size: 32, offset: 128)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2781, file: !128, line: 127, baseType: !164, size: 8, offset: 160)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2781, file: !128, line: 153, baseType: !2892, offset: 168)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2893, line: 33, elements: !2894)
!2893 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2894 = !{}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2777, file: !128, line: 170, baseType: !2896, size: 96, offset: 192)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !128, line: 83, size: 96, elements: !2897)
!2897 = !{!2898, !2899}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2896, file: !128, line: 86, baseType: !2786, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2896, file: !128, line: 90, baseType: !2822, size: 64, offset: 32)
!2900 = !DIGlobalVariableExpression(var: !2901, expr: !DIExpression())
!2901 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2690, file: !2694, line: 43, type: !2902, isLocal: false, isDefinition: true, align: 512)
!2902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2903, size: 8704, elements: !2906)
!2903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !315, line: 47, size: 8, elements: !2904)
!2904 = !{!2905}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2903, file: !315, line: 48, baseType: !158, size: 8)
!2906 = !{!2907}
!2907 = !DISubrange(count: 1088)
!2908 = !DIGlobalVariableExpression(var: !2909, expr: !DIExpression())
!2909 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2690, file: !2694, line: 44, type: !2787, isLocal: false, isDefinition: true)
!2910 = !DIGlobalVariableExpression(var: !2911, expr: !DIExpression())
!2911 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2690, file: !2694, line: 48, type: !2912, isLocal: false, isDefinition: true)
!2912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2787, size: 1024, elements: !761)
!2913 = !DIGlobalVariableExpression(var: !2914, expr: !DIExpression())
!2914 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2690, file: !2694, line: 86, type: !2915, isLocal: false, isDefinition: true, align: 512)
!2915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2903, size: 16896, elements: !2916)
!2916 = !{!762, !2917}
!2917 = !DISubrange(count: 2112)
!2918 = !DIGlobalVariableExpression(var: !2919, expr: !DIExpression())
!2919 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2690, file: !2694, line: 217, type: !119, isLocal: false, isDefinition: true)
!2920 = !DIGlobalVariableExpression(var: !2921, expr: !DIExpression())
!2921 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2690, file: !2694, line: 50, type: !2922, isLocal: true, isDefinition: true, align: 512)
!2922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2903, size: 2560, elements: !2923)
!2923 = !{!762, !2924}
!2924 = !DISubrange(count: 320)
!2925 = !DIGlobalVariableExpression(var: !2926, expr: !DIExpression())
!2926 = distinct !DIGlobalVariable(name: "levels", scope: !2927, file: !2694, line: 232, type: !2947, isLocal: true, isDefinition: true)
!2927 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2694, file: !2694, line: 230, type: !2928, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !2930)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{null, !2693}
!2930 = !{!2931, !2932, !2942, !2946}
!2931 = !DILocalVariable(name: "level", arg: 1, scope: !2927, file: !2694, line: 230, type: !2693)
!2932 = !DILocalVariable(name: "entry", scope: !2927, file: !2694, line: 244, type: !2933)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2935)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !837, line: 51, size: 64, elements: !2936)
!2936 = !{!2937, !2941}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2935, file: !837, line: 60, baseType: !2938, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 32)
!2939 = !DISubroutineType(types: !2940)
!2940 = !{!103, !2712}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2935, file: !837, line: 65, baseType: !2712, size: 32, offset: 32)
!2942 = !DILocalVariable(name: "dev", scope: !2943, file: !2694, line: 247, type: !2712)
!2943 = distinct !DILexicalBlock(scope: !2944, file: !2694, line: 246, column: 64)
!2944 = distinct !DILexicalBlock(scope: !2945, file: !2694, line: 246, column: 2)
!2945 = distinct !DILexicalBlock(scope: !2927, file: !2694, line: 246, column: 2)
!2946 = !DILocalVariable(name: "rc", scope: !2943, file: !2694, line: 248, type: !103)
!2947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2933, size: 192, elements: !2115)
!2948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2949)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !788, line: 16, size: 64, elements: !2950)
!2950 = !{!2951, !2952}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2949, file: !788, line: 17, baseType: !336, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2949, file: !788, line: 18, baseType: !164, size: 8, offset: 32)
!2953 = !DIGlobalVariableExpression(var: !2954, expr: !DIExpression())
!2954 = distinct !DIGlobalVariable(name: "__init_init_mem_slab_module", scope: !2955, file: !2975, line: 73, type: !2976, isLocal: true, isDefinition: true, align: 32)
!2955 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2956, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2957, globals: !2974, splitDebugInlining: false, nameTableKind: None)
!2956 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mem_slab.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!2957 = !{!102, !782, !2958, !103, !22, !2959}
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !2961)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !2962)
!2962 = !{!2963, !2969}
!2963 = !DIDerivedType(tag: DW_TAG_member, scope: !2961, file: !133, line: 38, baseType: !2964, size: 32)
!2964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2961, file: !133, line: 38, size: 32, elements: !2965)
!2965 = !{!2966, !2968}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2964, file: !133, line: 39, baseType: !2967, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 32)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2964, file: !133, line: 40, baseType: !2967, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, scope: !2961, file: !133, line: 42, baseType: !2970, size: 32, offset: 32)
!2970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2961, file: !133, line: 42, size: 32, elements: !2971)
!2971 = !{!2972, !2973}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2970, file: !133, line: 43, baseType: !2967, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2970, file: !133, line: 44, baseType: !2967, size: 32)
!2974 = !{!2953}
!2975 = !DIFile(filename: "zephyr/kernel/mem_slab.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2977)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !837, line: 51, size: 64, elements: !2978)
!2978 = !{!2979, !2986}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2977, file: !837, line: 60, baseType: !2980, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 32)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{!103, !2983}
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2985)
!2985 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !837, line: 48, flags: DIFlagFwdDecl)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2977, file: !837, line: 65, baseType: !2983, size: 32, offset: 32)
!2987 = !DIGlobalVariableExpression(var: !2988, expr: !DIExpression())
!2988 = distinct !DIGlobalVariable(name: "states_str", scope: !2989, file: !2990, line: 276, type: !3113, isLocal: true, isDefinition: true)
!2989 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2990, file: !2990, line: 271, type: !2991, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !3104)
!2990 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2991 = !DISubroutineType(types: !2992)
!2992 = !{!336, !2993, !157, !153}
!2993 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !2994)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 32)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !2996)
!2996 = !{!2997, !3055, !3067, !3068, !3069, !3070, !3076, !3091}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2995, file: !195, line: 247, baseType: !2998, size: 384)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !2999)
!2999 = !{!3000, !3024, !3031, !3032, !3033, !3042, !3043, !3044}
!3000 = !DIDerivedType(tag: DW_TAG_member, scope: !2998, file: !195, line: 60, baseType: !3001, size: 64)
!3001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2998, file: !195, line: 60, size: 64, elements: !3002)
!3002 = !{!3003, !3018}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3001, file: !195, line: 61, baseType: !3004, size: 64)
!3004 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3005)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3006)
!3006 = !{!3007, !3013}
!3007 = !DIDerivedType(tag: DW_TAG_member, scope: !3005, file: !133, line: 38, baseType: !3008, size: 32)
!3008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3005, file: !133, line: 38, size: 32, elements: !3009)
!3009 = !{!3010, !3012}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3008, file: !133, line: 39, baseType: !3011, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 32)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3008, file: !133, line: 40, baseType: !3011, size: 32)
!3013 = !DIDerivedType(tag: DW_TAG_member, scope: !3005, file: !133, line: 42, baseType: !3014, size: 32, offset: 32)
!3014 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3005, file: !133, line: 42, size: 32, elements: !3015)
!3015 = !{!3016, !3017}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3014, file: !133, line: 43, baseType: !3011, size: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3014, file: !133, line: 44, baseType: !3011, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3001, file: !195, line: 62, baseType: !3019, size: 64)
!3019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !3020)
!3020 = !{!3021}
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3019, file: !207, line: 50, baseType: !3022, size: 64)
!3022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3023, size: 64, elements: !212)
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2998, file: !195, line: 68, baseType: !3025, size: 32, offset: 64)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !3027)
!3027 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !3028)
!3028 = !{!3029}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3027, file: !128, line: 232, baseType: !3030, size: 64)
!3030 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3005)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2998, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2998, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!3033 = !DIDerivedType(tag: DW_TAG_member, scope: !2998, file: !195, line: 90, baseType: !3034, size: 16, offset: 112)
!3034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2998, file: !195, line: 90, size: 16, elements: !3035)
!3035 = !{!3036, !3041}
!3036 = !DIDerivedType(tag: DW_TAG_member, scope: !3034, file: !195, line: 91, baseType: !3037, size: 16)
!3037 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3034, file: !195, line: 91, size: 16, elements: !3038)
!3038 = !{!3039, !3040}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3037, file: !195, line: 96, baseType: !225, size: 8)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3037, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3034, file: !195, line: 100, baseType: !177, size: 16)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2998, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2998, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2998, file: !195, line: 131, baseType: !3045, size: 192, offset: 192)
!3045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !3046)
!3046 = !{!3047, !3048, !3054}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3045, file: !128, line: 245, baseType: !3004, size: 64)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3045, file: !128, line: 246, baseType: !3049, size: 32, offset: 64)
!3049 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !3050)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 32)
!3051 = !DISubroutineType(types: !3052)
!3052 = !{null, !3053}
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3045, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2995, file: !195, line: 250, baseType: !3056, size: 288, offset: 384)
!3056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !3057)
!3057 = !{!3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3056, file: !244, line: 26, baseType: !108, size: 32)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3056, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3056, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3056, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3056, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3056, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3056, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3056, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3056, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2995, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2995, file: !195, line: 256, baseType: !3026, size: 64, offset: 704)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2995, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2995, file: !195, line: 300, baseType: !3071, size: 96, offset: 800)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !3072)
!3072 = !{!3073, !3074, !3075}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3071, file: !195, line: 153, baseType: !22, size: 32)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3071, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3071, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2995, file: !195, line: 325, baseType: !3077, size: 32, offset: 896)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 32)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !3079)
!3079 = !{!3080, !3086, !3087}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3078, file: !124, line: 5074, baseType: !3081, size: 96)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !3082)
!3082 = !{!3083, !3084, !3085}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3081, file: !270, line: 57, baseType: !273, size: 32)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3081, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3081, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3078, file: !124, line: 5075, baseType: !3026, size: 64, offset: 96)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3078, file: !124, line: 5076, baseType: !3088, size: 32, offset: 160)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !3089)
!3089 = !{!3090}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3088, file: !149, line: 52, baseType: !22, size: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2995, file: !195, line: 343, baseType: !3092, size: 64, offset: 928)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !3093)
!3093 = !{!3094, !3095}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3092, file: !244, line: 63, baseType: !108, size: 32)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3092, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!3096 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3097, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3098, globals: !3100, splitDebugInlining: false, nameTableKind: None)
!3097 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3098 = !{!102, !336, !104, !164, !22, !103, !3099, !24, !153, !157, !108, !109}
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 32)
!3100 = !{!2987, !3101}
!3101 = !DIGlobalVariableExpression(var: !3102, expr: !DIExpression())
!3102 = distinct !DIGlobalVariable(name: "states_sz", scope: !2989, file: !2990, line: 279, type: !3103, isLocal: true, isDefinition: true)
!3103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2643, size: 256, elements: !2089)
!3104 = !{!3105, !3106, !3107, !3108, !3109, !3110, !3111}
!3105 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2989, file: !2990, line: 271, type: !2993)
!3106 = !DILocalVariable(name: "buf", arg: 2, scope: !2989, file: !2990, line: 271, type: !157)
!3107 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2989, file: !2990, line: 271, type: !153)
!3108 = !DILocalVariable(name: "off", scope: !2989, file: !2990, line: 273, type: !153)
!3109 = !DILocalVariable(name: "bit", scope: !2989, file: !2990, line: 274, type: !164)
!3110 = !DILocalVariable(name: "thread_state", scope: !2989, file: !2990, line: 275, type: !164)
!3111 = !DILocalVariable(name: "index", scope: !3112, file: !2990, line: 293, type: !164)
!3112 = distinct !DILexicalBlock(scope: !2989, file: !2990, line: 293, column: 2)
!3113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 256, elements: !2089)
!3114 = !DIGlobalVariableExpression(var: !3115, expr: !DIExpression())
!3115 = distinct !DIGlobalVariable(name: "lock", scope: !3116, file: !3223, line: 47, type: !3214, isLocal: true, isDefinition: true)
!3116 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3117, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3118, globals: !3222, splitDebugInlining: false, nameTableKind: None)
!3117 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3118 = !{!119, !102, !103, !3119, !3134}
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3121)
!3121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3122)
!3122 = !{!3123, !3129}
!3123 = !DIDerivedType(tag: DW_TAG_member, scope: !3121, file: !133, line: 38, baseType: !3124, size: 32)
!3124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3121, file: !133, line: 38, size: 32, elements: !3125)
!3125 = !{!3126, !3128}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3124, file: !133, line: 39, baseType: !3127, size: 32)
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 32)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3124, file: !133, line: 40, baseType: !3127, size: 32)
!3129 = !DIDerivedType(tag: DW_TAG_member, scope: !3121, file: !133, line: 42, baseType: !3130, size: 32, offset: 32)
!3130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3121, file: !133, line: 42, size: 32, elements: !3131)
!3131 = !{!3132, !3133}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3130, file: !133, line: 43, baseType: !3127, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3130, file: !133, line: 44, baseType: !3127, size: 32)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 32)
!3135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !3136)
!3136 = !{!3137, !3181, !3193, !3194, !3195, !3196, !3202, !3217}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3135, file: !195, line: 247, baseType: !3138, size: 384)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !3139)
!3139 = !{!3140, !3150, !3157, !3158, !3159, !3168, !3169, !3170}
!3140 = !DIDerivedType(tag: DW_TAG_member, scope: !3138, file: !195, line: 60, baseType: !3141, size: 64)
!3141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3138, file: !195, line: 60, size: 64, elements: !3142)
!3142 = !{!3143, !3144}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3141, file: !195, line: 61, baseType: !3120, size: 64)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3141, file: !195, line: 62, baseType: !3145, size: 64)
!3145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !3146)
!3146 = !{!3147}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3145, file: !207, line: 50, baseType: !3148, size: 64)
!3148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3149, size: 64, elements: !212)
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3138, file: !195, line: 68, baseType: !3151, size: 32, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 32)
!3152 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !3153)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !3154)
!3154 = !{!3155}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3153, file: !128, line: 232, baseType: !3156, size: 64)
!3156 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3121)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3138, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3138, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!3159 = !DIDerivedType(tag: DW_TAG_member, scope: !3138, file: !195, line: 90, baseType: !3160, size: 16, offset: 112)
!3160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3138, file: !195, line: 90, size: 16, elements: !3161)
!3161 = !{!3162, !3167}
!3162 = !DIDerivedType(tag: DW_TAG_member, scope: !3160, file: !195, line: 91, baseType: !3163, size: 16)
!3163 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3160, file: !195, line: 91, size: 16, elements: !3164)
!3164 = !{!3165, !3166}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3163, file: !195, line: 96, baseType: !225, size: 8)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3163, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3160, file: !195, line: 100, baseType: !177, size: 16)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3138, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3138, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3138, file: !195, line: 131, baseType: !3171, size: 192, offset: 192)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !3172)
!3172 = !{!3173, !3174, !3180}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3171, file: !128, line: 245, baseType: !3120, size: 64)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3171, file: !128, line: 246, baseType: !3175, size: 32, offset: 64)
!3175 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !3176)
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 32)
!3177 = !DISubroutineType(types: !3178)
!3178 = !{null, !3179}
!3179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 32)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3171, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3135, file: !195, line: 250, baseType: !3182, size: 288, offset: 384)
!3182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !3183)
!3183 = !{!3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3182, file: !244, line: 26, baseType: !108, size: 32)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3182, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3182, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3182, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3182, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3182, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3182, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3182, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3182, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3135, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3135, file: !195, line: 256, baseType: !3152, size: 64, offset: 704)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3135, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3135, file: !195, line: 300, baseType: !3197, size: 96, offset: 800)
!3197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !3198)
!3198 = !{!3199, !3200, !3201}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3197, file: !195, line: 153, baseType: !22, size: 32)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3197, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3197, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3135, file: !195, line: 325, baseType: !3203, size: 32, offset: 896)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 32)
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !3205)
!3205 = !{!3206, !3212, !3213}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3204, file: !124, line: 5074, baseType: !3207, size: 96)
!3207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !3208)
!3208 = !{!3209, !3210, !3211}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3207, file: !270, line: 57, baseType: !273, size: 32)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3207, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3207, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3204, file: !124, line: 5075, baseType: !3152, size: 64, offset: 96)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3204, file: !124, line: 5076, baseType: !3214, size: 32, offset: 160)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !3215)
!3215 = !{!3216}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3214, file: !149, line: 52, baseType: !22, size: 32)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3135, file: !195, line: 343, baseType: !3218, size: 64, offset: 928)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !3219)
!3219 = !{!3220, !3221}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3218, file: !244, line: 63, baseType: !108, size: 32)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3218, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!3222 = !{!3114}
!3223 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3224 = !DIGlobalVariableExpression(var: !3225, expr: !DIExpression())
!3225 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !3226, file: !3336, line: 56, type: !3323, isLocal: false, isDefinition: true)
!3226 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3227, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3228, globals: !3333, splitDebugInlining: false, nameTableKind: None)
!3227 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3228 = !{!3229, !157, !102, !3331, !783, !104, !330, !103, !108, !109, !3332}
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 32)
!3230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !3231)
!3231 = !{!3232, !3290, !3302, !3303, !3304, !3305, !3311, !3326}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3230, file: !195, line: 247, baseType: !3233, size: 384)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !3234)
!3234 = !{!3235, !3259, !3266, !3267, !3268, !3277, !3278, !3279}
!3235 = !DIDerivedType(tag: DW_TAG_member, scope: !3233, file: !195, line: 60, baseType: !3236, size: 64)
!3236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3233, file: !195, line: 60, size: 64, elements: !3237)
!3237 = !{!3238, !3253}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3236, file: !195, line: 61, baseType: !3239, size: 64)
!3239 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3240)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3241)
!3241 = !{!3242, !3248}
!3242 = !DIDerivedType(tag: DW_TAG_member, scope: !3240, file: !133, line: 38, baseType: !3243, size: 32)
!3243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3240, file: !133, line: 38, size: 32, elements: !3244)
!3244 = !{!3245, !3247}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3243, file: !133, line: 39, baseType: !3246, size: 32)
!3246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 32)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3243, file: !133, line: 40, baseType: !3246, size: 32)
!3248 = !DIDerivedType(tag: DW_TAG_member, scope: !3240, file: !133, line: 42, baseType: !3249, size: 32, offset: 32)
!3249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3240, file: !133, line: 42, size: 32, elements: !3250)
!3250 = !{!3251, !3252}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3249, file: !133, line: 43, baseType: !3246, size: 32)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3249, file: !133, line: 44, baseType: !3246, size: 32)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3236, file: !195, line: 62, baseType: !3254, size: 64)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !3255)
!3255 = !{!3256}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3254, file: !207, line: 50, baseType: !3257, size: 64)
!3257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3258, size: 64, elements: !212)
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 32)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3233, file: !195, line: 68, baseType: !3260, size: 32, offset: 64)
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 32)
!3261 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !3262)
!3262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !3263)
!3263 = !{!3264}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3262, file: !128, line: 232, baseType: !3265, size: 64)
!3265 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3240)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3233, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3233, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!3268 = !DIDerivedType(tag: DW_TAG_member, scope: !3233, file: !195, line: 90, baseType: !3269, size: 16, offset: 112)
!3269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3233, file: !195, line: 90, size: 16, elements: !3270)
!3270 = !{!3271, !3276}
!3271 = !DIDerivedType(tag: DW_TAG_member, scope: !3269, file: !195, line: 91, baseType: !3272, size: 16)
!3272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3269, file: !195, line: 91, size: 16, elements: !3273)
!3273 = !{!3274, !3275}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3272, file: !195, line: 96, baseType: !225, size: 8)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3272, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3269, file: !195, line: 100, baseType: !177, size: 16)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3233, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3233, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3233, file: !195, line: 131, baseType: !3280, size: 192, offset: 192)
!3280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !3281)
!3281 = !{!3282, !3283, !3289}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3280, file: !128, line: 245, baseType: !3239, size: 64)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3280, file: !128, line: 246, baseType: !3284, size: 32, offset: 64)
!3284 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !3285)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 32)
!3286 = !DISubroutineType(types: !3287)
!3287 = !{null, !3288}
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 32)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3280, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3230, file: !195, line: 250, baseType: !3291, size: 288, offset: 384)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !3292)
!3292 = !{!3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3291, file: !244, line: 26, baseType: !108, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3291, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3291, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3291, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3291, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3291, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3291, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3291, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3291, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3230, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3230, file: !195, line: 256, baseType: !3261, size: 64, offset: 704)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3230, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3230, file: !195, line: 300, baseType: !3306, size: 96, offset: 800)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !3307)
!3307 = !{!3308, !3309, !3310}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3306, file: !195, line: 153, baseType: !22, size: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3306, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3306, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3230, file: !195, line: 325, baseType: !3312, size: 32, offset: 896)
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 32)
!3313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !3314)
!3314 = !{!3315, !3321, !3322}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3313, file: !124, line: 5074, baseType: !3316, size: 96)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !3317)
!3317 = !{!3318, !3319, !3320}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3316, file: !270, line: 57, baseType: !273, size: 32)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3316, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3316, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3313, file: !124, line: 5075, baseType: !3261, size: 64, offset: 96)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3313, file: !124, line: 5076, baseType: !3323, size: 32, offset: 160)
!3323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !3324)
!3324 = !{!3325}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3323, file: !149, line: 52, baseType: !22, size: 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3230, file: !195, line: 343, baseType: !3327, size: 64, offset: 928)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !3328)
!3328 = !{!3329, !3330}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3327, file: !244, line: 63, baseType: !108, size: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3327, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 32)
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 32)
!3333 = !{!3224, !3334, !3337, !3339}
!3334 = !DIGlobalVariableExpression(var: !3335, expr: !DIExpression())
!3335 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !3226, file: !3336, line: 404, type: !103, isLocal: true, isDefinition: true)
!3336 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3337 = !DIGlobalVariableExpression(var: !3338, expr: !DIExpression())
!3338 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !3226, file: !3336, line: 405, type: !103, isLocal: true, isDefinition: true)
!3339 = !DIGlobalVariableExpression(var: !3340, expr: !DIExpression())
!3340 = distinct !DIGlobalVariable(name: "pending_current", scope: !3226, file: !3336, line: 425, type: !3229, isLocal: true, isDefinition: true)
!3341 = !DIGlobalVariableExpression(var: !3342, expr: !DIExpression())
!3342 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !3343, file: !3373, line: 19, type: !3379, isLocal: true, isDefinition: true)
!3343 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3344, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3345, globals: !3370, splitDebugInlining: false, nameTableKind: None)
!3344 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3345 = !{!104, !102, !330, !108, !109, !103, !3346, !157, !106}
!3346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3347, size: 32)
!3347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !3348)
!3348 = !{!3349, !3364, !3369}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3347, file: !128, line: 245, baseType: !3350, size: 64)
!3350 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3351)
!3351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3352)
!3352 = !{!3353, !3359}
!3353 = !DIDerivedType(tag: DW_TAG_member, scope: !3351, file: !133, line: 38, baseType: !3354, size: 32)
!3354 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3351, file: !133, line: 38, size: 32, elements: !3355)
!3355 = !{!3356, !3358}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3354, file: !133, line: 39, baseType: !3357, size: 32)
!3357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 32)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3354, file: !133, line: 40, baseType: !3357, size: 32)
!3359 = !DIDerivedType(tag: DW_TAG_member, scope: !3351, file: !133, line: 42, baseType: !3360, size: 32, offset: 32)
!3360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3351, file: !133, line: 42, size: 32, elements: !3361)
!3361 = !{!3362, !3363}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3360, file: !133, line: 43, baseType: !3357, size: 32)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3360, file: !133, line: 44, baseType: !3357, size: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3347, file: !128, line: 246, baseType: !3365, size: 32, offset: 64)
!3365 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !3366)
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 32)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{null, !3346}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3347, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!3370 = !{!3371, !3341, !3374, !3376}
!3371 = !DIGlobalVariableExpression(var: !3372, expr: !DIExpression())
!3372 = distinct !DIGlobalVariable(name: "curr_tick", scope: !3343, file: !3373, line: 15, type: !109, isLocal: true, isDefinition: true)
!3373 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3374 = !DIGlobalVariableExpression(var: !3375, expr: !DIExpression())
!3375 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !3343, file: !3373, line: 25, type: !103, isLocal: true, isDefinition: true)
!3376 = !DIGlobalVariableExpression(var: !3377, expr: !DIExpression())
!3377 = distinct !DIGlobalVariable(name: "timeout_list", scope: !3343, file: !3373, line: 17, type: !3378, isLocal: true, isDefinition: true)
!3378 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3351)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !3380)
!3380 = !{!3381}
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3379, file: !149, line: 52, baseType: !22, size: 32)
!3382 = !DIGlobalVariableExpression(var: !3383, expr: !DIExpression())
!3383 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !3384, file: !3403, line: 55, type: !3404, isLocal: true, isDefinition: true, align: 32)
!3384 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3385, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3386, globals: !3402, splitDebugInlining: false, nameTableKind: None)
!3385 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3386 = !{!102, !104, !103, !3387}
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 32)
!3388 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3389)
!3389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3390)
!3390 = !{!3391, !3397}
!3391 = !DIDerivedType(tag: DW_TAG_member, scope: !3389, file: !133, line: 38, baseType: !3392, size: 32)
!3392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3389, file: !133, line: 38, size: 32, elements: !3393)
!3393 = !{!3394, !3396}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3392, file: !133, line: 39, baseType: !3395, size: 32)
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 32)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3392, file: !133, line: 40, baseType: !3395, size: 32)
!3397 = !DIDerivedType(tag: DW_TAG_member, scope: !3389, file: !133, line: 42, baseType: !3398, size: 32, offset: 32)
!3398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3389, file: !133, line: 42, size: 32, elements: !3399)
!3399 = !{!3400, !3401}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3398, file: !133, line: 43, baseType: !3395, size: 32)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3398, file: !133, line: 44, baseType: !3395, size: 32)
!3402 = !{!3382}
!3403 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3405)
!3405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !837, line: 51, size: 64, elements: !3406)
!3406 = !{!3407, !3408}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3405, file: !837, line: 60, baseType: !2980, size: 32)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3405, file: !837, line: 65, baseType: !2983, size: 32, offset: 32)
!3409 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3410, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!3410 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3411 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3412, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!3412 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3413 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3414, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3415, retainedTypes: !3423, splitDebugInlining: false, nameTableKind: None)
!3414 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3415 = !{!30, !3416}
!3416 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !3417, line: 54, baseType: !32, size: 32, elements: !3418)
!3417 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3418 = !{!3419, !3420, !3421, !3422}
!3419 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!3420 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!3421 = !DIEnumerator(name: "FREE_PREV", value: 2)
!3422 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!3423 = !{!102, !153, !783, !24, !3424, !22, !3430, !103, !1793, !3445}
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 32)
!3425 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !3417, line: 58, baseType: !3426)
!3426 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3417, line: 58, size: 64, elements: !3427)
!3427 = !{!3428}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3426, file: !3417, line: 58, baseType: !3429, size: 64)
!3429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 64, elements: !2089)
!3430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 32)
!3431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !3417, line: 68, size: 128, elements: !3432)
!3432 = !{!3433, !3436, !3437, !3438}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !3431, file: !3417, line: 69, baseType: !3434, size: 64)
!3434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3435, size: 64, elements: !212)
!3435 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !3417, line: 61, baseType: !108)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !3431, file: !3417, line: 70, baseType: !3435, size: 32, offset: 64)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !3431, file: !3417, line: 71, baseType: !108, size: 32, offset: 96)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !3431, file: !3417, line: 77, baseType: !3439, offset: 128)
!3439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3440, elements: !3443)
!3440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !3417, line: 64, size: 32, elements: !3441)
!3441 = !{!3442}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3440, file: !3417, line: 65, baseType: !3435, size: 32)
!3443 = !{!3444}
!3444 = !DISubrange(count: 0)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!3446 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3447, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3448, retainedTypes: !3468, splitDebugInlining: false, nameTableKind: None)
!3447 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3448 = !{!3449, !3457}
!3449 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !3450, line: 69, baseType: !32, size: 32, elements: !3451)
!3450 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3451 = !{!3452, !3453, !3454, !3455, !3456}
!3452 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!3453 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!3454 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!3455 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!3456 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!3457 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !3450, line: 56, baseType: !32, size: 32, elements: !3458)
!3458 = !{!3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467}
!3459 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!3460 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!3461 = !DIEnumerator(name: "LENGTH_H", value: 2)
!3462 = !DIEnumerator(name: "LENGTH_L", value: 3)
!3463 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!3464 = !DIEnumerator(name: "LENGTH_J", value: 5)
!3465 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!3466 = !DIEnumerator(name: "LENGTH_T", value: 7)
!3467 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!3468 = !{!103, !3449, !3457, !3469, !226, !863, !3471, !3472, !165, !178, !336, !153, !102, !22, !32, !778, !3474, !3475, !780, !779, !107, !781, !3470, !3476, !3477, !3478, !3479}
!3469 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !3450, line: 31, baseType: !3470)
!3470 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!3471 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !154, line: 329, baseType: !32)
!3472 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !3450, line: 32, baseType: !3473)
!3473 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !110)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 32)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 32)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 32)
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!3478 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !154, line: 145, baseType: !103)
!3479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 32)
!3480 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3481, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!3481 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3482 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3483, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3483 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3484 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3485, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3486, splitDebugInlining: false, nameTableKind: None)
!3485 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3486 = !{!336, !165, !103, !32}
!3487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3489, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!3488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3489 = !{!3490, !30}
!3490 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !3491, line: 27, baseType: !32, size: 32, elements: !3492)
!3491 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3492 = !{!3493, !3494, !3495, !3496, !3497}
!3493 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!3494 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!3495 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!3496 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!3497 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!3498 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3499, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3500, retainedTypes: !3501, splitDebugInlining: false, nameTableKind: None)
!3499 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3500 = !{!1576, !3490, !30}
!3501 = !{!1720, !3502, !102, !103, !330, !108, !164, !3519}
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 32)
!3503 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1041, line: 360, baseType: !3504)
!3504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 345, size: 28704, elements: !3505)
!3505 = !{!3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518}
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3504, file: !1041, line: 347, baseType: !2463, size: 256)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3504, file: !1041, line: 348, baseType: !2465, size: 768, offset: 256)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3504, file: !1041, line: 349, baseType: !2463, size: 256, offset: 1024)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3504, file: !1041, line: 350, baseType: !2465, size: 768, offset: 1280)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3504, file: !1041, line: 351, baseType: !2463, size: 256, offset: 2048)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3504, file: !1041, line: 352, baseType: !2465, size: 768, offset: 2304)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3504, file: !1041, line: 353, baseType: !2463, size: 256, offset: 3072)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3504, file: !1041, line: 354, baseType: !2465, size: 768, offset: 3328)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3504, file: !1041, line: 355, baseType: !2463, size: 256, offset: 4096)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3504, file: !1041, line: 356, baseType: !2476, size: 1792, offset: 4352)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3504, file: !1041, line: 357, baseType: !2480, size: 1920, offset: 6144)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3504, file: !1041, line: 358, baseType: !2485, size: 20608, offset: 8064)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3504, file: !1041, line: 359, baseType: !813, size: 32, offset: 28672)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 32)
!3520 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1041, line: 402, baseType: !3521)
!3521 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 379, size: 1120, elements: !3522)
!3522 = !{!3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3521, file: !1041, line: 381, baseType: !1045, size: 32)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3521, file: !1041, line: 382, baseType: !813, size: 32, offset: 32)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3521, file: !1041, line: 383, baseType: !813, size: 32, offset: 64)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3521, file: !1041, line: 384, baseType: !813, size: 32, offset: 96)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3521, file: !1041, line: 385, baseType: !813, size: 32, offset: 128)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3521, file: !1041, line: 386, baseType: !813, size: 32, offset: 160)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3521, file: !1041, line: 387, baseType: !2500, size: 96, offset: 192)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3521, file: !1041, line: 388, baseType: !813, size: 32, offset: 288)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3521, file: !1041, line: 389, baseType: !813, size: 32, offset: 320)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3521, file: !1041, line: 390, baseType: !813, size: 32, offset: 352)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3521, file: !1041, line: 391, baseType: !813, size: 32, offset: 384)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3521, file: !1041, line: 392, baseType: !813, size: 32, offset: 416)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3521, file: !1041, line: 393, baseType: !813, size: 32, offset: 448)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3521, file: !1041, line: 394, baseType: !813, size: 32, offset: 480)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3521, file: !1041, line: 395, baseType: !2511, size: 64, offset: 512)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3521, file: !1041, line: 396, baseType: !1045, size: 32, offset: 576)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3521, file: !1041, line: 397, baseType: !1045, size: 32, offset: 608)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3521, file: !1041, line: 398, baseType: !2515, size: 128, offset: 640)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3521, file: !1041, line: 399, baseType: !2517, size: 160, offset: 768)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3521, file: !1041, line: 400, baseType: !2519, size: 160, offset: 928)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3521, file: !1041, line: 401, baseType: !813, size: 32, offset: 1088)
!3544 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3545, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!3545 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3548, splitDebugInlining: false, nameTableKind: None)
!3547 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3548 = !{!102, !103, !22, !3549}
!3549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3550, size: 32)
!3550 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1041, line: 402, baseType: !3551)
!3551 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 379, size: 1120, elements: !3552)
!3552 = !{!3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3551, file: !1041, line: 381, baseType: !1045, size: 32)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3551, file: !1041, line: 382, baseType: !813, size: 32, offset: 32)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3551, file: !1041, line: 383, baseType: !813, size: 32, offset: 64)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3551, file: !1041, line: 384, baseType: !813, size: 32, offset: 96)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3551, file: !1041, line: 385, baseType: !813, size: 32, offset: 128)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3551, file: !1041, line: 386, baseType: !813, size: 32, offset: 160)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3551, file: !1041, line: 387, baseType: !2500, size: 96, offset: 192)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3551, file: !1041, line: 388, baseType: !813, size: 32, offset: 288)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3551, file: !1041, line: 389, baseType: !813, size: 32, offset: 320)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3551, file: !1041, line: 390, baseType: !813, size: 32, offset: 352)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3551, file: !1041, line: 391, baseType: !813, size: 32, offset: 384)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3551, file: !1041, line: 392, baseType: !813, size: 32, offset: 416)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3551, file: !1041, line: 393, baseType: !813, size: 32, offset: 448)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3551, file: !1041, line: 394, baseType: !813, size: 32, offset: 480)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3551, file: !1041, line: 395, baseType: !2511, size: 64, offset: 512)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3551, file: !1041, line: 396, baseType: !1045, size: 32, offset: 576)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3551, file: !1041, line: 397, baseType: !1045, size: 32, offset: 608)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3551, file: !1041, line: 398, baseType: !2515, size: 128, offset: 640)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3551, file: !1041, line: 399, baseType: !2517, size: 160, offset: 768)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3551, file: !1041, line: 400, baseType: !2519, size: 160, offset: 928)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3551, file: !1041, line: 401, baseType: !813, size: 32, offset: 1088)
!3574 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3575, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3576, splitDebugInlining: false, nameTableKind: None)
!3575 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3576 = !{!3577, !102, !103}
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 32)
!3578 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1041, line: 402, baseType: !3579)
!3579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 379, size: 1120, elements: !3580)
!3580 = !{!3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3579, file: !1041, line: 381, baseType: !1045, size: 32)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3579, file: !1041, line: 382, baseType: !813, size: 32, offset: 32)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3579, file: !1041, line: 383, baseType: !813, size: 32, offset: 64)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3579, file: !1041, line: 384, baseType: !813, size: 32, offset: 96)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3579, file: !1041, line: 385, baseType: !813, size: 32, offset: 128)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3579, file: !1041, line: 386, baseType: !813, size: 32, offset: 160)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3579, file: !1041, line: 387, baseType: !2500, size: 96, offset: 192)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3579, file: !1041, line: 388, baseType: !813, size: 32, offset: 288)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3579, file: !1041, line: 389, baseType: !813, size: 32, offset: 320)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3579, file: !1041, line: 390, baseType: !813, size: 32, offset: 352)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3579, file: !1041, line: 391, baseType: !813, size: 32, offset: 384)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3579, file: !1041, line: 392, baseType: !813, size: 32, offset: 416)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3579, file: !1041, line: 393, baseType: !813, size: 32, offset: 448)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3579, file: !1041, line: 394, baseType: !813, size: 32, offset: 480)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3579, file: !1041, line: 395, baseType: !2511, size: 64, offset: 512)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3579, file: !1041, line: 396, baseType: !1045, size: 32, offset: 576)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3579, file: !1041, line: 397, baseType: !1045, size: 32, offset: 608)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3579, file: !1041, line: 398, baseType: !2515, size: 128, offset: 640)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3579, file: !1041, line: 399, baseType: !2517, size: 160, offset: 768)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3579, file: !1041, line: 400, baseType: !2519, size: 160, offset: 928)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3579, file: !1041, line: 401, baseType: !813, size: 32, offset: 1088)
!3602 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3603, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3604, splitDebugInlining: false, nameTableKind: None)
!3603 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3604 = !{!3605, !108, !102, !103}
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 32)
!3606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3607, line: 98, size: 256, elements: !3608)
!3607 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3608 = !{!3609, !3614, !3619, !3624, !3629, !3634, !3639, !3644}
!3609 = !DIDerivedType(tag: DW_TAG_member, scope: !3606, file: !3607, line: 99, baseType: !3610, size: 32)
!3610 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3606, file: !3607, line: 99, size: 32, elements: !3611)
!3611 = !{!3612, !3613}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3610, file: !3607, line: 99, baseType: !108, size: 32)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3610, file: !3607, line: 99, baseType: !108, size: 32)
!3614 = !DIDerivedType(tag: DW_TAG_member, scope: !3606, file: !3607, line: 100, baseType: !3615, size: 32, offset: 32)
!3615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3606, file: !3607, line: 100, size: 32, elements: !3616)
!3616 = !{!3617, !3618}
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3615, file: !3607, line: 100, baseType: !108, size: 32)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3615, file: !3607, line: 100, baseType: !108, size: 32)
!3619 = !DIDerivedType(tag: DW_TAG_member, scope: !3606, file: !3607, line: 101, baseType: !3620, size: 32, offset: 64)
!3620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3606, file: !3607, line: 101, size: 32, elements: !3621)
!3621 = !{!3622, !3623}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3620, file: !3607, line: 101, baseType: !108, size: 32)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3620, file: !3607, line: 101, baseType: !108, size: 32)
!3624 = !DIDerivedType(tag: DW_TAG_member, scope: !3606, file: !3607, line: 102, baseType: !3625, size: 32, offset: 96)
!3625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3606, file: !3607, line: 102, size: 32, elements: !3626)
!3626 = !{!3627, !3628}
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3625, file: !3607, line: 102, baseType: !108, size: 32)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3625, file: !3607, line: 102, baseType: !108, size: 32)
!3629 = !DIDerivedType(tag: DW_TAG_member, scope: !3606, file: !3607, line: 103, baseType: !3630, size: 32, offset: 128)
!3630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3606, file: !3607, line: 103, size: 32, elements: !3631)
!3631 = !{!3632, !3633}
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3630, file: !3607, line: 103, baseType: !108, size: 32)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3630, file: !3607, line: 103, baseType: !108, size: 32)
!3634 = !DIDerivedType(tag: DW_TAG_member, scope: !3606, file: !3607, line: 104, baseType: !3635, size: 32, offset: 160)
!3635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3606, file: !3607, line: 104, size: 32, elements: !3636)
!3636 = !{!3637, !3638}
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3635, file: !3607, line: 104, baseType: !108, size: 32)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3635, file: !3607, line: 104, baseType: !108, size: 32)
!3639 = !DIDerivedType(tag: DW_TAG_member, scope: !3606, file: !3607, line: 105, baseType: !3640, size: 32, offset: 192)
!3640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3606, file: !3607, line: 105, size: 32, elements: !3641)
!3641 = !{!3642, !3643}
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3640, file: !3607, line: 105, baseType: !108, size: 32)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3640, file: !3607, line: 105, baseType: !108, size: 32)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3606, file: !3607, line: 106, baseType: !108, size: 32, offset: 224)
!3645 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3646, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3489, retainedTypes: !3647, splitDebugInlining: false, nameTableKind: None)
!3646 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3647 = !{!3648, !102, !103, !3673, !3445, !108}
!3648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 32)
!3649 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1041, line: 402, baseType: !3650)
!3650 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 379, size: 1120, elements: !3651)
!3651 = !{!3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3650, file: !1041, line: 381, baseType: !1045, size: 32)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3650, file: !1041, line: 382, baseType: !813, size: 32, offset: 32)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3650, file: !1041, line: 383, baseType: !813, size: 32, offset: 64)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3650, file: !1041, line: 384, baseType: !813, size: 32, offset: 96)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3650, file: !1041, line: 385, baseType: !813, size: 32, offset: 128)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3650, file: !1041, line: 386, baseType: !813, size: 32, offset: 160)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3650, file: !1041, line: 387, baseType: !2500, size: 96, offset: 192)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3650, file: !1041, line: 388, baseType: !813, size: 32, offset: 288)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3650, file: !1041, line: 389, baseType: !813, size: 32, offset: 320)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3650, file: !1041, line: 390, baseType: !813, size: 32, offset: 352)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3650, file: !1041, line: 391, baseType: !813, size: 32, offset: 384)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3650, file: !1041, line: 392, baseType: !813, size: 32, offset: 416)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3650, file: !1041, line: 393, baseType: !813, size: 32, offset: 448)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3650, file: !1041, line: 394, baseType: !813, size: 32, offset: 480)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3650, file: !1041, line: 395, baseType: !2511, size: 64, offset: 512)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3650, file: !1041, line: 396, baseType: !1045, size: 32, offset: 576)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3650, file: !1041, line: 397, baseType: !1045, size: 32, offset: 608)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3650, file: !1041, line: 398, baseType: !2515, size: 128, offset: 640)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3650, file: !1041, line: 399, baseType: !2517, size: 160, offset: 768)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3650, file: !1041, line: 400, baseType: !2519, size: 160, offset: 928)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3650, file: !1041, line: 401, baseType: !813, size: 32, offset: 1088)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3674, size: 32)
!3674 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3607, line: 141, baseType: !3675)
!3675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3607, line: 97, size: 256, elements: !3676)
!3676 = !{!3677}
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3675, file: !3607, line: 107, baseType: !3678, size: 256)
!3678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3607, line: 98, size: 256, elements: !3679)
!3679 = !{!3680, !3685, !3690, !3695, !3700, !3705, !3710, !3715}
!3680 = !DIDerivedType(tag: DW_TAG_member, scope: !3678, file: !3607, line: 99, baseType: !3681, size: 32)
!3681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3678, file: !3607, line: 99, size: 32, elements: !3682)
!3682 = !{!3683, !3684}
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3681, file: !3607, line: 99, baseType: !108, size: 32)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3681, file: !3607, line: 99, baseType: !108, size: 32)
!3685 = !DIDerivedType(tag: DW_TAG_member, scope: !3678, file: !3607, line: 100, baseType: !3686, size: 32, offset: 32)
!3686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3678, file: !3607, line: 100, size: 32, elements: !3687)
!3687 = !{!3688, !3689}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3686, file: !3607, line: 100, baseType: !108, size: 32)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3686, file: !3607, line: 100, baseType: !108, size: 32)
!3690 = !DIDerivedType(tag: DW_TAG_member, scope: !3678, file: !3607, line: 101, baseType: !3691, size: 32, offset: 64)
!3691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3678, file: !3607, line: 101, size: 32, elements: !3692)
!3692 = !{!3693, !3694}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3691, file: !3607, line: 101, baseType: !108, size: 32)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3691, file: !3607, line: 101, baseType: !108, size: 32)
!3695 = !DIDerivedType(tag: DW_TAG_member, scope: !3678, file: !3607, line: 102, baseType: !3696, size: 32, offset: 96)
!3696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3678, file: !3607, line: 102, size: 32, elements: !3697)
!3697 = !{!3698, !3699}
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3696, file: !3607, line: 102, baseType: !108, size: 32)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3696, file: !3607, line: 102, baseType: !108, size: 32)
!3700 = !DIDerivedType(tag: DW_TAG_member, scope: !3678, file: !3607, line: 103, baseType: !3701, size: 32, offset: 128)
!3701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3678, file: !3607, line: 103, size: 32, elements: !3702)
!3702 = !{!3703, !3704}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3701, file: !3607, line: 103, baseType: !108, size: 32)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3701, file: !3607, line: 103, baseType: !108, size: 32)
!3705 = !DIDerivedType(tag: DW_TAG_member, scope: !3678, file: !3607, line: 104, baseType: !3706, size: 32, offset: 160)
!3706 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3678, file: !3607, line: 104, size: 32, elements: !3707)
!3707 = !{!3708, !3709}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3706, file: !3607, line: 104, baseType: !108, size: 32)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3706, file: !3607, line: 104, baseType: !108, size: 32)
!3710 = !DIDerivedType(tag: DW_TAG_member, scope: !3678, file: !3607, line: 105, baseType: !3711, size: 32, offset: 192)
!3711 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3678, file: !3607, line: 105, size: 32, elements: !3712)
!3712 = !{!3713, !3714}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3711, file: !3607, line: 105, baseType: !108, size: 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3711, file: !3607, line: 105, baseType: !108, size: 32)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3678, file: !3607, line: 106, baseType: !108, size: 32, offset: 224)
!3716 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3717, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2448, retainedTypes: !3718, splitDebugInlining: false, nameTableKind: None)
!3717 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3718 = !{!1720, !330, !164, !108, !3719, !3736}
!3719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3720, size: 32)
!3720 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1041, line: 360, baseType: !3721)
!3721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 345, size: 28704, elements: !3722)
!3722 = !{!3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735}
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3721, file: !1041, line: 347, baseType: !2463, size: 256)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3721, file: !1041, line: 348, baseType: !2465, size: 768, offset: 256)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3721, file: !1041, line: 349, baseType: !2463, size: 256, offset: 1024)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3721, file: !1041, line: 350, baseType: !2465, size: 768, offset: 1280)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3721, file: !1041, line: 351, baseType: !2463, size: 256, offset: 2048)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3721, file: !1041, line: 352, baseType: !2465, size: 768, offset: 2304)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3721, file: !1041, line: 353, baseType: !2463, size: 256, offset: 3072)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3721, file: !1041, line: 354, baseType: !2465, size: 768, offset: 3328)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3721, file: !1041, line: 355, baseType: !2463, size: 256, offset: 4096)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3721, file: !1041, line: 356, baseType: !2476, size: 1792, offset: 4352)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3721, file: !1041, line: 357, baseType: !2480, size: 1920, offset: 6144)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3721, file: !1041, line: 358, baseType: !2485, size: 20608, offset: 8064)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3721, file: !1041, line: 359, baseType: !813, size: 32, offset: 28672)
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 32)
!3737 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1041, line: 402, baseType: !3738)
!3738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 379, size: 1120, elements: !3739)
!3739 = !{!3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3738, file: !1041, line: 381, baseType: !1045, size: 32)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3738, file: !1041, line: 382, baseType: !813, size: 32, offset: 32)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3738, file: !1041, line: 383, baseType: !813, size: 32, offset: 64)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3738, file: !1041, line: 384, baseType: !813, size: 32, offset: 96)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3738, file: !1041, line: 385, baseType: !813, size: 32, offset: 128)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3738, file: !1041, line: 386, baseType: !813, size: 32, offset: 160)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3738, file: !1041, line: 387, baseType: !2500, size: 96, offset: 192)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3738, file: !1041, line: 388, baseType: !813, size: 32, offset: 288)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3738, file: !1041, line: 389, baseType: !813, size: 32, offset: 320)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3738, file: !1041, line: 390, baseType: !813, size: 32, offset: 352)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3738, file: !1041, line: 391, baseType: !813, size: 32, offset: 384)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3738, file: !1041, line: 392, baseType: !813, size: 32, offset: 416)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3738, file: !1041, line: 393, baseType: !813, size: 32, offset: 448)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3738, file: !1041, line: 394, baseType: !813, size: 32, offset: 480)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3738, file: !1041, line: 395, baseType: !2511, size: 64, offset: 512)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3738, file: !1041, line: 396, baseType: !1045, size: 32, offset: 576)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3738, file: !1041, line: 397, baseType: !1045, size: 32, offset: 608)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3738, file: !1041, line: 398, baseType: !2515, size: 128, offset: 640)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3738, file: !1041, line: 399, baseType: !2517, size: 160, offset: 768)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3738, file: !1041, line: 400, baseType: !2519, size: 160, offset: 928)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3738, file: !1041, line: 401, baseType: !813, size: 32, offset: 1088)
!3761 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3762, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3763, splitDebugInlining: false, nameTableKind: None)
!3762 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3763 = !{!3764, !102, !103}
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3765, size: 32)
!3765 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1041, line: 402, baseType: !3766)
!3766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 379, size: 1120, elements: !3767)
!3767 = !{!3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3766, file: !1041, line: 381, baseType: !1045, size: 32)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3766, file: !1041, line: 382, baseType: !813, size: 32, offset: 32)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3766, file: !1041, line: 383, baseType: !813, size: 32, offset: 64)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3766, file: !1041, line: 384, baseType: !813, size: 32, offset: 96)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3766, file: !1041, line: 385, baseType: !813, size: 32, offset: 128)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3766, file: !1041, line: 386, baseType: !813, size: 32, offset: 160)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3766, file: !1041, line: 387, baseType: !2500, size: 96, offset: 192)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3766, file: !1041, line: 388, baseType: !813, size: 32, offset: 288)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3766, file: !1041, line: 389, baseType: !813, size: 32, offset: 320)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3766, file: !1041, line: 390, baseType: !813, size: 32, offset: 352)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3766, file: !1041, line: 391, baseType: !813, size: 32, offset: 384)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3766, file: !1041, line: 392, baseType: !813, size: 32, offset: 416)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3766, file: !1041, line: 393, baseType: !813, size: 32, offset: 448)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3766, file: !1041, line: 394, baseType: !813, size: 32, offset: 480)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3766, file: !1041, line: 395, baseType: !2511, size: 64, offset: 512)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3766, file: !1041, line: 396, baseType: !1045, size: 32, offset: 576)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3766, file: !1041, line: 397, baseType: !1045, size: 32, offset: 608)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3766, file: !1041, line: 398, baseType: !2515, size: 128, offset: 640)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3766, file: !1041, line: 399, baseType: !2517, size: 160, offset: 768)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3766, file: !1041, line: 400, baseType: !2519, size: 160, offset: 928)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3766, file: !1041, line: 401, baseType: !813, size: 32, offset: 1088)
!3789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3790, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3791, splitDebugInlining: false, nameTableKind: None)
!3790 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3791 = !{!158, !157, !153, !1898, !3792, !165, !102}
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 32)
!3793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!3794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3795, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3796, splitDebugInlining: false, nameTableKind: None)
!3795 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3796 = !{!3797}
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 32)
!3798 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !809, line: 386, baseType: !3799)
!3799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 370, size: 448, elements: !3800)
!3800 = !{!3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814}
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3799, file: !809, line: 372, baseType: !813, size: 32)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3799, file: !809, line: 373, baseType: !813, size: 32, offset: 32)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3799, file: !809, line: 374, baseType: !813, size: 32, offset: 64)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3799, file: !809, line: 375, baseType: !813, size: 32, offset: 96)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3799, file: !809, line: 376, baseType: !813, size: 32, offset: 128)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3799, file: !809, line: 377, baseType: !813, size: 32, offset: 160)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3799, file: !809, line: 378, baseType: !813, size: 32, offset: 192)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3799, file: !809, line: 379, baseType: !813, size: 32, offset: 224)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3799, file: !809, line: 380, baseType: !813, size: 32, offset: 256)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3799, file: !809, line: 381, baseType: !813, size: 32, offset: 288)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3799, file: !809, line: 382, baseType: !813, size: 32, offset: 320)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3799, file: !809, line: 383, baseType: !813, size: 32, offset: 352)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3799, file: !809, line: 384, baseType: !813, size: 32, offset: 384)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3799, file: !809, line: 385, baseType: !813, size: 32, offset: 416)
!3815 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3816, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3816 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3817 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3818, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3819, retainedTypes: !3835, splitDebugInlining: false, nameTableKind: None)
!3818 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3819 = !{!3820, !3827, !3831}
!3820 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3821, line: 39, baseType: !32, size: 32, elements: !3822)
!3821 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3822 = !{!3823, !3824, !3825, !3826}
!3823 = !DIEnumerator(name: "HAL_OK", value: 0)
!3824 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3825 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3826 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3827 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1757, line: 183, baseType: !32, size: 32, elements: !3828)
!3828 = !{!3829, !3830}
!3829 = !DIEnumerator(name: "DISABLE", value: 0)
!3830 = !DIEnumerator(name: "ENABLE", value: 1)
!3831 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1757, line: 177, baseType: !32, size: 32, elements: !3832)
!3832 = !{!3833, !3834}
!3833 = !DIEnumerator(name: "RESET", value: 0)
!3834 = !DIEnumerator(name: "SET", value: 1)
!3835 = !{!3836, !102, !108, !164, !3854, !3855, !3861, !177, !3874, !109, !3887}
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 32)
!3837 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !809, line: 386, baseType: !3838)
!3838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 370, size: 448, elements: !3839)
!3839 = !{!3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853}
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3838, file: !809, line: 372, baseType: !813, size: 32)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3838, file: !809, line: 373, baseType: !813, size: 32, offset: 32)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3838, file: !809, line: 374, baseType: !813, size: 32, offset: 64)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3838, file: !809, line: 375, baseType: !813, size: 32, offset: 96)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3838, file: !809, line: 376, baseType: !813, size: 32, offset: 128)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3838, file: !809, line: 377, baseType: !813, size: 32, offset: 160)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3838, file: !809, line: 378, baseType: !813, size: 32, offset: 192)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3838, file: !809, line: 379, baseType: !813, size: 32, offset: 224)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3838, file: !809, line: 380, baseType: !813, size: 32, offset: 256)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3838, file: !809, line: 381, baseType: !813, size: 32, offset: 288)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3838, file: !809, line: 382, baseType: !813, size: 32, offset: 320)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3838, file: !809, line: 383, baseType: !813, size: 32, offset: 352)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3838, file: !809, line: 384, baseType: !813, size: 32, offset: 384)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3838, file: !809, line: 385, baseType: !813, size: 32, offset: 416)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 32)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 32)
!3856 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !809, line: 364, baseType: !3857)
!3857 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 360, size: 64, elements: !3858)
!3858 = !{!3859, !3860}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3857, file: !809, line: 362, baseType: !813, size: 32)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3857, file: !809, line: 363, baseType: !813, size: 32, offset: 32)
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3862, size: 32)
!3862 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !809, line: 286, baseType: !3863)
!3863 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 275, size: 288, elements: !3864)
!3864 = !{!3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3873}
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3863, file: !809, line: 277, baseType: !813, size: 32)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3863, file: !809, line: 278, baseType: !813, size: 32, offset: 32)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3863, file: !809, line: 279, baseType: !813, size: 32, offset: 64)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3863, file: !809, line: 280, baseType: !813, size: 32, offset: 96)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3863, file: !809, line: 281, baseType: !813, size: 32, offset: 128)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3863, file: !809, line: 282, baseType: !813, size: 32, offset: 160)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3863, file: !809, line: 283, baseType: !813, size: 32, offset: 192)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3863, file: !809, line: 284, baseType: !813, size: 32, offset: 224)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3863, file: !809, line: 285, baseType: !813, size: 32, offset: 256)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 32)
!3875 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !809, line: 314, baseType: !3876)
!3876 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 303, size: 320, elements: !3877)
!3877 = !{!3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3876, file: !809, line: 305, baseType: !813, size: 32)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3876, file: !809, line: 306, baseType: !813, size: 32, offset: 32)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3876, file: !809, line: 307, baseType: !813, size: 32, offset: 64)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3876, file: !809, line: 308, baseType: !813, size: 32, offset: 96)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3876, file: !809, line: 309, baseType: !813, size: 32, offset: 128)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3876, file: !809, line: 310, baseType: !813, size: 32, offset: 160)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3876, file: !809, line: 311, baseType: !813, size: 32, offset: 192)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3876, file: !809, line: 312, baseType: !813, size: 32, offset: 224)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3876, file: !809, line: 313, baseType: !2035, size: 64, offset: 256)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 32)
!3888 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3889, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3890, retainedTypes: !3891, splitDebugInlining: false, nameTableKind: None)
!3889 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3890 = !{!1756}
!3891 = !{!3892, !108, !3900, !3906, !3919}
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 32)
!3893 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1041, line: 712, baseType: !3894)
!3894 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1041, line: 706, size: 128, elements: !3895)
!3895 = !{!3896, !3897, !3898, !3899}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3894, file: !1041, line: 708, baseType: !813, size: 32)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3894, file: !1041, line: 709, baseType: !813, size: 32, offset: 32)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3894, file: !1041, line: 710, baseType: !813, size: 32, offset: 64)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3894, file: !1041, line: 711, baseType: !1045, size: 32, offset: 96)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 32)
!3901 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !809, line: 364, baseType: !3902)
!3902 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 360, size: 64, elements: !3903)
!3903 = !{!3904, !3905}
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3902, file: !809, line: 362, baseType: !813, size: 32)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3902, file: !809, line: 363, baseType: !813, size: 32, offset: 32)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 32)
!3907 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !809, line: 286, baseType: !3908)
!3908 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 275, size: 288, elements: !3909)
!3909 = !{!3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918}
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3908, file: !809, line: 277, baseType: !813, size: 32)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3908, file: !809, line: 278, baseType: !813, size: 32, offset: 32)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3908, file: !809, line: 279, baseType: !813, size: 32, offset: 64)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3908, file: !809, line: 280, baseType: !813, size: 32, offset: 96)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3908, file: !809, line: 281, baseType: !813, size: 32, offset: 128)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3908, file: !809, line: 282, baseType: !813, size: 32, offset: 160)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3908, file: !809, line: 283, baseType: !813, size: 32, offset: 192)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3908, file: !809, line: 284, baseType: !813, size: 32, offset: 224)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3908, file: !809, line: 285, baseType: !813, size: 32, offset: 256)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 32)
!3920 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !809, line: 386, baseType: !3921)
!3921 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 370, size: 448, elements: !3922)
!3922 = !{!3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3921, file: !809, line: 372, baseType: !813, size: 32)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3921, file: !809, line: 373, baseType: !813, size: 32, offset: 32)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3921, file: !809, line: 374, baseType: !813, size: 32, offset: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3921, file: !809, line: 375, baseType: !813, size: 32, offset: 96)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3921, file: !809, line: 376, baseType: !813, size: 32, offset: 128)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3921, file: !809, line: 377, baseType: !813, size: 32, offset: 160)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3921, file: !809, line: 378, baseType: !813, size: 32, offset: 192)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3921, file: !809, line: 379, baseType: !813, size: 32, offset: 224)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3921, file: !809, line: 380, baseType: !813, size: 32, offset: 256)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3921, file: !809, line: 381, baseType: !813, size: 32, offset: 288)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3921, file: !809, line: 382, baseType: !813, size: 32, offset: 320)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3921, file: !809, line: 383, baseType: !813, size: 32, offset: 352)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3921, file: !809, line: 384, baseType: !813, size: 32, offset: 384)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3921, file: !809, line: 385, baseType: !813, size: 32, offset: 416)
!3937 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3938, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3939, splitDebugInlining: false, nameTableKind: None)
!3938 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3939 = !{!102, !153}
!3940 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3941, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3942, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!3941 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3942 = !{!3943, !3950, !3490, !30}
!3943 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3944, line: 14, baseType: !32, size: 32, elements: !3945)
!3944 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3945 = !{!3946, !3947, !3948, !3949}
!3946 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3947 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3948 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3949 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3950 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3944, line: 42, baseType: !32, size: 32, elements: !3951)
!3951 = !{!3952, !3953, !3954, !3955, !3956, !3957}
!3952 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3953 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3954 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3955 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3956 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3957 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3958 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3959, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!3959 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3960 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3961, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3962, splitDebugInlining: false, nameTableKind: None)
!3961 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!3962 = !{!102, !103, !3963, !3978}
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3964, size: 32)
!3964 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3965)
!3965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3966)
!3966 = !{!3967, !3973}
!3967 = !DIDerivedType(tag: DW_TAG_member, scope: !3965, file: !133, line: 38, baseType: !3968, size: 32)
!3968 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3965, file: !133, line: 38, size: 32, elements: !3969)
!3969 = !{!3970, !3972}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3968, file: !133, line: 39, baseType: !3971, size: 32)
!3971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3965, size: 32)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3968, file: !133, line: 40, baseType: !3971, size: 32)
!3973 = !DIDerivedType(tag: DW_TAG_member, scope: !3965, file: !133, line: 42, baseType: !3974, size: 32, offset: 32)
!3974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3965, file: !133, line: 42, size: 32, elements: !3975)
!3975 = !{!3976, !3977}
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3974, file: !133, line: 43, baseType: !3971, size: 32)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3974, file: !133, line: 44, baseType: !3971, size: 32)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 32)
!3979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !3980)
!3980 = !{!3981, !4025, !4037, !4038, !4039, !4040, !4046, !4061}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3979, file: !195, line: 247, baseType: !3982, size: 384)
!3982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !3983)
!3983 = !{!3984, !3994, !4001, !4002, !4003, !4012, !4013, !4014}
!3984 = !DIDerivedType(tag: DW_TAG_member, scope: !3982, file: !195, line: 60, baseType: !3985, size: 64)
!3985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3982, file: !195, line: 60, size: 64, elements: !3986)
!3986 = !{!3987, !3988}
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3985, file: !195, line: 61, baseType: !3964, size: 64)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3985, file: !195, line: 62, baseType: !3989, size: 64)
!3989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !3990)
!3990 = !{!3991}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3989, file: !207, line: 50, baseType: !3992, size: 64)
!3992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3993, size: 64, elements: !212)
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 32)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3982, file: !195, line: 68, baseType: !3995, size: 32, offset: 64)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 32)
!3996 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !3997)
!3997 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !3998)
!3998 = !{!3999}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3997, file: !128, line: 232, baseType: !4000, size: 64)
!4000 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3965)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3982, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3982, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!4003 = !DIDerivedType(tag: DW_TAG_member, scope: !3982, file: !195, line: 90, baseType: !4004, size: 16, offset: 112)
!4004 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3982, file: !195, line: 90, size: 16, elements: !4005)
!4005 = !{!4006, !4011}
!4006 = !DIDerivedType(tag: DW_TAG_member, scope: !4004, file: !195, line: 91, baseType: !4007, size: 16)
!4007 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4004, file: !195, line: 91, size: 16, elements: !4008)
!4008 = !{!4009, !4010}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4007, file: !195, line: 96, baseType: !225, size: 8)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4007, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4004, file: !195, line: 100, baseType: !177, size: 16)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3982, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3982, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3982, file: !195, line: 131, baseType: !4015, size: 192, offset: 192)
!4015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !4016)
!4016 = !{!4017, !4018, !4024}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4015, file: !128, line: 245, baseType: !3964, size: 64)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4015, file: !128, line: 246, baseType: !4019, size: 32, offset: 64)
!4019 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !4020)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 32)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{null, !4023}
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 32)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4015, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3979, file: !195, line: 250, baseType: !4026, size: 288, offset: 384)
!4026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !4027)
!4027 = !{!4028, !4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4026, file: !244, line: 26, baseType: !108, size: 32)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4026, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4026, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4026, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4026, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4026, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4026, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4026, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4026, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3979, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3979, file: !195, line: 256, baseType: !3996, size: 64, offset: 704)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3979, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3979, file: !195, line: 300, baseType: !4041, size: 96, offset: 800)
!4041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !4042)
!4042 = !{!4043, !4044, !4045}
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4041, file: !195, line: 153, baseType: !22, size: 32)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4041, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4041, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3979, file: !195, line: 325, baseType: !4047, size: 32, offset: 896)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 32)
!4048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !4049)
!4049 = !{!4050, !4056, !4057}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4048, file: !124, line: 5074, baseType: !4051, size: 96)
!4051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !4052)
!4052 = !{!4053, !4054, !4055}
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4051, file: !270, line: 57, baseType: !273, size: 32)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4051, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4051, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4048, file: !124, line: 5075, baseType: !3996, size: 64, offset: 96)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4048, file: !124, line: 5076, baseType: !4058, size: 32, offset: 160)
!4058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !4059)
!4059 = !{!4060}
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4058, file: !149, line: 52, baseType: !22, size: 32)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3979, file: !195, line: 343, baseType: !4062, size: 64, offset: 928)
!4062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !4063)
!4063 = !{!4064, !4065}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4062, file: !244, line: 63, baseType: !108, size: 32)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4062, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!4066 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4067, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !4068, splitDebugInlining: false, nameTableKind: None)
!4067 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!4068 = !{!22, !102, !103}
!4069 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4070, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!4070 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!4071 = !{!"Ubuntu clang version 14.0.6"}
!4072 = !{i32 7, !"Dwarf Version", i32 4}
!4073 = !{i32 2, !"Debug Info Version", i32 3}
!4074 = !{i32 1, !"wchar_size", i32 4}
!4075 = !{i32 1, !"min_enum_size", i32 4}
!4076 = !{i32 1, !"branch-target-enforcement", i32 0}
!4077 = !{i32 1, !"sign-return-address", i32 0}
!4078 = !{i32 1, !"sign-return-address-all", i32 0}
!4079 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!4080 = !{i32 7, !"frame-pointer", i32 2}
!4081 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !4082, file: !4082, line: 26, type: !333, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3409, retainedNodes: !2894)
!4082 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4083 = !DILocation(line: 28, column: 1, scope: !4081)
!4084 = !{i64 2152498454, i64 2152498474, i64 2152498537}
!4085 = !DILocation(line: 29, column: 1, scope: !4081)
!4086 = !{i64 2152498869, i64 2152498889, i64 2152498952}
!4087 = !DILocation(line: 30, column: 1, scope: !4081)
!4088 = !{i64 2152499288, i64 2152499308, i64 2152499371}
!4089 = !DILocation(line: 31, column: 1, scope: !4081)
!4090 = !{i64 2152499707, i64 2152499727, i64 2152499790}
!4091 = !DILocation(line: 33, column: 1, scope: !4081)
!4092 = !{i64 2152499999, i64 2152500019, i64 2152500082}
!4093 = !DILocation(line: 35, column: 1, scope: !4081)
!4094 = !{i64 2152500324, i64 2152500344, i64 2152500407}
!4095 = !DILocation(line: 50, column: 1, scope: !4081)
!4096 = !{i64 2152500751, i64 2152500771, i64 2152500834}
!4097 = !DILocation(line: 54, column: 1, scope: !4081)
!4098 = !{i64 2152501190, i64 2152501210, i64 2152501273}
!4099 = !DILocation(line: 61, column: 1, scope: !4081)
!4100 = !{i64 2152501507, i64 2152501527, i64 2152501590}
!4101 = !DILocation(line: 63, column: 1, scope: !4081)
!4102 = !{i64 2152501887, i64 2152501907, i64 2152501970}
!4103 = !DILocation(line: 64, column: 1, scope: !4081)
!4104 = !{i64 2152502409, i64 2152502429, i64 2152502492}
!4105 = !DILocation(line: 65, column: 1, scope: !4081)
!4106 = !{i64 2152502907, i64 2152502927, i64 2152502990}
!4107 = !DILocation(line: 66, column: 1, scope: !4081)
!4108 = !{i64 2152503389, i64 2152503409, i64 2152503472}
!4109 = !DILocation(line: 67, column: 1, scope: !4081)
!4110 = !{i64 2152503896, i64 2152503916, i64 2152503979}
!4111 = !DILocation(line: 68, column: 1, scope: !4081)
!4112 = !{i64 2152504384, i64 2152504404, i64 2152504467}
!4113 = !DILocation(line: 70, column: 1, scope: !4081)
!4114 = !{i64 2152504852, i64 2152504872, i64 2152504935}
!4115 = !DILocation(line: 71, column: 1, scope: !4081)
!4116 = !{i64 2152505294, i64 2152505314, i64 2152505377}
!4117 = !DILocation(line: 72, column: 1, scope: !4081)
!4118 = !{i64 2152505752, i64 2152505772, i64 2152505835}
!4119 = !DILocation(line: 79, column: 1, scope: !4081)
!4120 = !{i64 2152510267, i64 2152510287, i64 2152510350}
!4121 = !DILocation(line: 80, column: 1, scope: !4081)
!4122 = !{i64 2152510778, i64 2152510798, i64 2152510861}
!4123 = !DILocation(line: 82, column: 1, scope: !4081)
!4124 = !{i64 2152511269, i64 2152511289, i64 2152511352}
!4125 = !DILocation(line: 97, column: 1, scope: !4081)
!4126 = !{i64 2152511606, i64 2152511626, i64 2152511689}
!4127 = !DILocation(line: 99, column: 1, scope: !4081)
!4128 = !{i64 2152511824, i64 2152511844, i64 2152511907}
!4129 = !DILocation(line: 102, column: 1, scope: !4081)
!4130 = !{i64 2152512081, i64 2152512101, i64 2152512164}
!4131 = !DILocation(line: 105, column: 1, scope: !4081)
!4132 = !{i64 2152512321, i64 2152512341, i64 2152512404}
!4133 = !DILocation(line: 115, column: 1, scope: !4081)
!4134 = !{i64 2152512660, i64 2152512680, i64 2152512743}
!4135 = !DILocation(line: 118, column: 1, scope: !4081)
!4136 = !{i64 2152513004, i64 2152513024, i64 2152513087}
!4137 = !DILocation(line: 32, column: 1, scope: !4138)
!4138 = !DILexicalBlockFile(scope: !4081, file: !4139, discriminator: 0)
!4139 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4140 = !{i64 2152513360, i64 2152513380, i64 2152513443}
!4141 = !DILocation(line: 33, column: 1, scope: !4138)
!4142 = !{i64 2152513872, i64 2152513892, i64 2152513955}
!4143 = !DILocation(line: 53, column: 1, scope: !4138)
!4144 = !{i64 2152514380, i64 2152514400, i64 2152514463}
!4145 = !DILocation(line: 54, column: 1, scope: !4138)
!4146 = !{i64 2152514798, i64 2152514818, i64 2152514881}
!4147 = !DILocation(line: 55, column: 1, scope: !4138)
!4148 = !{i64 2152515216, i64 2152515236, i64 2152515299}
!4149 = !DILocation(line: 56, column: 1, scope: !4138)
!4150 = !{i64 2152515634, i64 2152515654, i64 2152515717}
!4151 = !DILocation(line: 57, column: 1, scope: !4138)
!4152 = !{i64 2152516052, i64 2152516072, i64 2152516135}
!4153 = !DILocation(line: 58, column: 1, scope: !4138)
!4154 = !{i64 2152516470, i64 2152516490, i64 2152516553}
!4155 = !DILocation(line: 59, column: 1, scope: !4138)
!4156 = !{i64 2152516888, i64 2152516908, i64 2152516971}
!4157 = !DILocation(line: 60, column: 1, scope: !4138)
!4158 = !{i64 2152517312, i64 2152517332, i64 2152517395}
!4159 = !DILocation(line: 61, column: 1, scope: !4138)
!4160 = !{i64 2152517629, i64 2152517649, i64 2152517712}
!4161 = !DILocation(line: 70, column: 1, scope: !4138)
!4162 = !{i64 2152517858, i64 2152517878, i64 2152517941}
!4163 = !DILocation(line: 72, column: 1, scope: !4138)
!4164 = !{i64 2152518190, i64 2152518210, i64 2152518273}
!4165 = !DILocation(line: 73, column: 1, scope: !4138)
!4166 = !{i64 2152518640, i64 2152518660, i64 2152518723}
!4167 = !DILocation(line: 74, column: 1, scope: !4138)
!4168 = !{i64 2152519090, i64 2152519110, i64 2152519173}
!4169 = !DILocation(line: 75, column: 1, scope: !4138)
!4170 = !{i64 2152519540, i64 2152519560, i64 2152519623}
!4171 = !DILocation(line: 76, column: 1, scope: !4138)
!4172 = !{i64 2152524051, i64 2152524071, i64 2152524134}
!4173 = !DILocation(line: 77, column: 1, scope: !4138)
!4174 = !{i64 2152524501, i64 2152524521, i64 2152524584}
!4175 = !DILocation(line: 78, column: 1, scope: !4138)
!4176 = !{i64 2152524951, i64 2152524971, i64 2152525034}
!4177 = !DILocation(line: 79, column: 1, scope: !4138)
!4178 = !{i64 2152525401, i64 2152525421, i64 2152525484}
!4179 = !DILocation(line: 80, column: 1, scope: !4138)
!4180 = !{i64 2152525854, i64 2152525874, i64 2152525937}
!4181 = !DILocation(line: 84, column: 1, scope: !4138)
!4182 = !{i64 2152526186, i64 2152526206, i64 2152526269}
!4183 = !DILocation(line: 91, column: 1, scope: !4138)
!4184 = !{i64 2152526583, i64 2152526603, i64 2152526666}
!4185 = !DILocation(line: 93, column: 1, scope: !4138)
!4186 = !{i64 2152526950, i64 2152526970, i64 2152527033}
!4187 = !DILocation(line: 106, column: 1, scope: !4138)
!4188 = !{i64 2152527220, i64 2152527240, i64 2152527303}
!4189 = !DILocation(line: 11, column: 1, scope: !4190)
!4190 = !DILexicalBlockFile(scope: !4081, file: !4191, discriminator: 0)
!4191 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4192 = distinct !DISubprogram(name: "consumer_subscriber_thread", scope: !114, file: !114, line: 13, type: !333, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4193)
!4193 = !{!4194, !4195}
!4194 = !DILocalVariable(name: "chan", scope: !4192, file: !114, line: 15, type: !171)
!4195 = !DILocalVariable(name: "acc", scope: !4196, file: !114, line: 18, type: !4197)
!4196 = distinct !DILexicalBlock(scope: !4192, file: !114, line: 17, column: 58)
!4197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_msg", file: !538, line: 11, size: 96, elements: !4198)
!4198 = !{!4199, !4200, !4201}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4197, file: !538, line: 12, baseType: !103, size: 32)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4197, file: !538, line: 13, baseType: !103, size: 32, offset: 32)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !4197, file: !538, line: 14, baseType: !103, size: 32, offset: 64)
!4202 = !DILocation(line: 15, column: 2, scope: !4192)
!4203 = !DILocation(line: 0, scope: !4192)
!4204 = !DILocation(line: 17, column: 10, scope: !4192)
!4205 = !DILocation(line: 17, column: 9, scope: !4192)
!4206 = !DILocation(line: 17, column: 2, scope: !4192)
!4207 = !DILocation(line: 18, column: 3, scope: !4196)
!4208 = !DILocation(line: 18, column: 21, scope: !4196)
!4209 = !DILocation(line: 20, column: 18, scope: !4196)
!4210 = !DILocation(line: 20, column: 3, scope: !4196)
!4211 = !DILocation(line: 21, column: 3, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4213, file: !114, line: 21, column: 3)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !114, line: 21, column: 3)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !114, line: 21, column: 3)
!4215 = distinct !DILexicalBlock(scope: !4196, file: !114, line: 21, column: 3)
!4216 = !DILocation(line: 22, column: 2, scope: !4192)
!4217 = distinct !{!4217, !4206, !4216}
!4218 = !DILocation(line: 23, column: 1, scope: !4192)
!4219 = distinct !DISubprogram(name: "filter_callback", scope: !362, file: !362, line: 20, type: !519, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !4220)
!4220 = !{!4221, !4222, !4225}
!4221 = !DILocalVariable(name: "chan", arg: 1, scope: !4219, file: !362, line: 20, type: !521)
!4222 = !DILocalVariable(name: "msg", scope: !4219, file: !362, line: 22, type: !4223)
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 32)
!4224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !537)
!4225 = !DILocalVariable(name: "proc_msg", scope: !4219, file: !362, line: 23, type: !537)
!4226 = !DILocation(line: 0, scope: !4219)
!4227 = !DILocation(line: 22, column: 33, scope: !4219)
!4228 = !DILocation(line: 23, column: 2, scope: !4219)
!4229 = !DILocation(line: 23, column: 20, scope: !4219)
!4230 = !DILocation(line: 25, column: 17, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4219, file: !362, line: 25, column: 6)
!4232 = !DILocation(line: 25, column: 8, scope: !4231)
!4233 = !DILocation(line: 25, column: 6, scope: !4219)
!4234 = !DILocation(line: 26, column: 12, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4231, file: !362, line: 25, column: 25)
!4236 = !DILocation(line: 26, column: 14, scope: !4235)
!4237 = !DILocation(line: 27, column: 2, scope: !4235)
!4238 = !DILocation(line: 28, column: 17, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4219, file: !362, line: 28, column: 6)
!4240 = !DILocation(line: 28, column: 8, scope: !4239)
!4241 = !DILocation(line: 28, column: 6, scope: !4219)
!4242 = !DILocation(line: 29, column: 12, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4239, file: !362, line: 28, column: 25)
!4244 = !DILocation(line: 29, column: 14, scope: !4243)
!4245 = !DILocation(line: 30, column: 2, scope: !4243)
!4246 = !DILocation(line: 31, column: 17, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4219, file: !362, line: 31, column: 6)
!4248 = !DILocation(line: 31, column: 8, scope: !4247)
!4249 = !DILocation(line: 31, column: 6, scope: !4219)
!4250 = !DILocation(line: 32, column: 12, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4247, file: !362, line: 31, column: 25)
!4252 = !DILocation(line: 32, column: 14, scope: !4251)
!4253 = !DILocation(line: 33, column: 2, scope: !4251)
!4254 = !DILocation(line: 34, column: 2, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4256, file: !362, line: 34, column: 2)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !362, line: 34, column: 2)
!4257 = distinct !DILexicalBlock(scope: !4258, file: !362, line: 34, column: 2)
!4258 = distinct !DILexicalBlock(scope: !4219, file: !362, line: 34, column: 2)
!4259 = !DILocation(line: 35, column: 2, scope: !4219)
!4260 = !DILocation(line: 36, column: 1, scope: !4219)
!4261 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !116, file: !116, line: 416, type: !4262, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !4264)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!13, !521}
!4264 = !{!4265}
!4265 = !DILocalVariable(name: "chan", arg: 1, scope: !4261, file: !116, line: 416, type: !521)
!4266 = !DILocation(line: 0, scope: !4261)
!4267 = !DILocation(line: 418, column: 2, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4269, file: !116, line: 418, column: 2)
!4269 = distinct !DILexicalBlock(scope: !4261, file: !116, line: 418, column: 2)
!4270 = !DILocation(line: 418, column: 2, scope: !4269)
!4271 = !DILocation(line: 418, column: 2, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4268, file: !116, line: 418, column: 2)
!4273 = !DILocation(line: 420, column: 15, scope: !4261)
!4274 = !DILocation(line: 420, column: 2, scope: !4261)
!4275 = distinct !DISubprogram(name: "main", scope: !362, file: !362, line: 42, type: !333, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !4276)
!4276 = !{!4277}
!4277 = !DILocalVariable(name: "chan", scope: !4275, file: !362, line: 46, type: !521)
!4278 = !DILocation(line: 44, column: 2, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4280, file: !362, line: 44, column: 2)
!4280 = distinct !DILexicalBlock(scope: !4281, file: !362, line: 44, column: 2)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !362, line: 44, column: 2)
!4282 = distinct !DILexicalBlock(scope: !4275, file: !362, line: 44, column: 2)
!4283 = !DILocation(line: 46, column: 2, scope: !4275)
!4284 = !DILocation(line: 48, column: 2, scope: !4275)
!4285 = !DILocation(line: 49, column: 3, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !362, line: 49, column: 3)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !362, line: 49, column: 3)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !362, line: 49, column: 3)
!4289 = distinct !DILexicalBlock(scope: !4290, file: !362, line: 49, column: 3)
!4290 = distinct !DILexicalBlock(scope: !4275, file: !362, line: 48, column: 12)
!4291 = !DILocation(line: 50, column: 3, scope: !4290)
!4292 = !DILocation(line: 0, scope: !4275)
!4293 = !DILocation(line: 52, column: 3, scope: !4290)
!4294 = !DILocation(line: 54, column: 3, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !362, line: 54, column: 3)
!4296 = distinct !DILexicalBlock(scope: !4297, file: !362, line: 54, column: 3)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !362, line: 54, column: 3)
!4298 = distinct !DILexicalBlock(scope: !4290, file: !362, line: 54, column: 3)
!4299 = !DILocation(line: 55, column: 3, scope: !4290)
!4300 = !DILocation(line: 57, column: 3, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4302, file: !362, line: 57, column: 3)
!4302 = distinct !DILexicalBlock(scope: !4303, file: !362, line: 57, column: 3)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !362, line: 57, column: 3)
!4304 = distinct !DILexicalBlock(scope: !4290, file: !362, line: 57, column: 3)
!4305 = !DILocation(line: 58, column: 3, scope: !4290)
!4306 = !DILocation(line: 60, column: 3, scope: !4290)
!4307 = !DILocation(line: 62, column: 3, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !362, line: 62, column: 3)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !362, line: 62, column: 3)
!4310 = distinct !DILexicalBlock(scope: !4311, file: !362, line: 62, column: 3)
!4311 = distinct !DILexicalBlock(scope: !4290, file: !362, line: 62, column: 3)
!4312 = !DILocation(line: 63, column: 3, scope: !4290)
!4313 = !DILocation(line: 65, column: 3, scope: !4290)
!4314 = distinct !{!4314, !4284, !4315}
!4315 = !DILocation(line: 66, column: 2, scope: !4275)
!4316 = distinct !DISubprogram(name: "producer_thread", scope: !553, file: !553, line: 16, type: !333, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !548, retainedNodes: !4317)
!4317 = !{!4318, !4319, !4320}
!4318 = !DILocalVariable(name: "acc", scope: !4316, file: !553, line: 18, type: !753)
!4319 = !DILocalVariable(name: "count", scope: !4316, file: !553, line: 19, type: !108)
!4320 = !DILocalVariable(name: "change_state", scope: !4321, file: !553, line: 23, type: !119)
!4321 = distinct !DILexicalBlock(scope: !4322, file: !553, line: 22, column: 19)
!4322 = distinct !DILexicalBlock(scope: !4323, file: !553, line: 22, column: 7)
!4323 = distinct !DILexicalBlock(scope: !4316, file: !553, line: 21, column: 12)
!4324 = !DILocation(line: 18, column: 2, scope: !4316)
!4325 = !DILocation(line: 18, column: 20, scope: !4316)
!4326 = !DILocation(line: 0, scope: !4316)
!4327 = !DILocation(line: 21, column: 2, scope: !4316)
!4328 = !DILocation(line: 22, column: 13, scope: !4322)
!4329 = !DILocation(line: 22, column: 7, scope: !4323)
!4330 = !DILocation(line: 23, column: 4, scope: !4321)
!4331 = !DILocation(line: 0, scope: !4321)
!4332 = !DILocation(line: 23, column: 9, scope: !4321)
!4333 = !DILocation(line: 25, column: 46, scope: !4321)
!4334 = !DILocation(line: 25, column: 4, scope: !4321)
!4335 = !DILocation(line: 27, column: 3, scope: !4322)
!4336 = !DILocation(line: 27, column: 3, scope: !4321)
!4337 = !DILocation(line: 29, column: 3, scope: !4323)
!4338 = !DILocation(line: 30, column: 3, scope: !4323)
!4339 = !DILocation(line: 31, column: 3, scope: !4323)
!4340 = !DILocation(line: 33, column: 3, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !553, line: 33, column: 3)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !553, line: 33, column: 3)
!4343 = distinct !DILexicalBlock(scope: !4344, file: !553, line: 33, column: 3)
!4344 = distinct !DILexicalBlock(scope: !4323, file: !553, line: 33, column: 3)
!4345 = !DILocation(line: 35, column: 39, scope: !4323)
!4346 = !DILocation(line: 35, column: 3, scope: !4323)
!4347 = !DILocation(line: 37, column: 3, scope: !4323)
!4348 = !DILocation(line: 39, column: 3, scope: !4323)
!4349 = distinct !{!4349, !4327, !4350}
!4350 = !DILocation(line: 40, column: 2, scope: !4316)
!4351 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !4352, file: !4352, line: 403, type: !4353, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !548, retainedNodes: !4355)
!4352 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4353 = !DISubroutineType(types: !4354)
!4354 = !{!109, !109}
!4355 = !{!4356}
!4356 = !DILocalVariable(name: "t", arg: 1, scope: !4351, file: !4352, line: 403, type: !109)
!4357 = !DILocation(line: 0, scope: !4351)
!4358 = !DILocalVariable(name: "t", arg: 1, scope: !4359, file: !4352, line: 102, type: !109)
!4359 = distinct !DISubprogram(name: "z_tmcvt", scope: !4352, file: !4352, line: 102, type: !4360, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !548, retainedNodes: !4362)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{!109, !109, !108, !108, !119, !119, !119, !119}
!4362 = !{!4358, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372}
!4363 = !DILocalVariable(name: "from_hz", arg: 2, scope: !4359, file: !4352, line: 102, type: !108)
!4364 = !DILocalVariable(name: "to_hz", arg: 3, scope: !4359, file: !4352, line: 103, type: !108)
!4365 = !DILocalVariable(name: "const_hz", arg: 4, scope: !4359, file: !4352, line: 103, type: !119)
!4366 = !DILocalVariable(name: "result32", arg: 5, scope: !4359, file: !4352, line: 104, type: !119)
!4367 = !DILocalVariable(name: "round_up", arg: 6, scope: !4359, file: !4352, line: 104, type: !119)
!4368 = !DILocalVariable(name: "round_off", arg: 7, scope: !4359, file: !4352, line: 105, type: !119)
!4369 = !DILocalVariable(name: "mul_ratio", scope: !4359, file: !4352, line: 107, type: !119)
!4370 = !DILocalVariable(name: "div_ratio", scope: !4359, file: !4352, line: 109, type: !119)
!4371 = !DILocalVariable(name: "off", scope: !4359, file: !4352, line: 116, type: !109)
!4372 = !DILocalVariable(name: "rdivisor", scope: !4373, file: !4352, line: 119, type: !108)
!4373 = distinct !DILexicalBlock(scope: !4374, file: !4352, line: 118, column: 18)
!4374 = distinct !DILexicalBlock(scope: !4359, file: !4352, line: 118, column: 6)
!4375 = !DILocation(line: 0, scope: !4359, inlinedAt: !4376)
!4376 = distinct !DILocation(line: 406, column: 9, scope: !4351)
!4377 = !DILocation(line: 145, column: 13, scope: !4378, inlinedAt: !4376)
!4378 = distinct !DILexicalBlock(scope: !4379, file: !4352, line: 144, column: 10)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !4352, line: 142, column: 7)
!4380 = distinct !DILexicalBlock(scope: !4381, file: !4352, line: 141, column: 24)
!4381 = distinct !DILexicalBlock(scope: !4382, file: !4352, line: 141, column: 13)
!4382 = distinct !DILexicalBlock(scope: !4359, file: !4352, line: 134, column: 6)
!4383 = !DILocation(line: 406, column: 2, scope: !4351)
!4384 = distinct !DISubprogram(name: "k_msleep", scope: !124, file: !124, line: 439, type: !4385, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !548, retainedNodes: !4387)
!4385 = !DISubroutineType(types: !4386)
!4386 = !{!330, !330}
!4387 = !{!4388}
!4388 = !DILocalVariable(name: "ms", arg: 1, scope: !4384, file: !124, line: 439, type: !330)
!4389 = !DILocation(line: 0, scope: !4384)
!4390 = !DILocation(line: 441, column: 17, scope: !4384)
!4391 = !DILocation(line: 441, column: 9, scope: !4384)
!4392 = !DILocation(line: 441, column: 2, scope: !4384)
!4393 = distinct !DISubprogram(name: "k_sleep", scope: !4394, file: !4394, line: 91, type: !4395, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !548, retainedNodes: !4401)
!4394 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!4395 = !DISubroutineType(types: !4396)
!4396 = !{!330, !4397}
!4397 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !4398)
!4398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !4399)
!4399 = !{!4400}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !4398, file: !105, line: 66, baseType: !104, size: 64)
!4401 = !{!4402}
!4402 = !DILocalVariable(name: "timeout", arg: 1, scope: !4393, file: !4394, line: 91, type: !4397)
!4403 = !DILocation(line: 0, scope: !4393)
!4404 = !DILocation(line: 99, column: 2, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4393, file: !4394, line: 99, column: 2)
!4406 = !{i64 2152419774}
!4407 = !DILocation(line: 100, column: 9, scope: !4393)
!4408 = !DILocation(line: 100, column: 2, scope: !4393)
!4409 = distinct !DISubprogram(name: "cbvprintf_package", scope: !785, file: !785, line: 233, type: !4410, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4419)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{!103, !102, !153, !108, !336, !4412}
!4412 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4413, line: 99, baseType: !4414)
!4413 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4414 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4413, line: 40, baseType: !4415)
!4415 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !785, baseType: !4416)
!4416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4417)
!4417 = !{!4418}
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4416, file: !785, line: 18, baseType: !102, size: 32)
!4419 = !{!4420, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428, !4429, !4431, !4432, !4433, !4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4455, !4464, !4467, !4468, !4471, !4474, !4477, !4480, !4486}
!4420 = !DILocalVariable(name: "packaged", arg: 1, scope: !4409, file: !785, line: 233, type: !102)
!4421 = !DILocalVariable(name: "len", arg: 2, scope: !4409, file: !785, line: 233, type: !153)
!4422 = !DILocalVariable(name: "flags", arg: 3, scope: !4409, file: !785, line: 233, type: !108)
!4423 = !DILocalVariable(name: "fmt", arg: 4, scope: !4409, file: !785, line: 234, type: !336)
!4424 = !DILocalVariable(name: "ap", arg: 5, scope: !4409, file: !785, line: 234, type: !4412)
!4425 = !DILocalVariable(name: "buf0", scope: !4409, file: !785, line: 247, type: !783)
!4426 = !DILocalVariable(name: "buf", scope: !4409, file: !785, line: 248, type: !783)
!4427 = !DILocalVariable(name: "size", scope: !4409, file: !785, line: 249, type: !32)
!4428 = !DILocalVariable(name: "align", scope: !4409, file: !785, line: 250, type: !32)
!4429 = !DILocalVariable(name: "str_ptr_pos", scope: !4409, file: !785, line: 251, type: !4430)
!4430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 128, elements: !345)
!4431 = !DILocalVariable(name: "str_ptr_arg", scope: !4409, file: !785, line: 252, type: !4430)
!4432 = !DILocalVariable(name: "s_idx", scope: !4409, file: !785, line: 253, type: !32)
!4433 = !DILocalVariable(name: "s_rw_cnt", scope: !4409, file: !785, line: 254, type: !32)
!4434 = !DILocalVariable(name: "s_ro_cnt", scope: !4409, file: !785, line: 255, type: !32)
!4435 = !DILocalVariable(name: "arg_idx", scope: !4409, file: !785, line: 256, type: !103)
!4436 = !DILocalVariable(name: "i", scope: !4409, file: !785, line: 257, type: !32)
!4437 = !DILocalVariable(name: "s", scope: !4409, file: !785, line: 258, type: !336)
!4438 = !DILocalVariable(name: "parsing", scope: !4409, file: !785, line: 259, type: !119)
!4439 = !DILocalVariable(name: "rws_pos_en", scope: !4409, file: !785, line: 263, type: !119)
!4440 = !DILocalVariable(name: "fros_cnt", scope: !4409, file: !785, line: 268, type: !103)
!4441 = !DILocalVariable(name: "is_str_arg", scope: !4409, file: !785, line: 269, type: !119)
!4442 = !DILocalVariable(name: "pkg_hdr", scope: !4409, file: !785, line: 270, type: !4443)
!4443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4444, size: 32)
!4444 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4445, line: 78, size: 32, elements: !4446)
!4445 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4446 = !{!4447, !4454}
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4444, file: !4445, line: 80, baseType: !4448, size: 32)
!4448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4445, line: 45, size: 32, elements: !4449)
!4449 = !{!4450, !4451, !4452, !4453}
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4448, file: !4445, line: 47, baseType: !164, size: 8)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4448, file: !4445, line: 50, baseType: !164, size: 8, offset: 8)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4448, file: !4445, line: 53, baseType: !164, size: 8, offset: 16)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4448, file: !4445, line: 56, baseType: !164, size: 8, offset: 24)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4444, file: !4445, line: 82, baseType: !102, size: 32)
!4455 = !DILocalVariable(name: "v", scope: !4456, file: !785, line: 567, type: !4460)
!4456 = distinct !DILexicalBlock(scope: !4457, file: !785, line: 562, column: 14)
!4457 = distinct !DILexicalBlock(scope: !4458, file: !785, line: 481, column: 18)
!4458 = distinct !DILexicalBlock(scope: !4459, file: !785, line: 466, column: 3)
!4459 = distinct !DILexicalBlock(scope: !4409, file: !785, line: 343, column: 15)
!4460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4409, file: !785, line: 567, size: 64, elements: !4461)
!4461 = !{!4462, !4463}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4460, file: !785, line: 567, baseType: !776, size: 64)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4460, file: !785, line: 567, baseType: !774, size: 64)
!4464 = !DILocalVariable(name: "is_ro", scope: !4465, file: !785, line: 620, type: !119)
!4465 = distinct !DILexicalBlock(scope: !4466, file: !785, line: 613, column: 19)
!4466 = distinct !DILexicalBlock(scope: !4459, file: !785, line: 613, column: 7)
!4467 = !DILocalVariable(name: "do_ro", scope: !4465, file: !785, line: 621, type: !119)
!4468 = !DILocalVariable(name: "s_ptr_idx", scope: !4469, file: !785, line: 626, type: !108)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !785, line: 625, column: 11)
!4470 = distinct !DILexicalBlock(scope: !4465, file: !785, line: 623, column: 8)
!4471 = !DILocalVariable(name: "v", scope: !4472, file: !785, line: 684, type: !103)
!4472 = distinct !DILexicalBlock(scope: !4473, file: !785, line: 683, column: 35)
!4473 = distinct !DILexicalBlock(scope: !4466, file: !785, line: 683, column: 14)
!4474 = !DILocalVariable(name: "v", scope: !4475, file: !785, line: 691, type: !780)
!4475 = distinct !DILexicalBlock(scope: !4476, file: !785, line: 690, column: 36)
!4476 = distinct !DILexicalBlock(scope: !4473, file: !785, line: 690, column: 14)
!4477 = !DILocalVariable(name: "v", scope: !4478, file: !785, line: 698, type: !107)
!4478 = distinct !DILexicalBlock(scope: !4479, file: !785, line: 697, column: 41)
!4479 = distinct !DILexicalBlock(scope: !4476, file: !785, line: 697, column: 14)
!4480 = !DILocalVariable(name: "pos", scope: !4481, file: !785, line: 762, type: !164)
!4481 = distinct !DILexicalBlock(scope: !4482, file: !785, line: 757, column: 31)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !785, line: 757, column: 3)
!4483 = distinct !DILexicalBlock(scope: !4484, file: !785, line: 757, column: 3)
!4484 = distinct !DILexicalBlock(scope: !4485, file: !785, line: 756, column: 16)
!4485 = distinct !DILexicalBlock(scope: !4409, file: !785, line: 756, column: 6)
!4486 = !DILabel(scope: !4465, name: "process_string", file: !785, line: 615)
!4487 = !DILocation(line: 0, scope: !4409)
!4488 = !DILocation(line: 251, column: 2, scope: !4409)
!4489 = !DILocation(line: 251, column: 10, scope: !4409)
!4490 = !DILocation(line: 252, column: 2, scope: !4409)
!4491 = !DILocation(line: 252, column: 10, scope: !4409)
!4492 = !DILocation(line: 263, column: 29, scope: !4409)
!4493 = !DILocation(line: 263, column: 21, scope: !4409)
!4494 = !DILocation(line: 268, column: 21, scope: !4409)
!4495 = !DILocation(line: 268, column: 19, scope: !4409)
!4496 = !DILocation(line: 273, column: 6, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4409, file: !785, line: 273, column: 6)
!4498 = !DILocation(line: 273, column: 26, scope: !4497)
!4499 = !DILocation(line: 273, column: 6, scope: !4409)
!4500 = !DILocation(line: 297, column: 6, scope: !4409)
!4501 = !DILocation(line: 305, column: 11, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4409, file: !785, line: 305, column: 6)
!4503 = !DILocation(line: 305, column: 6, scope: !4409)
!4504 = !DILocation(line: 327, column: 19, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4409, file: !785, line: 327, column: 6)
!4506 = !DILocation(line: 327, column: 22, scope: !4505)
!4507 = !DILocation(line: 327, column: 33, scope: !4505)
!4508 = !DILocation(line: 327, column: 50, scope: !4505)
!4509 = !DILocation(line: 327, column: 6, scope: !4409)
!4510 = !DILocation(line: 338, column: 9, scope: !4409)
!4511 = !DILocation(line: 341, column: 2, scope: !4409)
!4512 = !DILocation(line: 472, column: 8, scope: !4458)
!4513 = !DILocation(line: 473, column: 14, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !785, line: 473, column: 9)
!4515 = distinct !DILexicalBlock(scope: !4516, file: !785, line: 472, column: 18)
!4516 = distinct !DILexicalBlock(scope: !4458, file: !785, line: 472, column: 8)
!4517 = !DILocation(line: 473, column: 9, scope: !4515)
!4518 = !DILocation(line: 479, column: 5, scope: !4515)
!4519 = !DILocation(line: 468, column: 9, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4458, file: !785, line: 468, column: 8)
!4521 = !DILocation(line: 468, column: 8, scope: !4520)
!4522 = !DILocation(line: 468, column: 15, scope: !4520)
!4523 = !DILocation(line: 468, column: 8, scope: !4458)
!4524 = distinct !{!4524, !4525, !4526}
!4525 = !DILocation(line: 343, column: 2, scope: !4409)
!4526 = !DILocation(line: 712, column: 2, scope: !4409)
!4527 = !DILocation(line: 481, column: 4, scope: !4458)
!4528 = !DILocation(line: 484, column: 12, scope: !4457)
!4529 = !DILocation(line: 485, column: 5, scope: !4457)
!4530 = !DILocation(line: 505, column: 5, scope: !4457)
!4531 = !DILocation(line: 518, column: 5, scope: !4457)
!4532 = !DILocation(line: 523, column: 5, scope: !4457)
!4533 = !DILocation(line: 532, column: 9, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4457, file: !785, line: 532, column: 9)
!4535 = !DILocation(line: 532, column: 17, scope: !4534)
!4536 = !DILocation(line: 532, column: 9, scope: !4457)
!4537 = !DILocation(line: 533, column: 10, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !785, line: 533, column: 10)
!4539 = distinct !DILexicalBlock(scope: !4534, file: !785, line: 532, column: 25)
!4540 = !DILocation(line: 533, column: 18, scope: !4538)
!4541 = !DILocation(line: 0, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4456, file: !785, line: 569, column: 9)
!4543 = !DILocation(line: 0, scope: !4456)
!4544 = !DILocation(line: 579, column: 20, scope: !4456)
!4545 = !DILocation(line: 579, column: 11, scope: !4456)
!4546 = !DILocation(line: 580, column: 9, scope: !4456)
!4547 = !DILocation(line: 582, column: 21, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !785, line: 582, column: 10)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !785, line: 580, column: 23)
!4550 = distinct !DILexicalBlock(scope: !4456, file: !785, line: 580, column: 9)
!4551 = !DILocation(line: 582, column: 28, scope: !4548)
!4552 = !DILocation(line: 582, column: 10, scope: !4549)
!4553 = !DILocation(line: 0, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !785, line: 587, column: 17)
!4555 = distinct !DILexicalBlock(scope: !4549, file: !785, line: 585, column: 10)
!4556 = !DILocation(line: 593, column: 9, scope: !4456)
!4557 = !DILocation(line: 600, column: 5, scope: !4457)
!4558 = !DILocation(line: 605, column: 18, scope: !4459)
!4559 = !DILocation(line: 605, column: 9, scope: !4459)
!4560 = !DILocation(line: 608, column: 20, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4459, file: !785, line: 608, column: 7)
!4562 = !DILocation(line: 608, column: 23, scope: !4561)
!4563 = !DILocation(line: 608, column: 34, scope: !4561)
!4564 = !DILocation(line: 608, column: 41, scope: !4561)
!4565 = !DILocation(line: 608, column: 7, scope: !4459)
!4566 = !DILocation(line: 613, column: 7, scope: !4459)
!4567 = !DILocation(line: 614, column: 8, scope: !4465)
!4568 = !DILocation(line: 614, column: 4, scope: !4465)
!4569 = !DILocation(line: 256, column: 6, scope: !4409)
!4570 = !DILocation(line: 254, column: 15, scope: !4409)
!4571 = !DILocation(line: 320, column: 7, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4502, file: !785, line: 305, column: 20)
!4573 = !DILocation(line: 615, column: 1, scope: !4465)
!4574 = !DILocation(line: 616, column: 8, scope: !4465)
!4575 = !DILocation(line: 617, column: 5, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4577, file: !785, line: 616, column: 22)
!4577 = distinct !DILexicalBlock(scope: !4465, file: !785, line: 616, column: 8)
!4578 = !DILocation(line: 617, column: 25, scope: !4576)
!4579 = !DILocation(line: 618, column: 4, scope: !4576)
!4580 = !DILocation(line: 620, column: 26, scope: !4465)
!4581 = !DILocation(line: 620, column: 29, scope: !4465)
!4582 = !DILocation(line: 620, column: 17, scope: !4465)
!4583 = !DILocation(line: 620, column: 43, scope: !4465)
!4584 = !DILocation(line: 0, scope: !4465)
!4585 = !DILocation(line: 623, column: 14, scope: !4470)
!4586 = !DILocation(line: 626, column: 26, scope: !4469)
!4587 = !DILocation(line: 626, column: 37, scope: !4469)
!4588 = !DILocation(line: 0, scope: !4469)
!4589 = !DILocation(line: 634, column: 15, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4469, file: !785, line: 634, column: 9)
!4591 = !DILocation(line: 635, column: 6, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4593, file: !785, line: 635, column: 6)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !785, line: 635, column: 6)
!4594 = distinct !DILexicalBlock(scope: !4595, file: !785, line: 635, column: 6)
!4595 = distinct !DILexicalBlock(scope: !4590, file: !785, line: 634, column: 44)
!4596 = !DILocation(line: 639, column: 15, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4469, file: !785, line: 639, column: 9)
!4598 = !DILocation(line: 639, column: 9, scope: !4469)
!4599 = !DILocation(line: 640, column: 6, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !785, line: 640, column: 6)
!4601 = distinct !DILexicalBlock(scope: !4602, file: !785, line: 640, column: 6)
!4602 = distinct !DILexicalBlock(scope: !4603, file: !785, line: 640, column: 6)
!4603 = distinct !DILexicalBlock(scope: !4597, file: !785, line: 639, column: 43)
!4604 = !DILocation(line: 644, column: 9, scope: !4469)
!4605 = !DILocation(line: 649, column: 27, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4607, file: !785, line: 644, column: 23)
!4607 = distinct !DILexicalBlock(scope: !4469, file: !785, line: 644, column: 9)
!4608 = !DILocation(line: 649, column: 6, scope: !4606)
!4609 = !DILocation(line: 649, column: 25, scope: !4606)
!4610 = !DILocation(line: 650, column: 27, scope: !4606)
!4611 = !DILocation(line: 650, column: 6, scope: !4606)
!4612 = !DILocation(line: 650, column: 25, scope: !4606)
!4613 = !DILocation(line: 651, column: 10, scope: !4606)
!4614 = !DILocation(line: 653, column: 26, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !785, line: 651, column: 17)
!4616 = distinct !DILexicalBlock(scope: !4606, file: !785, line: 651, column: 10)
!4617 = !DILocation(line: 654, column: 15, scope: !4615)
!4618 = !DILocation(line: 655, column: 6, scope: !4615)
!4619 = !DILocation(line: 656, column: 15, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4616, file: !785, line: 655, column: 13)
!4621 = !DILocation(line: 658, column: 16, scope: !4607)
!4622 = !DILocation(line: 663, column: 10, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !785, line: 658, column: 23)
!4624 = distinct !DILexicalBlock(scope: !4607, file: !785, line: 658, column: 16)
!4625 = !DILocation(line: 664, column: 5, scope: !4623)
!4626 = !DILocation(line: 664, column: 16, scope: !4624)
!4627 = !DILocation(line: 669, column: 10, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !785, line: 664, column: 28)
!4629 = distinct !DILexicalBlock(scope: !4624, file: !785, line: 664, column: 16)
!4630 = !DILocation(line: 670, column: 5, scope: !4628)
!4631 = !DILocation(line: 675, column: 13, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4629, file: !785, line: 670, column: 12)
!4633 = !DILocation(line: 675, column: 27, scope: !4632)
!4634 = !DILocation(line: 675, column: 10, scope: !4632)
!4635 = !DILocation(line: 678, column: 10, scope: !4469)
!4636 = !DILocation(line: 680, column: 8, scope: !4465)
!4637 = !DILocation(line: 683, column: 14, scope: !4466)
!4638 = !DILocation(line: 684, column: 12, scope: !4472)
!4639 = !DILocation(line: 0, scope: !4472)
!4640 = !DILocation(line: 686, column: 8, scope: !4472)
!4641 = !DILocation(line: 687, column: 5, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4643, file: !785, line: 686, column: 22)
!4643 = distinct !DILexicalBlock(scope: !4472, file: !785, line: 686, column: 8)
!4644 = !DILocation(line: 687, column: 17, scope: !4642)
!4645 = !DILocation(line: 688, column: 4, scope: !4642)
!4646 = !DILocation(line: 698, column: 18, scope: !4478)
!4647 = !DILocation(line: 0, scope: !4478)
!4648 = !DILocation(line: 700, column: 8, scope: !4478)
!4649 = !DILocation(line: 704, column: 6, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !785, line: 703, column: 12)
!4651 = distinct !DILexicalBlock(scope: !4652, file: !785, line: 701, column: 9)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !785, line: 700, column: 22)
!4653 = distinct !DILexicalBlock(scope: !4478, file: !785, line: 700, column: 8)
!4654 = !DILocation(line: 704, column: 24, scope: !4650)
!4655 = !DILocation(line: 706, column: 4, scope: !4652)
!4656 = !DILocation(line: 709, column: 4, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !785, line: 709, column: 4)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !785, line: 709, column: 4)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !785, line: 709, column: 4)
!4660 = distinct !DILexicalBlock(scope: !4479, file: !785, line: 708, column: 10)
!4661 = !DILocation(line: 0, scope: !4473)
!4662 = !DILocation(line: 0, scope: !4459)
!4663 = !DILocation(line: 720, column: 6, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4409, file: !785, line: 720, column: 6)
!4665 = !DILocation(line: 720, column: 17, scope: !4664)
!4666 = !DILocation(line: 720, column: 31, scope: !4664)
!4667 = !DILocation(line: 720, column: 6, scope: !4409)
!4668 = !DILocation(line: 721, column: 3, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !785, line: 721, column: 3)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !785, line: 721, column: 3)
!4671 = distinct !DILexicalBlock(scope: !4672, file: !785, line: 721, column: 3)
!4672 = distinct !DILexicalBlock(scope: !4664, file: !785, line: 720, column: 38)
!4673 = !DILocation(line: 729, column: 6, scope: !4409)
!4674 = !DILocation(line: 730, column: 21, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !785, line: 729, column: 20)
!4676 = distinct !DILexicalBlock(scope: !4409, file: !785, line: 729, column: 6)
!4677 = !DILocation(line: 730, column: 27, scope: !4675)
!4678 = !DILocation(line: 730, column: 3, scope: !4675)
!4679 = !DILocation(line: 737, column: 22, scope: !4409)
!4680 = !DILocation(line: 737, column: 20, scope: !4409)
!4681 = !DILocation(line: 0, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4409, file: !785, line: 739, column: 6)
!4683 = !DILocation(line: 745, column: 17, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4682, file: !785, line: 743, column: 9)
!4685 = !DILocation(line: 745, column: 25, scope: !4684)
!4686 = !DILocation(line: 746, column: 17, scope: !4684)
!4687 = !DILocation(line: 746, column: 28, scope: !4684)
!4688 = !DILocation(line: 749, column: 29, scope: !4409)
!4689 = !DILocation(line: 749, column: 16, scope: !4409)
!4690 = !DILocation(line: 749, column: 27, scope: !4409)
!4691 = !DILocation(line: 756, column: 6, scope: !4485)
!4692 = !DILocation(line: 756, column: 6, scope: !4409)
!4693 = !DILocation(line: 757, column: 3, scope: !4483)
!4694 = !DILocation(line: 758, column: 10, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4481, file: !785, line: 758, column: 8)
!4696 = !DILocation(line: 758, column: 25, scope: !4695)
!4697 = !DILocation(line: 758, column: 8, scope: !4481)
!4698 = !DILocation(line: 0, scope: !4481)
!4699 = !DILocation(line: 765, column: 8, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4481, file: !785, line: 765, column: 8)
!4701 = !DILocation(line: 765, column: 19, scope: !4700)
!4702 = !DILocation(line: 765, column: 23, scope: !4700)
!4703 = !DILocation(line: 765, column: 8, scope: !4481)
!4704 = !DILocation(line: 762, column: 33, scope: !4481)
!4705 = !DILocation(line: 769, column: 8, scope: !4481)
!4706 = !DILocation(line: 769, column: 11, scope: !4481)
!4707 = !DILocation(line: 757, column: 27, scope: !4482)
!4708 = !DILocation(line: 757, column: 17, scope: !4482)
!4709 = distinct !{!4709, !4693, !4710}
!4710 = !DILocation(line: 770, column: 3, scope: !4483)
!4711 = !DILocation(line: 774, column: 16, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !785, line: 774, column: 2)
!4713 = distinct !DILexicalBlock(scope: !4409, file: !785, line: 774, column: 2)
!4714 = !DILocation(line: 774, column: 2, scope: !4713)
!4715 = !DILocation(line: 776, column: 16, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4717, file: !785, line: 776, column: 7)
!4717 = distinct !DILexicalBlock(scope: !4712, file: !785, line: 774, column: 30)
!4718 = !DILocation(line: 776, column: 19, scope: !4716)
!4719 = !DILocation(line: 776, column: 34, scope: !4716)
!4720 = !DILocation(line: 776, column: 7, scope: !4717)
!4721 = !DILocation(line: 780, column: 7, scope: !4717)
!4722 = !DILocation(line: 782, column: 13, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4724, file: !785, line: 780, column: 19)
!4724 = distinct !DILexicalBlock(scope: !4717, file: !785, line: 780, column: 7)
!4725 = !DILocation(line: 782, column: 8, scope: !4723)
!4726 = !DILocation(line: 782, column: 11, scope: !4723)
!4727 = !DILocation(line: 783, column: 3, scope: !4723)
!4728 = !DILocation(line: 785, column: 26, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4724, file: !785, line: 783, column: 10)
!4730 = !DILocation(line: 785, column: 41, scope: !4729)
!4731 = !DILocation(line: 785, column: 24, scope: !4729)
!4732 = !DILocation(line: 785, column: 8, scope: !4729)
!4733 = !DILocation(line: 787, column: 52, scope: !4729)
!4734 = !DILocation(line: 789, column: 11, scope: !4729)
!4735 = !DILocation(line: 789, column: 21, scope: !4729)
!4736 = !DILocation(line: 0, scope: !4724)
!4737 = !DILocation(line: 793, column: 7, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4717, file: !785, line: 793, column: 7)
!4739 = !DILocation(line: 793, column: 18, scope: !4738)
!4740 = !DILocation(line: 793, column: 22, scope: !4738)
!4741 = !DILocation(line: 793, column: 29, scope: !4738)
!4742 = !DILocation(line: 793, column: 7, scope: !4717)
!4743 = !DILocation(line: 797, column: 12, scope: !4717)
!4744 = !DILocation(line: 797, column: 7, scope: !4717)
!4745 = !DILocation(line: 797, column: 10, scope: !4717)
!4746 = !DILocation(line: 799, column: 3, scope: !4717)
!4747 = !DILocation(line: 800, column: 7, scope: !4717)
!4748 = !DILocation(line: 801, column: 2, scope: !4717)
!4749 = !DILocation(line: 338, column: 4, scope: !4409)
!4750 = !DILocation(line: 774, column: 26, scope: !4712)
!4751 = distinct !{!4751, !4714, !4752}
!4752 = !DILocation(line: 801, column: 2, scope: !4713)
!4753 = !DILocation(line: 808, column: 9, scope: !4409)
!4754 = !DILocation(line: 808, column: 2, scope: !4409)
!4755 = !DILocation(line: 813, column: 1, scope: !4409)
!4756 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !785, file: !785, line: 33, type: !4757, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4759)
!4757 = !DISubroutineType(types: !4758)
!4758 = !{!119, !336}
!4759 = !{!4760}
!4760 = !DILocalVariable(name: "addr", arg: 1, scope: !4756, file: !785, line: 33, type: !336)
!4761 = !DILocation(line: 0, scope: !4756)
!4762 = !DILocation(line: 41, column: 9, scope: !4756)
!4763 = !DILocation(line: 41, column: 2, scope: !4756)
!4764 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4765, file: !4765, line: 24, type: !4766, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4768)
!4765 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4766 = !DISubroutineType(types: !4767)
!4767 = !{!119, !13}
!4768 = !{!4769}
!4769 = !DILocalVariable(name: "addr", arg: 1, scope: !4764, file: !4765, line: 24, type: !13)
!4770 = !DILocation(line: 0, scope: !4764)
!4771 = !DILocation(line: 49, column: 30, scope: !4764)
!4772 = !DILocation(line: 49, column: 57, scope: !4764)
!4773 = !DILocation(line: 49, column: 2, scope: !4764)
!4774 = distinct !DISubprogram(name: "cbprintf_package", scope: !785, file: !785, line: 815, type: !4775, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4777)
!4775 = !DISubroutineType(types: !4776)
!4776 = !{!103, !102, !153, !108, !336, null}
!4777 = !{!4778, !4779, !4780, !4781, !4782, !4783}
!4778 = !DILocalVariable(name: "packaged", arg: 1, scope: !4774, file: !785, line: 815, type: !102)
!4779 = !DILocalVariable(name: "len", arg: 2, scope: !4774, file: !785, line: 815, type: !153)
!4780 = !DILocalVariable(name: "flags", arg: 3, scope: !4774, file: !785, line: 815, type: !108)
!4781 = !DILocalVariable(name: "format", arg: 4, scope: !4774, file: !785, line: 816, type: !336)
!4782 = !DILocalVariable(name: "ap", scope: !4774, file: !785, line: 818, type: !4412)
!4783 = !DILocalVariable(name: "ret", scope: !4774, file: !785, line: 819, type: !103)
!4784 = !DILocation(line: 0, scope: !4774)
!4785 = !DILocation(line: 818, column: 2, scope: !4774)
!4786 = !DILocation(line: 818, column: 10, scope: !4774)
!4787 = !DILocation(line: 821, column: 2, scope: !4774)
!4788 = !DILocation(line: 822, column: 8, scope: !4774)
!4789 = !DILocation(line: 823, column: 2, scope: !4774)
!4790 = !DILocation(line: 825, column: 1, scope: !4774)
!4791 = !DILocation(line: 824, column: 2, scope: !4774)
!4792 = distinct !DISubprogram(name: "cbpprintf_external", scope: !785, file: !785, line: 827, type: !4793, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4803)
!4793 = !DISubroutineType(types: !4794)
!4794 = !{!103, !4795, !4799, !102, !102}
!4795 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4445, line: 297, baseType: !4796)
!4796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4797, size: 32)
!4797 = !DISubroutineType(types: !4798)
!4798 = !{!103, null}
!4799 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4445, line: 328, baseType: !4800)
!4800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4801, size: 32)
!4801 = !DISubroutineType(types: !4802)
!4802 = !{!103, !4795, !102, !336, !4412}
!4803 = !{!4804, !4805, !4806, !4807, !4808, !4809, !4815, !4816, !4817, !4818, !4819, !4820, !4821, !4822}
!4804 = !DILocalVariable(name: "out", arg: 1, scope: !4792, file: !785, line: 827, type: !4795)
!4805 = !DILocalVariable(name: "formatter", arg: 2, scope: !4792, file: !785, line: 828, type: !4799)
!4806 = !DILocalVariable(name: "ctx", arg: 3, scope: !4792, file: !785, line: 829, type: !102)
!4807 = !DILocalVariable(name: "packaged", arg: 4, scope: !4792, file: !785, line: 829, type: !102)
!4808 = !DILocalVariable(name: "buf", scope: !4792, file: !785, line: 831, type: !783)
!4809 = !DILocalVariable(name: "hdr", scope: !4792, file: !785, line: 832, type: !4810)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 32)
!4811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4445, line: 96, size: 64, elements: !4812)
!4812 = !{!4813, !4814}
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4811, file: !4445, line: 98, baseType: !4444, size: 32)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4811, file: !4445, line: 101, baseType: !157, size: 32, offset: 32)
!4815 = !DILocalVariable(name: "s", scope: !4792, file: !785, line: 833, type: !157)
!4816 = !DILocalVariable(name: "ps", scope: !4792, file: !785, line: 833, type: !782)
!4817 = !DILocalVariable(name: "i", scope: !4792, file: !785, line: 834, type: !32)
!4818 = !DILocalVariable(name: "args_size", scope: !4792, file: !785, line: 834, type: !32)
!4819 = !DILocalVariable(name: "s_nbr", scope: !4792, file: !785, line: 834, type: !32)
!4820 = !DILocalVariable(name: "ros_nbr", scope: !4792, file: !785, line: 834, type: !32)
!4821 = !DILocalVariable(name: "rws_nbr", scope: !4792, file: !785, line: 834, type: !32)
!4822 = !DILocalVariable(name: "s_idx", scope: !4792, file: !785, line: 834, type: !32)
!4823 = !DILocation(line: 0, scope: !4792)
!4824 = !DILocation(line: 836, column: 10, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4792, file: !785, line: 836, column: 6)
!4826 = !DILocation(line: 836, column: 6, scope: !4792)
!4827 = !DILocation(line: 842, column: 28, scope: !4792)
!4828 = !DILocation(line: 842, column: 14, scope: !4792)
!4829 = !DILocation(line: 852, column: 16, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4831, file: !785, line: 852, column: 2)
!4831 = distinct !DILexicalBlock(scope: !4792, file: !785, line: 852, column: 2)
!4832 = !DILocation(line: 852, column: 2, scope: !4831)
!4833 = !DILocation(line: 841, column: 28, scope: !4792)
!4834 = !DILocation(line: 841, column: 14, scope: !4792)
!4835 = !DILocation(line: 841, column: 32, scope: !4792)
!4836 = !DILocation(line: 847, column: 19, scope: !4792)
!4837 = !DILocation(line: 843, column: 28, scope: !4792)
!4838 = !DILocation(line: 843, column: 14, scope: !4792)
!4839 = !DILocation(line: 847, column: 31, scope: !4792)
!4840 = !DILocation(line: 844, column: 28, scope: !4792)
!4841 = !DILocation(line: 844, column: 14, scope: !4792)
!4842 = !DILocation(line: 847, column: 45, scope: !4792)
!4843 = !DILocation(line: 847, column: 41, scope: !4792)
!4844 = !DILocation(line: 854, column: 24, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4830, file: !785, line: 852, column: 30)
!4846 = !DILocation(line: 854, column: 11, scope: !4845)
!4847 = !DILocation(line: 855, column: 30, scope: !4845)
!4848 = !DILocation(line: 855, column: 22, scope: !4845)
!4849 = !DILocation(line: 855, column: 8, scope: !4845)
!4850 = !DILocation(line: 857, column: 7, scope: !4845)
!4851 = !DILocation(line: 859, column: 8, scope: !4845)
!4852 = !DILocation(line: 859, column: 18, scope: !4845)
!4853 = !DILocation(line: 859, column: 5, scope: !4845)
!4854 = !DILocation(line: 852, column: 26, scope: !4830)
!4855 = distinct !{!4855, !4832, !4856}
!4856 = !DILocation(line: 860, column: 2, scope: !4831)
!4857 = !DILocation(line: 863, column: 6, scope: !4792)
!4858 = !DILocation(line: 866, column: 56, scope: !4792)
!4859 = !DILocation(line: 866, column: 9, scope: !4792)
!4860 = !DILocation(line: 866, column: 2, scope: !4792)
!4861 = !DILocation(line: 867, column: 1, scope: !4792)
!4862 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !785, file: !785, line: 179, type: !4863, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4865)
!4863 = !DISubroutineType(types: !4864)
!4864 = !{!103, !4795, !4799, !102, !336, !102}
!4865 = !{!4866, !4867, !4868, !4869, !4870, !4871}
!4866 = !DILocalVariable(name: "out", arg: 1, scope: !4862, file: !785, line: 179, type: !4795)
!4867 = !DILocalVariable(name: "formatter", arg: 2, scope: !4862, file: !785, line: 180, type: !4799)
!4868 = !DILocalVariable(name: "ctx", arg: 3, scope: !4862, file: !785, line: 181, type: !102)
!4869 = !DILocalVariable(name: "fmt", arg: 4, scope: !4862, file: !785, line: 182, type: !336)
!4870 = !DILocalVariable(name: "buf", arg: 5, scope: !4862, file: !785, line: 182, type: !102)
!4871 = !DILocalVariable(name: "u", scope: !4862, file: !785, line: 187, type: !4872)
!4872 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4862, file: !785, line: 184, size: 32, elements: !4873)
!4873 = !{!4874, !4875}
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4872, file: !785, line: 185, baseType: !4412, size: 32)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4872, file: !785, line: 186, baseType: !102, size: 32)
!4876 = !DILocation(line: 0, scope: !4862)
!4877 = !DILocation(line: 191, column: 9, scope: !4862)
!4878 = !DILocation(line: 191, column: 2, scope: !4862)
!4879 = distinct !DISubprogram(name: "is_ptr", scope: !785, file: !785, line: 881, type: !4880, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4882)
!4880 = !DISubroutineType(types: !4881)
!4881 = !{!119, !336, !103}
!4882 = !{!4883, !4884, !4885, !4886, !4887}
!4883 = !DILocalVariable(name: "fmt", arg: 1, scope: !4879, file: !785, line: 881, type: !336)
!4884 = !DILocalVariable(name: "n", arg: 2, scope: !4879, file: !785, line: 881, type: !103)
!4885 = !DILocalVariable(name: "c", scope: !4879, file: !785, line: 883, type: !158)
!4886 = !DILocalVariable(name: "mod", scope: !4879, file: !785, line: 884, type: !119)
!4887 = !DILocalVariable(name: "cnt", scope: !4879, file: !785, line: 885, type: !103)
!4888 = !DILocation(line: 0, scope: !4879)
!4889 = !DILocation(line: 887, column: 14, scope: !4879)
!4890 = !DILocation(line: 887, column: 22, scope: !4879)
!4891 = !DILocation(line: 887, column: 2, scope: !4879)
!4892 = !DILocation(line: 887, column: 18, scope: !4879)
!4893 = !DILocation(line: 888, column: 7, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4879, file: !785, line: 887, column: 31)
!4895 = !DILocation(line: 889, column: 12, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4897, file: !785, line: 889, column: 8)
!4897 = distinct !DILexicalBlock(scope: !4898, file: !785, line: 888, column: 12)
!4898 = distinct !DILexicalBlock(scope: !4894, file: !785, line: 888, column: 7)
!4899 = !DILocation(line: 889, column: 8, scope: !4897)
!4900 = !DILocation(line: 890, column: 11, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !785, line: 890, column: 9)
!4902 = distinct !DILexicalBlock(scope: !4896, file: !785, line: 889, column: 18)
!4903 = !DILocation(line: 890, column: 9, scope: !4902)
!4904 = !DILocation(line: 892, column: 16, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4901, file: !785, line: 892, column: 16)
!4906 = !DILocation(line: 892, column: 16, scope: !4901)
!4907 = !DILocation(line: 895, column: 15, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4896, file: !785, line: 895, column: 15)
!4909 = !DILocation(line: 895, column: 15, scope: !4896)
!4910 = !DILocation(line: 900, column: 9, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4894, file: !785, line: 900, column: 7)
!4912 = !DILocation(line: 900, column: 7, scope: !4894)
!4913 = distinct !{!4913, !4891, !4914}
!4914 = !DILocation(line: 903, column: 2, scope: !4879)
!4915 = !DILocation(line: 906, column: 1, scope: !4879)
!4916 = distinct !DISubprogram(name: "is_fmt_spec", scope: !785, file: !785, line: 873, type: !4917, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4919)
!4917 = !DISubroutineType(types: !4918)
!4918 = !{!119, !158}
!4919 = !{!4920}
!4920 = !DILocalVariable(name: "c", arg: 1, scope: !4916, file: !785, line: 873, type: !158)
!4921 = !DILocation(line: 0, scope: !4916)
!4922 = !DILocation(line: 875, column: 19, scope: !4916)
!4923 = !DILocation(line: 875, column: 2, scope: !4916)
!4924 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !785, file: !785, line: 908, type: !4925, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4931)
!4925 = !DISubroutineType(types: !4926)
!4926 = !{!103, !102, !153, !4927, !102, !108, !3445, !153}
!4927 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4445, line: 308, baseType: !4928)
!4928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4929, size: 32)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{!103, !13, !153, !102}
!4931 = !{!4932, !4933, !4934, !4935, !4936, !4937, !4938, !4939, !4940, !4941, !4942, !4943, !4944, !4945, !4946, !4947, !4949, !4950, !4951, !4952, !4953, !4959, !4962, !4963, !4964, !4966, !4969, !4970, !4971, !4972, !4973, !4974, !4975, !4976, !4977, !4978, !4979, !4980, !4982, !4985, !4986, !4987, !4988, !4989, !4990, !4992, !4995, !4996, !4997}
!4932 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4924, file: !785, line: 908, type: !102)
!4933 = !DILocalVariable(name: "in_len", arg: 2, scope: !4924, file: !785, line: 909, type: !153)
!4934 = !DILocalVariable(name: "cb", arg: 3, scope: !4924, file: !785, line: 910, type: !4927)
!4935 = !DILocalVariable(name: "ctx", arg: 4, scope: !4924, file: !785, line: 911, type: !102)
!4936 = !DILocalVariable(name: "flags", arg: 5, scope: !4924, file: !785, line: 912, type: !108)
!4937 = !DILocalVariable(name: "strl", arg: 6, scope: !4924, file: !785, line: 913, type: !3445)
!4938 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4924, file: !785, line: 914, type: !153)
!4939 = !DILocalVariable(name: "buf", scope: !4924, file: !785, line: 918, type: !783)
!4940 = !DILocalVariable(name: "buf32", scope: !4924, file: !785, line: 919, type: !1793)
!4941 = !DILocalVariable(name: "args_size", scope: !4924, file: !785, line: 920, type: !32)
!4942 = !DILocalVariable(name: "ros_nbr", scope: !4924, file: !785, line: 920, type: !32)
!4943 = !DILocalVariable(name: "rws_nbr", scope: !4924, file: !785, line: 920, type: !32)
!4944 = !DILocalVariable(name: "fmt_present", scope: !4924, file: !785, line: 921, type: !119)
!4945 = !DILocalVariable(name: "rw_cpy", scope: !4924, file: !785, line: 922, type: !119)
!4946 = !DILocalVariable(name: "ro_cpy", scope: !4924, file: !785, line: 923, type: !119)
!4947 = !DILocalVariable(name: "in_desc", scope: !4924, file: !785, line: 924, type: !4948)
!4948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 32)
!4949 = !DILocalVariable(name: "out_len", scope: !4924, file: !785, line: 960, type: !103)
!4950 = !DILocalVariable(name: "fmt", scope: !4924, file: !785, line: 965, type: !336)
!4951 = !DILocalVariable(name: "str_pos", scope: !4924, file: !785, line: 966, type: !783)
!4952 = !DILocalVariable(name: "strl_cnt", scope: !4924, file: !785, line: 967, type: !153)
!4953 = !DILocalVariable(name: "i", scope: !4954, file: !785, line: 973, type: !103)
!4954 = distinct !DILexicalBlock(scope: !4955, file: !785, line: 973, column: 4)
!4955 = distinct !DILexicalBlock(scope: !4956, file: !785, line: 972, column: 15)
!4956 = distinct !DILexicalBlock(scope: !4957, file: !785, line: 972, column: 7)
!4957 = distinct !DILexicalBlock(scope: !4958, file: !785, line: 970, column: 18)
!4958 = distinct !DILexicalBlock(scope: !4924, file: !785, line: 970, column: 6)
!4959 = !DILocalVariable(name: "str", scope: !4960, file: !785, line: 974, type: !336)
!4960 = distinct !DILexicalBlock(scope: !4961, file: !785, line: 973, column: 38)
!4961 = distinct !DILexicalBlock(scope: !4954, file: !785, line: 973, column: 4)
!4962 = !DILocalVariable(name: "len", scope: !4960, file: !785, line: 975, type: !103)
!4963 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4957, file: !785, line: 990, type: !119)
!4964 = !DILocalVariable(name: "i", scope: !4965, file: !785, line: 995, type: !103)
!4965 = distinct !DILexicalBlock(scope: !4957, file: !785, line: 995, column: 3)
!4966 = !DILocalVariable(name: "arg_idx", scope: !4967, file: !785, line: 996, type: !164)
!4967 = distinct !DILexicalBlock(scope: !4968, file: !785, line: 995, column: 37)
!4968 = distinct !DILexicalBlock(scope: !4965, file: !785, line: 995, column: 3)
!4969 = !DILocalVariable(name: "arg_pos", scope: !4967, file: !785, line: 997, type: !164)
!4970 = !DILocalVariable(name: "str", scope: !4967, file: !785, line: 998, type: !336)
!4971 = !DILocalVariable(name: "is_ro", scope: !4967, file: !785, line: 999, type: !119)
!4972 = !DILocalVariable(name: "len", scope: !4967, file: !785, line: 1000, type: !103)
!4973 = !DILocalVariable(name: "out_desc", scope: !4924, file: !785, line: 1038, type: !4448)
!4974 = !DILocalVariable(name: "cpy_str_pos", scope: !4924, file: !785, line: 1040, type: !4430)
!4975 = !DILocalVariable(name: "keep_str_pos", scope: !4924, file: !785, line: 1042, type: !4430)
!4976 = !DILocalVariable(name: "scpy_cnt", scope: !4924, file: !785, line: 1043, type: !164)
!4977 = !DILocalVariable(name: "keep_cnt", scope: !4924, file: !785, line: 1044, type: !164)
!4978 = !DILocalVariable(name: "dst", scope: !4924, file: !785, line: 1045, type: !783)
!4979 = !DILocalVariable(name: "rv", scope: !4924, file: !785, line: 1046, type: !103)
!4980 = !DILocalVariable(name: "i", scope: !4981, file: !785, line: 1074, type: !103)
!4981 = distinct !DILexicalBlock(scope: !4924, file: !785, line: 1074, column: 2)
!4982 = !DILocalVariable(name: "arg_idx", scope: !4983, file: !785, line: 1075, type: !164)
!4983 = distinct !DILexicalBlock(scope: !4984, file: !785, line: 1074, column: 36)
!4984 = distinct !DILexicalBlock(scope: !4981, file: !785, line: 1074, column: 2)
!4985 = !DILocalVariable(name: "arg_pos", scope: !4983, file: !785, line: 1076, type: !164)
!4986 = !DILocalVariable(name: "str", scope: !4983, file: !785, line: 1077, type: !336)
!4987 = !DILocalVariable(name: "is_ro", scope: !4983, file: !785, line: 1078, type: !119)
!4988 = !DILocalVariable(name: "in_desc_backup", scope: !4924, file: !785, line: 1114, type: !4448)
!4989 = !DILocalVariable(name: "strs_len", scope: !4924, file: !785, line: 1134, type: !153)
!4990 = !DILocalVariable(name: "i", scope: !4991, file: !785, line: 1143, type: !103)
!4991 = distinct !DILexicalBlock(scope: !4924, file: !785, line: 1143, column: 2)
!4992 = !DILocalVariable(name: "loc", scope: !4993, file: !785, line: 1144, type: !164)
!4993 = distinct !DILexicalBlock(scope: !4994, file: !785, line: 1143, column: 37)
!4994 = distinct !DILexicalBlock(scope: !4991, file: !785, line: 1143, column: 2)
!4995 = !DILocalVariable(name: "str", scope: !4993, file: !785, line: 1145, type: !336)
!4996 = !DILocalVariable(name: "str_len", scope: !4993, file: !785, line: 1146, type: !177)
!4997 = !DILabel(scope: !4998, name: "calculate_string_length", file: !785, line: 1021)
!4998 = distinct !DILexicalBlock(scope: !4999, file: !785, line: 1020, column: 56)
!4999 = distinct !DILexicalBlock(scope: !5000, file: !785, line: 1020, column: 15)
!5000 = distinct !DILexicalBlock(scope: !4967, file: !785, line: 1014, column: 8)
!5001 = !DILocation(line: 0, scope: !4924)
!5002 = !DILocation(line: 916, column: 2, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !5004, file: !785, line: 916, column: 2)
!5004 = distinct !DILexicalBlock(scope: !4924, file: !785, line: 916, column: 2)
!5005 = !DILocation(line: 916, column: 2, scope: !5004)
!5006 = !DILocation(line: 916, column: 2, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5003, file: !785, line: 916, column: 2)
!5008 = !DILocation(line: 919, column: 20, scope: !4924)
!5009 = !DILocation(line: 921, column: 27, scope: !4924)
!5010 = !DILocation(line: 921, column: 21, scope: !4924)
!5011 = !DILocation(line: 926, column: 18, scope: !4924)
!5012 = !DILocation(line: 926, column: 11, scope: !4924)
!5013 = !DILocation(line: 926, column: 34, scope: !4924)
!5014 = !DILocation(line: 931, column: 21, scope: !4924)
!5015 = !DILocation(line: 931, column: 12, scope: !4924)
!5016 = !DILocation(line: 932, column: 11, scope: !4924)
!5017 = !DILocation(line: 932, column: 19, scope: !4924)
!5018 = !DILocation(line: 938, column: 21, scope: !4924)
!5019 = !DILocation(line: 938, column: 12, scope: !4924)
!5020 = !DILocation(line: 939, column: 19, scope: !4924)
!5021 = !DILocation(line: 939, column: 23, scope: !4924)
!5022 = !DILocation(line: 946, column: 14, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4924, file: !785, line: 946, column: 6)
!5024 = !DILocation(line: 947, column: 7, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5026, file: !785, line: 947, column: 7)
!5026 = distinct !DILexicalBlock(scope: !5023, file: !785, line: 946, column: 26)
!5027 = !DILocation(line: 947, column: 7, scope: !5026)
!5028 = !DILocation(line: 948, column: 4, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5025, file: !785, line: 947, column: 11)
!5030 = !DILocation(line: 949, column: 3, scope: !5029)
!5031 = !DILocation(line: 958, column: 23, scope: !4924)
!5032 = !DILocation(line: 958, column: 14, scope: !4924)
!5033 = !DILocation(line: 958, column: 27, scope: !4924)
!5034 = !DILocation(line: 965, column: 41, scope: !4924)
!5035 = !DILocation(line: 965, column: 20, scope: !4924)
!5036 = !DILocation(line: 966, column: 22, scope: !4924)
!5037 = !DILocation(line: 970, column: 9, scope: !4958)
!5038 = !DILocation(line: 970, column: 6, scope: !4924)
!5039 = !DILocation(line: 972, column: 7, scope: !4957)
!5040 = !DILocation(line: 0, scope: !4954)
!5041 = !DILocation(line: 973, column: 4, scope: !4954)
!5042 = !DILocation(line: 974, column: 46, scope: !4960)
!5043 = !DILocation(line: 974, column: 40, scope: !4960)
!5044 = !DILocation(line: 974, column: 23, scope: !4960)
!5045 = !DILocation(line: 0, scope: !4960)
!5046 = !DILocation(line: 975, column: 15, scope: !4960)
!5047 = !DILocation(line: 978, column: 14, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !4960, file: !785, line: 978, column: 9)
!5049 = !DILocation(line: 979, column: 25, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5048, file: !785, line: 978, column: 38)
!5051 = !DILocation(line: 979, column: 19, scope: !5050)
!5052 = !DILocation(line: 979, column: 6, scope: !5050)
!5053 = !DILocation(line: 979, column: 23, scope: !5050)
!5054 = !DILocation(line: 980, column: 5, scope: !5050)
!5055 = !DILocation(line: 981, column: 13, scope: !4960)
!5056 = !DILocation(line: 982, column: 12, scope: !4960)
!5057 = !DILocation(line: 973, column: 34, scope: !4961)
!5058 = !DILocation(line: 973, column: 22, scope: !4961)
!5059 = distinct !{!5059, !5041, !5060}
!5060 = !DILocation(line: 983, column: 4, scope: !4954)
!5061 = !DILocation(line: 985, column: 16, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5063, file: !785, line: 985, column: 8)
!5063 = distinct !DILexicalBlock(scope: !4956, file: !785, line: 984, column: 10)
!5064 = !DILocation(line: 967, column: 9, scope: !4924)
!5065 = !DILocation(line: 971, column: 11, scope: !4957)
!5066 = !DILocation(line: 0, scope: !4957)
!5067 = !DILocation(line: 0, scope: !4965)
!5068 = !DILocation(line: 995, column: 21, scope: !4968)
!5069 = !DILocation(line: 995, column: 3, scope: !4965)
!5070 = !DILocation(line: 990, column: 34, scope: !4957)
!5071 = !DILocation(line: 990, column: 26, scope: !4957)
!5072 = !DILocation(line: 996, column: 30, scope: !4967)
!5073 = !DILocation(line: 0, scope: !4967)
!5074 = !DILocation(line: 997, column: 30, scope: !4967)
!5075 = !DILocation(line: 997, column: 22, scope: !4967)
!5076 = !DILocation(line: 998, column: 39, scope: !4967)
!5077 = !DILocation(line: 998, column: 22, scope: !4967)
!5078 = !DILocation(line: 999, column: 17, scope: !4967)
!5079 = !DILocation(line: 1002, column: 20, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !4967, file: !785, line: 1002, column: 8)
!5081 = !DILocation(line: 996, column: 22, scope: !4967)
!5082 = !DILocation(line: 1002, column: 35, scope: !5080)
!5083 = !DILocation(line: 1002, column: 23, scope: !5080)
!5084 = !DILocation(line: 1002, column: 8, scope: !4967)
!5085 = !DILocation(line: 1003, column: 5, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5087, file: !785, line: 1003, column: 5)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !785, line: 1003, column: 5)
!5088 = distinct !DILexicalBlock(scope: !5089, file: !785, line: 1003, column: 5)
!5089 = distinct !DILexicalBlock(scope: !5090, file: !785, line: 1003, column: 5)
!5090 = distinct !DILexicalBlock(scope: !5080, file: !785, line: 1002, column: 45)
!5091 = !DILocation(line: 1010, column: 13, scope: !5090)
!5092 = !DILocation(line: 1011, column: 5, scope: !5090)
!5093 = !DILocation(line: 1014, column: 8, scope: !4967)
!5094 = !DILocation(line: 1015, column: 9, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5000, file: !785, line: 1014, column: 15)
!5096 = !DILocation(line: 1018, column: 14, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5098, file: !785, line: 1017, column: 12)
!5098 = distinct !DILexicalBlock(scope: !5095, file: !785, line: 1015, column: 9)
!5099 = !DILocation(line: 1020, column: 4, scope: !5095)
!5100 = !DILocation(line: 1020, column: 15, scope: !5000)
!5101 = !DILocation(line: 1021, column: 1, scope: !4998)
!5102 = !DILocation(line: 1022, column: 11, scope: !4998)
!5103 = !DILocation(line: 1025, column: 14, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !4998, file: !785, line: 1025, column: 9)
!5105 = !DILocation(line: 1026, column: 25, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5104, file: !785, line: 1025, column: 38)
!5107 = !DILocation(line: 1026, column: 19, scope: !5106)
!5108 = !DILocation(line: 1026, column: 6, scope: !5106)
!5109 = !DILocation(line: 1026, column: 23, scope: !5106)
!5110 = !DILocation(line: 1027, column: 5, scope: !5106)
!5111 = !DILocation(line: 1031, column: 21, scope: !4998)
!5112 = !DILocation(line: 1031, column: 13, scope: !4998)
!5113 = !DILocation(line: 1032, column: 4, scope: !4998)
!5114 = !DILocation(line: 995, column: 33, scope: !4968)
!5115 = distinct !{!5115, !5069, !5116}
!5116 = !DILocation(line: 1033, column: 3, scope: !4965)
!5117 = !DILocation(line: 1040, column: 10, scope: !4924)
!5118 = !DILocation(line: 1042, column: 10, scope: !4924)
!5119 = !DILocation(line: 1052, column: 6, scope: !4924)
!5120 = !DILocation(line: 1055, column: 9, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5122, file: !785, line: 1052, column: 14)
!5122 = distinct !DILexicalBlock(scope: !4924, file: !785, line: 1052, column: 6)
!5123 = !DILocation(line: 1056, column: 2, scope: !5121)
!5124 = !DILocation(line: 1056, column: 21, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5122, file: !785, line: 1056, column: 13)
!5126 = !DILocation(line: 1066, column: 3, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5128, file: !785, line: 1065, column: 11)
!5128 = distinct !DILexicalBlock(scope: !4924, file: !785, line: 1065, column: 6)
!5129 = !DILocation(line: 1067, column: 2, scope: !5127)
!5130 = !DILocation(line: 1068, column: 10, scope: !4924)
!5131 = !DILocation(line: 0, scope: !4981)
!5132 = !DILocation(line: 1074, column: 20, scope: !4984)
!5133 = !DILocation(line: 1074, column: 2, scope: !4981)
!5134 = !DILocation(line: 1110, column: 24, scope: !4924)
!5135 = !DILocation(line: 1053, column: 12, scope: !5121)
!5136 = !DILocation(line: 1054, column: 12, scope: !5121)
!5137 = !DILocation(line: 1108, column: 30, scope: !4924)
!5138 = !DILocation(line: 1108, column: 40, scope: !4924)
!5139 = !DILocation(line: 1108, column: 38, scope: !4924)
!5140 = !DILocation(line: 1109, column: 31, scope: !4924)
!5141 = !DILocation(line: 1109, column: 24, scope: !4924)
!5142 = !DILocation(line: 1110, column: 31, scope: !4924)
!5143 = !DILocation(line: 1114, column: 31, scope: !4924)
!5144 = !DILocation(line: 1114, column: 48, scope: !4924)
!5145 = !DILocation(line: 1115, column: 13, scope: !4924)
!5146 = !DILocation(line: 1118, column: 7, scope: !4924)
!5147 = !DILocation(line: 1119, column: 9, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !4924, file: !785, line: 1119, column: 6)
!5149 = !DILocation(line: 1119, column: 6, scope: !4924)
!5150 = !DILocation(line: 1075, column: 29, scope: !4983)
!5151 = !DILocation(line: 1075, column: 21, scope: !4983)
!5152 = !DILocation(line: 0, scope: !4983)
!5153 = !DILocation(line: 1076, column: 29, scope: !4983)
!5154 = !DILocation(line: 1076, column: 21, scope: !4983)
!5155 = !DILocation(line: 1077, column: 38, scope: !4983)
!5156 = !DILocation(line: 1077, column: 21, scope: !4983)
!5157 = !DILocation(line: 1078, column: 16, scope: !4983)
!5158 = !DILocation(line: 1080, column: 19, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !4983, file: !785, line: 1080, column: 7)
!5160 = !DILocation(line: 1080, column: 34, scope: !5159)
!5161 = !DILocation(line: 1080, column: 22, scope: !5159)
!5162 = !DILocation(line: 1080, column: 7, scope: !4983)
!5163 = !DILocation(line: 1084, column: 7, scope: !4983)
!5164 = !DILocation(line: 1085, column: 8, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5166, file: !785, line: 1084, column: 14)
!5166 = distinct !DILexicalBlock(scope: !4983, file: !785, line: 1084, column: 7)
!5167 = !DILocation(line: 1086, column: 5, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5169, file: !785, line: 1086, column: 5)
!5169 = distinct !DILexicalBlock(scope: !5170, file: !785, line: 1086, column: 5)
!5170 = distinct !DILexicalBlock(scope: !5171, file: !785, line: 1085, column: 49)
!5171 = distinct !DILexicalBlock(scope: !5165, file: !785, line: 1085, column: 8)
!5172 = !DILocation(line: 1086, column: 5, scope: !5169)
!5173 = !DILocation(line: 1086, column: 5, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5168, file: !785, line: 1086, column: 5)
!5175 = !DILocation(line: 1087, column: 25, scope: !5170)
!5176 = !DILocation(line: 1087, column: 5, scope: !5170)
!5177 = !DILocation(line: 1088, column: 4, scope: !5170)
!5178 = !DILocation(line: 1088, column: 15, scope: !5171)
!5179 = !DILocation(line: 1089, column: 5, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5181, file: !785, line: 1089, column: 5)
!5181 = distinct !DILexicalBlock(scope: !5182, file: !785, line: 1089, column: 5)
!5182 = distinct !DILexicalBlock(scope: !5183, file: !785, line: 1088, column: 61)
!5183 = distinct !DILexicalBlock(scope: !5171, file: !785, line: 1088, column: 15)
!5184 = !DILocation(line: 1089, column: 5, scope: !5181)
!5185 = !DILocation(line: 1089, column: 5, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5180, file: !785, line: 1089, column: 5)
!5187 = !DILocation(line: 1090, column: 26, scope: !5182)
!5188 = !DILocation(line: 1090, column: 5, scope: !5182)
!5189 = !DILocation(line: 1091, column: 4, scope: !5182)
!5190 = !DILocation(line: 1095, column: 8, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5166, file: !785, line: 1094, column: 10)
!5192 = !DILocation(line: 1096, column: 5, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5194, file: !785, line: 1096, column: 5)
!5194 = distinct !DILexicalBlock(scope: !5195, file: !785, line: 1096, column: 5)
!5195 = distinct !DILexicalBlock(scope: !5196, file: !785, line: 1095, column: 49)
!5196 = distinct !DILexicalBlock(scope: !5191, file: !785, line: 1095, column: 8)
!5197 = !DILocation(line: 1096, column: 5, scope: !5194)
!5198 = !DILocation(line: 1096, column: 5, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5193, file: !785, line: 1096, column: 5)
!5200 = !DILocation(line: 1097, column: 25, scope: !5195)
!5201 = !DILocation(line: 1097, column: 5, scope: !5195)
!5202 = !DILocation(line: 1098, column: 4, scope: !5195)
!5203 = !DILocation(line: 1099, column: 5, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5205, file: !785, line: 1099, column: 5)
!5205 = distinct !DILexicalBlock(scope: !5206, file: !785, line: 1099, column: 5)
!5206 = distinct !DILexicalBlock(scope: !5196, file: !785, line: 1098, column: 11)
!5207 = !DILocation(line: 1099, column: 5, scope: !5205)
!5208 = !DILocation(line: 1099, column: 5, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5204, file: !785, line: 1099, column: 5)
!5210 = !DILocation(line: 1100, column: 26, scope: !5206)
!5211 = !DILocation(line: 1100, column: 5, scope: !5206)
!5212 = !DILocation(line: 1100, column: 30, scope: !5206)
!5213 = !DILocation(line: 1101, column: 26, scope: !5206)
!5214 = !DILocation(line: 1101, column: 5, scope: !5206)
!5215 = !DILocation(line: 0, scope: !5166)
!5216 = !DILocation(line: 1074, column: 32, scope: !4984)
!5217 = distinct !{!5217, !5133, !5218}
!5218 = !DILocation(line: 1104, column: 2, scope: !4981)
!5219 = !DILocation(line: 1124, column: 13, scope: !4924)
!5220 = !DILocation(line: 1127, column: 10, scope: !4924)
!5221 = !DILocation(line: 1127, column: 7, scope: !4924)
!5222 = !DILocation(line: 1128, column: 9, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !4924, file: !785, line: 1128, column: 6)
!5224 = !DILocation(line: 1128, column: 6, scope: !4924)
!5225 = !DILocation(line: 1134, column: 27, scope: !4924)
!5226 = !DILocation(line: 1136, column: 7, scope: !4924)
!5227 = !DILocation(line: 1137, column: 9, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !4924, file: !785, line: 1137, column: 6)
!5229 = !DILocation(line: 1137, column: 6, scope: !4924)
!5230 = !DILocation(line: 1131, column: 10, scope: !4924)
!5231 = !DILocation(line: 1140, column: 10, scope: !4924)
!5232 = !DILocation(line: 0, scope: !4991)
!5233 = !DILocation(line: 1143, column: 20, scope: !4994)
!5234 = !DILocation(line: 1143, column: 2, scope: !4991)
!5235 = !DILocation(line: 1144, column: 3, scope: !4993)
!5236 = !DILocation(line: 1144, column: 17, scope: !4993)
!5237 = !DILocation(line: 0, scope: !4993)
!5238 = !DILocation(line: 1144, column: 11, scope: !4993)
!5239 = !DILocation(line: 1145, column: 38, scope: !4993)
!5240 = !DILocation(line: 1145, column: 21, scope: !4993)
!5241 = !DILocation(line: 1146, column: 22, scope: !4993)
!5242 = !DILocation(line: 1146, column: 29, scope: !4993)
!5243 = !DILocation(line: 1148, column: 8, scope: !4993)
!5244 = !DILocation(line: 1149, column: 10, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !4993, file: !785, line: 1149, column: 7)
!5246 = !DILocation(line: 1149, column: 7, scope: !4993)
!5247 = !DILocation(line: 1154, column: 8, scope: !4993)
!5248 = !DILocation(line: 1155, column: 10, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !4993, file: !785, line: 1155, column: 7)
!5250 = !DILocation(line: 1155, column: 7, scope: !4993)
!5251 = !DILocation(line: 1159, column: 2, scope: !4994)
!5252 = !DILocation(line: 1152, column: 11, scope: !4993)
!5253 = !DILocation(line: 1158, column: 11, scope: !4993)
!5254 = !DILocation(line: 1143, column: 33, scope: !4994)
!5255 = distinct !{!5255, !5234, !5256}
!5256 = !DILocation(line: 1159, column: 2, scope: !4991)
!5257 = !DILocation(line: 1162, column: 8, scope: !4924)
!5258 = !DILocation(line: 1164, column: 2, scope: !4924)
!5259 = !DILocation(line: 1165, column: 1, scope: !4924)
!5260 = distinct !DISubprogram(name: "get_package_len", scope: !785, file: !785, line: 196, type: !5261, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !5263)
!5261 = !DISubroutineType(types: !5262)
!5262 = !{!153, !102}
!5263 = !{!5264, !5265, !5266, !5267, !5268, !5269, !5270}
!5264 = !DILocalVariable(name: "packaged", arg: 1, scope: !5260, file: !785, line: 196, type: !102)
!5265 = !DILocalVariable(name: "buf", scope: !5260, file: !785, line: 200, type: !783)
!5266 = !DILocalVariable(name: "start", scope: !5260, file: !785, line: 201, type: !783)
!5267 = !DILocalVariable(name: "args_size", scope: !5260, file: !785, line: 202, type: !32)
!5268 = !DILocalVariable(name: "s_nbr", scope: !5260, file: !785, line: 202, type: !32)
!5269 = !DILocalVariable(name: "ros_nbr", scope: !5260, file: !785, line: 202, type: !32)
!5270 = !DILocalVariable(name: "i", scope: !5271, file: !785, line: 215, type: !103)
!5271 = distinct !DILexicalBlock(scope: !5260, file: !785, line: 215, column: 2)
!5272 = !DILocation(line: 0, scope: !5260)
!5273 = !DILocation(line: 198, column: 2, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5275, file: !785, line: 198, column: 2)
!5275 = distinct !DILexicalBlock(scope: !5260, file: !785, line: 198, column: 2)
!5276 = !DILocation(line: 198, column: 2, scope: !5275)
!5277 = !DILocation(line: 198, column: 2, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5274, file: !785, line: 198, column: 2)
!5279 = !DILocation(line: 204, column: 14, scope: !5260)
!5280 = !DILocation(line: 204, column: 21, scope: !5260)
!5281 = !DILocation(line: 205, column: 14, scope: !5260)
!5282 = !DILocation(line: 206, column: 14, scope: !5260)
!5283 = !DILocation(line: 209, column: 6, scope: !5260)
!5284 = !DILocation(line: 212, column: 6, scope: !5260)
!5285 = !DILocation(line: 0, scope: !5271)
!5286 = !DILocation(line: 215, column: 20, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5271, file: !785, line: 215, column: 2)
!5288 = !DILocation(line: 215, column: 2, scope: !5271)
!5289 = !DILocation(line: 220, column: 33, scope: !5260)
!5290 = !DILocation(line: 220, column: 2, scope: !5260)
!5291 = !DILocation(line: 216, column: 6, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5287, file: !785, line: 215, column: 34)
!5293 = !DILocation(line: 217, column: 10, scope: !5292)
!5294 = !DILocation(line: 217, column: 36, scope: !5292)
!5295 = !DILocation(line: 217, column: 7, scope: !5292)
!5296 = !DILocation(line: 215, column: 30, scope: !5287)
!5297 = distinct !{!5297, !5288, !5298}
!5298 = !DILocation(line: 218, column: 2, scope: !5271)
!5299 = distinct !DISubprogram(name: "append_string", scope: !785, file: !785, line: 223, type: !5300, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !5302)
!5300 = !DISubroutineType(types: !5301)
!5301 = !{!103, !4927, !102, !336, !177}
!5302 = !{!5303, !5304, !5305, !5306}
!5303 = !DILocalVariable(name: "cb", arg: 1, scope: !5299, file: !785, line: 223, type: !4927)
!5304 = !DILocalVariable(name: "ctx", arg: 2, scope: !5299, file: !785, line: 223, type: !102)
!5305 = !DILocalVariable(name: "str", arg: 3, scope: !5299, file: !785, line: 223, type: !336)
!5306 = !DILocalVariable(name: "strl", arg: 4, scope: !5299, file: !785, line: 223, type: !177)
!5307 = !DILocation(line: 0, scope: !5299)
!5308 = !DILocation(line: 225, column: 9, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5299, file: !785, line: 225, column: 6)
!5310 = !DILocation(line: 225, column: 6, scope: !5299)
!5311 = !DILocation(line: 226, column: 14, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5309, file: !785, line: 225, column: 18)
!5313 = !DILocation(line: 226, column: 12, scope: !5312)
!5314 = !DILocation(line: 226, column: 3, scope: !5312)
!5315 = !DILocation(line: 229, column: 14, scope: !5299)
!5316 = !DILocation(line: 229, column: 9, scope: !5299)
!5317 = !DILocation(line: 229, column: 27, scope: !5299)
!5318 = !DILocation(line: 229, column: 39, scope: !5299)
!5319 = !DILocation(line: 230, column: 17, scope: !5299)
!5320 = !DILocation(line: 230, column: 9, scope: !5299)
!5321 = !DILocation(line: 230, column: 2, scope: !5299)
!5322 = !DILocation(line: 231, column: 1, scope: !5299)
!5323 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !798, file: !798, line: 45, type: !800, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5324)
!5324 = !{!5325}
!5325 = !DILocalVariable(name: "c", arg: 1, scope: !5323, file: !798, line: 45, type: !103)
!5326 = !DILocation(line: 0, scope: !5323)
!5327 = !DILocation(line: 50, column: 2, scope: !5323)
!5328 = distinct !DISubprogram(name: "__printk_hook_install", scope: !798, file: !798, line: 63, type: !5329, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5331)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{null, !799}
!5331 = !{!5332}
!5332 = !DILocalVariable(name: "fn", arg: 1, scope: !5328, file: !798, line: 63, type: !799)
!5333 = !DILocation(line: 0, scope: !5328)
!5334 = !DILocation(line: 65, column: 12, scope: !5328)
!5335 = !DILocation(line: 66, column: 1, scope: !5328)
!5336 = distinct !DISubprogram(name: "__printk_get_hook", scope: !798, file: !798, line: 76, type: !5337, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !2894)
!5337 = !DISubroutineType(types: !5338)
!5338 = !{!102}
!5339 = !DILocation(line: 78, column: 9, scope: !5336)
!5340 = !DILocation(line: 78, column: 2, scope: !5336)
!5341 = distinct !DISubprogram(name: "vprintk", scope: !798, file: !798, line: 113, type: !5342, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5350)
!5342 = !DISubroutineType(types: !5343)
!5343 = !{null, !336, !5344}
!5344 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4413, line: 99, baseType: !5345)
!5345 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4413, line: 40, baseType: !5346)
!5346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !798, baseType: !5347)
!5347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5348)
!5348 = !{!5349}
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5347, file: !798, line: 79, baseType: !102, size: 32)
!5350 = !{!5351, !5352, !5353}
!5351 = !DILocalVariable(name: "fmt", arg: 1, scope: !5341, file: !798, line: 113, type: !336)
!5352 = !DILocalVariable(name: "ap", arg: 2, scope: !5341, file: !798, line: 113, type: !5344)
!5353 = !DILocalVariable(name: "ctx", scope: !5354, file: !798, line: 121, type: !5356)
!5354 = distinct !DILexicalBlock(scope: !5355, file: !798, line: 120, column: 27)
!5355 = distinct !DILexicalBlock(scope: !5341, file: !798, line: 120, column: 6)
!5356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !798, line: 81, size: 32, elements: !5357)
!5357 = !{!5358, !5359}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5356, file: !798, line: 85, baseType: !32, size: 32)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5356, file: !798, line: 86, baseType: !5360, offset: 32)
!5360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, elements: !3443)
!5361 = !DILocation(line: 0, scope: !5341)
!5362 = !DILocation(line: 148, column: 3, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5355, file: !798, line: 138, column: 9)
!5364 = !DILocation(line: 155, column: 1, scope: !5341)
!5365 = distinct !DISubprogram(name: "char_out", scope: !798, file: !798, line: 107, type: !5366, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5368)
!5366 = !DISubroutineType(types: !5367)
!5367 = !{!103, !103, !102}
!5368 = !{!5369, !5370}
!5369 = !DILocalVariable(name: "c", arg: 1, scope: !5365, file: !798, line: 107, type: !103)
!5370 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5365, file: !798, line: 107, type: !102)
!5371 = !DILocation(line: 0, scope: !5365)
!5372 = !DILocation(line: 110, column: 9, scope: !5365)
!5373 = !DILocation(line: 110, column: 2, scope: !5365)
!5374 = distinct !DISubprogram(name: "cbvprintf", scope: !4445, file: !4445, line: 739, type: !5375, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5377)
!5375 = !DISubroutineType(types: !5376)
!5376 = !{!103, !4795, !102, !336, !5344}
!5377 = !{!5378, !5379, !5380, !5381}
!5378 = !DILocalVariable(name: "out", arg: 1, scope: !5374, file: !4445, line: 739, type: !4795)
!5379 = !DILocalVariable(name: "ctx", arg: 2, scope: !5374, file: !4445, line: 739, type: !102)
!5380 = !DILocalVariable(name: "format", arg: 3, scope: !5374, file: !4445, line: 739, type: !336)
!5381 = !DILocalVariable(name: "ap", arg: 4, scope: !5374, file: !4445, line: 739, type: !5344)
!5382 = !DILocation(line: 0, scope: !5374)
!5383 = !DILocation(line: 741, column: 9, scope: !5374)
!5384 = !DILocation(line: 741, column: 2, scope: !5374)
!5385 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !798, file: !798, line: 157, type: !5386, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5388)
!5386 = !DISubroutineType(types: !5387)
!5387 = !{null, !157, !153}
!5388 = !{!5389, !5390, !5391}
!5389 = !DILocalVariable(name: "c", arg: 1, scope: !5385, file: !798, line: 157, type: !157)
!5390 = !DILocalVariable(name: "n", arg: 2, scope: !5385, file: !798, line: 157, type: !153)
!5391 = !DILocalVariable(name: "i", scope: !5385, file: !798, line: 159, type: !153)
!5392 = !DILocation(line: 0, scope: !5385)
!5393 = !DILocation(line: 164, column: 16, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5395, file: !798, line: 164, column: 2)
!5395 = distinct !DILexicalBlock(scope: !5385, file: !798, line: 164, column: 2)
!5396 = !DILocation(line: 164, column: 2, scope: !5395)
!5397 = !DILocation(line: 165, column: 3, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5394, file: !798, line: 164, column: 26)
!5399 = !DILocation(line: 165, column: 13, scope: !5398)
!5400 = !DILocation(line: 164, column: 22, scope: !5394)
!5401 = distinct !{!5401, !5396, !5402}
!5402 = !DILocation(line: 166, column: 2, scope: !5395)
!5403 = !DILocation(line: 171, column: 1, scope: !5385)
!5404 = distinct !DISubprogram(name: "printk", scope: !798, file: !798, line: 203, type: !5405, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5407)
!5405 = !DISubroutineType(types: !5406)
!5406 = !{null, !336, null}
!5407 = !{!5408, !5409}
!5408 = !DILocalVariable(name: "fmt", arg: 1, scope: !5404, file: !798, line: 203, type: !336)
!5409 = !DILocalVariable(name: "ap", scope: !5404, file: !798, line: 205, type: !5344)
!5410 = !DILocation(line: 0, scope: !5404)
!5411 = !DILocation(line: 205, column: 2, scope: !5404)
!5412 = !DILocation(line: 205, column: 10, scope: !5404)
!5413 = !DILocation(line: 207, column: 2, scope: !5404)
!5414 = !DILocation(line: 209, column: 2, scope: !5404)
!5415 = !DILocation(line: 211, column: 2, scope: !5404)
!5416 = !DILocation(line: 212, column: 1, scope: !5404)
!5417 = distinct !DISubprogram(name: "snprintk", scope: !798, file: !798, line: 239, type: !5418, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5420)
!5418 = !DISubroutineType(types: !5419)
!5419 = !{!103, !157, !153, !336, null}
!5420 = !{!5421, !5422, !5423, !5424, !5425}
!5421 = !DILocalVariable(name: "str", arg: 1, scope: !5417, file: !798, line: 239, type: !157)
!5422 = !DILocalVariable(name: "size", arg: 2, scope: !5417, file: !798, line: 239, type: !153)
!5423 = !DILocalVariable(name: "fmt", arg: 3, scope: !5417, file: !798, line: 239, type: !336)
!5424 = !DILocalVariable(name: "ap", scope: !5417, file: !798, line: 241, type: !5344)
!5425 = !DILocalVariable(name: "ret", scope: !5417, file: !798, line: 242, type: !103)
!5426 = !DILocation(line: 0, scope: !5417)
!5427 = !DILocation(line: 241, column: 2, scope: !5417)
!5428 = !DILocation(line: 241, column: 10, scope: !5417)
!5429 = !DILocation(line: 244, column: 2, scope: !5417)
!5430 = !DILocation(line: 245, column: 8, scope: !5417)
!5431 = !DILocation(line: 246, column: 2, scope: !5417)
!5432 = !DILocation(line: 249, column: 1, scope: !5417)
!5433 = !DILocation(line: 248, column: 2, scope: !5417)
!5434 = distinct !DISubprogram(name: "vsnprintk", scope: !798, file: !798, line: 251, type: !5435, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5437)
!5435 = !DISubroutineType(types: !5436)
!5436 = !{!103, !157, !153, !336, !5344}
!5437 = !{!5438, !5439, !5440, !5441, !5442}
!5438 = !DILocalVariable(name: "str", arg: 1, scope: !5434, file: !798, line: 251, type: !157)
!5439 = !DILocalVariable(name: "size", arg: 2, scope: !5434, file: !798, line: 251, type: !153)
!5440 = !DILocalVariable(name: "fmt", arg: 3, scope: !5434, file: !798, line: 251, type: !336)
!5441 = !DILocalVariable(name: "ap", arg: 4, scope: !5434, file: !798, line: 251, type: !5344)
!5442 = !DILocalVariable(name: "ctx", scope: !5434, file: !798, line: 253, type: !5443)
!5443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !798, line: 217, size: 96, elements: !5444)
!5444 = !{!5445, !5446, !5447}
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5443, file: !798, line: 218, baseType: !157, size: 32)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5443, file: !798, line: 219, baseType: !103, size: 32, offset: 32)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5443, file: !798, line: 220, baseType: !103, size: 32, offset: 64)
!5448 = !DILocation(line: 0, scope: !5434)
!5449 = !DILocation(line: 253, column: 2, scope: !5434)
!5450 = !DILocation(line: 253, column: 21, scope: !5434)
!5451 = !DILocation(line: 253, column: 27, scope: !5434)
!5452 = !DILocation(line: 255, column: 2, scope: !5434)
!5453 = !DILocation(line: 257, column: 10, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5434, file: !798, line: 257, column: 6)
!5455 = !DILocation(line: 257, column: 22, scope: !5454)
!5456 = !DILocation(line: 257, column: 16, scope: !5454)
!5457 = !DILocation(line: 257, column: 6, scope: !5434)
!5458 = !DILocation(line: 258, column: 3, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5454, file: !798, line: 257, column: 27)
!5460 = !DILocation(line: 258, column: 18, scope: !5459)
!5461 = !DILocation(line: 259, column: 2, scope: !5459)
!5462 = !DILocation(line: 262, column: 1, scope: !5434)
!5463 = !DILocation(line: 261, column: 2, scope: !5434)
!5464 = distinct !DISubprogram(name: "str_out", scope: !798, file: !798, line: 223, type: !5465, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5468)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{!103, !103, !5467}
!5467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5443, size: 32)
!5468 = !{!5469, !5470}
!5469 = !DILocalVariable(name: "c", arg: 1, scope: !5464, file: !798, line: 223, type: !103)
!5470 = !DILocalVariable(name: "ctx", arg: 2, scope: !5464, file: !798, line: 223, type: !5467)
!5471 = !DILocation(line: 0, scope: !5464)
!5472 = !DILocation(line: 225, column: 11, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5464, file: !798, line: 225, column: 6)
!5474 = !DILocation(line: 225, column: 15, scope: !5473)
!5475 = !DILocation(line: 0, scope: !5473)
!5476 = !DILocation(line: 225, column: 23, scope: !5473)
!5477 = !DILocation(line: 225, column: 45, scope: !5473)
!5478 = !DILocation(line: 225, column: 37, scope: !5473)
!5479 = !DILocation(line: 225, column: 6, scope: !5464)
!5480 = !DILocation(line: 226, column: 8, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5473, file: !798, line: 225, column: 50)
!5482 = !DILocation(line: 226, column: 13, scope: !5481)
!5483 = !DILocation(line: 227, column: 3, scope: !5481)
!5484 = !DILocation(line: 230, column: 29, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5464, file: !798, line: 230, column: 6)
!5486 = !DILocation(line: 230, column: 17, scope: !5485)
!5487 = !DILocation(line: 230, column: 6, scope: !5464)
!5488 = !DILocation(line: 231, column: 22, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5485, file: !798, line: 230, column: 34)
!5490 = !DILocation(line: 231, column: 3, scope: !5489)
!5491 = !DILocation(line: 231, column: 26, scope: !5489)
!5492 = !DILocation(line: 232, column: 2, scope: !5489)
!5493 = !DILocation(line: 233, column: 28, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5485, file: !798, line: 232, column: 9)
!5495 = !DILocation(line: 233, column: 22, scope: !5494)
!5496 = !DILocation(line: 233, column: 3, scope: !5494)
!5497 = !DILocation(line: 233, column: 26, scope: !5494)
!5498 = !DILocation(line: 237, column: 1, scope: !5464)
!5499 = distinct !DISubprogram(name: "z_thread_entry", scope: !5500, file: !5500, line: 30, type: !5501, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3411, retainedNodes: !5503)
!5500 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5501 = !DISubroutineType(types: !5502)
!5502 = !{null, !320, !102, !102, !102}
!5503 = !{!5504, !5505, !5506, !5507}
!5504 = !DILocalVariable(name: "entry", arg: 1, scope: !5499, file: !5500, line: 30, type: !320)
!5505 = !DILocalVariable(name: "p1", arg: 2, scope: !5499, file: !5500, line: 31, type: !102)
!5506 = !DILocalVariable(name: "p2", arg: 3, scope: !5499, file: !5500, line: 31, type: !102)
!5507 = !DILocalVariable(name: "p3", arg: 4, scope: !5499, file: !5500, line: 31, type: !102)
!5508 = !DILocation(line: 0, scope: !5499)
!5509 = !DILocation(line: 36, column: 2, scope: !5499)
!5510 = !DILocation(line: 38, column: 17, scope: !5499)
!5511 = !DILocation(line: 38, column: 2, scope: !5499)
!5512 = !DILocation(line: 45, column: 2, scope: !5499)
!5513 = distinct !DISubprogram(name: "k_current_get", scope: !124, file: !124, line: 530, type: !5514, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3411, retainedNodes: !2894)
!5514 = !DISubroutineType(types: !5515)
!5515 = !{!5516}
!5516 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !5517)
!5517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5518, size: 32)
!5518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !5519)
!5519 = !{!5520, !5578, !5590, !5591, !5592, !5593, !5599, !5614}
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5518, file: !195, line: 247, baseType: !5521, size: 384)
!5521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !5522)
!5522 = !{!5523, !5547, !5554, !5555, !5556, !5565, !5566, !5567}
!5523 = !DIDerivedType(tag: DW_TAG_member, scope: !5521, file: !195, line: 60, baseType: !5524, size: 64)
!5524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5521, file: !195, line: 60, size: 64, elements: !5525)
!5525 = !{!5526, !5541}
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5524, file: !195, line: 61, baseType: !5527, size: 64)
!5527 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !5528)
!5528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !5529)
!5529 = !{!5530, !5536}
!5530 = !DIDerivedType(tag: DW_TAG_member, scope: !5528, file: !133, line: 38, baseType: !5531, size: 32)
!5531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5528, file: !133, line: 38, size: 32, elements: !5532)
!5532 = !{!5533, !5535}
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5531, file: !133, line: 39, baseType: !5534, size: 32)
!5534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5528, size: 32)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5531, file: !133, line: 40, baseType: !5534, size: 32)
!5536 = !DIDerivedType(tag: DW_TAG_member, scope: !5528, file: !133, line: 42, baseType: !5537, size: 32, offset: 32)
!5537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5528, file: !133, line: 42, size: 32, elements: !5538)
!5538 = !{!5539, !5540}
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5537, file: !133, line: 43, baseType: !5534, size: 32)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5537, file: !133, line: 44, baseType: !5534, size: 32)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5524, file: !195, line: 62, baseType: !5542, size: 64)
!5542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !5543)
!5543 = !{!5544}
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5542, file: !207, line: 50, baseType: !5545, size: 64)
!5545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5546, size: 64, elements: !212)
!5546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5542, size: 32)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5521, file: !195, line: 68, baseType: !5548, size: 32, offset: 64)
!5548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5549, size: 32)
!5549 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !5550)
!5550 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !5551)
!5551 = !{!5552}
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5550, file: !128, line: 232, baseType: !5553, size: 64)
!5553 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !5528)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5521, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5521, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!5556 = !DIDerivedType(tag: DW_TAG_member, scope: !5521, file: !195, line: 90, baseType: !5557, size: 16, offset: 112)
!5557 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5521, file: !195, line: 90, size: 16, elements: !5558)
!5558 = !{!5559, !5564}
!5559 = !DIDerivedType(tag: DW_TAG_member, scope: !5557, file: !195, line: 91, baseType: !5560, size: 16)
!5560 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5557, file: !195, line: 91, size: 16, elements: !5561)
!5561 = !{!5562, !5563}
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5560, file: !195, line: 96, baseType: !225, size: 8)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5560, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5557, file: !195, line: 100, baseType: !177, size: 16)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5521, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5521, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5521, file: !195, line: 131, baseType: !5568, size: 192, offset: 192)
!5568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !5569)
!5569 = !{!5570, !5571, !5577}
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5568, file: !128, line: 245, baseType: !5527, size: 64)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5568, file: !128, line: 246, baseType: !5572, size: 32, offset: 64)
!5572 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !5573)
!5573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5574, size: 32)
!5574 = !DISubroutineType(types: !5575)
!5575 = !{null, !5576}
!5576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5568, size: 32)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5568, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5518, file: !195, line: 250, baseType: !5579, size: 288, offset: 384)
!5579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !5580)
!5580 = !{!5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5589}
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5579, file: !244, line: 26, baseType: !108, size: 32)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5579, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5579, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5579, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5579, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5579, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5579, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5579, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5579, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5518, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5518, file: !195, line: 256, baseType: !5549, size: 64, offset: 704)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5518, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5518, file: !195, line: 300, baseType: !5594, size: 96, offset: 800)
!5594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !5595)
!5595 = !{!5596, !5597, !5598}
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5594, file: !195, line: 153, baseType: !22, size: 32)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5594, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5594, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5518, file: !195, line: 325, baseType: !5600, size: 32, offset: 896)
!5600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5601, size: 32)
!5601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !5602)
!5602 = !{!5603, !5609, !5610}
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5601, file: !124, line: 5074, baseType: !5604, size: 96)
!5604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !5605)
!5605 = !{!5606, !5607, !5608}
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5604, file: !270, line: 57, baseType: !273, size: 32)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5604, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5604, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5601, file: !124, line: 5075, baseType: !5549, size: 64, offset: 96)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5601, file: !124, line: 5076, baseType: !5611, size: 32, offset: 160)
!5611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !5612)
!5612 = !{!5613}
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5611, file: !149, line: 52, baseType: !22, size: 32)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5518, file: !195, line: 343, baseType: !5615, size: 64, offset: 928)
!5615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !5616)
!5616 = !{!5617, !5618}
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5615, file: !244, line: 63, baseType: !108, size: 32)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5615, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!5619 = !DILocation(line: 535, column: 9, scope: !5513)
!5620 = !DILocation(line: 535, column: 2, scope: !5513)
!5621 = distinct !DISubprogram(name: "k_thread_abort", scope: !4394, file: !4394, line: 188, type: !5622, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3411, retainedNodes: !5624)
!5622 = !DISubroutineType(types: !5623)
!5623 = !{null, !5516}
!5624 = !{!5625}
!5625 = !DILocalVariable(name: "thread", arg: 1, scope: !5621, file: !4394, line: 188, type: !5516)
!5626 = !DILocation(line: 0, scope: !5621)
!5627 = !DILocation(line: 197, column: 2, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5621, file: !4394, line: 197, column: 2)
!5629 = !{i64 2152220733}
!5630 = !DILocation(line: 198, column: 2, scope: !5621)
!5631 = !DILocation(line: 199, column: 1, scope: !5621)
!5632 = distinct !DISubprogram(name: "z_current_get", scope: !4394, file: !4394, line: 173, type: !5514, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3411, retainedNodes: !2894)
!5633 = !DILocation(line: 180, column: 2, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5632, file: !4394, line: 180, column: 2)
!5635 = !{i64 2152220665}
!5636 = !DILocation(line: 181, column: 9, scope: !5632)
!5637 = !DILocation(line: 181, column: 2, scope: !5632)
!5638 = distinct !DISubprogram(name: "sys_heap_free", scope: !5639, file: !5639, line: 163, type: !5640, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5648)
!5639 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5640 = !DISubroutineType(types: !5641)
!5641 = !{null, !5642, !102}
!5642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5643, size: 32)
!5643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !5644)
!5644 = !{!5645, !5646, !5647}
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5643, file: !270, line: 57, baseType: !3430, size: 32)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5643, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5643, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!5648 = !{!5649, !5650, !5651, !5652}
!5649 = !DILocalVariable(name: "heap", arg: 1, scope: !5638, file: !5639, line: 163, type: !5642)
!5650 = !DILocalVariable(name: "mem", arg: 2, scope: !5638, file: !5639, line: 163, type: !102)
!5651 = !DILocalVariable(name: "h", scope: !5638, file: !5639, line: 168, type: !3430)
!5652 = !DILocalVariable(name: "c", scope: !5638, file: !5639, line: 169, type: !3435)
!5653 = !DILocation(line: 0, scope: !5638)
!5654 = !DILocation(line: 165, column: 10, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5638, file: !5639, line: 165, column: 6)
!5656 = !DILocation(line: 165, column: 6, scope: !5638)
!5657 = !DILocation(line: 168, column: 27, scope: !5638)
!5658 = !DILocation(line: 169, column: 16, scope: !5638)
!5659 = !{i32 0, i32 536870912}
!5660 = !DILocation(line: 175, column: 2, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5662, file: !5639, line: 175, column: 2)
!5662 = distinct !DILexicalBlock(scope: !5638, file: !5639, line: 175, column: 2)
!5663 = !DILocation(line: 175, column: 2, scope: !5662)
!5664 = !DILocation(line: 175, column: 2, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5661, file: !5639, line: 175, column: 2)
!5666 = !DILocation(line: 183, column: 2, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5668, file: !5639, line: 183, column: 2)
!5668 = distinct !DILexicalBlock(scope: !5638, file: !5639, line: 183, column: 2)
!5669 = !DILocation(line: 183, column: 2, scope: !5668)
!5670 = !DILocation(line: 183, column: 2, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5667, file: !5639, line: 183, column: 2)
!5672 = !DILocation(line: 187, column: 2, scope: !5638)
!5673 = !DILocation(line: 197, column: 2, scope: !5638)
!5674 = !DILocation(line: 198, column: 1, scope: !5638)
!5675 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5639, file: !5639, line: 157, type: !5676, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5678)
!5676 = !DISubroutineType(types: !5677)
!5677 = !{!3435, !3430, !102}
!5678 = !{!5679, !5680, !5681, !5682}
!5679 = !DILocalVariable(name: "h", arg: 1, scope: !5675, file: !5639, line: 157, type: !3430)
!5680 = !DILocalVariable(name: "p", arg: 2, scope: !5675, file: !5639, line: 157, type: !102)
!5681 = !DILocalVariable(name: "mem", scope: !5675, file: !5639, line: 159, type: !783)
!5682 = !DILocalVariable(name: "base", scope: !5675, file: !5639, line: 159, type: !783)
!5683 = !DILocation(line: 0, scope: !5675)
!5684 = !DILocation(line: 159, column: 39, scope: !5675)
!5685 = !DILocation(line: 160, column: 14, scope: !5675)
!5686 = !DILocation(line: 160, column: 38, scope: !5675)
!5687 = !DILocation(line: 160, column: 46, scope: !5675)
!5688 = !DILocation(line: 160, column: 2, scope: !5675)
!5689 = distinct !DISubprogram(name: "chunk_used", scope: !3417, file: !3417, line: 137, type: !5690, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5692)
!5690 = !DISubroutineType(types: !5691)
!5691 = !{!119, !3430, !3435}
!5692 = !{!5693, !5694}
!5693 = !DILocalVariable(name: "h", arg: 1, scope: !5689, file: !3417, line: 137, type: !3430)
!5694 = !DILocalVariable(name: "c", arg: 2, scope: !5689, file: !3417, line: 137, type: !3435)
!5695 = !DILocation(line: 0, scope: !5689)
!5696 = !DILocation(line: 139, column: 9, scope: !5689)
!5697 = !DILocation(line: 139, column: 42, scope: !5689)
!5698 = !DILocation(line: 139, column: 2, scope: !5689)
!5699 = distinct !DISubprogram(name: "right_chunk", scope: !3417, file: !3417, line: 204, type: !5700, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5702)
!5700 = !DISubroutineType(types: !5701)
!5701 = !{!3435, !3430, !3435}
!5702 = !{!5703, !5704}
!5703 = !DILocalVariable(name: "h", arg: 1, scope: !5699, file: !3417, line: 204, type: !3430)
!5704 = !DILocalVariable(name: "c", arg: 2, scope: !5699, file: !3417, line: 204, type: !3435)
!5705 = !DILocation(line: 0, scope: !5699)
!5706 = !DILocation(line: 206, column: 13, scope: !5699)
!5707 = !DILocation(line: 206, column: 11, scope: !5699)
!5708 = !DILocation(line: 206, column: 2, scope: !5699)
!5709 = distinct !DISubprogram(name: "left_chunk", scope: !3417, file: !3417, line: 199, type: !5700, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5710)
!5710 = !{!5711, !5712}
!5711 = !DILocalVariable(name: "h", arg: 1, scope: !5709, file: !3417, line: 199, type: !3430)
!5712 = !DILocalVariable(name: "c", arg: 2, scope: !5709, file: !3417, line: 199, type: !3435)
!5713 = !DILocation(line: 0, scope: !5709)
!5714 = !DILocation(line: 201, column: 13, scope: !5709)
!5715 = !DILocation(line: 201, column: 11, scope: !5709)
!5716 = !DILocation(line: 201, column: 2, scope: !5709)
!5717 = distinct !DISubprogram(name: "set_chunk_used", scope: !3417, file: !3417, line: 147, type: !5718, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5720)
!5718 = !DISubroutineType(types: !5719)
!5719 = !{null, !3430, !3435, !119}
!5720 = !{!5721, !5722, !5723, !5724, !5725}
!5721 = !DILocalVariable(name: "h", arg: 1, scope: !5717, file: !3417, line: 147, type: !3430)
!5722 = !DILocalVariable(name: "c", arg: 2, scope: !5717, file: !3417, line: 147, type: !3435)
!5723 = !DILocalVariable(name: "used", arg: 3, scope: !5717, file: !3417, line: 147, type: !119)
!5724 = !DILocalVariable(name: "buf", scope: !5717, file: !3417, line: 149, type: !3424)
!5725 = !DILocalVariable(name: "cmem", scope: !5717, file: !3417, line: 150, type: !102)
!5726 = !DILocation(line: 0, scope: !5717)
!5727 = !DILocation(line: 149, column: 22, scope: !5717)
!5728 = !DILocation(line: 0, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5730, file: !3417, line: 159, column: 7)
!5730 = distinct !DILexicalBlock(scope: !5731, file: !3417, line: 158, column: 9)
!5731 = distinct !DILexicalBlock(scope: !5717, file: !3417, line: 152, column: 6)
!5732 = !DILocation(line: 159, column: 7, scope: !5730)
!5733 = !DILocation(line: 165, column: 1, scope: !5717)
!5734 = distinct !DISubprogram(name: "free_chunk", scope: !5639, file: !5639, line: 133, type: !5735, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5737)
!5735 = !DISubroutineType(types: !5736)
!5736 = !{null, !3430, !3435}
!5737 = !{!5738, !5739}
!5738 = !DILocalVariable(name: "h", arg: 1, scope: !5734, file: !5639, line: 133, type: !3430)
!5739 = !DILocalVariable(name: "c", arg: 2, scope: !5734, file: !5639, line: 133, type: !3435)
!5740 = !DILocation(line: 0, scope: !5734)
!5741 = !DILocation(line: 136, column: 21, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5734, file: !5639, line: 136, column: 6)
!5743 = !DILocation(line: 136, column: 7, scope: !5742)
!5744 = !DILocation(line: 136, column: 6, scope: !5734)
!5745 = !DILocation(line: 137, column: 3, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5742, file: !5639, line: 136, column: 41)
!5747 = !DILocation(line: 138, column: 22, scope: !5746)
!5748 = !DILocation(line: 138, column: 3, scope: !5746)
!5749 = !DILocation(line: 139, column: 2, scope: !5746)
!5750 = !DILocation(line: 142, column: 21, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5734, file: !5639, line: 142, column: 6)
!5752 = !DILocation(line: 142, column: 7, scope: !5751)
!5753 = !DILocation(line: 142, column: 6, scope: !5734)
!5754 = !DILocation(line: 143, column: 3, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5751, file: !5639, line: 142, column: 40)
!5756 = !DILocation(line: 144, column: 19, scope: !5755)
!5757 = !DILocation(line: 144, column: 3, scope: !5755)
!5758 = !DILocation(line: 145, column: 7, scope: !5755)
!5759 = !DILocation(line: 146, column: 2, scope: !5755)
!5760 = !DILocation(line: 148, column: 2, scope: !5734)
!5761 = !DILocation(line: 149, column: 1, scope: !5734)
!5762 = distinct !DISubprogram(name: "free_list_remove", scope: !5639, file: !5639, line: 60, type: !5735, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5763)
!5763 = !{!5764, !5765, !5766}
!5764 = !DILocalVariable(name: "h", arg: 1, scope: !5762, file: !5639, line: 60, type: !3430)
!5765 = !DILocalVariable(name: "c", arg: 2, scope: !5762, file: !5639, line: 60, type: !3435)
!5766 = !DILocalVariable(name: "bidx", scope: !5767, file: !5639, line: 63, type: !103)
!5767 = distinct !DILexicalBlock(scope: !5768, file: !5639, line: 62, column: 31)
!5768 = distinct !DILexicalBlock(scope: !5762, file: !5639, line: 62, column: 6)
!5769 = !DILocation(line: 0, scope: !5762)
!5770 = !DILocation(line: 63, column: 28, scope: !5767)
!5771 = !{i32 0, i32 32768}
!5772 = !DILocation(line: 63, column: 14, scope: !5767)
!5773 = !DILocation(line: 0, scope: !5767)
!5774 = !DILocation(line: 64, column: 3, scope: !5767)
!5775 = !DILocation(line: 66, column: 1, scope: !5762)
!5776 = distinct !DISubprogram(name: "merge_chunks", scope: !5639, file: !5639, line: 125, type: !5777, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5779)
!5777 = !DISubroutineType(types: !5778)
!5778 = !{null, !3430, !3435, !3435}
!5779 = !{!5780, !5781, !5782, !5783}
!5780 = !DILocalVariable(name: "h", arg: 1, scope: !5776, file: !5639, line: 125, type: !3430)
!5781 = !DILocalVariable(name: "lc", arg: 2, scope: !5776, file: !5639, line: 125, type: !3435)
!5782 = !DILocalVariable(name: "rc", arg: 3, scope: !5776, file: !5639, line: 125, type: !3435)
!5783 = !DILocalVariable(name: "newsz", scope: !5776, file: !5639, line: 127, type: !5784)
!5784 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !3417, line: 62, baseType: !108)
!5785 = !DILocation(line: 0, scope: !5776)
!5786 = !DILocation(line: 127, column: 20, scope: !5776)
!5787 = !DILocation(line: 127, column: 40, scope: !5776)
!5788 = !DILocation(line: 127, column: 38, scope: !5776)
!5789 = !DILocation(line: 129, column: 2, scope: !5776)
!5790 = !DILocation(line: 130, column: 25, scope: !5776)
!5791 = !DILocation(line: 130, column: 2, scope: !5776)
!5792 = !DILocation(line: 131, column: 1, scope: !5776)
!5793 = distinct !DISubprogram(name: "free_list_add", scope: !5639, file: !5639, line: 98, type: !5735, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5794)
!5794 = !{!5795, !5796, !5797}
!5795 = !DILocalVariable(name: "h", arg: 1, scope: !5793, file: !5639, line: 98, type: !3430)
!5796 = !DILocalVariable(name: "c", arg: 2, scope: !5793, file: !5639, line: 98, type: !3435)
!5797 = !DILocalVariable(name: "bidx", scope: !5798, file: !5639, line: 101, type: !103)
!5798 = distinct !DILexicalBlock(scope: !5799, file: !5639, line: 100, column: 31)
!5799 = distinct !DILexicalBlock(scope: !5793, file: !5639, line: 100, column: 6)
!5800 = !DILocation(line: 0, scope: !5793)
!5801 = !DILocation(line: 101, column: 28, scope: !5798)
!5802 = !DILocation(line: 101, column: 14, scope: !5798)
!5803 = !DILocation(line: 0, scope: !5798)
!5804 = !DILocation(line: 102, column: 3, scope: !5798)
!5805 = !DILocation(line: 104, column: 1, scope: !5793)
!5806 = distinct !DISubprogram(name: "chunk_size", scope: !3417, file: !3417, line: 142, type: !5807, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5809)
!5807 = !DISubroutineType(types: !5808)
!5808 = !{!5784, !3430, !3435}
!5809 = !{!5810, !5811}
!5810 = !DILocalVariable(name: "h", arg: 1, scope: !5806, file: !3417, line: 142, type: !3430)
!5811 = !DILocalVariable(name: "c", arg: 2, scope: !5806, file: !3417, line: 142, type: !3435)
!5812 = !DILocation(line: 0, scope: !5806)
!5813 = !DILocation(line: 144, column: 9, scope: !5806)
!5814 = !DILocation(line: 144, column: 42, scope: !5806)
!5815 = !DILocation(line: 144, column: 2, scope: !5806)
!5816 = distinct !DISubprogram(name: "bucket_idx", scope: !3417, file: !3417, line: 250, type: !5817, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5819)
!5817 = !DISubroutineType(types: !5818)
!5818 = !{!103, !3430, !5784}
!5819 = !{!5820, !5821, !5822}
!5820 = !DILocalVariable(name: "h", arg: 1, scope: !5816, file: !3417, line: 250, type: !3430)
!5821 = !DILocalVariable(name: "sz", arg: 2, scope: !5816, file: !3417, line: 250, type: !5784)
!5822 = !DILocalVariable(name: "usable_sz", scope: !5816, file: !3417, line: 252, type: !32)
!5823 = !DILocation(line: 0, scope: !5816)
!5824 = !DILocation(line: 252, column: 32, scope: !5816)
!5825 = !DILocation(line: 252, column: 30, scope: !5816)
!5826 = !DILocation(line: 252, column: 50, scope: !5816)
!5827 = !DILocation(line: 253, column: 14, scope: !5816)
!5828 = !{i32 0, i32 33}
!5829 = !DILocation(line: 253, column: 12, scope: !5816)
!5830 = !DILocation(line: 253, column: 2, scope: !5816)
!5831 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5639, file: !5639, line: 68, type: !5832, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5834)
!5832 = !DISubroutineType(types: !5833)
!5833 = !{null, !3430, !3435, !103}
!5834 = !{!5835, !5836, !5837, !5838, !5840, !5843}
!5835 = !DILocalVariable(name: "h", arg: 1, scope: !5831, file: !5639, line: 68, type: !3430)
!5836 = !DILocalVariable(name: "c", arg: 2, scope: !5831, file: !5639, line: 68, type: !3435)
!5837 = !DILocalVariable(name: "bidx", arg: 3, scope: !5831, file: !5639, line: 68, type: !103)
!5838 = !DILocalVariable(name: "b", scope: !5831, file: !5639, line: 70, type: !5839)
!5839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 32)
!5840 = !DILocalVariable(name: "second", scope: !5841, file: !5639, line: 84, type: !3435)
!5841 = distinct !DILexicalBlock(scope: !5842, file: !5639, line: 80, column: 9)
!5842 = distinct !DILexicalBlock(scope: !5831, file: !5639, line: 72, column: 6)
!5843 = !DILocalVariable(name: "first", scope: !5841, file: !5639, line: 85, type: !3435)
!5844 = !DILocation(line: 0, scope: !5831)
!5845 = !DILocation(line: 72, column: 9, scope: !5842)
!5846 = !DILocation(line: 72, column: 14, scope: !5842)
!5847 = !DILocation(line: 72, column: 6, scope: !5831)
!5848 = !DILocation(line: 76, column: 23, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5842, file: !5639, line: 72, column: 21)
!5850 = !DILocation(line: 76, column: 6, scope: !5849)
!5851 = !DILocation(line: 76, column: 20, scope: !5849)
!5852 = !DILocation(line: 77, column: 11, scope: !5849)
!5853 = !DILocation(line: 78, column: 3, scope: !5849)
!5854 = !DILocation(line: 79, column: 3, scope: !5849)
!5855 = !DILocation(line: 80, column: 2, scope: !5849)
!5856 = !DILocation(line: 0, scope: !5841)
!5857 = !DILocation(line: 85, column: 21, scope: !5841)
!5858 = !{i32 0, i32 65536}
!5859 = !DILocation(line: 87, column: 3, scope: !5841)
!5860 = !DILocation(line: 88, column: 3, scope: !5841)
!5861 = !DILocation(line: 89, column: 3, scope: !5841)
!5862 = !DILocation(line: 90, column: 3, scope: !5841)
!5863 = !DILocation(line: 96, column: 1, scope: !5831)
!5864 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !3417, file: !3417, line: 187, type: !5777, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5865)
!5865 = !{!5866, !5867, !5868}
!5866 = !DILocalVariable(name: "h", arg: 1, scope: !5864, file: !3417, line: 187, type: !3430)
!5867 = !DILocalVariable(name: "c", arg: 2, scope: !5864, file: !3417, line: 187, type: !3435)
!5868 = !DILocalVariable(name: "prev", arg: 3, scope: !5864, file: !3417, line: 188, type: !3435)
!5869 = !DILocation(line: 0, scope: !5864)
!5870 = !DILocation(line: 190, column: 2, scope: !5864)
!5871 = !DILocation(line: 191, column: 1, scope: !5864)
!5872 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !3417, file: !3417, line: 193, type: !5777, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5873)
!5873 = !{!5874, !5875, !5876}
!5874 = !DILocalVariable(name: "h", arg: 1, scope: !5872, file: !3417, line: 193, type: !3430)
!5875 = !DILocalVariable(name: "c", arg: 2, scope: !5872, file: !3417, line: 193, type: !3435)
!5876 = !DILocalVariable(name: "next", arg: 3, scope: !5872, file: !3417, line: 194, type: !3435)
!5877 = !DILocation(line: 0, scope: !5872)
!5878 = !DILocation(line: 196, column: 2, scope: !5872)
!5879 = !DILocation(line: 197, column: 1, scope: !5872)
!5880 = distinct !DISubprogram(name: "prev_free_chunk", scope: !3417, file: !3417, line: 177, type: !5700, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5881)
!5881 = !{!5882, !5883}
!5882 = !DILocalVariable(name: "h", arg: 1, scope: !5880, file: !3417, line: 177, type: !3430)
!5883 = !DILocalVariable(name: "c", arg: 2, scope: !5880, file: !3417, line: 177, type: !3435)
!5884 = !DILocation(line: 0, scope: !5880)
!5885 = !DILocation(line: 179, column: 9, scope: !5880)
!5886 = !DILocation(line: 179, column: 2, scope: !5880)
!5887 = distinct !DISubprogram(name: "chunk_field", scope: !3417, file: !3417, line: 107, type: !5888, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5890)
!5888 = !DISubroutineType(types: !5889)
!5889 = !{!3435, !3430, !3435, !3416}
!5890 = !{!5891, !5892, !5893, !5894, !5895}
!5891 = !DILocalVariable(name: "h", arg: 1, scope: !5887, file: !3417, line: 107, type: !3430)
!5892 = !DILocalVariable(name: "c", arg: 2, scope: !5887, file: !3417, line: 107, type: !3435)
!5893 = !DILocalVariable(name: "f", arg: 3, scope: !5887, file: !3417, line: 108, type: !3416)
!5894 = !DILocalVariable(name: "buf", scope: !5887, file: !3417, line: 110, type: !3424)
!5895 = !DILocalVariable(name: "cmem", scope: !5887, file: !3417, line: 111, type: !102)
!5896 = !DILocation(line: 0, scope: !5887)
!5897 = !DILocation(line: 110, column: 22, scope: !5887)
!5898 = !DILocation(line: 111, column: 15, scope: !5887)
!5899 = !DILocation(line: 116, column: 11, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5901, file: !3417, line: 115, column: 9)
!5901 = distinct !DILexicalBlock(scope: !5887, file: !3417, line: 113, column: 6)
!5902 = !DILocation(line: 116, column: 10, scope: !5900)
!5903 = !DILocation(line: 118, column: 1, scope: !5887)
!5904 = distinct !DISubprogram(name: "chunk_buf", scope: !3417, file: !3417, line: 101, type: !5905, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5907)
!5905 = !DISubroutineType(types: !5906)
!5906 = !{!3424, !3430}
!5907 = !{!5908}
!5908 = !DILocalVariable(name: "h", arg: 1, scope: !5904, file: !3417, line: 101, type: !3430)
!5909 = !DILocation(line: 0, scope: !5904)
!5910 = !DILocation(line: 104, column: 9, scope: !5904)
!5911 = !DILocation(line: 104, column: 2, scope: !5904)
!5912 = distinct !DISubprogram(name: "chunk_set", scope: !3417, file: !3417, line: 120, type: !5913, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5915)
!5913 = !DISubroutineType(types: !5914)
!5914 = !{null, !3430, !3435, !3416, !3435}
!5915 = !{!5916, !5917, !5918, !5919, !5920, !5921}
!5916 = !DILocalVariable(name: "h", arg: 1, scope: !5912, file: !3417, line: 120, type: !3430)
!5917 = !DILocalVariable(name: "c", arg: 2, scope: !5912, file: !3417, line: 120, type: !3435)
!5918 = !DILocalVariable(name: "f", arg: 3, scope: !5912, file: !3417, line: 121, type: !3416)
!5919 = !DILocalVariable(name: "val", arg: 4, scope: !5912, file: !3417, line: 121, type: !3435)
!5920 = !DILocalVariable(name: "buf", scope: !5912, file: !3417, line: 125, type: !3424)
!5921 = !DILocalVariable(name: "cmem", scope: !5912, file: !3417, line: 126, type: !102)
!5922 = !DILocation(line: 0, scope: !5912)
!5923 = !DILocation(line: 125, column: 22, scope: !5912)
!5924 = !DILocation(line: 126, column: 15, scope: !5912)
!5925 = !DILocation(line: 133, column: 27, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5927, file: !3417, line: 131, column: 9)
!5927 = distinct !DILexicalBlock(scope: !5912, file: !3417, line: 128, column: 6)
!5928 = !DILocation(line: 133, column: 4, scope: !5926)
!5929 = !DILocation(line: 133, column: 3, scope: !5926)
!5930 = !DILocation(line: 133, column: 25, scope: !5926)
!5931 = !DILocation(line: 135, column: 1, scope: !5912)
!5932 = distinct !DISubprogram(name: "min_chunk_size", scope: !3417, file: !3417, line: 240, type: !5933, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5935)
!5933 = !DISubroutineType(types: !5934)
!5934 = !{!5784, !3430}
!5935 = !{!5936}
!5936 = !DILocalVariable(name: "h", arg: 1, scope: !5932, file: !3417, line: 240, type: !3430)
!5937 = !DILocation(line: 0, scope: !5932)
!5938 = !DILocation(line: 242, column: 9, scope: !5932)
!5939 = !DILocation(line: 242, column: 2, scope: !5932)
!5940 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !3417, file: !3417, line: 235, type: !5941, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5943)
!5941 = !DISubroutineType(types: !5942)
!5942 = !{!5784, !3430, !153}
!5943 = !{!5944, !5945}
!5944 = !DILocalVariable(name: "h", arg: 1, scope: !5940, file: !3417, line: 235, type: !3430)
!5945 = !DILocalVariable(name: "bytes", arg: 2, scope: !5940, file: !3417, line: 235, type: !153)
!5946 = !DILocation(line: 0, scope: !5940)
!5947 = !DILocation(line: 237, column: 39, scope: !5940)
!5948 = !DILocation(line: 237, column: 9, scope: !5940)
!5949 = !DILocation(line: 237, column: 2, scope: !5940)
!5950 = distinct !DISubprogram(name: "chunksz", scope: !3417, file: !3417, line: 230, type: !5951, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5953)
!5951 = !DISubroutineType(types: !5952)
!5952 = !{!5784, !153}
!5953 = !{!5954}
!5954 = !DILocalVariable(name: "bytes", arg: 1, scope: !5950, file: !3417, line: 230, type: !153)
!5955 = !DILocation(line: 0, scope: !5950)
!5956 = !DILocation(line: 232, column: 29, scope: !5950)
!5957 = !DILocation(line: 232, column: 35, scope: !5950)
!5958 = !DILocation(line: 232, column: 2, scope: !5950)
!5959 = distinct !DISubprogram(name: "set_chunk_size", scope: !3417, file: !3417, line: 172, type: !5960, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5962)
!5960 = !DISubroutineType(types: !5961)
!5961 = !{null, !3430, !3435, !5784}
!5962 = !{!5963, !5964, !5965}
!5963 = !DILocalVariable(name: "h", arg: 1, scope: !5959, file: !3417, line: 172, type: !3430)
!5964 = !DILocalVariable(name: "c", arg: 2, scope: !5959, file: !3417, line: 172, type: !3435)
!5965 = !DILocalVariable(name: "size", arg: 3, scope: !5959, file: !3417, line: 172, type: !5784)
!5966 = !DILocation(line: 0, scope: !5959)
!5967 = !DILocation(line: 174, column: 38, scope: !5959)
!5968 = !DILocation(line: 174, column: 2, scope: !5959)
!5969 = !DILocation(line: 175, column: 1, scope: !5959)
!5970 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !3417, file: !3417, line: 209, type: !5960, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5971)
!5971 = !{!5972, !5973, !5974}
!5972 = !DILocalVariable(name: "h", arg: 1, scope: !5970, file: !3417, line: 209, type: !3430)
!5973 = !DILocalVariable(name: "c", arg: 2, scope: !5970, file: !3417, line: 209, type: !3435)
!5974 = !DILocalVariable(name: "size", arg: 3, scope: !5970, file: !3417, line: 210, type: !5784)
!5975 = !DILocation(line: 0, scope: !5970)
!5976 = !DILocation(line: 212, column: 2, scope: !5970)
!5977 = !DILocation(line: 213, column: 1, scope: !5970)
!5978 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5639, file: !5639, line: 34, type: !5832, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !5979)
!5979 = !{!5980, !5981, !5982, !5983, !5984, !5987}
!5980 = !DILocalVariable(name: "h", arg: 1, scope: !5978, file: !5639, line: 34, type: !3430)
!5981 = !DILocalVariable(name: "c", arg: 2, scope: !5978, file: !5639, line: 34, type: !3435)
!5982 = !DILocalVariable(name: "bidx", arg: 3, scope: !5978, file: !5639, line: 34, type: !103)
!5983 = !DILocalVariable(name: "b", scope: !5978, file: !5639, line: 36, type: !5839)
!5984 = !DILocalVariable(name: "first", scope: !5985, file: !5639, line: 47, type: !3435)
!5985 = distinct !DILexicalBlock(scope: !5986, file: !5639, line: 46, column: 9)
!5986 = distinct !DILexicalBlock(scope: !5978, file: !5639, line: 42, column: 6)
!5987 = !DILocalVariable(name: "second", scope: !5985, file: !5639, line: 48, type: !3435)
!5988 = !DILocation(line: 0, scope: !5978)
!5989 = !DILocation(line: 36, column: 29, scope: !5978)
!5990 = !DILocation(line: 42, column: 6, scope: !5986)
!5991 = !DILocation(line: 42, column: 28, scope: !5986)
!5992 = !DILocation(line: 42, column: 6, scope: !5978)
!5993 = !DILocation(line: 44, column: 24, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5986, file: !5639, line: 42, column: 34)
!5995 = !DILocation(line: 44, column: 23, scope: !5994)
!5996 = !DILocation(line: 44, column: 6, scope: !5994)
!5997 = !DILocation(line: 44, column: 20, scope: !5994)
!5998 = !DILocation(line: 45, column: 6, scope: !5994)
!5999 = !DILocation(line: 45, column: 11, scope: !5994)
!6000 = !DILocation(line: 46, column: 2, scope: !5994)
!6001 = !DILocation(line: 47, column: 21, scope: !5985)
!6002 = !DILocation(line: 0, scope: !5985)
!6003 = !DILocation(line: 50, column: 6, scope: !5985)
!6004 = !DILocation(line: 50, column: 11, scope: !5985)
!6005 = !DILocation(line: 51, column: 3, scope: !5985)
!6006 = !DILocation(line: 52, column: 3, scope: !5985)
!6007 = !DILocation(line: 58, column: 1, scope: !5978)
!6008 = distinct !DISubprogram(name: "next_free_chunk", scope: !3417, file: !3417, line: 182, type: !5700, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !6009)
!6009 = !{!6010, !6011}
!6010 = !DILocalVariable(name: "h", arg: 1, scope: !6008, file: !3417, line: 182, type: !3430)
!6011 = !DILocalVariable(name: "c", arg: 2, scope: !6008, file: !3417, line: 182, type: !3435)
!6012 = !DILocation(line: 0, scope: !6008)
!6013 = !DILocation(line: 184, column: 9, scope: !6008)
!6014 = !DILocation(line: 184, column: 2, scope: !6008)
!6015 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5639, file: !5639, line: 200, type: !6016, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !6018)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{!153, !5642, !102}
!6018 = !{!6019, !6020, !6021, !6022, !6023, !6024, !6025}
!6019 = !DILocalVariable(name: "heap", arg: 1, scope: !6015, file: !5639, line: 200, type: !5642)
!6020 = !DILocalVariable(name: "mem", arg: 2, scope: !6015, file: !5639, line: 200, type: !102)
!6021 = !DILocalVariable(name: "h", scope: !6015, file: !5639, line: 202, type: !3430)
!6022 = !DILocalVariable(name: "c", scope: !6015, file: !5639, line: 203, type: !3435)
!6023 = !DILocalVariable(name: "addr", scope: !6015, file: !5639, line: 204, type: !153)
!6024 = !DILocalVariable(name: "chunk_base", scope: !6015, file: !5639, line: 205, type: !153)
!6025 = !DILocalVariable(name: "chunk_sz", scope: !6015, file: !5639, line: 206, type: !153)
!6026 = !DILocation(line: 0, scope: !6015)
!6027 = !DILocation(line: 202, column: 27, scope: !6015)
!6028 = !DILocation(line: 203, column: 16, scope: !6015)
!6029 = !DILocation(line: 204, column: 16, scope: !6015)
!6030 = !DILocation(line: 205, column: 31, scope: !6015)
!6031 = !DILocation(line: 205, column: 22, scope: !6015)
!6032 = !DILocation(line: 206, column: 20, scope: !6015)
!6033 = !DILocation(line: 206, column: 37, scope: !6015)
!6034 = !DILocation(line: 208, column: 26, scope: !6015)
!6035 = !DILocation(line: 208, column: 18, scope: !6015)
!6036 = !DILocation(line: 208, column: 2, scope: !6015)
!6037 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5639, file: !5639, line: 263, type: !6038, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !6040)
!6038 = !DISubroutineType(types: !6039)
!6039 = !{!102, !5642, !153}
!6040 = !{!6041, !6042, !6043, !6044, !6045, !6046}
!6041 = !DILocalVariable(name: "heap", arg: 1, scope: !6037, file: !5639, line: 263, type: !5642)
!6042 = !DILocalVariable(name: "bytes", arg: 2, scope: !6037, file: !5639, line: 263, type: !153)
!6043 = !DILocalVariable(name: "h", scope: !6037, file: !5639, line: 265, type: !3430)
!6044 = !DILocalVariable(name: "mem", scope: !6037, file: !5639, line: 266, type: !102)
!6045 = !DILocalVariable(name: "chunk_sz", scope: !6037, file: !5639, line: 272, type: !5784)
!6046 = !DILocalVariable(name: "c", scope: !6037, file: !5639, line: 273, type: !3435)
!6047 = !DILocation(line: 0, scope: !6037)
!6048 = !DILocation(line: 265, column: 27, scope: !6037)
!6049 = !DILocation(line: 268, column: 12, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6037, file: !5639, line: 268, column: 6)
!6051 = !DILocation(line: 268, column: 18, scope: !6050)
!6052 = !DILocation(line: 268, column: 21, scope: !6050)
!6053 = !DILocation(line: 268, column: 6, scope: !6037)
!6054 = !DILocation(line: 272, column: 23, scope: !6037)
!6055 = !DILocation(line: 273, column: 16, scope: !6037)
!6056 = !DILocation(line: 274, column: 8, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6037, file: !5639, line: 274, column: 6)
!6058 = !DILocation(line: 274, column: 6, scope: !6037)
!6059 = !DILocation(line: 279, column: 6, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6037, file: !5639, line: 279, column: 6)
!6061 = !DILocation(line: 279, column: 23, scope: !6060)
!6062 = !DILocation(line: 279, column: 6, scope: !6037)
!6063 = !DILocation(line: 280, column: 24, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6060, file: !5639, line: 279, column: 35)
!6065 = !DILocation(line: 280, column: 3, scope: !6064)
!6066 = !DILocation(line: 281, column: 3, scope: !6064)
!6067 = !DILocation(line: 282, column: 2, scope: !6064)
!6068 = !DILocation(line: 284, column: 2, scope: !6037)
!6069 = !DILocation(line: 286, column: 8, scope: !6037)
!6070 = !DILocation(line: 298, column: 2, scope: !6037)
!6071 = !DILocation(line: 299, column: 1, scope: !6037)
!6072 = distinct !DISubprogram(name: "size_too_big", scope: !3417, file: !3417, line: 256, type: !6073, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !6075)
!6073 = !DISubroutineType(types: !6074)
!6074 = !{!119, !3430, !153}
!6075 = !{!6076, !6077}
!6076 = !DILocalVariable(name: "h", arg: 1, scope: !6072, file: !3417, line: 256, type: !3430)
!6077 = !DILocalVariable(name: "bytes", arg: 2, scope: !6072, file: !3417, line: 256, type: !153)
!6078 = !DILocation(line: 0, scope: !6072)
!6079 = !DILocation(line: 262, column: 16, scope: !6072)
!6080 = !DILocation(line: 262, column: 36, scope: !6072)
!6081 = !DILocation(line: 262, column: 30, scope: !6072)
!6082 = !DILocation(line: 262, column: 2, scope: !6072)
!6083 = distinct !DISubprogram(name: "alloc_chunk", scope: !5639, file: !5639, line: 211, type: !6084, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !6086)
!6084 = !DISubroutineType(types: !6085)
!6085 = !{!3435, !3430, !5784}
!6086 = !{!6087, !6088, !6089, !6090, !6091, !6094, !6095, !6097, !6098, !6101}
!6087 = !DILocalVariable(name: "h", arg: 1, scope: !6083, file: !5639, line: 211, type: !3430)
!6088 = !DILocalVariable(name: "sz", arg: 2, scope: !6083, file: !5639, line: 211, type: !5784)
!6089 = !DILocalVariable(name: "bi", scope: !6083, file: !5639, line: 213, type: !103)
!6090 = !DILocalVariable(name: "b", scope: !6083, file: !5639, line: 214, type: !5839)
!6091 = !DILocalVariable(name: "first", scope: !6092, file: !5639, line: 233, type: !3435)
!6092 = distinct !DILexicalBlock(scope: !6093, file: !5639, line: 232, column: 15)
!6093 = distinct !DILexicalBlock(scope: !6083, file: !5639, line: 232, column: 6)
!6094 = !DILocalVariable(name: "i", scope: !6092, file: !5639, line: 234, type: !103)
!6095 = !DILocalVariable(name: "c", scope: !6096, file: !5639, line: 236, type: !3435)
!6096 = distinct !DILexicalBlock(scope: !6092, file: !5639, line: 235, column: 6)
!6097 = !DILocalVariable(name: "bmask", scope: !6083, file: !5639, line: 249, type: !108)
!6098 = !DILocalVariable(name: "minbucket", scope: !6099, file: !5639, line: 252, type: !103)
!6099 = distinct !DILexicalBlock(scope: !6100, file: !5639, line: 251, column: 19)
!6100 = distinct !DILexicalBlock(scope: !6083, file: !5639, line: 251, column: 6)
!6101 = !DILocalVariable(name: "c", scope: !6099, file: !5639, line: 253, type: !3435)
!6102 = !DILocation(line: 0, scope: !6083)
!6103 = !DILocation(line: 213, column: 11, scope: !6083)
!6104 = !DILocation(line: 232, column: 9, scope: !6093)
!6105 = !DILocation(line: 232, column: 6, scope: !6093)
!6106 = !DILocation(line: 232, column: 6, scope: !6083)
!6107 = !DILocation(line: 236, column: 21, scope: !6096)
!6108 = !DILocation(line: 0, scope: !6092)
!6109 = !DILocation(line: 0, scope: !6096)
!6110 = !DILocation(line: 237, column: 8, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6096, file: !5639, line: 237, column: 8)
!6112 = !DILocation(line: 237, column: 25, scope: !6111)
!6113 = !DILocation(line: 237, column: 8, scope: !6096)
!6114 = !DILocation(line: 238, column: 5, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6111, file: !5639, line: 237, column: 32)
!6116 = !DILocation(line: 241, column: 14, scope: !6096)
!6117 = !DILocation(line: 241, column: 12, scope: !6096)
!6118 = !DILocation(line: 243, column: 12, scope: !6092)
!6119 = !DILocation(line: 243, column: 16, scope: !6092)
!6120 = distinct !{!6120, !6121, !6122}
!6121 = !DILocation(line: 235, column: 3, scope: !6092)
!6122 = !DILocation(line: 243, column: 35, scope: !6092)
!6123 = !DILocation(line: 249, column: 22, scope: !6083)
!6124 = !DILocation(line: 249, column: 39, scope: !6083)
!6125 = !DILocation(line: 249, column: 36, scope: !6083)
!6126 = !DILocation(line: 251, column: 12, scope: !6100)
!6127 = !DILocation(line: 251, column: 6, scope: !6083)
!6128 = !DILocation(line: 252, column: 19, scope: !6099)
!6129 = !DILocation(line: 0, scope: !6099)
!6130 = !DILocation(line: 253, column: 39, scope: !6099)
!6131 = !DILocation(line: 255, column: 3, scope: !6099)
!6132 = !DILocation(line: 261, column: 1, scope: !6083)
!6133 = distinct !DISubprogram(name: "split_chunks", scope: !5639, file: !5639, line: 109, type: !5777, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !6134)
!6134 = !{!6135, !6136, !6137, !6138, !6139, !6140}
!6135 = !DILocalVariable(name: "h", arg: 1, scope: !6133, file: !5639, line: 109, type: !3430)
!6136 = !DILocalVariable(name: "lc", arg: 2, scope: !6133, file: !5639, line: 109, type: !3435)
!6137 = !DILocalVariable(name: "rc", arg: 3, scope: !6133, file: !5639, line: 109, type: !3435)
!6138 = !DILocalVariable(name: "sz0", scope: !6133, file: !5639, line: 114, type: !5784)
!6139 = !DILocalVariable(name: "lsz", scope: !6133, file: !5639, line: 115, type: !5784)
!6140 = !DILocalVariable(name: "rsz", scope: !6133, file: !5639, line: 116, type: !5784)
!6141 = !DILocation(line: 0, scope: !6133)
!6142 = !DILocation(line: 114, column: 18, scope: !6133)
!6143 = !DILocation(line: 115, column: 21, scope: !6133)
!6144 = !DILocation(line: 116, column: 22, scope: !6133)
!6145 = !DILocation(line: 118, column: 2, scope: !6133)
!6146 = !DILocation(line: 119, column: 2, scope: !6133)
!6147 = !DILocation(line: 120, column: 2, scope: !6133)
!6148 = !DILocation(line: 121, column: 25, scope: !6133)
!6149 = !DILocation(line: 121, column: 2, scope: !6133)
!6150 = !DILocation(line: 122, column: 1, scope: !6133)
!6151 = distinct !DISubprogram(name: "chunk_mem", scope: !5639, file: !5639, line: 24, type: !6152, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !6154)
!6152 = !DISubroutineType(types: !6153)
!6153 = !{!102, !3430, !3435}
!6154 = !{!6155, !6156, !6157, !6158}
!6155 = !DILocalVariable(name: "h", arg: 1, scope: !6151, file: !5639, line: 24, type: !3430)
!6156 = !DILocalVariable(name: "c", arg: 2, scope: !6151, file: !5639, line: 24, type: !3435)
!6157 = !DILocalVariable(name: "buf", scope: !6151, file: !5639, line: 26, type: !3424)
!6158 = !DILocalVariable(name: "ret", scope: !6151, file: !5639, line: 27, type: !783)
!6159 = !DILocation(line: 0, scope: !6151)
!6160 = !DILocation(line: 26, column: 22, scope: !6151)
!6161 = !DILocation(line: 27, column: 38, scope: !6151)
!6162 = !DILocation(line: 31, column: 2, scope: !6151)
!6163 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5639, file: !5639, line: 301, type: !6164, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !6166)
!6164 = !DISubroutineType(types: !6165)
!6165 = !{!102, !5642, !153, !153}
!6166 = !{!6167, !6168, !6169, !6170, !6171, !6172, !6173, !6174, !6175, !6176, !6177, !6178}
!6167 = !DILocalVariable(name: "heap", arg: 1, scope: !6163, file: !5639, line: 301, type: !5642)
!6168 = !DILocalVariable(name: "align", arg: 2, scope: !6163, file: !5639, line: 301, type: !153)
!6169 = !DILocalVariable(name: "bytes", arg: 3, scope: !6163, file: !5639, line: 301, type: !153)
!6170 = !DILocalVariable(name: "h", scope: !6163, file: !5639, line: 303, type: !3430)
!6171 = !DILocalVariable(name: "gap", scope: !6163, file: !5639, line: 304, type: !153)
!6172 = !DILocalVariable(name: "rew", scope: !6163, file: !5639, line: 304, type: !153)
!6173 = !DILocalVariable(name: "padded_sz", scope: !6163, file: !5639, line: 335, type: !5784)
!6174 = !DILocalVariable(name: "c0", scope: !6163, file: !5639, line: 336, type: !3435)
!6175 = !DILocalVariable(name: "mem", scope: !6163, file: !5639, line: 341, type: !783)
!6176 = !DILocalVariable(name: "end", scope: !6163, file: !5639, line: 345, type: !3424)
!6177 = !DILocalVariable(name: "c", scope: !6163, file: !5639, line: 348, type: !3435)
!6178 = !DILocalVariable(name: "c_end", scope: !6163, file: !5639, line: 349, type: !3435)
!6179 = !DILocation(line: 0, scope: !6163)
!6180 = !DILocation(line: 303, column: 27, scope: !6163)
!6181 = !DILocation(line: 313, column: 16, scope: !6163)
!6182 = !DILocation(line: 313, column: 14, scope: !6163)
!6183 = !DILocation(line: 314, column: 12, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6163, file: !5639, line: 314, column: 6)
!6185 = !DILocation(line: 314, column: 6, scope: !6163)
!6186 = !DILocation(line: 315, column: 9, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6184, file: !5639, line: 314, column: 20)
!6188 = !DILocation(line: 316, column: 9, scope: !6187)
!6189 = !DILocation(line: 318, column: 13, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !5639, line: 318, column: 7)
!6191 = distinct !DILexicalBlock(scope: !6184, file: !5639, line: 317, column: 9)
!6192 = !DILocation(line: 318, column: 7, scope: !6191)
!6193 = !DILocation(line: 319, column: 11, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6190, file: !5639, line: 318, column: 39)
!6195 = !DILocation(line: 319, column: 4, scope: !6194)
!6196 = !DILocation(line: 0, scope: !6184)
!6197 = !DILocation(line: 324, column: 2, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6199, file: !5639, line: 324, column: 2)
!6199 = distinct !DILexicalBlock(scope: !6163, file: !5639, line: 324, column: 2)
!6200 = !DILocation(line: 324, column: 2, scope: !6199)
!6201 = !DILocation(line: 324, column: 2, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6198, file: !5639, line: 324, column: 2)
!6203 = !DILocation(line: 326, column: 12, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6163, file: !5639, line: 326, column: 6)
!6205 = !DILocation(line: 326, column: 17, scope: !6204)
!6206 = !DILocation(line: 326, column: 20, scope: !6204)
!6207 = !DILocation(line: 326, column: 6, scope: !6163)
!6208 = !DILocation(line: 335, column: 50, scope: !6163)
!6209 = !DILocation(line: 335, column: 58, scope: !6163)
!6210 = !DILocation(line: 335, column: 24, scope: !6163)
!6211 = !DILocation(line: 336, column: 17, scope: !6163)
!6212 = !DILocation(line: 338, column: 9, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6163, file: !5639, line: 338, column: 6)
!6214 = !DILocation(line: 338, column: 6, scope: !6163)
!6215 = !DILocation(line: 341, column: 17, scope: !6163)
!6216 = !DILocation(line: 344, column: 20, scope: !6163)
!6217 = !DILocation(line: 344, column: 8, scope: !6163)
!6218 = !DILocation(line: 344, column: 47, scope: !6163)
!6219 = !DILocation(line: 345, column: 39, scope: !6163)
!6220 = !DILocation(line: 348, column: 16, scope: !6163)
!6221 = !DILocation(line: 349, column: 26, scope: !6163)
!6222 = !DILocation(line: 349, column: 24, scope: !6163)
!6223 = !DILocation(line: 353, column: 8, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6163, file: !5639, line: 353, column: 6)
!6225 = !DILocation(line: 353, column: 6, scope: !6163)
!6226 = !DILocation(line: 354, column: 3, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6224, file: !5639, line: 353, column: 14)
!6228 = !DILocation(line: 355, column: 3, scope: !6227)
!6229 = !DILocation(line: 356, column: 2, scope: !6227)
!6230 = !DILocation(line: 359, column: 6, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6163, file: !5639, line: 359, column: 6)
!6232 = !DILocation(line: 359, column: 24, scope: !6231)
!6233 = !DILocation(line: 359, column: 6, scope: !6163)
!6234 = !DILocation(line: 360, column: 3, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6231, file: !5639, line: 359, column: 33)
!6236 = !DILocation(line: 361, column: 3, scope: !6235)
!6237 = !DILocation(line: 362, column: 2, scope: !6235)
!6238 = !DILocation(line: 364, column: 2, scope: !6163)
!6239 = !DILocation(line: 377, column: 1, scope: !6163)
!6240 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5639, file: !5639, line: 379, type: !6241, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !6243)
!6241 = !DISubroutineType(types: !6242)
!6242 = !{!102, !5642, !102, !153, !153}
!6243 = !{!6244, !6245, !6246, !6247, !6248, !6249, !6250, !6251, !6252, !6253, !6259, !6260}
!6244 = !DILocalVariable(name: "heap", arg: 1, scope: !6240, file: !5639, line: 379, type: !5642)
!6245 = !DILocalVariable(name: "ptr", arg: 2, scope: !6240, file: !5639, line: 379, type: !102)
!6246 = !DILocalVariable(name: "align", arg: 3, scope: !6240, file: !5639, line: 380, type: !153)
!6247 = !DILocalVariable(name: "bytes", arg: 4, scope: !6240, file: !5639, line: 380, type: !153)
!6248 = !DILocalVariable(name: "h", scope: !6240, file: !5639, line: 382, type: !3430)
!6249 = !DILocalVariable(name: "c", scope: !6240, file: !5639, line: 399, type: !3435)
!6250 = !DILocalVariable(name: "rc", scope: !6240, file: !5639, line: 400, type: !3435)
!6251 = !DILocalVariable(name: "align_gap", scope: !6240, file: !5639, line: 401, type: !153)
!6252 = !DILocalVariable(name: "chunks_need", scope: !6240, file: !5639, line: 402, type: !5784)
!6253 = !DILocalVariable(name: "split_size", scope: !6254, file: !5639, line: 435, type: !5784)
!6254 = distinct !DILexicalBlock(scope: !6255, file: !5639, line: 433, column: 61)
!6255 = distinct !DILexicalBlock(scope: !6256, file: !5639, line: 432, column: 13)
!6256 = distinct !DILexicalBlock(scope: !6257, file: !5639, line: 409, column: 13)
!6257 = distinct !DILexicalBlock(scope: !6258, file: !5639, line: 406, column: 13)
!6258 = distinct !DILexicalBlock(scope: !6240, file: !5639, line: 404, column: 6)
!6259 = !DILocalVariable(name: "ptr2", scope: !6240, file: !5639, line: 474, type: !102)
!6260 = !DILocalVariable(name: "prev_size", scope: !6261, file: !5639, line: 477, type: !153)
!6261 = distinct !DILexicalBlock(scope: !6262, file: !5639, line: 476, column: 20)
!6262 = distinct !DILexicalBlock(scope: !6240, file: !5639, line: 476, column: 6)
!6263 = !DILocation(line: 0, scope: !6240)
!6264 = !DILocation(line: 382, column: 27, scope: !6240)
!6265 = !DILocation(line: 385, column: 10, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6240, file: !5639, line: 385, column: 6)
!6267 = !DILocation(line: 385, column: 6, scope: !6240)
!6268 = !DILocation(line: 386, column: 10, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6266, file: !5639, line: 385, column: 19)
!6270 = !DILocation(line: 386, column: 3, scope: !6269)
!6271 = !DILocation(line: 388, column: 12, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6240, file: !5639, line: 388, column: 6)
!6273 = !DILocation(line: 388, column: 6, scope: !6240)
!6274 = !DILocation(line: 389, column: 3, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6272, file: !5639, line: 388, column: 18)
!6276 = !DILocation(line: 390, column: 3, scope: !6275)
!6277 = !DILocation(line: 393, column: 2, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6279, file: !5639, line: 393, column: 2)
!6279 = distinct !DILexicalBlock(scope: !6240, file: !5639, line: 393, column: 2)
!6280 = !DILocation(line: 393, column: 2, scope: !6279)
!6281 = !DILocation(line: 393, column: 2, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6278, file: !5639, line: 393, column: 2)
!6283 = !DILocation(line: 395, column: 6, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6240, file: !5639, line: 395, column: 6)
!6285 = !DILocation(line: 395, column: 6, scope: !6240)
!6286 = !DILocation(line: 399, column: 16, scope: !6240)
!6287 = !DILocation(line: 400, column: 17, scope: !6240)
!6288 = !DILocation(line: 401, column: 49, scope: !6240)
!6289 = !DILocation(line: 401, column: 36, scope: !6240)
!6290 = !DILocation(line: 402, column: 52, scope: !6240)
!6291 = !DILocation(line: 402, column: 26, scope: !6240)
!6292 = !DILocation(line: 404, column: 6, scope: !6258)
!6293 = !DILocation(line: 404, column: 12, scope: !6258)
!6294 = !DILocation(line: 406, column: 13, scope: !6257)
!6295 = !DILocation(line: 406, column: 30, scope: !6257)
!6296 = !DILocation(line: 406, column: 13, scope: !6258)
!6297 = !DILocation(line: 409, column: 30, scope: !6256)
!6298 = !DILocation(line: 409, column: 13, scope: !6257)
!6299 = !DILocation(line: 420, column: 24, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6256, file: !5639, line: 409, column: 45)
!6301 = !DILocation(line: 420, column: 3, scope: !6300)
!6302 = !DILocation(line: 421, column: 3, scope: !6300)
!6303 = !DILocation(line: 422, column: 3, scope: !6300)
!6304 = !DILocation(line: 431, column: 3, scope: !6300)
!6305 = !DILocation(line: 432, column: 14, scope: !6255)
!6306 = !DILocation(line: 432, column: 32, scope: !6255)
!6307 = !DILocation(line: 433, column: 26, scope: !6255)
!6308 = !DILocation(line: 433, column: 24, scope: !6255)
!6309 = !DILocation(line: 433, column: 44, scope: !6255)
!6310 = !DILocation(line: 432, column: 13, scope: !6256)
!6311 = !DILocation(line: 435, column: 38, scope: !6254)
!6312 = !DILocation(line: 0, scope: !6254)
!6313 = !DILocation(line: 445, column: 3, scope: !6254)
!6314 = !DILocation(line: 447, column: 20, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6254, file: !5639, line: 447, column: 7)
!6316 = !DILocation(line: 447, column: 18, scope: !6315)
!6317 = !DILocation(line: 447, column: 7, scope: !6254)
!6318 = !DILocation(line: 448, column: 27, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6315, file: !5639, line: 447, column: 39)
!6320 = !DILocation(line: 448, column: 4, scope: !6319)
!6321 = !DILocation(line: 449, column: 4, scope: !6319)
!6322 = !DILocation(line: 450, column: 3, scope: !6319)
!6323 = !DILocation(line: 452, column: 3, scope: !6254)
!6324 = !DILocation(line: 453, column: 3, scope: !6254)
!6325 = !DILocation(line: 474, column: 15, scope: !6240)
!6326 = !DILocation(line: 476, column: 11, scope: !6262)
!6327 = !DILocation(line: 476, column: 6, scope: !6240)
!6328 = !DILocation(line: 477, column: 42, scope: !6261)
!6329 = !DILocation(line: 477, column: 22, scope: !6261)
!6330 = !DILocation(line: 477, column: 60, scope: !6261)
!6331 = !DILocation(line: 0, scope: !6261)
!6332 = !DILocation(line: 479, column: 21, scope: !6261)
!6333 = !DILocation(line: 479, column: 3, scope: !6261)
!6334 = !DILocation(line: 480, column: 3, scope: !6261)
!6335 = !DILocation(line: 481, column: 2, scope: !6261)
!6336 = !DILocation(line: 483, column: 1, scope: !6240)
!6337 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !3417, file: !3417, line: 245, type: !6338, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !6340)
!6338 = !DISubroutineType(types: !6339)
!6339 = !{!153, !3430, !5784}
!6340 = !{!6341, !6342}
!6341 = !DILocalVariable(name: "h", arg: 1, scope: !6337, file: !3417, line: 245, type: !3430)
!6342 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !6337, file: !3417, line: 245, type: !5784)
!6343 = !DILocation(line: 0, scope: !6337)
!6344 = !DILocation(line: 247, column: 20, scope: !6337)
!6345 = !DILocation(line: 247, column: 33, scope: !6337)
!6346 = !DILocation(line: 247, column: 2, scope: !6337)
!6347 = distinct !DISubprogram(name: "sys_heap_init", scope: !5639, file: !5639, line: 485, type: !6348, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3413, retainedNodes: !6350)
!6348 = !DISubroutineType(types: !6349)
!6349 = !{null, !5642, !102, !153}
!6350 = !{!6351, !6352, !6353, !6354, !6355, !6356, !6357, !6358, !6359, !6360}
!6351 = !DILocalVariable(name: "heap", arg: 1, scope: !6347, file: !5639, line: 485, type: !5642)
!6352 = !DILocalVariable(name: "mem", arg: 2, scope: !6347, file: !5639, line: 485, type: !102)
!6353 = !DILocalVariable(name: "bytes", arg: 3, scope: !6347, file: !5639, line: 485, type: !153)
!6354 = !DILocalVariable(name: "addr", scope: !6347, file: !5639, line: 502, type: !22)
!6355 = !DILocalVariable(name: "end", scope: !6347, file: !5639, line: 503, type: !22)
!6356 = !DILocalVariable(name: "heap_sz", scope: !6347, file: !5639, line: 504, type: !5784)
!6357 = !DILocalVariable(name: "h", scope: !6347, file: !5639, line: 509, type: !3430)
!6358 = !DILocalVariable(name: "nb_buckets", scope: !6347, file: !5639, line: 520, type: !103)
!6359 = !DILocalVariable(name: "chunk0_size", scope: !6347, file: !5639, line: 521, type: !5784)
!6360 = !DILocalVariable(name: "i", scope: !6361, file: !5639, line: 526, type: !103)
!6361 = distinct !DILexicalBlock(scope: !6347, file: !5639, line: 526, column: 2)
!6362 = !DILocation(line: 0, scope: !6347)
!6363 = !DILocation(line: 491, column: 3, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6365, file: !5639, line: 491, column: 3)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !5639, line: 491, column: 3)
!6366 = distinct !DILexicalBlock(scope: !6367, file: !5639, line: 489, column: 46)
!6367 = distinct !DILexicalBlock(scope: !6347, file: !5639, line: 489, column: 6)
!6368 = !DILocation(line: 491, column: 3, scope: !6365)
!6369 = !DILocation(line: 491, column: 3, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6364, file: !5639, line: 491, column: 3)
!6371 = !DILocation(line: 498, column: 2, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6373, file: !5639, line: 498, column: 2)
!6373 = distinct !DILexicalBlock(scope: !6347, file: !5639, line: 498, column: 2)
!6374 = !DILocation(line: 498, column: 2, scope: !6373)
!6375 = !DILocation(line: 498, column: 2, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6372, file: !5639, line: 498, column: 2)
!6377 = !DILocation(line: 499, column: 8, scope: !6347)
!6378 = !DILocation(line: 502, column: 19, scope: !6347)
!6379 = !DILocation(line: 503, column: 18, scope: !6347)
!6380 = !DILocation(line: 504, column: 27, scope: !6347)
!6381 = !DILocation(line: 504, column: 35, scope: !6347)
!6382 = !DILocation(line: 507, column: 2, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6384, file: !5639, line: 507, column: 2)
!6384 = distinct !DILexicalBlock(scope: !6347, file: !5639, line: 507, column: 2)
!6385 = !DILocation(line: 507, column: 2, scope: !6384)
!6386 = !DILocation(line: 507, column: 2, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6383, file: !5639, line: 507, column: 2)
!6388 = !DILocation(line: 509, column: 21, scope: !6347)
!6389 = !DILocation(line: 510, column: 8, scope: !6347)
!6390 = !DILocation(line: 510, column: 13, scope: !6347)
!6391 = !DILocation(line: 511, column: 5, scope: !6347)
!6392 = !DILocation(line: 511, column: 15, scope: !6347)
!6393 = !DILocation(line: 512, column: 5, scope: !6347)
!6394 = !DILocation(line: 512, column: 19, scope: !6347)
!6395 = !DILocation(line: 520, column: 19, scope: !6347)
!6396 = !DILocation(line: 522, column: 21, scope: !6347)
!6397 = !DILocation(line: 521, column: 56, scope: !6347)
!6398 = !DILocation(line: 521, column: 26, scope: !6347)
!6399 = !DILocation(line: 524, column: 2, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6401, file: !5639, line: 524, column: 2)
!6401 = distinct !DILexicalBlock(scope: !6347, file: !5639, line: 524, column: 2)
!6402 = !DILocation(line: 524, column: 2, scope: !6401)
!6403 = !DILocation(line: 0, scope: !6361)
!6404 = !DILocation(line: 526, column: 20, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6361, file: !5639, line: 526, column: 2)
!6406 = !DILocation(line: 526, column: 2, scope: !6361)
!6407 = !DILocation(line: 524, column: 2, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6400, file: !5639, line: 524, column: 2)
!6409 = !DILocation(line: 531, column: 2, scope: !6347)
!6410 = !DILocation(line: 532, column: 2, scope: !6347)
!6411 = !DILocation(line: 533, column: 2, scope: !6347)
!6412 = !DILocation(line: 536, column: 41, scope: !6347)
!6413 = !DILocation(line: 536, column: 2, scope: !6347)
!6414 = !DILocation(line: 537, column: 2, scope: !6347)
!6415 = !DILocation(line: 540, column: 2, scope: !6347)
!6416 = !DILocation(line: 541, column: 2, scope: !6347)
!6417 = !DILocation(line: 542, column: 2, scope: !6347)
!6418 = !DILocation(line: 544, column: 2, scope: !6347)
!6419 = !DILocation(line: 545, column: 1, scope: !6347)
!6420 = !DILocation(line: 527, column: 17, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6405, file: !5639, line: 526, column: 39)
!6422 = !DILocation(line: 527, column: 22, scope: !6421)
!6423 = !DILocation(line: 526, column: 35, scope: !6405)
!6424 = distinct !{!6424, !6406, !6425}
!6425 = !DILocation(line: 528, column: 2, scope: !6361)
!6426 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !3450, file: !3450, line: 1338, type: !6427, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !6435)
!6427 = !DISubroutineType(types: !6428)
!6428 = !{!103, !4795, !102, !336, !6429, !108}
!6429 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4413, line: 99, baseType: !6430)
!6430 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4413, line: 40, baseType: !6431)
!6431 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3450, baseType: !6432)
!6432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6433)
!6433 = !{!6434}
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6432, file: !3450, baseType: !102, size: 32)
!6435 = !{!6436, !6437, !6438, !6439, !6440, !6441, !6445, !6446, !6447, !6449, !6454, !6497, !6500, !6503, !6504, !6505, !6506, !6507, !6508, !6509, !6512, !6513, !6514, !6518, !6521, !6523, !6526, !6527, !6528, !6533, !6539, !6542, !6546, !6552, !6556, !6559, !6561, !6564}
!6436 = !DILocalVariable(name: "out", arg: 1, scope: !6426, file: !3450, line: 1338, type: !4795)
!6437 = !DILocalVariable(name: "ctx", arg: 2, scope: !6426, file: !3450, line: 1338, type: !102)
!6438 = !DILocalVariable(name: "fp", arg: 3, scope: !6426, file: !3450, line: 1338, type: !336)
!6439 = !DILocalVariable(name: "ap", arg: 4, scope: !6426, file: !3450, line: 1339, type: !6429)
!6440 = !DILocalVariable(name: "flags", arg: 5, scope: !6426, file: !3450, line: 1339, type: !108)
!6441 = !DILocalVariable(name: "buf", scope: !6426, file: !3450, line: 1341, type: !6442)
!6442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 176, elements: !6443)
!6443 = !{!6444}
!6444 = !DISubrange(count: 22)
!6445 = !DILocalVariable(name: "count", scope: !6426, file: !3450, line: 1342, type: !153)
!6446 = !DILocalVariable(name: "sint", scope: !6426, file: !3450, line: 1343, type: !3469)
!6447 = !DILocalVariable(name: "tagged_ap", scope: !6426, file: !3450, line: 1345, type: !6448)
!6448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!6449 = !DILocalVariable(name: "rc", scope: !6450, file: !3450, line: 1377, type: !103)
!6450 = distinct !DILexicalBlock(scope: !6451, file: !3450, line: 1377, column: 4)
!6451 = distinct !DILexicalBlock(scope: !6452, file: !3450, line: 1376, column: 19)
!6452 = distinct !DILexicalBlock(scope: !6453, file: !3450, line: 1376, column: 7)
!6453 = distinct !DILexicalBlock(scope: !6426, file: !3450, line: 1375, column: 19)
!6454 = !DILocalVariable(name: "state", scope: !6453, file: !3450, line: 1395, type: !6455)
!6455 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6426, file: !3450, line: 1392, size: 192, elements: !6456)
!6456 = !{!6457, !6465}
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6455, file: !3450, line: 1393, baseType: !6458, size: 64)
!6458 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !3450, line: 166, size: 64, elements: !6459)
!6459 = !{!6460, !6461, !6462, !6463, !6464}
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !6458, file: !3450, line: 168, baseType: !3469, size: 64)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !6458, file: !3450, line: 171, baseType: !3472, size: 64)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !6458, file: !3450, line: 174, baseType: !776, size: 64)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !6458, file: !3450, line: 177, baseType: !774, size: 64)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6458, file: !3450, line: 180, baseType: !102, size: 32)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !6455, file: !3450, line: 1394, baseType: !6466, size: 96, offset: 64)
!6466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !3450, line: 189, size: 96, elements: !6467)
!6467 = !{!6468, !6469, !6470, !6471, !6472, !6473, !6474, !6475, !6476, !6477, !6478, !6479, !6480, !6481, !6482, !6483, !6484, !6485, !6486, !6487, !6492}
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !6466, file: !3450, line: 191, baseType: !119, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !6466, file: !3450, line: 194, baseType: !119, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !6466, file: !3450, line: 197, baseType: !119, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !6466, file: !3450, line: 200, baseType: !119, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !6466, file: !3450, line: 203, baseType: !119, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !6466, file: !3450, line: 206, baseType: !119, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !6466, file: !3450, line: 209, baseType: !119, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !6466, file: !3450, line: 212, baseType: !119, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !6466, file: !3450, line: 219, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !6466, file: !3450, line: 222, baseType: !119, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !6466, file: !3450, line: 229, baseType: !119, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !6466, file: !3450, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !6466, file: !3450, line: 238, baseType: !119, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !6466, file: !3450, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !6466, file: !3450, line: 244, baseType: !119, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !6466, file: !3450, line: 247, baseType: !119, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !6466, file: !3450, line: 252, baseType: !119, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !6466, file: !3450, line: 257, baseType: !119, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !6466, file: !3450, line: 260, baseType: !165, size: 8, offset: 24)
!6487 = !DIDerivedType(tag: DW_TAG_member, scope: !6466, file: !3450, line: 262, baseType: !6488, size: 32, offset: 32)
!6488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6466, file: !3450, line: 262, size: 32, elements: !6489)
!6489 = !{!6490, !6491}
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !6488, file: !3450, line: 267, baseType: !103, size: 32)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !6488, file: !3450, line: 289, baseType: !103, size: 32)
!6492 = !DIDerivedType(tag: DW_TAG_member, scope: !6466, file: !3450, line: 292, baseType: !6493, size: 32, offset: 64)
!6493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6466, file: !3450, line: 292, size: 32, elements: !6494)
!6494 = !{!6495, !6496}
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !6493, file: !3450, line: 297, baseType: !103, size: 32)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !6493, file: !3450, line: 306, baseType: !103, size: 32)
!6497 = !DILocalVariable(name: "conv", scope: !6453, file: !3450, line: 1400, type: !6498)
!6498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6499)
!6499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6466, size: 32)
!6500 = !DILocalVariable(name: "value", scope: !6453, file: !3450, line: 1401, type: !6501)
!6501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6502)
!6502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6458, size: 32)
!6503 = !DILocalVariable(name: "sp", scope: !6453, file: !3450, line: 1402, type: !336)
!6504 = !DILocalVariable(name: "width", scope: !6453, file: !3450, line: 1403, type: !103)
!6505 = !DILocalVariable(name: "precision", scope: !6453, file: !3450, line: 1404, type: !103)
!6506 = !DILocalVariable(name: "bps", scope: !6453, file: !3450, line: 1405, type: !336)
!6507 = !DILocalVariable(name: "bpe", scope: !6453, file: !3450, line: 1406, type: !336)
!6508 = !DILocalVariable(name: "sign", scope: !6453, file: !3450, line: 1407, type: !158)
!6509 = !DILocalVariable(name: "arg", scope: !6510, file: !3450, line: 1432, type: !103)
!6510 = distinct !DILexicalBlock(scope: !6511, file: !3450, line: 1431, column: 24)
!6511 = distinct !DILexicalBlock(scope: !6453, file: !3450, line: 1431, column: 7)
!6512 = !DILocalVariable(name: "specifier_cat", scope: !6453, file: !3450, line: 1468, type: !3449)
!6513 = !DILocalVariable(name: "length_mod", scope: !6453, file: !3450, line: 1470, type: !3457)
!6514 = !DILocalVariable(name: "rc", scope: !6515, file: !3450, line: 1575, type: !103)
!6515 = distinct !DILexicalBlock(scope: !6516, file: !3450, line: 1575, column: 4)
!6516 = distinct !DILexicalBlock(scope: !6517, file: !3450, line: 1574, column: 43)
!6517 = distinct !DILexicalBlock(scope: !6453, file: !3450, line: 1574, column: 7)
!6518 = !DILocalVariable(name: "rc", scope: !6519, file: !3450, line: 1584, type: !103)
!6519 = distinct !DILexicalBlock(scope: !6520, file: !3450, line: 1584, column: 4)
!6520 = distinct !DILexicalBlock(scope: !6453, file: !3450, line: 1582, column: 28)
!6521 = !DILocalVariable(name: "len", scope: !6522, file: !3450, line: 1589, type: !153)
!6522 = distinct !DILexicalBlock(scope: !6520, file: !3450, line: 1586, column: 13)
!6523 = !DILocalVariable(name: "len", scope: !6524, file: !3450, line: 1641, type: !153)
!6524 = distinct !DILexicalBlock(scope: !6525, file: !3450, line: 1640, column: 24)
!6525 = distinct !DILexicalBlock(scope: !6520, file: !3450, line: 1640, column: 8)
!6526 = !DILocalVariable(name: "nj_len", scope: !6453, file: !3450, line: 1722, type: !153)
!6527 = !DILocalVariable(name: "pad_len", scope: !6453, file: !3450, line: 1723, type: !103)
!6528 = !DILocalVariable(name: "pad", scope: !6529, file: !3450, line: 1751, type: !158)
!6529 = distinct !DILexicalBlock(scope: !6530, file: !3450, line: 1750, column: 26)
!6530 = distinct !DILexicalBlock(scope: !6531, file: !3450, line: 1750, column: 8)
!6531 = distinct !DILexicalBlock(scope: !6532, file: !3450, line: 1747, column: 18)
!6532 = distinct !DILexicalBlock(scope: !6453, file: !3450, line: 1747, column: 7)
!6533 = !DILocalVariable(name: "rc", scope: !6534, file: !3450, line: 1758, type: !103)
!6534 = distinct !DILexicalBlock(scope: !6535, file: !3450, line: 1758, column: 7)
!6535 = distinct !DILexicalBlock(scope: !6536, file: !3450, line: 1757, column: 21)
!6536 = distinct !DILexicalBlock(scope: !6537, file: !3450, line: 1757, column: 10)
!6537 = distinct !DILexicalBlock(scope: !6538, file: !3450, line: 1756, column: 26)
!6538 = distinct !DILexicalBlock(scope: !6529, file: !3450, line: 1756, column: 9)
!6539 = !DILocalVariable(name: "rc", scope: !6540, file: !3450, line: 1765, type: !103)
!6540 = distinct !DILexicalBlock(scope: !6541, file: !3450, line: 1765, column: 6)
!6541 = distinct !DILexicalBlock(scope: !6529, file: !3450, line: 1764, column: 25)
!6542 = !DILocalVariable(name: "rc", scope: !6543, file: !3450, line: 1774, type: !103)
!6543 = distinct !DILexicalBlock(scope: !6544, file: !3450, line: 1774, column: 4)
!6544 = distinct !DILexicalBlock(scope: !6545, file: !3450, line: 1773, column: 18)
!6545 = distinct !DILexicalBlock(scope: !6453, file: !3450, line: 1773, column: 7)
!6546 = !DILocalVariable(name: "rc", scope: !6547, file: !3450, line: 1819, type: !103)
!6547 = distinct !DILexicalBlock(scope: !6548, file: !3450, line: 1819, column: 5)
!6548 = distinct !DILexicalBlock(scope: !6549, file: !3450, line: 1818, column: 44)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !3450, line: 1818, column: 8)
!6550 = distinct !DILexicalBlock(scope: !6551, file: !3450, line: 1817, column: 10)
!6551 = distinct !DILexicalBlock(scope: !6453, file: !3450, line: 1777, column: 7)
!6552 = !DILocalVariable(name: "rc", scope: !6553, file: !3450, line: 1823, type: !103)
!6553 = distinct !DILexicalBlock(scope: !6554, file: !3450, line: 1823, column: 5)
!6554 = distinct !DILexicalBlock(scope: !6555, file: !3450, line: 1822, column: 26)
!6555 = distinct !DILexicalBlock(scope: !6550, file: !3450, line: 1822, column: 8)
!6556 = !DILocalVariable(name: "rc", scope: !6557, file: !3450, line: 1828, type: !103)
!6557 = distinct !DILexicalBlock(scope: !6558, file: !3450, line: 1828, column: 5)
!6558 = distinct !DILexicalBlock(scope: !6550, file: !3450, line: 1827, column: 26)
!6559 = !DILocalVariable(name: "rc", scope: !6560, file: !3450, line: 1831, type: !103)
!6560 = distinct !DILexicalBlock(scope: !6550, file: !3450, line: 1831, column: 4)
!6561 = !DILocalVariable(name: "rc", scope: !6562, file: !3450, line: 1836, type: !103)
!6562 = distinct !DILexicalBlock(scope: !6563, file: !3450, line: 1836, column: 4)
!6563 = distinct !DILexicalBlock(scope: !6453, file: !3450, line: 1835, column: 21)
!6564 = !DILabel(scope: !6520, name: "prec_int_pad0", file: !3450, line: 1634)
!6565 = !DILocation(line: 0, scope: !6426)
!6566 = !DILocation(line: 1341, column: 2, scope: !6426)
!6567 = !DILocation(line: 1341, column: 7, scope: !6426)
!6568 = !DILocation(line: 1375, column: 2, scope: !6426)
!6569 = !DILocation(line: 1342, column: 9, scope: !6426)
!6570 = !DILocation(line: 1375, column: 9, scope: !6426)
!6571 = !DILocation(line: 1377, column: 4, scope: !6450)
!6572 = !DILocation(line: 0, scope: !6450)
!6573 = !DILocation(line: 1377, column: 4, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6450, file: !3450, line: 1377, column: 4)
!6575 = distinct !{!6575, !6568, !6576}
!6576 = !DILocation(line: 1839, column: 2, scope: !6426)
!6577 = !DILocation(line: 1392, column: 3, scope: !6453)
!6578 = !DILocation(line: 1395, column: 5, scope: !6453)
!6579 = !DILocation(line: 0, scope: !6453)
!6580 = !DILocation(line: 1409, column: 8, scope: !6453)
!6581 = !DILocation(line: 1414, column: 13, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6453, file: !3450, line: 1414, column: 7)
!6583 = !DILocation(line: 1414, column: 7, scope: !6453)
!6584 = !DILocation(line: 1415, column: 12, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6582, file: !3450, line: 1414, column: 25)
!6586 = !DILocation(line: 1417, column: 14, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6585, file: !3450, line: 1417, column: 8)
!6588 = !DILocation(line: 1417, column: 8, scope: !6585)
!6589 = !DILocation(line: 1418, column: 21, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6587, file: !3450, line: 1417, column: 19)
!6591 = !DILocation(line: 1419, column: 13, scope: !6590)
!6592 = !DILocation(line: 1420, column: 4, scope: !6590)
!6593 = !DILocation(line: 1421, column: 20, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6582, file: !3450, line: 1421, column: 14)
!6595 = !DILocation(line: 1421, column: 14, scope: !6582)
!6596 = !DILocation(line: 1431, column: 13, scope: !6511)
!6597 = !DILocation(line: 1431, column: 7, scope: !6453)
!6598 = !DILocation(line: 1432, column: 14, scope: !6510)
!6599 = !DILocation(line: 0, scope: !6510)
!6600 = !DILocation(line: 1434, column: 12, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6510, file: !3450, line: 1434, column: 8)
!6602 = !DILocation(line: 1434, column: 8, scope: !6510)
!6603 = !DILocation(line: 1435, column: 24, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6601, file: !3450, line: 1434, column: 17)
!6605 = !DILocation(line: 1436, column: 4, scope: !6604)
!6606 = !DILocation(line: 1439, column: 20, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6511, file: !3450, line: 1439, column: 14)
!6608 = !DILocation(line: 1439, column: 14, scope: !6511)
!6609 = !DILocation(line: 1469, column: 37, scope: !6453)
!6610 = !DILocation(line: 1448, column: 20, scope: !6453)
!6611 = !DILocation(line: 1449, column: 22, scope: !6453)
!6612 = !DILocation(line: 1471, column: 34, scope: !6453)
!6613 = !DILocation(line: 1478, column: 7, scope: !6453)
!6614 = !DILocation(line: 1479, column: 4, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6616, file: !3450, line: 1478, column: 40)
!6616 = distinct !DILexicalBlock(scope: !6453, file: !3450, line: 1478, column: 7)
!6617 = !DILocation(line: 1484, column: 19, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6615, file: !3450, line: 1479, column: 24)
!6619 = !DILocation(line: 1484, column: 17, scope: !6618)
!6620 = !DILocation(line: 1485, column: 5, scope: !6618)
!6621 = !DILocation(line: 1492, column: 20, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6623, file: !3450, line: 1491, column: 12)
!6623 = distinct !DILexicalBlock(scope: !6618, file: !3450, line: 1487, column: 9)
!6624 = !DILocation(line: 1492, column: 18, scope: !6622)
!6625 = !DILocation(line: 1494, column: 5, scope: !6618)
!6626 = !DILocation(line: 1497, column: 23, scope: !6618)
!6627 = !DILocation(line: 1496, column: 17, scope: !6618)
!6628 = !DILocation(line: 1498, column: 5, scope: !6618)
!6629 = !DILocation(line: 1501, column: 23, scope: !6618)
!6630 = !DILocation(line: 1500, column: 17, scope: !6618)
!6631 = !DILocation(line: 1502, column: 5, scope: !6618)
!6632 = !DILocation(line: 1513, column: 23, scope: !6618)
!6633 = !DILocation(line: 1513, column: 6, scope: !6618)
!6634 = !DILocation(line: 1512, column: 17, scope: !6618)
!6635 = !DILocation(line: 1514, column: 5, scope: !6618)
!6636 = !DILocation(line: 0, scope: !6618)
!6637 = !DILocation(line: 1516, column: 8, scope: !6615)
!6638 = !DILocation(line: 1517, column: 19, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6640, file: !3450, line: 1516, column: 33)
!6640 = distinct !DILexicalBlock(scope: !6615, file: !3450, line: 1516, column: 8)
!6641 = !DILocation(line: 1517, column: 17, scope: !6639)
!6642 = !DILocation(line: 1518, column: 4, scope: !6639)
!6643 = !DILocation(line: 1519, column: 19, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6645, file: !3450, line: 1518, column: 39)
!6645 = distinct !DILexicalBlock(scope: !6640, file: !3450, line: 1518, column: 15)
!6646 = !DILocation(line: 1519, column: 17, scope: !6644)
!6647 = !DILocation(line: 1520, column: 4, scope: !6644)
!6648 = !DILocation(line: 1522, column: 4, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6650, file: !3450, line: 1521, column: 47)
!6650 = distinct !DILexicalBlock(scope: !6616, file: !3450, line: 1521, column: 14)
!6651 = !DILocation(line: 1527, column: 19, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6649, file: !3450, line: 1522, column: 24)
!6653 = !DILocation(line: 1527, column: 17, scope: !6652)
!6654 = !DILocation(line: 1528, column: 5, scope: !6652)
!6655 = !DILocation(line: 0, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6652, file: !3450, line: 1530, column: 9)
!6657 = !DILocation(line: 1540, column: 23, scope: !6652)
!6658 = !DILocation(line: 1539, column: 17, scope: !6652)
!6659 = !DILocation(line: 1542, column: 5, scope: !6652)
!6660 = !DILocation(line: 1545, column: 23, scope: !6652)
!6661 = !DILocation(line: 1544, column: 17, scope: !6652)
!6662 = !DILocation(line: 1547, column: 5, scope: !6652)
!6663 = !DILocation(line: 1551, column: 23, scope: !6652)
!6664 = !DILocation(line: 1551, column: 6, scope: !6652)
!6665 = !DILocation(line: 1550, column: 17, scope: !6652)
!6666 = !DILocation(line: 1552, column: 5, scope: !6652)
!6667 = !DILocation(line: 0, scope: !6652)
!6668 = !DILocation(line: 1554, column: 8, scope: !6649)
!6669 = !DILocation(line: 1555, column: 19, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6671, file: !3450, line: 1554, column: 33)
!6671 = distinct !DILexicalBlock(scope: !6649, file: !3450, line: 1554, column: 8)
!6672 = !DILocation(line: 1555, column: 17, scope: !6670)
!6673 = !DILocation(line: 1556, column: 4, scope: !6670)
!6674 = !DILocation(line: 1557, column: 19, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6676, file: !3450, line: 1556, column: 39)
!6676 = distinct !DILexicalBlock(scope: !6671, file: !3450, line: 1556, column: 15)
!6677 = !DILocation(line: 1557, column: 17, scope: !6675)
!6678 = !DILocation(line: 1558, column: 4, scope: !6675)
!6679 = !DILocation(line: 0, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6681, file: !3450, line: 1560, column: 8)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !3450, line: 1559, column: 45)
!6682 = distinct !DILexicalBlock(scope: !6650, file: !3450, line: 1559, column: 14)
!6683 = !DILocation(line: 1566, column: 17, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !3450, line: 1565, column: 46)
!6685 = distinct !DILexicalBlock(scope: !6682, file: !3450, line: 1565, column: 14)
!6686 = !DILocation(line: 1566, column: 15, scope: !6684)
!6687 = !DILocation(line: 1567, column: 3, scope: !6684)
!6688 = !DILocation(line: 1574, column: 21, scope: !6517)
!6689 = !DILocation(line: 1575, column: 4, scope: !6515)
!6690 = !DILocation(line: 0, scope: !6515)
!6691 = !DILocation(line: 1575, column: 4, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6515, file: !3450, line: 1575, column: 4)
!6693 = !DILocation(line: 1582, column: 17, scope: !6453)
!6694 = !DILocation(line: 1582, column: 3, scope: !6453)
!6695 = !DILocation(line: 1584, column: 4, scope: !6519)
!6696 = !DILocation(line: 0, scope: !6519)
!6697 = !DILocation(line: 1584, column: 4, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6519, file: !3450, line: 1584, column: 4)
!6699 = !DILocation(line: 1587, column: 31, scope: !6522)
!6700 = !DILocation(line: 1591, column: 18, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6522, file: !3450, line: 1591, column: 8)
!6702 = !DILocation(line: 1591, column: 8, scope: !6522)
!6703 = !DILocation(line: 1592, column: 11, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6701, file: !3450, line: 1591, column: 24)
!6705 = !DILocation(line: 0, scope: !6522)
!6706 = !DILocation(line: 1593, column: 4, scope: !6704)
!6707 = !DILocation(line: 1594, column: 11, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6701, file: !3450, line: 1593, column: 11)
!6709 = !DILocation(line: 1604, column: 51, scope: !6520)
!6710 = !DILocation(line: 1604, column: 13, scope: !6520)
!6711 = !DILocation(line: 1604, column: 11, scope: !6520)
!6712 = !DILocation(line: 1606, column: 4, scope: !6520)
!6713 = !DILocation(line: 1609, column: 14, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6520, file: !3450, line: 1609, column: 8)
!6715 = !DILocation(line: 1609, column: 8, scope: !6520)
!6716 = !DILocation(line: 1619, column: 18, scope: !6520)
!6717 = !DILocation(line: 1620, column: 13, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6520, file: !3450, line: 1620, column: 8)
!6719 = !DILocation(line: 1620, column: 8, scope: !6520)
!6720 = !DILocation(line: 1622, column: 36, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6718, file: !3450, line: 1620, column: 18)
!6722 = !DILocation(line: 1622, column: 17, scope: !6721)
!6723 = !DILocation(line: 1623, column: 4, scope: !6721)
!6724 = !DILocation(line: 1632, column: 29, scope: !6520)
!6725 = !DILocation(line: 1632, column: 10, scope: !6520)
!6726 = !DILocation(line: 1632, column: 4, scope: !6520)
!6727 = !DILocation(line: 1407, column: 8, scope: !6453)
!6728 = !DILocation(line: 0, scope: !6520)
!6729 = !DILocation(line: 1634, column: 3, scope: !6520)
!6730 = !DILocation(line: 1640, column: 18, scope: !6525)
!6731 = !DILocation(line: 1640, column: 8, scope: !6520)
!6732 = !DILocation(line: 1729, column: 13, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6453, file: !3450, line: 1729, column: 7)
!6734 = !DILocation(line: 1641, column: 22, scope: !6524)
!6735 = !DILocation(line: 0, scope: !6524)
!6736 = !DILocation(line: 1646, column: 21, scope: !6524)
!6737 = !DILocation(line: 1649, column: 13, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6524, file: !3450, line: 1649, column: 9)
!6739 = !DILocation(line: 1649, column: 9, scope: !6524)
!6740 = !DILocation(line: 1650, column: 35, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6738, file: !3450, line: 1649, column: 34)
!6742 = !DILocation(line: 1650, column: 23, scope: !6741)
!6743 = !DILocation(line: 1651, column: 5, scope: !6741)
!6744 = !DILocation(line: 1660, column: 15, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6520, file: !3450, line: 1660, column: 8)
!6746 = !DILocation(line: 1660, column: 19, scope: !6745)
!6747 = !DILocation(line: 1660, column: 8, scope: !6520)
!6748 = !DILocation(line: 1661, column: 23, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6745, file: !3450, line: 1660, column: 28)
!6750 = !DILocation(line: 1661, column: 11, scope: !6749)
!6751 = !DILocation(line: 1665, column: 22, scope: !6749)
!6752 = !DILocation(line: 1666, column: 21, scope: !6749)
!6753 = !DILocation(line: 1668, column: 5, scope: !6749)
!6754 = !DILocation(line: 1677, column: 30, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6756, file: !3450, line: 1676, column: 49)
!6756 = distinct !DILexicalBlock(scope: !6520, file: !3450, line: 1676, column: 8)
!6757 = !DILocation(line: 1677, column: 5, scope: !6755)
!6758 = !DILocation(line: 1680, column: 4, scope: !6520)
!6759 = !DILocation(line: 0, scope: !6701)
!6760 = !DILocation(line: 1597, column: 14, scope: !6522)
!6761 = !DILocation(line: 1699, column: 11, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6453, file: !3450, line: 1699, column: 7)
!6763 = !DILocation(line: 1699, column: 7, scope: !6453)
!6764 = !DILocation(line: 1725, column: 7, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6453, file: !3450, line: 1725, column: 7)
!6766 = !DILocation(line: 1725, column: 12, scope: !6765)
!6767 = !DILocation(line: 1747, column: 13, scope: !6532)
!6768 = !DILocation(line: 1747, column: 7, scope: !6453)
!6769 = !DILocation(line: 1722, column: 24, scope: !6453)
!6770 = !DILocation(line: 1725, column: 7, scope: !6453)
!6771 = !DILocation(line: 1729, column: 7, scope: !6453)
!6772 = !DILocation(line: 1736, column: 13, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6453, file: !3450, line: 1736, column: 7)
!6774 = !DILocation(line: 1735, column: 19, scope: !6453)
!6775 = !DILocation(line: 1736, column: 7, scope: !6453)
!6776 = !DILocation(line: 1748, column: 10, scope: !6531)
!6777 = !DILocation(line: 1750, column: 15, scope: !6530)
!6778 = !DILocation(line: 1750, column: 8, scope: !6531)
!6779 = !DILocation(line: 0, scope: !6529)
!6780 = !DILocation(line: 1756, column: 15, scope: !6538)
!6781 = !DILocation(line: 1756, column: 9, scope: !6529)
!6782 = !DILocation(line: 1758, column: 7, scope: !6534)
!6783 = !DILocation(line: 0, scope: !6534)
!6784 = !DILocation(line: 1758, column: 7, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6534, file: !3450, line: 1758, column: 7)
!6786 = !DILocation(line: 1764, column: 5, scope: !6529)
!6787 = !DILocation(line: 0, scope: !6531)
!6788 = !DILocation(line: 1764, column: 20, scope: !6529)
!6789 = !DILocation(line: 1764, column: 17, scope: !6529)
!6790 = !DILocation(line: 1765, column: 6, scope: !6540)
!6791 = !DILocation(line: 0, scope: !6540)
!6792 = !DILocation(line: 1765, column: 6, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6540, file: !3450, line: 1765, column: 6)
!6794 = distinct !{!6794, !6786, !6795}
!6795 = !DILocation(line: 1766, column: 5, scope: !6529)
!6796 = !DILocation(line: 1773, column: 12, scope: !6545)
!6797 = !DILocation(line: 1773, column: 7, scope: !6453)
!6798 = !DILocation(line: 1773, column: 7, scope: !6545)
!6799 = !DILocation(line: 1774, column: 4, scope: !6543)
!6800 = !DILocation(line: 0, scope: !6543)
!6801 = !DILocation(line: 1774, column: 4, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6543, file: !3450, line: 1774, column: 4)
!6803 = !DILocation(line: 1818, column: 8, scope: !6549)
!6804 = !DILocation(line: 1818, column: 27, scope: !6549)
!6805 = !DILocation(line: 1818, column: 25, scope: !6549)
!6806 = !DILocation(line: 1818, column: 8, scope: !6550)
!6807 = !DILocation(line: 1819, column: 5, scope: !6547)
!6808 = !DILocation(line: 0, scope: !6547)
!6809 = !DILocation(line: 1819, column: 5, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6547, file: !3450, line: 1819, column: 5)
!6811 = !DILocation(line: 1822, column: 14, scope: !6555)
!6812 = !DILocation(line: 1822, column: 8, scope: !6550)
!6813 = !DILocation(line: 1823, column: 5, scope: !6553)
!6814 = !DILocation(line: 0, scope: !6553)
!6815 = !DILocation(line: 1823, column: 5, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6553, file: !3450, line: 1823, column: 5)
!6817 = !DILocation(line: 1826, column: 20, scope: !6550)
!6818 = !DILocation(line: 1827, column: 4, scope: !6550)
!6819 = !DILocation(line: 0, scope: !6550)
!6820 = !DILocation(line: 1827, column: 21, scope: !6550)
!6821 = !DILocation(line: 1827, column: 18, scope: !6550)
!6822 = !DILocation(line: 1828, column: 5, scope: !6557)
!6823 = !DILocation(line: 0, scope: !6557)
!6824 = !DILocation(line: 1828, column: 5, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6557, file: !3450, line: 1828, column: 5)
!6826 = distinct !{!6826, !6818, !6827}
!6827 = !DILocation(line: 1829, column: 4, scope: !6550)
!6828 = !DILocation(line: 1831, column: 4, scope: !6560)
!6829 = !DILocation(line: 0, scope: !6560)
!6830 = !DILocation(line: 1831, column: 4, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6560, file: !3450, line: 1831, column: 4)
!6832 = !DILocation(line: 1835, column: 16, scope: !6453)
!6833 = !DILocation(line: 1835, column: 3, scope: !6453)
!6834 = !DILocation(line: 1836, column: 4, scope: !6562)
!6835 = !DILocation(line: 0, scope: !6562)
!6836 = !DILocation(line: 1836, column: 4, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6562, file: !3450, line: 1836, column: 4)
!6838 = !DILocation(line: 1837, column: 4, scope: !6563)
!6839 = distinct !{!6839, !6833, !6840}
!6840 = !DILocation(line: 1838, column: 3, scope: !6453)
!6841 = !DILocation(line: 1844, column: 1, scope: !6426)
!6842 = distinct !DISubprogram(name: "extract_conversion", scope: !3450, file: !3450, line: 642, type: !6843, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !6845)
!6843 = !DISubroutineType(types: !6844)
!6844 = !{!336, !6499, !336}
!6845 = !{!6846, !6847}
!6846 = !DILocalVariable(name: "conv", arg: 1, scope: !6842, file: !3450, line: 642, type: !6499)
!6847 = !DILocalVariable(name: "sp", arg: 2, scope: !6842, file: !3450, line: 643, type: !336)
!6848 = !DILocation(line: 0, scope: !6842)
!6849 = !DILocation(line: 645, column: 10, scope: !6842)
!6850 = !DILocation(line: 653, column: 2, scope: !6842)
!6851 = !DILocation(line: 654, column: 6, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6842, file: !3450, line: 654, column: 6)
!6853 = !DILocation(line: 654, column: 10, scope: !6852)
!6854 = !DILocation(line: 654, column: 6, scope: !6842)
!6855 = !DILocation(line: 655, column: 24, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6852, file: !3450, line: 654, column: 18)
!6857 = !DILocation(line: 655, column: 19, scope: !6856)
!6858 = !DILocation(line: 656, column: 3, scope: !6856)
!6859 = !DILocation(line: 659, column: 7, scope: !6842)
!6860 = !DILocation(line: 660, column: 7, scope: !6842)
!6861 = !DILocation(line: 661, column: 7, scope: !6842)
!6862 = !DILocation(line: 662, column: 7, scope: !6842)
!6863 = !DILocation(line: 663, column: 7, scope: !6842)
!6864 = !DILocation(line: 665, column: 2, scope: !6842)
!6865 = !DILocation(line: 666, column: 1, scope: !6842)
!6866 = distinct !DISubprogram(name: "outs", scope: !3450, file: !3450, line: 1319, type: !6867, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !6869)
!6867 = !DISubroutineType(types: !6868)
!6868 = !{!103, !4795, !102, !336, !336}
!6869 = !{!6870, !6871, !6872, !6873, !6874, !6875}
!6870 = !DILocalVariable(name: "out", arg: 1, scope: !6866, file: !3450, line: 1319, type: !4795)
!6871 = !DILocalVariable(name: "ctx", arg: 2, scope: !6866, file: !3450, line: 1320, type: !102)
!6872 = !DILocalVariable(name: "sp", arg: 3, scope: !6866, file: !3450, line: 1321, type: !336)
!6873 = !DILocalVariable(name: "ep", arg: 4, scope: !6866, file: !3450, line: 1322, type: !336)
!6874 = !DILocalVariable(name: "count", scope: !6866, file: !3450, line: 1324, type: !153)
!6875 = !DILocalVariable(name: "rc", scope: !6876, file: !3450, line: 1327, type: !103)
!6876 = distinct !DILexicalBlock(scope: !6866, file: !3450, line: 1326, column: 45)
!6877 = !DILocation(line: 0, scope: !6866)
!6878 = !DILocation(line: 1326, column: 2, scope: !6866)
!6879 = !DILocation(line: 1324, column: 9, scope: !6866)
!6880 = !DILocation(line: 1326, column: 13, scope: !6866)
!6881 = !DILocation(line: 1326, column: 19, scope: !6866)
!6882 = !DILocation(line: 1327, column: 21, scope: !6876)
!6883 = !DILocation(line: 1326, column: 36, scope: !6866)
!6884 = !DILocation(line: 1326, column: 39, scope: !6866)
!6885 = !DILocation(line: 1327, column: 24, scope: !6876)
!6886 = !DILocation(line: 1327, column: 16, scope: !6876)
!6887 = !DILocation(line: 1327, column: 12, scope: !6876)
!6888 = !DILocation(line: 0, scope: !6876)
!6889 = !DILocation(line: 1329, column: 10, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6876, file: !3450, line: 1329, column: 7)
!6891 = !DILocation(line: 1329, column: 7, scope: !6876)
!6892 = distinct !{!6892, !6878, !6893}
!6893 = !DILocation(line: 1333, column: 2, scope: !6866)
!6894 = !DILocation(line: 1336, column: 1, scope: !6866)
!6895 = distinct !DISubprogram(name: "encode_uint", scope: !3450, file: !3450, line: 788, type: !6896, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !6898)
!6896 = !DISubroutineType(types: !6897)
!6897 = !{!157, !3472, !6499, !157, !336}
!6898 = !{!6899, !6900, !6901, !6902, !6903, !6904, !6906, !6907}
!6899 = !DILocalVariable(name: "value", arg: 1, scope: !6895, file: !3450, line: 788, type: !3472)
!6900 = !DILocalVariable(name: "conv", arg: 2, scope: !6895, file: !3450, line: 789, type: !6499)
!6901 = !DILocalVariable(name: "bps", arg: 3, scope: !6895, file: !3450, line: 790, type: !157)
!6902 = !DILocalVariable(name: "bpe", arg: 4, scope: !6895, file: !3450, line: 791, type: !336)
!6903 = !DILocalVariable(name: "upcase", scope: !6895, file: !3450, line: 793, type: !119)
!6904 = !DILocalVariable(name: "radix", scope: !6895, file: !3450, line: 794, type: !6905)
!6905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6906 = !DILocalVariable(name: "bp", scope: !6895, file: !3450, line: 795, type: !157)
!6907 = !DILocalVariable(name: "lsv", scope: !6908, file: !3450, line: 798, type: !32)
!6908 = distinct !DILexicalBlock(scope: !6895, file: !3450, line: 797, column: 5)
!6909 = !DILocation(line: 0, scope: !6895)
!6910 = !DILocation(line: 793, column: 35, scope: !6895)
!6911 = !DILocation(line: 793, column: 24, scope: !6895)
!6912 = !DILocation(line: 793, column: 16, scope: !6895)
!6913 = !DILocation(line: 794, column: 29, scope: !6895)
!6914 = !DILocation(line: 795, column: 24, scope: !6895)
!6915 = !DILocation(line: 795, column: 17, scope: !6895)
!6916 = !DILocation(line: 797, column: 2, scope: !6895)
!6917 = !DILocation(line: 802, column: 9, scope: !6908)
!6918 = !DILocation(line: 798, column: 22, scope: !6908)
!6919 = !DILocation(line: 0, scope: !6908)
!6920 = !DILocation(line: 800, column: 16, scope: !6908)
!6921 = !DILocation(line: 800, column: 11, scope: !6908)
!6922 = !DILocation(line: 800, column: 4, scope: !6908)
!6923 = !DILocation(line: 800, column: 9, scope: !6908)
!6924 = !DILocation(line: 803, column: 18, scope: !6895)
!6925 = !DILocation(line: 803, column: 24, scope: !6895)
!6926 = !DILocation(line: 803, column: 2, scope: !6908)
!6927 = distinct !{!6927, !6916, !6928}
!6928 = !DILocation(line: 803, column: 37, scope: !6895)
!6929 = !DILocation(line: 808, column: 12, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6895, file: !3450, line: 808, column: 6)
!6931 = !DILocation(line: 808, column: 6, scope: !6895)
!6932 = !DILocation(line: 809, column: 7, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6930, file: !3450, line: 808, column: 23)
!6934 = !DILocation(line: 813, column: 3, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !3450, line: 811, column: 27)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !3450, line: 811, column: 14)
!6937 = distinct !DILexicalBlock(scope: !6933, file: !3450, line: 809, column: 7)
!6938 = !DILocation(line: 0, scope: !6937)
!6939 = !DILocation(line: 818, column: 2, scope: !6895)
!6940 = distinct !DISubprogram(name: "store_count", scope: !3450, file: !3450, line: 1280, type: !6941, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !6945)
!6941 = !DISubroutineType(types: !6942)
!6942 = !{null, !6943, !102, !103}
!6943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6944, size: 32)
!6944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6466)
!6945 = !{!6946, !6947, !6948}
!6946 = !DILocalVariable(name: "conv", arg: 1, scope: !6940, file: !3450, line: 1280, type: !6943)
!6947 = !DILocalVariable(name: "dp", arg: 2, scope: !6940, file: !3450, line: 1281, type: !102)
!6948 = !DILocalVariable(name: "count", arg: 3, scope: !6940, file: !3450, line: 1282, type: !103)
!6949 = !DILocation(line: 0, scope: !6940)
!6950 = !DILocation(line: 1284, column: 38, scope: !6940)
!6951 = !DILocation(line: 1284, column: 2, scope: !6940)
!6952 = !DILocation(line: 1286, column: 4, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6940, file: !3450, line: 1284, column: 50)
!6954 = !DILocation(line: 1286, column: 14, scope: !6953)
!6955 = !DILocation(line: 1287, column: 3, scope: !6953)
!6956 = !DILocation(line: 1289, column: 24, scope: !6953)
!6957 = !DILocation(line: 1289, column: 22, scope: !6953)
!6958 = !DILocation(line: 1290, column: 3, scope: !6953)
!6959 = !DILocation(line: 1292, column: 18, scope: !6953)
!6960 = !DILocation(line: 1292, column: 4, scope: !6953)
!6961 = !DILocation(line: 1292, column: 16, scope: !6953)
!6962 = !DILocation(line: 1293, column: 3, scope: !6953)
!6963 = !DILocation(line: 1295, column: 4, scope: !6953)
!6964 = !DILocation(line: 1295, column: 15, scope: !6953)
!6965 = !DILocation(line: 1296, column: 3, scope: !6953)
!6966 = !DILocation(line: 1298, column: 22, scope: !6953)
!6967 = !DILocation(line: 1298, column: 4, scope: !6953)
!6968 = !DILocation(line: 1298, column: 20, scope: !6953)
!6969 = !DILocation(line: 1299, column: 3, scope: !6953)
!6970 = !DILocation(line: 1301, column: 21, scope: !6953)
!6971 = !DILocation(line: 1301, column: 4, scope: !6953)
!6972 = !DILocation(line: 1301, column: 19, scope: !6953)
!6973 = !DILocation(line: 1302, column: 3, scope: !6953)
!6974 = !DILocation(line: 1304, column: 4, scope: !6953)
!6975 = !DILocation(line: 1304, column: 17, scope: !6953)
!6976 = !DILocation(line: 1305, column: 3, scope: !6953)
!6977 = !DILocation(line: 1307, column: 4, scope: !6953)
!6978 = !DILocation(line: 1307, column: 20, scope: !6953)
!6979 = !DILocation(line: 1308, column: 3, scope: !6953)
!6980 = !DILocation(line: 1316, column: 1, scope: !6940)
!6981 = distinct !DISubprogram(name: "isupper", scope: !6982, file: !6982, line: 16, type: !800, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !6983)
!6982 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6983 = !{!6984}
!6984 = !DILocalVariable(name: "a", arg: 1, scope: !6981, file: !6982, line: 16, type: !103)
!6985 = !DILocation(line: 0, scope: !6981)
!6986 = !DILocation(line: 18, column: 29, scope: !6981)
!6987 = !DILocation(line: 18, column: 45, scope: !6981)
!6988 = !DILocation(line: 18, column: 2, scope: !6981)
!6989 = distinct !DISubprogram(name: "conversion_radix", scope: !3450, file: !3450, line: 761, type: !6990, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !6992)
!6990 = !DISubroutineType(types: !6991)
!6991 = !{!153, !158}
!6992 = !{!6993}
!6993 = !DILocalVariable(name: "specifier", arg: 1, scope: !6989, file: !3450, line: 761, type: !158)
!6994 = !DILocation(line: 0, scope: !6989)
!6995 = !DILocation(line: 763, column: 2, scope: !6989)
!6996 = !DILocation(line: 770, column: 3, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6989, file: !3450, line: 763, column: 21)
!6998 = !DILocation(line: 774, column: 3, scope: !6997)
!6999 = !DILocation(line: 0, scope: !6997)
!7000 = !DILocation(line: 776, column: 1, scope: !6989)
!7001 = distinct !DISubprogram(name: "extract_flags", scope: !3450, file: !3450, line: 339, type: !6843, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !7002)
!7002 = !{!7003, !7004, !7005}
!7003 = !DILocalVariable(name: "conv", arg: 1, scope: !7001, file: !3450, line: 339, type: !6499)
!7004 = !DILocalVariable(name: "sp", arg: 2, scope: !7001, file: !3450, line: 340, type: !336)
!7005 = !DILocalVariable(name: "loop", scope: !7001, file: !3450, line: 342, type: !119)
!7006 = !DILocation(line: 0, scope: !7001)
!7007 = !DILocation(line: 344, column: 2, scope: !7001)
!7008 = !DILocation(line: 345, column: 11, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7001, file: !3450, line: 344, column: 5)
!7010 = !DILocation(line: 345, column: 3, scope: !7009)
!7011 = !DILocation(line: 351, column: 4, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7009, file: !3450, line: 345, column: 16)
!7013 = !DILocation(line: 354, column: 4, scope: !7012)
!7014 = !DILocation(line: 357, column: 4, scope: !7012)
!7015 = !DILocation(line: 360, column: 4, scope: !7012)
!7016 = !DILocation(line: 0, scope: !7012)
!7017 = !DILocation(line: 370, column: 12, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7001, file: !3450, line: 370, column: 6)
!7019 = !DILocation(line: 370, column: 22, scope: !7018)
!7020 = !DILocation(line: 371, column: 19, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7018, file: !3450, line: 370, column: 42)
!7022 = !DILocation(line: 372, column: 2, scope: !7021)
!7023 = !DILocation(line: 376, column: 2, scope: !7001)
!7024 = distinct !DISubprogram(name: "extract_width", scope: !3450, file: !3450, line: 388, type: !6843, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !7025)
!7025 = !{!7026, !7027, !7028, !7029}
!7026 = !DILocalVariable(name: "conv", arg: 1, scope: !7024, file: !3450, line: 388, type: !6499)
!7027 = !DILocalVariable(name: "sp", arg: 2, scope: !7024, file: !3450, line: 389, type: !336)
!7028 = !DILocalVariable(name: "wp", scope: !7024, file: !3450, line: 398, type: !336)
!7029 = !DILocalVariable(name: "width", scope: !7024, file: !3450, line: 399, type: !153)
!7030 = !DILocation(line: 0, scope: !7024)
!7031 = !DILocation(line: 391, column: 8, scope: !7024)
!7032 = !DILocation(line: 391, column: 22, scope: !7024)
!7033 = !DILocation(line: 393, column: 6, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7024, file: !3450, line: 393, column: 6)
!7035 = !DILocation(line: 393, column: 10, scope: !7034)
!7036 = !DILocation(line: 393, column: 6, scope: !7024)
!7037 = !DILocation(line: 394, column: 20, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7034, file: !3450, line: 393, column: 18)
!7039 = !DILocation(line: 395, column: 10, scope: !7038)
!7040 = !DILocation(line: 395, column: 3, scope: !7038)
!7041 = !DILocation(line: 399, column: 17, scope: !7024)
!7042 = !DILocation(line: 401, column: 6, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7024, file: !3450, line: 401, column: 6)
!7044 = !DILocation(line: 401, column: 9, scope: !7043)
!7045 = !DILocation(line: 401, column: 6, scope: !7024)
!7046 = !DILocation(line: 402, column: 23, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7043, file: !3450, line: 401, column: 16)
!7048 = !DILocation(line: 403, column: 9, scope: !7047)
!7049 = !DILocation(line: 403, column: 21, scope: !7047)
!7050 = !DILocation(line: 405, column: 11, scope: !7047)
!7051 = !DILocation(line: 404, column: 21, scope: !7047)
!7052 = !DILocation(line: 406, column: 2, scope: !7047)
!7053 = !DILocation(line: 409, column: 1, scope: !7024)
!7054 = distinct !DISubprogram(name: "extract_prec", scope: !3450, file: !3450, line: 420, type: !6843, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !7055)
!7055 = !{!7056, !7057, !7058}
!7056 = !DILocalVariable(name: "conv", arg: 1, scope: !7054, file: !3450, line: 420, type: !6499)
!7057 = !DILocalVariable(name: "sp", arg: 2, scope: !7054, file: !3450, line: 421, type: !336)
!7058 = !DILocalVariable(name: "prec", scope: !7054, file: !3450, line: 435, type: !153)
!7059 = !DILocation(line: 0, scope: !7054)
!7060 = !DILocation(line: 423, column: 24, scope: !7054)
!7061 = !DILocation(line: 423, column: 28, scope: !7054)
!7062 = !DILocation(line: 423, column: 8, scope: !7054)
!7063 = !DILocation(line: 423, column: 21, scope: !7054)
!7064 = !DILocation(line: 425, column: 6, scope: !7054)
!7065 = !DILocation(line: 428, column: 2, scope: !7054)
!7066 = !DILocation(line: 430, column: 6, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7054, file: !3450, line: 430, column: 6)
!7068 = !DILocation(line: 430, column: 10, scope: !7067)
!7069 = !DILocation(line: 430, column: 6, scope: !7054)
!7070 = !DILocation(line: 431, column: 19, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7067, file: !3450, line: 430, column: 18)
!7072 = !DILocation(line: 432, column: 10, scope: !7071)
!7073 = !DILocation(line: 432, column: 3, scope: !7071)
!7074 = !DILocation(line: 435, column: 16, scope: !7054)
!7075 = !DILocation(line: 437, column: 8, scope: !7054)
!7076 = !DILocation(line: 437, column: 19, scope: !7054)
!7077 = !DILocation(line: 439, column: 10, scope: !7054)
!7078 = !DILocation(line: 438, column: 20, scope: !7054)
!7079 = !DILocation(line: 441, column: 9, scope: !7054)
!7080 = !DILocation(line: 442, column: 1, scope: !7054)
!7081 = distinct !DISubprogram(name: "extract_length", scope: !3450, file: !3450, line: 453, type: !6843, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !7082)
!7082 = !{!7083, !7084}
!7083 = !DILocalVariable(name: "conv", arg: 1, scope: !7081, file: !3450, line: 453, type: !6499)
!7084 = !DILocalVariable(name: "sp", arg: 2, scope: !7081, file: !3450, line: 454, type: !336)
!7085 = !DILocation(line: 0, scope: !7081)
!7086 = !DILocation(line: 456, column: 10, scope: !7081)
!7087 = !DILocation(line: 456, column: 2, scope: !7081)
!7088 = !DILocation(line: 458, column: 8, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7090, file: !3450, line: 458, column: 7)
!7090 = distinct !DILexicalBlock(scope: !7081, file: !3450, line: 456, column: 15)
!7091 = !DILocation(line: 458, column: 7, scope: !7089)
!7092 = !DILocation(line: 458, column: 13, scope: !7089)
!7093 = !DILocation(line: 0, scope: !7089)
!7094 = !DILocation(line: 458, column: 7, scope: !7090)
!7095 = !DILocation(line: 459, column: 21, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7089, file: !3450, line: 458, column: 21)
!7097 = !DILocation(line: 460, column: 4, scope: !7096)
!7098 = !DILocation(line: 461, column: 3, scope: !7096)
!7099 = !DILocation(line: 462, column: 21, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7089, file: !3450, line: 461, column: 10)
!7101 = !DILocation(line: 466, column: 8, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7090, file: !3450, line: 466, column: 7)
!7103 = !DILocation(line: 466, column: 7, scope: !7102)
!7104 = !DILocation(line: 466, column: 13, scope: !7102)
!7105 = !DILocation(line: 0, scope: !7102)
!7106 = !DILocation(line: 466, column: 7, scope: !7090)
!7107 = !DILocation(line: 467, column: 21, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7102, file: !3450, line: 466, column: 21)
!7109 = !DILocation(line: 468, column: 4, scope: !7108)
!7110 = !DILocation(line: 469, column: 3, scope: !7108)
!7111 = !DILocation(line: 470, column: 21, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7102, file: !3450, line: 469, column: 10)
!7113 = !DILocation(line: 474, column: 9, scope: !7090)
!7114 = !DILocation(line: 474, column: 20, scope: !7090)
!7115 = !DILocation(line: 475, column: 3, scope: !7090)
!7116 = !DILocation(line: 476, column: 3, scope: !7090)
!7117 = !DILocation(line: 478, column: 9, scope: !7090)
!7118 = !DILocation(line: 478, column: 20, scope: !7090)
!7119 = !DILocation(line: 479, column: 3, scope: !7090)
!7120 = !DILocation(line: 480, column: 3, scope: !7090)
!7121 = !DILocation(line: 482, column: 9, scope: !7090)
!7122 = !DILocation(line: 482, column: 20, scope: !7090)
!7123 = !DILocation(line: 483, column: 3, scope: !7090)
!7124 = !DILocation(line: 484, column: 3, scope: !7090)
!7125 = !DILocation(line: 486, column: 9, scope: !7090)
!7126 = !DILocation(line: 486, column: 20, scope: !7090)
!7127 = !DILocation(line: 487, column: 3, scope: !7090)
!7128 = !DILocation(line: 492, column: 21, scope: !7090)
!7129 = !DILocation(line: 493, column: 3, scope: !7090)
!7130 = !DILocation(line: 495, column: 9, scope: !7090)
!7131 = !DILocation(line: 495, column: 20, scope: !7090)
!7132 = !DILocation(line: 496, column: 3, scope: !7090)
!7133 = !DILocation(line: 498, column: 2, scope: !7081)
!7134 = distinct !DISubprogram(name: "extract_specifier", scope: !3450, file: !3450, line: 513, type: !6843, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !7135)
!7135 = !{!7136, !7137, !7138, !7139}
!7136 = !DILocalVariable(name: "conv", arg: 1, scope: !7134, file: !3450, line: 513, type: !6499)
!7137 = !DILocalVariable(name: "sp", arg: 2, scope: !7134, file: !3450, line: 514, type: !336)
!7138 = !DILocalVariable(name: "unsupported", scope: !7134, file: !3450, line: 516, type: !119)
!7139 = !DILabel(scope: !7140, name: "int_conv", file: !3450, line: 526)
!7140 = distinct !DILexicalBlock(scope: !7134, file: !3450, line: 520, column: 27)
!7141 = !DILocation(line: 0, scope: !7134)
!7142 = !DILocation(line: 518, column: 20, scope: !7134)
!7143 = !DILocation(line: 518, column: 8, scope: !7134)
!7144 = !DILocation(line: 518, column: 18, scope: !7134)
!7145 = !DILocation(line: 520, column: 2, scope: !7134)
!7146 = !DILocation(line: 525, column: 3, scope: !7140)
!7147 = !DILocation(line: 0, scope: !7140)
!7148 = !DILocation(line: 526, column: 1, scope: !7140)
!7149 = !DILocation(line: 528, column: 24, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7140, file: !3450, line: 528, column: 7)
!7151 = !DILocation(line: 528, column: 7, scope: !7140)
!7152 = !DILocation(line: 535, column: 23, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7140, file: !3450, line: 535, column: 7)
!7154 = !DILocation(line: 535, column: 7, scope: !7140)
!7155 = !DILocation(line: 536, column: 36, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7153, file: !3450, line: 535, column: 31)
!7157 = !DILocation(line: 537, column: 3, scope: !7156)
!7158 = !DILocation(line: 570, column: 9, scope: !7140)
!7159 = !DILocation(line: 570, column: 23, scope: !7140)
!7160 = !DILocation(line: 575, column: 4, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7162, file: !3450, line: 573, column: 48)
!7162 = distinct !DILexicalBlock(scope: !7140, file: !3450, line: 573, column: 7)
!7163 = !DILocation(line: 603, column: 9, scope: !7140)
!7164 = !DILocation(line: 603, column: 23, scope: !7140)
!7165 = !DILocation(line: 605, column: 24, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7140, file: !3450, line: 605, column: 7)
!7167 = !DILocation(line: 605, column: 7, scope: !7140)
!7168 = !DILocation(line: 612, column: 9, scope: !7140)
!7169 = !DILocation(line: 612, column: 23, scope: !7140)
!7170 = !DILocation(line: 619, column: 24, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7140, file: !3450, line: 619, column: 7)
!7172 = !DILocation(line: 619, column: 7, scope: !7140)
!7173 = !DILocation(line: 625, column: 9, scope: !7140)
!7174 = !DILocation(line: 625, column: 17, scope: !7140)
!7175 = !DILocation(line: 626, column: 3, scope: !7140)
!7176 = !DILocation(line: 629, column: 20, scope: !7134)
!7177 = !DILocation(line: 629, column: 8, scope: !7134)
!7178 = !DILocation(line: 518, column: 23, scope: !7134)
!7179 = !DILocation(line: 631, column: 2, scope: !7134)
!7180 = distinct !DISubprogram(name: "extract_decimal", scope: !3450, file: !3450, line: 318, type: !7181, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !7183)
!7181 = !DISubroutineType(types: !7182)
!7182 = !{!153, !777}
!7183 = !{!7184, !7185, !7186}
!7184 = !DILocalVariable(name: "str", arg: 1, scope: !7180, file: !3450, line: 318, type: !777)
!7185 = !DILocalVariable(name: "sp", scope: !7180, file: !3450, line: 320, type: !336)
!7186 = !DILocalVariable(name: "val", scope: !7180, file: !3450, line: 321, type: !153)
!7187 = !DILocation(line: 0, scope: !7180)
!7188 = !DILocation(line: 320, column: 19, scope: !7180)
!7189 = !DILocation(line: 323, column: 37, scope: !7180)
!7190 = !DILocation(line: 323, column: 17, scope: !7180)
!7191 = !DILocation(line: 323, column: 9, scope: !7180)
!7192 = !DILocation(line: 323, column: 2, scope: !7180)
!7193 = !DILocation(line: 324, column: 13, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7180, file: !3450, line: 323, column: 43)
!7195 = !DILocation(line: 324, column: 24, scope: !7194)
!7196 = !DILocation(line: 324, column: 19, scope: !7194)
!7197 = !DILocation(line: 324, column: 27, scope: !7194)
!7198 = distinct !{!7198, !7192, !7199}
!7199 = !DILocation(line: 325, column: 2, scope: !7180)
!7200 = !DILocation(line: 326, column: 7, scope: !7180)
!7201 = !DILocation(line: 327, column: 2, scope: !7180)
!7202 = distinct !DISubprogram(name: "isdigit", scope: !6982, file: !6982, line: 43, type: !800, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !7203)
!7203 = !{!7204}
!7204 = !DILocalVariable(name: "a", arg: 1, scope: !7202, file: !6982, line: 43, type: !103)
!7205 = !DILocation(line: 0, scope: !7202)
!7206 = !DILocation(line: 45, column: 29, scope: !7202)
!7207 = !DILocation(line: 45, column: 45, scope: !7202)
!7208 = !DILocation(line: 45, column: 2, scope: !7202)
!7209 = distinct !DISubprogram(name: "assert_post_action", scope: !7210, file: !7210, line: 26, type: !7211, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3480, retainedNodes: !7213)
!7210 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7211 = !DISubroutineType(types: !7212)
!7212 = !{null, !336, !32}
!7213 = !{!7214, !7215}
!7214 = !DILocalVariable(name: "file", arg: 1, scope: !7209, file: !7210, line: 26, type: !336)
!7215 = !DILocalVariable(name: "line", arg: 2, scope: !7209, file: !7210, line: 26, type: !32)
!7216 = !DILocation(line: 0, scope: !7209)
!7217 = !DILocation(line: 43, column: 2, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7209, file: !7210, line: 43, column: 2)
!7219 = !{i64 2152226077, i64 2152226093, i64 2152226119, i64 2152226147, i64 2152226167}
!7220 = !DILocation(line: 44, column: 1, scope: !7209)
!7221 = distinct !DISubprogram(name: "assert_print", scope: !7210, file: !7210, line: 46, type: !5405, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3480, retainedNodes: !7222)
!7222 = !{!7223, !7224}
!7223 = !DILocalVariable(name: "fmt", arg: 1, scope: !7221, file: !7210, line: 46, type: !336)
!7224 = !DILocalVariable(name: "ap", scope: !7221, file: !7210, line: 48, type: !7225)
!7225 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4413, line: 99, baseType: !7226)
!7226 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4413, line: 40, baseType: !7227)
!7227 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7210, baseType: !7228)
!7228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7229)
!7229 = !{!7230}
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7228, file: !7210, line: 48, baseType: !102, size: 32)
!7231 = !DILocation(line: 0, scope: !7221)
!7232 = !DILocation(line: 48, column: 2, scope: !7221)
!7233 = !DILocation(line: 48, column: 10, scope: !7221)
!7234 = !DILocation(line: 50, column: 2, scope: !7221)
!7235 = !DILocation(line: 52, column: 2, scope: !7221)
!7236 = !DILocation(line: 54, column: 2, scope: !7221)
!7237 = !DILocation(line: 55, column: 1, scope: !7221)
!7238 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !7239, file: !7239, line: 9, type: !333, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3482, retainedNodes: !2894)
!7239 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!7240 = !DILocation(line: 11, column: 1, scope: !7238)
!7241 = !{i64 2147564178, i64 2147564221, i64 2147564261}
!7242 = !DILocation(line: 12, column: 1, scope: !7238)
!7243 = !{i64 2147568405, i64 2147568448, i64 2147568488}
!7244 = !DILocation(line: 13, column: 1, scope: !7238)
!7245 = !{i64 2147568614, i64 2147568657, i64 2147568697}
!7246 = !DILocation(line: 14, column: 1, scope: !7238)
!7247 = !{i64 2147568783, i64 2147568826, i64 2147568866}
!7248 = !DILocation(line: 15, column: 1, scope: !7238)
!7249 = !{i64 2147568946, i64 2147568989, i64 2147569029}
!7250 = !DILocation(line: 16, column: 1, scope: !7238)
!7251 = !{i64 2147569130, i64 2147569173, i64 2147569213}
!7252 = !DILocation(line: 17, column: 1, scope: !7238)
!7253 = !{i64 2147569309, i64 2147569352, i64 2147569392}
!7254 = !DILocation(line: 18, column: 1, scope: !7238)
!7255 = !{i64 2147569551, i64 2147569594, i64 2147569634}
!7256 = !DILocation(line: 19, column: 1, scope: !7238)
!7257 = !{i64 2147569786, i64 2147569829, i64 2147569869}
!7258 = !DILocation(line: 20, column: 1, scope: !7238)
!7259 = !{i64 2147569972, i64 2147570015, i64 2147570055}
!7260 = !DILocation(line: 21, column: 1, scope: !7238)
!7261 = !{i64 2147570188, i64 2147570231, i64 2147570271}
!7262 = !DILocation(line: 22, column: 1, scope: !7238)
!7263 = !{i64 2147570391, i64 2147570434, i64 2147570474}
!7264 = !DILocation(line: 23, column: 1, scope: !7238)
!7265 = !{i64 2147570594, i64 2147570637, i64 2147570677}
!7266 = !DILocation(line: 24, column: 1, scope: !7238)
!7267 = !{i64 2147570769, i64 2147570812, i64 2147570852}
!7268 = !DILocation(line: 25, column: 1, scope: !7238)
!7269 = !{i64 2147570977, i64 2147571020, i64 2147571060}
!7270 = !DILocation(line: 26, column: 1, scope: !7238)
!7271 = !{i64 2147571181, i64 2147571224, i64 2147571264}
!7272 = !DILocation(line: 27, column: 1, scope: !7238)
!7273 = !{i64 2147571374, i64 2147571417, i64 2147571457}
!7274 = !DILocation(line: 28, column: 1, scope: !7238)
!7275 = !{i64 2147571576, i64 2147571619, i64 2147571659}
!7276 = !DILocation(line: 29, column: 1, scope: !7238)
!7277 = !{i64 2147571775, i64 2147571818, i64 2147571858}
!7278 = !DILocation(line: 30, column: 1, scope: !7238)
!7279 = !{i64 2147572002, i64 2147572045, i64 2147572085}
!7280 = !DILocation(line: 31, column: 1, scope: !7238)
!7281 = !{i64 2147572204, i64 2147572247, i64 2147572287}
!7282 = !DILocation(line: 32, column: 1, scope: !7238)
!7283 = !{i64 2147572419, i64 2147572462, i64 2147572502}
!7284 = !DILocation(line: 33, column: 1, scope: !7238)
!7285 = !{i64 2147572591, i64 2147572634, i64 2147572674}
!7286 = !DILocation(line: 34, column: 1, scope: !7238)
!7287 = !{i64 2147572793, i64 2147572836, i64 2147572876}
!7288 = !DILocation(line: 35, column: 1, scope: !7238)
!7289 = !{i64 2147573019, i64 2147573062, i64 2147573102}
!7290 = !DILocation(line: 36, column: 1, scope: !7238)
!7291 = !{i64 2147573218, i64 2147573261, i64 2147573301}
!7292 = !DILocation(line: 37, column: 1, scope: !7238)
!7293 = !{i64 2147573393, i64 2147573436, i64 2147573476}
!7294 = !DILocation(line: 38, column: 1, scope: !7238)
!7295 = !{i64 2147573646, i64 2147573689, i64 2147573729}
!7296 = !DILocation(line: 39, column: 1, scope: !7238)
!7297 = !{i64 2147573884, i64 2147573927, i64 2147573967}
!7298 = !DILocation(line: 40, column: 1, scope: !7238)
!7299 = !{i64 2147574119, i64 2147574162, i64 2147574202}
!7300 = !DILocation(line: 41, column: 1, scope: !7238)
!7301 = !{i64 2147574351, i64 2147574394, i64 2147574434}
!7302 = !DILocation(line: 42, column: 1, scope: !7238)
!7303 = !{i64 2147574577, i64 2147574620, i64 2147574660}
!7304 = !DILocation(line: 43, column: 1, scope: !7238)
!7305 = !{i64 2147574836, i64 2147574879, i64 2147574919}
!7306 = !DILocation(line: 44, column: 1, scope: !7238)
!7307 = !{i64 2147575062, i64 2147575105, i64 2147575145}
!7308 = !DILocation(line: 45, column: 1, scope: !7238)
!7309 = !{i64 2147575303, i64 2147575346, i64 2147575386}
!7310 = !DILocation(line: 46, column: 1, scope: !7238)
!7311 = !{i64 2147575547, i64 2147575590, i64 2147575630}
!7312 = !DILocation(line: 47, column: 1, scope: !7238)
!7313 = !{i64 2147575788, i64 2147575831, i64 2147575871}
!7314 = !DILocation(line: 48, column: 1, scope: !7238)
!7315 = !{i64 2147576023, i64 2147576066, i64 2147576106}
!7316 = !DILocation(line: 49, column: 1, scope: !7238)
!7317 = !{i64 2147576249, i64 2147576292, i64 2147576332}
!7318 = !DILocation(line: 50, column: 1, scope: !7238)
!7319 = !{i64 2147576475, i64 2147576518, i64 2147576558}
!7320 = !DILocation(line: 51, column: 1, scope: !7238)
!7321 = !{i64 2147576719, i64 2147576762, i64 2147576802}
!7322 = !DILocation(line: 52, column: 1, scope: !7238)
!7323 = !{i64 2147576957, i64 2147577000, i64 2147577040}
!7324 = !DILocation(line: 53, column: 1, scope: !7238)
!7325 = !{i64 2147581292, i64 2147581335, i64 2147581375}
!7326 = !DILocation(line: 54, column: 1, scope: !7238)
!7327 = !{i64 2147581530, i64 2147581573, i64 2147581613}
!7328 = !DILocation(line: 55, column: 1, scope: !7238)
!7329 = !{i64 2147581774, i64 2147581817, i64 2147581857}
!7330 = !DILocation(line: 56, column: 1, scope: !7238)
!7331 = !{i64 2147582024, i64 2147582067, i64 2147582107}
!7332 = !DILocation(line: 57, column: 1, scope: !7238)
!7333 = !{i64 2147582271, i64 2147582314, i64 2147582354}
!7334 = !DILocation(line: 58, column: 1, scope: !7238)
!7335 = !{i64 2147582506, i64 2147582549, i64 2147582589}
!7336 = !DILocation(line: 59, column: 1, scope: !7238)
!7337 = !{i64 2147582741, i64 2147582784, i64 2147582824}
!7338 = !DILocation(line: 60, column: 1, scope: !7238)
!7339 = !{i64 2147582976, i64 2147583019, i64 2147583059}
!7340 = !DILocation(line: 61, column: 1, scope: !7238)
!7341 = !{i64 2147583214, i64 2147583257, i64 2147583297}
!7342 = !DILocation(line: 62, column: 1, scope: !7238)
!7343 = !{i64 2147583455, i64 2147583498, i64 2147583538}
!7344 = !DILocation(line: 63, column: 1, scope: !7238)
!7345 = !{i64 2147583714, i64 2147583757, i64 2147583797}
!7346 = !DILocation(line: 64, column: 1, scope: !7238)
!7347 = !{i64 2147583994, i64 2147584037, i64 2147584077}
!7348 = !DILocation(line: 65, column: 1, scope: !7238)
!7349 = !{i64 2147584223, i64 2147584266, i64 2147584306}
!7350 = !DILocation(line: 66, column: 1, scope: !7238)
!7351 = !{i64 2147584431, i64 2147584474, i64 2147584514}
!7352 = !DILocation(line: 67, column: 1, scope: !7238)
!7353 = !{i64 2147584642, i64 2147584685, i64 2147584725}
!7354 = !DILocation(line: 68, column: 1, scope: !7238)
!7355 = !{i64 2147584877, i64 2147584920, i64 2147584960}
!7356 = !DILocation(line: 69, column: 1, scope: !7238)
!7357 = !{i64 2147585106, i64 2147585149, i64 2147585189}
!7358 = !DILocation(line: 70, column: 1, scope: !7238)
!7359 = !{i64 2147585323, i64 2147585366, i64 2147585406}
!7360 = !DILocation(line: 71, column: 1, scope: !7238)
!7361 = !{i64 2147585552, i64 2147585595, i64 2147585635}
!7362 = !DILocation(line: 72, column: 1, scope: !7238)
!7363 = !{i64 2147585790, i64 2147585833, i64 2147585873}
!7364 = !DILocation(line: 73, column: 1, scope: !7238)
!7365 = !{i64 2147586022, i64 2147586065, i64 2147586105}
!7366 = !DILocation(line: 74, column: 1, scope: !7238)
!7367 = !{i64 2147586248, i64 2147586291, i64 2147586331}
!7368 = !DILocation(line: 75, column: 1, scope: !7238)
!7369 = !{i64 2147586465, i64 2147586508, i64 2147586548}
!7370 = !DILocation(line: 76, column: 1, scope: !7238)
!7371 = !{i64 2147586697, i64 2147586740, i64 2147586780}
!7372 = !DILocation(line: 77, column: 1, scope: !7238)
!7373 = !{i64 2147586923, i64 2147586966, i64 2147587006}
!7374 = !DILocation(line: 78, column: 1, scope: !7238)
!7375 = !{i64 2147587137, i64 2147587180, i64 2147587220}
!7376 = !DILocation(line: 79, column: 1, scope: !7238)
!7377 = !{i64 2147587357, i64 2147587400, i64 2147587440}
!7378 = !DILocation(line: 80, column: 1, scope: !7238)
!7379 = !{i64 2147587589, i64 2147587632, i64 2147587672}
!7380 = !DILocation(line: 81, column: 1, scope: !7238)
!7381 = !{i64 2147587797, i64 2147587840, i64 2147587880}
!7382 = !DILocation(line: 82, column: 1, scope: !7238)
!7383 = !{i64 2147588002, i64 2147588045, i64 2147588085}
!7384 = !DILocation(line: 83, column: 1, scope: !7238)
!7385 = !{i64 2147588219, i64 2147588262, i64 2147588302}
!7386 = !DILocation(line: 84, column: 1, scope: !7238)
!7387 = !{i64 2147588433, i64 2147588476, i64 2147588516}
!7388 = !DILocation(line: 85, column: 1, scope: !7238)
!7389 = !{i64 2147588659, i64 2147588702, i64 2147588742}
!7390 = !DILocation(line: 86, column: 1, scope: !7238)
!7391 = !{i64 2147588879, i64 2147588922, i64 2147588962}
!7392 = !DILocation(line: 87, column: 1, scope: !7238)
!7393 = !{i64 2147589084, i64 2147589127, i64 2147589167}
!7394 = !DILocation(line: 88, column: 1, scope: !7238)
!7395 = !{i64 2147593377, i64 2147593420, i64 2147593460}
!7396 = !DILocation(line: 89, column: 1, scope: !7238)
!7397 = !{i64 2147593612, i64 2147593655, i64 2147593695}
!7398 = !DILocation(line: 90, column: 1, scope: !7238)
!7399 = !{i64 2147593862, i64 2147593905, i64 2147593945}
!7400 = !DILocation(line: 91, column: 1, scope: !7238)
!7401 = !{i64 2147594112, i64 2147594155, i64 2147594195}
!7402 = !DILocation(line: 92, column: 1, scope: !7238)
!7403 = !{i64 2147594350, i64 2147594393, i64 2147594433}
!7404 = !DILocation(line: 93, column: 1, scope: !7238)
!7405 = !{i64 2147594561, i64 2147594604, i64 2147594644}
!7406 = !DILocation(line: 94, column: 1, scope: !7238)
!7407 = !{i64 2147594778, i64 2147594821, i64 2147594861}
!7408 = !DILocation(line: 95, column: 1, scope: !7238)
!7409 = !{i64 2147594974, i64 2147595017, i64 2147595057}
!7410 = !DILocation(line: 96, column: 1, scope: !7238)
!7411 = !{i64 2147595176, i64 2147595219, i64 2147595259}
!7412 = !DILocation(line: 97, column: 1, scope: !7238)
!7413 = !{i64 2147595369, i64 2147595412, i64 2147595452}
!7414 = !DILocation(line: 98, column: 1, scope: !7238)
!7415 = !{i64 2147595577, i64 2147595620, i64 2147595660}
!7416 = !DILocation(line: 99, column: 1, scope: !7238)
!7417 = !{i64 2147595773, i64 2147595816, i64 2147595856}
!7418 = !DILocation(line: 100, column: 1, scope: !7238)
!7419 = !{i64 2147595978, i64 2147596021, i64 2147596061}
!7420 = !DILocation(line: 101, column: 1, scope: !7238)
!7421 = !{i64 2147596189, i64 2147596232, i64 2147596272}
!7422 = !DILocation(line: 102, column: 1, scope: !7238)
!7423 = !{i64 2147596388, i64 2147596431, i64 2147596471}
!7424 = !DILocation(line: 103, column: 1, scope: !7238)
!7425 = !{i64 2147596563, i64 2147596606, i64 2147596646}
!7426 = !DILocation(line: 104, column: 1, scope: !7238)
!7427 = !{i64 2147596747, i64 2147596790, i64 2147596830}
!7428 = !DILocation(line: 105, column: 1, scope: !7238)
!7429 = !{i64 2147596949, i64 2147596992, i64 2147597032}
!7430 = !DILocation(line: 106, column: 1, scope: !7238)
!7431 = !{i64 2147597151, i64 2147597194, i64 2147597234}
!7432 = !DILocation(line: 107, column: 1, scope: !7238)
!7433 = !{i64 2147597356, i64 2147597399, i64 2147597439}
!7434 = !DILocation(line: 108, column: 1, scope: !7238)
!7435 = !{i64 2147597549, i64 2147597592, i64 2147597632}
!7436 = !DILocation(line: 109, column: 1, scope: !7238)
!7437 = !{i64 2147597715, i64 2147597758, i64 2147597798}
!7438 = !DILocation(line: 110, column: 1, scope: !7238)
!7439 = !{i64 2147597899, i64 2147597942, i64 2147597982}
!7440 = !DILocation(line: 111, column: 1, scope: !7238)
!7441 = !{i64 2147598089, i64 2147598132, i64 2147598172}
!7442 = !DILocation(line: 112, column: 1, scope: !7238)
!7443 = !{i64 2147598273, i64 2147598316, i64 2147598356}
!7444 = !DILocation(line: 113, column: 1, scope: !7238)
!7445 = !{i64 2147598487, i64 2147598530, i64 2147598570}
!7446 = !DILocation(line: 114, column: 1, scope: !7238)
!7447 = !{i64 2147598698, i64 2147598741, i64 2147598781}
!7448 = !DILocation(line: 115, column: 1, scope: !7238)
!7449 = !{i64 2147598921, i64 2147598964, i64 2147599004}
!7450 = !DILocation(line: 116, column: 1, scope: !7238)
!7451 = !{i64 2147599105, i64 2147599148, i64 2147599188}
!7452 = !DILocation(line: 117, column: 1, scope: !7238)
!7453 = !{i64 2147599319, i64 2147599362, i64 2147599402}
!7454 = !DILocation(line: 118, column: 1, scope: !7238)
!7455 = !{i64 2147599485, i64 2147599528, i64 2147599568}
!7456 = !DILocation(line: 119, column: 1, scope: !7238)
!7457 = !{i64 2147599666, i64 2147599709, i64 2147599749}
!7458 = !DILocation(line: 120, column: 1, scope: !7238)
!7459 = !{i64 2147599859, i64 2147599902, i64 2147599942}
!7460 = !DILocation(line: 121, column: 1, scope: !7238)
!7461 = !{i64 2147600085, i64 2147600128, i64 2147600168}
!7462 = !DILocation(line: 122, column: 1, scope: !7238)
!7463 = !{i64 2147600299, i64 2147600342, i64 2147600382}
!7464 = !DILocation(line: 123, column: 1, scope: !7238)
!7465 = !{i64 2147600525, i64 2147600568, i64 2147600608}
!7466 = !DILocation(line: 124, column: 1, scope: !7238)
!7467 = !{i64 2147600742, i64 2147600785, i64 2147600825}
!7468 = !DILocation(line: 125, column: 1, scope: !7238)
!7469 = !{i64 2147601019, i64 2147601062, i64 2147601102}
!7470 = !DILocation(line: 126, column: 1, scope: !7238)
!7471 = !{i64 2147601245, i64 2147601288, i64 2147601328}
!7472 = !DILocation(line: 127, column: 1, scope: !7238)
!7473 = !{i64 2147601441, i64 2147601484, i64 2147601524}
!7474 = !DILocation(line: 128, column: 1, scope: !7238)
!7475 = !{i64 2147601706, i64 2147601749, i64 2147601789}
!7476 = !DILocation(line: 129, column: 1, scope: !7238)
!7477 = !{i64 2147601920, i64 2147601963, i64 2147602003}
!7478 = !DILocation(line: 130, column: 1, scope: !7238)
!7479 = !{i64 2147602095, i64 2147602138, i64 2147602178}
!7480 = !DILocation(line: 131, column: 1, scope: !7238)
!7481 = !{i64 2147602349, i64 2147602392, i64 2147602432}
!7482 = !DILocation(line: 132, column: 1, scope: !7238)
!7483 = !{i64 2147606609, i64 2147606652, i64 2147606692}
!7484 = !DILocation(line: 133, column: 1, scope: !7238)
!7485 = !{i64 2147606851, i64 2147606894, i64 2147606934}
!7486 = !DILocation(line: 134, column: 1, scope: !7238)
!7487 = !{i64 2147607014, i64 2147607057, i64 2147607097}
!7488 = !DILocation(line: 135, column: 1, scope: !7238)
!7489 = !{i64 2147607201, i64 2147607244, i64 2147607284}
!7490 = !DILocation(line: 136, column: 1, scope: !7238)
!7491 = !{i64 2147607409, i64 2147607452, i64 2147607492}
!7492 = !DILocation(line: 137, column: 1, scope: !7238)
!7493 = !{i64 2147607605, i64 2147607648, i64 2147607688}
!7494 = !DILocation(line: 138, column: 1, scope: !7238)
!7495 = !{i64 2147607798, i64 2147607841, i64 2147607881}
!7496 = !DILocation(line: 139, column: 1, scope: !7238)
!7497 = !{i64 2147607980, i64 2147608023, i64 2147608063}
!7498 = !DILocation(line: 140, column: 1, scope: !7238)
!7499 = !{i64 2147608194, i64 2147608237, i64 2147608277}
!7500 = !DILocation(line: 141, column: 1, scope: !7238)
!7501 = !{i64 2147608405, i64 2147608448, i64 2147608488}
!7502 = !DILocation(line: 142, column: 1, scope: !7238)
!7503 = !{i64 2147608625, i64 2147608668, i64 2147608708}
!7504 = !DILocation(line: 143, column: 1, scope: !7238)
!7505 = !{i64 2147608832, i64 2147608875, i64 2147608915}
!7506 = !DILocation(line: 144, column: 1, scope: !7238)
!7507 = !{i64 2147609105, i64 2147609148, i64 2147609188}
!7508 = !DILocation(line: 145, column: 1, scope: !7238)
!7509 = !{i64 2147609353, i64 2147609396, i64 2147609436}
!7510 = !DILocation(line: 146, column: 1, scope: !7238)
!7511 = !{i64 2147609552, i64 2147609595, i64 2147609635}
!7512 = !DILocation(line: 147, column: 1, scope: !7238)
!7513 = !{i64 2147609787, i64 2147609830, i64 2147609870}
!7514 = !DILocation(line: 148, column: 1, scope: !7238)
!7515 = !{i64 2147610037, i64 2147610080, i64 2147610120}
!7516 = !DILocation(line: 149, column: 1, scope: !7238)
!7517 = !{i64 2147610239, i64 2147610282, i64 2147610322}
!7518 = !DILocation(line: 150, column: 1, scope: !7238)
!7519 = !{i64 2147610462, i64 2147610505, i64 2147610545}
!7520 = !DILocation(line: 151, column: 1, scope: !7238)
!7521 = !{i64 2147610676, i64 2147610719, i64 2147610759}
!7522 = !DILocation(line: 152, column: 1, scope: !7238)
!7523 = !{i64 2147610920, i64 2147610963, i64 2147611003}
!7524 = !DILocation(line: 153, column: 1, scope: !7238)
!7525 = !{i64 2147611149, i64 2147611192, i64 2147611232}
!7526 = !DILocation(line: 154, column: 1, scope: !7238)
!7527 = !{i64 2147611378, i64 2147611421, i64 2147611461}
!7528 = !DILocation(line: 155, column: 1, scope: !7238)
!7529 = !{i64 2147611586, i64 2147611629, i64 2147611669}
!7530 = !DILocation(line: 156, column: 1, scope: !7238)
!7531 = !{i64 2147611824, i64 2147611867, i64 2147611907}
!7532 = !DILocation(line: 157, column: 1, scope: !7238)
!7533 = !{i64 2147612050, i64 2147612093, i64 2147612133}
!7534 = !DILocation(line: 158, column: 1, scope: !7238)
!7535 = !{i64 2147612309, i64 2147612352, i64 2147612392}
!7536 = !DILocation(line: 159, column: 1, scope: !7238)
!7537 = !{i64 2147612529, i64 2147612572, i64 2147612612}
!7538 = !DILocation(line: 160, column: 1, scope: !7238)
!7539 = !{i64 2147612761, i64 2147612804, i64 2147612844}
!7540 = !DILocation(line: 161, column: 1, scope: !7238)
!7541 = !{i64 2147613002, i64 2147613045, i64 2147613085}
!7542 = !DILocation(line: 162, column: 1, scope: !7238)
!7543 = !{i64 2147613243, i64 2147613286, i64 2147613326}
!7544 = !DILocation(line: 163, column: 1, scope: !7238)
!7545 = !{i64 2147613466, i64 2147613509, i64 2147613549}
!7546 = !DILocation(line: 164, column: 1, scope: !7238)
!7547 = !{i64 2147613683, i64 2147613726, i64 2147613766}
!7548 = !DILocation(line: 165, column: 1, scope: !7238)
!7549 = !{i64 2147613924, i64 2147613967, i64 2147614007}
!7550 = !DILocation(line: 166, column: 1, scope: !7238)
!7551 = !{i64 2147614111, i64 2147614154, i64 2147614194}
!7552 = !DILocation(line: 167, column: 1, scope: !7238)
!7553 = !{i64 2147614274, i64 2147614317, i64 2147614357}
!7554 = !DILocation(line: 168, column: 1, scope: !7238)
!7555 = !{i64 2147614479, i64 2147614522, i64 2147614562}
!7556 = !DILocation(line: 169, column: 1, scope: !7238)
!7557 = !{i64 2147614672, i64 2147614715, i64 2147614755}
!7558 = !DILocation(line: 170, column: 1, scope: !7238)
!7559 = !{i64 2147614931, i64 2147614974, i64 2147615014}
!7560 = !DILocation(line: 171, column: 1, scope: !7238)
!7561 = !{i64 2147619215, i64 2147619258, i64 2147619298}
!7562 = !DILocation(line: 172, column: 1, scope: !7238)
!7563 = !{i64 2147619444, i64 2147619487, i64 2147619527}
!7564 = !DILocation(line: 173, column: 1, scope: !7238)
!7565 = !{i64 2147619658, i64 2147619701, i64 2147619741}
!7566 = !DILocation(line: 174, column: 1, scope: !7238)
!7567 = !{i64 2147619860, i64 2147619903, i64 2147619943}
!7568 = !DILocation(line: 175, column: 1, scope: !7238)
!7569 = !{i64 2147620056, i64 2147620099, i64 2147620139}
!7570 = !DILocation(line: 176, column: 1, scope: !7238)
!7571 = !{i64 2147620268, i64 2147620311, i64 2147620351}
!7572 = !DILocation(line: 177, column: 1, scope: !7238)
!7573 = !{i64 2147620489, i64 2147620532, i64 2147620572}
!7574 = !DILocation(line: 178, column: 1, scope: !7238)
!7575 = !{i64 2147620703, i64 2147620746, i64 2147620786}
!7576 = !DILocation(line: 179, column: 1, scope: !7238)
!7577 = !{i64 2147620893, i64 2147620936, i64 2147620976}
!7578 = !DILocation(line: 180, column: 1, scope: !7238)
!7579 = !{i64 2147621092, i64 2147621135, i64 2147621175}
!7580 = !DILocation(line: 181, column: 1, scope: !7238)
!7581 = !{i64 2147621297, i64 2147621340, i64 2147621380}
!7582 = !DILocation(line: 182, column: 1, scope: !7238)
!7583 = !{i64 2147621517, i64 2147621560, i64 2147621600}
!7584 = !DILocation(line: 183, column: 1, scope: !7238)
!7585 = !{i64 2147621718, i64 2147621761, i64 2147621801}
!7586 = !DILocation(line: 184, column: 1, scope: !7238)
!7587 = !{i64 2147621917, i64 2147621960, i64 2147622000}
!7588 = !DILocation(line: 185, column: 1, scope: !7238)
!7589 = !{i64 2147622122, i64 2147622165, i64 2147622205}
!7590 = !DILocation(line: 186, column: 1, scope: !7238)
!7591 = !{i64 2147622291, i64 2147622334, i64 2147622374}
!7592 = !DILocation(line: 187, column: 1, scope: !7238)
!7593 = !{i64 2147622475, i64 2147622518, i64 2147622558}
!7594 = !DILocation(line: 188, column: 1, scope: !7238)
!7595 = !{i64 2147622659, i64 2147622702, i64 2147622742}
!7596 = !DILocation(line: 189, column: 1, scope: !7238)
!7597 = !{i64 2147622843, i64 2147622886, i64 2147622926}
!7598 = !DILocation(line: 190, column: 1, scope: !7238)
!7599 = !{i64 2147623081, i64 2147623124, i64 2147623164}
!7600 = !DILocation(line: 191, column: 1, scope: !7238)
!7601 = !{i64 2147623311, i64 2147623354, i64 2147623394}
!7602 = !DILocation(line: 192, column: 1, scope: !7238)
!7603 = !{i64 2147623540, i64 2147623583, i64 2147623623}
!7604 = !DILocation(line: 193, column: 1, scope: !7238)
!7605 = !{i64 2147623727, i64 2147623770, i64 2147623810}
!7606 = !DILocation(line: 194, column: 1, scope: !7238)
!7607 = !{i64 2147623923, i64 2147623966, i64 2147624006}
!7608 = !DILocation(line: 195, column: 1, scope: !7238)
!7609 = !{i64 2147624131, i64 2147624174, i64 2147624214}
!7610 = !DILocation(line: 196, column: 1, scope: !7238)
!7611 = !{i64 2147624343, i64 2147624386, i64 2147624426}
!7612 = !DILocation(line: 197, column: 1, scope: !7238)
!7613 = !{i64 2147624542, i64 2147624585, i64 2147624625}
!7614 = !DILocation(line: 198, column: 1, scope: !7238)
!7615 = !{i64 2147624780, i64 2147624823, i64 2147624863}
!7616 = !DILocation(line: 199, column: 1, scope: !7238)
!7617 = !{i64 2147624976, i64 2147625019, i64 2147625059}
!7618 = !DILocation(line: 200, column: 1, scope: !7238)
!7619 = !{i64 2147625178, i64 2147625221, i64 2147625261}
!7620 = !DILocation(line: 201, column: 1, scope: !7238)
!7621 = !{i64 2147625371, i64 2147625414, i64 2147625454}
!7622 = !DILocation(line: 202, column: 1, scope: !7238)
!7623 = !{i64 2147625605, i64 2147625648, i64 2147625688}
!7624 = !DILocation(line: 203, column: 1, scope: !7238)
!7625 = !{i64 2147625768, i64 2147625811, i64 2147625851}
!7626 = !DILocation(line: 204, column: 1, scope: !7238)
!7627 = !{i64 2147626007, i64 2147626050, i64 2147626090}
!7628 = !DILocation(line: 205, column: 1, scope: !7238)
!7629 = !{i64 2147626246, i64 2147626289, i64 2147626329}
!7630 = !DILocation(line: 206, column: 1, scope: !7238)
!7631 = !{i64 2147626482, i64 2147626525, i64 2147626565}
!7632 = !DILocation(line: 207, column: 1, scope: !7238)
!7633 = !{i64 2147626712, i64 2147626755, i64 2147626795}
!7634 = !DILocation(line: 208, column: 1, scope: !7238)
!7635 = !{i64 2147626899, i64 2147626942, i64 2147626982}
!7636 = !DILocation(line: 209, column: 1, scope: !7238)
!7637 = !{i64 2147627098, i64 2147627141, i64 2147627181}
!7638 = !DILocation(line: 210, column: 1, scope: !7238)
!7639 = !{i64 2147627369, i64 2147627412, i64 2147627452}
!7640 = !DILocation(line: 211, column: 1, scope: !7238)
!7641 = !{i64 2147627544, i64 2147627587, i64 2147627627}
!7642 = !DILocation(line: 212, column: 1, scope: !7238)
!7643 = !{i64 2147627778, i64 2147627821, i64 2147627861}
!7644 = !DILocation(line: 213, column: 1, scope: !7238)
!7645 = !{i64 2147627986, i64 2147628029, i64 2147628069}
!7646 = !DILocation(line: 214, column: 1, scope: !7238)
!7647 = !{i64 2147628204, i64 2147628247, i64 2147628287}
!7648 = !DILocation(line: 215, column: 1, scope: !7238)
!7649 = !{i64 2147632455, i64 2147632498, i64 2147632538}
!7650 = !DILocation(line: 216, column: 1, scope: !7238)
!7651 = !{i64 2147632687, i64 2147632730, i64 2147632770}
!7652 = !DILocation(line: 217, column: 1, scope: !7238)
!7653 = !{i64 2147632907, i64 2147632950, i64 2147632990}
!7654 = !DILocation(line: 218, column: 1, scope: !7238)
!7655 = !{i64 2147633103, i64 2147633146, i64 2147633186}
!7656 = !DILocation(line: 219, column: 1, scope: !7238)
!7657 = !{i64 2147633309, i64 2147633352, i64 2147633392}
!7658 = !DILocation(line: 220, column: 1, scope: !7238)
!7659 = !{i64 2147633514, i64 2147633557, i64 2147633597}
!7660 = !DILocation(line: 221, column: 1, scope: !7238)
!7661 = !{i64 2147633740, i64 2147633783, i64 2147633823}
!7662 = !DILocation(line: 222, column: 1, scope: !7238)
!7663 = !{i64 2147633948, i64 2147633991, i64 2147634031}
!7664 = !DILocation(line: 223, column: 1, scope: !7238)
!7665 = !{i64 2147634144, i64 2147634187, i64 2147634227}
!7666 = !DILocation(line: 224, column: 1, scope: !7238)
!7667 = !{i64 2147634376, i64 2147634419, i64 2147634459}
!7668 = !DILocation(line: 225, column: 1, scope: !7238)
!7669 = !{i64 2147634560, i64 2147634603, i64 2147634643}
!7670 = !DILocation(line: 226, column: 1, scope: !7238)
!7671 = !{i64 2147634769, i64 2147634812, i64 2147634852}
!7672 = !DILocation(line: 227, column: 1, scope: !7238)
!7673 = !{i64 2147634977, i64 2147635020, i64 2147635060}
!7674 = !DILocation(line: 228, column: 1, scope: !7238)
!7675 = !{i64 2147635173, i64 2147635216, i64 2147635256}
!7676 = !DILocation(line: 229, column: 1, scope: !7238)
!7677 = !{i64 2147635357, i64 2147635400, i64 2147635440}
!7678 = !DILocation(line: 230, column: 1, scope: !7238)
!7679 = !{i64 2147635583, i64 2147635626, i64 2147635666}
!7680 = !DILocation(line: 231, column: 1, scope: !7238)
!7681 = !{i64 2147635809, i64 2147635852, i64 2147635892}
!7682 = !DILocation(line: 232, column: 1, scope: !7238)
!7683 = !{i64 2147636035, i64 2147636078, i64 2147636118}
!7684 = !DILocation(line: 233, column: 1, scope: !7238)
!7685 = !{i64 2147636261, i64 2147636304, i64 2147636344}
!7686 = !DILocation(line: 234, column: 1, scope: !7238)
!7687 = !{i64 2147636487, i64 2147636530, i64 2147636570}
!7688 = !DILocation(line: 235, column: 1, scope: !7238)
!7689 = !{i64 2147636719, i64 2147636762, i64 2147636802}
!7690 = !DILocation(line: 236, column: 1, scope: !7238)
!7691 = !{i64 2147636957, i64 2147637000, i64 2147637040}
!7692 = !DILocation(line: 237, column: 1, scope: !7238)
!7693 = !{i64 2147637189, i64 2147637232, i64 2147637272}
!7694 = !DILocation(line: 238, column: 1, scope: !7238)
!7695 = !{i64 2147637391, i64 2147637434, i64 2147637474}
!7696 = !DILocation(line: 239, column: 1, scope: !7238)
!7697 = !{i64 2147637641, i64 2147637684, i64 2147637724}
!7698 = !DILocation(line: 240, column: 1, scope: !7238)
!7699 = !{i64 2147637879, i64 2147637922, i64 2147637962}
!7700 = !DILocation(line: 241, column: 1, scope: !7238)
!7701 = !{i64 2147638087, i64 2147638130, i64 2147638170}
!7702 = !DILocation(line: 242, column: 1, scope: !7238)
!7703 = !{i64 2147638283, i64 2147638326, i64 2147638366}
!7704 = !DILocation(line: 243, column: 1, scope: !7238)
!7705 = !{i64 2147638467, i64 2147638510, i64 2147638550}
!7706 = !DILocation(line: 244, column: 1, scope: !7238)
!7707 = !{i64 2147638684, i64 2147638727, i64 2147638767}
!7708 = !DILocation(line: 245, column: 1, scope: !7238)
!7709 = !{i64 2147638889, i64 2147638932, i64 2147638972}
!7710 = !DILocation(line: 246, column: 1, scope: !7238)
!7711 = !{i64 2147639124, i64 2147639167, i64 2147639207}
!7712 = !DILocation(line: 247, column: 1, scope: !7238)
!7713 = !{i64 2147639347, i64 2147639390, i64 2147639430}
!7714 = !DILocation(line: 248, column: 1, scope: !7238)
!7715 = !{i64 2147639570, i64 2147639613, i64 2147639653}
!7716 = !DILocation(line: 249, column: 1, scope: !7238)
!7717 = !{i64 2147639808, i64 2147639851, i64 2147639891}
!7718 = !DILocation(line: 250, column: 1, scope: !7238)
!7719 = !{i64 2147640046, i64 2147640089, i64 2147640129}
!7720 = !DILocation(line: 251, column: 1, scope: !7238)
!7721 = !{i64 2147640263, i64 2147640306, i64 2147640346}
!7722 = !DILocation(line: 252, column: 1, scope: !7238)
!7723 = !{i64 2147640468, i64 2147640511, i64 2147640551}
!7724 = !DILocation(line: 253, column: 1, scope: !7238)
!7725 = !{i64 2147640661, i64 2147640704, i64 2147640744}
!7726 = !DILocation(line: 254, column: 1, scope: !7238)
!7727 = !{i64 2147640914, i64 2147640957, i64 2147640997}
!7728 = !DILocation(line: 255, column: 1, scope: !7238)
!7729 = !{i64 2147645183, i64 2147645226, i64 2147645266}
!7730 = !DILocation(line: 256, column: 1, scope: !7238)
!7731 = !{i64 2147645379, i64 2147645422, i64 2147645462}
!7732 = !DILocation(line: 257, column: 1, scope: !7238)
!7733 = !{i64 2147645593, i64 2147645636, i64 2147645676}
!7734 = !DILocation(line: 258, column: 1, scope: !7238)
!7735 = !{i64 2147645801, i64 2147645844, i64 2147645884}
!7736 = !DILocation(line: 259, column: 1, scope: !7238)
!7737 = !{i64 2147645991, i64 2147646034, i64 2147646074}
!7738 = !DILocation(line: 260, column: 1, scope: !7238)
!7739 = !{i64 2147646205, i64 2147646248, i64 2147646288}
!7740 = !DILocation(line: 261, column: 1, scope: !7238)
!7741 = !{i64 2147646467, i64 2147646510, i64 2147646550}
!7742 = !DILocation(line: 262, column: 1, scope: !7238)
!7743 = !{i64 2147646678, i64 2147646721, i64 2147646761}
!7744 = !DILocation(line: 263, column: 1, scope: !7238)
!7745 = !{i64 2147646922, i64 2147646965, i64 2147647005}
!7746 = !DILocation(line: 264, column: 1, scope: !7238)
!7747 = !{i64 2147647133, i64 2147647176, i64 2147647216}
!7748 = !DILocation(line: 265, column: 1, scope: !7238)
!7749 = !{i64 2147647362, i64 2147647405, i64 2147647445}
!7750 = !DILocation(line: 266, column: 1, scope: !7238)
!7751 = !{i64 2147647627, i64 2147647670, i64 2147647710}
!7752 = !DILocation(line: 267, column: 1, scope: !7238)
!7753 = !{i64 2147647832, i64 2147647875, i64 2147647915}
!7754 = !DILocation(line: 268, column: 1, scope: !7238)
!7755 = !{i64 2147648028, i64 2147648071, i64 2147648111}
!7756 = !DILocation(line: 269, column: 1, scope: !7238)
!7757 = !{i64 2147648251, i64 2147648294, i64 2147648334}
!7758 = !DILocation(line: 270, column: 1, scope: !7238)
!7759 = !{i64 2147648414, i64 2147648457, i64 2147648497}
!7760 = !DILocation(line: 271, column: 1, scope: !7238)
!7761 = !{i64 2147648619, i64 2147648662, i64 2147648702}
!7762 = !DILocation(line: 272, column: 1, scope: !7238)
!7763 = !{i64 2147648839, i64 2147648882, i64 2147648922}
!7764 = !DILocation(line: 273, column: 1, scope: !7238)
!7765 = !{i64 2147649053, i64 2147649096, i64 2147649136}
!7766 = !DILocation(line: 274, column: 1, scope: !7238)
!7767 = !{i64 2147649297, i64 2147649340, i64 2147649380}
!7768 = !DILocation(line: 275, column: 1, scope: !7238)
!7769 = !{i64 2147649529, i64 2147649572, i64 2147649612}
!7770 = !DILocation(line: 276, column: 1, scope: !7238)
!7771 = !{i64 2147649743, i64 2147649786, i64 2147649826}
!7772 = !DILocation(line: 277, column: 1, scope: !7238)
!7773 = !{i64 2147649954, i64 2147649997, i64 2147650037}
!7774 = !DILocation(line: 278, column: 1, scope: !7238)
!7775 = !{i64 2147650147, i64 2147650190, i64 2147650230}
!7776 = !DILocation(line: 279, column: 1, scope: !7238)
!7777 = !{i64 2147650346, i64 2147650389, i64 2147650429}
!7778 = !DILocation(line: 280, column: 1, scope: !7238)
!7779 = !{i64 2147650518, i64 2147650561, i64 2147650601}
!7780 = !DILocation(line: 281, column: 1, scope: !7238)
!7781 = !{i64 2147650690, i64 2147650733, i64 2147650773}
!7782 = !DILocation(line: 282, column: 1, scope: !7238)
!7783 = !{i64 2147650880, i64 2147650923, i64 2147650963}
!7784 = !DILocation(line: 283, column: 1, scope: !7238)
!7785 = !{i64 2147651073, i64 2147651116, i64 2147651156}
!7786 = !DILocation(line: 284, column: 1, scope: !7238)
!7787 = !{i64 2147651269, i64 2147651312, i64 2147651352}
!7788 = !DILocation(line: 285, column: 1, scope: !7238)
!7789 = !{i64 2147651432, i64 2147651475, i64 2147651515}
!7790 = !DILocation(line: 286, column: 1, scope: !7238)
!7791 = !{i64 2147651634, i64 2147651677, i64 2147651717}
!7792 = !DILocation(line: 287, column: 1, scope: !7238)
!7793 = !{i64 2147651839, i64 2147651882, i64 2147651922}
!7794 = !DILocation(line: 288, column: 1, scope: !7238)
!7795 = !{i64 2147652047, i64 2147652090, i64 2147652130}
!7796 = !DILocation(line: 289, column: 1, scope: !7238)
!7797 = !{i64 2147652240, i64 2147652283, i64 2147652323}
!7798 = !DILocation(line: 290, column: 1, scope: !7238)
!7799 = !{i64 2147652427, i64 2147652470, i64 2147652510}
!7800 = !DILocation(line: 291, column: 1, scope: !7238)
!7801 = !{i64 2147652654, i64 2147652697, i64 2147652737}
!7802 = !DILocation(line: 292, column: 1, scope: !7238)
!7803 = !{i64 2147652820, i64 2147652863, i64 2147652903}
!7804 = !DILocation(line: 293, column: 1, scope: !7238)
!7805 = !{i64 2147653058, i64 2147653101, i64 2147653141}
!7806 = !DILocation(line: 294, column: 1, scope: !7238)
!7807 = !{i64 2147653308, i64 2147653351, i64 2147653391}
!7808 = !DILocation(line: 295, column: 1, scope: !7238)
!7809 = !{i64 2147653516, i64 2147653559, i64 2147653599}
!7810 = !DILocation(line: 296, column: 1, scope: !7238)
!7811 = !{i64 2147653712, i64 2147653755, i64 2147653795}
!7812 = !DILocation(line: 297, column: 1, scope: !7238)
!7813 = !{i64 2147653929, i64 2147653972, i64 2147654012}
!7814 = !DILocation(line: 298, column: 1, scope: !7238)
!7815 = !{i64 2147658282, i64 2147658325, i64 2147658365}
!7816 = !DILocation(line: 299, column: 1, scope: !7238)
!7817 = !{i64 2147658514, i64 2147658557, i64 2147658597}
!7818 = !DILocation(line: 300, column: 1, scope: !7238)
!7819 = !{i64 2147658731, i64 2147658774, i64 2147658814}
!7820 = !DILocation(line: 301, column: 1, scope: !7238)
!7821 = !{i64 2147658938, i64 2147658981, i64 2147659021}
!7822 = !DILocation(line: 302, column: 1, scope: !7238)
!7823 = !{i64 2147659139, i64 2147659182, i64 2147659222}
!7824 = !DILocation(line: 303, column: 1, scope: !7238)
!7825 = !{i64 2147659371, i64 2147659414, i64 2147659454}
!7826 = !DILocation(line: 304, column: 1, scope: !7238)
!7827 = !{i64 2147659579, i64 2147659622, i64 2147659662}
!7828 = !DILocation(line: 305, column: 1, scope: !7238)
!7829 = !{i64 2147659769, i64 2147659812, i64 2147659852}
!7830 = !DILocation(line: 306, column: 1, scope: !7238)
!7831 = !{i64 2147659995, i64 2147660038, i64 2147660078}
!7832 = !DILocation(line: 307, column: 1, scope: !7238)
!7833 = !{i64 2147660184, i64 2147660227, i64 2147660267}
!7834 = !DILocation(line: 308, column: 1, scope: !7238)
!7835 = !{i64 2147660455, i64 2147660498, i64 2147660538}
!7836 = !DILocation(line: 309, column: 1, scope: !7238)
!7837 = !{i64 2147660675, i64 2147660718, i64 2147660758}
!7838 = !DILocation(line: 310, column: 1, scope: !7238)
!7839 = !{i64 2147660928, i64 2147660971, i64 2147661011}
!7840 = !DILocation(line: 311, column: 1, scope: !7238)
!7841 = !{i64 2147661136, i64 2147661179, i64 2147661219}
!7842 = !DILocation(line: 312, column: 1, scope: !7238)
!7843 = !{i64 2147661368, i64 2147661411, i64 2147661451}
!7844 = !DILocation(line: 313, column: 1, scope: !7238)
!7845 = !{i64 2147661579, i64 2147661622, i64 2147661662}
!7846 = !DILocation(line: 314, column: 1, scope: !7238)
!7847 = !{i64 2147661769, i64 2147661812, i64 2147661852}
!7848 = !DILocation(line: 315, column: 1, scope: !7238)
!7849 = !{i64 2147661983, i64 2147662026, i64 2147662066}
!7850 = !DILocation(line: 316, column: 1, scope: !7238)
!7851 = !{i64 2147662182, i64 2147662225, i64 2147662265}
!7852 = !DILocation(line: 317, column: 1, scope: !7238)
!7853 = !{i64 2147662369, i64 2147662412, i64 2147662452}
!7854 = !DILocation(line: 318, column: 1, scope: !7238)
!7855 = !{i64 2147662577, i64 2147662620, i64 2147662660}
!7856 = !DILocation(line: 319, column: 1, scope: !7238)
!7857 = !{i64 2147662806, i64 2147662849, i64 2147662889}
!7858 = !DILocation(line: 320, column: 1, scope: !7238)
!7859 = !{i64 2147663008, i64 2147663051, i64 2147663091}
!7860 = !DILocation(line: 321, column: 1, scope: !7238)
!7861 = !{i64 2147663207, i64 2147663250, i64 2147663290}
!7862 = !DILocation(line: 322, column: 1, scope: !7238)
!7863 = !{i64 2147663424, i64 2147663467, i64 2147663507}
!7864 = !DILocation(line: 324, column: 1, scope: !7238)
!7865 = distinct !DISubprogram(name: "stm32l1_init", scope: !834, file: !834, line: 31, type: !841, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !7866)
!7866 = !{!7867, !7868}
!7867 = !DILocalVariable(name: "arg", arg: 1, scope: !7865, file: !834, line: 31, type: !843)
!7868 = !DILocalVariable(name: "key", scope: !7865, file: !834, line: 33, type: !108)
!7869 = !DILocation(line: 0, scope: !7865)
!7870 = !DILocation(line: 55, column: 2, scope: !7871, inlinedAt: !7878)
!7871 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7872, file: !7872, line: 42, type: !7873, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !7875)
!7872 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7873 = !DISubroutineType(types: !7874)
!7874 = !{!32}
!7875 = !{!7876, !7877}
!7876 = !DILocalVariable(name: "key", scope: !7871, file: !7872, line: 44, type: !32)
!7877 = !DILocalVariable(name: "tmp", scope: !7871, file: !7872, line: 53, type: !32)
!7878 = distinct !DILocation(line: 37, column: 8, scope: !7865)
!7879 = !{i64 1527793}
!7880 = !DILocation(line: 0, scope: !7871, inlinedAt: !7878)
!7881 = !DILocalVariable(name: "key", arg: 1, scope: !7882, file: !7872, line: 84, type: !32)
!7882 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7872, file: !7872, line: 84, type: !7883, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !7885)
!7883 = !DISubroutineType(types: !7884)
!7884 = !{null, !32}
!7885 = !{!7881}
!7886 = !DILocation(line: 0, scope: !7882, inlinedAt: !7887)
!7887 = distinct !DILocation(line: 44, column: 2, scope: !7865)
!7888 = !DILocation(line: 95, column: 2, scope: !7882, inlinedAt: !7887)
!7889 = !{i64 1528610}
!7890 = !DILocation(line: 48, column: 18, scope: !7865)
!7891 = !DILocation(line: 54, column: 2, scope: !7865)
!7892 = !DILocation(line: 55, column: 2, scope: !7865)
!7893 = !DILocation(line: 57, column: 2, scope: !7865)
!7894 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !7895, file: !7895, line: 531, type: !7896, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !7898)
!7895 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7896 = !DISubroutineType(types: !7897)
!7897 = !{null, !108}
!7898 = !{!7899, !7900}
!7899 = !DILocalVariable(name: "Periphs", arg: 1, scope: !7894, file: !7895, line: 531, type: !108)
!7900 = !DILocalVariable(name: "tmpreg", scope: !7894, file: !7895, line: 533, type: !813)
!7901 = !DILocation(line: 0, scope: !7894)
!7902 = !DILocation(line: 533, column: 3, scope: !7894)
!7903 = !DILocation(line: 533, column: 17, scope: !7894)
!7904 = !DILocation(line: 534, column: 3, scope: !7894)
!7905 = !DILocation(line: 536, column: 12, scope: !7894)
!7906 = !DILocation(line: 536, column: 10, scope: !7894)
!7907 = !DILocation(line: 537, column: 9, scope: !7894)
!7908 = !DILocation(line: 538, column: 1, scope: !7894)
!7909 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !7910, file: !7910, line: 272, type: !7896, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !7911)
!7910 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7911 = !{!7912}
!7912 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !7909, file: !7910, line: 272, type: !108)
!7913 = !DILocation(line: 0, scope: !7909)
!7914 = !DILocation(line: 274, column: 3, scope: !7909)
!7915 = !DILocation(line: 275, column: 1, scope: !7909)
!7916 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !870, file: !870, line: 26, type: !876, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7917)
!7917 = !{!7918}
!7918 = !DILocalVariable(name: "dev", arg: 1, scope: !7916, file: !870, line: 26, type: !878)
!7919 = !DILocation(line: 0, scope: !7916)
!7920 = !DILocation(line: 68, column: 2, scope: !7916)
!7921 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7922, file: !7922, line: 14, type: !5405, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3484, retainedNodes: !7923)
!7922 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7923 = !{!7924, !7925}
!7924 = !DILocalVariable(name: "fmt", arg: 1, scope: !7921, file: !7922, line: 14, type: !336)
!7925 = !DILocalVariable(name: "ap", scope: !7921, file: !7922, line: 16, type: !7926)
!7926 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4413, line: 99, baseType: !7927)
!7927 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4413, line: 40, baseType: !7928)
!7928 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7922, baseType: !7929)
!7929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7930)
!7930 = !{!7931}
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7929, file: !7922, line: 16, baseType: !102, size: 32)
!7932 = !DILocation(line: 0, scope: !7921)
!7933 = !DILocation(line: 16, column: 2, scope: !7921)
!7934 = !DILocation(line: 16, column: 10, scope: !7921)
!7935 = !DILocation(line: 18, column: 2, scope: !7921)
!7936 = !DILocation(line: 19, column: 2, scope: !7921)
!7937 = !DILocation(line: 20, column: 2, scope: !7921)
!7938 = !DILocation(line: 21, column: 1, scope: !7921)
!7939 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7922, file: !7922, line: 23, type: !7940, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3484, retainedNodes: !7942)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{null, !336, !7926}
!7942 = !{!7943, !7944}
!7943 = !DILocalVariable(name: "fmt", arg: 1, scope: !7939, file: !7922, line: 23, type: !336)
!7944 = !DILocalVariable(name: "ap", arg: 2, scope: !7939, file: !7922, line: 23, type: !7926)
!7945 = !DILocation(line: 0, scope: !7939)
!7946 = !DILocation(line: 25, column: 2, scope: !7939)
!7947 = !DILocation(line: 26, column: 1, scope: !7939)
!7948 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7922, file: !7922, line: 52, type: !7949, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3484, retainedNodes: !7951)
!7949 = !DISubroutineType(types: !7950)
!7950 = !{null, !103, !13, !153}
!7951 = !{!7952, !7953, !7954, !7955}
!7952 = !DILocalVariable(name: "level", arg: 1, scope: !7948, file: !7922, line: 52, type: !103)
!7953 = !DILocalVariable(name: "data", arg: 2, scope: !7948, file: !7922, line: 52, type: !13)
!7954 = !DILocalVariable(name: "size", arg: 3, scope: !7948, file: !7922, line: 52, type: !153)
!7955 = !DILocalVariable(name: "data_buffer", scope: !7948, file: !7922, line: 54, type: !336)
!7956 = !DILocation(line: 0, scope: !7948)
!7957 = !DILocation(line: 55, column: 14, scope: !7948)
!7958 = !DILocation(line: 55, column: 2, scope: !7948)
!7959 = !DILocation(line: 56, column: 3, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7948, file: !7922, line: 55, column: 20)
!7961 = !DILocation(line: 57, column: 3, scope: !7960)
!7962 = !DILocation(line: 59, column: 7, scope: !7960)
!7963 = distinct !{!7963, !7958, !7964}
!7964 = !DILocation(line: 65, column: 2, scope: !7948)
!7965 = !DILocation(line: 66, column: 1, scope: !7948)
!7966 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7967, file: !7967, line: 175, type: !7968, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3484, retainedNodes: !7970)
!7967 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7968 = !DISubroutineType(types: !7969)
!7969 = !{!158, !103}
!7970 = !{!7971}
!7971 = !DILocalVariable(name: "level", arg: 1, scope: !7966, file: !7967, line: 175, type: !103)
!7972 = !DILocation(line: 0, scope: !7966)
!7973 = !DILocation(line: 177, column: 2, scope: !7966)
!7974 = !DILocation(line: 189, column: 1, scope: !7966)
!7975 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7922, file: !7922, line: 28, type: !7976, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3484, retainedNodes: !7978)
!7976 = !DISubroutineType(types: !7977)
!7977 = !{null, !336, !153}
!7978 = !{!7979, !7980, !7981, !7983, !7985}
!7979 = !DILocalVariable(name: "data", arg: 1, scope: !7975, file: !7922, line: 28, type: !336)
!7980 = !DILocalVariable(name: "length", arg: 2, scope: !7975, file: !7922, line: 28, type: !153)
!7981 = !DILocalVariable(name: "i", scope: !7982, file: !7922, line: 30, type: !153)
!7982 = distinct !DILexicalBlock(scope: !7975, file: !7922, line: 30, column: 2)
!7983 = !DILocalVariable(name: "i", scope: !7984, file: !7922, line: 40, type: !153)
!7984 = distinct !DILexicalBlock(scope: !7975, file: !7922, line: 40, column: 2)
!7985 = !DILocalVariable(name: "c", scope: !7986, file: !7922, line: 42, type: !165)
!7986 = distinct !DILexicalBlock(scope: !7987, file: !7922, line: 41, column: 19)
!7987 = distinct !DILexicalBlock(scope: !7988, file: !7922, line: 41, column: 7)
!7988 = distinct !DILexicalBlock(scope: !7989, file: !7922, line: 40, column: 54)
!7989 = distinct !DILexicalBlock(scope: !7984, file: !7922, line: 40, column: 2)
!7990 = !DILocation(line: 0, scope: !7975)
!7991 = !DILocation(line: 0, scope: !7982)
!7992 = !DILocation(line: 30, column: 2, scope: !7982)
!7993 = !DILocation(line: 38, column: 2, scope: !7975)
!7994 = !DILocation(line: 0, scope: !7984)
!7995 = !DILocation(line: 40, column: 2, scope: !7984)
!7996 = !DILocation(line: 31, column: 9, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7998, file: !7922, line: 31, column: 7)
!7998 = distinct !DILexicalBlock(scope: !7999, file: !7922, line: 30, column: 54)
!7999 = distinct !DILexicalBlock(scope: !7982, file: !7922, line: 30, column: 2)
!8000 = !DILocation(line: 31, column: 7, scope: !7998)
!8001 = !DILocation(line: 32, column: 35, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7997, file: !7922, line: 31, column: 19)
!8003 = !DILocation(line: 32, column: 20, scope: !8002)
!8004 = !DILocation(line: 32, column: 4, scope: !8002)
!8005 = !DILocation(line: 33, column: 3, scope: !8002)
!8006 = !DILocation(line: 34, column: 4, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !7997, file: !7922, line: 33, column: 10)
!8008 = !DILocation(line: 30, column: 50, scope: !7999)
!8009 = !DILocation(line: 30, column: 24, scope: !7999)
!8010 = distinct !{!8010, !7992, !8011}
!8011 = !DILocation(line: 36, column: 2, scope: !7982)
!8012 = !DILocation(line: 49, column: 2, scope: !7975)
!8013 = !DILocation(line: 50, column: 1, scope: !7975)
!8014 = !DILocation(line: 41, column: 9, scope: !7987)
!8015 = !DILocation(line: 41, column: 7, scope: !7988)
!8016 = !DILocation(line: 42, column: 22, scope: !7986)
!8017 = !DILocation(line: 0, scope: !7986)
!8018 = !DILocation(line: 44, column: 25, scope: !7986)
!8019 = !DILocation(line: 44, column: 17, scope: !7986)
!8020 = !DILocation(line: 44, column: 33, scope: !7986)
!8021 = !DILocation(line: 44, column: 4, scope: !7986)
!8022 = !DILocation(line: 45, column: 3, scope: !7986)
!8023 = !DILocation(line: 46, column: 4, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !7987, file: !7922, line: 45, column: 10)
!8025 = !DILocation(line: 40, column: 50, scope: !7989)
!8026 = !DILocation(line: 40, column: 24, scope: !7989)
!8027 = distinct !{!8027, !7995, !8028}
!8028 = !DILocation(line: 48, column: 2, scope: !7984)
!8029 = distinct !DISubprogram(name: "isprint", scope: !6982, file: !6982, line: 37, type: !800, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3484, retainedNodes: !8030)
!8030 = !{!8031}
!8031 = !DILocalVariable(name: "c", arg: 1, scope: !8029, file: !6982, line: 37, type: !103)
!8032 = !DILocation(line: 0, scope: !8029)
!8033 = !DILocation(line: 39, column: 38, scope: !8029)
!8034 = !DILocation(line: 39, column: 2, scope: !8029)
!8035 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !8036, file: !8036, line: 57, type: !8037, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !8083)
!8036 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8037 = !DISubroutineType(types: !8038)
!8038 = !{null, !32, !8039}
!8039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8040, size: 32)
!8040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8041)
!8041 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3607, line: 141, baseType: !8042)
!8042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3607, line: 97, size: 256, elements: !8043)
!8043 = !{!8044}
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !8042, file: !3607, line: 107, baseType: !8045, size: 256)
!8045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3607, line: 98, size: 256, elements: !8046)
!8046 = !{!8047, !8052, !8057, !8062, !8067, !8072, !8077, !8082}
!8047 = !DIDerivedType(tag: DW_TAG_member, scope: !8045, file: !3607, line: 99, baseType: !8048, size: 32)
!8048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8045, file: !3607, line: 99, size: 32, elements: !8049)
!8049 = !{!8050, !8051}
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !8048, file: !3607, line: 99, baseType: !108, size: 32)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !8048, file: !3607, line: 99, baseType: !108, size: 32)
!8052 = !DIDerivedType(tag: DW_TAG_member, scope: !8045, file: !3607, line: 100, baseType: !8053, size: 32, offset: 32)
!8053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8045, file: !3607, line: 100, size: 32, elements: !8054)
!8054 = !{!8055, !8056}
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !8053, file: !3607, line: 100, baseType: !108, size: 32)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !8053, file: !3607, line: 100, baseType: !108, size: 32)
!8057 = !DIDerivedType(tag: DW_TAG_member, scope: !8045, file: !3607, line: 101, baseType: !8058, size: 32, offset: 64)
!8058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8045, file: !3607, line: 101, size: 32, elements: !8059)
!8059 = !{!8060, !8061}
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !8058, file: !3607, line: 101, baseType: !108, size: 32)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !8058, file: !3607, line: 101, baseType: !108, size: 32)
!8062 = !DIDerivedType(tag: DW_TAG_member, scope: !8045, file: !3607, line: 102, baseType: !8063, size: 32, offset: 96)
!8063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8045, file: !3607, line: 102, size: 32, elements: !8064)
!8064 = !{!8065, !8066}
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !8063, file: !3607, line: 102, baseType: !108, size: 32)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !8063, file: !3607, line: 102, baseType: !108, size: 32)
!8067 = !DIDerivedType(tag: DW_TAG_member, scope: !8045, file: !3607, line: 103, baseType: !8068, size: 32, offset: 128)
!8068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8045, file: !3607, line: 103, size: 32, elements: !8069)
!8069 = !{!8070, !8071}
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !8068, file: !3607, line: 103, baseType: !108, size: 32)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !8068, file: !3607, line: 103, baseType: !108, size: 32)
!8072 = !DIDerivedType(tag: DW_TAG_member, scope: !8045, file: !3607, line: 104, baseType: !8073, size: 32, offset: 160)
!8073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8045, file: !3607, line: 104, size: 32, elements: !8074)
!8074 = !{!8075, !8076}
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !8073, file: !3607, line: 104, baseType: !108, size: 32)
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !8073, file: !3607, line: 104, baseType: !108, size: 32)
!8077 = !DIDerivedType(tag: DW_TAG_member, scope: !8045, file: !3607, line: 105, baseType: !8078, size: 32, offset: 192)
!8078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8045, file: !3607, line: 105, size: 32, elements: !8079)
!8079 = !{!8080, !8081}
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !8078, file: !3607, line: 105, baseType: !108, size: 32)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !8078, file: !3607, line: 105, baseType: !108, size: 32)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !8045, file: !3607, line: 106, baseType: !108, size: 32, offset: 224)
!8083 = !{!8084, !8085}
!8084 = !DILocalVariable(name: "reason", arg: 1, scope: !8035, file: !8036, line: 57, type: !32)
!8085 = !DILocalVariable(name: "esf", arg: 2, scope: !8035, file: !8036, line: 57, type: !8039)
!8086 = !DILocation(line: 0, scope: !8035)
!8087 = !DILocation(line: 60, column: 10, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8035, file: !8036, line: 60, column: 6)
!8089 = !DILocation(line: 60, column: 6, scope: !8035)
!8090 = !DILocation(line: 61, column: 3, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8088, file: !8036, line: 60, column: 19)
!8092 = !DILocation(line: 62, column: 2, scope: !8091)
!8093 = !DILocation(line: 63, column: 2, scope: !8035)
!8094 = !DILocation(line: 64, column: 1, scope: !8035)
!8095 = distinct !DISubprogram(name: "esf_dump", scope: !8036, file: !8036, line: 20, type: !8096, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !8098)
!8096 = !DISubroutineType(types: !8097)
!8097 = !{null, !8039}
!8098 = !{!8099}
!8099 = !DILocalVariable(name: "esf", arg: 1, scope: !8095, file: !8036, line: 20, type: !8039)
!8100 = !DILocation(line: 0, scope: !8095)
!8101 = !DILocation(line: 22, column: 2, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8103, file: !8036, line: 22, column: 2)
!8103 = distinct !DILexicalBlock(scope: !8104, file: !8036, line: 22, column: 2)
!8104 = distinct !DILexicalBlock(scope: !8105, file: !8036, line: 22, column: 2)
!8105 = distinct !DILexicalBlock(scope: !8095, file: !8036, line: 22, column: 2)
!8106 = !DILocation(line: 24, column: 2, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8108, file: !8036, line: 24, column: 2)
!8108 = distinct !DILexicalBlock(scope: !8109, file: !8036, line: 24, column: 2)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !8036, line: 24, column: 2)
!8110 = distinct !DILexicalBlock(scope: !8095, file: !8036, line: 24, column: 2)
!8111 = !DILocation(line: 26, column: 2, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8113, file: !8036, line: 26, column: 2)
!8113 = distinct !DILexicalBlock(scope: !8114, file: !8036, line: 26, column: 2)
!8114 = distinct !DILexicalBlock(scope: !8115, file: !8036, line: 26, column: 2)
!8115 = distinct !DILexicalBlock(scope: !8095, file: !8036, line: 26, column: 2)
!8116 = !DILocation(line: 53, column: 2, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8118, file: !8036, line: 53, column: 2)
!8118 = distinct !DILexicalBlock(scope: !8119, file: !8036, line: 53, column: 2)
!8119 = distinct !DILexicalBlock(scope: !8120, file: !8036, line: 53, column: 2)
!8120 = distinct !DILexicalBlock(scope: !8095, file: !8036, line: 53, column: 2)
!8121 = !DILocation(line: 55, column: 1, scope: !8095)
!8122 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !8036, file: !8036, line: 82, type: !8123, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !8138)
!8123 = !DISubroutineType(types: !8124)
!8124 = !{null, !8039, !8125}
!8125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8126, size: 32)
!8126 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !244, line: 37, baseType: !8127)
!8127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !8128)
!8128 = !{!8129, !8130, !8131, !8132, !8133, !8134, !8135, !8136, !8137}
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8127, file: !244, line: 26, baseType: !108, size: 32)
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8127, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8127, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8127, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8127, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8127, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8127, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8127, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!8137 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8127, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!8138 = !{!8139, !8140, !8141}
!8139 = !DILocalVariable(name: "esf", arg: 1, scope: !8122, file: !8036, line: 82, type: !8039)
!8140 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !8122, file: !8036, line: 82, type: !8125)
!8141 = !DILocalVariable(name: "reason", scope: !8122, file: !8036, line: 88, type: !32)
!8142 = !DILocation(line: 0, scope: !8122)
!8143 = !DILocation(line: 88, column: 35, scope: !8122)
!8144 = !DILocation(line: 108, column: 2, scope: !8122)
!8145 = !DILocation(line: 131, column: 1, scope: !8122)
!8146 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !8036, file: !8036, line: 133, type: !8147, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3487, retainedNodes: !8149)
!8147 = !DISubroutineType(types: !8148)
!8148 = !{null, !102}
!8149 = !{!8150, !8151, !8152}
!8150 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !8146, file: !8036, line: 133, type: !102)
!8151 = !DILocalVariable(name: "ssf_contents", scope: !8146, file: !8036, line: 135, type: !1793)
!8152 = !DILocalVariable(name: "oops_esf", scope: !8146, file: !8036, line: 136, type: !8041)
!8153 = !DILocation(line: 0, scope: !8146)
!8154 = !DILocation(line: 136, column: 2, scope: !8146)
!8155 = !DILocation(line: 136, column: 15, scope: !8146)
!8156 = !DILocation(line: 139, column: 22, scope: !8146)
!8157 = !DILocation(line: 139, column: 17, scope: !8146)
!8158 = !DILocation(line: 139, column: 20, scope: !8146)
!8159 = !DILocation(line: 141, column: 2, scope: !8146)
!8160 = !DILocation(line: 142, column: 2, scope: !8146)
!8161 = distinct !DISubprogram(name: "arch_irq_enable", scope: !8162, file: !8162, line: 40, type: !7883, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3498, retainedNodes: !8163)
!8162 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8163 = !{!8164}
!8164 = !DILocalVariable(name: "irq", arg: 1, scope: !8161, file: !8162, line: 40, type: !32)
!8165 = !DILocation(line: 0, scope: !8161)
!8166 = !DILocation(line: 42, column: 2, scope: !8161)
!8167 = !DILocation(line: 43, column: 1, scope: !8161)
!8168 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1041, file: !1041, line: 1508, type: !8169, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3498, retainedNodes: !8171)
!8169 = !DISubroutineType(types: !8170)
!8170 = !{null, !1720}
!8171 = !{!8172}
!8172 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8168, file: !1041, line: 1508, type: !1720)
!8173 = !DILocation(line: 0, scope: !8168)
!8174 = !DILocation(line: 1510, column: 23, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8168, file: !1041, line: 1510, column: 7)
!8176 = !DILocation(line: 1510, column: 7, scope: !8168)
!8177 = !DILocation(line: 1512, column: 5, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8175, file: !1041, line: 1511, column: 3)
!8179 = !{i64 2149972856}
!8180 = !DILocation(line: 1513, column: 81, scope: !8178)
!8181 = !DILocation(line: 1513, column: 60, scope: !8178)
!8182 = !DILocation(line: 1513, column: 34, scope: !8178)
!8183 = !DILocation(line: 1513, column: 5, scope: !8178)
!8184 = !DILocation(line: 1513, column: 43, scope: !8178)
!8185 = !DILocation(line: 1514, column: 5, scope: !8178)
!8186 = !{i64 2149972970}
!8187 = !DILocation(line: 1515, column: 3, scope: !8178)
!8188 = !DILocation(line: 1516, column: 1, scope: !8168)
!8189 = distinct !DISubprogram(name: "arch_irq_disable", scope: !8162, file: !8162, line: 45, type: !7883, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3498, retainedNodes: !8190)
!8190 = !{!8191}
!8191 = !DILocalVariable(name: "irq", arg: 1, scope: !8189, file: !8162, line: 45, type: !32)
!8192 = !DILocation(line: 0, scope: !8189)
!8193 = !DILocation(line: 47, column: 2, scope: !8189)
!8194 = !DILocation(line: 48, column: 1, scope: !8189)
!8195 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1041, file: !1041, line: 1546, type: !8169, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3498, retainedNodes: !8196)
!8196 = !{!8197}
!8197 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8195, file: !1041, line: 1546, type: !1720)
!8198 = !DILocation(line: 0, scope: !8195)
!8199 = !DILocation(line: 1548, column: 23, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8195, file: !1041, line: 1548, column: 7)
!8201 = !DILocation(line: 1548, column: 7, scope: !8195)
!8202 = !DILocation(line: 1550, column: 81, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8200, file: !1041, line: 1549, column: 3)
!8204 = !DILocation(line: 1550, column: 60, scope: !8203)
!8205 = !DILocation(line: 1550, column: 34, scope: !8203)
!8206 = !DILocation(line: 1550, column: 5, scope: !8203)
!8207 = !DILocation(line: 1550, column: 43, scope: !8203)
!8208 = !DILocation(line: 271, column: 3, scope: !8209, inlinedAt: !8211)
!8209 = distinct !DISubprogram(name: "__DSB", scope: !8210, file: !8210, line: 269, type: !333, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3498, retainedNodes: !2894)
!8210 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8211 = distinct !DILocation(line: 1551, column: 5, scope: !8203)
!8212 = !{i64 2430358}
!8213 = !DILocation(line: 260, column: 3, scope: !8214, inlinedAt: !8215)
!8214 = distinct !DISubprogram(name: "__ISB", scope: !8210, file: !8210, line: 258, type: !333, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3498, retainedNodes: !2894)
!8215 = distinct !DILocation(line: 1552, column: 5, scope: !8203)
!8216 = !{i64 2430075}
!8217 = !DILocation(line: 1553, column: 3, scope: !8203)
!8218 = !DILocation(line: 1554, column: 1, scope: !8195)
!8219 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !8162, file: !8162, line: 50, type: !8220, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3498, retainedNodes: !8222)
!8220 = !DISubroutineType(types: !8221)
!8221 = !{!103, !32}
!8222 = !{!8223}
!8223 = !DILocalVariable(name: "irq", arg: 1, scope: !8219, file: !8162, line: 50, type: !32)
!8224 = !DILocation(line: 0, scope: !8219)
!8225 = !DILocation(line: 52, column: 20, scope: !8219)
!8226 = !DILocation(line: 52, column: 9, scope: !8219)
!8227 = !DILocation(line: 52, column: 41, scope: !8219)
!8228 = !DILocation(line: 52, column: 39, scope: !8219)
!8229 = !DILocation(line: 52, column: 2, scope: !8219)
!8230 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !8162, file: !8162, line: 64, type: !8231, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3498, retainedNodes: !8233)
!8231 = !DISubroutineType(types: !8232)
!8232 = !{null, !32, !32, !108}
!8233 = !{!8234, !8235, !8236}
!8234 = !DILocalVariable(name: "irq", arg: 1, scope: !8230, file: !8162, line: 64, type: !32)
!8235 = !DILocalVariable(name: "prio", arg: 2, scope: !8230, file: !8162, line: 64, type: !32)
!8236 = !DILocalVariable(name: "flags", arg: 3, scope: !8230, file: !8162, line: 64, type: !108)
!8237 = !DILocation(line: 0, scope: !8230)
!8238 = !DILocation(line: 83, column: 8, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8240, file: !8162, line: 82, column: 9)
!8240 = distinct !DILexicalBlock(scope: !8230, file: !8162, line: 76, column: 6)
!8241 = !DILocation(line: 91, column: 2, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8243, file: !8162, line: 91, column: 2)
!8243 = distinct !DILexicalBlock(scope: !8230, file: !8162, line: 91, column: 2)
!8244 = !DILocation(line: 91, column: 2, scope: !8243)
!8245 = !DILocation(line: 91, column: 2, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8242, file: !8162, line: 91, column: 2)
!8247 = !DILocation(line: 95, column: 2, scope: !8230)
!8248 = !DILocation(line: 96, column: 1, scope: !8230)
!8249 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1041, file: !1041, line: 1638, type: !8250, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3498, retainedNodes: !8252)
!8250 = !DISubroutineType(types: !8251)
!8251 = !{null, !1720, !108}
!8252 = !{!8253, !8254}
!8253 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8249, file: !1041, line: 1638, type: !1720)
!8254 = !DILocalVariable(name: "priority", arg: 2, scope: !8249, file: !1041, line: 1638, type: !108)
!8255 = !DILocation(line: 0, scope: !8249)
!8256 = !DILocation(line: 0, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8249, file: !1041, line: 1640, column: 7)
!8258 = !DILocation(line: 1640, column: 7, scope: !8249)
!8259 = !DILocation(line: 1648, column: 1, scope: !8249)
!8260 = distinct !DISubprogram(name: "z_irq_spurious", scope: !8162, file: !8162, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3498, retainedNodes: !8261)
!8261 = !{!8262}
!8262 = !DILocalVariable(name: "unused", arg: 1, scope: !8260, file: !8162, line: 155, type: !13)
!8263 = !DILocation(line: 0, scope: !8260)
!8264 = !DILocation(line: 159, column: 2, scope: !8260)
!8265 = !DILocation(line: 160, column: 1, scope: !8260)
!8266 = distinct !DISubprogram(name: "z_arm_nmi", scope: !8267, file: !8267, line: 87, type: !333, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3544, retainedNodes: !2894)
!8267 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8268 = !DILocation(line: 89, column: 2, scope: !8266)
!8269 = !DILocation(line: 90, column: 2, scope: !8266)
!8270 = !DILocation(line: 91, column: 1, scope: !8266)
!8271 = !DISubprogram(name: "z_SysNmiOnReset", scope: !8267, file: !8267, line: 23, type: !333, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2894)
!8272 = !DISubprogram(name: "z_arm_int_exit", scope: !8273, file: !8273, line: 153, type: !333, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2894)
!8273 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8274 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !8275, file: !8275, line: 256, type: !333, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3546, retainedNodes: !2894)
!8275 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8276 = !DILocation(line: 258, column: 2, scope: !8274)
!8277 = !DILocation(line: 262, column: 2, scope: !8274)
!8278 = !DILocation(line: 263, column: 2, scope: !8274)
!8279 = !DILocation(line: 267, column: 2, scope: !8274)
!8280 = !DILocation(line: 268, column: 2, scope: !8274)
!8281 = distinct !DISubprogram(name: "relocate_vector_table", scope: !8275, file: !8275, line: 53, type: !333, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3546, retainedNodes: !2894)
!8282 = !DILocation(line: 55, column: 12, scope: !8281)
!8283 = !DILocation(line: 271, column: 3, scope: !8284, inlinedAt: !8285)
!8284 = distinct !DISubprogram(name: "__DSB", scope: !8210, file: !8210, line: 269, type: !333, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3546, retainedNodes: !2894)
!8285 = distinct !DILocation(line: 56, column: 2, scope: !8281)
!8286 = !{i64 2429029}
!8287 = !DILocation(line: 260, column: 3, scope: !8288, inlinedAt: !8289)
!8288 = distinct !DISubprogram(name: "__ISB", scope: !8210, file: !8210, line: 258, type: !333, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3546, retainedNodes: !2894)
!8289 = distinct !DILocation(line: 57, column: 2, scope: !8281)
!8290 = !{i64 2428746}
!8291 = !DILocation(line: 58, column: 1, scope: !8281)
!8292 = distinct !DISubprogram(name: "arch_swap", scope: !8293, file: !8293, line: 33, type: !8220, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3574, retainedNodes: !8294)
!8293 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8294 = !{!8295}
!8295 = !DILocalVariable(name: "key", arg: 1, scope: !8292, file: !8293, line: 33, type: !32)
!8296 = !DILocation(line: 0, scope: !8292)
!8297 = !DILocation(line: 36, column: 2, scope: !8292)
!8298 = !DILocation(line: 36, column: 17, scope: !8292)
!8299 = !DILocation(line: 36, column: 25, scope: !8292)
!8300 = !DILocation(line: 37, column: 37, scope: !8292)
!8301 = !DILocation(line: 37, column: 17, scope: !8292)
!8302 = !DILocation(line: 37, column: 35, scope: !8292)
!8303 = !DILocation(line: 41, column: 12, scope: !8292)
!8304 = !DILocalVariable(name: "key", arg: 1, scope: !8305, file: !7872, line: 84, type: !32)
!8305 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7872, file: !7872, line: 84, type: !7883, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3574, retainedNodes: !8306)
!8306 = !{!8304}
!8307 = !DILocation(line: 0, scope: !8305, inlinedAt: !8308)
!8308 = distinct !DILocation(line: 44, column: 2, scope: !8292)
!8309 = !DILocation(line: 95, column: 2, scope: !8305, inlinedAt: !8308)
!8310 = !{i64 1652029}
!8311 = !DILocation(line: 53, column: 9, scope: !8292)
!8312 = !DILocation(line: 53, column: 24, scope: !8292)
!8313 = !DILocation(line: 53, column: 2, scope: !8292)
!8314 = distinct !DISubprogram(name: "arch_new_thread", scope: !8315, file: !8315, line: 56, type: !8316, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3602, retainedNodes: !8425)
!8315 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8316 = !DISubroutineType(types: !8317)
!8317 = !{null, !8318, !8420, !157, !320, !102, !102, !102}
!8318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8319, size: 32)
!8319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !8320)
!8320 = !{!8321, !8379, !8391, !8392, !8393, !8394, !8400, !8415}
!8321 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8319, file: !195, line: 247, baseType: !8322, size: 384)
!8322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !8323)
!8323 = !{!8324, !8348, !8355, !8356, !8357, !8366, !8367, !8368}
!8324 = !DIDerivedType(tag: DW_TAG_member, scope: !8322, file: !195, line: 60, baseType: !8325, size: 64)
!8325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8322, file: !195, line: 60, size: 64, elements: !8326)
!8326 = !{!8327, !8342}
!8327 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8325, file: !195, line: 61, baseType: !8328, size: 64)
!8328 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !8329)
!8329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !8330)
!8330 = !{!8331, !8337}
!8331 = !DIDerivedType(tag: DW_TAG_member, scope: !8329, file: !133, line: 38, baseType: !8332, size: 32)
!8332 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8329, file: !133, line: 38, size: 32, elements: !8333)
!8333 = !{!8334, !8336}
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8332, file: !133, line: 39, baseType: !8335, size: 32)
!8335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8329, size: 32)
!8336 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8332, file: !133, line: 40, baseType: !8335, size: 32)
!8337 = !DIDerivedType(tag: DW_TAG_member, scope: !8329, file: !133, line: 42, baseType: !8338, size: 32, offset: 32)
!8338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8329, file: !133, line: 42, size: 32, elements: !8339)
!8339 = !{!8340, !8341}
!8340 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8338, file: !133, line: 43, baseType: !8335, size: 32)
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8338, file: !133, line: 44, baseType: !8335, size: 32)
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8325, file: !195, line: 62, baseType: !8343, size: 64)
!8343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !8344)
!8344 = !{!8345}
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8343, file: !207, line: 50, baseType: !8346, size: 64)
!8346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8347, size: 64, elements: !212)
!8347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8343, size: 32)
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8322, file: !195, line: 68, baseType: !8349, size: 32, offset: 64)
!8349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8350, size: 32)
!8350 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !8351)
!8351 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !8352)
!8352 = !{!8353}
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8351, file: !128, line: 232, baseType: !8354, size: 64)
!8354 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !8329)
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8322, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8322, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!8357 = !DIDerivedType(tag: DW_TAG_member, scope: !8322, file: !195, line: 90, baseType: !8358, size: 16, offset: 112)
!8358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8322, file: !195, line: 90, size: 16, elements: !8359)
!8359 = !{!8360, !8365}
!8360 = !DIDerivedType(tag: DW_TAG_member, scope: !8358, file: !195, line: 91, baseType: !8361, size: 16)
!8361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8358, file: !195, line: 91, size: 16, elements: !8362)
!8362 = !{!8363, !8364}
!8363 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8361, file: !195, line: 96, baseType: !225, size: 8)
!8364 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8361, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8358, file: !195, line: 100, baseType: !177, size: 16)
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8322, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8322, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8322, file: !195, line: 131, baseType: !8369, size: 192, offset: 192)
!8369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !8370)
!8370 = !{!8371, !8372, !8378}
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8369, file: !128, line: 245, baseType: !8328, size: 64)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8369, file: !128, line: 246, baseType: !8373, size: 32, offset: 64)
!8373 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !8374)
!8374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8375, size: 32)
!8375 = !DISubroutineType(types: !8376)
!8376 = !{null, !8377}
!8377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8369, size: 32)
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8369, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8319, file: !195, line: 250, baseType: !8380, size: 288, offset: 384)
!8380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !8381)
!8381 = !{!8382, !8383, !8384, !8385, !8386, !8387, !8388, !8389, !8390}
!8382 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8380, file: !244, line: 26, baseType: !108, size: 32)
!8383 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8380, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8380, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8380, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8380, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8380, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!8388 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8380, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8380, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8380, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8319, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8319, file: !195, line: 256, baseType: !8350, size: 64, offset: 704)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8319, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8319, file: !195, line: 300, baseType: !8395, size: 96, offset: 800)
!8395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !8396)
!8396 = !{!8397, !8398, !8399}
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8395, file: !195, line: 153, baseType: !22, size: 32)
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8395, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8395, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8319, file: !195, line: 325, baseType: !8401, size: 32, offset: 896)
!8401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8402, size: 32)
!8402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !8403)
!8403 = !{!8404, !8410, !8411}
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8402, file: !124, line: 5074, baseType: !8405, size: 96)
!8405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !8406)
!8406 = !{!8407, !8408, !8409}
!8407 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8405, file: !270, line: 57, baseType: !273, size: 32)
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8405, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8405, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8402, file: !124, line: 5075, baseType: !8350, size: 64, offset: 96)
!8411 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8402, file: !124, line: 5076, baseType: !8412, size: 32, offset: 160)
!8412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !8413)
!8413 = !{!8414}
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8412, file: !149, line: 52, baseType: !22, size: 32)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8319, file: !195, line: 343, baseType: !8416, size: 64, offset: 928)
!8416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !8417)
!8417 = !{!8418, !8419}
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8416, file: !244, line: 63, baseType: !108, size: 32)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8416, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!8420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8421, size: 32)
!8421 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !313, line: 44, baseType: !8422)
!8422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !315, line: 47, size: 8, elements: !8423)
!8423 = !{!8424}
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8422, file: !315, line: 48, baseType: !158, size: 8)
!8425 = !{!8426, !8427, !8428, !8429, !8430, !8431, !8432, !8433}
!8426 = !DILocalVariable(name: "thread", arg: 1, scope: !8314, file: !8315, line: 56, type: !8318)
!8427 = !DILocalVariable(name: "stack", arg: 2, scope: !8314, file: !8315, line: 56, type: !8420)
!8428 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !8314, file: !8315, line: 57, type: !157)
!8429 = !DILocalVariable(name: "entry", arg: 4, scope: !8314, file: !8315, line: 57, type: !320)
!8430 = !DILocalVariable(name: "p1", arg: 5, scope: !8314, file: !8315, line: 58, type: !102)
!8431 = !DILocalVariable(name: "p2", arg: 6, scope: !8314, file: !8315, line: 58, type: !102)
!8432 = !DILocalVariable(name: "p3", arg: 7, scope: !8314, file: !8315, line: 58, type: !102)
!8433 = !DILocalVariable(name: "iframe", scope: !8314, file: !8315, line: 60, type: !3605)
!8434 = !DILocation(line: 0, scope: !8314)
!8435 = !DILocation(line: 85, column: 11, scope: !8314)
!8436 = !DILocation(line: 93, column: 10, scope: !8314)
!8437 = !DILocation(line: 98, column: 13, scope: !8314)
!8438 = !DILocation(line: 100, column: 15, scope: !8314)
!8439 = !DILocation(line: 100, column: 10, scope: !8314)
!8440 = !DILocation(line: 100, column: 13, scope: !8314)
!8441 = !DILocation(line: 101, column: 15, scope: !8314)
!8442 = !DILocation(line: 101, column: 10, scope: !8314)
!8443 = !DILocation(line: 101, column: 13, scope: !8314)
!8444 = !DILocation(line: 102, column: 15, scope: !8314)
!8445 = !DILocation(line: 102, column: 10, scope: !8314)
!8446 = !DILocation(line: 102, column: 13, scope: !8314)
!8447 = !DILocation(line: 103, column: 15, scope: !8314)
!8448 = !DILocation(line: 103, column: 10, scope: !8314)
!8449 = !DILocation(line: 103, column: 13, scope: !8314)
!8450 = !DILocation(line: 106, column: 10, scope: !8314)
!8451 = !DILocation(line: 106, column: 15, scope: !8314)
!8452 = !DILocation(line: 122, column: 29, scope: !8314)
!8453 = !DILocation(line: 122, column: 23, scope: !8314)
!8454 = !DILocation(line: 122, column: 27, scope: !8314)
!8455 = !DILocation(line: 123, column: 15, scope: !8314)
!8456 = !DILocation(line: 123, column: 23, scope: !8314)
!8457 = !DILocation(line: 143, column: 1, scope: !8314)
!8458 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !8315, file: !8315, line: 385, type: !8459, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3602, retainedNodes: !8462)
!8459 = !DISubroutineType(types: !8460)
!8460 = !{!108, !8461, !8461}
!8461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!8462 = !{!8463, !8464, !8465, !8468}
!8463 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8458, file: !8315, line: 385, type: !8461)
!8464 = !DILocalVariable(name: "psp", arg: 2, scope: !8458, file: !8315, line: 385, type: !8461)
!8465 = !DILocalVariable(name: "thread", scope: !8458, file: !8315, line: 388, type: !8466)
!8466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8467, size: 32)
!8467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8319)
!8468 = !DILocalVariable(name: "guard_len", scope: !8458, file: !8315, line: 405, type: !108)
!8469 = !DILocation(line: 0, scope: !8458)
!8470 = !DILocation(line: 388, column: 34, scope: !8458)
!8471 = !DILocation(line: 390, column: 13, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8458, file: !8315, line: 390, column: 6)
!8473 = !DILocation(line: 390, column: 6, scope: !8458)
!8474 = !DILocation(line: 438, column: 6, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8458, file: !8315, line: 438, column: 6)
!8476 = !DILocation(line: 438, column: 6, scope: !8458)
!8477 = !DILocation(line: 442, column: 3, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8475, file: !8315, line: 440, column: 22)
!8479 = !DILocation(line: 455, column: 1, scope: !8458)
!8480 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !8315, file: !8315, line: 530, type: !8481, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3602, retainedNodes: !8483)
!8481 = !DISubroutineType(types: !8482)
!8482 = !{null, !8318, !157, !320}
!8483 = !{!8484, !8485, !8486}
!8484 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8480, file: !8315, line: 530, type: !8318)
!8485 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8480, file: !8315, line: 530, type: !157)
!8486 = !DILocalVariable(name: "_main", arg: 3, scope: !8480, file: !8315, line: 531, type: !320)
!8487 = !DILocation(line: 0, scope: !8480)
!8488 = !DILocation(line: 535, column: 11, scope: !8480)
!8489 = !DILocation(line: 560, column: 2, scope: !8480)
!8490 = !DILocation(line: 576, column: 2, scope: !8480)
!8491 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8492 = !DILocation(line: 603, column: 2, scope: !8480)
!8493 = distinct !DISubprogram(name: "z_arm_fault", scope: !8494, file: !8494, line: 1036, type: !8495, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !8510)
!8494 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8495 = !DISubroutineType(types: !8496)
!8496 = !{null, !108, !108, !108, !8497}
!8497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8498, size: 32)
!8498 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !244, line: 37, baseType: !8499)
!8499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !8500)
!8500 = !{!8501, !8502, !8503, !8504, !8505, !8506, !8507, !8508, !8509}
!8501 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8499, file: !244, line: 26, baseType: !108, size: 32)
!8502 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8499, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8499, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!8504 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8499, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8499, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8499, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8499, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8499, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8499, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!8510 = !{!8511, !8512, !8513, !8514, !8515, !8516, !8517, !8518, !8519, !8520}
!8511 = !DILocalVariable(name: "msp", arg: 1, scope: !8493, file: !8494, line: 1036, type: !108)
!8512 = !DILocalVariable(name: "psp", arg: 2, scope: !8493, file: !8494, line: 1036, type: !108)
!8513 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8493, file: !8494, line: 1036, type: !108)
!8514 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8493, file: !8494, line: 1037, type: !8497)
!8515 = !DILocalVariable(name: "reason", scope: !8493, file: !8494, line: 1039, type: !108)
!8516 = !DILocalVariable(name: "fault", scope: !8493, file: !8494, line: 1040, type: !103)
!8517 = !DILocalVariable(name: "recoverable", scope: !8493, file: !8494, line: 1041, type: !119)
!8518 = !DILocalVariable(name: "nested_exc", scope: !8493, file: !8494, line: 1041, type: !119)
!8519 = !DILocalVariable(name: "esf", scope: !8493, file: !8494, line: 1042, type: !3673)
!8520 = !DILocalVariable(name: "esf_copy", scope: !8493, file: !8494, line: 1047, type: !3674)
!8521 = !DILocation(line: 0, scope: !8493)
!8522 = !DILocation(line: 1040, column: 19, scope: !8493)
!8523 = !DILocation(line: 1041, column: 2, scope: !8493)
!8524 = !DILocation(line: 1047, column: 2, scope: !8493)
!8525 = !DILocation(line: 1047, column: 15, scope: !8493)
!8526 = !DILocalVariable(name: "key", arg: 1, scope: !8527, file: !7872, line: 84, type: !32)
!8527 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7872, file: !7872, line: 84, type: !7883, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !8528)
!8528 = !{!8526}
!8529 = !DILocation(line: 0, scope: !8527, inlinedAt: !8530)
!8530 = distinct !DILocation(line: 1050, column: 2, scope: !8493)
!8531 = !DILocation(line: 95, column: 2, scope: !8527, inlinedAt: !8530)
!8532 = !{i64 1685273}
!8533 = !DILocation(line: 1055, column: 9, scope: !8493)
!8534 = !DILocation(line: 1056, column: 2, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8536, file: !8494, line: 1056, column: 2)
!8536 = distinct !DILexicalBlock(scope: !8493, file: !8494, line: 1056, column: 2)
!8537 = !DILocation(line: 1056, column: 2, scope: !8536)
!8538 = !DILocation(line: 1056, column: 2, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8535, file: !8494, line: 1056, column: 2)
!8540 = !DILocation(line: 1040, column: 24, scope: !8493)
!8541 = !DILocation(line: 1063, column: 11, scope: !8493)
!8542 = !DILocation(line: 1064, column: 6, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8493, file: !8494, line: 1064, column: 6)
!8544 = !{i8 0, i8 2}
!8545 = !DILocation(line: 1064, column: 6, scope: !8493)
!8546 = !DILocation(line: 1070, column: 20, scope: !8493)
!8547 = !DILocation(line: 1070, column: 2, scope: !8493)
!8548 = !DILocation(line: 1089, column: 6, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8493, file: !8494, line: 1089, column: 6)
!8550 = !DILocation(line: 0, scope: !8549)
!8551 = !DILocation(line: 1089, column: 6, scope: !8493)
!8552 = !DILocation(line: 1090, column: 28, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8554, file: !8494, line: 1090, column: 7)
!8554 = distinct !DILexicalBlock(scope: !8549, file: !8494, line: 1089, column: 18)
!8555 = !DILocation(line: 1090, column: 44, scope: !8553)
!8556 = !DILocation(line: 1090, column: 7, scope: !8554)
!8557 = !DILocation(line: 1091, column: 24, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8553, file: !8494, line: 1090, column: 50)
!8559 = !DILocation(line: 1092, column: 3, scope: !8558)
!8560 = !DILocation(line: 1094, column: 23, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8549, file: !8494, line: 1093, column: 9)
!8562 = !DILocation(line: 1097, column: 2, scope: !8493)
!8563 = !DILocation(line: 1098, column: 1, scope: !8493)
!8564 = distinct !DISubprogram(name: "get_esf", scope: !8494, file: !8494, line: 894, type: !8565, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !8568)
!8565 = !DISubroutineType(types: !8566)
!8566 = !{!3673, !108, !108, !108, !8567}
!8567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!8568 = !{!8569, !8570, !8571, !8572, !8573, !8574}
!8569 = !DILocalVariable(name: "msp", arg: 1, scope: !8564, file: !8494, line: 894, type: !108)
!8570 = !DILocalVariable(name: "psp", arg: 2, scope: !8564, file: !8494, line: 894, type: !108)
!8571 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8564, file: !8494, line: 894, type: !108)
!8572 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8564, file: !8494, line: 895, type: !8567)
!8573 = !DILocalVariable(name: "alternative_state_exc", scope: !8564, file: !8494, line: 897, type: !119)
!8574 = !DILocalVariable(name: "ptr_esf", scope: !8564, file: !8494, line: 898, type: !3673)
!8575 = !DILocation(line: 0, scope: !8564)
!8576 = !DILocation(line: 900, column: 14, scope: !8564)
!8577 = !DILocation(line: 902, column: 49, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8564, file: !8494, line: 902, column: 6)
!8579 = !DILocation(line: 902, column: 6, scope: !8564)
!8580 = !DILocation(line: 983, column: 44, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8564, file: !8494, line: 983, column: 6)
!8582 = !DILocation(line: 985, column: 3, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8584, file: !8494, line: 985, column: 3)
!8584 = distinct !DILexicalBlock(scope: !8585, file: !8494, line: 985, column: 3)
!8585 = distinct !DILexicalBlock(scope: !8586, file: !8494, line: 985, column: 3)
!8586 = distinct !DILexicalBlock(scope: !8587, file: !8494, line: 985, column: 3)
!8587 = distinct !DILexicalBlock(scope: !8581, file: !8494, line: 984, column: 47)
!8588 = !DILocation(line: 986, column: 3, scope: !8587)
!8589 = !DILocation(line: 983, column: 18, scope: !8581)
!8590 = !DILocation(line: 991, column: 7, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8592, file: !8494, line: 990, column: 30)
!8592 = distinct !DILexicalBlock(scope: !8564, file: !8494, line: 990, column: 6)
!8593 = !DILocation(line: 998, column: 16, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8595, file: !8494, line: 995, column: 10)
!8595 = distinct !DILexicalBlock(scope: !8591, file: !8494, line: 991, column: 7)
!8596 = !DILocation(line: 1002, column: 2, scope: !8564)
!8597 = !DILocation(line: 1003, column: 1, scope: !8564)
!8598 = distinct !DISubprogram(name: "fault_handle", scope: !8494, file: !8494, line: 786, type: !8599, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !8601)
!8599 = !DISubroutineType(types: !8600)
!8600 = !{!108, !3673, !103, !8567}
!8601 = !{!8602, !8603, !8604, !8605}
!8602 = !DILocalVariable(name: "esf", arg: 1, scope: !8598, file: !8494, line: 786, type: !3673)
!8603 = !DILocalVariable(name: "fault", arg: 2, scope: !8598, file: !8494, line: 786, type: !103)
!8604 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8598, file: !8494, line: 786, type: !8567)
!8605 = !DILocalVariable(name: "reason", scope: !8598, file: !8494, line: 788, type: !108)
!8606 = !DILocation(line: 0, scope: !8598)
!8607 = !DILocation(line: 790, column: 15, scope: !8598)
!8608 = !DILocation(line: 792, column: 2, scope: !8598)
!8609 = !DILocation(line: 794, column: 12, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8598, file: !8494, line: 792, column: 17)
!8611 = !DILocation(line: 795, column: 3, scope: !8610)
!8612 = !DILocation(line: 800, column: 12, scope: !8610)
!8613 = !DILocation(line: 801, column: 3, scope: !8610)
!8614 = !DILocation(line: 803, column: 12, scope: !8610)
!8615 = !DILocation(line: 804, column: 3, scope: !8610)
!8616 = !DILocation(line: 806, column: 12, scope: !8610)
!8617 = !DILocation(line: 807, column: 3, scope: !8610)
!8618 = !DILocation(line: 814, column: 3, scope: !8610)
!8619 = !DILocation(line: 815, column: 3, scope: !8610)
!8620 = !DILocation(line: 820, column: 3, scope: !8610)
!8621 = !DILocation(line: 821, column: 3, scope: !8610)
!8622 = !DILocation(line: 829, column: 2, scope: !8598)
!8623 = distinct !DISubprogram(name: "hard_fault", scope: !8494, file: !8494, line: 709, type: !8624, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !8626)
!8624 = !DISubroutineType(types: !8625)
!8625 = !{!108, !3673, !8567}
!8626 = !{!8627, !8628, !8629}
!8627 = !DILocalVariable(name: "esf", arg: 1, scope: !8623, file: !8494, line: 709, type: !3673)
!8628 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8623, file: !8494, line: 709, type: !8567)
!8629 = !DILocalVariable(name: "reason", scope: !8623, file: !8494, line: 711, type: !108)
!8630 = !DILocation(line: 0, scope: !8623)
!8631 = !DILocation(line: 713, column: 2, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8633, file: !8494, line: 713, column: 2)
!8633 = distinct !DILexicalBlock(scope: !8634, file: !8494, line: 713, column: 2)
!8634 = distinct !DILexicalBlock(scope: !8635, file: !8494, line: 713, column: 2)
!8635 = distinct !DILexicalBlock(scope: !8623, file: !8494, line: 713, column: 2)
!8636 = !DILocation(line: 732, column: 15, scope: !8623)
!8637 = !DILocation(line: 734, column: 12, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8623, file: !8494, line: 734, column: 6)
!8639 = !DILocation(line: 734, column: 17, scope: !8638)
!8640 = !DILocation(line: 734, column: 41, scope: !8638)
!8641 = !DILocation(line: 734, column: 6, scope: !8623)
!8642 = !DILocation(line: 735, column: 3, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8644, file: !8494, line: 735, column: 3)
!8644 = distinct !DILexicalBlock(scope: !8645, file: !8494, line: 735, column: 3)
!8645 = distinct !DILexicalBlock(scope: !8646, file: !8494, line: 735, column: 3)
!8646 = distinct !DILexicalBlock(scope: !8647, file: !8494, line: 735, column: 3)
!8647 = distinct !DILexicalBlock(scope: !8638, file: !8494, line: 734, column: 47)
!8648 = !DILocation(line: 736, column: 2, scope: !8647)
!8649 = !DILocation(line: 736, column: 19, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8638, file: !8494, line: 736, column: 13)
!8651 = !DILocation(line: 736, column: 49, scope: !8650)
!8652 = !DILocation(line: 736, column: 13, scope: !8638)
!8653 = !DILocation(line: 737, column: 3, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8655, file: !8494, line: 737, column: 3)
!8655 = distinct !DILexicalBlock(scope: !8656, file: !8494, line: 737, column: 3)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !8494, line: 737, column: 3)
!8657 = distinct !DILexicalBlock(scope: !8658, file: !8494, line: 737, column: 3)
!8658 = distinct !DILexicalBlock(scope: !8650, file: !8494, line: 736, column: 55)
!8659 = !DILocation(line: 738, column: 2, scope: !8658)
!8660 = !DILocation(line: 738, column: 19, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8650, file: !8494, line: 738, column: 13)
!8662 = !DILocation(line: 738, column: 24, scope: !8661)
!8663 = !DILocation(line: 738, column: 47, scope: !8661)
!8664 = !DILocation(line: 738, column: 13, scope: !8650)
!8665 = !DILocation(line: 739, column: 3, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8667, file: !8494, line: 739, column: 3)
!8667 = distinct !DILexicalBlock(scope: !8668, file: !8494, line: 739, column: 3)
!8668 = distinct !DILexicalBlock(scope: !8669, file: !8494, line: 739, column: 3)
!8669 = distinct !DILexicalBlock(scope: !8670, file: !8494, line: 739, column: 3)
!8670 = distinct !DILexicalBlock(scope: !8661, file: !8494, line: 738, column: 53)
!8671 = !DILocation(line: 740, column: 7, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8670, file: !8494, line: 740, column: 7)
!8673 = !DILocation(line: 740, column: 7, scope: !8670)
!8674 = !DILocation(line: 741, column: 4, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8676, file: !8494, line: 741, column: 4)
!8676 = distinct !DILexicalBlock(scope: !8677, file: !8494, line: 741, column: 4)
!8677 = distinct !DILexicalBlock(scope: !8678, file: !8494, line: 741, column: 4)
!8678 = distinct !DILexicalBlock(scope: !8679, file: !8494, line: 741, column: 4)
!8679 = distinct !DILexicalBlock(scope: !8672, file: !8494, line: 740, column: 38)
!8680 = !DILocation(line: 742, column: 24, scope: !8679)
!8681 = !DILocation(line: 743, column: 3, scope: !8679)
!8682 = !DILocation(line: 743, column: 20, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8672, file: !8494, line: 743, column: 14)
!8684 = !DILocation(line: 743, column: 25, scope: !8683)
!8685 = !DILocation(line: 743, column: 52, scope: !8683)
!8686 = !DILocation(line: 743, column: 14, scope: !8672)
!8687 = !DILocation(line: 744, column: 13, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8683, file: !8494, line: 743, column: 58)
!8689 = !DILocation(line: 745, column: 3, scope: !8688)
!8690 = !DILocation(line: 745, column: 20, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8683, file: !8494, line: 745, column: 14)
!8692 = !DILocation(line: 745, column: 25, scope: !8691)
!8693 = !DILocation(line: 745, column: 52, scope: !8691)
!8694 = !DILocation(line: 745, column: 14, scope: !8683)
!8695 = !DILocation(line: 746, column: 13, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8691, file: !8494, line: 745, column: 58)
!8697 = !DILocation(line: 747, column: 3, scope: !8696)
!8698 = !DILocation(line: 747, column: 20, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8691, file: !8494, line: 747, column: 14)
!8700 = !DILocation(line: 747, column: 52, scope: !8699)
!8701 = !DILocation(line: 747, column: 14, scope: !8691)
!8702 = !DILocation(line: 748, column: 13, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8699, file: !8494, line: 747, column: 58)
!8704 = !DILocation(line: 754, column: 4, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !8494, line: 754, column: 4)
!8706 = distinct !DILexicalBlock(scope: !8707, file: !8494, line: 754, column: 4)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !8494, line: 754, column: 4)
!8708 = distinct !DILexicalBlock(scope: !8699, file: !8494, line: 753, column: 10)
!8709 = !DILocation(line: 758, column: 3, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8711, file: !8494, line: 758, column: 3)
!8711 = distinct !DILexicalBlock(scope: !8712, file: !8494, line: 758, column: 3)
!8712 = distinct !DILexicalBlock(scope: !8713, file: !8494, line: 758, column: 3)
!8713 = distinct !DILexicalBlock(scope: !8661, file: !8494, line: 757, column: 9)
!8714 = !DILocation(line: 766, column: 2, scope: !8623)
!8715 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8494, file: !8494, line: 229, type: !8599, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !8716)
!8716 = !{!8717, !8718, !8719, !8720, !8721, !8722, !8725}
!8717 = !DILocalVariable(name: "esf", arg: 1, scope: !8715, file: !8494, line: 229, type: !3673)
!8718 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8715, file: !8494, line: 229, type: !103)
!8719 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8715, file: !8494, line: 230, type: !8567)
!8720 = !DILocalVariable(name: "reason", scope: !8715, file: !8494, line: 232, type: !108)
!8721 = !DILocalVariable(name: "mmfar", scope: !8715, file: !8494, line: 233, type: !108)
!8722 = !DILocalVariable(name: "temp", scope: !8723, file: !8494, line: 254, type: !108)
!8723 = distinct !DILexicalBlock(scope: !8724, file: !8494, line: 244, column: 48)
!8724 = distinct !DILexicalBlock(scope: !8715, file: !8494, line: 244, column: 6)
!8725 = !DILocalVariable(name: "min_stack_ptr", scope: !8726, file: !8494, line: 309, type: !108)
!8726 = distinct !DILexicalBlock(scope: !8727, file: !8494, line: 308, column: 43)
!8727 = distinct !DILexicalBlock(scope: !8728, file: !8494, line: 308, column: 7)
!8728 = distinct !DILexicalBlock(scope: !8729, file: !8494, line: 289, column: 40)
!8729 = distinct !DILexicalBlock(scope: !8715, file: !8494, line: 288, column: 6)
!8730 = !DILocation(line: 0, scope: !8715)
!8731 = !DILocation(line: 235, column: 2, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8733, file: !8494, line: 235, column: 2)
!8733 = distinct !DILexicalBlock(scope: !8734, file: !8494, line: 235, column: 2)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !8494, line: 235, column: 2)
!8735 = distinct !DILexicalBlock(scope: !8715, file: !8494, line: 235, column: 2)
!8736 = !DILocation(line: 237, column: 12, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8715, file: !8494, line: 237, column: 6)
!8738 = !DILocation(line: 237, column: 17, scope: !8737)
!8739 = !DILocation(line: 237, column: 41, scope: !8737)
!8740 = !DILocation(line: 237, column: 6, scope: !8715)
!8741 = !DILocation(line: 238, column: 3, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !8494, line: 238, column: 3)
!8743 = distinct !DILexicalBlock(scope: !8744, file: !8494, line: 238, column: 3)
!8744 = distinct !DILexicalBlock(scope: !8745, file: !8494, line: 238, column: 3)
!8745 = distinct !DILexicalBlock(scope: !8746, file: !8494, line: 238, column: 3)
!8746 = distinct !DILexicalBlock(scope: !8737, file: !8494, line: 237, column: 47)
!8747 = !DILocation(line: 240, column: 2, scope: !8746)
!8748 = !DILocation(line: 241, column: 12, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8715, file: !8494, line: 241, column: 6)
!8750 = !DILocation(line: 241, column: 17, scope: !8749)
!8751 = !DILocation(line: 241, column: 43, scope: !8749)
!8752 = !DILocation(line: 241, column: 6, scope: !8715)
!8753 = !DILocation(line: 242, column: 3, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8755, file: !8494, line: 242, column: 3)
!8755 = distinct !DILexicalBlock(scope: !8756, file: !8494, line: 242, column: 3)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !8494, line: 242, column: 3)
!8757 = distinct !DILexicalBlock(scope: !8758, file: !8494, line: 242, column: 3)
!8758 = distinct !DILexicalBlock(scope: !8749, file: !8494, line: 241, column: 49)
!8759 = !DILocation(line: 243, column: 2, scope: !8758)
!8760 = !DILocation(line: 244, column: 12, scope: !8724)
!8761 = !DILocation(line: 244, column: 17, scope: !8724)
!8762 = !DILocation(line: 244, column: 42, scope: !8724)
!8763 = !DILocation(line: 244, column: 6, scope: !8715)
!8764 = !DILocation(line: 245, column: 3, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8766, file: !8494, line: 245, column: 3)
!8766 = distinct !DILexicalBlock(scope: !8767, file: !8494, line: 245, column: 3)
!8767 = distinct !DILexicalBlock(scope: !8768, file: !8494, line: 245, column: 3)
!8768 = distinct !DILexicalBlock(scope: !8723, file: !8494, line: 245, column: 3)
!8769 = !DILocation(line: 254, column: 24, scope: !8723)
!8770 = !DILocation(line: 0, scope: !8723)
!8771 = !DILocation(line: 256, column: 13, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8723, file: !8494, line: 256, column: 7)
!8773 = !DILocation(line: 256, column: 18, scope: !8772)
!8774 = !DILocation(line: 256, column: 44, scope: !8772)
!8775 = !DILocation(line: 256, column: 7, scope: !8723)
!8776 = !DILocation(line: 258, column: 4, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8778, file: !8494, line: 258, column: 4)
!8778 = distinct !DILexicalBlock(scope: !8779, file: !8494, line: 258, column: 4)
!8779 = distinct !DILexicalBlock(scope: !8780, file: !8494, line: 258, column: 4)
!8780 = distinct !DILexicalBlock(scope: !8781, file: !8494, line: 258, column: 4)
!8781 = distinct !DILexicalBlock(scope: !8772, file: !8494, line: 256, column: 50)
!8782 = !DILocation(line: 259, column: 24, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8781, file: !8494, line: 259, column: 8)
!8784 = !DILocation(line: 259, column: 8, scope: !8781)
!8785 = !DILocation(line: 261, column: 15, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8783, file: !8494, line: 259, column: 30)
!8787 = !DILocation(line: 262, column: 4, scope: !8786)
!8788 = !DILocation(line: 265, column: 12, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8715, file: !8494, line: 265, column: 6)
!8790 = !DILocation(line: 265, column: 17, scope: !8789)
!8791 = !DILocation(line: 265, column: 42, scope: !8789)
!8792 = !DILocation(line: 265, column: 6, scope: !8715)
!8793 = !DILocation(line: 266, column: 3, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8795, file: !8494, line: 266, column: 3)
!8795 = distinct !DILexicalBlock(scope: !8796, file: !8494, line: 266, column: 3)
!8796 = distinct !DILexicalBlock(scope: !8797, file: !8494, line: 266, column: 3)
!8797 = distinct !DILexicalBlock(scope: !8798, file: !8494, line: 266, column: 3)
!8798 = distinct !DILexicalBlock(scope: !8789, file: !8494, line: 265, column: 48)
!8799 = !DILocation(line: 267, column: 2, scope: !8798)
!8800 = !DILocation(line: 288, column: 12, scope: !8729)
!8801 = !DILocation(line: 288, column: 17, scope: !8729)
!8802 = !DILocation(line: 288, column: 41, scope: !8729)
!8803 = !DILocation(line: 289, column: 9, scope: !8729)
!8804 = !DILocation(line: 289, column: 14, scope: !8729)
!8805 = !DILocation(line: 288, column: 6, scope: !8715)
!8806 = !DILocation(line: 308, column: 12, scope: !8727)
!8807 = !DILocation(line: 308, column: 17, scope: !8727)
!8808 = !DILocation(line: 308, column: 7, scope: !8728)
!8809 = !DILocation(line: 310, column: 6, scope: !8726)
!8810 = !DILocation(line: 309, column: 29, scope: !8726)
!8811 = !DILocation(line: 0, scope: !8726)
!8812 = !DILocation(line: 312, column: 8, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8726, file: !8494, line: 312, column: 8)
!8814 = !DILocation(line: 312, column: 8, scope: !8726)
!8815 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8816, file: !8210, line: 1099, type: !108)
!8816 = distinct !DISubprogram(name: "__set_PSP", scope: !8210, file: !8210, line: 1099, type: !7896, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !8817)
!8817 = !{!8815}
!8818 = !DILocation(line: 0, scope: !8816, inlinedAt: !8819)
!8819 = distinct !DILocation(line: 338, column: 5, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8813, file: !8494, line: 312, column: 23)
!8821 = !DILocation(line: 1101, column: 3, scope: !8816, inlinedAt: !8819)
!8822 = !{i64 2479998}
!8823 = !DILocation(line: 341, column: 4, scope: !8820)
!8824 = !DILocation(line: 342, column: 5, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8826, file: !8494, line: 342, column: 5)
!8826 = distinct !DILexicalBlock(scope: !8827, file: !8494, line: 342, column: 5)
!8827 = distinct !DILexicalBlock(scope: !8813, file: !8494, line: 341, column: 11)
!8828 = !DILocation(line: 342, column: 5, scope: !8826)
!8829 = !DILocation(line: 342, column: 5, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8825, file: !8494, line: 342, column: 5)
!8831 = !DILocation(line: 366, column: 12, scope: !8715)
!8832 = !DILocation(line: 369, column: 15, scope: !8715)
!8833 = !DILocation(line: 371, column: 2, scope: !8715)
!8834 = distinct !DISubprogram(name: "bus_fault", scope: !8494, file: !8494, line: 383, type: !8835, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !8837)
!8835 = !DISubroutineType(types: !8836)
!8836 = !{!103, !3673, !103, !8567}
!8837 = !{!8838, !8839, !8840, !8841, !8842}
!8838 = !DILocalVariable(name: "esf", arg: 1, scope: !8834, file: !8494, line: 383, type: !3673)
!8839 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8834, file: !8494, line: 383, type: !103)
!8840 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8834, file: !8494, line: 383, type: !8567)
!8841 = !DILocalVariable(name: "reason", scope: !8834, file: !8494, line: 385, type: !108)
!8842 = !DILocalVariable(name: "bfar", scope: !8843, file: !8494, line: 405, type: !108)
!8843 = distinct !DILexicalBlock(scope: !8844, file: !8494, line: 395, column: 42)
!8844 = distinct !DILexicalBlock(scope: !8834, file: !8494, line: 395, column: 6)
!8845 = !DILocation(line: 0, scope: !8834)
!8846 = !DILocation(line: 387, column: 2, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8848, file: !8494, line: 387, column: 2)
!8848 = distinct !DILexicalBlock(scope: !8849, file: !8494, line: 387, column: 2)
!8849 = distinct !DILexicalBlock(scope: !8850, file: !8494, line: 387, column: 2)
!8850 = distinct !DILexicalBlock(scope: !8834, file: !8494, line: 387, column: 2)
!8851 = !DILocation(line: 389, column: 11, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8834, file: !8494, line: 389, column: 6)
!8853 = !DILocation(line: 389, column: 16, scope: !8852)
!8854 = !DILocation(line: 389, column: 6, scope: !8834)
!8855 = !DILocation(line: 390, column: 3, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8857, file: !8494, line: 390, column: 3)
!8857 = distinct !DILexicalBlock(scope: !8858, file: !8494, line: 390, column: 3)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !8494, line: 390, column: 3)
!8859 = distinct !DILexicalBlock(scope: !8860, file: !8494, line: 390, column: 3)
!8860 = distinct !DILexicalBlock(scope: !8852, file: !8494, line: 389, column: 39)
!8861 = !DILocation(line: 391, column: 2, scope: !8860)
!8862 = !DILocation(line: 392, column: 11, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8834, file: !8494, line: 392, column: 6)
!8864 = !DILocation(line: 392, column: 16, scope: !8863)
!8865 = !DILocation(line: 392, column: 6, scope: !8834)
!8866 = !DILocation(line: 393, column: 3, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8868, file: !8494, line: 393, column: 3)
!8868 = distinct !DILexicalBlock(scope: !8869, file: !8494, line: 393, column: 3)
!8869 = distinct !DILexicalBlock(scope: !8870, file: !8494, line: 393, column: 3)
!8870 = distinct !DILexicalBlock(scope: !8871, file: !8494, line: 393, column: 3)
!8871 = distinct !DILexicalBlock(scope: !8863, file: !8494, line: 392, column: 41)
!8872 = !DILocation(line: 394, column: 2, scope: !8871)
!8873 = !DILocation(line: 395, column: 11, scope: !8844)
!8874 = !DILocation(line: 395, column: 16, scope: !8844)
!8875 = !DILocation(line: 395, column: 6, scope: !8834)
!8876 = !DILocation(line: 396, column: 3, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8878, file: !8494, line: 396, column: 3)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !8494, line: 396, column: 3)
!8879 = distinct !DILexicalBlock(scope: !8880, file: !8494, line: 396, column: 3)
!8880 = distinct !DILexicalBlock(scope: !8843, file: !8494, line: 396, column: 3)
!8881 = !DILocation(line: 405, column: 3, scope: !8843)
!8882 = !DILocation(line: 0, scope: !8843)
!8883 = !DILocation(line: 407, column: 13, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8843, file: !8494, line: 407, column: 7)
!8885 = !DILocation(line: 407, column: 18, scope: !8884)
!8886 = !DILocation(line: 407, column: 44, scope: !8884)
!8887 = !DILocation(line: 407, column: 7, scope: !8843)
!8888 = !DILocation(line: 408, column: 4, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8890, file: !8494, line: 408, column: 4)
!8890 = distinct !DILexicalBlock(scope: !8891, file: !8494, line: 408, column: 4)
!8891 = distinct !DILexicalBlock(scope: !8892, file: !8494, line: 408, column: 4)
!8892 = distinct !DILexicalBlock(scope: !8893, file: !8494, line: 408, column: 4)
!8893 = distinct !DILexicalBlock(scope: !8884, file: !8494, line: 407, column: 50)
!8894 = !DILocation(line: 409, column: 24, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8893, file: !8494, line: 409, column: 8)
!8896 = !DILocation(line: 409, column: 8, scope: !8893)
!8897 = !DILocation(line: 411, column: 15, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8895, file: !8494, line: 409, column: 30)
!8899 = !DILocation(line: 412, column: 4, scope: !8898)
!8900 = !DILocation(line: 415, column: 11, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8834, file: !8494, line: 415, column: 6)
!8902 = !DILocation(line: 415, column: 16, scope: !8901)
!8903 = !DILocation(line: 415, column: 6, scope: !8834)
!8904 = !DILocation(line: 416, column: 3, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8906, file: !8494, line: 416, column: 3)
!8906 = distinct !DILexicalBlock(scope: !8907, file: !8494, line: 416, column: 3)
!8907 = distinct !DILexicalBlock(scope: !8908, file: !8494, line: 416, column: 3)
!8908 = distinct !DILexicalBlock(scope: !8909, file: !8494, line: 416, column: 3)
!8909 = distinct !DILexicalBlock(scope: !8901, file: !8494, line: 415, column: 44)
!8910 = !DILocation(line: 417, column: 2, scope: !8909)
!8911 = !DILocation(line: 418, column: 12, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8834, file: !8494, line: 418, column: 6)
!8913 = !DILocation(line: 418, column: 17, scope: !8912)
!8914 = !DILocation(line: 418, column: 41, scope: !8912)
!8915 = !DILocation(line: 418, column: 6, scope: !8834)
!8916 = !DILocation(line: 419, column: 3, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8918, file: !8494, line: 419, column: 3)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !8494, line: 419, column: 3)
!8919 = distinct !DILexicalBlock(scope: !8920, file: !8494, line: 419, column: 3)
!8920 = distinct !DILexicalBlock(scope: !8921, file: !8494, line: 419, column: 3)
!8921 = distinct !DILexicalBlock(scope: !8912, file: !8494, line: 418, column: 47)
!8922 = !DILocation(line: 421, column: 2, scope: !8921)
!8923 = !DILocation(line: 524, column: 12, scope: !8834)
!8924 = !DILocation(line: 526, column: 15, scope: !8834)
!8925 = !DILocation(line: 528, column: 2, scope: !8834)
!8926 = distinct !DISubprogram(name: "usage_fault", scope: !8494, file: !8494, line: 539, type: !8927, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !8931)
!8927 = !DISubroutineType(types: !8928)
!8928 = !{!108, !8929}
!8929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8930, size: 32)
!8930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3674)
!8931 = !{!8932, !8933}
!8932 = !DILocalVariable(name: "esf", arg: 1, scope: !8926, file: !8494, line: 539, type: !8929)
!8933 = !DILocalVariable(name: "reason", scope: !8926, file: !8494, line: 541, type: !108)
!8934 = !DILocation(line: 0, scope: !8926)
!8935 = !DILocation(line: 543, column: 2, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8937, file: !8494, line: 543, column: 2)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !8494, line: 543, column: 2)
!8938 = distinct !DILexicalBlock(scope: !8939, file: !8494, line: 543, column: 2)
!8939 = distinct !DILexicalBlock(scope: !8926, file: !8494, line: 543, column: 2)
!8940 = !DILocation(line: 546, column: 12, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8926, file: !8494, line: 546, column: 6)
!8942 = !DILocation(line: 546, column: 17, scope: !8941)
!8943 = !DILocation(line: 546, column: 43, scope: !8941)
!8944 = !DILocation(line: 546, column: 6, scope: !8926)
!8945 = !DILocation(line: 547, column: 3, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8947, file: !8494, line: 547, column: 3)
!8947 = distinct !DILexicalBlock(scope: !8948, file: !8494, line: 547, column: 3)
!8948 = distinct !DILexicalBlock(scope: !8949, file: !8494, line: 547, column: 3)
!8949 = distinct !DILexicalBlock(scope: !8950, file: !8494, line: 547, column: 3)
!8950 = distinct !DILexicalBlock(scope: !8941, file: !8494, line: 546, column: 49)
!8951 = !DILocation(line: 548, column: 2, scope: !8950)
!8952 = !DILocation(line: 549, column: 12, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8926, file: !8494, line: 549, column: 6)
!8954 = !DILocation(line: 549, column: 17, scope: !8953)
!8955 = !DILocation(line: 549, column: 43, scope: !8953)
!8956 = !DILocation(line: 549, column: 6, scope: !8926)
!8957 = !DILocation(line: 550, column: 3, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8959, file: !8494, line: 550, column: 3)
!8959 = distinct !DILexicalBlock(scope: !8960, file: !8494, line: 550, column: 3)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !8494, line: 550, column: 3)
!8961 = distinct !DILexicalBlock(scope: !8962, file: !8494, line: 550, column: 3)
!8962 = distinct !DILexicalBlock(scope: !8953, file: !8494, line: 549, column: 49)
!8963 = !DILocation(line: 551, column: 2, scope: !8962)
!8964 = !DILocation(line: 567, column: 12, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8926, file: !8494, line: 567, column: 6)
!8966 = !DILocation(line: 567, column: 17, scope: !8965)
!8967 = !DILocation(line: 567, column: 38, scope: !8965)
!8968 = !DILocation(line: 567, column: 6, scope: !8926)
!8969 = !DILocation(line: 568, column: 3, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8971, file: !8494, line: 568, column: 3)
!8971 = distinct !DILexicalBlock(scope: !8972, file: !8494, line: 568, column: 3)
!8972 = distinct !DILexicalBlock(scope: !8973, file: !8494, line: 568, column: 3)
!8973 = distinct !DILexicalBlock(scope: !8974, file: !8494, line: 568, column: 3)
!8974 = distinct !DILexicalBlock(scope: !8965, file: !8494, line: 567, column: 44)
!8975 = !DILocation(line: 569, column: 2, scope: !8974)
!8976 = !DILocation(line: 570, column: 12, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8926, file: !8494, line: 570, column: 6)
!8978 = !DILocation(line: 570, column: 17, scope: !8977)
!8979 = !DILocation(line: 570, column: 39, scope: !8977)
!8980 = !DILocation(line: 570, column: 6, scope: !8926)
!8981 = !DILocation(line: 571, column: 3, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8983, file: !8494, line: 571, column: 3)
!8983 = distinct !DILexicalBlock(scope: !8984, file: !8494, line: 571, column: 3)
!8984 = distinct !DILexicalBlock(scope: !8985, file: !8494, line: 571, column: 3)
!8985 = distinct !DILexicalBlock(scope: !8986, file: !8494, line: 571, column: 3)
!8986 = distinct !DILexicalBlock(scope: !8977, file: !8494, line: 570, column: 45)
!8987 = !DILocation(line: 572, column: 2, scope: !8986)
!8988 = !DILocation(line: 573, column: 12, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8926, file: !8494, line: 573, column: 6)
!8990 = !DILocation(line: 573, column: 17, scope: !8989)
!8991 = !DILocation(line: 573, column: 42, scope: !8989)
!8992 = !DILocation(line: 573, column: 6, scope: !8926)
!8993 = !DILocation(line: 574, column: 3, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8995, file: !8494, line: 574, column: 3)
!8995 = distinct !DILexicalBlock(scope: !8996, file: !8494, line: 574, column: 3)
!8996 = distinct !DILexicalBlock(scope: !8997, file: !8494, line: 574, column: 3)
!8997 = distinct !DILexicalBlock(scope: !8998, file: !8494, line: 574, column: 3)
!8998 = distinct !DILexicalBlock(scope: !8989, file: !8494, line: 573, column: 48)
!8999 = !DILocation(line: 575, column: 2, scope: !8998)
!9000 = !DILocation(line: 576, column: 12, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8926, file: !8494, line: 576, column: 6)
!9002 = !DILocation(line: 576, column: 17, scope: !9001)
!9003 = !DILocation(line: 576, column: 44, scope: !9001)
!9004 = !DILocation(line: 576, column: 6, scope: !8926)
!9005 = !DILocation(line: 577, column: 3, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9007, file: !8494, line: 577, column: 3)
!9007 = distinct !DILexicalBlock(scope: !9008, file: !8494, line: 577, column: 3)
!9008 = distinct !DILexicalBlock(scope: !9009, file: !8494, line: 577, column: 3)
!9009 = distinct !DILexicalBlock(scope: !9010, file: !8494, line: 577, column: 3)
!9010 = distinct !DILexicalBlock(scope: !9001, file: !8494, line: 576, column: 50)
!9011 = !DILocation(line: 578, column: 2, scope: !9010)
!9012 = !DILocation(line: 581, column: 12, scope: !8926)
!9013 = !DILocation(line: 583, column: 2, scope: !8926)
!9014 = distinct !DISubprogram(name: "debug_monitor", scope: !8494, file: !8494, line: 632, type: !9015, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !9017)
!9015 = !DISubroutineType(types: !9016)
!9016 = !{null, !3673, !8567}
!9017 = !{!9018, !9019}
!9018 = !DILocalVariable(name: "esf", arg: 1, scope: !9014, file: !8494, line: 632, type: !3673)
!9019 = !DILocalVariable(name: "recoverable", arg: 2, scope: !9014, file: !8494, line: 632, type: !8567)
!9020 = !DILocation(line: 0, scope: !9014)
!9021 = !DILocation(line: 634, column: 15, scope: !9014)
!9022 = !DILocation(line: 636, column: 2, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !8494, line: 636, column: 2)
!9024 = distinct !DILexicalBlock(scope: !9025, file: !8494, line: 636, column: 2)
!9025 = distinct !DILexicalBlock(scope: !9026, file: !8494, line: 636, column: 2)
!9026 = distinct !DILexicalBlock(scope: !9014, file: !8494, line: 636, column: 2)
!9027 = !DILocation(line: 652, column: 1, scope: !9014)
!9028 = distinct !DISubprogram(name: "reserved_exception", scope: !8494, file: !8494, line: 776, type: !9029, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !9031)
!9029 = !DISubroutineType(types: !9030)
!9030 = !{null, !8929, !103}
!9031 = !{!9032, !9033}
!9032 = !DILocalVariable(name: "esf", arg: 1, scope: !9028, file: !8494, line: 776, type: !8929)
!9033 = !DILocalVariable(name: "fault", arg: 2, scope: !9028, file: !8494, line: 776, type: !103)
!9034 = !DILocation(line: 0, scope: !9028)
!9035 = !DILocation(line: 780, column: 2, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9037, file: !8494, line: 780, column: 2)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !8494, line: 780, column: 2)
!9038 = distinct !DILexicalBlock(scope: !9039, file: !8494, line: 780, column: 2)
!9039 = distinct !DILexicalBlock(scope: !9028, file: !8494, line: 780, column: 2)
!9040 = !DILocation(line: 783, column: 1, scope: !9028)
!9041 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8494, file: !8494, line: 658, type: !9042, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !9044)
!9042 = !DISubroutineType(types: !9043)
!9043 = !{!119, !3673}
!9044 = !{!9045, !9046, !9047}
!9045 = !DILocalVariable(name: "esf", arg: 1, scope: !9041, file: !8494, line: 658, type: !3673)
!9046 = !DILocalVariable(name: "ret_addr", scope: !9041, file: !8494, line: 660, type: !3445)
!9047 = !DILocalVariable(name: "fault_insn", scope: !9041, file: !8494, line: 686, type: !177)
!9048 = !DILocation(line: 0, scope: !9041)
!9049 = !DILocation(line: 660, column: 46, scope: !9041)
!9050 = !DILocation(line: 660, column: 23, scope: !9041)
!9051 = !DILocation(line: 682, column: 11, scope: !9041)
!9052 = !DILocation(line: 271, column: 3, scope: !9053, inlinedAt: !9054)
!9053 = distinct !DISubprogram(name: "__DSB", scope: !8210, file: !8210, line: 269, type: !333, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !2894)
!9054 = distinct !DILocation(line: 683, column: 2, scope: !9041)
!9055 = !{i64 2456133}
!9056 = !DILocation(line: 260, column: 3, scope: !9057, inlinedAt: !9058)
!9057 = distinct !DISubprogram(name: "__ISB", scope: !8210, file: !8210, line: 258, type: !333, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !2894)
!9058 = distinct !DILocation(line: 684, column: 2, scope: !9041)
!9059 = !{i64 2455850}
!9060 = !DILocation(line: 686, column: 35, scope: !9041)
!9061 = !DILocation(line: 686, column: 24, scope: !9041)
!9062 = !DILocation(line: 688, column: 11, scope: !9041)
!9063 = !DILocation(line: 271, column: 3, scope: !9053, inlinedAt: !9064)
!9064 = distinct !DILocation(line: 689, column: 2, scope: !9041)
!9065 = !DILocation(line: 260, column: 3, scope: !9057, inlinedAt: !9066)
!9066 = distinct !DILocation(line: 690, column: 2, scope: !9041)
!9067 = !DILocation(line: 693, column: 45, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9041, file: !8494, line: 693, column: 6)
!9069 = !DILocation(line: 699, column: 1, scope: !9041)
!9070 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8494, file: !8494, line: 1107, type: !333, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3645, retainedNodes: !2894)
!9071 = !DILocation(line: 1111, column: 11, scope: !9070)
!9072 = !DILocation(line: 1136, column: 1, scope: !9070)
!9073 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !9074, file: !9074, line: 26, type: !333, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3716, retainedNodes: !9075)
!9074 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9075 = !{!9076}
!9076 = !DILocalVariable(name: "irq", scope: !9073, file: !9074, line: 28, type: !103)
!9077 = !DILocation(line: 0, scope: !9073)
!9078 = !DILocation(line: 30, column: 2, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9073, file: !9074, line: 30, column: 2)
!9080 = !DILocation(line: 31, column: 3, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9082, file: !9074, line: 30, column: 39)
!9082 = distinct !DILexicalBlock(scope: !9079, file: !9074, line: 30, column: 2)
!9083 = !DILocation(line: 30, column: 35, scope: !9082)
!9084 = !DILocation(line: 30, column: 13, scope: !9082)
!9085 = distinct !{!9085, !9078, !9086}
!9086 = !DILocation(line: 32, column: 2, scope: !9079)
!9087 = !DILocation(line: 33, column: 1, scope: !9073)
!9088 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1041, file: !1041, line: 1638, type: !8250, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3716, retainedNodes: !9089)
!9089 = !{!9090, !9091}
!9090 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9088, file: !1041, line: 1638, type: !1720)
!9091 = !DILocalVariable(name: "priority", arg: 2, scope: !9088, file: !1041, line: 1638, type: !108)
!9092 = !DILocation(line: 0, scope: !9088)
!9093 = !DILocation(line: 1640, column: 7, scope: !9088)
!9094 = !DILocation(line: 0, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9088, file: !1041, line: 1640, column: 7)
!9096 = !DILocation(line: 1648, column: 1, scope: !9088)
!9097 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !9098, file: !9098, line: 27, type: !9099, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3761, retainedNodes: !9204)
!9098 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9099 = !DISubroutineType(types: !9100)
!9100 = !{null, !9101}
!9101 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !9102)
!9102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9103, size: 32)
!9103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !9104)
!9104 = !{!9105, !9163, !9175, !9176, !9177, !9178, !9184, !9199}
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9103, file: !195, line: 247, baseType: !9106, size: 384)
!9106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !9107)
!9107 = !{!9108, !9132, !9139, !9140, !9141, !9150, !9151, !9152}
!9108 = !DIDerivedType(tag: DW_TAG_member, scope: !9106, file: !195, line: 60, baseType: !9109, size: 64)
!9109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9106, file: !195, line: 60, size: 64, elements: !9110)
!9110 = !{!9111, !9126}
!9111 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9109, file: !195, line: 61, baseType: !9112, size: 64)
!9112 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !9113)
!9113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !9114)
!9114 = !{!9115, !9121}
!9115 = !DIDerivedType(tag: DW_TAG_member, scope: !9113, file: !133, line: 38, baseType: !9116, size: 32)
!9116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9113, file: !133, line: 38, size: 32, elements: !9117)
!9117 = !{!9118, !9120}
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9116, file: !133, line: 39, baseType: !9119, size: 32)
!9119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9113, size: 32)
!9120 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9116, file: !133, line: 40, baseType: !9119, size: 32)
!9121 = !DIDerivedType(tag: DW_TAG_member, scope: !9113, file: !133, line: 42, baseType: !9122, size: 32, offset: 32)
!9122 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9113, file: !133, line: 42, size: 32, elements: !9123)
!9123 = !{!9124, !9125}
!9124 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9122, file: !133, line: 43, baseType: !9119, size: 32)
!9125 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9122, file: !133, line: 44, baseType: !9119, size: 32)
!9126 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9109, file: !195, line: 62, baseType: !9127, size: 64)
!9127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !9128)
!9128 = !{!9129}
!9129 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9127, file: !207, line: 50, baseType: !9130, size: 64)
!9130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9131, size: 64, elements: !212)
!9131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9127, size: 32)
!9132 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9106, file: !195, line: 68, baseType: !9133, size: 32, offset: 64)
!9133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9134, size: 32)
!9134 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !9135)
!9135 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !9136)
!9136 = !{!9137}
!9137 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9135, file: !128, line: 232, baseType: !9138, size: 64)
!9138 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !9113)
!9139 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9106, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!9140 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9106, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!9141 = !DIDerivedType(tag: DW_TAG_member, scope: !9106, file: !195, line: 90, baseType: !9142, size: 16, offset: 112)
!9142 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9106, file: !195, line: 90, size: 16, elements: !9143)
!9143 = !{!9144, !9149}
!9144 = !DIDerivedType(tag: DW_TAG_member, scope: !9142, file: !195, line: 91, baseType: !9145, size: 16)
!9145 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9142, file: !195, line: 91, size: 16, elements: !9146)
!9146 = !{!9147, !9148}
!9147 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9145, file: !195, line: 96, baseType: !225, size: 8)
!9148 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9145, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!9149 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9142, file: !195, line: 100, baseType: !177, size: 16)
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9106, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!9151 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9106, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!9152 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9106, file: !195, line: 131, baseType: !9153, size: 192, offset: 192)
!9153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !9154)
!9154 = !{!9155, !9156, !9162}
!9155 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9153, file: !128, line: 245, baseType: !9112, size: 64)
!9156 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9153, file: !128, line: 246, baseType: !9157, size: 32, offset: 64)
!9157 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !9158)
!9158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9159, size: 32)
!9159 = !DISubroutineType(types: !9160)
!9160 = !{null, !9161}
!9161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9153, size: 32)
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9153, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9103, file: !195, line: 250, baseType: !9164, size: 288, offset: 384)
!9164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !9165)
!9165 = !{!9166, !9167, !9168, !9169, !9170, !9171, !9172, !9173, !9174}
!9166 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9164, file: !244, line: 26, baseType: !108, size: 32)
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9164, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9164, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9164, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9164, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!9171 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9164, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9164, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9164, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9164, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!9175 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9103, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!9176 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9103, file: !195, line: 256, baseType: !9134, size: 64, offset: 704)
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9103, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!9178 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9103, file: !195, line: 300, baseType: !9179, size: 96, offset: 800)
!9179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !9180)
!9180 = !{!9181, !9182, !9183}
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9179, file: !195, line: 153, baseType: !22, size: 32)
!9182 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9179, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!9183 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9179, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!9184 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9103, file: !195, line: 325, baseType: !9185, size: 32, offset: 896)
!9185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9186, size: 32)
!9186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !9187)
!9187 = !{!9188, !9194, !9195}
!9188 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9186, file: !124, line: 5074, baseType: !9189, size: 96)
!9189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !9190)
!9190 = !{!9191, !9192, !9193}
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9189, file: !270, line: 57, baseType: !273, size: 32)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9189, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9189, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9186, file: !124, line: 5075, baseType: !9134, size: 64, offset: 96)
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9186, file: !124, line: 5076, baseType: !9196, size: 32, offset: 160)
!9196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !9197)
!9197 = !{!9198}
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9196, file: !149, line: 52, baseType: !22, size: 32)
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9103, file: !195, line: 343, baseType: !9200, size: 64, offset: 928)
!9200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !9201)
!9201 = !{!9202, !9203}
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9200, file: !244, line: 63, baseType: !108, size: 32)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9200, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!9204 = !{!9205}
!9205 = !DILocalVariable(name: "thread", arg: 1, scope: !9097, file: !9098, line: 27, type: !9101)
!9206 = !DILocation(line: 0, scope: !9097)
!9207 = !DILocation(line: 29, column: 6, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9097, file: !9098, line: 29, column: 6)
!9209 = !DILocation(line: 29, column: 15, scope: !9208)
!9210 = !DILocation(line: 29, column: 6, scope: !9097)
!9211 = !DILocation(line: 1031, column: 3, scope: !9212, inlinedAt: !9217)
!9212 = distinct !DISubprogram(name: "__get_IPSR", scope: !8210, file: !8210, line: 1027, type: !9213, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3761, retainedNodes: !9215)
!9213 = !DISubroutineType(types: !9214)
!9214 = !{!108}
!9215 = !{!9216}
!9216 = !DILocalVariable(name: "result", scope: !9212, file: !8210, line: 1029, type: !108)
!9217 = distinct !DILocation(line: 48, column: 10, scope: !9218, inlinedAt: !9222)
!9218 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9219, file: !9219, line: 46, type: !9220, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3761, retainedNodes: !2894)
!9219 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9220 = !DISubroutineType(types: !9221)
!9221 = !{!119}
!9222 = distinct !DILocation(line: 30, column: 7, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9224, file: !9098, line: 30, column: 7)
!9224 = distinct !DILexicalBlock(scope: !9208, file: !9098, line: 29, column: 26)
!9225 = !{i64 2444981}
!9226 = !DILocation(line: 0, scope: !9212, inlinedAt: !9217)
!9227 = !DILocation(line: 48, column: 9, scope: !9218, inlinedAt: !9222)
!9228 = !DILocation(line: 30, column: 7, scope: !9224)
!9229 = !DILocation(line: 42, column: 14, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9223, file: !9098, line: 30, column: 25)
!9231 = !DILocation(line: 48, column: 15, scope: !9230)
!9232 = !DILocation(line: 49, column: 3, scope: !9230)
!9233 = !DILocation(line: 52, column: 2, scope: !9097)
!9234 = !DILocation(line: 53, column: 1, scope: !9097)
!9235 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !903, file: !903, line: 127, type: !333, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !2894)
!9236 = !DILocation(line: 134, column: 2, scope: !9235)
!9237 = !DILocation(line: 156, column: 1, scope: !9235)
!9238 = !DILocation(line: 0, scope: !902)
!9239 = !DILocation(line: 289, column: 36, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !902, file: !903, line: 285, column: 2)
!9241 = !DILocation(line: 289, column: 42, scope: !9240)
!9242 = !DILocation(line: 300, column: 36, scope: !902)
!9243 = !DILocation(line: 301, column: 35, scope: !902)
!9244 = !DILocation(line: 302, column: 37, scope: !902)
!9245 = !DILocation(line: 311, column: 2, scope: !902)
!9246 = !DILocation(line: 316, column: 1, scope: !902)
!9247 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !1069, file: !1069, line: 180, type: !333, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !2894)
!9248 = !DILocation(line: 188, column: 12, scope: !9247)
!9249 = !DILocation(line: 271, column: 3, scope: !9250, inlinedAt: !9251)
!9250 = distinct !DISubprogram(name: "__DSB", scope: !8210, file: !8210, line: 269, type: !333, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !2894)
!9251 = distinct !DILocation(line: 192, column: 2, scope: !9247)
!9252 = !{i64 2603808}
!9253 = !DILocation(line: 260, column: 3, scope: !9254, inlinedAt: !9255)
!9254 = distinct !DISubprogram(name: "__ISB", scope: !8210, file: !8210, line: 258, type: !333, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !2894)
!9255 = distinct !DILocation(line: 193, column: 2, scope: !9247)
!9256 = !{i64 2603525}
!9257 = !DILocation(line: 194, column: 1, scope: !9247)
!9258 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !1069, file: !1069, line: 199, type: !333, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !2894)
!9259 = !DILocation(line: 282, column: 3, scope: !9260, inlinedAt: !9261)
!9260 = distinct !DISubprogram(name: "__DMB", scope: !8210, file: !8210, line: 280, type: !333, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !2894)
!9261 = distinct !DILocation(line: 202, column: 2, scope: !9258)
!9262 = !{i64 2604084}
!9263 = !DILocation(line: 205, column: 12, scope: !9258)
!9264 = !DILocation(line: 206, column: 1, scope: !9258)
!9265 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !1069, file: !1069, line: 275, type: !9266, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9279)
!9266 = !DISubroutineType(types: !9267)
!9267 = !{null, !9268, !2676, !8461, !8461}
!9268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9269, size: 32)
!9269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9270)
!9270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !1015, line: 52, size: 96, elements: !9271)
!9271 = !{!9272, !9273, !9274}
!9272 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9270, file: !1015, line: 53, baseType: !22, size: 32)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9270, file: !1015, line: 54, baseType: !153, size: 32, offset: 32)
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !9270, file: !1015, line: 55, baseType: !9275, size: 32, offset: 64)
!9275 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !1021, line: 151, baseType: !9276)
!9276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1021, line: 149, size: 32, elements: !9277)
!9277 = !{!9278}
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !9276, file: !1021, line: 150, baseType: !108, size: 32)
!9279 = !{!9280, !9281, !9282, !9283}
!9280 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9265, file: !1069, line: 276, type: !9268)
!9281 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9265, file: !1069, line: 276, type: !2676)
!9282 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !9265, file: !1069, line: 277, type: !8461)
!9283 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9265, file: !1069, line: 277, type: !8461)
!9284 = !DILocation(line: 0, scope: !9265)
!9285 = !DILocation(line: 279, column: 6, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9265, file: !1069, line: 279, column: 6)
!9287 = !DILocation(line: 280, column: 57, scope: !9286)
!9288 = !DILocation(line: 279, column: 6, scope: !9265)
!9289 = !DILocation(line: 282, column: 3, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9291, file: !1069, line: 282, column: 3)
!9291 = distinct !DILexicalBlock(scope: !9292, file: !1069, line: 282, column: 3)
!9292 = distinct !DILexicalBlock(scope: !9293, file: !1069, line: 282, column: 3)
!9293 = distinct !DILexicalBlock(scope: !9286, file: !1069, line: 280, column: 69)
!9294 = !DILocation(line: 285, column: 1, scope: !9265)
!9295 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !9296, file: !9296, line: 220, type: !9297, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9299)
!9296 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9297 = !DISubroutineType(types: !9298)
!9298 = !{!103, !9268, !2676, !8461, !8461}
!9299 = !{!9300, !9301, !9302, !9303, !9304}
!9300 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9295, file: !9296, line: 221, type: !9268)
!9301 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9295, file: !9296, line: 221, type: !2676)
!9302 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !9295, file: !9296, line: 222, type: !8461)
!9303 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9295, file: !9296, line: 223, type: !8461)
!9304 = !DILocalVariable(name: "mpu_reg_index", scope: !9295, file: !9296, line: 225, type: !103)
!9305 = !DILocation(line: 0, scope: !9295)
!9306 = !DILocation(line: 225, column: 22, scope: !9295)
!9307 = !DILocation(line: 233, column: 18, scope: !9295)
!9308 = !DILocation(line: 236, column: 23, scope: !9295)
!9309 = !DILocation(line: 236, column: 21, scope: !9295)
!9310 = !DILocation(line: 238, column: 2, scope: !9295)
!9311 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !1069, file: !1069, line: 105, type: !9312, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9314)
!9312 = !DISubroutineType(types: !9313)
!9313 = !{!103, !9268, !164, !164, !119}
!9314 = !{!9315, !9316, !9317, !9318, !9319, !9320}
!9315 = !DILocalVariable(name: "regions", arg: 1, scope: !9311, file: !1069, line: 106, type: !9268)
!9316 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9311, file: !1069, line: 106, type: !164)
!9317 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !9311, file: !1069, line: 106, type: !164)
!9318 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !9311, file: !1069, line: 107, type: !119)
!9319 = !DILocalVariable(name: "i", scope: !9311, file: !1069, line: 109, type: !103)
!9320 = !DILocalVariable(name: "reg_index", scope: !9311, file: !1069, line: 110, type: !103)
!9321 = !DILocation(line: 0, scope: !9311)
!9322 = !DILocation(line: 110, column: 18, scope: !9311)
!9323 = !DILocation(line: 112, column: 16, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9325, file: !1069, line: 112, column: 2)
!9325 = distinct !DILexicalBlock(scope: !9311, file: !1069, line: 112, column: 2)
!9326 = !DILocation(line: 112, column: 2, scope: !9325)
!9327 = !DILocation(line: 113, column: 7, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9329, file: !1069, line: 113, column: 7)
!9329 = distinct !DILexicalBlock(scope: !9324, file: !1069, line: 112, column: 36)
!9330 = !DILocation(line: 113, column: 18, scope: !9328)
!9331 = !DILocation(line: 113, column: 23, scope: !9328)
!9332 = !DILocation(line: 113, column: 7, scope: !9329)
!9333 = !DILocation(line: 118, column: 23, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9329, file: !1069, line: 118, column: 7)
!9335 = !DILocation(line: 119, column: 7, scope: !9334)
!9336 = !DILocation(line: 118, column: 7, scope: !9329)
!9337 = !DILocation(line: 120, column: 4, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9339, file: !1069, line: 120, column: 4)
!9339 = distinct !DILexicalBlock(scope: !9340, file: !1069, line: 120, column: 4)
!9340 = distinct !DILexicalBlock(scope: !9341, file: !1069, line: 120, column: 4)
!9341 = distinct !DILexicalBlock(scope: !9342, file: !1069, line: 120, column: 4)
!9342 = distinct !DILexicalBlock(scope: !9334, file: !1069, line: 119, column: 45)
!9343 = !DILocation(line: 121, column: 4, scope: !9342)
!9344 = !DILocation(line: 124, column: 36, scope: !9329)
!9345 = !DILocation(line: 124, column: 15, scope: !9329)
!9346 = !DILocation(line: 126, column: 17, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9329, file: !1069, line: 126, column: 7)
!9348 = !DILocation(line: 126, column: 7, scope: !9329)
!9349 = !DILocation(line: 131, column: 12, scope: !9329)
!9350 = !DILocation(line: 132, column: 2, scope: !9329)
!9351 = !DILocation(line: 112, column: 32, scope: !9324)
!9352 = distinct !{!9352, !9326, !9353}
!9353 = !DILocation(line: 132, column: 2, scope: !9325)
!9354 = !DILocation(line: 135, column: 1, scope: !9311)
!9355 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !9296, file: !9296, line: 63, type: !9356, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9358)
!9356 = !DISubroutineType(types: !9357)
!9357 = !{!103, !9268}
!9358 = !{!9359, !9360}
!9359 = !DILocalVariable(name: "part", arg: 1, scope: !9355, file: !9296, line: 63, type: !9268)
!9360 = !DILocalVariable(name: "partition_is_valid", scope: !9355, file: !9296, line: 70, type: !103)
!9361 = !DILocation(line: 0, scope: !9355)
!9362 = !DILocation(line: 71, column: 11, scope: !9355)
!9363 = !DILocation(line: 71, column: 37, scope: !9355)
!9364 = !DILocation(line: 72, column: 3, scope: !9355)
!9365 = !DILocation(line: 71, column: 30, scope: !9355)
!9366 = !DILocation(line: 75, column: 11, scope: !9355)
!9367 = !DILocation(line: 75, column: 17, scope: !9355)
!9368 = !DILocation(line: 75, column: 38, scope: !9355)
!9369 = !DILocation(line: 77, column: 2, scope: !9355)
!9370 = distinct !DISubprogram(name: "mpu_configure_region", scope: !1069, file: !1069, line: 79, type: !9371, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9373)
!9371 = !DISubroutineType(types: !9372)
!9372 = !{!103, !2676, !9268}
!9373 = !{!9374, !9375, !9376}
!9374 = !DILocalVariable(name: "index", arg: 1, scope: !9370, file: !1069, line: 79, type: !2676)
!9375 = !DILocalVariable(name: "new_region", arg: 2, scope: !9370, file: !1069, line: 80, type: !9268)
!9376 = !DILocalVariable(name: "region_conf", scope: !9370, file: !1069, line: 82, type: !1058)
!9377 = !DILocation(line: 0, scope: !9370)
!9378 = !DILocation(line: 82, column: 2, scope: !9370)
!9379 = !DILocation(line: 82, column: 24, scope: !9370)
!9380 = !DILocation(line: 87, column: 33, scope: !9370)
!9381 = !DILocation(line: 87, column: 14, scope: !9370)
!9382 = !DILocation(line: 87, column: 19, scope: !9370)
!9383 = !DILocation(line: 91, column: 55, scope: !9370)
!9384 = !DILocation(line: 92, column: 16, scope: !9370)
!9385 = !DILocation(line: 92, column: 53, scope: !9370)
!9386 = !DILocation(line: 91, column: 2, scope: !9370)
!9387 = !DILocation(line: 95, column: 9, scope: !9370)
!9388 = !DILocation(line: 97, column: 1, scope: !9370)
!9389 = !DILocation(line: 95, column: 2, scope: !9370)
!9390 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !9296, file: !9296, line: 113, type: !9391, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9396)
!9391 = !DISubroutineType(types: !9392)
!9392 = !{null, !9393, !9394, !108, !108}
!9393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!9394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9395, size: 32)
!9395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9275)
!9396 = !{!9397, !9398, !9399, !9400}
!9397 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9390, file: !9296, line: 114, type: !9393)
!9398 = !DILocalVariable(name: "attr", arg: 2, scope: !9390, file: !9296, line: 115, type: !9394)
!9399 = !DILocalVariable(name: "base", arg: 3, scope: !9390, file: !9296, line: 115, type: !108)
!9400 = !DILocalVariable(name: "size", arg: 4, scope: !9390, file: !9296, line: 115, type: !108)
!9401 = !DILocation(line: 0, scope: !9390)
!9402 = !DILocation(line: 127, column: 23, scope: !9390)
!9403 = !DILocation(line: 127, column: 35, scope: !9390)
!9404 = !DILocation(line: 127, column: 33, scope: !9390)
!9405 = !DILocation(line: 127, column: 10, scope: !9390)
!9406 = !DILocation(line: 127, column: 15, scope: !9390)
!9407 = !DILocation(line: 129, column: 1, scope: !9390)
!9408 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !1069, file: !1069, line: 57, type: !9409, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9411)
!9409 = !DISubroutineType(types: !9410)
!9410 = !{!103, !2676, !1056}
!9411 = !{!9412, !9413}
!9412 = !DILocalVariable(name: "index", arg: 1, scope: !9408, file: !1069, line: 57, type: !2676)
!9413 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9408, file: !1069, line: 58, type: !1056)
!9414 = !DILocation(line: 0, scope: !9408)
!9415 = !DILocation(line: 61, column: 6, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9408, file: !1069, line: 61, column: 6)
!9417 = !DILocation(line: 61, column: 12, scope: !9416)
!9418 = !DILocation(line: 61, column: 6, scope: !9408)
!9419 = !DILocation(line: 64, column: 3, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9421, file: !1069, line: 64, column: 3)
!9421 = distinct !DILexicalBlock(scope: !9422, file: !1069, line: 64, column: 3)
!9422 = distinct !DILexicalBlock(scope: !9423, file: !1069, line: 64, column: 3)
!9423 = distinct !DILexicalBlock(scope: !9424, file: !1069, line: 64, column: 3)
!9424 = distinct !DILexicalBlock(scope: !9416, file: !1069, line: 61, column: 40)
!9425 = !DILocation(line: 65, column: 3, scope: !9424)
!9426 = !DILocation(line: 71, column: 2, scope: !9408)
!9427 = !DILocation(line: 73, column: 2, scope: !9408)
!9428 = !DILocation(line: 74, column: 1, scope: !9408)
!9429 = distinct !DISubprogram(name: "region_init", scope: !9296, file: !9296, line: 29, type: !9430, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9432)
!9430 = !DISubroutineType(types: !9431)
!9431 = !{null, !8461, !1056}
!9432 = !{!9433, !9434}
!9433 = !DILocalVariable(name: "index", arg: 1, scope: !9429, file: !9296, line: 29, type: !8461)
!9434 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9429, file: !9296, line: 30, type: !1056)
!9435 = !DILocation(line: 0, scope: !9429)
!9436 = !DILocation(line: 33, column: 2, scope: !9429)
!9437 = !DILocation(line: 47, column: 28, scope: !9429)
!9438 = !DILocation(line: 47, column: 33, scope: !9429)
!9439 = !DILocation(line: 48, column: 26, scope: !9429)
!9440 = !DILocation(line: 47, column: 12, scope: !9429)
!9441 = !DILocation(line: 49, column: 32, scope: !9429)
!9442 = !DILocation(line: 49, column: 37, scope: !9429)
!9443 = !DILocation(line: 49, column: 12, scope: !9429)
!9444 = !DILocation(line: 53, column: 1, scope: !9429)
!9445 = distinct !DISubprogram(name: "set_region_number", scope: !9446, file: !9446, line: 32, type: !7896, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9447)
!9446 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9447 = !{!9448}
!9448 = !DILocalVariable(name: "index", arg: 1, scope: !9445, file: !9446, line: 32, type: !108)
!9449 = !DILocation(line: 0, scope: !9445)
!9450 = !DILocation(line: 34, column: 11, scope: !9445)
!9451 = !DILocation(line: 35, column: 1, scope: !9445)
!9452 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !9296, file: !9296, line: 88, type: !9453, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9455)
!9453 = !DISubroutineType(types: !9454)
!9454 = !{!108, !108}
!9455 = !{!9456}
!9456 = !DILocalVariable(name: "size", arg: 1, scope: !9452, file: !9296, line: 88, type: !108)
!9457 = !DILocation(line: 0, scope: !9452)
!9458 = !DILocation(line: 91, column: 11, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9452, file: !9296, line: 91, column: 6)
!9460 = !DILocation(line: 91, column: 6, scope: !9452)
!9461 = !DILocation(line: 100, column: 11, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9452, file: !9296, line: 100, column: 6)
!9463 = !DILocation(line: 100, column: 6, scope: !9452)
!9464 = !DILocation(line: 104, column: 35, scope: !9452)
!9465 = !DILocation(line: 104, column: 16, scope: !9452)
!9466 = !DILocation(line: 104, column: 50, scope: !9452)
!9467 = !DILocation(line: 104, column: 72, scope: !9452)
!9468 = !DILocation(line: 104, column: 2, scope: !9452)
!9469 = !DILocation(line: 106, column: 1, scope: !9452)
!9470 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !1069, file: !1069, line: 307, type: !9471, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9473)
!9471 = !DISubroutineType(types: !9472)
!9472 = !{null, !9268, !164}
!9473 = !{!9474, !9475}
!9474 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9470, file: !1069, line: 308, type: !9268)
!9475 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9470, file: !1069, line: 308, type: !164)
!9476 = !DILocation(line: 0, scope: !9470)
!9477 = !DILocation(line: 310, column: 6, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9470, file: !1069, line: 310, column: 6)
!9479 = !DILocation(line: 311, column: 3, scope: !9478)
!9480 = !DILocation(line: 310, column: 6, scope: !9470)
!9481 = !DILocation(line: 313, column: 3, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9483, file: !1069, line: 313, column: 3)
!9483 = distinct !DILexicalBlock(scope: !9484, file: !1069, line: 313, column: 3)
!9484 = distinct !DILexicalBlock(scope: !9485, file: !1069, line: 313, column: 3)
!9485 = distinct !DILexicalBlock(scope: !9478, file: !1069, line: 311, column: 15)
!9486 = !DILocation(line: 316, column: 1, scope: !9470)
!9487 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !9296, file: !9296, line: 249, type: !9488, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9490)
!9488 = !DISubroutineType(types: !9489)
!9489 = !{!103, !9268, !164}
!9490 = !{!9491, !9492, !9493, !9494}
!9491 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9487, file: !9296, line: 250, type: !9268)
!9492 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9487, file: !9296, line: 250, type: !164)
!9493 = !DILocalVariable(name: "mpu_reg_index", scope: !9487, file: !9296, line: 252, type: !103)
!9494 = !DILocalVariable(name: "i", scope: !9495, file: !9296, line: 264, type: !103)
!9495 = distinct !DILexicalBlock(scope: !9496, file: !9296, line: 264, column: 3)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !9296, line: 261, column: 32)
!9497 = distinct !DILexicalBlock(scope: !9487, file: !9296, line: 261, column: 6)
!9498 = !DILocation(line: 0, scope: !9487)
!9499 = !DILocation(line: 252, column: 22, scope: !9487)
!9500 = !DILocation(line: 258, column: 18, scope: !9487)
!9501 = !DILocation(line: 261, column: 20, scope: !9497)
!9502 = !DILocation(line: 261, column: 6, scope: !9487)
!9503 = !DILocation(line: 0, scope: !9495)
!9504 = !DILocation(line: 265, column: 4, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9506, file: !9296, line: 264, column: 59)
!9506 = distinct !DILexicalBlock(scope: !9495, file: !9296, line: 264, column: 3)
!9507 = !DILocation(line: 264, column: 55, scope: !9506)
!9508 = !DILocation(line: 264, column: 33, scope: !9506)
!9509 = !DILocation(line: 264, column: 3, scope: !9495)
!9510 = distinct !{!9510, !9509, !9511}
!9511 = !DILocation(line: 266, column: 3, scope: !9495)
!9512 = !DILocation(line: 269, column: 2, scope: !9487)
!9513 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9514, file: !9514, line: 218, type: !7896, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9515)
!9514 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9515 = !{!9516}
!9516 = !DILocalVariable(name: "rnr", arg: 1, scope: !9513, file: !9514, line: 218, type: !108)
!9517 = !DILocation(line: 0, scope: !9513)
!9518 = !DILocation(line: 220, column: 12, scope: !9513)
!9519 = !DILocation(line: 221, column: 13, scope: !9513)
!9520 = !DILocation(line: 222, column: 1, scope: !9513)
!9521 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !1069, file: !1069, line: 326, type: !9522, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9524)
!9522 = !DISubroutineType(types: !9523)
!9523 = !{!103}
!9524 = !{!9525}
!9525 = !DILocalVariable(name: "r_index", scope: !9521, file: !1069, line: 328, type: !108)
!9526 = !DILocation(line: 330, column: 17, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9521, file: !1069, line: 330, column: 6)
!9528 = !DILocation(line: 330, column: 29, scope: !9527)
!9529 = !DILocation(line: 330, column: 6, scope: !9521)
!9530 = !DILocation(line: 337, column: 3, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9532, file: !1069, line: 337, column: 3)
!9532 = distinct !DILexicalBlock(scope: !9533, file: !1069, line: 337, column: 3)
!9533 = distinct !DILexicalBlock(scope: !9534, file: !1069, line: 337, column: 3)
!9534 = distinct !DILexicalBlock(scope: !9527, file: !1069, line: 330, column: 50)
!9535 = !DILocation(line: 347, column: 2, scope: !9521)
!9536 = !DILocation(line: 0, scope: !9521)
!9537 = !DILocation(line: 364, column: 29, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9539, file: !1069, line: 364, column: 2)
!9539 = distinct !DILexicalBlock(scope: !9521, file: !1069, line: 364, column: 2)
!9540 = !DILocation(line: 364, column: 2, scope: !9539)
!9541 = !DILocation(line: 365, column: 25, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9538, file: !1069, line: 364, column: 66)
!9543 = !DILocation(line: 365, column: 3, scope: !9542)
!9544 = !DILocation(line: 364, column: 62, scope: !9538)
!9545 = distinct !{!9545, !9540, !9546}
!9546 = !DILocation(line: 366, column: 2, scope: !9539)
!9547 = !DILocation(line: 369, column: 23, scope: !9521)
!9548 = !DILocation(line: 369, column: 21, scope: !9521)
!9549 = !DILocation(line: 372, column: 2, scope: !9521)
!9550 = !DILocation(line: 433, column: 2, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9552, file: !1069, line: 433, column: 2)
!9552 = distinct !DILexicalBlock(scope: !9521, file: !1069, line: 433, column: 2)
!9553 = !DILocation(line: 433, column: 2, scope: !9552)
!9554 = !DILocation(line: 433, column: 2, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9551, file: !1069, line: 433, column: 2)
!9556 = !DILocation(line: 444, column: 1, scope: !9521)
!9557 = distinct !DISubprogram(name: "strcpy", scope: !9558, file: !9558, line: 20, type: !9559, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9563)
!9558 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9559 = !DISubroutineType(types: !9560)
!9560 = !{!157, !9561, !9562}
!9561 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !157)
!9562 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !336)
!9563 = !{!9564, !9565, !9566}
!9564 = !DILocalVariable(name: "d", arg: 1, scope: !9557, file: !9558, line: 20, type: !9561)
!9565 = !DILocalVariable(name: "s", arg: 2, scope: !9557, file: !9558, line: 20, type: !9562)
!9566 = !DILocalVariable(name: "dest", scope: !9557, file: !9558, line: 22, type: !157)
!9567 = !DILocation(line: 0, scope: !9557)
!9568 = !DILocation(line: 24, column: 9, scope: !9557)
!9569 = !DILocation(line: 24, column: 12, scope: !9557)
!9570 = !DILocation(line: 24, column: 2, scope: !9557)
!9571 = !DILocation(line: 25, column: 6, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9557, file: !9558, line: 24, column: 21)
!9573 = !DILocation(line: 26, column: 4, scope: !9572)
!9574 = !DILocation(line: 27, column: 4, scope: !9572)
!9575 = distinct !{!9575, !9570, !9576}
!9576 = !DILocation(line: 28, column: 2, scope: !9557)
!9577 = !DILocation(line: 30, column: 5, scope: !9557)
!9578 = !DILocation(line: 32, column: 2, scope: !9557)
!9579 = distinct !DISubprogram(name: "strncpy", scope: !9558, file: !9558, line: 42, type: !9580, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9582)
!9580 = !DISubroutineType(types: !9581)
!9581 = !{!157, !9561, !9562, !153}
!9582 = !{!9583, !9584, !9585, !9586}
!9583 = !DILocalVariable(name: "d", arg: 1, scope: !9579, file: !9558, line: 42, type: !9561)
!9584 = !DILocalVariable(name: "s", arg: 2, scope: !9579, file: !9558, line: 42, type: !9562)
!9585 = !DILocalVariable(name: "n", arg: 3, scope: !9579, file: !9558, line: 42, type: !153)
!9586 = !DILocalVariable(name: "dest", scope: !9579, file: !9558, line: 44, type: !157)
!9587 = !DILocation(line: 0, scope: !9579)
!9588 = !DILocation(line: 46, column: 12, scope: !9579)
!9589 = !DILocation(line: 46, column: 17, scope: !9579)
!9590 = !DILocation(line: 46, column: 20, scope: !9579)
!9591 = !DILocation(line: 46, column: 23, scope: !9579)
!9592 = !DILocation(line: 46, column: 2, scope: !9579)
!9593 = !DILocation(line: 47, column: 6, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9579, file: !9558, line: 46, column: 32)
!9595 = !DILocation(line: 48, column: 4, scope: !9594)
!9596 = !DILocation(line: 49, column: 4, scope: !9594)
!9597 = !DILocation(line: 50, column: 4, scope: !9594)
!9598 = distinct !{!9598, !9592, !9599}
!9599 = !DILocation(line: 51, column: 2, scope: !9579)
!9600 = !DILocation(line: 54, column: 6, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9579, file: !9558, line: 53, column: 16)
!9602 = !DILocation(line: 55, column: 4, scope: !9601)
!9603 = !DILocation(line: 56, column: 4, scope: !9601)
!9604 = !DILocation(line: 53, column: 11, scope: !9579)
!9605 = !DILocation(line: 53, column: 2, scope: !9579)
!9606 = distinct !{!9606, !9605, !9607}
!9607 = !DILocation(line: 57, column: 2, scope: !9579)
!9608 = !DILocation(line: 59, column: 2, scope: !9579)
!9609 = distinct !DISubprogram(name: "strchr", scope: !9558, file: !9558, line: 69, type: !9610, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9612)
!9610 = !DISubroutineType(types: !9611)
!9611 = !{!157, !336, !103}
!9612 = !{!9613, !9614, !9615}
!9613 = !DILocalVariable(name: "s", arg: 1, scope: !9609, file: !9558, line: 69, type: !336)
!9614 = !DILocalVariable(name: "c", arg: 2, scope: !9609, file: !9558, line: 69, type: !103)
!9615 = !DILocalVariable(name: "tmp", scope: !9609, file: !9558, line: 71, type: !158)
!9616 = !DILocation(line: 0, scope: !9609)
!9617 = !DILocation(line: 73, column: 2, scope: !9609)
!9618 = !DILocation(line: 73, column: 10, scope: !9609)
!9619 = !DILocation(line: 73, column: 13, scope: !9609)
!9620 = !DILocation(line: 73, column: 21, scope: !9609)
!9621 = !DILocation(line: 74, column: 4, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9609, file: !9558, line: 73, column: 38)
!9623 = distinct !{!9623, !9617, !9624}
!9624 = !DILocation(line: 75, column: 2, scope: !9609)
!9625 = !DILocation(line: 77, column: 9, scope: !9609)
!9626 = !DILocation(line: 77, column: 2, scope: !9609)
!9627 = distinct !DISubprogram(name: "strrchr", scope: !9558, file: !9558, line: 87, type: !9610, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9628)
!9628 = !{!9629, !9630, !9631}
!9629 = !DILocalVariable(name: "s", arg: 1, scope: !9627, file: !9558, line: 87, type: !336)
!9630 = !DILocalVariable(name: "c", arg: 2, scope: !9627, file: !9558, line: 87, type: !103)
!9631 = !DILocalVariable(name: "match", scope: !9627, file: !9558, line: 89, type: !157)
!9632 = !DILocation(line: 0, scope: !9627)
!9633 = !DILocation(line: 91, column: 2, scope: !9627)
!9634 = !DILocation(line: 92, column: 7, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9636, file: !9558, line: 92, column: 7)
!9636 = distinct !DILexicalBlock(scope: !9627, file: !9558, line: 91, column: 5)
!9637 = !DILocation(line: 92, column: 10, scope: !9635)
!9638 = !DILocation(line: 92, column: 7, scope: !9636)
!9639 = !DILocation(line: 95, column: 13, scope: !9627)
!9640 = !DILocation(line: 95, column: 2, scope: !9636)
!9641 = distinct !{!9641, !9633, !9642}
!9642 = !DILocation(line: 95, column: 15, scope: !9627)
!9643 = !DILocation(line: 97, column: 2, scope: !9627)
!9644 = distinct !DISubprogram(name: "strlen", scope: !9558, file: !9558, line: 107, type: !9645, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9647)
!9645 = !DISubroutineType(types: !9646)
!9646 = !{!153, !336}
!9647 = !{!9648, !9649}
!9648 = !DILocalVariable(name: "s", arg: 1, scope: !9644, file: !9558, line: 107, type: !336)
!9649 = !DILocalVariable(name: "n", scope: !9644, file: !9558, line: 109, type: !153)
!9650 = !DILocation(line: 0, scope: !9644)
!9651 = !DILocation(line: 111, column: 9, scope: !9644)
!9652 = !DILocation(line: 111, column: 12, scope: !9644)
!9653 = !DILocation(line: 111, column: 2, scope: !9644)
!9654 = !DILocation(line: 112, column: 4, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9644, file: !9558, line: 111, column: 21)
!9656 = !DILocation(line: 113, column: 4, scope: !9655)
!9657 = distinct !{!9657, !9653, !9658}
!9658 = !DILocation(line: 114, column: 2, scope: !9644)
!9659 = !DILocation(line: 116, column: 2, scope: !9644)
!9660 = distinct !DISubprogram(name: "strnlen", scope: !9558, file: !9558, line: 126, type: !9661, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9663)
!9661 = !DISubroutineType(types: !9662)
!9662 = !{!153, !336, !153}
!9663 = !{!9664, !9665, !9666}
!9664 = !DILocalVariable(name: "s", arg: 1, scope: !9660, file: !9558, line: 126, type: !336)
!9665 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9660, file: !9558, line: 126, type: !153)
!9666 = !DILocalVariable(name: "n", scope: !9660, file: !9558, line: 128, type: !153)
!9667 = !DILocation(line: 0, scope: !9660)
!9668 = !DILocation(line: 130, column: 9, scope: !9660)
!9669 = !DILocation(line: 130, column: 12, scope: !9660)
!9670 = !DILocation(line: 130, column: 20, scope: !9660)
!9671 = !DILocation(line: 130, column: 2, scope: !9660)
!9672 = !DILocation(line: 131, column: 4, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9660, file: !9558, line: 130, column: 35)
!9674 = !DILocation(line: 132, column: 4, scope: !9673)
!9675 = distinct !{!9675, !9671, !9676}
!9676 = !DILocation(line: 133, column: 2, scope: !9660)
!9677 = !DILocation(line: 135, column: 2, scope: !9660)
!9678 = distinct !DISubprogram(name: "strcmp", scope: !9558, file: !9558, line: 145, type: !9679, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9681)
!9679 = !DISubroutineType(types: !9680)
!9680 = !{!103, !336, !336}
!9681 = !{!9682, !9683}
!9682 = !DILocalVariable(name: "s1", arg: 1, scope: !9678, file: !9558, line: 145, type: !336)
!9683 = !DILocalVariable(name: "s2", arg: 2, scope: !9678, file: !9558, line: 145, type: !336)
!9684 = !DILocation(line: 0, scope: !9678)
!9685 = !DILocation(line: 147, column: 10, scope: !9678)
!9686 = !DILocation(line: 147, column: 17, scope: !9678)
!9687 = !DILocation(line: 147, column: 14, scope: !9678)
!9688 = !DILocation(line: 147, column: 22, scope: !9678)
!9689 = !DILocation(line: 148, column: 5, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9678, file: !9558, line: 147, column: 40)
!9691 = !DILocation(line: 149, column: 5, scope: !9690)
!9692 = distinct !{!9692, !9693, !9694}
!9693 = !DILocation(line: 147, column: 2, scope: !9678)
!9694 = !DILocation(line: 150, column: 2, scope: !9678)
!9695 = !DILocation(line: 152, column: 9, scope: !9678)
!9696 = !DILocation(line: 152, column: 15, scope: !9678)
!9697 = !DILocation(line: 152, column: 13, scope: !9678)
!9698 = !DILocation(line: 152, column: 2, scope: !9678)
!9699 = distinct !DISubprogram(name: "strncmp", scope: !9558, file: !9558, line: 162, type: !9700, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9702)
!9700 = !DISubroutineType(types: !9701)
!9701 = !{!103, !336, !336, !153}
!9702 = !{!9703, !9704, !9705}
!9703 = !DILocalVariable(name: "s1", arg: 1, scope: !9699, file: !9558, line: 162, type: !336)
!9704 = !DILocalVariable(name: "s2", arg: 2, scope: !9699, file: !9558, line: 162, type: !336)
!9705 = !DILocalVariable(name: "n", arg: 3, scope: !9699, file: !9558, line: 162, type: !153)
!9706 = !DILocation(line: 0, scope: !9699)
!9707 = !DILocation(line: 164, column: 17, scope: !9699)
!9708 = !DILocation(line: 164, column: 21, scope: !9699)
!9709 = !DILocation(line: 164, column: 28, scope: !9699)
!9710 = !DILocation(line: 164, column: 25, scope: !9699)
!9711 = !DILocation(line: 164, column: 33, scope: !9699)
!9712 = !DILocation(line: 165, column: 5, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9699, file: !9558, line: 164, column: 51)
!9714 = !DILocation(line: 166, column: 5, scope: !9713)
!9715 = !DILocation(line: 167, column: 4, scope: !9713)
!9716 = distinct !{!9716, !9717, !9718}
!9717 = !DILocation(line: 164, column: 2, scope: !9699)
!9718 = !DILocation(line: 168, column: 2, scope: !9699)
!9719 = !DILocation(line: 170, column: 25, scope: !9699)
!9720 = !DILocation(line: 170, column: 31, scope: !9699)
!9721 = !DILocation(line: 170, column: 29, scope: !9699)
!9722 = !DILocation(line: 170, column: 9, scope: !9699)
!9723 = !DILocation(line: 170, column: 2, scope: !9699)
!9724 = distinct !DISubprogram(name: "strtok_r", scope: !9558, file: !9558, line: 180, type: !9725, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9727)
!9725 = !DISubroutineType(types: !9726)
!9726 = !{!157, !157, !336, !782}
!9727 = !{!9728, !9729, !9730, !9731, !9732}
!9728 = !DILocalVariable(name: "str", arg: 1, scope: !9724, file: !9558, line: 180, type: !157)
!9729 = !DILocalVariable(name: "sep", arg: 2, scope: !9724, file: !9558, line: 180, type: !336)
!9730 = !DILocalVariable(name: "state", arg: 3, scope: !9724, file: !9558, line: 180, type: !782)
!9731 = !DILocalVariable(name: "start", scope: !9724, file: !9558, line: 182, type: !157)
!9732 = !DILocalVariable(name: "end", scope: !9724, file: !9558, line: 182, type: !157)
!9733 = !DILocation(line: 0, scope: !9724)
!9734 = !DILocation(line: 184, column: 10, scope: !9724)
!9735 = !DILocation(line: 184, column: 22, scope: !9724)
!9736 = !DILocation(line: 187, column: 9, scope: !9724)
!9737 = !DILocation(line: 187, column: 16, scope: !9724)
!9738 = !DILocation(line: 187, column: 19, scope: !9724)
!9739 = !DILocation(line: 187, column: 2, scope: !9724)
!9740 = !DILocation(line: 188, column: 8, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9724, file: !9558, line: 187, column: 40)
!9742 = distinct !{!9742, !9739, !9743}
!9743 = !DILocation(line: 189, column: 2, scope: !9724)
!9744 = !DILocation(line: 198, column: 9, scope: !9724)
!9745 = !DILocation(line: 198, column: 18, scope: !9724)
!9746 = !DILocation(line: 198, column: 17, scope: !9724)
!9747 = !DILocation(line: 198, column: 2, scope: !9724)
!9748 = !DILocation(line: 199, column: 6, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9724, file: !9558, line: 198, column: 37)
!9750 = !DILocation(line: 198, column: 14, scope: !9724)
!9751 = distinct !{!9751, !9747, !9752}
!9752 = !DILocation(line: 200, column: 2, scope: !9724)
!9753 = !DILocation(line: 203, column: 8, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9755, file: !9558, line: 202, column: 20)
!9755 = distinct !DILexicalBlock(scope: !9724, file: !9558, line: 202, column: 6)
!9756 = !DILocation(line: 204, column: 16, scope: !9754)
!9757 = !DILocation(line: 205, column: 2, scope: !9754)
!9758 = !DILocation(line: 210, column: 1, scope: !9724)
!9759 = distinct !DISubprogram(name: "strcat", scope: !9558, file: !9558, line: 212, type: !9559, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9760)
!9760 = !{!9761, !9762}
!9761 = !DILocalVariable(name: "dest", arg: 1, scope: !9759, file: !9558, line: 212, type: !9561)
!9762 = !DILocalVariable(name: "src", arg: 2, scope: !9759, file: !9558, line: 212, type: !9562)
!9763 = !DILocation(line: 0, scope: !9759)
!9764 = !DILocation(line: 214, column: 16, scope: !9759)
!9765 = !DILocation(line: 214, column: 14, scope: !9759)
!9766 = !DILocation(line: 214, column: 2, scope: !9759)
!9767 = !DILocation(line: 215, column: 2, scope: !9759)
!9768 = distinct !DISubprogram(name: "strncat", scope: !9558, file: !9558, line: 218, type: !9580, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9769)
!9769 = !{!9770, !9771, !9772, !9773, !9774}
!9770 = !DILocalVariable(name: "dest", arg: 1, scope: !9768, file: !9558, line: 218, type: !9561)
!9771 = !DILocalVariable(name: "src", arg: 2, scope: !9768, file: !9558, line: 218, type: !9562)
!9772 = !DILocalVariable(name: "n", arg: 3, scope: !9768, file: !9558, line: 219, type: !153)
!9773 = !DILocalVariable(name: "orig_dest", scope: !9768, file: !9558, line: 221, type: !157)
!9774 = !DILocalVariable(name: "len", scope: !9768, file: !9558, line: 222, type: !153)
!9775 = !DILocation(line: 0, scope: !9768)
!9776 = !DILocation(line: 222, column: 15, scope: !9768)
!9777 = !DILocation(line: 224, column: 7, scope: !9768)
!9778 = !DILocation(line: 225, column: 14, scope: !9768)
!9779 = !DILocation(line: 225, column: 19, scope: !9768)
!9780 = !DILocation(line: 225, column: 11, scope: !9768)
!9781 = !DILocation(line: 225, column: 23, scope: !9768)
!9782 = !DILocation(line: 225, column: 28, scope: !9768)
!9783 = !DILocation(line: 225, column: 2, scope: !9768)
!9784 = !DILocation(line: 226, column: 17, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9768, file: !9558, line: 225, column: 38)
!9786 = !DILocation(line: 226, column: 8, scope: !9785)
!9787 = !DILocation(line: 226, column: 11, scope: !9785)
!9788 = distinct !{!9788, !9783, !9789}
!9789 = !DILocation(line: 227, column: 2, scope: !9768)
!9790 = !DILocation(line: 228, column: 8, scope: !9768)
!9791 = !DILocation(line: 230, column: 2, scope: !9768)
!9792 = distinct !DISubprogram(name: "memcmp", scope: !9558, file: !9558, line: 239, type: !9793, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9795)
!9793 = !DISubroutineType(types: !9794)
!9794 = !{!103, !13, !13, !153}
!9795 = !{!9796, !9797, !9798, !9799, !9800}
!9796 = !DILocalVariable(name: "m1", arg: 1, scope: !9792, file: !9558, line: 239, type: !13)
!9797 = !DILocalVariable(name: "m2", arg: 2, scope: !9792, file: !9558, line: 239, type: !13)
!9798 = !DILocalVariable(name: "n", arg: 3, scope: !9792, file: !9558, line: 239, type: !153)
!9799 = !DILocalVariable(name: "c1", scope: !9792, file: !9558, line: 241, type: !336)
!9800 = !DILocalVariable(name: "c2", scope: !9792, file: !9558, line: 242, type: !336)
!9801 = !DILocation(line: 0, scope: !9792)
!9802 = !DILocation(line: 244, column: 7, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9792, file: !9558, line: 244, column: 6)
!9804 = !DILocation(line: 244, column: 6, scope: !9792)
!9805 = !DILocation(line: 248, column: 10, scope: !9792)
!9806 = !DILocation(line: 248, column: 14, scope: !9792)
!9807 = !DILocation(line: 248, column: 19, scope: !9792)
!9808 = !DILocation(line: 248, column: 2, scope: !9792)
!9809 = !DILocation(line: 248, column: 23, scope: !9792)
!9810 = !DILocation(line: 248, column: 30, scope: !9792)
!9811 = !DILocation(line: 248, column: 27, scope: !9792)
!9812 = !DILocation(line: 249, column: 5, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9792, file: !9558, line: 248, column: 36)
!9814 = !DILocation(line: 250, column: 5, scope: !9813)
!9815 = distinct !{!9815, !9808, !9816}
!9816 = !DILocation(line: 251, column: 2, scope: !9792)
!9817 = !DILocation(line: 253, column: 9, scope: !9792)
!9818 = !DILocation(line: 253, column: 15, scope: !9792)
!9819 = !DILocation(line: 253, column: 13, scope: !9792)
!9820 = !DILocation(line: 253, column: 2, scope: !9792)
!9821 = !DILocation(line: 254, column: 1, scope: !9792)
!9822 = distinct !DISubprogram(name: "memmove", scope: !9558, file: !9558, line: 263, type: !9823, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9825)
!9823 = !DISubroutineType(types: !9824)
!9824 = !{!102, !102, !13, !153}
!9825 = !{!9826, !9827, !9828, !9829, !9830}
!9826 = !DILocalVariable(name: "d", arg: 1, scope: !9822, file: !9558, line: 263, type: !102)
!9827 = !DILocalVariable(name: "s", arg: 2, scope: !9822, file: !9558, line: 263, type: !13)
!9828 = !DILocalVariable(name: "n", arg: 3, scope: !9822, file: !9558, line: 263, type: !153)
!9829 = !DILocalVariable(name: "dest", scope: !9822, file: !9558, line: 265, type: !157)
!9830 = !DILocalVariable(name: "src", scope: !9822, file: !9558, line: 266, type: !336)
!9831 = !DILocation(line: 0, scope: !9822)
!9832 = !DILocation(line: 268, column: 21, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9822, file: !9558, line: 268, column: 6)
!9834 = !DILocation(line: 268, column: 28, scope: !9833)
!9835 = !DILocation(line: 268, column: 6, scope: !9822)
!9836 = !DILocation(line: 280, column: 12, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9833, file: !9558, line: 278, column: 9)
!9838 = !DILocation(line: 280, column: 3, scope: !9837)
!9839 = !DILocation(line: 275, column: 5, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9841, file: !9558, line: 274, column: 17)
!9841 = distinct !DILexicalBlock(scope: !9833, file: !9558, line: 268, column: 33)
!9842 = !DILocation(line: 276, column: 14, scope: !9840)
!9843 = !DILocation(line: 276, column: 4, scope: !9840)
!9844 = !DILocation(line: 276, column: 12, scope: !9840)
!9845 = !DILocation(line: 274, column: 12, scope: !9841)
!9846 = !DILocation(line: 274, column: 3, scope: !9841)
!9847 = distinct !{!9847, !9846, !9848}
!9848 = !DILocation(line: 277, column: 3, scope: !9841)
!9849 = !DILocation(line: 281, column: 12, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9837, file: !9558, line: 280, column: 17)
!9851 = !DILocation(line: 281, column: 10, scope: !9850)
!9852 = !DILocation(line: 282, column: 8, scope: !9850)
!9853 = !DILocation(line: 283, column: 7, scope: !9850)
!9854 = !DILocation(line: 284, column: 5, scope: !9850)
!9855 = distinct !{!9855, !9838, !9856}
!9856 = !DILocation(line: 285, column: 3, scope: !9837)
!9857 = !DILocation(line: 288, column: 2, scope: !9822)
!9858 = distinct !DISubprogram(name: "memcpy", scope: !9558, file: !9558, line: 298, type: !9859, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9863)
!9859 = !DISubroutineType(types: !9860)
!9860 = !{!102, !9861, !9862, !153}
!9861 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!9862 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9863 = !{!9864, !9865, !9866, !9867, !9868}
!9864 = !DILocalVariable(name: "d", arg: 1, scope: !9858, file: !9558, line: 298, type: !9861)
!9865 = !DILocalVariable(name: "s", arg: 2, scope: !9858, file: !9558, line: 298, type: !9862)
!9866 = !DILocalVariable(name: "n", arg: 3, scope: !9858, file: !9558, line: 298, type: !153)
!9867 = !DILocalVariable(name: "d_byte", scope: !9858, file: !9558, line: 302, type: !1898)
!9868 = !DILocalVariable(name: "s_byte", scope: !9858, file: !9558, line: 303, type: !3792)
!9869 = !DILocation(line: 0, scope: !9858)
!9870 = !DILocation(line: 337, column: 11, scope: !9858)
!9871 = !DILocation(line: 337, column: 2, scope: !9858)
!9872 = !DILocation(line: 338, column: 25, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9858, file: !9558, line: 337, column: 16)
!9874 = !DILocation(line: 338, column: 17, scope: !9873)
!9875 = !DILocation(line: 338, column: 11, scope: !9873)
!9876 = !DILocation(line: 338, column: 15, scope: !9873)
!9877 = !DILocation(line: 339, column: 4, scope: !9873)
!9878 = distinct !{!9878, !9871, !9879}
!9879 = !DILocation(line: 340, column: 2, scope: !9858)
!9880 = !DILocation(line: 342, column: 2, scope: !9858)
!9881 = distinct !DISubprogram(name: "memset", scope: !9558, file: !9558, line: 352, type: !9882, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9884)
!9882 = !DISubroutineType(types: !9883)
!9883 = !{!102, !102, !103, !153}
!9884 = !{!9885, !9886, !9887, !9888, !9889}
!9885 = !DILocalVariable(name: "buf", arg: 1, scope: !9881, file: !9558, line: 352, type: !102)
!9886 = !DILocalVariable(name: "c", arg: 2, scope: !9881, file: !9558, line: 352, type: !103)
!9887 = !DILocalVariable(name: "n", arg: 3, scope: !9881, file: !9558, line: 352, type: !153)
!9888 = !DILocalVariable(name: "d_byte", scope: !9881, file: !9558, line: 356, type: !1898)
!9889 = !DILocalVariable(name: "c_byte", scope: !9881, file: !9558, line: 357, type: !165)
!9890 = !DILocation(line: 0, scope: !9881)
!9891 = !DILocation(line: 357, column: 25, scope: !9881)
!9892 = !DILocation(line: 389, column: 11, scope: !9881)
!9893 = !DILocation(line: 389, column: 2, scope: !9881)
!9894 = !DILocation(line: 390, column: 11, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9881, file: !9558, line: 389, column: 16)
!9896 = !DILocation(line: 390, column: 15, scope: !9895)
!9897 = !DILocation(line: 391, column: 4, scope: !9895)
!9898 = distinct !{!9898, !9893, !9899}
!9899 = !DILocation(line: 392, column: 2, scope: !9881)
!9900 = !DILocation(line: 394, column: 2, scope: !9881)
!9901 = distinct !DISubprogram(name: "memchr", scope: !9558, file: !9558, line: 404, type: !9902, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3789, retainedNodes: !9904)
!9902 = !DISubroutineType(types: !9903)
!9903 = !{!102, !13, !103, !153}
!9904 = !{!9905, !9906, !9907, !9908}
!9905 = !DILocalVariable(name: "s", arg: 1, scope: !9901, file: !9558, line: 404, type: !13)
!9906 = !DILocalVariable(name: "c", arg: 2, scope: !9901, file: !9558, line: 404, type: !103)
!9907 = !DILocalVariable(name: "n", arg: 3, scope: !9901, file: !9558, line: 404, type: !153)
!9908 = !DILocalVariable(name: "p", scope: !9909, file: !9558, line: 407, type: !3792)
!9909 = distinct !DILexicalBlock(scope: !9910, file: !9558, line: 406, column: 14)
!9910 = distinct !DILexicalBlock(scope: !9901, file: !9558, line: 406, column: 6)
!9911 = !DILocation(line: 0, scope: !9901)
!9912 = !DILocation(line: 406, column: 8, scope: !9910)
!9913 = !DILocation(line: 406, column: 6, scope: !9901)
!9914 = !DILocation(line: 409, column: 3, scope: !9909)
!9915 = !DILocation(line: 0, scope: !9909)
!9916 = !DILocation(line: 410, column: 8, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9918, file: !9558, line: 410, column: 8)
!9918 = distinct !DILexicalBlock(scope: !9909, file: !9558, line: 409, column: 6)
!9919 = !DILocation(line: 410, column: 13, scope: !9917)
!9920 = !DILocation(line: 410, column: 8, scope: !9918)
!9921 = distinct !{!9921, !9914, !9922}
!9922 = !DILocation(line: 414, column: 20, scope: !9909)
!9923 = !DILocation(line: 417, column: 2, scope: !9901)
!9924 = !DILocation(line: 418, column: 1, scope: !9901)
!9925 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !1079, file: !1079, line: 23, type: !5329, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1072, retainedNodes: !9926)
!9926 = !{!9927}
!9927 = !DILocalVariable(name: "hook", arg: 1, scope: !9925, file: !1079, line: 23, type: !799)
!9928 = !DILocation(line: 0, scope: !9925)
!9929 = !DILocation(line: 25, column: 15, scope: !9925)
!9930 = !DILocation(line: 26, column: 1, scope: !9925)
!9931 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !1079, file: !1079, line: 14, type: !800, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1072, retainedNodes: !9932)
!9932 = !{!9933}
!9933 = !DILocalVariable(name: "c", arg: 1, scope: !9931, file: !1079, line: 14, type: !103)
!9934 = !DILocation(line: 0, scope: !9931)
!9935 = !DILocation(line: 18, column: 2, scope: !9931)
!9936 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !1079, file: !1079, line: 28, type: !9937, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1072, retainedNodes: !9939)
!9937 = !DISubroutineType(types: !9938)
!9938 = !{!103, !103, !1075}
!9939 = !{!9940, !9941}
!9940 = !DILocalVariable(name: "c", arg: 1, scope: !9936, file: !1079, line: 28, type: !103)
!9941 = !DILocalVariable(name: "stream", arg: 2, scope: !9936, file: !1079, line: 28, type: !1075)
!9942 = !DILocation(line: 0, scope: !9936)
!9943 = !DILocation(line: 30, column: 27, scope: !9936)
!9944 = !DILocation(line: 30, column: 50, scope: !9936)
!9945 = !DILocation(line: 30, column: 9, scope: !9936)
!9946 = !DILocation(line: 30, column: 2, scope: !9936)
!9947 = distinct !DISubprogram(name: "fputc", scope: !1079, file: !1079, line: 41, type: !9937, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1072, retainedNodes: !9948)
!9948 = !{!9949, !9950}
!9949 = !DILocalVariable(name: "c", arg: 1, scope: !9947, file: !1079, line: 41, type: !103)
!9950 = !DILocalVariable(name: "stream", arg: 2, scope: !9947, file: !1079, line: 41, type: !1075)
!9951 = !DILocation(line: 0, scope: !9947)
!9952 = !DILocation(line: 43, column: 9, scope: !9947)
!9953 = !DILocation(line: 43, column: 2, scope: !9947)
!9954 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9955, file: !9955, line: 72, type: !9937, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1072, retainedNodes: !9956)
!9955 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!9956 = !{!9957, !9958}
!9957 = !DILocalVariable(name: "c", arg: 1, scope: !9954, file: !9955, line: 72, type: !103)
!9958 = !DILocalVariable(name: "stream", arg: 2, scope: !9954, file: !9955, line: 72, type: !1075)
!9959 = !DILocation(line: 0, scope: !9954)
!9960 = !DILocation(line: 81, column: 2, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9954, file: !9955, line: 81, column: 2)
!9962 = !{i64 2152286282}
!9963 = !DILocation(line: 82, column: 9, scope: !9954)
!9964 = !DILocation(line: 82, column: 2, scope: !9954)
!9965 = distinct !DISubprogram(name: "fputs", scope: !1079, file: !1079, line: 46, type: !9966, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1072, retainedNodes: !9969)
!9966 = !DISubroutineType(types: !9967)
!9967 = !{!103, !9562, !9968}
!9968 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1075)
!9969 = !{!9970, !9971, !9972, !9973}
!9970 = !DILocalVariable(name: "s", arg: 1, scope: !9965, file: !1079, line: 46, type: !9562)
!9971 = !DILocalVariable(name: "stream", arg: 2, scope: !9965, file: !1079, line: 46, type: !9968)
!9972 = !DILocalVariable(name: "len", scope: !9965, file: !1079, line: 48, type: !103)
!9973 = !DILocalVariable(name: "ret", scope: !9965, file: !1079, line: 49, type: !103)
!9974 = !DILocation(line: 0, scope: !9965)
!9975 = !DILocation(line: 48, column: 12, scope: !9965)
!9976 = !DILocation(line: 51, column: 8, scope: !9965)
!9977 = !DILocation(line: 53, column: 13, scope: !9965)
!9978 = !DILocation(line: 53, column: 9, scope: !9965)
!9979 = !DILocation(line: 53, column: 2, scope: !9965)
!9980 = distinct !DISubprogram(name: "fwrite", scope: !1079, file: !1079, line: 99, type: !9981, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1072, retainedNodes: !9983)
!9981 = !DISubroutineType(types: !9982)
!9982 = !{!153, !9862, !153, !153, !9968}
!9983 = !{!9984, !9985, !9986, !9987}
!9984 = !DILocalVariable(name: "ptr", arg: 1, scope: !9980, file: !1079, line: 99, type: !9862)
!9985 = !DILocalVariable(name: "size", arg: 2, scope: !9980, file: !1079, line: 99, type: !153)
!9986 = !DILocalVariable(name: "nitems", arg: 3, scope: !9980, file: !1079, line: 99, type: !153)
!9987 = !DILocalVariable(name: "stream", arg: 4, scope: !9980, file: !1079, line: 100, type: !9968)
!9988 = !DILocation(line: 0, scope: !9980)
!9989 = !DILocation(line: 102, column: 9, scope: !9980)
!9990 = !DILocation(line: 102, column: 2, scope: !9980)
!9991 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9955, file: !9955, line: 96, type: !9981, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1072, retainedNodes: !9992)
!9992 = !{!9993, !9994, !9995, !9996}
!9993 = !DILocalVariable(name: "ptr", arg: 1, scope: !9991, file: !9955, line: 96, type: !9862)
!9994 = !DILocalVariable(name: "size", arg: 2, scope: !9991, file: !9955, line: 96, type: !153)
!9995 = !DILocalVariable(name: "nitems", arg: 3, scope: !9991, file: !9955, line: 96, type: !153)
!9996 = !DILocalVariable(name: "stream", arg: 4, scope: !9991, file: !9955, line: 96, type: !9968)
!9997 = !DILocation(line: 0, scope: !9991)
!9998 = !DILocation(line: 107, column: 2, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9991, file: !9955, line: 107, column: 2)
!10000 = !{i64 2152286386}
!10001 = !DILocation(line: 108, column: 9, scope: !9991)
!10002 = !DILocation(line: 108, column: 2, scope: !9991)
!10003 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !1079, file: !1079, line: 56, type: !9981, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1072, retainedNodes: !10004)
!10004 = !{!10005, !10006, !10007, !10008, !10009, !10010, !10011, !10012}
!10005 = !DILocalVariable(name: "ptr", arg: 1, scope: !10003, file: !1079, line: 56, type: !9862)
!10006 = !DILocalVariable(name: "size", arg: 2, scope: !10003, file: !1079, line: 56, type: !153)
!10007 = !DILocalVariable(name: "nitems", arg: 3, scope: !10003, file: !1079, line: 57, type: !153)
!10008 = !DILocalVariable(name: "stream", arg: 4, scope: !10003, file: !1079, line: 57, type: !9968)
!10009 = !DILocalVariable(name: "i", scope: !10003, file: !1079, line: 59, type: !153)
!10010 = !DILocalVariable(name: "j", scope: !10003, file: !1079, line: 60, type: !153)
!10011 = !DILocalVariable(name: "p", scope: !10003, file: !1079, line: 61, type: !3792)
!10012 = !DILabel(scope: !10003, name: "done", file: !1079, line: 82)
!10013 = !DILocation(line: 0, scope: !10003)
!10014 = !DILocation(line: 63, column: 14, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10003, file: !1079, line: 63, column: 6)
!10016 = !DILocation(line: 63, column: 24, scope: !10015)
!10017 = !DILocation(line: 72, column: 3, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10003, file: !1079, line: 70, column: 5)
!10019 = !DILocation(line: 0, scope: !10018)
!10020 = !DILocation(line: 73, column: 8, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10022, file: !1079, line: 73, column: 8)
!10022 = distinct !DILexicalBlock(scope: !10018, file: !1079, line: 72, column: 6)
!10023 = !DILocation(line: 73, column: 29, scope: !10021)
!10024 = !DILocation(line: 73, column: 27, scope: !10021)
!10025 = !DILocation(line: 73, column: 21, scope: !10021)
!10026 = !DILocation(line: 73, column: 33, scope: !10021)
!10027 = !DILocation(line: 73, column: 8, scope: !10022)
!10028 = !DILocation(line: 76, column: 5, scope: !10022)
!10029 = !DILocation(line: 77, column: 14, scope: !10018)
!10030 = !DILocation(line: 77, column: 3, scope: !10022)
!10031 = distinct !{!10031, !10017, !10032}
!10032 = !DILocation(line: 77, column: 17, scope: !10018)
!10033 = !DILocation(line: 79, column: 4, scope: !10018)
!10034 = !DILocation(line: 80, column: 13, scope: !10003)
!10035 = !DILocation(line: 80, column: 2, scope: !10018)
!10036 = distinct !{!10036, !10037, !10038}
!10037 = !DILocation(line: 70, column: 2, scope: !10003)
!10038 = !DILocation(line: 80, column: 16, scope: !10003)
!10039 = !DILocation(line: 82, column: 1, scope: !10003)
!10040 = !DILocation(line: 83, column: 17, scope: !10003)
!10041 = !DILocation(line: 83, column: 2, scope: !10003)
!10042 = !DILocation(line: 84, column: 1, scope: !10003)
!10043 = distinct !DISubprogram(name: "puts", scope: !1079, file: !1079, line: 106, type: !10044, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1072, retainedNodes: !10046)
!10044 = !DISubroutineType(types: !10045)
!10045 = !{!103, !336}
!10046 = !{!10047}
!10047 = !DILocalVariable(name: "s", arg: 1, scope: !10043, file: !1079, line: 106, type: !336)
!10048 = !DILocation(line: 0, scope: !10043)
!10049 = !DILocation(line: 108, column: 6, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10043, file: !1079, line: 108, column: 6)
!10051 = !DILocation(line: 108, column: 23, scope: !10050)
!10052 = !DILocation(line: 108, column: 6, scope: !10043)
!10053 = !DILocation(line: 112, column: 9, scope: !10043)
!10054 = !DILocation(line: 112, column: 29, scope: !10043)
!10055 = !DILocation(line: 112, column: 2, scope: !10043)
!10056 = !DILocation(line: 113, column: 1, scope: !10043)
!10057 = distinct !DISubprogram(name: "rf_init", scope: !1203, file: !1203, line: 10, type: !1209, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !10058)
!10058 = !{!10059, !10060, !10068, !10069}
!10059 = !DILocalVariable(name: "dev", arg: 1, scope: !10057, file: !1203, line: 10, type: !1130)
!10060 = !DILocalVariable(name: "rf1", scope: !10057, file: !1203, line: 12, type: !10061)
!10061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10062)
!10062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !1111, line: 271, size: 64, elements: !10063)
!10063 = !{!10064, !10065, !10066}
!10064 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !10062, file: !1111, line: 273, baseType: !1130, size: 32)
!10065 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !10062, file: !1111, line: 275, baseType: !1145, size: 8, offset: 32)
!10066 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !10062, file: !1111, line: 277, baseType: !10067, size: 16, offset: 48)
!10067 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !1111, line: 249, baseType: !177)
!10068 = !DILocalVariable(name: "rf2", scope: !10057, file: !1203, line: 14, type: !10061)
!10069 = !DILocalVariable(name: "rf3", scope: !10057, file: !1203, line: 16, type: !10061)
!10070 = !DILocation(line: 0, scope: !10057)
!10071 = !DILocation(line: 12, column: 2, scope: !10057)
!10072 = !DILocation(line: 12, column: 28, scope: !10057)
!10073 = !DILocation(line: 14, column: 2, scope: !10057)
!10074 = !DILocation(line: 14, column: 28, scope: !10057)
!10075 = !DILocation(line: 16, column: 2, scope: !10057)
!10076 = !DILocation(line: 16, column: 28, scope: !10057)
!10077 = !DILocation(line: 22, column: 27, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10057, file: !1203, line: 22, column: 6)
!10079 = !DILocation(line: 22, column: 7, scope: !10078)
!10080 = !DILocation(line: 22, column: 33, scope: !10078)
!10081 = !DILocation(line: 23, column: 7, scope: !10078)
!10082 = !DILocation(line: 23, column: 33, scope: !10078)
!10083 = !DILocation(line: 24, column: 7, scope: !10078)
!10084 = !DILocation(line: 22, column: 6, scope: !10057)
!10085 = !DILocation(line: 28, column: 8, scope: !10057)
!10086 = !DILocation(line: 29, column: 8, scope: !10057)
!10087 = !DILocation(line: 30, column: 8, scope: !10057)
!10088 = !DILocation(line: 32, column: 2, scope: !10057)
!10089 = !DILocation(line: 33, column: 1, scope: !10057)
!10090 = distinct !DISubprogram(name: "device_is_ready", scope: !10091, file: !10091, line: 47, type: !10092, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !10094)
!10091 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!10092 = !DISubroutineType(types: !10093)
!10093 = !{!119, !1130}
!10094 = !{!10095}
!10095 = !DILocalVariable(name: "dev", arg: 1, scope: !10090, file: !10091, line: 47, type: !1130)
!10096 = !DILocation(line: 0, scope: !10090)
!10097 = !DILocation(line: 55, column: 2, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10090, file: !10091, line: 55, column: 2)
!10099 = !{i64 2148930203}
!10100 = !DILocation(line: 56, column: 9, scope: !10090)
!10101 = !DILocation(line: 56, column: 2, scope: !10090)
!10102 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !1111, file: !1111, line: 731, type: !10103, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !10106)
!10103 = !DISubroutineType(types: !10104)
!10104 = !{!103, !10105, !1146}
!10105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10061, size: 32)
!10106 = !{!10107, !10108}
!10107 = !DILocalVariable(name: "spec", arg: 1, scope: !10102, file: !1111, line: 731, type: !10105)
!10108 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !10102, file: !1111, line: 732, type: !1146)
!10109 = !DILocation(line: 0, scope: !10102)
!10110 = !DILocation(line: 734, column: 34, scope: !10102)
!10111 = !DILocation(line: 735, column: 13, scope: !10102)
!10112 = !DILocation(line: 736, column: 13, scope: !10102)
!10113 = !DILocation(line: 736, column: 7, scope: !10102)
!10114 = !DILocation(line: 736, column: 22, scope: !10102)
!10115 = !DILocation(line: 734, column: 9, scope: !10102)
!10116 = !DILocation(line: 734, column: 2, scope: !10102)
!10117 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !10118, file: !10118, line: 49, type: !1128, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !10119)
!10118 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!10119 = !{!10120, !10121, !10122}
!10120 = !DILocalVariable(name: "port", arg: 1, scope: !10117, file: !10118, line: 49, type: !1130)
!10121 = !DILocalVariable(name: "pin", arg: 2, scope: !10117, file: !10118, line: 49, type: !1145)
!10122 = !DILocalVariable(name: "flags", arg: 3, scope: !10117, file: !10118, line: 49, type: !1146)
!10123 = !DILocation(line: 0, scope: !10117)
!10124 = !DILocation(line: 59, column: 2, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10117, file: !10118, line: 59, column: 2)
!10126 = !{i64 2148980297}
!10127 = !DILocation(line: 60, column: 9, scope: !10117)
!10128 = !DILocation(line: 60, column: 2, scope: !10117)
!10129 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !1111, file: !1111, line: 667, type: !1128, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !10130)
!10130 = !{!10131, !10132, !10133, !10134, !10135, !10137}
!10131 = !DILocalVariable(name: "port", arg: 1, scope: !10129, file: !1111, line: 667, type: !1130)
!10132 = !DILocalVariable(name: "pin", arg: 2, scope: !10129, file: !1111, line: 668, type: !1145)
!10133 = !DILocalVariable(name: "flags", arg: 3, scope: !10129, file: !1111, line: 669, type: !1146)
!10134 = !DILocalVariable(name: "api", scope: !10129, file: !1111, line: 671, type: !1122)
!10135 = !DILocalVariable(name: "cfg", scope: !10129, file: !1111, line: 673, type: !10136)
!10136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1191)
!10137 = !DILocalVariable(name: "data", scope: !10129, file: !1111, line: 675, type: !1201)
!10138 = !DILocation(line: 0, scope: !10129)
!10139 = !DILocation(line: 672, column: 41, scope: !10129)
!10140 = !DILocation(line: 674, column: 44, scope: !10129)
!10141 = !DILocation(line: 676, column: 36, scope: !10129)
!10142 = !DILocation(line: 678, column: 2, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10144, file: !1111, line: 678, column: 2)
!10144 = distinct !DILexicalBlock(scope: !10129, file: !1111, line: 678, column: 2)
!10145 = !DILocation(line: 678, column: 2, scope: !10144)
!10146 = !DILocation(line: 678, column: 2, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10143, file: !1111, line: 678, column: 2)
!10148 = !DILocation(line: 681, column: 2, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10150, file: !1111, line: 681, column: 2)
!10150 = distinct !DILexicalBlock(scope: !10129, file: !1111, line: 681, column: 2)
!10151 = !DILocation(line: 681, column: 2, scope: !10150)
!10152 = !DILocation(line: 681, column: 2, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10149, file: !1111, line: 681, column: 2)
!10154 = !DILocation(line: 685, column: 2, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10156, file: !1111, line: 685, column: 2)
!10156 = distinct !DILexicalBlock(scope: !10129, file: !1111, line: 685, column: 2)
!10157 = !DILocation(line: 685, column: 2, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10155, file: !1111, line: 685, column: 2)
!10159 = !DILocation(line: 689, column: 2, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10161, file: !1111, line: 689, column: 2)
!10161 = distinct !DILexicalBlock(scope: !10129, file: !1111, line: 689, column: 2)
!10162 = !DILocation(line: 689, column: 2, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10160, file: !1111, line: 689, column: 2)
!10164 = !DILocation(line: 692, column: 2, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10166, file: !1111, line: 692, column: 2)
!10166 = distinct !DILexicalBlock(scope: !10129, file: !1111, line: 692, column: 2)
!10167 = !DILocation(line: 692, column: 2, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10165, file: !1111, line: 692, column: 2)
!10169 = !DILocation(line: 696, column: 2, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10171, file: !1111, line: 696, column: 2)
!10171 = distinct !DILexicalBlock(scope: !10129, file: !1111, line: 696, column: 2)
!10172 = !DILocation(line: 696, column: 2, scope: !10171)
!10173 = !DILocation(line: 696, column: 2, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10170, file: !1111, line: 696, column: 2)
!10175 = !DILocation(line: 701, column: 6, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10129, file: !1111, line: 700, column: 6)
!10177 = !DILocation(line: 708, column: 2, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10179, file: !1111, line: 708, column: 2)
!10179 = distinct !DILexicalBlock(scope: !10129, file: !1111, line: 708, column: 2)
!10180 = !DILocation(line: 708, column: 2, scope: !10179)
!10181 = !DILocation(line: 708, column: 2, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10178, file: !1111, line: 708, column: 2)
!10183 = !DILocation(line: 711, column: 13, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10129, file: !1111, line: 711, column: 6)
!10185 = !DILocation(line: 711, column: 32, scope: !10184)
!10186 = !DILocation(line: 711, column: 6, scope: !10129)
!10187 = !DILocation(line: 712, column: 9, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10184, file: !1111, line: 711, column: 38)
!10189 = !DILocation(line: 712, column: 16, scope: !10188)
!10190 = !DILocation(line: 713, column: 2, scope: !10188)
!10191 = !DILocation(line: 714, column: 19, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10184, file: !1111, line: 713, column: 9)
!10193 = !DILocation(line: 714, column: 9, scope: !10192)
!10194 = !DILocation(line: 714, column: 16, scope: !10192)
!10195 = !DILocation(line: 706, column: 8, scope: !10129)
!10196 = !DILocation(line: 717, column: 14, scope: !10129)
!10197 = !DILocation(line: 717, column: 9, scope: !10129)
!10198 = !DILocation(line: 717, column: 2, scope: !10129)
!10199 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !846, file: !846, line: 730, type: !10092, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !10200)
!10200 = !{!10201}
!10201 = !DILocalVariable(name: "dev", arg: 1, scope: !10199, file: !846, line: 730, type: !1130)
!10202 = !DILocation(line: 0, scope: !10199)
!10203 = !DILocation(line: 732, column: 9, scope: !10199)
!10204 = !DILocation(line: 732, column: 2, scope: !10199)
!10205 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !1382, file: !1382, line: 12, type: !10206, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10212)
!10206 = !DISubroutineType(types: !10207)
!10207 = !{!10208, !109}
!10208 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !10209)
!10209 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !10210)
!10210 = !{!10211}
!10211 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !10209, file: !105, line: 66, baseType: !104, size: 64)
!10212 = !{!10213, !10214}
!10213 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !10205, file: !1382, line: 12, type: !109)
!10214 = !DILocalVariable(name: "now_ticks", scope: !10205, file: !1382, line: 14, type: !106)
!10215 = !DILocation(line: 0, scope: !10205)
!10216 = !DILocation(line: 14, column: 22, scope: !10205)
!10217 = !DILocation(line: 16, column: 9, scope: !10205)
!10218 = !DILocation(line: 17, column: 1, scope: !10205)
!10219 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !1382, file: !1382, line: 103, type: !10220, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10222)
!10220 = !DISubroutineType(types: !10221)
!10221 = !{!103, !1273, !13, !10208}
!10222 = !{!10223, !10224, !10225, !10226, !10227}
!10223 = !DILocalVariable(name: "chan", arg: 1, scope: !10219, file: !1382, line: 103, type: !1273)
!10224 = !DILocalVariable(name: "msg", arg: 2, scope: !10219, file: !1382, line: 103, type: !13)
!10225 = !DILocalVariable(name: "timeout", arg: 3, scope: !10219, file: !1382, line: 103, type: !10208)
!10226 = !DILocalVariable(name: "err", scope: !10219, file: !1382, line: 105, type: !103)
!10227 = !DILocalVariable(name: "end_ticks", scope: !10219, file: !1382, line: 106, type: !109)
!10228 = !DILocation(line: 0, scope: !10219)
!10229 = !DILocation(line: 106, column: 23, scope: !10219)
!10230 = !DILocation(line: 108, column: 2, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10232, file: !1382, line: 108, column: 2)
!10232 = distinct !DILexicalBlock(scope: !10219, file: !1382, line: 108, column: 2)
!10233 = !DILocation(line: 108, column: 2, scope: !10232)
!10234 = !DILocation(line: 108, column: 2, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10231, file: !1382, line: 108, column: 2)
!10236 = !DILocation(line: 109, column: 2, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10238, file: !1382, line: 109, column: 2)
!10238 = distinct !DILexicalBlock(scope: !10219, file: !1382, line: 109, column: 2)
!10239 = !DILocation(line: 109, column: 2, scope: !10238)
!10240 = !DILocation(line: 109, column: 2, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10237, file: !1382, line: 109, column: 2)
!10242 = !DILocation(line: 110, column: 2, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10244, file: !1382, line: 110, column: 2)
!10244 = distinct !DILexicalBlock(scope: !10219, file: !1382, line: 110, column: 2)
!10245 = !DILocation(line: 110, column: 2, scope: !10244)
!10246 = !DILocation(line: 110, column: 2, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10243, file: !1382, line: 110, column: 2)
!10248 = !DILocation(line: 112, column: 12, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10219, file: !1382, line: 112, column: 6)
!10250 = !DILocation(line: 112, column: 22, scope: !10249)
!10251 = !DILocation(line: 112, column: 30, scope: !10249)
!10252 = !DILocation(line: 112, column: 61, scope: !10249)
!10253 = !DILocation(line: 112, column: 55, scope: !10249)
!10254 = !DILocation(line: 112, column: 34, scope: !10249)
!10255 = !DILocation(line: 112, column: 6, scope: !10219)
!10256 = !DILocation(line: 116, column: 27, scope: !10219)
!10257 = !DILocation(line: 116, column: 8, scope: !10219)
!10258 = !DILocation(line: 117, column: 6, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10219, file: !1382, line: 117, column: 6)
!10260 = !DILocation(line: 117, column: 6, scope: !10219)
!10261 = !DILocation(line: 121, column: 15, scope: !10219)
!10262 = !DILocation(line: 121, column: 35, scope: !10219)
!10263 = !DILocation(line: 121, column: 29, scope: !10219)
!10264 = !DILocation(line: 121, column: 2, scope: !10219)
!10265 = !DILocation(line: 123, column: 8, scope: !10219)
!10266 = !DILocation(line: 125, column: 23, scope: !10219)
!10267 = !DILocation(line: 125, column: 2, scope: !10219)
!10268 = !DILocation(line: 127, column: 2, scope: !10219)
!10269 = !DILocation(line: 128, column: 1, scope: !10219)
!10270 = distinct !DISubprogram(name: "k_mutex_lock", scope: !4394, file: !4394, line: 927, type: !10271, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10273)
!10271 = !DISubroutineType(types: !10272)
!10272 = !{!103, !1282, !10208}
!10273 = !{!10274, !10275}
!10274 = !DILocalVariable(name: "mutex", arg: 1, scope: !10270, file: !4394, line: 927, type: !1282)
!10275 = !DILocalVariable(name: "timeout", arg: 2, scope: !10270, file: !4394, line: 927, type: !10208)
!10276 = !DILocation(line: 0, scope: !10270)
!10277 = !DILocation(line: 936, column: 2, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10270, file: !4394, line: 936, column: 2)
!10279 = !{i64 2152227843}
!10280 = !DILocation(line: 937, column: 9, scope: !10270)
!10281 = !DILocation(line: 937, column: 2, scope: !10270)
!10282 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !1382, file: !1382, line: 66, type: !10283, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10285)
!10283 = !DISubroutineType(types: !10284)
!10284 = !{!103, !1273, !109}
!10285 = !{!10286, !10287, !10288, !10289, !10290, !10292}
!10286 = !DILocalVariable(name: "chan", arg: 1, scope: !10282, file: !1382, line: 66, type: !1273)
!10287 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !10282, file: !1382, line: 66, type: !109)
!10288 = !DILocalVariable(name: "last_error", scope: !10282, file: !1382, line: 68, type: !103)
!10289 = !DILocalVariable(name: "err", scope: !10282, file: !1382, line: 68, type: !103)
!10290 = !DILocalVariable(name: "obs", scope: !10291, file: !1382, line: 70, type: !1379)
!10291 = distinct !DILexicalBlock(scope: !10282, file: !1382, line: 70, column: 2)
!10292 = !DILocalVariable(name: "obs", scope: !10293, file: !1382, line: 81, type: !1379)
!10293 = distinct !DILexicalBlock(scope: !10282, file: !1382, line: 81, column: 2)
!10294 = !DILocation(line: 0, scope: !10282)
!10295 = !DILocation(line: 70, column: 54, scope: !10291)
!10296 = !DILocation(line: 0, scope: !10291)
!10297 = !DILocation(line: 70, column: 65, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10291, file: !1382, line: 70, column: 2)
!10299 = !DILocation(line: 70, column: 70, scope: !10298)
!10300 = !DILocation(line: 70, column: 2, scope: !10291)
!10301 = !DILocation(line: 77, column: 2, scope: !10282)
!10302 = !DILocation(line: 81, column: 54, scope: !10293)
!10303 = !DILocation(line: 0, scope: !10293)
!10304 = !DILocation(line: 81, column: 65, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10293, file: !1382, line: 81, column: 2)
!10306 = !DILocation(line: 81, column: 70, scope: !10305)
!10307 = !DILocation(line: 81, column: 2, scope: !10293)
!10308 = !DILocation(line: 71, column: 15, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10310, file: !1382, line: 71, column: 7)
!10310 = distinct !DILexicalBlock(scope: !10298, file: !1382, line: 70, column: 86)
!10311 = !DILocation(line: 71, column: 23, scope: !10309)
!10312 = !DILocation(line: 71, column: 35, scope: !10309)
!10313 = !DILocation(line: 71, column: 44, scope: !10309)
!10314 = !DILocation(line: 71, column: 7, scope: !10310)
!10315 = !DILocation(line: 72, column: 4, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10309, file: !1382, line: 71, column: 54)
!10317 = !DILocation(line: 73, column: 3, scope: !10316)
!10318 = !DILocation(line: 70, column: 79, scope: !10298)
!10319 = distinct !{!10319, !10300, !10320}
!10320 = !DILocation(line: 74, column: 2, scope: !10291)
!10321 = !DILocation(line: 95, column: 41, scope: !10282)
!10322 = !DILocation(line: 95, column: 8, scope: !10282)
!10323 = !DILocation(line: 100, column: 2, scope: !10282)
!10324 = !DILocation(line: 82, column: 15, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10326, file: !1382, line: 82, column: 7)
!10326 = distinct !DILexicalBlock(scope: !10305, file: !1382, line: 81, column: 86)
!10327 = !DILocation(line: 82, column: 23, scope: !10325)
!10328 = !DILocation(line: 82, column: 35, scope: !10325)
!10329 = !DILocation(line: 82, column: 41, scope: !10325)
!10330 = !DILocation(line: 82, column: 7, scope: !10326)
!10331 = !DILocation(line: 83, column: 43, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10325, file: !1382, line: 82, column: 51)
!10333 = !DILocation(line: 83, column: 10, scope: !10332)
!10334 = !DILocation(line: 84, column: 4, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10336, file: !1382, line: 84, column: 4)
!10336 = distinct !DILexicalBlock(scope: !10332, file: !1382, line: 84, column: 4)
!10337 = !DILocation(line: 84, column: 4, scope: !10336)
!10338 = !DILocation(line: 84, column: 4, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10335, file: !1382, line: 84, column: 4)
!10340 = !DILocation(line: 81, column: 79, scope: !10305)
!10341 = distinct !{!10341, !10307, !10342}
!10342 = !DILocation(line: 92, column: 2, scope: !10293)
!10343 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !4394, file: !4394, line: 944, type: !10344, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10346)
!10344 = !DISubroutineType(types: !10345)
!10345 = !{!103, !1282}
!10346 = !{!10347}
!10347 = !DILocalVariable(name: "mutex", arg: 1, scope: !10343, file: !4394, line: 944, type: !1282)
!10348 = !DILocation(line: 0, scope: !10343)
!10349 = !DILocation(line: 952, column: 2, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10343, file: !4394, line: 952, column: 2)
!10351 = !{i64 2152227911}
!10352 = !DILocation(line: 953, column: 9, scope: !10343)
!10353 = !DILocation(line: 953, column: 2, scope: !10343)
!10354 = distinct !DISubprogram(name: "_zbus_notify_runtime_listeners", scope: !1382, file: !1382, line: 20, type: !1271, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10355)
!10355 = !{!10356, !10357, !10358}
!10356 = !DILocalVariable(name: "chan", arg: 1, scope: !10354, file: !1382, line: 20, type: !1273)
!10357 = !DILocalVariable(name: "obs_nd", scope: !10354, file: !1382, line: 24, type: !1217)
!10358 = !DILocalVariable(name: "tmp", scope: !10354, file: !1382, line: 24, type: !1217)
!10359 = !DILocation(line: 0, scope: !10354)
!10360 = !DILocation(line: 22, column: 2, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10362, file: !1382, line: 22, column: 2)
!10362 = distinct !DILexicalBlock(scope: !10354, file: !1382, line: 22, column: 2)
!10363 = !DILocation(line: 22, column: 2, scope: !10362)
!10364 = !DILocation(line: 22, column: 2, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10361, file: !1382, line: 22, column: 2)
!10366 = !DILocation(line: 26, column: 2, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10354, file: !1382, line: 26, column: 2)
!10368 = !DILocation(line: 0, scope: !10367)
!10369 = !DILocation(line: 30, column: 15, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10371, file: !1382, line: 30, column: 7)
!10371 = distinct !DILexicalBlock(scope: !10372, file: !1382, line: 26, column: 80)
!10372 = distinct !DILexicalBlock(scope: !10367, file: !1382, line: 26, column: 2)
!10373 = !DILocation(line: 30, column: 20, scope: !10370)
!10374 = !DILocation(line: 30, column: 28, scope: !10370)
!10375 = !DILocation(line: 30, column: 45, scope: !10370)
!10376 = !DILocation(line: 30, column: 54, scope: !10370)
!10377 = !DILocation(line: 30, column: 7, scope: !10371)
!10378 = !DILocation(line: 31, column: 4, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10370, file: !1382, line: 30, column: 64)
!10380 = !DILocation(line: 32, column: 3, scope: !10379)
!10381 = !DILocation(line: 26, column: 2, scope: !10372)
!10382 = !DILocation(line: 34, column: 1, scope: !10354)
!10383 = distinct !DISubprogram(name: "_zbus_notify_runtime_subscribers", scope: !1382, file: !1382, line: 36, type: !10283, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10384)
!10384 = !{!10385, !10386, !10387, !10388, !10389, !10390}
!10385 = !DILocalVariable(name: "chan", arg: 1, scope: !10383, file: !1382, line: 36, type: !1273)
!10386 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !10383, file: !1382, line: 37, type: !109)
!10387 = !DILocalVariable(name: "last_error", scope: !10383, file: !1382, line: 41, type: !103)
!10388 = !DILocalVariable(name: "err", scope: !10383, file: !1382, line: 41, type: !103)
!10389 = !DILocalVariable(name: "obs_nd", scope: !10383, file: !1382, line: 42, type: !1217)
!10390 = !DILocalVariable(name: "tmp", scope: !10383, file: !1382, line: 42, type: !1217)
!10391 = !DILocation(line: 0, scope: !10383)
!10392 = !DILocation(line: 39, column: 2, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10394, file: !1382, line: 39, column: 2)
!10394 = distinct !DILexicalBlock(scope: !10383, file: !1382, line: 39, column: 2)
!10395 = !DILocation(line: 39, column: 2, scope: !10394)
!10396 = !DILocation(line: 39, column: 2, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10393, file: !1382, line: 39, column: 2)
!10398 = !DILocation(line: 44, column: 2, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10383, file: !1382, line: 44, column: 2)
!10400 = !DILocation(line: 48, column: 15, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10402, file: !1382, line: 48, column: 7)
!10402 = distinct !DILexicalBlock(scope: !10403, file: !1382, line: 44, column: 80)
!10403 = distinct !DILexicalBlock(scope: !10399, file: !1382, line: 44, column: 2)
!10404 = !DILocation(line: 48, column: 20, scope: !10401)
!10405 = !DILocation(line: 48, column: 28, scope: !10401)
!10406 = !DILocation(line: 48, column: 45, scope: !10401)
!10407 = !DILocation(line: 48, column: 51, scope: !10401)
!10408 = !DILocation(line: 48, column: 7, scope: !10402)
!10409 = !DILocation(line: 50, column: 7, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10401, file: !1382, line: 48, column: 61)
!10411 = !DILocation(line: 49, column: 10, scope: !10410)
!10412 = !DILocation(line: 52, column: 4, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10414, file: !1382, line: 52, column: 4)
!10414 = distinct !DILexicalBlock(scope: !10410, file: !1382, line: 52, column: 4)
!10415 = !DILocation(line: 52, column: 4, scope: !10414)
!10416 = !DILocation(line: 52, column: 4, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10413, file: !1382, line: 52, column: 4)
!10418 = !DILocation(line: 44, column: 2, scope: !10403)
!10419 = !DILocation(line: 62, column: 2, scope: !10383)
!10420 = distinct !DISubprogram(name: "k_msgq_put", scope: !4394, file: !4394, line: 1129, type: !10421, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10423)
!10421 = !DISubroutineType(types: !10422)
!10422 = !{!103, !1234, !13, !10208}
!10423 = !{!10424, !10425, !10426}
!10424 = !DILocalVariable(name: "msgq", arg: 1, scope: !10420, file: !4394, line: 1129, type: !1234)
!10425 = !DILocalVariable(name: "data", arg: 2, scope: !10420, file: !4394, line: 1129, type: !13)
!10426 = !DILocalVariable(name: "timeout", arg: 3, scope: !10420, file: !4394, line: 1129, type: !10208)
!10427 = !DILocation(line: 0, scope: !10420)
!10428 = !DILocation(line: 1139, column: 2, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10420, file: !4394, line: 1139, column: 2)
!10430 = !{i64 2152228659}
!10431 = !DILocation(line: 1140, column: 9, scope: !10420)
!10432 = !DILocation(line: 1140, column: 2, scope: !10420)
!10433 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !289, file: !289, line: 231, type: !10434, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10436)
!10434 = !DISubroutineType(types: !10435)
!10435 = !{!1376, !1371}
!10436 = !{!10437}
!10437 = !DILocalVariable(name: "list", arg: 1, scope: !10433, file: !289, line: 231, type: !1371)
!10438 = !DILocation(line: 0, scope: !10433)
!10439 = !DILocation(line: 233, column: 15, scope: !10433)
!10440 = !DILocation(line: 233, column: 2, scope: !10433)
!10441 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !289, file: !289, line: 285, type: !10442, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10444)
!10442 = !DISubroutineType(types: !10443)
!10443 = !{!1376, !1376}
!10444 = !{!10445}
!10445 = !DILocalVariable(name: "node", arg: 1, scope: !10441, file: !289, line: 285, type: !1376)
!10446 = !DILocation(line: 0, scope: !10441)
!10447 = !DILocation(line: 285, column: 1, scope: !10441)
!10448 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !289, file: !289, line: 274, type: !10442, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10449)
!10449 = !{!10450}
!10450 = !DILocalVariable(name: "node", arg: 1, scope: !10448, file: !289, line: 274, type: !1376)
!10451 = !DILocation(line: 0, scope: !10448)
!10452 = !DILocation(line: 274, column: 1, scope: !10448)
!10453 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !289, file: !289, line: 204, type: !10442, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10454)
!10454 = !{!10455}
!10455 = !DILocalVariable(name: "node", arg: 1, scope: !10453, file: !289, line: 204, type: !1376)
!10456 = !DILocation(line: 0, scope: !10453)
!10457 = !DILocation(line: 206, column: 15, scope: !10453)
!10458 = !DILocation(line: 206, column: 2, scope: !10453)
!10459 = distinct !DISubprogram(name: "zbus_chan_read", scope: !1382, file: !1382, line: 130, type: !10460, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10462)
!10460 = !DISubroutineType(types: !10461)
!10461 = !{!103, !1273, !102, !10208}
!10462 = !{!10463, !10464, !10465, !10466}
!10463 = !DILocalVariable(name: "chan", arg: 1, scope: !10459, file: !1382, line: 130, type: !1273)
!10464 = !DILocalVariable(name: "msg", arg: 2, scope: !10459, file: !1382, line: 130, type: !102)
!10465 = !DILocalVariable(name: "timeout", arg: 3, scope: !10459, file: !1382, line: 130, type: !10208)
!10466 = !DILocalVariable(name: "err", scope: !10459, file: !1382, line: 132, type: !103)
!10467 = !DILocation(line: 0, scope: !10459)
!10468 = !DILocation(line: 134, column: 2, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10470, file: !1382, line: 134, column: 2)
!10470 = distinct !DILexicalBlock(scope: !10459, file: !1382, line: 134, column: 2)
!10471 = !DILocation(line: 134, column: 2, scope: !10470)
!10472 = !DILocation(line: 134, column: 2, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10469, file: !1382, line: 134, column: 2)
!10474 = !DILocation(line: 135, column: 2, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10476, file: !1382, line: 135, column: 2)
!10476 = distinct !DILexicalBlock(scope: !10459, file: !1382, line: 135, column: 2)
!10477 = !DILocation(line: 135, column: 2, scope: !10476)
!10478 = !DILocation(line: 135, column: 2, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10475, file: !1382, line: 135, column: 2)
!10480 = !DILocation(line: 136, column: 2, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10482, file: !1382, line: 136, column: 2)
!10482 = distinct !DILexicalBlock(scope: !10459, file: !1382, line: 136, column: 2)
!10483 = !DILocation(line: 136, column: 2, scope: !10482)
!10484 = !DILocation(line: 136, column: 2, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10481, file: !1382, line: 136, column: 2)
!10486 = !DILocation(line: 138, column: 27, scope: !10459)
!10487 = !DILocation(line: 138, column: 8, scope: !10459)
!10488 = !DILocation(line: 139, column: 6, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10459, file: !1382, line: 139, column: 6)
!10490 = !DILocation(line: 139, column: 6, scope: !10459)
!10491 = !DILocation(line: 143, column: 20, scope: !10459)
!10492 = !DILocation(line: 143, column: 35, scope: !10459)
!10493 = !DILocation(line: 143, column: 29, scope: !10459)
!10494 = !DILocation(line: 143, column: 2, scope: !10459)
!10495 = !DILocation(line: 145, column: 30, scope: !10459)
!10496 = !DILocation(line: 145, column: 9, scope: !10459)
!10497 = !DILocation(line: 145, column: 2, scope: !10459)
!10498 = !DILocation(line: 146, column: 1, scope: !10459)
!10499 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !1382, file: !1382, line: 148, type: !10500, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10502)
!10500 = !DISubroutineType(types: !10501)
!10501 = !{!103, !1273, !10208}
!10502 = !{!10503, !10504, !10505, !10506}
!10503 = !DILocalVariable(name: "chan", arg: 1, scope: !10499, file: !1382, line: 148, type: !1273)
!10504 = !DILocalVariable(name: "timeout", arg: 2, scope: !10499, file: !1382, line: 148, type: !10208)
!10505 = !DILocalVariable(name: "err", scope: !10499, file: !1382, line: 150, type: !103)
!10506 = !DILocalVariable(name: "end_ticks", scope: !10499, file: !1382, line: 151, type: !109)
!10507 = !DILocation(line: 0, scope: !10499)
!10508 = !DILocation(line: 151, column: 23, scope: !10499)
!10509 = !DILocation(line: 153, column: 2, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10511, file: !1382, line: 153, column: 2)
!10511 = distinct !DILexicalBlock(scope: !10499, file: !1382, line: 153, column: 2)
!10512 = !DILocation(line: 153, column: 2, scope: !10511)
!10513 = !DILocation(line: 153, column: 2, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10510, file: !1382, line: 153, column: 2)
!10515 = !DILocation(line: 154, column: 2, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10517, file: !1382, line: 154, column: 2)
!10517 = distinct !DILexicalBlock(scope: !10499, file: !1382, line: 154, column: 2)
!10518 = !DILocation(line: 154, column: 2, scope: !10517)
!10519 = !DILocation(line: 154, column: 2, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10516, file: !1382, line: 154, column: 2)
!10521 = !DILocation(line: 156, column: 27, scope: !10499)
!10522 = !DILocation(line: 156, column: 8, scope: !10499)
!10523 = !DILocation(line: 157, column: 6, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10499, file: !1382, line: 157, column: 6)
!10525 = !DILocation(line: 157, column: 6, scope: !10499)
!10526 = !DILocation(line: 161, column: 8, scope: !10499)
!10527 = !DILocation(line: 163, column: 23, scope: !10499)
!10528 = !DILocation(line: 163, column: 2, scope: !10499)
!10529 = !DILocation(line: 165, column: 2, scope: !10499)
!10530 = !DILocation(line: 166, column: 1, scope: !10499)
!10531 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !1382, file: !1382, line: 168, type: !10500, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10532)
!10532 = !{!10533, !10534, !10535}
!10533 = !DILocalVariable(name: "chan", arg: 1, scope: !10531, file: !1382, line: 168, type: !1273)
!10534 = !DILocalVariable(name: "timeout", arg: 2, scope: !10531, file: !1382, line: 168, type: !10208)
!10535 = !DILocalVariable(name: "err", scope: !10531, file: !1382, line: 173, type: !103)
!10536 = !DILocation(line: 0, scope: !10531)
!10537 = !DILocation(line: 170, column: 2, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10539, file: !1382, line: 170, column: 2)
!10539 = distinct !DILexicalBlock(scope: !10531, file: !1382, line: 170, column: 2)
!10540 = !DILocation(line: 170, column: 2, scope: !10539)
!10541 = !DILocation(line: 170, column: 2, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10538, file: !1382, line: 170, column: 2)
!10543 = !DILocation(line: 171, column: 2, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10545, file: !1382, line: 171, column: 2)
!10545 = distinct !DILexicalBlock(scope: !10531, file: !1382, line: 171, column: 2)
!10546 = !DILocation(line: 171, column: 2, scope: !10545)
!10547 = !DILocation(line: 171, column: 2, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10544, file: !1382, line: 171, column: 2)
!10549 = !DILocation(line: 173, column: 31, scope: !10531)
!10550 = !DILocation(line: 173, column: 12, scope: !10531)
!10551 = !DILocation(line: 180, column: 1, scope: !10531)
!10552 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !1382, file: !1382, line: 182, type: !10553, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10555)
!10553 = !DISubroutineType(types: !10554)
!10554 = !{!103, !1273}
!10555 = !{!10556, !10557}
!10556 = !DILocalVariable(name: "chan", arg: 1, scope: !10552, file: !1382, line: 182, type: !1273)
!10557 = !DILocalVariable(name: "err", scope: !10552, file: !1382, line: 187, type: !103)
!10558 = !DILocation(line: 0, scope: !10552)
!10559 = !DILocation(line: 184, column: 2, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10561, file: !1382, line: 184, column: 2)
!10561 = distinct !DILexicalBlock(scope: !10552, file: !1382, line: 184, column: 2)
!10562 = !DILocation(line: 184, column: 2, scope: !10561)
!10563 = !DILocation(line: 184, column: 2, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10560, file: !1382, line: 184, column: 2)
!10565 = !DILocation(line: 185, column: 2, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10567, file: !1382, line: 185, column: 2)
!10567 = distinct !DILexicalBlock(scope: !10552, file: !1382, line: 185, column: 2)
!10568 = !DILocation(line: 185, column: 2, scope: !10567)
!10569 = !DILocation(line: 185, column: 2, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10566, file: !1382, line: 185, column: 2)
!10571 = !DILocation(line: 187, column: 33, scope: !10552)
!10572 = !DILocation(line: 187, column: 12, scope: !10552)
!10573 = !DILocation(line: 189, column: 2, scope: !10552)
!10574 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !1382, file: !1382, line: 192, type: !10575, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10578)
!10575 = !DISubroutineType(types: !10576)
!10576 = !{!103, !1227, !10577, !10208}
!10577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!10578 = !{!10579, !10580, !10581}
!10579 = !DILocalVariable(name: "sub", arg: 1, scope: !10574, file: !1382, line: 192, type: !1227)
!10580 = !DILocalVariable(name: "chan", arg: 2, scope: !10574, file: !1382, line: 192, type: !10577)
!10581 = !DILocalVariable(name: "timeout", arg: 3, scope: !10574, file: !1382, line: 193, type: !10208)
!10582 = !DILocation(line: 0, scope: !10574)
!10583 = !DILocation(line: 195, column: 2, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10585, file: !1382, line: 195, column: 2)
!10585 = distinct !DILexicalBlock(scope: !10574, file: !1382, line: 195, column: 2)
!10586 = !DILocation(line: 195, column: 2, scope: !10585)
!10587 = !DILocation(line: 195, column: 2, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10584, file: !1382, line: 195, column: 2)
!10589 = !DILocation(line: 196, column: 2, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10591, file: !1382, line: 196, column: 2)
!10591 = distinct !DILexicalBlock(scope: !10574, file: !1382, line: 196, column: 2)
!10592 = !DILocation(line: 196, column: 2, scope: !10591)
!10593 = !DILocation(line: 196, column: 2, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10590, file: !1382, line: 196, column: 2)
!10595 = !DILocation(line: 197, column: 2, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10597, file: !1382, line: 197, column: 2)
!10597 = distinct !DILexicalBlock(scope: !10574, file: !1382, line: 197, column: 2)
!10598 = !DILocation(line: 197, column: 2, scope: !10597)
!10599 = !DILocation(line: 197, column: 2, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10596, file: !1382, line: 197, column: 2)
!10601 = !DILocation(line: 199, column: 11, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10574, file: !1382, line: 199, column: 6)
!10603 = !DILocation(line: 199, column: 17, scope: !10602)
!10604 = !DILocation(line: 199, column: 6, scope: !10574)
!10605 = !DILocation(line: 203, column: 32, scope: !10574)
!10606 = !DILocation(line: 203, column: 9, scope: !10574)
!10607 = !DILocation(line: 203, column: 2, scope: !10574)
!10608 = !DILocation(line: 204, column: 1, scope: !10574)
!10609 = distinct !DISubprogram(name: "k_msgq_get", scope: !4394, file: !4394, line: 1147, type: !10610, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1214, retainedNodes: !10612)
!10610 = !DISubroutineType(types: !10611)
!10611 = !{!103, !1234, !102, !10208}
!10612 = !{!10613, !10614, !10615}
!10613 = !DILocalVariable(name: "msgq", arg: 1, scope: !10609, file: !4394, line: 1147, type: !1234)
!10614 = !DILocalVariable(name: "data", arg: 2, scope: !10609, file: !4394, line: 1147, type: !102)
!10615 = !DILocalVariable(name: "timeout", arg: 3, scope: !10609, file: !4394, line: 1147, type: !10208)
!10616 = !DILocation(line: 0, scope: !10609)
!10617 = !DILocation(line: 1157, column: 2, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10609, file: !4394, line: 1157, column: 2)
!10619 = !{i64 2152228727}
!10620 = !DILocation(line: 1158, column: 9, scope: !10609)
!10621 = !DILocation(line: 1158, column: 2, scope: !10609)
!10622 = distinct !DISubprogram(name: "zbus_runtime_obs_pool", scope: !1561, file: !1561, line: 14, type: !10623, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !2894)
!10623 = !DISubroutineType(types: !10624)
!10624 = !{!10625}
!10625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!10626 = !DILocation(line: 16, column: 2, scope: !10622)
!10627 = distinct !DISubprogram(name: "zbus_chan_add_obs", scope: !1561, file: !1561, line: 19, type: !10628, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !10634)
!10628 = !DISubroutineType(types: !10629)
!10629 = !{!103, !1449, !1403, !10630}
!10630 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !10631)
!10631 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !10632)
!10632 = !{!10633}
!10633 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !10631, file: !105, line: 66, baseType: !104, size: 64)
!10634 = !{!10635, !10636, !10637, !10638, !10639, !10640, !10641, !10642}
!10635 = !DILocalVariable(name: "chan", arg: 1, scope: !10627, file: !1561, line: 19, type: !1449)
!10636 = !DILocalVariable(name: "obs", arg: 2, scope: !10627, file: !1561, line: 19, type: !1403)
!10637 = !DILocalVariable(name: "timeout", arg: 3, scope: !10627, file: !1561, line: 20, type: !10630)
!10638 = !DILocalVariable(name: "err", scope: !10627, file: !1561, line: 22, type: !103)
!10639 = !DILocalVariable(name: "obs_nd", scope: !10627, file: !1561, line: 23, type: !1393)
!10640 = !DILocalVariable(name: "tmp", scope: !10627, file: !1561, line: 23, type: !1393)
!10641 = !DILocalVariable(name: "end_ticks", scope: !10627, file: !1561, line: 24, type: !109)
!10642 = !DILocalVariable(name: "static_obs", scope: !10643, file: !1561, line: 31, type: !1555)
!10643 = distinct !DILexicalBlock(scope: !10627, file: !1561, line: 31, column: 2)
!10644 = !DILocation(line: 0, scope: !10627)
!10645 = !DILocation(line: 23, column: 2, scope: !10627)
!10646 = !DILocation(line: 24, column: 23, scope: !10627)
!10647 = !DILocation(line: 26, column: 2, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10649, file: !1561, line: 26, column: 2)
!10649 = distinct !DILexicalBlock(scope: !10627, file: !1561, line: 26, column: 2)
!10650 = !DILocation(line: 26, column: 2, scope: !10649)
!10651 = !DILocation(line: 26, column: 2, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10648, file: !1561, line: 26, column: 2)
!10653 = !DILocation(line: 27, column: 2, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10655, file: !1561, line: 27, column: 2)
!10655 = distinct !DILexicalBlock(scope: !10627, file: !1561, line: 27, column: 2)
!10656 = !DILocation(line: 27, column: 2, scope: !10655)
!10657 = !DILocation(line: 27, column: 2, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10654, file: !1561, line: 27, column: 2)
!10659 = !DILocation(line: 28, column: 2, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10661, file: !1561, line: 28, column: 2)
!10661 = distinct !DILexicalBlock(scope: !10627, file: !1561, line: 28, column: 2)
!10662 = !DILocation(line: 28, column: 2, scope: !10661)
!10663 = !DILocation(line: 28, column: 2, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10660, file: !1561, line: 28, column: 2)
!10665 = !DILocation(line: 31, column: 61, scope: !10643)
!10666 = !DILocation(line: 0, scope: !10643)
!10667 = !DILocation(line: 31, column: 72, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10643, file: !1561, line: 31, column: 2)
!10669 = !DILocation(line: 31, column: 84, scope: !10668)
!10670 = !DILocation(line: 31, column: 2, scope: !10643)
!10671 = distinct !{!10671, !10670, !10672}
!10672 = !DILocation(line: 36, column: 2, scope: !10643)
!10673 = !DILocation(line: 33, column: 19, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10675, file: !1561, line: 33, column: 7)
!10675 = distinct !DILexicalBlock(scope: !10668, file: !1561, line: 32, column: 21)
!10676 = !DILocation(line: 32, column: 7, scope: !10668)
!10677 = !DILocation(line: 33, column: 7, scope: !10675)
!10678 = !DILocation(line: 38, column: 27, scope: !10627)
!10679 = !DILocation(line: 38, column: 8, scope: !10627)
!10680 = !DILocation(line: 39, column: 6, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10627, file: !1561, line: 39, column: 6)
!10682 = !DILocation(line: 39, column: 6, scope: !10627)
!10683 = !DILocation(line: 44, column: 2, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10627, file: !1561, line: 44, column: 2)
!10685 = !DILocation(line: 45, column: 15, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10687, file: !1561, line: 45, column: 7)
!10687 = distinct !DILexicalBlock(scope: !10688, file: !1561, line: 44, column: 80)
!10688 = distinct !DILexicalBlock(scope: !10684, file: !1561, line: 44, column: 2)
!10689 = !DILocation(line: 45, column: 19, scope: !10686)
!10690 = !DILocation(line: 45, column: 7, scope: !10687)
!10691 = !DILocation(line: 46, column: 25, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10686, file: !1561, line: 45, column: 27)
!10693 = !DILocation(line: 46, column: 4, scope: !10692)
!10694 = !DILocation(line: 48, column: 4, scope: !10692)
!10695 = !DILocation(line: 44, column: 2, scope: !10688)
!10696 = !DILocation(line: 52, column: 50, scope: !10627)
!10697 = !DILocation(line: 53, column: 11, scope: !10627)
!10698 = !DILocation(line: 52, column: 8, scope: !10627)
!10699 = !DILocation(line: 55, column: 6, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10627, file: !1561, line: 55, column: 6)
!10701 = !DILocation(line: 55, column: 6, scope: !10627)
!10702 = !DILocation(line: 56, column: 3, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10704, file: !1561, line: 56, column: 3)
!10704 = distinct !DILexicalBlock(scope: !10705, file: !1561, line: 56, column: 3)
!10705 = distinct !DILexicalBlock(scope: !10706, file: !1561, line: 56, column: 3)
!10706 = distinct !DILexicalBlock(scope: !10707, file: !1561, line: 56, column: 3)
!10707 = distinct !DILexicalBlock(scope: !10700, file: !1561, line: 55, column: 11)
!10708 = !DILocation(line: 58, column: 24, scope: !10707)
!10709 = !DILocation(line: 58, column: 3, scope: !10707)
!10710 = !DILocation(line: 60, column: 3, scope: !10707)
!10711 = !DILocation(line: 63, column: 2, scope: !10627)
!10712 = !DILocation(line: 63, column: 10, scope: !10627)
!10713 = !DILocation(line: 63, column: 14, scope: !10627)
!10714 = !DILocation(line: 65, column: 25, scope: !10627)
!10715 = !DILocation(line: 65, column: 53, scope: !10627)
!10716 = !DILocation(line: 65, column: 2, scope: !10627)
!10717 = !DILocation(line: 67, column: 23, scope: !10627)
!10718 = !DILocation(line: 67, column: 2, scope: !10627)
!10719 = !DILocation(line: 69, column: 2, scope: !10627)
!10720 = !DILocation(line: 70, column: 1, scope: !10627)
!10721 = distinct !DISubprogram(name: "k_mutex_lock", scope: !4394, file: !4394, line: 927, type: !10722, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !10724)
!10722 = !DISubroutineType(types: !10723)
!10723 = !{!103, !1458, !10630}
!10724 = !{!10725, !10726}
!10725 = !DILocalVariable(name: "mutex", arg: 1, scope: !10721, file: !4394, line: 927, type: !1458)
!10726 = !DILocalVariable(name: "timeout", arg: 2, scope: !10721, file: !4394, line: 927, type: !10630)
!10727 = !DILocation(line: 0, scope: !10721)
!10728 = !DILocation(line: 936, column: 2, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10721, file: !4394, line: 936, column: 2)
!10730 = !{i64 2152225131}
!10731 = !DILocation(line: 937, column: 9, scope: !10721)
!10732 = !DILocation(line: 937, column: 2, scope: !10721)
!10733 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !289, file: !289, line: 231, type: !10734, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !10736)
!10734 = !DISubroutineType(types: !10735)
!10735 = !{!1552, !1547}
!10736 = !{!10737}
!10737 = !DILocalVariable(name: "list", arg: 1, scope: !10733, file: !289, line: 231, type: !1547)
!10738 = !DILocation(line: 0, scope: !10733)
!10739 = !DILocation(line: 233, column: 15, scope: !10733)
!10740 = !DILocation(line: 233, column: 2, scope: !10733)
!10741 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !289, file: !289, line: 285, type: !10742, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !10744)
!10742 = !DISubroutineType(types: !10743)
!10743 = !{!1552, !1552}
!10744 = !{!10745}
!10745 = !DILocalVariable(name: "node", arg: 1, scope: !10741, file: !289, line: 285, type: !1552)
!10746 = !DILocation(line: 0, scope: !10741)
!10747 = !DILocation(line: 285, column: 1, scope: !10741)
!10748 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !4394, file: !4394, line: 944, type: !10749, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !10751)
!10749 = !DISubroutineType(types: !10750)
!10750 = !{!103, !1458}
!10751 = !{!10752}
!10752 = !DILocalVariable(name: "mutex", arg: 1, scope: !10748, file: !4394, line: 944, type: !1458)
!10753 = !DILocation(line: 0, scope: !10748)
!10754 = !DILocation(line: 952, column: 2, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10748, file: !4394, line: 952, column: 2)
!10756 = !{i64 2152225199}
!10757 = !DILocation(line: 953, column: 9, scope: !10748)
!10758 = !DILocation(line: 953, column: 2, scope: !10748)
!10759 = distinct !DISubprogram(name: "sys_slist_append", scope: !289, file: !289, line: 311, type: !10760, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !10762)
!10760 = !DISubroutineType(types: !10761)
!10761 = !{null, !1547, !1552}
!10762 = !{!10763, !10764}
!10763 = !DILocalVariable(name: "list", arg: 1, scope: !10759, file: !289, line: 311, type: !1547)
!10764 = !DILocalVariable(name: "node", arg: 2, scope: !10759, file: !289, line: 311, type: !1552)
!10765 = !DILocation(line: 0, scope: !10759)
!10766 = !DILocation(line: 311, column: 1, scope: !10759)
!10767 = !DILocation(line: 311, column: 1, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10759, file: !289, line: 311, column: 1)
!10769 = !DILocation(line: 311, column: 1, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10768, file: !289, line: 311, column: 1)
!10771 = !DILocation(line: 311, column: 1, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10768, file: !289, line: 311, column: 1)
!10773 = distinct !DISubprogram(name: "z_snode_next_set", scope: !289, file: !289, line: 209, type: !10774, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !10776)
!10774 = !DISubroutineType(types: !10775)
!10775 = !{null, !1552, !1552}
!10776 = !{!10777, !10778}
!10777 = !DILocalVariable(name: "parent", arg: 1, scope: !10773, file: !289, line: 209, type: !1552)
!10778 = !DILocalVariable(name: "child", arg: 2, scope: !10773, file: !289, line: 209, type: !1552)
!10779 = !DILocation(line: 0, scope: !10773)
!10780 = !DILocation(line: 211, column: 10, scope: !10773)
!10781 = !DILocation(line: 211, column: 15, scope: !10773)
!10782 = !DILocation(line: 212, column: 1, scope: !10773)
!10783 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !289, file: !289, line: 243, type: !10734, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !10784)
!10784 = !{!10785}
!10785 = !DILocalVariable(name: "list", arg: 1, scope: !10783, file: !289, line: 243, type: !1547)
!10786 = !DILocation(line: 0, scope: !10783)
!10787 = !DILocation(line: 245, column: 15, scope: !10783)
!10788 = !DILocation(line: 245, column: 2, scope: !10783)
!10789 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !289, file: !289, line: 219, type: !10760, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !10790)
!10790 = !{!10791, !10792}
!10791 = !DILocalVariable(name: "list", arg: 1, scope: !10789, file: !289, line: 219, type: !1547)
!10792 = !DILocalVariable(name: "node", arg: 2, scope: !10789, file: !289, line: 219, type: !1552)
!10793 = !DILocation(line: 0, scope: !10789)
!10794 = !DILocation(line: 221, column: 8, scope: !10789)
!10795 = !DILocation(line: 221, column: 13, scope: !10789)
!10796 = !DILocation(line: 222, column: 1, scope: !10789)
!10797 = distinct !DISubprogram(name: "z_slist_head_set", scope: !289, file: !289, line: 214, type: !10760, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !10798)
!10798 = !{!10799, !10800}
!10799 = !DILocalVariable(name: "list", arg: 1, scope: !10797, file: !289, line: 214, type: !1547)
!10800 = !DILocalVariable(name: "node", arg: 2, scope: !10797, file: !289, line: 214, type: !1552)
!10801 = !DILocation(line: 0, scope: !10797)
!10802 = !DILocation(line: 216, column: 8, scope: !10797)
!10803 = !DILocation(line: 216, column: 13, scope: !10797)
!10804 = !DILocation(line: 217, column: 1, scope: !10797)
!10805 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !289, file: !289, line: 274, type: !10742, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !10806)
!10806 = !{!10807}
!10807 = !DILocalVariable(name: "node", arg: 1, scope: !10805, file: !289, line: 274, type: !1552)
!10808 = !DILocation(line: 0, scope: !10805)
!10809 = !DILocation(line: 274, column: 1, scope: !10805)
!10810 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !289, file: !289, line: 204, type: !10742, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !10811)
!10811 = !{!10812}
!10812 = !DILocalVariable(name: "node", arg: 1, scope: !10810, file: !289, line: 204, type: !1552)
!10813 = !DILocation(line: 0, scope: !10810)
!10814 = !DILocation(line: 206, column: 15, scope: !10810)
!10815 = !DILocation(line: 206, column: 2, scope: !10810)
!10816 = distinct !DISubprogram(name: "zbus_chan_rm_obs", scope: !1561, file: !1561, line: 72, type: !10628, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !10817)
!10817 = !{!10818, !10819, !10820, !10821, !10822, !10823, !10824}
!10818 = !DILocalVariable(name: "chan", arg: 1, scope: !10816, file: !1561, line: 72, type: !1449)
!10819 = !DILocalVariable(name: "obs", arg: 2, scope: !10816, file: !1561, line: 72, type: !1403)
!10820 = !DILocalVariable(name: "timeout", arg: 3, scope: !10816, file: !1561, line: 73, type: !10630)
!10821 = !DILocalVariable(name: "err", scope: !10816, file: !1561, line: 75, type: !103)
!10822 = !DILocalVariable(name: "obs_nd", scope: !10816, file: !1561, line: 76, type: !1393)
!10823 = !DILocalVariable(name: "tmp", scope: !10816, file: !1561, line: 76, type: !1393)
!10824 = !DILocalVariable(name: "prev_obs_nd", scope: !10816, file: !1561, line: 77, type: !1393)
!10825 = !DILocation(line: 0, scope: !10816)
!10826 = !DILocation(line: 76, column: 2, scope: !10816)
!10827 = !DILocation(line: 79, column: 2, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10829, file: !1561, line: 79, column: 2)
!10829 = distinct !DILexicalBlock(scope: !10816, file: !1561, line: 79, column: 2)
!10830 = !DILocation(line: 79, column: 2, scope: !10829)
!10831 = !DILocation(line: 79, column: 2, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10828, file: !1561, line: 79, column: 2)
!10833 = !DILocation(line: 80, column: 2, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10835, file: !1561, line: 80, column: 2)
!10835 = distinct !DILexicalBlock(scope: !10816, file: !1561, line: 80, column: 2)
!10836 = !DILocation(line: 80, column: 2, scope: !10835)
!10837 = !DILocation(line: 80, column: 2, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10834, file: !1561, line: 80, column: 2)
!10839 = !DILocation(line: 81, column: 2, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10841, file: !1561, line: 81, column: 2)
!10841 = distinct !DILexicalBlock(scope: !10816, file: !1561, line: 81, column: 2)
!10842 = !DILocation(line: 81, column: 2, scope: !10841)
!10843 = !DILocation(line: 81, column: 2, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10840, file: !1561, line: 81, column: 2)
!10845 = !DILocation(line: 83, column: 27, scope: !10816)
!10846 = !DILocation(line: 83, column: 8, scope: !10816)
!10847 = !DILocation(line: 84, column: 6, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10816, file: !1561, line: 84, column: 6)
!10849 = !DILocation(line: 84, column: 6, scope: !10816)
!10850 = !DILocation(line: 88, column: 2, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10816, file: !1561, line: 88, column: 2)
!10852 = !DILocation(line: 89, column: 15, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10854, file: !1561, line: 89, column: 7)
!10854 = distinct !DILexicalBlock(scope: !10855, file: !1561, line: 88, column: 80)
!10855 = distinct !DILexicalBlock(scope: !10851, file: !1561, line: 88, column: 2)
!10856 = !DILocation(line: 89, column: 19, scope: !10853)
!10857 = !DILocation(line: 89, column: 7, scope: !10854)
!10858 = !DILocation(line: 88, column: 2, scope: !10855)
!10859 = !DILocation(line: 90, column: 60, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10853, file: !1561, line: 89, column: 27)
!10861 = !DILocation(line: 90, column: 4, scope: !10860)
!10862 = !DILocation(line: 93, column: 45, scope: !10860)
!10863 = !DILocation(line: 93, column: 4, scope: !10860)
!10864 = !DILocation(line: 95, column: 25, scope: !10860)
!10865 = !DILocation(line: 95, column: 4, scope: !10860)
!10866 = !DILocation(line: 97, column: 4, scope: !10860)
!10867 = !DILocation(line: 103, column: 23, scope: !10816)
!10868 = !DILocation(line: 103, column: 2, scope: !10816)
!10869 = !DILocation(line: 105, column: 2, scope: !10816)
!10870 = !DILocation(line: 106, column: 1, scope: !10816)
!10871 = distinct !DISubprogram(name: "sys_slist_remove", scope: !289, file: !289, line: 401, type: !10872, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1390, retainedNodes: !10874)
!10872 = !DISubroutineType(types: !10873)
!10873 = !{null, !1547, !1552, !1552}
!10874 = !{!10875, !10876, !10877}
!10875 = !DILocalVariable(name: "list", arg: 1, scope: !10871, file: !289, line: 401, type: !1547)
!10876 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10871, file: !289, line: 401, type: !1552)
!10877 = !DILocalVariable(name: "node", arg: 3, scope: !10871, file: !289, line: 401, type: !1552)
!10878 = !DILocation(line: 0, scope: !10871)
!10879 = !DILocation(line: 401, column: 1, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10871, file: !289, line: 401, column: 1)
!10881 = !DILocation(line: 0, scope: !10880)
!10882 = !DILocation(line: 401, column: 1, scope: !10871)
!10883 = !DILocation(line: 401, column: 1, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10880, file: !289, line: 401, column: 1)
!10885 = !DILocation(line: 401, column: 1, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10884, file: !289, line: 401, column: 1)
!10887 = !DILocation(line: 401, column: 1, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10886, file: !289, line: 401, column: 1)
!10889 = !DILocation(line: 401, column: 1, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10880, file: !289, line: 401, column: 1)
!10891 = !DILocation(line: 401, column: 1, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10890, file: !289, line: 401, column: 1)
!10893 = !DILocation(line: 401, column: 1, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10892, file: !289, line: 401, column: 1)
!10895 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !1645, file: !1645, line: 368, type: !1696, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !10896)
!10896 = !{!10897}
!10897 = !DILocalVariable(name: "dev", arg: 1, scope: !10895, file: !1645, line: 368, type: !1674)
!10898 = !DILocation(line: 0, scope: !10895)
!10899 = !DILocation(line: 370, column: 2, scope: !10895)
!10900 = !DILocation(line: 371, column: 1, scope: !10895)
!10901 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !1645, file: !1645, line: 243, type: !10902, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !10904)
!10902 = !DISubroutineType(types: !10903)
!10903 = !{null, !103, !103, !1674}
!10904 = !{!10905, !10906, !10907, !10908, !10910}
!10905 = !DILocalVariable(name: "min", arg: 1, scope: !10901, file: !1645, line: 243, type: !103)
!10906 = !DILocalVariable(name: "max", arg: 2, scope: !10901, file: !1645, line: 243, type: !103)
!10907 = !DILocalVariable(name: "dev", arg: 3, scope: !10901, file: !1645, line: 243, type: !1674)
!10908 = !DILocalVariable(name: "data", scope: !10901, file: !1645, line: 245, type: !10909)
!10909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!10910 = !DILocalVariable(name: "line", scope: !10901, file: !1645, line: 246, type: !103)
!10911 = !DILocation(line: 0, scope: !10901)
!10912 = !DILocation(line: 245, column: 38, scope: !10901)
!10913 = !DILocation(line: 249, column: 24, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10915, file: !1645, line: 249, column: 2)
!10915 = distinct !DILexicalBlock(scope: !10901, file: !1645, line: 249, column: 2)
!10916 = !DILocation(line: 249, column: 2, scope: !10915)
!10917 = !DILocation(line: 251, column: 7, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10919, file: !1645, line: 251, column: 7)
!10919 = distinct !DILexicalBlock(scope: !10914, file: !1645, line: 249, column: 39)
!10920 = !DILocation(line: 251, column: 7, scope: !10919)
!10921 = !DILocation(line: 253, column: 4, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10918, file: !1645, line: 251, column: 36)
!10923 = !DILocation(line: 256, column: 24, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10922, file: !1645, line: 256, column: 8)
!10925 = !DILocation(line: 256, column: 9, scope: !10924)
!10926 = !DILocation(line: 256, column: 8, scope: !10922)
!10927 = !DILocation(line: 260, column: 43, scope: !10922)
!10928 = !DILocation(line: 260, column: 4, scope: !10922)
!10929 = !DILocation(line: 261, column: 3, scope: !10922)
!10930 = !DILocation(line: 249, column: 35, scope: !10914)
!10931 = distinct !{!10931, !10916, !10932}
!10932 = !DILocation(line: 262, column: 2, scope: !10915)
!10933 = !DILocation(line: 263, column: 1, scope: !10901)
!10934 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !1645, file: !1645, line: 158, type: !800, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !10935)
!10935 = !{!10936}
!10936 = !DILocalVariable(name: "line", arg: 1, scope: !10934, file: !1645, line: 158, type: !103)
!10937 = !DILocation(line: 0, scope: !10934)
!10938 = !DILocation(line: 170, column: 38, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !1645, line: 160, column: 17)
!10940 = distinct !DILexicalBlock(scope: !10934, file: !1645, line: 160, column: 6)
!10941 = !DILocation(line: 170, column: 10, scope: !10939)
!10942 = !DILocation(line: 176, column: 1, scope: !10934)
!10943 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !1645, file: !1645, line: 183, type: !10944, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !10946)
!10944 = !DISubroutineType(types: !10945)
!10945 = !{null, !103}
!10946 = !{!10947}
!10947 = !DILocalVariable(name: "line", arg: 1, scope: !10943, file: !1645, line: 183, type: !103)
!10948 = !DILocation(line: 0, scope: !10943)
!10949 = !DILocation(line: 195, column: 28, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10951, file: !1645, line: 185, column: 17)
!10951 = distinct !DILexicalBlock(scope: !10943, file: !1645, line: 185, column: 6)
!10952 = !DILocation(line: 195, column: 3, scope: !10950)
!10953 = !DILocation(line: 200, column: 1, scope: !10943)
!10954 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !10955, file: !10955, line: 971, type: !7896, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !10956)
!10955 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10956 = !{!10957}
!10957 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10954, file: !10955, line: 971, type: !108)
!10958 = !DILocation(line: 0, scope: !10954)
!10959 = !DILocation(line: 973, column: 3, scope: !10954)
!10960 = !DILocation(line: 974, column: 1, scope: !10954)
!10961 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !10955, file: !10955, line: 891, type: !9453, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !10962)
!10962 = !{!10963}
!10963 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10961, file: !10955, line: 891, type: !108)
!10964 = !DILocation(line: 0, scope: !10961)
!10965 = !DILocation(line: 893, column: 11, scope: !10961)
!10966 = !DILocation(line: 893, column: 40, scope: !10961)
!10967 = !DILocation(line: 893, column: 3, scope: !10961)
!10968 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !1645, file: !1645, line: 304, type: !1696, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !10969)
!10969 = !{!10970}
!10970 = !DILocalVariable(name: "dev", arg: 1, scope: !10968, file: !1645, line: 304, type: !1674)
!10971 = !DILocation(line: 0, scope: !10968)
!10972 = !DILocation(line: 306, column: 2, scope: !10968)
!10973 = !DILocation(line: 307, column: 1, scope: !10968)
!10974 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !1645, file: !1645, line: 299, type: !1696, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !10975)
!10975 = !{!10976}
!10976 = !DILocalVariable(name: "dev", arg: 1, scope: !10974, file: !1645, line: 299, type: !1674)
!10977 = !DILocation(line: 0, scope: !10974)
!10978 = !DILocation(line: 301, column: 2, scope: !10974)
!10979 = !DILocation(line: 302, column: 1, scope: !10974)
!10980 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !1645, file: !1645, line: 294, type: !1696, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !10981)
!10981 = !{!10982}
!10982 = !DILocalVariable(name: "dev", arg: 1, scope: !10980, file: !1645, line: 294, type: !1674)
!10983 = !DILocation(line: 0, scope: !10980)
!10984 = !DILocation(line: 296, column: 2, scope: !10980)
!10985 = !DILocation(line: 297, column: 1, scope: !10980)
!10986 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !1645, file: !1645, line: 289, type: !1696, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !10987)
!10987 = !{!10988}
!10988 = !DILocalVariable(name: "dev", arg: 1, scope: !10986, file: !1645, line: 289, type: !1674)
!10989 = !DILocation(line: 0, scope: !10986)
!10990 = !DILocation(line: 291, column: 2, scope: !10986)
!10991 = !DILocation(line: 292, column: 1, scope: !10986)
!10992 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !1645, file: !1645, line: 373, type: !1696, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !10993)
!10993 = !{!10994}
!10994 = !DILocalVariable(name: "dev", arg: 1, scope: !10992, file: !1645, line: 373, type: !1674)
!10995 = !DILocation(line: 0, scope: !10992)
!10996 = !DILocation(line: 375, column: 2, scope: !10992)
!10997 = !DILocation(line: 376, column: 1, scope: !10992)
!10998 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !1645, file: !1645, line: 284, type: !1696, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !10999)
!10999 = !{!11000}
!11000 = !DILocalVariable(name: "dev", arg: 1, scope: !10998, file: !1645, line: 284, type: !1674)
!11001 = !DILocation(line: 0, scope: !10998)
!11002 = !DILocation(line: 286, column: 2, scope: !10998)
!11003 = !DILocation(line: 287, column: 1, scope: !10998)
!11004 = distinct !DISubprogram(name: "stm32_exti_init", scope: !1645, file: !1645, line: 416, type: !1672, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !11005)
!11005 = !{!11006}
!11006 = !DILocalVariable(name: "dev", arg: 1, scope: !11004, file: !1645, line: 416, type: !1674)
!11007 = !DILocation(line: 0, scope: !11004)
!11008 = !DILocation(line: 418, column: 2, scope: !11004)
!11009 = !DILocation(line: 420, column: 2, scope: !11004)
!11010 = !DILocation(line: 0, scope: !1695)
!11011 = !DILocation(line: 493, column: 2, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !1695, file: !1645, line: 493, column: 2)
!11013 = !DILocation(line: 497, column: 2, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !1695, file: !1645, line: 497, column: 2)
!11015 = !DILocation(line: 507, column: 2, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !1695, file: !1645, line: 507, column: 2)
!11017 = !DILocation(line: 512, column: 2, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !1695, file: !1645, line: 512, column: 2)
!11019 = !DILocation(line: 516, column: 2, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !1695, file: !1645, line: 516, column: 2)
!11021 = !DILocation(line: 523, column: 2, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !1695, file: !1645, line: 523, column: 2)
!11023 = !DILocation(line: 527, column: 2, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !1695, file: !1645, line: 527, column: 2)
!11025 = !DILocation(line: 607, column: 1, scope: !1695)
!11026 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !1645, file: !1645, line: 112, type: !10944, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !11027)
!11027 = !{!11028, !11029}
!11028 = !DILocalVariable(name: "line", arg: 1, scope: !11026, file: !1645, line: 112, type: !103)
!11029 = !DILocalVariable(name: "irqnum", scope: !11026, file: !1645, line: 114, type: !103)
!11030 = !DILocation(line: 0, scope: !11026)
!11031 = !DILocation(line: 121, column: 11, scope: !11026)
!11032 = !DILocation(line: 130, column: 26, scope: !11026)
!11033 = !DILocation(line: 130, column: 2, scope: !11026)
!11034 = !DILocation(line: 134, column: 2, scope: !11026)
!11035 = !DILocation(line: 135, column: 1, scope: !11026)
!11036 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !10955, file: !10955, line: 274, type: !7896, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !11037)
!11037 = !{!11038}
!11038 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !11036, file: !10955, line: 274, type: !108)
!11039 = !DILocation(line: 0, scope: !11036)
!11040 = !DILocation(line: 276, column: 3, scope: !11036)
!11041 = !DILocation(line: 277, column: 1, scope: !11036)
!11042 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !1645, file: !1645, line: 137, type: !10944, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !11043)
!11043 = !{!11044}
!11044 = !DILocalVariable(name: "line", arg: 1, scope: !11042, file: !1645, line: 137, type: !103)
!11045 = !DILocation(line: 0, scope: !11042)
!11046 = !DILocation(line: 141, column: 11, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11042, file: !1645, line: 141, column: 6)
!11048 = !DILocation(line: 141, column: 6, scope: !11042)
!11049 = !DILocation(line: 145, column: 28, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11047, file: !1645, line: 141, column: 17)
!11051 = !DILocation(line: 145, column: 3, scope: !11050)
!11052 = !DILocation(line: 147, column: 2, scope: !11050)
!11053 = !DILocation(line: 151, column: 1, scope: !11042)
!11054 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !10955, file: !10955, line: 322, type: !7896, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !11055)
!11055 = !{!11056}
!11056 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !11054, file: !10955, line: 322, type: !108)
!11057 = !DILocation(line: 0, scope: !11054)
!11058 = !DILocation(line: 324, column: 3, scope: !11054)
!11059 = !DILocation(line: 325, column: 1, scope: !11054)
!11060 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !1645, file: !1645, line: 202, type: !11061, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !11063)
!11061 = !DISubroutineType(types: !11062)
!11062 = !{null, !103, !103}
!11063 = !{!11064, !11065}
!11064 = !DILocalVariable(name: "line", arg: 1, scope: !11060, file: !1645, line: 202, type: !103)
!11065 = !DILocalVariable(name: "trigger", arg: 2, scope: !11060, file: !1645, line: 202, type: !103)
!11066 = !DILocation(line: 0, scope: !11060)
!11067 = !DILocation(line: 211, column: 2, scope: !11060)
!11068 = !DILocation(line: 213, column: 36, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11060, file: !1645, line: 211, column: 19)
!11070 = !DILocation(line: 213, column: 3, scope: !11069)
!11071 = !DILocation(line: 214, column: 3, scope: !11069)
!11072 = !DILocation(line: 215, column: 3, scope: !11069)
!11073 = !DILocation(line: 217, column: 35, scope: !11069)
!11074 = !DILocation(line: 217, column: 3, scope: !11069)
!11075 = !DILocation(line: 218, column: 3, scope: !11069)
!11076 = !DILocation(line: 219, column: 3, scope: !11069)
!11077 = !DILocation(line: 221, column: 36, scope: !11069)
!11078 = !DILocation(line: 221, column: 3, scope: !11069)
!11079 = !DILocation(line: 222, column: 3, scope: !11069)
!11080 = !DILocation(line: 223, column: 3, scope: !11069)
!11081 = !DILocation(line: 225, column: 35, scope: !11069)
!11082 = !DILocation(line: 225, column: 3, scope: !11069)
!11083 = !DILocation(line: 226, column: 3, scope: !11069)
!11084 = !DILocation(line: 227, column: 3, scope: !11069)
!11085 = !DILocation(line: 232, column: 1, scope: !11060)
!11086 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !10955, file: !10955, line: 618, type: !7896, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !11087)
!11087 = !{!11088}
!11088 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !11086, file: !10955, line: 618, type: !108)
!11089 = !DILocation(line: 0, scope: !11086)
!11090 = !DILocation(line: 620, column: 3, scope: !11086)
!11091 = !DILocation(line: 622, column: 1, scope: !11086)
!11092 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !10955, file: !10955, line: 754, type: !7896, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !11093)
!11093 = !{!11094}
!11094 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !11092, file: !10955, line: 754, type: !108)
!11095 = !DILocation(line: 0, scope: !11092)
!11096 = !DILocation(line: 756, column: 3, scope: !11092)
!11097 = !DILocation(line: 757, column: 1, scope: !11092)
!11098 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !10955, file: !10955, line: 572, type: !7896, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !11099)
!11099 = !{!11100}
!11100 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !11098, file: !10955, line: 572, type: !108)
!11101 = !DILocation(line: 0, scope: !11098)
!11102 = !DILocation(line: 574, column: 3, scope: !11098)
!11103 = !DILocation(line: 576, column: 1, scope: !11098)
!11104 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !10955, file: !10955, line: 710, type: !7896, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !11105)
!11105 = !{!11106}
!11106 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !11104, file: !10955, line: 710, type: !108)
!11107 = !DILocation(line: 0, scope: !11104)
!11108 = !DILocation(line: 712, column: 3, scope: !11104)
!11109 = !DILocation(line: 713, column: 1, scope: !11104)
!11110 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !1645, file: !1645, line: 433, type: !11111, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !11113)
!11111 = !DISubroutineType(types: !11112)
!11112 = !{!103, !103, !1685, !102}
!11113 = !{!11114, !11115, !11116, !11117, !11119}
!11114 = !DILocalVariable(name: "line", arg: 1, scope: !11110, file: !1645, line: 433, type: !103)
!11115 = !DILocalVariable(name: "cb", arg: 2, scope: !11110, file: !1645, line: 433, type: !1685)
!11116 = !DILocalVariable(name: "arg", arg: 3, scope: !11110, file: !1645, line: 433, type: !102)
!11117 = !DILocalVariable(name: "dev", scope: !11110, file: !1645, line: 435, type: !11118)
!11118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1674)
!11119 = !DILocalVariable(name: "data", scope: !11110, file: !1645, line: 436, type: !10909)
!11120 = !DILocation(line: 0, scope: !11110)
!11121 = !DILocation(line: 438, column: 21, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11110, file: !1645, line: 438, column: 6)
!11123 = !DILocation(line: 438, column: 6, scope: !11122)
!11124 = !DILocation(line: 438, column: 6, scope: !11110)
!11125 = !DILocation(line: 442, column: 20, scope: !11110)
!11126 = !DILocation(line: 443, column: 17, scope: !11110)
!11127 = !DILocation(line: 443, column: 22, scope: !11110)
!11128 = !DILocation(line: 445, column: 2, scope: !11110)
!11129 = !DILocation(line: 446, column: 1, scope: !11110)
!11130 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !1645, file: !1645, line: 448, type: !10944, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1573, retainedNodes: !11131)
!11131 = !{!11132, !11133, !11134}
!11132 = !DILocalVariable(name: "line", arg: 1, scope: !11130, file: !1645, line: 448, type: !103)
!11133 = !DILocalVariable(name: "dev", scope: !11130, file: !1645, line: 450, type: !11118)
!11134 = !DILocalVariable(name: "data", scope: !11130, file: !1645, line: 451, type: !10909)
!11135 = !DILocation(line: 0, scope: !11130)
!11136 = !DILocation(line: 453, column: 17, scope: !11130)
!11137 = !DILocation(line: 453, column: 20, scope: !11130)
!11138 = !DILocation(line: 454, column: 17, scope: !11130)
!11139 = !DILocation(line: 454, column: 22, scope: !11130)
!11140 = !DILocation(line: 455, column: 1, scope: !11130)
!11141 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1797, file: !1797, line: 183, type: !1835, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !11142)
!11142 = !{!11143, !11144, !11145, !11146, !11147}
!11143 = !DILocalVariable(name: "dev", arg: 1, scope: !11141, file: !1797, line: 183, type: !1826)
!11144 = !DILocalVariable(name: "sub_system", arg: 2, scope: !11141, file: !1797, line: 184, type: !1837)
!11145 = !DILocalVariable(name: "pclken", scope: !11141, file: !1797, line: 186, type: !1787)
!11146 = !DILocalVariable(name: "reg", scope: !11141, file: !1797, line: 187, type: !3854)
!11147 = !DILocalVariable(name: "reg_val", scope: !11141, file: !1797, line: 188, type: !108)
!11148 = !DILocation(line: 0, scope: !11141)
!11149 = !DILocation(line: 192, column: 6, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11141, file: !1797, line: 192, column: 6)
!11151 = !DILocation(line: 192, column: 6, scope: !11141)
!11152 = !DILocation(line: 197, column: 52, scope: !11141)
!11153 = !DILocation(line: 197, column: 8, scope: !11141)
!11154 = !DILocation(line: 198, column: 12, scope: !11141)
!11155 = !DILocation(line: 199, column: 21, scope: !11141)
!11156 = !DILocation(line: 199, column: 10, scope: !11141)
!11157 = !DILocation(line: 200, column: 7, scope: !11141)
!11158 = !DILocation(line: 202, column: 2, scope: !11141)
!11159 = !DILocation(line: 203, column: 1, scope: !11141)
!11160 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1797, file: !1797, line: 205, type: !1835, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !11161)
!11161 = !{!11162, !11163, !11164, !11165, !11166}
!11162 = !DILocalVariable(name: "dev", arg: 1, scope: !11160, file: !1797, line: 205, type: !1826)
!11163 = !DILocalVariable(name: "sub_system", arg: 2, scope: !11160, file: !1797, line: 206, type: !1837)
!11164 = !DILocalVariable(name: "pclken", scope: !11160, file: !1797, line: 208, type: !1787)
!11165 = !DILocalVariable(name: "reg", scope: !11160, file: !1797, line: 209, type: !3854)
!11166 = !DILocalVariable(name: "reg_val", scope: !11160, file: !1797, line: 210, type: !108)
!11167 = !DILocation(line: 0, scope: !11160)
!11168 = !DILocation(line: 214, column: 6, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11160, file: !1797, line: 214, column: 6)
!11170 = !DILocation(line: 214, column: 6, scope: !11160)
!11171 = !DILocation(line: 219, column: 52, scope: !11160)
!11172 = !DILocation(line: 219, column: 8, scope: !11160)
!11173 = !DILocation(line: 220, column: 12, scope: !11160)
!11174 = !DILocation(line: 221, column: 22, scope: !11160)
!11175 = !DILocation(line: 221, column: 13, scope: !11160)
!11176 = !DILocation(line: 221, column: 10, scope: !11160)
!11177 = !DILocation(line: 222, column: 7, scope: !11160)
!11178 = !DILocation(line: 224, column: 2, scope: !11160)
!11179 = !DILocation(line: 225, column: 1, scope: !11160)
!11180 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1797, file: !1797, line: 262, type: !1851, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !11181)
!11181 = !{!11182, !11183, !11184, !11185, !11186, !11187, !11188}
!11182 = !DILocalVariable(name: "clock", arg: 1, scope: !11180, file: !1797, line: 262, type: !1826)
!11183 = !DILocalVariable(name: "sub_system", arg: 2, scope: !11180, file: !1797, line: 263, type: !1837)
!11184 = !DILocalVariable(name: "rate", arg: 3, scope: !11180, file: !1797, line: 264, type: !1793)
!11185 = !DILocalVariable(name: "pclken", scope: !11180, file: !1797, line: 266, type: !1787)
!11186 = !DILocalVariable(name: "ahb_clock", scope: !11180, file: !1797, line: 273, type: !108)
!11187 = !DILocalVariable(name: "apb1_clock", scope: !11180, file: !1797, line: 274, type: !108)
!11188 = !DILocalVariable(name: "apb2_clock", scope: !11180, file: !1797, line: 276, type: !108)
!11189 = !DILocation(line: 0, scope: !11180)
!11190 = !DILocation(line: 273, column: 23, scope: !11180)
!11191 = !DILocation(line: 299, column: 18, scope: !11180)
!11192 = !DILocation(line: 299, column: 2, scope: !11180)
!11193 = !DILocation(line: 374, column: 3, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11180, file: !1797, line: 299, column: 23)
!11195 = !DILocation(line: 379, column: 3, scope: !11194)
!11196 = !DILocation(line: 389, column: 3, scope: !11194)
!11197 = !DILocation(line: 0, scope: !11194)
!11198 = !DILocation(line: 396, column: 1, scope: !11180)
!11199 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1797, file: !1797, line: 227, type: !1867, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !11200)
!11200 = !{!11201, !11202, !11203, !11204, !11205, !11206, !11207, !11208}
!11201 = !DILocalVariable(name: "dev", arg: 1, scope: !11199, file: !1797, line: 227, type: !1826)
!11202 = !DILocalVariable(name: "sub_system", arg: 2, scope: !11199, file: !1797, line: 228, type: !1837)
!11203 = !DILocalVariable(name: "data", arg: 3, scope: !11199, file: !1797, line: 229, type: !102)
!11204 = !DILocalVariable(name: "pclken", scope: !11199, file: !1797, line: 233, type: !1787)
!11205 = !DILocalVariable(name: "reg", scope: !11199, file: !1797, line: 234, type: !3854)
!11206 = !DILocalVariable(name: "reg_val", scope: !11199, file: !1797, line: 235, type: !108)
!11207 = !DILocalVariable(name: "dt_val", scope: !11199, file: !1797, line: 235, type: !108)
!11208 = !DILocalVariable(name: "err", scope: !11199, file: !1797, line: 236, type: !103)
!11209 = !DILocation(line: 0, scope: !11199)
!11210 = !DILocation(line: 241, column: 30, scope: !11199)
!11211 = !DILocation(line: 241, column: 8, scope: !11199)
!11212 = !DILocation(line: 242, column: 10, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11199, file: !1797, line: 242, column: 6)
!11214 = !DILocation(line: 242, column: 6, scope: !11199)
!11215 = !DILocation(line: 247, column: 11, scope: !11199)
!11216 = !DILocation(line: 248, column: 6, scope: !11199)
!11217 = !DILocation(line: 247, column: 44, scope: !11199)
!11218 = !DILocation(line: 250, column: 6, scope: !11199)
!11219 = !DILocation(line: 249, column: 52, scope: !11199)
!11220 = !DILocation(line: 249, column: 8, scope: !11199)
!11221 = !DILocation(line: 251, column: 12, scope: !11199)
!11222 = !DILocation(line: 252, column: 10, scope: !11199)
!11223 = !DILocation(line: 253, column: 7, scope: !11199)
!11224 = !DILocation(line: 255, column: 2, scope: !11199)
!11225 = !DILocation(line: 260, column: 1, scope: !11199)
!11226 = distinct !DISubprogram(name: "enabled_clock", scope: !1797, file: !1797, line: 100, type: !11227, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !11229)
!11227 = !DISubroutineType(types: !11228)
!11228 = !{!103, !108}
!11229 = !{!11230, !11231}
!11230 = !DILocalVariable(name: "src_clk", arg: 1, scope: !11226, file: !1797, line: 100, type: !108)
!11231 = !DILocalVariable(name: "r", scope: !11226, file: !1797, line: 102, type: !103)
!11232 = !DILocation(line: 0, scope: !11226)
!11233 = !DILocation(line: 104, column: 2, scope: !11226)
!11234 = !DILocation(line: 180, column: 2, scope: !11226)
!11235 = !DILocation(line: 181, column: 1, scope: !11226)
!11236 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1797, file: !1797, line: 641, type: !1824, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !11237)
!11237 = !{!11238, !11239, !11240}
!11238 = !DILocalVariable(name: "dev", arg: 1, scope: !11236, file: !1797, line: 641, type: !1826)
!11239 = !DILocalVariable(name: "old_flash_freq", scope: !11236, file: !1797, line: 664, type: !108)
!11240 = !DILocalVariable(name: "new_flash_freq", scope: !11236, file: !1797, line: 665, type: !108)
!11241 = !DILocation(line: 0, scope: !11236)
!11242 = !DILocation(line: 646, column: 2, scope: !11236)
!11243 = !DILocation(line: 667, column: 19, scope: !11236)
!11244 = !DILocation(line: 674, column: 21, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11236, file: !1797, line: 674, column: 6)
!11246 = !DILocation(line: 674, column: 6, scope: !11236)
!11247 = !DILocation(line: 675, column: 3, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11245, file: !1797, line: 674, column: 59)
!11249 = !DILocation(line: 676, column: 2, scope: !11248)
!11250 = !DILocation(line: 680, column: 2, scope: !11236)
!11251 = !DILocation(line: 683, column: 2, scope: !11236)
!11252 = !DILocation(line: 690, column: 3, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11254, file: !1797, line: 689, column: 9)
!11254 = distinct !DILexicalBlock(scope: !11236, file: !1797, line: 685, column: 6)
!11255 = !DILocation(line: 695, column: 2, scope: !11236)
!11256 = !DILocation(line: 696, column: 2, scope: !11236)
!11257 = !DILocation(line: 696, column: 9, scope: !11236)
!11258 = !DILocation(line: 696, column: 34, scope: !11236)
!11259 = distinct !{!11259, !11256, !11260}
!11260 = !DILocation(line: 697, column: 2, scope: !11236)
!11261 = !DILocation(line: 720, column: 21, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11236, file: !1797, line: 720, column: 6)
!11263 = !DILocation(line: 720, column: 6, scope: !11236)
!11264 = !DILocation(line: 721, column: 3, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11262, file: !1797, line: 720, column: 60)
!11266 = !DILocation(line: 722, column: 2, scope: !11265)
!11267 = !DILocation(line: 725, column: 18, scope: !11236)
!11268 = !DILocation(line: 728, column: 2, scope: !11236)
!11269 = !DILocation(line: 730, column: 2, scope: !11236)
!11270 = !DILocation(line: 745, column: 2, scope: !11236)
!11271 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !11272, file: !11272, line: 995, type: !9213, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !2894)
!11272 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11273 = !DILocation(line: 997, column: 21, scope: !11271)
!11274 = !DILocation(line: 997, column: 3, scope: !11271)
!11275 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1797, file: !1797, line: 507, type: !333, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !2894)
!11276 = !DILocation(line: 534, column: 7, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11278, file: !1797, line: 534, column: 7)
!11278 = distinct !DILexicalBlock(scope: !11279, file: !1797, line: 532, column: 37)
!11279 = distinct !DILexicalBlock(scope: !11275, file: !1797, line: 532, column: 6)
!11280 = !DILocation(line: 534, column: 28, scope: !11277)
!11281 = !DILocation(line: 534, column: 7, scope: !11278)
!11282 = !DILocation(line: 536, column: 4, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11277, file: !1797, line: 534, column: 34)
!11284 = !DILocation(line: 537, column: 4, scope: !11283)
!11285 = !DILocation(line: 537, column: 11, scope: !11283)
!11286 = !DILocation(line: 537, column: 32, scope: !11283)
!11287 = distinct !{!11287, !11284, !11288}
!11288 = !DILocation(line: 539, column: 4, scope: !11283)
!11289 = !DILocation(line: 583, column: 3, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !1797, line: 577, column: 37)
!11291 = distinct !DILexicalBlock(scope: !11275, file: !1797, line: 577, column: 6)
!11292 = !DILocation(line: 584, column: 3, scope: !11290)
!11293 = !DILocation(line: 584, column: 10, scope: !11290)
!11294 = !DILocation(line: 584, column: 31, scope: !11290)
!11295 = distinct !{!11295, !11292, !11296}
!11296 = !DILocation(line: 585, column: 3, scope: !11290)
!11297 = !DILocation(line: 627, column: 1, scope: !11275)
!11298 = distinct !DISubprogram(name: "set_up_plls", scope: !1797, file: !1797, line: 448, type: !333, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !2894)
!11299 = !DILocation(line: 460, column: 6, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11298, file: !1797, line: 460, column: 6)
!11301 = !DILocation(line: 460, column: 31, scope: !11300)
!11302 = !DILocation(line: 460, column: 6, scope: !11298)
!11303 = !DILocation(line: 461, column: 3, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11300, file: !1797, line: 460, column: 67)
!11305 = !DILocation(line: 462, column: 3, scope: !11304)
!11306 = !DILocation(line: 463, column: 2, scope: !11304)
!11307 = !DILocation(line: 464, column: 2, scope: !11298)
!11308 = !DILocation(line: 496, column: 2, scope: !11298)
!11309 = !DILocation(line: 499, column: 2, scope: !11298)
!11310 = !DILocation(line: 500, column: 2, scope: !11298)
!11311 = !DILocation(line: 500, column: 9, scope: !11298)
!11312 = !DILocation(line: 500, column: 30, scope: !11298)
!11313 = distinct !{!11313, !11310, !11314}
!11314 = !DILocation(line: 502, column: 2, scope: !11298)
!11315 = !DILocation(line: 505, column: 1, scope: !11298)
!11316 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !11272, file: !11272, line: 944, type: !7896, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !11317)
!11317 = !{!11318}
!11318 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11316, file: !11272, line: 944, type: !108)
!11319 = !DILocation(line: 0, scope: !11316)
!11320 = !DILocation(line: 946, column: 3, scope: !11316)
!11321 = !DILocation(line: 947, column: 1, scope: !11316)
!11322 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !11272, file: !11272, line: 910, type: !7896, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !11323)
!11323 = !{!11324}
!11324 = !DILocalVariable(name: "Source", arg: 1, scope: !11322, file: !11272, line: 910, type: !108)
!11325 = !DILocation(line: 0, scope: !11322)
!11326 = !DILocation(line: 912, column: 3, scope: !11322)
!11327 = !DILocation(line: 913, column: 1, scope: !11322)
!11328 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !11272, file: !11272, line: 924, type: !9213, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !2894)
!11329 = !DILocation(line: 926, column: 21, scope: !11328)
!11330 = !DILocation(line: 926, column: 3, scope: !11328)
!11331 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !11272, file: !11272, line: 960, type: !7896, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !11332)
!11332 = !{!11333}
!11333 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11331, file: !11272, line: 960, type: !108)
!11334 = !DILocation(line: 0, scope: !11331)
!11335 = !DILocation(line: 962, column: 3, scope: !11331)
!11336 = !DILocation(line: 963, column: 1, scope: !11331)
!11337 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !11272, file: !11272, line: 976, type: !7896, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !11338)
!11338 = !{!11339}
!11339 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11337, file: !11272, line: 976, type: !108)
!11340 = !DILocation(line: 0, scope: !11337)
!11341 = !DILocation(line: 978, column: 3, scope: !11337)
!11342 = !DILocation(line: 979, column: 1, scope: !11337)
!11343 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1797, file: !1797, line: 409, type: !333, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !2894)
!11344 = !DILocation(line: 412, column: 6, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11343, file: !1797, line: 412, column: 6)
!11346 = !DILocation(line: 412, column: 27, scope: !11345)
!11347 = !DILocation(line: 412, column: 6, scope: !11343)
!11348 = !DILocation(line: 414, column: 3, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11345, file: !1797, line: 412, column: 33)
!11350 = !DILocation(line: 415, column: 3, scope: !11349)
!11351 = !DILocation(line: 415, column: 10, scope: !11349)
!11352 = !DILocation(line: 415, column: 31, scope: !11349)
!11353 = distinct !{!11353, !11350, !11354}
!11354 = !DILocation(line: 417, column: 3, scope: !11349)
!11355 = !DILocation(line: 421, column: 2, scope: !11343)
!11356 = !DILocation(line: 422, column: 2, scope: !11343)
!11357 = !DILocation(line: 422, column: 9, scope: !11343)
!11358 = !DILocation(line: 422, column: 34, scope: !11343)
!11359 = distinct !{!11359, !11356, !11360}
!11360 = !DILocation(line: 423, column: 2, scope: !11343)
!11361 = !DILocation(line: 424, column: 1, scope: !11343)
!11362 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !11272, file: !11272, line: 1180, type: !333, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !2894)
!11363 = !DILocation(line: 1182, column: 3, scope: !11362)
!11364 = !DILocation(line: 1183, column: 1, scope: !11362)
!11365 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !11272, file: !11272, line: 1169, type: !333, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !2894)
!11366 = !DILocation(line: 1171, column: 3, scope: !11365)
!11367 = !DILocation(line: 1172, column: 1, scope: !11365)
!11368 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !11272, file: !11272, line: 1190, type: !9213, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !2894)
!11369 = !DILocation(line: 1192, column: 12, scope: !11368)
!11370 = !DILocation(line: 1192, column: 11, scope: !11368)
!11371 = !DILocation(line: 1192, column: 3, scope: !11368)
!11372 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !11272, file: !11272, line: 612, type: !9213, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !2894)
!11373 = !DILocation(line: 614, column: 12, scope: !11372)
!11374 = !DILocation(line: 614, column: 11, scope: !11372)
!11375 = !DILocation(line: 614, column: 3, scope: !11372)
!11376 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !11272, file: !11272, line: 592, type: !333, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !2894)
!11377 = !DILocation(line: 594, column: 3, scope: !11376)
!11378 = !DILocation(line: 595, column: 1, scope: !11376)
!11379 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !11272, file: !11272, line: 760, type: !333, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !2894)
!11380 = !DILocation(line: 762, column: 3, scope: !11379)
!11381 = !DILocation(line: 763, column: 1, scope: !11379)
!11382 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !11272, file: !11272, line: 780, type: !9213, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !2894)
!11383 = !DILocation(line: 782, column: 12, scope: !11382)
!11384 = !DILocation(line: 782, column: 11, scope: !11382)
!11385 = !DILocation(line: 782, column: 3, scope: !11382)
!11386 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !11387, file: !11387, line: 48, type: !9213, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3794, retainedNodes: !2894)
!11387 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11388 = !DILocation(line: 51, column: 3, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11390, file: !11387, line: 50, column: 37)
!11390 = distinct !DILexicalBlock(scope: !11386, file: !11387, line: 50, column: 6)
!11391 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !11387, file: !11387, line: 64, type: !333, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3794, retainedNodes: !2894)
!11392 = !DILocation(line: 66, column: 2, scope: !11391)
!11393 = !DILocation(line: 69, column: 1, scope: !11391)
!11394 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !11272, file: !11272, line: 1219, type: !11395, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3794, retainedNodes: !11397)
!11395 = !DISubroutineType(types: !11396)
!11396 = !{null, !108, !108, !108}
!11397 = !{!11398, !11399, !11400}
!11398 = !DILocalVariable(name: "Source", arg: 1, scope: !11394, file: !11272, line: 1219, type: !108)
!11399 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !11394, file: !11272, line: 1219, type: !108)
!11400 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !11394, file: !11272, line: 1219, type: !108)
!11401 = !DILocation(line: 0, scope: !11394)
!11402 = !DILocation(line: 1221, column: 3, scope: !11394)
!11403 = !DILocation(line: 1222, column: 1, scope: !11394)
!11404 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !11387, file: !11387, line: 75, type: !9213, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3794, retainedNodes: !2894)
!11405 = !DILocation(line: 77, column: 9, scope: !11404)
!11406 = !DILocation(line: 77, column: 2, scope: !11404)
!11407 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !11387, file: !11387, line: 87, type: !333, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3794, retainedNodes: !2894)
!11408 = !DILocation(line: 93, column: 2, scope: !11407)
!11409 = !DILocation(line: 95, column: 1, scope: !11407)
!11410 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !7895, file: !7895, line: 895, type: !7896, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3794, retainedNodes: !11411)
!11411 = !{!11412, !11413}
!11412 = !DILocalVariable(name: "Periphs", arg: 1, scope: !11410, file: !7895, line: 895, type: !108)
!11413 = !DILocalVariable(name: "tmpreg", scope: !11410, file: !7895, line: 897, type: !813)
!11414 = !DILocation(line: 0, scope: !11410)
!11415 = !DILocation(line: 897, column: 3, scope: !11410)
!11416 = !DILocation(line: 897, column: 17, scope: !11410)
!11417 = !DILocation(line: 898, column: 3, scope: !11410)
!11418 = !DILocation(line: 900, column: 12, scope: !11410)
!11419 = !DILocation(line: 900, column: 10, scope: !11410)
!11420 = !DILocation(line: 901, column: 9, scope: !11410)
!11421 = !DILocation(line: 902, column: 1, scope: !11410)
!11422 = distinct !DISubprogram(name: "uart_console_init", scope: !1928, file: !1928, line: 588, type: !1905, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !11423)
!11423 = !{!11424}
!11424 = !DILocalVariable(name: "arg", arg: 1, scope: !11422, file: !1928, line: 588, type: !1883)
!11425 = !DILocation(line: 0, scope: !11422)
!11426 = !DILocation(line: 593, column: 7, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11422, file: !1928, line: 593, column: 6)
!11428 = !DILocation(line: 593, column: 6, scope: !11422)
!11429 = !DILocation(line: 597, column: 2, scope: !11422)
!11430 = !DILocation(line: 599, column: 2, scope: !11422)
!11431 = !DILocation(line: 600, column: 1, scope: !11422)
!11432 = distinct !DISubprogram(name: "device_is_ready", scope: !10091, file: !10091, line: 47, type: !11433, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !11435)
!11433 = !DISubroutineType(types: !11434)
!11434 = !{!119, !1883}
!11435 = !{!11436}
!11436 = !DILocalVariable(name: "dev", arg: 1, scope: !11432, file: !10091, line: 47, type: !1883)
!11437 = !DILocation(line: 0, scope: !11432)
!11438 = !DILocation(line: 55, column: 2, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11432, file: !10091, line: 55, column: 2)
!11440 = !{i64 2152424361}
!11441 = !DILocation(line: 56, column: 9, scope: !11432)
!11442 = !DILocation(line: 56, column: 2, scope: !11432)
!11443 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1928, file: !1928, line: 573, type: !333, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !2894)
!11444 = !DILocation(line: 576, column: 2, scope: !11443)
!11445 = !DILocation(line: 579, column: 2, scope: !11443)
!11446 = !DILocation(line: 581, column: 1, scope: !11443)
!11447 = distinct !DISubprogram(name: "console_out", scope: !1928, file: !1928, line: 77, type: !800, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !11448)
!11448 = !{!11449}
!11449 = !DILocalVariable(name: "c", arg: 1, scope: !11447, file: !1928, line: 77, type: !103)
!11450 = !DILocation(line: 0, scope: !11447)
!11451 = !DILocation(line: 89, column: 11, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11447, file: !1928, line: 89, column: 6)
!11453 = !DILocation(line: 89, column: 6, scope: !11447)
!11454 = !DILocation(line: 90, column: 3, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11452, file: !1928, line: 89, column: 17)
!11456 = !DILocation(line: 91, column: 2, scope: !11455)
!11457 = !DILocation(line: 92, column: 34, scope: !11447)
!11458 = !DILocation(line: 92, column: 2, scope: !11447)
!11459 = !DILocation(line: 94, column: 2, scope: !11447)
!11460 = distinct !DISubprogram(name: "uart_poll_out", scope: !11461, file: !11461, line: 95, type: !1901, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !11462)
!11461 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/runtime_obs_registration")
!11462 = !{!11463, !11464}
!11463 = !DILocalVariable(name: "dev", arg: 1, scope: !11460, file: !11461, line: 95, type: !1883)
!11464 = !DILocalVariable(name: "out_char", arg: 2, scope: !11460, file: !11461, line: 95, type: !165)
!11465 = !DILocation(line: 0, scope: !11460)
!11466 = !DILocation(line: 105, column: 2, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11460, file: !11461, line: 105, column: 2)
!11468 = !{i64 2152507752}
!11469 = !DILocation(line: 106, column: 2, scope: !11460)
!11470 = !DILocation(line: 107, column: 1, scope: !11460)
!11471 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1877, file: !1877, line: 574, type: !1901, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !11472)
!11472 = !{!11473, !11474, !11475}
!11473 = !DILocalVariable(name: "dev", arg: 1, scope: !11471, file: !1877, line: 574, type: !1883)
!11474 = !DILocalVariable(name: "out_char", arg: 2, scope: !11471, file: !1877, line: 575, type: !165)
!11475 = !DILocalVariable(name: "api", scope: !11471, file: !1877, line: 577, type: !1874)
!11476 = !DILocation(line: 0, scope: !11471)
!11477 = !DILocation(line: 578, column: 40, scope: !11471)
!11478 = !DILocation(line: 580, column: 7, scope: !11471)
!11479 = !DILocation(line: 580, column: 2, scope: !11471)
!11480 = !DILocation(line: 581, column: 1, scope: !11471)
!11481 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !846, file: !846, line: 730, type: !11433, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !11482)
!11482 = !{!11483}
!11483 = !DILocalVariable(name: "dev", arg: 1, scope: !11481, file: !846, line: 730, type: !1883)
!11484 = !DILocation(line: 0, scope: !11481)
!11485 = !DILocation(line: 732, column: 9, scope: !11481)
!11486 = !DILocation(line: 732, column: 2, scope: !11481)
!11487 = distinct !DISubprogram(name: "uart_register_input", scope: !1928, file: !1928, line: 560, type: !11488, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !11535)
!11488 = !DISubroutineType(types: !11489)
!11489 = !{null, !11490, !11490, !11532}
!11490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11491, size: 32)
!11491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !124, line: 2208, size: 160, elements: !11492)
!11492 = !{!11493}
!11493 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !11491, file: !124, line: 2209, baseType: !11494, size: 160)
!11494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !124, line: 1709, size: 160, elements: !11495)
!11495 = !{!11496, !11509, !11513}
!11496 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !11494, file: !124, line: 1710, baseType: !11497, size: 64)
!11497 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !11498, line: 46, baseType: !11499)
!11498 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !11498, line: 41, size: 64, elements: !11500)
!11500 = !{!11501, !11508}
!11501 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11499, file: !11498, line: 42, baseType: !11502, size: 32)
!11502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11503, size: 32)
!11503 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !11498, line: 39, baseType: !11504)
!11504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !11498, line: 35, size: 32, elements: !11505)
!11505 = !{!11506}
!11506 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !11504, file: !11498, line: 36, baseType: !11507, size: 32)
!11507 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !11498, line: 32, baseType: !108)
!11508 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11499, file: !11498, line: 43, baseType: !11502, size: 32, offset: 32)
!11509 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11494, file: !124, line: 1711, baseType: !11510, size: 32, offset: 64)
!11510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !11511)
!11511 = !{!11512}
!11512 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !11510, file: !149, line: 52, baseType: !22, size: 32)
!11513 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11494, file: !124, line: 1712, baseType: !11514, size: 64, offset: 96)
!11514 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !11515)
!11515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !11516)
!11516 = !{!11517}
!11517 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11515, file: !128, line: 232, baseType: !11518, size: 64)
!11518 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !11519)
!11519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !11520)
!11520 = !{!11521, !11527}
!11521 = !DIDerivedType(tag: DW_TAG_member, scope: !11519, file: !133, line: 38, baseType: !11522, size: 32)
!11522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11519, file: !133, line: 38, size: 32, elements: !11523)
!11523 = !{!11524, !11526}
!11524 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11522, file: !133, line: 39, baseType: !11525, size: 32)
!11525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11519, size: 32)
!11526 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11522, file: !133, line: 40, baseType: !11525, size: 32)
!11527 = !DIDerivedType(tag: DW_TAG_member, scope: !11519, file: !133, line: 42, baseType: !11528, size: 32, offset: 32)
!11528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11519, file: !133, line: 42, size: 32, elements: !11529)
!11529 = !{!11530, !11531}
!11530 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11528, file: !133, line: 43, baseType: !11525, size: 32)
!11531 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11528, file: !133, line: 44, baseType: !11525, size: 32)
!11532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11533, size: 32)
!11533 = !DISubroutineType(types: !11534)
!11534 = !{!164, !157, !164}
!11535 = !{!11536, !11537, !11538}
!11536 = !DILocalVariable(name: "avail", arg: 1, scope: !11487, file: !1928, line: 560, type: !11490)
!11537 = !DILocalVariable(name: "lines", arg: 2, scope: !11487, file: !1928, line: 560, type: !11490)
!11538 = !DILocalVariable(name: "completion", arg: 3, scope: !11487, file: !1928, line: 561, type: !11532)
!11539 = !DILocation(line: 0, scope: !11487)
!11540 = !DILocation(line: 566, column: 1, scope: !11487)
!11541 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !2087, file: !2087, line: 523, type: !1953, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11542)
!11542 = !{!11543, !11544, !11545, !11546, !11547}
!11543 = !DILocalVariable(name: "dev", arg: 1, scope: !11541, file: !2087, line: 523, type: !1955)
!11544 = !DILocalVariable(name: "pin", arg: 2, scope: !11541, file: !2087, line: 524, type: !1145)
!11545 = !DILocalVariable(name: "flags", arg: 3, scope: !11541, file: !2087, line: 524, type: !1146)
!11546 = !DILocalVariable(name: "err", scope: !11541, file: !2087, line: 526, type: !103)
!11547 = !DILocalVariable(name: "pincfg", scope: !11541, file: !2087, line: 527, type: !103)
!11548 = !DILocation(line: 0, scope: !11541)
!11549 = !DILocation(line: 527, column: 2, scope: !11541)
!11550 = !DILocation(line: 532, column: 8, scope: !11541)
!11551 = !DILocation(line: 533, column: 10, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11541, file: !2087, line: 533, column: 6)
!11553 = !DILocation(line: 533, column: 6, scope: !11541)
!11554 = !DILocation(line: 543, column: 13, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11541, file: !2087, line: 543, column: 6)
!11556 = !DILocation(line: 543, column: 28, scope: !11555)
!11557 = !DILocation(line: 543, column: 6, scope: !11541)
!11558 = !DILocation(line: 544, column: 14, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11560, file: !2087, line: 544, column: 7)
!11560 = distinct !DILexicalBlock(scope: !11555, file: !2087, line: 543, column: 34)
!11561 = !DILocation(line: 544, column: 39, scope: !11559)
!11562 = !DILocation(line: 544, column: 7, scope: !11560)
!11563 = !DILocation(line: 545, column: 38, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11559, file: !2087, line: 544, column: 45)
!11565 = !DILocation(line: 545, column: 4, scope: !11564)
!11566 = !DILocation(line: 546, column: 3, scope: !11564)
!11567 = !DILocation(line: 546, column: 21, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11559, file: !2087, line: 546, column: 14)
!11569 = !DILocation(line: 546, column: 45, scope: !11568)
!11570 = !DILocation(line: 546, column: 14, scope: !11559)
!11571 = !DILocation(line: 547, column: 40, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11568, file: !2087, line: 546, column: 51)
!11573 = !DILocation(line: 547, column: 4, scope: !11572)
!11574 = !DILocation(line: 548, column: 3, scope: !11572)
!11575 = !DILocation(line: 551, column: 32, scope: !11541)
!11576 = !DILocation(line: 551, column: 37, scope: !11541)
!11577 = !DILocation(line: 551, column: 2, scope: !11541)
!11578 = !DILocation(line: 554, column: 6, scope: !11541)
!11579 = !DILocation(line: 562, column: 1, scope: !11541)
!11580 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !2087, file: !2087, line: 410, type: !11581, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11583)
!11581 = !DISubroutineType(types: !11582)
!11582 = !{!103, !1955, !1793}
!11583 = !{!11584, !11585, !11586, !11588}
!11584 = !DILocalVariable(name: "dev", arg: 1, scope: !11580, file: !2087, line: 410, type: !1955)
!11585 = !DILocalVariable(name: "value", arg: 2, scope: !11580, file: !2087, line: 410, type: !1793)
!11586 = !DILocalVariable(name: "cfg", scope: !11580, file: !2087, line: 412, type: !11587)
!11587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 32)
!11588 = !DILocalVariable(name: "gpio", scope: !11580, file: !2087, line: 413, type: !2022)
!11589 = !DILocation(line: 0, scope: !11580)
!11590 = !DILocation(line: 412, column: 45, scope: !11580)
!11591 = !DILocation(line: 413, column: 44, scope: !11580)
!11592 = !DILocation(line: 415, column: 11, scope: !11580)
!11593 = !DILocation(line: 415, column: 9, scope: !11580)
!11594 = !DILocation(line: 417, column: 2, scope: !11580)
!11595 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !2087, file: !2087, line: 420, type: !1976, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11596)
!11596 = !{!11597, !11598, !11599, !11600, !11601, !11602}
!11597 = !DILocalVariable(name: "dev", arg: 1, scope: !11595, file: !2087, line: 420, type: !1955)
!11598 = !DILocalVariable(name: "mask", arg: 2, scope: !11595, file: !2087, line: 421, type: !1157)
!11599 = !DILocalVariable(name: "value", arg: 3, scope: !11595, file: !2087, line: 422, type: !1152)
!11600 = !DILocalVariable(name: "cfg", scope: !11595, file: !2087, line: 424, type: !11587)
!11601 = !DILocalVariable(name: "gpio", scope: !11595, file: !2087, line: 425, type: !2022)
!11602 = !DILocalVariable(name: "port_value", scope: !11595, file: !2087, line: 426, type: !108)
!11603 = !DILocation(line: 0, scope: !11595)
!11604 = !DILocation(line: 424, column: 45, scope: !11595)
!11605 = !DILocation(line: 425, column: 44, scope: !11595)
!11606 = !DILocation(line: 430, column: 15, scope: !11595)
!11607 = !DILocation(line: 431, column: 46, scope: !11595)
!11608 = !DILocation(line: 431, column: 44, scope: !11595)
!11609 = !DILocation(line: 431, column: 61, scope: !11595)
!11610 = !DILocation(line: 431, column: 53, scope: !11595)
!11611 = !DILocation(line: 431, column: 2, scope: !11595)
!11612 = !DILocation(line: 435, column: 2, scope: !11595)
!11613 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !2087, file: !2087, line: 438, type: !1980, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11614)
!11614 = !{!11615, !11616, !11617, !11618}
!11615 = !DILocalVariable(name: "dev", arg: 1, scope: !11613, file: !2087, line: 438, type: !1955)
!11616 = !DILocalVariable(name: "pins", arg: 2, scope: !11613, file: !2087, line: 439, type: !1157)
!11617 = !DILocalVariable(name: "cfg", scope: !11613, file: !2087, line: 441, type: !11587)
!11618 = !DILocalVariable(name: "gpio", scope: !11613, file: !2087, line: 442, type: !2022)
!11619 = !DILocation(line: 0, scope: !11613)
!11620 = !DILocation(line: 441, column: 45, scope: !11613)
!11621 = !DILocation(line: 442, column: 44, scope: !11613)
!11622 = !DILocation(line: 448, column: 2, scope: !11613)
!11623 = !DILocation(line: 450, column: 2, scope: !11613)
!11624 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !2087, file: !2087, line: 453, type: !1980, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11625)
!11625 = !{!11626, !11627, !11628, !11629}
!11626 = !DILocalVariable(name: "dev", arg: 1, scope: !11624, file: !2087, line: 453, type: !1955)
!11627 = !DILocalVariable(name: "pins", arg: 2, scope: !11624, file: !2087, line: 454, type: !1157)
!11628 = !DILocalVariable(name: "cfg", scope: !11624, file: !2087, line: 456, type: !11587)
!11629 = !DILocalVariable(name: "gpio", scope: !11624, file: !2087, line: 457, type: !2022)
!11630 = !DILocation(line: 0, scope: !11624)
!11631 = !DILocation(line: 456, column: 45, scope: !11624)
!11632 = !DILocation(line: 457, column: 44, scope: !11624)
!11633 = !DILocation(line: 467, column: 2, scope: !11624)
!11634 = !DILocation(line: 470, column: 2, scope: !11624)
!11635 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !2087, file: !2087, line: 473, type: !1980, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11636)
!11636 = !{!11637, !11638, !11639, !11640}
!11637 = !DILocalVariable(name: "dev", arg: 1, scope: !11635, file: !2087, line: 473, type: !1955)
!11638 = !DILocalVariable(name: "pins", arg: 2, scope: !11635, file: !2087, line: 474, type: !1157)
!11639 = !DILocalVariable(name: "cfg", scope: !11635, file: !2087, line: 476, type: !11587)
!11640 = !DILocalVariable(name: "gpio", scope: !11635, file: !2087, line: 477, type: !2022)
!11641 = !DILocation(line: 0, scope: !11635)
!11642 = !DILocation(line: 476, column: 45, scope: !11635)
!11643 = !DILocation(line: 477, column: 44, scope: !11635)
!11644 = !DILocation(line: 484, column: 2, scope: !11635)
!11645 = !DILocation(line: 487, column: 2, scope: !11635)
!11646 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !2087, file: !2087, line: 594, type: !1986, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11647)
!11647 = !{!11648, !11649, !11650, !11651, !11652, !11653, !11655, !11656, !11657}
!11648 = !DILocalVariable(name: "dev", arg: 1, scope: !11646, file: !2087, line: 594, type: !1955)
!11649 = !DILocalVariable(name: "pin", arg: 2, scope: !11646, file: !2087, line: 595, type: !1145)
!11650 = !DILocalVariable(name: "mode", arg: 3, scope: !11646, file: !2087, line: 596, type: !1110)
!11651 = !DILocalVariable(name: "trig", arg: 4, scope: !11646, file: !2087, line: 597, type: !1116)
!11652 = !DILocalVariable(name: "cfg", scope: !11646, file: !2087, line: 599, type: !11587)
!11653 = !DILocalVariable(name: "data", scope: !11646, file: !2087, line: 600, type: !11654)
!11654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 32)
!11655 = !DILocalVariable(name: "edge", scope: !11646, file: !2087, line: 601, type: !103)
!11656 = !DILocalVariable(name: "err", scope: !11646, file: !2087, line: 602, type: !103)
!11657 = !DILabel(scope: !11646, name: "exit", file: !2087, line: 643)
!11658 = !DILocation(line: 0, scope: !11646)
!11659 = !DILocation(line: 599, column: 45, scope: !11646)
!11660 = !DILocation(line: 604, column: 6, scope: !11646)
!11661 = !DILocation(line: 605, column: 34, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11663, file: !2087, line: 605, column: 7)
!11663 = distinct !DILexicalBlock(scope: !11664, file: !2087, line: 604, column: 38)
!11664 = distinct !DILexicalBlock(scope: !11646, file: !2087, line: 604, column: 6)
!11665 = !DILocation(line: 605, column: 7, scope: !11662)
!11666 = !DILocation(line: 605, column: 47, scope: !11662)
!11667 = !DILocation(line: 605, column: 39, scope: !11662)
!11668 = !DILocation(line: 605, column: 7, scope: !11663)
!11669 = !DILocation(line: 606, column: 4, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11662, file: !2087, line: 605, column: 53)
!11671 = !DILocation(line: 607, column: 4, scope: !11670)
!11672 = !DILocation(line: 608, column: 4, scope: !11670)
!11673 = !DILocation(line: 609, column: 3, scope: !11670)
!11674 = !DILocation(line: 600, column: 38, scope: !11646)
!11675 = !DILocation(line: 620, column: 30, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11646, file: !2087, line: 620, column: 6)
!11677 = !DILocation(line: 620, column: 6, scope: !11676)
!11678 = !DILocation(line: 620, column: 57, scope: !11676)
!11679 = !DILocation(line: 620, column: 6, scope: !11646)
!11680 = !DILocation(line: 625, column: 29, scope: !11646)
!11681 = !DILocation(line: 625, column: 2, scope: !11646)
!11682 = !DILocation(line: 627, column: 2, scope: !11646)
!11683 = !DILocation(line: 630, column: 3, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11646, file: !2087, line: 627, column: 16)
!11685 = !DILocation(line: 633, column: 3, scope: !11684)
!11686 = !DILocation(line: 636, column: 3, scope: !11684)
!11687 = !DILocation(line: 639, column: 2, scope: !11646)
!11688 = !DILocation(line: 641, column: 2, scope: !11646)
!11689 = !DILocation(line: 643, column: 1, scope: !11646)
!11690 = !DILocation(line: 644, column: 2, scope: !11646)
!11691 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !2087, file: !2087, line: 647, type: !1990, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11692)
!11692 = !{!11693, !11694, !11695, !11696}
!11693 = !DILocalVariable(name: "dev", arg: 1, scope: !11691, file: !2087, line: 647, type: !1955)
!11694 = !DILocalVariable(name: "callback", arg: 2, scope: !11691, file: !2087, line: 648, type: !1992)
!11695 = !DILocalVariable(name: "set", arg: 3, scope: !11691, file: !2087, line: 649, type: !119)
!11696 = !DILocalVariable(name: "data", scope: !11691, file: !2087, line: 651, type: !11654)
!11697 = !DILocation(line: 0, scope: !11691)
!11698 = !DILocation(line: 651, column: 38, scope: !11691)
!11699 = !DILocation(line: 653, column: 37, scope: !11691)
!11700 = !DILocation(line: 653, column: 9, scope: !11691)
!11701 = !DILocation(line: 653, column: 2, scope: !11691)
!11702 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !11703, file: !11703, line: 38, type: !11704, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11707)
!11703 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11704 = !DISubroutineType(types: !11705)
!11705 = !{!103, !11706, !1992, !119}
!11706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 32)
!11707 = !{!11708, !11709, !11710}
!11708 = !DILocalVariable(name: "callbacks", arg: 1, scope: !11702, file: !11703, line: 38, type: !11706)
!11709 = !DILocalVariable(name: "callback", arg: 2, scope: !11702, file: !11703, line: 39, type: !1992)
!11710 = !DILocalVariable(name: "set", arg: 3, scope: !11702, file: !11703, line: 40, type: !119)
!11711 = !DILocation(line: 0, scope: !11702)
!11712 = !DILocation(line: 42, column: 2, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11714, file: !11703, line: 42, column: 2)
!11714 = distinct !DILexicalBlock(scope: !11702, file: !11703, line: 42, column: 2)
!11715 = !DILocation(line: 42, column: 2, scope: !11714)
!11716 = !DILocation(line: 42, column: 2, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11713, file: !11703, line: 42, column: 2)
!11718 = !DILocation(line: 43, column: 2, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11720, file: !11703, line: 43, column: 2)
!11720 = distinct !DILexicalBlock(scope: !11702, file: !11703, line: 43, column: 2)
!11721 = !DILocation(line: 43, column: 2, scope: !11720)
!11722 = !DILocation(line: 43, column: 2, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11719, file: !11703, line: 43, column: 2)
!11724 = !DILocation(line: 45, column: 7, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11702, file: !11703, line: 45, column: 6)
!11726 = !DILocation(line: 45, column: 6, scope: !11702)
!11727 = !DILocation(line: 46, column: 56, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11729, file: !11703, line: 46, column: 7)
!11729 = distinct !DILexicalBlock(scope: !11725, file: !11703, line: 45, column: 38)
!11730 = !DILocation(line: 46, column: 8, scope: !11728)
!11731 = !DILocation(line: 46, column: 7, scope: !11729)
!11732 = !DILocation(line: 51, column: 13, scope: !11725)
!11733 = !DILocation(line: 56, column: 43, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11735, file: !11703, line: 55, column: 11)
!11735 = distinct !DILexicalBlock(scope: !11702, file: !11703, line: 55, column: 6)
!11736 = !DILocation(line: 56, column: 3, scope: !11734)
!11737 = !DILocation(line: 57, column: 2, scope: !11734)
!11738 = !DILocation(line: 60, column: 1, scope: !11702)
!11739 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !289, file: !289, line: 261, type: !11740, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11742)
!11740 = !DISubroutineType(types: !11741)
!11741 = !{!119, !11706}
!11742 = !{!11743}
!11743 = !DILocalVariable(name: "list", arg: 1, scope: !11739, file: !289, line: 261, type: !11706)
!11744 = !DILocation(line: 0, scope: !11739)
!11745 = !DILocation(line: 261, column: 1, scope: !11739)
!11746 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !289, file: !289, line: 417, type: !11747, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11749)
!11747 = !DISubroutineType(types: !11748)
!11748 = !{!119, !11706, !2157}
!11749 = !{!11750, !11751, !11752, !11753}
!11750 = !DILocalVariable(name: "list", arg: 1, scope: !11746, file: !289, line: 417, type: !11706)
!11751 = !DILocalVariable(name: "node", arg: 2, scope: !11746, file: !289, line: 417, type: !2157)
!11752 = !DILocalVariable(name: "prev", scope: !11746, file: !289, line: 417, type: !2157)
!11753 = !DILocalVariable(name: "test", scope: !11746, file: !289, line: 417, type: !2157)
!11754 = !DILocation(line: 0, scope: !11746)
!11755 = !DILocation(line: 417, column: 1, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11746, file: !289, line: 417, column: 1)
!11757 = !DILocation(line: 417, column: 1, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11756, file: !289, line: 417, column: 1)
!11759 = !DILocation(line: 417, column: 1, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11761, file: !289, line: 417, column: 1)
!11761 = distinct !DILexicalBlock(scope: !11758, file: !289, line: 417, column: 1)
!11762 = !DILocation(line: 417, column: 1, scope: !11761)
!11763 = distinct !{!11763, !11755, !11755}
!11764 = !DILocation(line: 417, column: 1, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11760, file: !289, line: 417, column: 1)
!11766 = !DILocation(line: 417, column: 1, scope: !11746)
!11767 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !289, file: !289, line: 298, type: !11768, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11770)
!11768 = !DISubroutineType(types: !11769)
!11769 = !{null, !11706, !2157}
!11770 = !{!11771, !11772}
!11771 = !DILocalVariable(name: "list", arg: 1, scope: !11767, file: !289, line: 298, type: !11706)
!11772 = !DILocalVariable(name: "node", arg: 2, scope: !11767, file: !289, line: 298, type: !2157)
!11773 = !DILocation(line: 0, scope: !11767)
!11774 = !DILocation(line: 298, column: 1, scope: !11767)
!11775 = !DILocation(line: 298, column: 1, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11767, file: !289, line: 298, column: 1)
!11777 = !DILocation(line: 298, column: 1, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11776, file: !289, line: 298, column: 1)
!11779 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !289, file: !289, line: 231, type: !11780, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11782)
!11780 = !DISubroutineType(types: !11781)
!11781 = !{!2157, !11706}
!11782 = !{!11783}
!11783 = !DILocalVariable(name: "list", arg: 1, scope: !11779, file: !289, line: 231, type: !11706)
!11784 = !DILocation(line: 0, scope: !11779)
!11785 = !DILocation(line: 233, column: 15, scope: !11779)
!11786 = !DILocation(line: 233, column: 2, scope: !11779)
!11787 = distinct !DISubprogram(name: "z_snode_next_set", scope: !289, file: !289, line: 209, type: !11788, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11790)
!11788 = !DISubroutineType(types: !11789)
!11789 = !{null, !2157, !2157}
!11790 = !{!11791, !11792}
!11791 = !DILocalVariable(name: "parent", arg: 1, scope: !11787, file: !289, line: 209, type: !2157)
!11792 = !DILocalVariable(name: "child", arg: 2, scope: !11787, file: !289, line: 209, type: !2157)
!11793 = !DILocation(line: 0, scope: !11787)
!11794 = !DILocation(line: 211, column: 10, scope: !11787)
!11795 = !DILocation(line: 211, column: 15, scope: !11787)
!11796 = !DILocation(line: 212, column: 1, scope: !11787)
!11797 = distinct !DISubprogram(name: "z_slist_head_set", scope: !289, file: !289, line: 214, type: !11768, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11798)
!11798 = !{!11799, !11800}
!11799 = !DILocalVariable(name: "list", arg: 1, scope: !11797, file: !289, line: 214, type: !11706)
!11800 = !DILocalVariable(name: "node", arg: 2, scope: !11797, file: !289, line: 214, type: !2157)
!11801 = !DILocation(line: 0, scope: !11797)
!11802 = !DILocation(line: 216, column: 8, scope: !11797)
!11803 = !DILocation(line: 216, column: 13, scope: !11797)
!11804 = !DILocation(line: 217, column: 1, scope: !11797)
!11805 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !289, file: !289, line: 243, type: !11780, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11806)
!11806 = !{!11807}
!11807 = !DILocalVariable(name: "list", arg: 1, scope: !11805, file: !289, line: 243, type: !11706)
!11808 = !DILocation(line: 0, scope: !11805)
!11809 = !DILocation(line: 245, column: 15, scope: !11805)
!11810 = !DILocation(line: 245, column: 2, scope: !11805)
!11811 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !289, file: !289, line: 219, type: !11768, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11812)
!11812 = !{!11813, !11814}
!11813 = !DILocalVariable(name: "list", arg: 1, scope: !11811, file: !289, line: 219, type: !11706)
!11814 = !DILocalVariable(name: "node", arg: 2, scope: !11811, file: !289, line: 219, type: !2157)
!11815 = !DILocation(line: 0, scope: !11811)
!11816 = !DILocation(line: 221, column: 8, scope: !11811)
!11817 = !DILocation(line: 221, column: 13, scope: !11811)
!11818 = !DILocation(line: 222, column: 1, scope: !11811)
!11819 = distinct !DISubprogram(name: "sys_slist_remove", scope: !289, file: !289, line: 401, type: !11820, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11822)
!11820 = !DISubroutineType(types: !11821)
!11821 = !{null, !11706, !2157, !2157}
!11822 = !{!11823, !11824, !11825}
!11823 = !DILocalVariable(name: "list", arg: 1, scope: !11819, file: !289, line: 401, type: !11706)
!11824 = !DILocalVariable(name: "prev_node", arg: 2, scope: !11819, file: !289, line: 401, type: !2157)
!11825 = !DILocalVariable(name: "node", arg: 3, scope: !11819, file: !289, line: 401, type: !2157)
!11826 = !DILocation(line: 0, scope: !11819)
!11827 = !DILocation(line: 401, column: 1, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11819, file: !289, line: 401, column: 1)
!11829 = !DILocation(line: 0, scope: !11828)
!11830 = !DILocation(line: 401, column: 1, scope: !11819)
!11831 = !DILocation(line: 401, column: 1, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11828, file: !289, line: 401, column: 1)
!11833 = !DILocation(line: 401, column: 1, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11832, file: !289, line: 401, column: 1)
!11835 = !DILocation(line: 401, column: 1, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11834, file: !289, line: 401, column: 1)
!11837 = !DILocation(line: 401, column: 1, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11828, file: !289, line: 401, column: 1)
!11839 = !DILocation(line: 401, column: 1, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11838, file: !289, line: 401, column: 1)
!11841 = !DILocation(line: 401, column: 1, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11840, file: !289, line: 401, column: 1)
!11843 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !289, file: !289, line: 285, type: !11844, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11846)
!11844 = !DISubroutineType(types: !11845)
!11845 = !{!2157, !2157}
!11846 = !{!11847}
!11847 = !DILocalVariable(name: "node", arg: 1, scope: !11843, file: !289, line: 285, type: !2157)
!11848 = !DILocation(line: 0, scope: !11843)
!11849 = !DILocation(line: 285, column: 1, scope: !11843)
!11850 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !289, file: !289, line: 274, type: !11844, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11851)
!11851 = !{!11852}
!11852 = !DILocalVariable(name: "node", arg: 1, scope: !11850, file: !289, line: 274, type: !2157)
!11853 = !DILocation(line: 0, scope: !11850)
!11854 = !DILocation(line: 274, column: 1, scope: !11850)
!11855 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !289, file: !289, line: 204, type: !11844, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11856)
!11856 = !{!11857}
!11857 = !DILocalVariable(name: "node", arg: 1, scope: !11855, file: !289, line: 204, type: !2157)
!11858 = !DILocation(line: 0, scope: !11855)
!11859 = !DILocation(line: 206, column: 15, scope: !11855)
!11860 = !DILocation(line: 206, column: 2, scope: !11855)
!11861 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !2087, file: !2087, line: 342, type: !800, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11862)
!11862 = !{!11863, !11864, !11865}
!11863 = !DILocalVariable(name: "pin", arg: 1, scope: !11861, file: !2087, line: 342, type: !103)
!11864 = !DILocalVariable(name: "line", scope: !11861, file: !2087, line: 344, type: !108)
!11865 = !DILocalVariable(name: "port", scope: !11861, file: !2087, line: 345, type: !103)
!11866 = !DILocation(line: 0, scope: !11861)
!11867 = !DILocation(line: 344, column: 18, scope: !11861)
!11868 = !{i32 983040, i32 0}
!11869 = !DILocation(line: 356, column: 9, scope: !11861)
!11870 = !DILocation(line: 370, column: 2, scope: !11861)
!11871 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !2087, file: !2087, line: 37, type: !1688, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11872)
!11872 = !{!11873, !11874, !11875}
!11873 = !DILocalVariable(name: "line", arg: 1, scope: !11871, file: !2087, line: 37, type: !103)
!11874 = !DILocalVariable(name: "arg", arg: 2, scope: !11871, file: !2087, line: 37, type: !102)
!11875 = !DILocalVariable(name: "data", scope: !11871, file: !2087, line: 39, type: !11654)
!11876 = !DILocation(line: 0, scope: !11871)
!11877 = !DILocation(line: 41, column: 29, scope: !11871)
!11878 = !DILocation(line: 41, column: 39, scope: !11871)
!11879 = !DILocation(line: 41, column: 44, scope: !11871)
!11880 = !DILocation(line: 41, column: 2, scope: !11871)
!11881 = !DILocation(line: 42, column: 1, scope: !11871)
!11882 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !2087, file: !2087, line: 376, type: !11883, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11885)
!11883 = !DISubroutineType(types: !11884)
!11884 = !{!103, !103, !103}
!11885 = !{!11886, !11887, !11888, !11890, !11891}
!11886 = !DILocalVariable(name: "port", arg: 1, scope: !11882, file: !2087, line: 376, type: !103)
!11887 = !DILocalVariable(name: "pin", arg: 2, scope: !11882, file: !2087, line: 376, type: !103)
!11888 = !DILocalVariable(name: "clk", scope: !11882, file: !2087, line: 386, type: !11889)
!11889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1955)
!11890 = !DILocalVariable(name: "pclken", scope: !11882, file: !2087, line: 387, type: !2192)
!11891 = !DILocalVariable(name: "ret", scope: !11882, file: !2087, line: 396, type: !103)
!11892 = !DILocation(line: 0, scope: !11882)
!11893 = !DILocation(line: 387, column: 2, scope: !11882)
!11894 = !DILocation(line: 387, column: 22, scope: !11882)
!11895 = !DILocation(line: 399, column: 8, scope: !11882)
!11896 = !DILocation(line: 400, column: 10, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11882, file: !2087, line: 400, column: 6)
!11898 = !DILocation(line: 400, column: 6, scope: !11882)
!11899 = !DILocation(line: 405, column: 2, scope: !11882)
!11900 = !DILocation(line: 407, column: 2, scope: !11882)
!11901 = !DILocation(line: 408, column: 1, scope: !11882)
!11902 = distinct !DISubprogram(name: "clock_control_on", scope: !1762, file: !1762, line: 123, type: !2052, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11903)
!11903 = !{!11904, !11905, !11906}
!11904 = !DILocalVariable(name: "dev", arg: 1, scope: !11902, file: !1762, line: 123, type: !1955)
!11905 = !DILocalVariable(name: "sys", arg: 2, scope: !11902, file: !1762, line: 124, type: !1837)
!11906 = !DILocalVariable(name: "api", scope: !11902, file: !1762, line: 126, type: !2045)
!11907 = !DILocation(line: 0, scope: !11902)
!11908 = !DILocation(line: 127, column: 49, scope: !11902)
!11909 = !DILocation(line: 129, column: 14, scope: !11902)
!11910 = !DILocation(line: 129, column: 9, scope: !11902)
!11911 = !DILocation(line: 129, column: 2, scope: !11902)
!11912 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !2087, file: !2087, line: 311, type: !11061, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11913)
!11913 = !{!11914, !11915, !11916}
!11914 = !DILocalVariable(name: "port", arg: 1, scope: !11912, file: !2087, line: 311, type: !103)
!11915 = !DILocalVariable(name: "pin", arg: 2, scope: !11912, file: !2087, line: 311, type: !103)
!11916 = !DILocalVariable(name: "line", scope: !11912, file: !2087, line: 313, type: !108)
!11917 = !DILocation(line: 0, scope: !11912)
!11918 = !DILocation(line: 313, column: 18, scope: !11912)
!11919 = !DILocation(line: 337, column: 2, scope: !11912)
!11920 = !DILocation(line: 340, column: 1, scope: !11912)
!11921 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !2087, file: !2087, line: 295, type: !11922, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11924)
!11922 = !DISubroutineType(types: !11923)
!11923 = !{!108, !103}
!11924 = !{!11925}
!11925 = !DILocalVariable(name: "pin", arg: 1, scope: !11921, file: !2087, line: 295, type: !103)
!11926 = !DILocation(line: 0, scope: !11921)
!11927 = !DILocation(line: 307, column: 46, scope: !11921)
!11928 = !DILocation(line: 307, column: 27, scope: !11921)
!11929 = !DILocation(line: 307, column: 32, scope: !11921)
!11930 = !DILocation(line: 307, column: 14, scope: !11921)
!11931 = !DILocation(line: 307, column: 39, scope: !11921)
!11932 = !DILocation(line: 307, column: 2, scope: !11921)
!11933 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !11934, file: !11934, line: 621, type: !11935, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11937)
!11934 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11935 = !DISubroutineType(types: !11936)
!11936 = !{null, !108, !108}
!11937 = !{!11938, !11939}
!11938 = !DILocalVariable(name: "Port", arg: 1, scope: !11933, file: !11934, line: 621, type: !108)
!11939 = !DILocalVariable(name: "Line", arg: 2, scope: !11933, file: !11934, line: 621, type: !108)
!11940 = !DILocation(line: 0, scope: !11933)
!11941 = !DILocation(line: 623, column: 3, scope: !11933)
!11942 = !DILocalVariable(name: "value", arg: 1, scope: !11943, file: !8210, line: 373, type: !108)
!11943 = distinct !DISubprogram(name: "__RBIT", scope: !8210, file: !8210, line: 373, type: !9453, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11944)
!11944 = !{!11942, !11945}
!11945 = !DILocalVariable(name: "result", scope: !11943, file: !8210, line: 375, type: !108)
!11946 = !DILocation(line: 0, scope: !11943, inlinedAt: !11947)
!11947 = distinct !DILocation(line: 623, column: 3, scope: !11933)
!11948 = !DILocation(line: 380, column: 4, scope: !11943, inlinedAt: !11947)
!11949 = !{i64 2452281}
!11950 = !DILocalVariable(name: "value", arg: 1, scope: !11951, file: !8210, line: 403, type: !108)
!11951 = distinct !DISubprogram(name: "__CLZ", scope: !8210, file: !8210, line: 403, type: !11952, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11954)
!11952 = !DISubroutineType(types: !11953)
!11953 = !{!164, !108}
!11954 = !{!11950}
!11955 = !DILocation(line: 0, scope: !11951, inlinedAt: !11956)
!11956 = distinct !DILocation(line: 623, column: 3, scope: !11933)
!11957 = !DILocation(line: 414, column: 7, scope: !11951, inlinedAt: !11956)
!11958 = !DILocation(line: 624, column: 1, scope: !11933)
!11959 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !11703, file: !11703, line: 69, type: !11960, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11962)
!11960 = !DISubroutineType(types: !11961)
!11961 = !{null, !11706, !1955, !108}
!11962 = !{!11963, !11964, !11965, !11966, !11967}
!11963 = !DILocalVariable(name: "list", arg: 1, scope: !11959, file: !11703, line: 69, type: !11706)
!11964 = !DILocalVariable(name: "port", arg: 2, scope: !11959, file: !11703, line: 70, type: !1955)
!11965 = !DILocalVariable(name: "pins", arg: 3, scope: !11959, file: !11703, line: 71, type: !108)
!11966 = !DILocalVariable(name: "cb", scope: !11959, file: !11703, line: 73, type: !1992)
!11967 = !DILocalVariable(name: "tmp", scope: !11959, file: !11703, line: 73, type: !1992)
!11968 = !DILocation(line: 0, scope: !11959)
!11969 = !DILocation(line: 75, column: 2, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11959, file: !11703, line: 75, column: 2)
!11971 = !DILocation(line: 0, scope: !11970)
!11972 = !DILocation(line: 76, column: 11, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11974, file: !11703, line: 76, column: 7)
!11974 = distinct !DILexicalBlock(scope: !11975, file: !11703, line: 75, column: 57)
!11975 = distinct !DILexicalBlock(scope: !11970, file: !11703, line: 75, column: 2)
!11976 = !DILocation(line: 76, column: 20, scope: !11973)
!11977 = !DILocation(line: 76, column: 7, scope: !11974)
!11978 = !DILocation(line: 77, column: 4, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11980, file: !11703, line: 77, column: 4)
!11980 = distinct !DILexicalBlock(scope: !11981, file: !11703, line: 77, column: 4)
!11981 = distinct !DILexicalBlock(scope: !11973, file: !11703, line: 76, column: 28)
!11982 = !DILocation(line: 77, column: 4, scope: !11980)
!11983 = !DILocation(line: 77, column: 4, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11979, file: !11703, line: 77, column: 4)
!11985 = !DILocation(line: 78, column: 4, scope: !11981)
!11986 = !DILocation(line: 79, column: 3, scope: !11981)
!11987 = !DILocation(line: 75, column: 2, scope: !11975)
!11988 = !DILocation(line: 81, column: 1, scope: !11959)
!11989 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !11934, file: !11934, line: 721, type: !9453, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !11990)
!11990 = !{!11991}
!11991 = !DILocalVariable(name: "Line", arg: 1, scope: !11989, file: !11934, line: 721, type: !108)
!11992 = !DILocation(line: 0, scope: !11989)
!11993 = !DILocation(line: 723, column: 21, scope: !11989)
!11994 = !DILocation(line: 0, scope: !11943, inlinedAt: !11995)
!11995 = distinct !DILocation(line: 723, column: 76, scope: !11989)
!11996 = !DILocation(line: 380, column: 4, scope: !11943, inlinedAt: !11995)
!11997 = !DILocation(line: 0, scope: !11951, inlinedAt: !11998)
!11998 = distinct !DILocation(line: 723, column: 76, scope: !11989)
!11999 = !DILocation(line: 414, column: 7, scope: !11951, inlinedAt: !11998)
!12000 = !DILocation(line: 723, column: 73, scope: !11989)
!12001 = !DILocation(line: 723, column: 3, scope: !11989)
!12002 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !12003, file: !12003, line: 913, type: !12004, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12006)
!12003 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12004 = !DISubroutineType(types: !12005)
!12005 = !{null, !2022, !108}
!12006 = !{!12007, !12008}
!12007 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12002, file: !12003, line: 913, type: !2022)
!12008 = !DILocalVariable(name: "PinMask", arg: 2, scope: !12002, file: !12003, line: 913, type: !108)
!12009 = !DILocation(line: 0, scope: !12002)
!12010 = !DILocation(line: 918, column: 3, scope: !12002)
!12011 = !DILocation(line: 920, column: 1, scope: !12002)
!12012 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !12003, file: !12003, line: 825, type: !12013, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12015)
!12013 = !DISubroutineType(types: !12014)
!12014 = !{!108, !2022}
!12015 = !{!12016}
!12016 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12012, file: !12003, line: 825, type: !2022)
!12017 = !DILocation(line: 0, scope: !12012)
!12018 = !DILocation(line: 827, column: 21, scope: !12012)
!12019 = !DILocation(line: 827, column: 3, scope: !12012)
!12020 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !12003, file: !12003, line: 814, type: !12004, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12021)
!12021 = !{!12022, !12023}
!12022 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12020, file: !12003, line: 814, type: !2022)
!12023 = !DILocalVariable(name: "PortValue", arg: 2, scope: !12020, file: !12003, line: 814, type: !108)
!12024 = !DILocation(line: 0, scope: !12020)
!12025 = !DILocation(line: 816, column: 3, scope: !12020)
!12026 = !DILocation(line: 817, column: 1, scope: !12020)
!12027 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !12003, file: !12003, line: 773, type: !12013, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12028)
!12028 = !{!12029}
!12029 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12027, file: !12003, line: 773, type: !2022)
!12030 = !DILocation(line: 0, scope: !12027)
!12031 = !DILocation(line: 775, column: 21, scope: !12027)
!12032 = !DILocation(line: 775, column: 3, scope: !12027)
!12033 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !2087, file: !2087, line: 47, type: !12034, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12036)
!12034 = !DISubroutineType(types: !12035)
!12035 = !{!103, !1146, !778}
!12036 = !{!12037, !12038}
!12037 = !DILocalVariable(name: "flags", arg: 1, scope: !12033, file: !2087, line: 47, type: !1146)
!12038 = !DILocalVariable(name: "pincfg", arg: 2, scope: !12033, file: !2087, line: 47, type: !778)
!12039 = !DILocation(line: 0, scope: !12033)
!12040 = !DILocation(line: 50, column: 13, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12033, file: !2087, line: 50, column: 6)
!12042 = !DILocation(line: 50, column: 28, scope: !12041)
!12043 = !DILocation(line: 50, column: 6, scope: !12033)
!12044 = !DILocation(line: 53, column: 11, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !12041, file: !2087, line: 50, column: 34)
!12046 = !DILocation(line: 55, column: 14, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12045, file: !2087, line: 55, column: 7)
!12048 = !DILocation(line: 55, column: 35, scope: !12047)
!12049 = !DILocation(line: 55, column: 7, scope: !12045)
!12050 = !DILocation(line: 56, column: 14, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12052, file: !2087, line: 56, column: 8)
!12052 = distinct !DILexicalBlock(scope: !12047, file: !2087, line: 55, column: 41)
!12053 = !DILocation(line: 56, column: 8, scope: !12052)
!12054 = !DILocation(line: 0, scope: !12047)
!12055 = !DILocation(line: 66, column: 14, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12045, file: !2087, line: 66, column: 7)
!12057 = !DILocation(line: 66, column: 30, scope: !12056)
!12058 = !DILocation(line: 66, column: 7, scope: !12045)
!12059 = !DILocation(line: 67, column: 12, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12056, file: !2087, line: 66, column: 36)
!12061 = !DILocation(line: 68, column: 3, scope: !12060)
!12062 = !DILocation(line: 68, column: 21, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12056, file: !2087, line: 68, column: 14)
!12064 = !DILocation(line: 68, column: 39, scope: !12063)
!12065 = !DILocation(line: 68, column: 14, scope: !12056)
!12066 = !DILocation(line: 69, column: 12, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12063, file: !2087, line: 68, column: 45)
!12068 = !DILocation(line: 70, column: 3, scope: !12067)
!12069 = !DILocation(line: 72, column: 21, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12041, file: !2087, line: 72, column: 14)
!12071 = !DILocation(line: 72, column: 35, scope: !12070)
!12072 = !DILocation(line: 72, column: 14, scope: !12041)
!12073 = !DILocation(line: 77, column: 14, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12075, file: !2087, line: 77, column: 7)
!12075 = distinct !DILexicalBlock(scope: !12070, file: !2087, line: 72, column: 41)
!12076 = !DILocation(line: 77, column: 30, scope: !12074)
!12077 = !DILocation(line: 77, column: 7, scope: !12075)
!12078 = !DILocation(line: 0, scope: !12041)
!12079 = !DILocation(line: 90, column: 1, scope: !12033)
!12080 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !2087, file: !2087, line: 157, type: !12081, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12083)
!12081 = !DISubroutineType(types: !12082)
!12082 = !{null, !1955, !103, !103, !103}
!12083 = !{!12084, !12085, !12086, !12087, !12088, !12089, !12090, !12091, !12092, !12093, !12094}
!12084 = !DILocalVariable(name: "dev", arg: 1, scope: !12080, file: !2087, line: 157, type: !1955)
!12085 = !DILocalVariable(name: "pin", arg: 2, scope: !12080, file: !2087, line: 157, type: !103)
!12086 = !DILocalVariable(name: "conf", arg: 3, scope: !12080, file: !2087, line: 158, type: !103)
!12087 = !DILocalVariable(name: "func", arg: 4, scope: !12080, file: !2087, line: 158, type: !103)
!12088 = !DILocalVariable(name: "cfg", scope: !12080, file: !2087, line: 160, type: !11587)
!12089 = !DILocalVariable(name: "gpio", scope: !12080, file: !2087, line: 161, type: !2022)
!12090 = !DILocalVariable(name: "pin_ll", scope: !12080, file: !2087, line: 163, type: !103)
!12091 = !DILocalVariable(name: "mode", scope: !12080, file: !2087, line: 227, type: !32)
!12092 = !DILocalVariable(name: "otype", scope: !12080, file: !2087, line: 227, type: !32)
!12093 = !DILocalVariable(name: "ospeed", scope: !12080, file: !2087, line: 227, type: !32)
!12094 = !DILocalVariable(name: "pupd", scope: !12080, file: !2087, line: 227, type: !32)
!12095 = !DILocation(line: 0, scope: !12080)
!12096 = !DILocation(line: 160, column: 45, scope: !12080)
!12097 = !DILocation(line: 161, column: 44, scope: !12080)
!12098 = !DILocation(line: 163, column: 15, scope: !12080)
!12099 = !DILocation(line: 229, column: 14, scope: !12080)
!12100 = !DILocation(line: 246, column: 47, scope: !12080)
!12101 = !DILocation(line: 246, column: 2, scope: !12080)
!12102 = !DILocation(line: 248, column: 43, scope: !12080)
!12103 = !DILocation(line: 248, column: 2, scope: !12080)
!12104 = !DILocation(line: 250, column: 40, scope: !12080)
!12105 = !DILocation(line: 250, column: 2, scope: !12080)
!12106 = !DILocation(line: 252, column: 11, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12080, file: !2087, line: 252, column: 6)
!12108 = !DILocation(line: 252, column: 6, scope: !12080)
!12109 = !DILocation(line: 253, column: 11, scope: !12110)
!12110 = distinct !DILexicalBlock(scope: !12111, file: !2087, line: 253, column: 7)
!12111 = distinct !DILexicalBlock(scope: !12107, file: !2087, line: 252, column: 36)
!12112 = !DILocation(line: 253, column: 7, scope: !12111)
!12113 = !DILocation(line: 254, column: 4, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12110, file: !2087, line: 253, column: 16)
!12115 = !DILocation(line: 255, column: 3, scope: !12114)
!12116 = !DILocation(line: 256, column: 4, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12110, file: !2087, line: 255, column: 10)
!12118 = !DILocation(line: 260, column: 40, scope: !12080)
!12119 = !DILocation(line: 260, column: 2, scope: !12080)
!12120 = !DILocation(line: 265, column: 1, scope: !12080)
!12121 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !2087, file: !2087, line: 137, type: !11922, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12122)
!12122 = !{!12123, !12124}
!12123 = !DILocalVariable(name: "pin", arg: 1, scope: !12121, file: !2087, line: 137, type: !103)
!12124 = !DILocalVariable(name: "pinval", scope: !12121, file: !2087, line: 139, type: !108)
!12125 = !DILocation(line: 0, scope: !12121)
!12126 = !DILocation(line: 149, column: 13, scope: !12121)
!12127 = !DILocation(line: 151, column: 2, scope: !12121)
!12128 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !12003, file: !12003, line: 343, type: !12129, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12131)
!12129 = !DISubroutineType(types: !12130)
!12130 = !{null, !2022, !108, !108}
!12131 = !{!12132, !12133, !12134}
!12132 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12128, file: !12003, line: 343, type: !2022)
!12133 = !DILocalVariable(name: "PinMask", arg: 2, scope: !12128, file: !12003, line: 343, type: !108)
!12134 = !DILocalVariable(name: "OutputType", arg: 3, scope: !12128, file: !12003, line: 343, type: !108)
!12135 = !DILocation(line: 0, scope: !12128)
!12136 = !DILocation(line: 345, column: 3, scope: !12128)
!12137 = !DILocation(line: 346, column: 1, scope: !12128)
!12138 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !12003, file: !12003, line: 414, type: !12129, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12139)
!12139 = !{!12140, !12141, !12142}
!12140 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12138, file: !12003, line: 414, type: !2022)
!12141 = !DILocalVariable(name: "Pin", arg: 2, scope: !12138, file: !12003, line: 414, type: !108)
!12142 = !DILocalVariable(name: "Speed", arg: 3, scope: !12138, file: !12003, line: 414, type: !108)
!12143 = !DILocation(line: 0, scope: !12138)
!12144 = !DILocation(line: 416, column: 3, scope: !12138)
!12145 = !DILocation(line: 0, scope: !11943, inlinedAt: !12146)
!12146 = distinct !DILocation(line: 416, column: 3, scope: !12138)
!12147 = !DILocation(line: 380, column: 4, scope: !11943, inlinedAt: !12146)
!12148 = !DILocation(line: 0, scope: !11951, inlinedAt: !12149)
!12149 = distinct !DILocation(line: 416, column: 3, scope: !12138)
!12150 = !DILocation(line: 414, column: 7, scope: !11951, inlinedAt: !12149)
!12151 = !DILocation(line: 0, scope: !11943, inlinedAt: !12152)
!12152 = distinct !DILocation(line: 416, column: 3, scope: !12138)
!12153 = !DILocation(line: 0, scope: !11951, inlinedAt: !12154)
!12154 = distinct !DILocation(line: 416, column: 3, scope: !12138)
!12155 = !DILocation(line: 418, column: 1, scope: !12138)
!12156 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !12003, file: !12003, line: 485, type: !12129, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12157)
!12157 = !{!12158, !12159, !12160}
!12158 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12156, file: !12003, line: 485, type: !2022)
!12159 = !DILocalVariable(name: "Pin", arg: 2, scope: !12156, file: !12003, line: 485, type: !108)
!12160 = !DILocalVariable(name: "Pull", arg: 3, scope: !12156, file: !12003, line: 485, type: !108)
!12161 = !DILocation(line: 0, scope: !12156)
!12162 = !DILocation(line: 487, column: 3, scope: !12156)
!12163 = !DILocation(line: 0, scope: !11943, inlinedAt: !12164)
!12164 = distinct !DILocation(line: 487, column: 3, scope: !12156)
!12165 = !DILocation(line: 380, column: 4, scope: !11943, inlinedAt: !12164)
!12166 = !DILocation(line: 0, scope: !11951, inlinedAt: !12167)
!12167 = distinct !DILocation(line: 487, column: 3, scope: !12156)
!12168 = !DILocation(line: 414, column: 7, scope: !11951, inlinedAt: !12167)
!12169 = !DILocation(line: 0, scope: !11943, inlinedAt: !12170)
!12170 = distinct !DILocation(line: 487, column: 3, scope: !12156)
!12171 = !DILocation(line: 0, scope: !11951, inlinedAt: !12172)
!12172 = distinct !DILocation(line: 487, column: 3, scope: !12156)
!12173 = !DILocation(line: 488, column: 1, scope: !12156)
!12174 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !12003, file: !12003, line: 557, type: !12129, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12175)
!12175 = !{!12176, !12177, !12178}
!12176 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12174, file: !12003, line: 557, type: !2022)
!12177 = !DILocalVariable(name: "Pin", arg: 2, scope: !12174, file: !12003, line: 557, type: !108)
!12178 = !DILocalVariable(name: "Alternate", arg: 3, scope: !12174, file: !12003, line: 557, type: !108)
!12179 = !DILocation(line: 0, scope: !12174)
!12180 = !DILocation(line: 559, column: 3, scope: !12174)
!12181 = !DILocation(line: 0, scope: !11943, inlinedAt: !12182)
!12182 = distinct !DILocation(line: 559, column: 3, scope: !12174)
!12183 = !DILocation(line: 380, column: 4, scope: !11943, inlinedAt: !12182)
!12184 = !DILocation(line: 0, scope: !11951, inlinedAt: !12185)
!12185 = distinct !DILocation(line: 559, column: 3, scope: !12174)
!12186 = !DILocation(line: 414, column: 7, scope: !11951, inlinedAt: !12185)
!12187 = !DILocation(line: 0, scope: !11943, inlinedAt: !12188)
!12188 = distinct !DILocation(line: 559, column: 3, scope: !12174)
!12189 = !DILocation(line: 0, scope: !11951, inlinedAt: !12190)
!12190 = distinct !DILocation(line: 559, column: 3, scope: !12174)
!12191 = !DILocation(line: 561, column: 1, scope: !12174)
!12192 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !12003, file: !12003, line: 634, type: !12129, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12193)
!12193 = !{!12194, !12195, !12196}
!12194 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12192, file: !12003, line: 634, type: !2022)
!12195 = !DILocalVariable(name: "Pin", arg: 2, scope: !12192, file: !12003, line: 634, type: !108)
!12196 = !DILocalVariable(name: "Alternate", arg: 3, scope: !12192, file: !12003, line: 634, type: !108)
!12197 = !DILocation(line: 0, scope: !12192)
!12198 = !DILocation(line: 636, column: 3, scope: !12192)
!12199 = !DILocation(line: 0, scope: !11943, inlinedAt: !12200)
!12200 = distinct !DILocation(line: 636, column: 3, scope: !12192)
!12201 = !DILocation(line: 380, column: 4, scope: !11943, inlinedAt: !12200)
!12202 = !DILocation(line: 0, scope: !11951, inlinedAt: !12203)
!12203 = distinct !DILocation(line: 636, column: 3, scope: !12192)
!12204 = !DILocation(line: 414, column: 7, scope: !11951, inlinedAt: !12203)
!12205 = !DILocation(line: 0, scope: !11943, inlinedAt: !12206)
!12206 = distinct !DILocation(line: 636, column: 3, scope: !12192)
!12207 = !DILocation(line: 0, scope: !11951, inlinedAt: !12208)
!12208 = distinct !DILocation(line: 636, column: 3, scope: !12192)
!12209 = !DILocation(line: 638, column: 1, scope: !12192)
!12210 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !12003, file: !12003, line: 274, type: !12129, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12211)
!12211 = !{!12212, !12213, !12214}
!12212 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12210, file: !12003, line: 274, type: !2022)
!12213 = !DILocalVariable(name: "Pin", arg: 2, scope: !12210, file: !12003, line: 274, type: !108)
!12214 = !DILocalVariable(name: "Mode", arg: 3, scope: !12210, file: !12003, line: 274, type: !108)
!12215 = !DILocation(line: 0, scope: !12210)
!12216 = !DILocation(line: 276, column: 3, scope: !12210)
!12217 = !DILocation(line: 0, scope: !11943, inlinedAt: !12218)
!12218 = distinct !DILocation(line: 276, column: 3, scope: !12210)
!12219 = !DILocation(line: 380, column: 4, scope: !11943, inlinedAt: !12218)
!12220 = !DILocation(line: 0, scope: !11951, inlinedAt: !12221)
!12221 = distinct !DILocation(line: 276, column: 3, scope: !12210)
!12222 = !DILocation(line: 414, column: 7, scope: !11951, inlinedAt: !12221)
!12223 = !DILocation(line: 0, scope: !11943, inlinedAt: !12224)
!12224 = distinct !DILocation(line: 276, column: 3, scope: !12210)
!12225 = !DILocation(line: 0, scope: !11951, inlinedAt: !12226)
!12226 = distinct !DILocation(line: 276, column: 3, scope: !12210)
!12227 = !DILocation(line: 277, column: 1, scope: !12210)
!12228 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !2087, file: !2087, line: 698, type: !2100, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12229)
!12229 = !{!12230, !12231, !12232}
!12230 = !DILocalVariable(name: "dev", arg: 1, scope: !12228, file: !2087, line: 698, type: !1955)
!12231 = !DILocalVariable(name: "data", scope: !12228, file: !2087, line: 700, type: !11654)
!12232 = !DILocalVariable(name: "ret", scope: !12228, file: !2087, line: 701, type: !103)
!12233 = !DILocation(line: 0, scope: !12228)
!12234 = !DILocation(line: 700, column: 38, scope: !12228)
!12235 = !DILocation(line: 703, column: 8, scope: !12228)
!12236 = !DILocation(line: 703, column: 12, scope: !12228)
!12237 = !DILocation(line: 705, column: 7, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12228, file: !2087, line: 705, column: 6)
!12239 = !DILocation(line: 705, column: 6, scope: !12228)
!12240 = !DILocation(line: 722, column: 8, scope: !12228)
!12241 = !DILocation(line: 723, column: 10, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12228, file: !2087, line: 723, column: 6)
!12243 = !DILocation(line: 723, column: 6, scope: !12228)
!12244 = !DILocation(line: 731, column: 1, scope: !12228)
!12245 = distinct !DISubprogram(name: "device_is_ready", scope: !10091, file: !10091, line: 47, type: !12246, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12248)
!12246 = !DISubroutineType(types: !12247)
!12247 = !{!119, !1955}
!12248 = !{!12249}
!12249 = !DILocalVariable(name: "dev", arg: 1, scope: !12245, file: !10091, line: 47, type: !1955)
!12250 = !DILocation(line: 0, scope: !12245)
!12251 = !DILocation(line: 55, column: 2, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12245, file: !10091, line: 55, column: 2)
!12253 = !{i64 2152415568}
!12254 = !DILocation(line: 56, column: 9, scope: !12245)
!12255 = !DILocation(line: 56, column: 2, scope: !12245)
!12256 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !2087, file: !2087, line: 270, type: !12257, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12259)
!12257 = !DISubroutineType(types: !12258)
!12258 = !{!103, !1955, !119}
!12259 = !{!12260, !12261, !12262, !12263, !12264}
!12260 = !DILocalVariable(name: "dev", arg: 1, scope: !12256, file: !2087, line: 270, type: !1955)
!12261 = !DILocalVariable(name: "on", arg: 2, scope: !12256, file: !2087, line: 270, type: !119)
!12262 = !DILocalVariable(name: "cfg", scope: !12256, file: !2087, line: 272, type: !11587)
!12263 = !DILocalVariable(name: "ret", scope: !12256, file: !2087, line: 273, type: !103)
!12264 = !DILocalVariable(name: "clk", scope: !12256, file: !2087, line: 278, type: !11889)
!12265 = !DILocation(line: 0, scope: !12256)
!12266 = !DILocation(line: 272, column: 45, scope: !12256)
!12267 = !DILocation(line: 282, column: 38, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12269, file: !2087, line: 280, column: 10)
!12269 = distinct !DILexicalBlock(scope: !12256, file: !2087, line: 280, column: 6)
!12270 = !DILocation(line: 282, column: 6, scope: !12268)
!12271 = !DILocation(line: 281, column: 9, scope: !12268)
!12272 = !DILocation(line: 293, column: 1, scope: !12256)
!12273 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !846, file: !846, line: 730, type: !12246, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12274)
!12274 = !{!12275}
!12275 = !DILocalVariable(name: "dev", arg: 1, scope: !12273, file: !846, line: 730, type: !1955)
!12276 = !DILocation(line: 0, scope: !12273)
!12277 = !DILocation(line: 732, column: 9, scope: !12273)
!12278 = !DILocation(line: 732, column: 2, scope: !12273)
!12279 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !2087, file: !2087, line: 496, type: !12280, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !12282)
!12280 = !DISubroutineType(types: !12281)
!12281 = !{!103, !1955, !103, !103, !103}
!12282 = !{!12283, !12284, !12285, !12286, !12287, !12288}
!12283 = !DILocalVariable(name: "dev", arg: 1, scope: !12279, file: !2087, line: 496, type: !1955)
!12284 = !DILocalVariable(name: "pin", arg: 2, scope: !12279, file: !2087, line: 496, type: !103)
!12285 = !DILocalVariable(name: "conf", arg: 3, scope: !12279, file: !2087, line: 496, type: !103)
!12286 = !DILocalVariable(name: "func", arg: 4, scope: !12279, file: !2087, line: 496, type: !103)
!12287 = !DILocalVariable(name: "ret", scope: !12279, file: !2087, line: 498, type: !103)
!12288 = !DILocalVariable(name: "gpio_out", scope: !12289, file: !2087, line: 508, type: !108)
!12289 = distinct !DILexicalBlock(scope: !12290, file: !2087, line: 507, column: 27)
!12290 = distinct !DILexicalBlock(scope: !12279, file: !2087, line: 507, column: 6)
!12291 = !DILocation(line: 0, scope: !12279)
!12292 = !DILocation(line: 505, column: 2, scope: !12279)
!12293 = !DILocation(line: 507, column: 11, scope: !12290)
!12294 = !DILocation(line: 507, column: 6, scope: !12279)
!12295 = !DILocation(line: 508, column: 28, scope: !12289)
!12296 = !DILocation(line: 0, scope: !12289)
!12297 = !DILocation(line: 510, column: 16, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12289, file: !2087, line: 510, column: 7)
!12299 = !DILocation(line: 0, scope: !12298)
!12300 = !DILocation(line: 510, column: 7, scope: !12289)
!12301 = !DILocation(line: 511, column: 4, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12298, file: !2087, line: 510, column: 32)
!12303 = !DILocation(line: 512, column: 3, scope: !12302)
!12304 = !DILocation(line: 513, column: 4, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12306, file: !2087, line: 512, column: 39)
!12306 = distinct !DILexicalBlock(scope: !12298, file: !2087, line: 512, column: 14)
!12307 = !DILocation(line: 514, column: 3, scope: !12305)
!12308 = !DILocation(line: 518, column: 1, scope: !12279)
!12309 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !2344, file: !2344, line: 526, type: !2248, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12310)
!12310 = !{!12311, !12312, !12313}
!12311 = !DILocalVariable(name: "dev", arg: 1, scope: !12309, file: !2344, line: 526, type: !2250)
!12312 = !DILocalVariable(name: "c", arg: 2, scope: !12309, file: !2344, line: 526, type: !1898)
!12313 = !DILocalVariable(name: "config", scope: !12309, file: !2344, line: 528, type: !12314)
!12314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!12315 = !DILocation(line: 0, scope: !12309)
!12316 = !DILocation(line: 528, column: 48, scope: !12309)
!12317 = !DILocation(line: 531, column: 40, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12309, file: !2344, line: 531, column: 6)
!12319 = !DILocation(line: 531, column: 6, scope: !12318)
!12320 = !DILocation(line: 531, column: 6, scope: !12309)
!12321 = !DILocation(line: 532, column: 34, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12318, file: !2344, line: 531, column: 48)
!12323 = !DILocation(line: 532, column: 3, scope: !12322)
!12324 = !DILocation(line: 533, column: 2, scope: !12322)
!12325 = !DILocation(line: 539, column: 42, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12309, file: !2344, line: 539, column: 6)
!12327 = !DILocation(line: 539, column: 7, scope: !12326)
!12328 = !DILocation(line: 539, column: 6, scope: !12309)
!12329 = !DILocation(line: 543, column: 52, scope: !12309)
!12330 = !DILocation(line: 543, column: 22, scope: !12309)
!12331 = !DILocation(line: 543, column: 5, scope: !12309)
!12332 = !DILocation(line: 545, column: 2, scope: !12309)
!12333 = !DILocation(line: 546, column: 1, scope: !12309)
!12334 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !2344, file: !2344, line: 548, type: !2267, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12335)
!12335 = !{!12336, !12337, !12338, !12339}
!12336 = !DILocalVariable(name: "dev", arg: 1, scope: !12334, file: !2344, line: 548, type: !2250)
!12337 = !DILocalVariable(name: "c", arg: 2, scope: !12334, file: !2344, line: 549, type: !165)
!12338 = !DILocalVariable(name: "config", scope: !12334, file: !2344, line: 551, type: !12314)
!12339 = !DILocalVariable(name: "key", scope: !12334, file: !2344, line: 555, type: !32)
!12340 = !DILocation(line: 0, scope: !12334)
!12341 = !DILocation(line: 551, column: 48, scope: !12334)
!12342 = !DILocation(line: 562, column: 2, scope: !12334)
!12343 = !DILocation(line: 563, column: 41, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12345, file: !2344, line: 563, column: 7)
!12345 = distinct !DILexicalBlock(scope: !12334, file: !2344, line: 562, column: 12)
!12346 = !DILocation(line: 563, column: 7, scope: !12344)
!12347 = !DILocation(line: 563, column: 7, scope: !12345)
!12348 = !DILocation(line: 55, column: 2, scope: !12349, inlinedAt: !12353)
!12349 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7872, file: !7872, line: 42, type: !7873, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12350)
!12350 = !{!12351, !12352}
!12351 = !DILocalVariable(name: "key", scope: !12349, file: !7872, line: 44, type: !32)
!12352 = !DILocalVariable(name: "tmp", scope: !12349, file: !7872, line: 53, type: !32)
!12353 = distinct !DILocation(line: 564, column: 10, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12344, file: !2344, line: 563, column: 49)
!12355 = !{i64 1701630}
!12356 = !DILocation(line: 0, scope: !12349, inlinedAt: !12353)
!12357 = !DILocation(line: 565, column: 42, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12354, file: !2344, line: 565, column: 8)
!12359 = !DILocation(line: 565, column: 8, scope: !12358)
!12360 = !DILocation(line: 565, column: 8, scope: !12354)
!12361 = !DILocalVariable(name: "key", arg: 1, scope: !12362, file: !7872, line: 84, type: !32)
!12362 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7872, file: !7872, line: 84, type: !7883, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12363)
!12363 = !{!12361}
!12364 = !DILocation(line: 0, scope: !12362, inlinedAt: !12365)
!12365 = distinct !DILocation(line: 568, column: 4, scope: !12354)
!12366 = !DILocation(line: 95, column: 2, scope: !12362, inlinedAt: !12365)
!12367 = !{i64 1702447}
!12368 = !DILocation(line: 569, column: 3, scope: !12354)
!12369 = distinct !{!12369, !12342, !12370}
!12370 = !DILocation(line: 570, column: 2, scope: !12334)
!12371 = !DILocation(line: 592, column: 33, scope: !12334)
!12372 = !DILocation(line: 592, column: 2, scope: !12334)
!12373 = !DILocation(line: 0, scope: !12362, inlinedAt: !12374)
!12374 = distinct !DILocation(line: 593, column: 2, scope: !12334)
!12375 = !DILocation(line: 95, column: 2, scope: !12362, inlinedAt: !12374)
!12376 = !DILocation(line: 594, column: 1, scope: !12334)
!12377 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !2344, file: !2344, line: 596, type: !2271, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12378)
!12378 = !{!12379, !12380, !12381}
!12379 = !DILocalVariable(name: "dev", arg: 1, scope: !12377, file: !2344, line: 596, type: !2250)
!12380 = !DILocalVariable(name: "config", scope: !12377, file: !2344, line: 598, type: !12314)
!12381 = !DILocalVariable(name: "err", scope: !12377, file: !2344, line: 599, type: !108)
!12382 = !DILocation(line: 0, scope: !12377)
!12383 = !DILocation(line: 598, column: 48, scope: !12377)
!12384 = !DILocation(line: 606, column: 40, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12377, file: !2344, line: 606, column: 6)
!12386 = !DILocation(line: 606, column: 6, scope: !12385)
!12387 = !DILocation(line: 606, column: 6, scope: !12377)
!12388 = !DILocation(line: 610, column: 39, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12377, file: !2344, line: 610, column: 6)
!12390 = !DILocation(line: 610, column: 6, scope: !12389)
!12391 = !DILocation(line: 610, column: 6, scope: !12377)
!12392 = !DILocation(line: 614, column: 39, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12377, file: !2344, line: 614, column: 6)
!12394 = !DILocation(line: 614, column: 6, scope: !12393)
!12395 = !DILocation(line: 614, column: 6, scope: !12377)
!12396 = !DILocation(line: 619, column: 40, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12377, file: !2344, line: 619, column: 6)
!12398 = !DILocation(line: 619, column: 6, scope: !12397)
!12399 = !DILocation(line: 619, column: 6, scope: !12377)
!12400 = !DILocation(line: 623, column: 10, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12377, file: !2344, line: 623, column: 6)
!12402 = !DILocation(line: 623, column: 6, scope: !12377)
!12403 = !DILocation(line: 624, column: 34, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12401, file: !2344, line: 623, column: 24)
!12405 = !DILocation(line: 624, column: 3, scope: !12404)
!12406 = !DILocation(line: 625, column: 2, scope: !12404)
!12407 = !DILocation(line: 632, column: 10, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12377, file: !2344, line: 632, column: 6)
!12409 = !DILocation(line: 632, column: 6, scope: !12377)
!12410 = !DILocation(line: 633, column: 34, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12408, file: !2344, line: 632, column: 32)
!12412 = !DILocation(line: 633, column: 3, scope: !12411)
!12413 = !DILocation(line: 634, column: 2, scope: !12411)
!12414 = !DILocation(line: 636, column: 10, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12377, file: !2344, line: 636, column: 6)
!12416 = !DILocation(line: 636, column: 6, scope: !12377)
!12417 = !DILocation(line: 637, column: 33, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12415, file: !2344, line: 636, column: 31)
!12419 = !DILocation(line: 637, column: 3, scope: !12418)
!12420 = !DILocation(line: 638, column: 2, scope: !12418)
!12421 = !DILocation(line: 640, column: 10, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12377, file: !2344, line: 640, column: 6)
!12423 = !DILocation(line: 640, column: 6, scope: !12377)
!12424 = !DILocation(line: 641, column: 33, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12422, file: !2344, line: 640, column: 32)
!12426 = !DILocation(line: 641, column: 3, scope: !12425)
!12427 = !DILocation(line: 642, column: 2, scope: !12425)
!12428 = !DILocation(line: 646, column: 32, scope: !12377)
!12429 = !DILocation(line: 646, column: 2, scope: !12377)
!12430 = !DILocation(line: 648, column: 2, scope: !12377)
!12431 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !2344, file: !2344, line: 419, type: !2275, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12432)
!12432 = !{!12433, !12434, !12435, !12436, !12438, !12439, !12440, !12441}
!12433 = !DILocalVariable(name: "dev", arg: 1, scope: !12431, file: !2344, line: 419, type: !2250)
!12434 = !DILocalVariable(name: "cfg", arg: 2, scope: !12431, file: !2344, line: 420, type: !2277)
!12435 = !DILocalVariable(name: "config", scope: !12431, file: !2344, line: 422, type: !12314)
!12436 = !DILocalVariable(name: "data", scope: !12431, file: !2344, line: 423, type: !12437)
!12437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 32)
!12438 = !DILocalVariable(name: "parity", scope: !12431, file: !2344, line: 424, type: !8461)
!12439 = !DILocalVariable(name: "stopbits", scope: !12431, file: !2344, line: 425, type: !8461)
!12440 = !DILocalVariable(name: "databits", scope: !12431, file: !2344, line: 426, type: !8461)
!12441 = !DILocalVariable(name: "flowctrl", scope: !12431, file: !2344, line: 428, type: !8461)
!12442 = !DILocation(line: 0, scope: !12431)
!12443 = !DILocation(line: 422, column: 48, scope: !12431)
!12444 = !DILocation(line: 423, column: 38, scope: !12431)
!12445 = !DILocation(line: 424, column: 56, scope: !12431)
!12446 = !DILocation(line: 424, column: 51, scope: !12431)
!12447 = !DILocation(line: 424, column: 26, scope: !12431)
!12448 = !DILocation(line: 425, column: 60, scope: !12431)
!12449 = !DILocation(line: 425, column: 55, scope: !12431)
!12450 = !DILocation(line: 425, column: 28, scope: !12431)
!12451 = !DILocation(line: 426, column: 60, scope: !12431)
!12452 = !DILocation(line: 426, column: 55, scope: !12431)
!12453 = !DILocation(line: 426, column: 28, scope: !12431)
!12454 = !DILocation(line: 428, column: 58, scope: !12431)
!12455 = !DILocation(line: 428, column: 53, scope: !12431)
!12456 = !DILocation(line: 428, column: 28, scope: !12431)
!12457 = !DILocation(line: 431, column: 44, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12431, file: !2344, line: 431, column: 6)
!12459 = !DILocation(line: 438, column: 22, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12431, file: !2344, line: 437, column: 6)
!12461 = !DILocation(line: 437, column: 6, scope: !12431)
!12462 = !DILocation(line: 448, column: 6, scope: !12431)
!12463 = !DILocation(line: 465, column: 47, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12431, file: !2344, line: 465, column: 6)
!12465 = !DILocation(line: 475, column: 21, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12431, file: !2344, line: 475, column: 6)
!12467 = !DILocation(line: 475, column: 6, scope: !12431)
!12468 = !DILocation(line: 476, column: 8, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12470, file: !2344, line: 476, column: 7)
!12470 = distinct !DILexicalBlock(scope: !12466, file: !2344, line: 475, column: 49)
!12471 = !DILocation(line: 477, column: 34, scope: !12469)
!12472 = !DILocation(line: 476, column: 7, scope: !12470)
!12473 = !DILocation(line: 482, column: 27, scope: !12431)
!12474 = !DILocation(line: 482, column: 2, scope: !12431)
!12475 = !DILocation(line: 484, column: 16, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12431, file: !2344, line: 484, column: 6)
!12477 = !DILocation(line: 484, column: 13, scope: !12476)
!12478 = !DILocation(line: 484, column: 6, scope: !12431)
!12479 = !DILocation(line: 485, column: 3, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12476, file: !2344, line: 484, column: 44)
!12481 = !DILocation(line: 486, column: 2, scope: !12480)
!12482 = !DILocation(line: 488, column: 18, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12431, file: !2344, line: 488, column: 6)
!12484 = !DILocation(line: 488, column: 15, scope: !12483)
!12485 = !DILocation(line: 488, column: 6, scope: !12431)
!12486 = !DILocation(line: 489, column: 3, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12483, file: !2344, line: 488, column: 48)
!12488 = !DILocation(line: 490, column: 2, scope: !12487)
!12489 = !DILocation(line: 492, column: 18, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12431, file: !2344, line: 492, column: 6)
!12491 = !DILocation(line: 492, column: 15, scope: !12490)
!12492 = !DILocation(line: 492, column: 6, scope: !12431)
!12493 = !DILocation(line: 493, column: 3, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12490, file: !2344, line: 492, column: 48)
!12495 = !DILocation(line: 494, column: 2, scope: !12494)
!12496 = !DILocation(line: 496, column: 18, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12431, file: !2344, line: 496, column: 6)
!12498 = !DILocation(line: 496, column: 15, scope: !12497)
!12499 = !DILocation(line: 496, column: 6, scope: !12431)
!12500 = !DILocation(line: 497, column: 3, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12497, file: !2344, line: 496, column: 46)
!12502 = !DILocation(line: 498, column: 2, scope: !12501)
!12503 = !DILocation(line: 500, column: 11, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12431, file: !2344, line: 500, column: 6)
!12505 = !DILocation(line: 500, column: 29, scope: !12504)
!12506 = !DILocation(line: 500, column: 20, scope: !12504)
!12507 = !DILocation(line: 500, column: 6, scope: !12431)
!12508 = !DILocation(line: 501, column: 3, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12504, file: !2344, line: 500, column: 40)
!12510 = !DILocation(line: 502, column: 26, scope: !12509)
!12511 = !DILocation(line: 502, column: 19, scope: !12509)
!12512 = !DILocation(line: 503, column: 2, scope: !12509)
!12513 = !DILocation(line: 505, column: 26, scope: !12431)
!12514 = !DILocation(line: 505, column: 2, scope: !12431)
!12515 = !DILocation(line: 506, column: 2, scope: !12431)
!12516 = !DILocation(line: 507, column: 1, scope: !12431)
!12517 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !2344, file: !2344, line: 509, type: !2288, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12518)
!12518 = !{!12519, !12520, !12521}
!12519 = !DILocalVariable(name: "dev", arg: 1, scope: !12517, file: !2344, line: 509, type: !2250)
!12520 = !DILocalVariable(name: "cfg", arg: 2, scope: !12517, file: !2344, line: 510, type: !2290)
!12521 = !DILocalVariable(name: "data", scope: !12517, file: !2344, line: 512, type: !12437)
!12522 = !DILocation(line: 0, scope: !12517)
!12523 = !DILocation(line: 512, column: 38, scope: !12517)
!12524 = !DILocation(line: 514, column: 24, scope: !12517)
!12525 = !DILocation(line: 514, column: 7, scope: !12517)
!12526 = !DILocation(line: 514, column: 16, scope: !12517)
!12527 = !DILocation(line: 515, column: 41, scope: !12517)
!12528 = !{i32 0, i32 1537}
!12529 = !DILocation(line: 515, column: 16, scope: !12517)
!12530 = !DILocation(line: 515, column: 7, scope: !12517)
!12531 = !DILocation(line: 515, column: 14, scope: !12517)
!12532 = !DILocation(line: 517, column: 3, scope: !12517)
!12533 = !{i32 0, i32 12289}
!12534 = !DILocation(line: 516, column: 19, scope: !12517)
!12535 = !DILocation(line: 516, column: 7, scope: !12517)
!12536 = !DILocation(line: 516, column: 17, scope: !12517)
!12537 = !DILocation(line: 519, column: 3, scope: !12517)
!12538 = !DILocation(line: 519, column: 33, scope: !12517)
!12539 = !DILocation(line: 518, column: 19, scope: !12517)
!12540 = !DILocation(line: 518, column: 7, scope: !12517)
!12541 = !DILocation(line: 518, column: 17, scope: !12517)
!12542 = !DILocation(line: 521, column: 3, scope: !12517)
!12543 = !{i32 0, i32 769}
!12544 = !DILocation(line: 520, column: 19, scope: !12517)
!12545 = !DILocation(line: 520, column: 7, scope: !12517)
!12546 = !DILocation(line: 520, column: 17, scope: !12517)
!12547 = !DILocation(line: 522, column: 2, scope: !12517)
!12548 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !2344, file: !2344, line: 205, type: !12549, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12551)
!12549 = !DISubroutineType(types: !12550)
!12550 = !{!108, !2250}
!12551 = !{!12552, !12553}
!12552 = !DILocalVariable(name: "dev", arg: 1, scope: !12548, file: !2344, line: 205, type: !2250)
!12553 = !DILocalVariable(name: "config", scope: !12548, file: !2344, line: 207, type: !12314)
!12554 = !DILocation(line: 0, scope: !12548)
!12555 = !DILocation(line: 207, column: 48, scope: !12548)
!12556 = !DILocation(line: 209, column: 36, scope: !12548)
!12557 = !DILocation(line: 209, column: 9, scope: !12548)
!12558 = !DILocation(line: 209, column: 2, scope: !12548)
!12559 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !2344, file: !2344, line: 270, type: !12560, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12562)
!12560 = !DISubroutineType(types: !12561)
!12561 = !{!2216, !108}
!12562 = !{!12563}
!12563 = !DILocalVariable(name: "parity", arg: 1, scope: !12559, file: !2344, line: 270, type: !108)
!12564 = !DILocation(line: 0, scope: !12559)
!12565 = !DILocation(line: 272, column: 2, scope: !12559)
!12566 = !DILocation(line: 281, column: 1, scope: !12559)
!12567 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !2344, file: !2344, line: 220, type: !12549, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12568)
!12568 = !{!12569, !12570}
!12569 = !DILocalVariable(name: "dev", arg: 1, scope: !12567, file: !2344, line: 220, type: !2250)
!12570 = !DILocalVariable(name: "config", scope: !12567, file: !2344, line: 222, type: !12314)
!12571 = !DILocation(line: 0, scope: !12567)
!12572 = !DILocation(line: 222, column: 48, scope: !12567)
!12573 = !DILocation(line: 224, column: 44, scope: !12567)
!12574 = !DILocation(line: 224, column: 9, scope: !12567)
!12575 = !DILocation(line: 224, column: 2, scope: !12567)
!12576 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !2344, file: !2344, line: 304, type: !12577, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12579)
!12577 = !DISubroutineType(types: !12578)
!12578 = !{!2230, !108}
!12579 = !{!12580}
!12580 = !DILocalVariable(name: "sb", arg: 1, scope: !12576, file: !2344, line: 304, type: !108)
!12581 = !DILocation(line: 0, scope: !12576)
!12582 = !DILocation(line: 306, column: 2, scope: !12576)
!12583 = !DILocation(line: 0, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12576, file: !2344, line: 306, column: 14)
!12585 = !DILocation(line: 323, column: 1, scope: !12576)
!12586 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !2344, file: !2344, line: 235, type: !12549, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12587)
!12587 = !{!12588, !12589}
!12588 = !DILocalVariable(name: "dev", arg: 1, scope: !12586, file: !2344, line: 235, type: !2250)
!12589 = !DILocalVariable(name: "config", scope: !12586, file: !2344, line: 237, type: !12314)
!12590 = !DILocation(line: 0, scope: !12586)
!12591 = !DILocation(line: 237, column: 48, scope: !12586)
!12592 = !DILocation(line: 239, column: 39, scope: !12586)
!12593 = !DILocation(line: 239, column: 9, scope: !12586)
!12594 = !DILocation(line: 239, column: 2, scope: !12586)
!12595 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !2344, file: !2344, line: 355, type: !12596, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12598)
!12596 = !DISubroutineType(types: !12597)
!12597 = !{!2223, !108, !108}
!12598 = !{!12599, !12600}
!12599 = !DILocalVariable(name: "db", arg: 1, scope: !12595, file: !2344, line: 355, type: !108)
!12600 = !DILocalVariable(name: "p", arg: 2, scope: !12595, file: !2344, line: 356, type: !108)
!12601 = !DILocation(line: 0, scope: !12595)
!12602 = !DILocation(line: 358, column: 2, scope: !12595)
!12603 = !DILocation(line: 384, column: 1, scope: !12595)
!12604 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !2344, file: !2344, line: 250, type: !12549, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12605)
!12605 = !{!12606, !12607}
!12606 = !DILocalVariable(name: "dev", arg: 1, scope: !12604, file: !2344, line: 250, type: !2250)
!12607 = !DILocalVariable(name: "config", scope: !12604, file: !2344, line: 252, type: !12314)
!12608 = !DILocation(line: 0, scope: !12604)
!12609 = !DILocation(line: 252, column: 48, scope: !12604)
!12610 = !DILocation(line: 254, column: 40, scope: !12604)
!12611 = !DILocation(line: 254, column: 9, scope: !12604)
!12612 = !DILocation(line: 254, column: 2, scope: !12604)
!12613 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !2344, file: !2344, line: 409, type: !12614, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12616)
!12614 = !DISubroutineType(types: !12615)
!12615 = !{!2236, !108}
!12616 = !{!12617}
!12617 = !DILocalVariable(name: "fc", arg: 1, scope: !12613, file: !2344, line: 409, type: !108)
!12618 = !DILocation(line: 0, scope: !12613)
!12619 = !DILocation(line: 411, column: 9, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12613, file: !2344, line: 411, column: 6)
!12621 = !DILocation(line: 416, column: 1, scope: !12613)
!12622 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !12623, file: !12623, line: 966, type: !12624, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12626)
!12623 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12624 = !DISubroutineType(types: !12625)
!12625 = !{!108, !2291}
!12626 = !{!12627}
!12627 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12622, file: !12623, line: 966, type: !2291)
!12628 = !DILocation(line: 0, scope: !12622)
!12629 = !DILocation(line: 968, column: 21, scope: !12622)
!12630 = !DILocation(line: 968, column: 3, scope: !12622)
!12631 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !12623, file: !12623, line: 600, type: !12624, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12632)
!12632 = !{!12633}
!12633 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12631, file: !12623, line: 600, type: !2291)
!12634 = !DILocation(line: 0, scope: !12631)
!12635 = !DILocation(line: 602, column: 21, scope: !12631)
!12636 = !DILocation(line: 602, column: 3, scope: !12631)
!12637 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !12623, file: !12623, line: 819, type: !12624, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12638)
!12638 = !{!12639}
!12639 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12637, file: !12623, line: 819, type: !2291)
!12640 = !DILocation(line: 0, scope: !12637)
!12641 = !DILocation(line: 821, column: 21, scope: !12637)
!12642 = !DILocation(line: 821, column: 3, scope: !12637)
!12643 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !12623, file: !12623, line: 546, type: !12624, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12644)
!12644 = !{!12645}
!12645 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12643, file: !12623, line: 546, type: !2291)
!12646 = !DILocation(line: 0, scope: !12643)
!12647 = !DILocation(line: 548, column: 21, scope: !12643)
!12648 = !DILocation(line: 548, column: 3, scope: !12643)
!12649 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !2344, file: !2344, line: 257, type: !12650, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12652)
!12650 = !DISubroutineType(types: !12651)
!12651 = !{!108, !2216}
!12652 = !{!12653}
!12653 = !DILocalVariable(name: "parity", arg: 1, scope: !12649, file: !2344, line: 257, type: !2216)
!12654 = !DILocation(line: 0, scope: !12649)
!12655 = !DILocation(line: 259, column: 2, scope: !12649)
!12656 = !DILocation(line: 268, column: 1, scope: !12649)
!12657 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !2344, file: !2344, line: 283, type: !12658, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12660)
!12658 = !DISubroutineType(types: !12659)
!12659 = !{!108, !2230}
!12660 = !{!12661}
!12661 = !DILocalVariable(name: "sb", arg: 1, scope: !12657, file: !2344, line: 283, type: !2230)
!12662 = !DILocation(line: 0, scope: !12657)
!12663 = !DILocation(line: 285, column: 2, scope: !12657)
!12664 = !DILocation(line: 0, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12657, file: !2344, line: 285, column: 14)
!12666 = !DILocation(line: 302, column: 1, scope: !12657)
!12667 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !2344, file: !2344, line: 325, type: !12668, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12670)
!12668 = !DISubroutineType(types: !12669)
!12669 = !{!108, !2223, !2216}
!12670 = !{!12671, !12672}
!12671 = !DILocalVariable(name: "db", arg: 1, scope: !12667, file: !2344, line: 325, type: !2223)
!12672 = !DILocalVariable(name: "p", arg: 2, scope: !12667, file: !2344, line: 326, type: !2216)
!12673 = !DILocation(line: 0, scope: !12667)
!12674 = !DILocation(line: 328, column: 2, scope: !12667)
!12675 = !DILocation(line: 353, column: 1, scope: !12667)
!12676 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !2344, file: !2344, line: 393, type: !12677, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12679)
!12677 = !DISubroutineType(types: !12678)
!12678 = !{!108, !2236}
!12679 = !{!12680}
!12680 = !DILocalVariable(name: "fc", arg: 1, scope: !12676, file: !2344, line: 393, type: !2236)
!12681 = !DILocation(line: 0, scope: !12676)
!12682 = !DILocation(line: 395, column: 9, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12676, file: !2344, line: 395, column: 6)
!12684 = !DILocation(line: 400, column: 1, scope: !12676)
!12685 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !12623, file: !12623, line: 423, type: !12686, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12688)
!12686 = !DISubroutineType(types: !12687)
!12687 = !{null, !2291}
!12688 = !{!12689}
!12689 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12685, file: !12623, line: 423, type: !2291)
!12690 = !DILocation(line: 0, scope: !12685)
!12691 = !DILocation(line: 425, column: 3, scope: !12685)
!12692 = !DILocation(line: 426, column: 1, scope: !12685)
!12693 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !2344, file: !2344, line: 197, type: !12694, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12696)
!12694 = !DISubroutineType(types: !12695)
!12695 = !{null, !2250, !108}
!12696 = !{!12697, !12698, !12699}
!12697 = !DILocalVariable(name: "dev", arg: 1, scope: !12693, file: !2344, line: 197, type: !2250)
!12698 = !DILocalVariable(name: "parity", arg: 2, scope: !12693, file: !2344, line: 198, type: !108)
!12699 = !DILocalVariable(name: "config", scope: !12693, file: !2344, line: 200, type: !12314)
!12700 = !DILocation(line: 0, scope: !12693)
!12701 = !DILocation(line: 200, column: 48, scope: !12693)
!12702 = !DILocation(line: 202, column: 29, scope: !12693)
!12703 = !DILocation(line: 202, column: 2, scope: !12693)
!12704 = !DILocation(line: 203, column: 1, scope: !12693)
!12705 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !2344, file: !2344, line: 212, type: !12694, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12706)
!12706 = !{!12707, !12708, !12709}
!12707 = !DILocalVariable(name: "dev", arg: 1, scope: !12705, file: !2344, line: 212, type: !2250)
!12708 = !DILocalVariable(name: "stopbits", arg: 2, scope: !12705, file: !2344, line: 213, type: !108)
!12709 = !DILocalVariable(name: "config", scope: !12705, file: !2344, line: 215, type: !12314)
!12710 = !DILocation(line: 0, scope: !12705)
!12711 = !DILocation(line: 215, column: 48, scope: !12705)
!12712 = !DILocation(line: 217, column: 37, scope: !12705)
!12713 = !DILocation(line: 217, column: 2, scope: !12705)
!12714 = !DILocation(line: 218, column: 1, scope: !12705)
!12715 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !2344, file: !2344, line: 227, type: !12694, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12716)
!12716 = !{!12717, !12718, !12719}
!12717 = !DILocalVariable(name: "dev", arg: 1, scope: !12715, file: !2344, line: 227, type: !2250)
!12718 = !DILocalVariable(name: "databits", arg: 2, scope: !12715, file: !2344, line: 228, type: !108)
!12719 = !DILocalVariable(name: "config", scope: !12715, file: !2344, line: 230, type: !12314)
!12720 = !DILocation(line: 0, scope: !12715)
!12721 = !DILocation(line: 230, column: 48, scope: !12715)
!12722 = !DILocation(line: 232, column: 32, scope: !12715)
!12723 = !DILocation(line: 232, column: 2, scope: !12715)
!12724 = !DILocation(line: 233, column: 1, scope: !12715)
!12725 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !2344, file: !2344, line: 242, type: !12694, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12726)
!12726 = !{!12727, !12728, !12729}
!12727 = !DILocalVariable(name: "dev", arg: 1, scope: !12725, file: !2344, line: 242, type: !2250)
!12728 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !12725, file: !2344, line: 243, type: !108)
!12729 = !DILocalVariable(name: "config", scope: !12725, file: !2344, line: 245, type: !12314)
!12730 = !DILocation(line: 0, scope: !12725)
!12731 = !DILocation(line: 245, column: 48, scope: !12725)
!12732 = !DILocation(line: 247, column: 33, scope: !12725)
!12733 = !DILocation(line: 247, column: 2, scope: !12725)
!12734 = !DILocation(line: 248, column: 1, scope: !12725)
!12735 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !2344, file: !2344, line: 107, type: !12694, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12736)
!12736 = !{!12737, !12738, !12739, !12740, !12741}
!12737 = !DILocalVariable(name: "dev", arg: 1, scope: !12735, file: !2344, line: 107, type: !2250)
!12738 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !12735, file: !2344, line: 107, type: !108)
!12739 = !DILocalVariable(name: "config", scope: !12735, file: !2344, line: 109, type: !12314)
!12740 = !DILocalVariable(name: "data", scope: !12735, file: !2344, line: 110, type: !12437)
!12741 = !DILocalVariable(name: "clock_rate", scope: !12735, file: !2344, line: 112, type: !108)
!12742 = !DILocation(line: 0, scope: !12735)
!12743 = !DILocation(line: 109, column: 48, scope: !12735)
!12744 = !DILocation(line: 110, column: 38, scope: !12735)
!12745 = !DILocation(line: 112, column: 2, scope: !12735)
!12746 = !DILocation(line: 123, column: 36, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12748, file: !2344, line: 123, column: 7)
!12748 = distinct !DILexicalBlock(scope: !12749, file: !2344, line: 122, column: 9)
!12749 = distinct !DILexicalBlock(scope: !12735, file: !2344, line: 115, column: 6)
!12750 = !DILocation(line: 124, column: 42, scope: !12747)
!12751 = !DILocation(line: 123, column: 7, scope: !12747)
!12752 = !DILocation(line: 125, column: 22, scope: !12747)
!12753 = !DILocation(line: 123, column: 7, scope: !12748)
!12754 = !DILocation(line: 126, column: 4, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12756, file: !2344, line: 126, column: 4)
!12756 = distinct !DILexicalBlock(scope: !12757, file: !2344, line: 126, column: 4)
!12757 = distinct !DILexicalBlock(scope: !12758, file: !2344, line: 126, column: 4)
!12758 = distinct !DILexicalBlock(scope: !12759, file: !2344, line: 126, column: 4)
!12759 = distinct !DILexicalBlock(scope: !12747, file: !2344, line: 125, column: 27)
!12760 = !DILocation(line: 127, column: 4, scope: !12759)
!12761 = !DILocation(line: 176, column: 36, scope: !12735)
!12762 = !DILocation(line: 176, column: 3, scope: !12735)
!12763 = !DILocation(line: 179, column: 32, scope: !12735)
!12764 = !DILocation(line: 180, column: 10, scope: !12735)
!12765 = !DILocation(line: 179, column: 3, scope: !12735)
!12766 = !DILocation(line: 189, column: 3, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12768, file: !2344, line: 189, column: 3)
!12768 = distinct !DILexicalBlock(scope: !12735, file: !2344, line: 189, column: 3)
!12769 = !DILocation(line: 189, column: 3, scope: !12768)
!12770 = !DILocation(line: 189, column: 3, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12767, file: !2344, line: 189, column: 3)
!12772 = !DILocation(line: 195, column: 1, scope: !12735)
!12773 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !12623, file: !12623, line: 409, type: !12686, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12774)
!12774 = !{!12775}
!12775 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12773, file: !12623, line: 409, type: !2291)
!12776 = !DILocation(line: 0, scope: !12773)
!12777 = !DILocation(line: 411, column: 3, scope: !12773)
!12778 = !DILocation(line: 412, column: 1, scope: !12773)
!12779 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1762, file: !1762, line: 216, type: !2324, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12780)
!12780 = !{!12781, !12782, !12783, !12784}
!12781 = !DILocalVariable(name: "dev", arg: 1, scope: !12779, file: !1762, line: 216, type: !2250)
!12782 = !DILocalVariable(name: "sys", arg: 2, scope: !12779, file: !1762, line: 217, type: !1837)
!12783 = !DILocalVariable(name: "rate", arg: 3, scope: !12779, file: !1762, line: 218, type: !1793)
!12784 = !DILocalVariable(name: "api", scope: !12779, file: !1762, line: 220, type: !2302)
!12785 = !DILocation(line: 0, scope: !12779)
!12786 = !DILocation(line: 221, column: 49, scope: !12779)
!12787 = !DILocation(line: 223, column: 11, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12779, file: !1762, line: 223, column: 6)
!12789 = !DILocation(line: 223, column: 20, scope: !12788)
!12790 = !DILocation(line: 223, column: 6, scope: !12779)
!12791 = !DILocation(line: 227, column: 9, scope: !12779)
!12792 = !DILocation(line: 227, column: 2, scope: !12779)
!12793 = !DILocation(line: 228, column: 1, scope: !12779)
!12794 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7967, file: !7967, line: 175, type: !7968, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12795)
!12795 = !{!12796}
!12796 = !DILocalVariable(name: "level", arg: 1, scope: !12794, file: !7967, line: 175, type: !103)
!12797 = !DILocation(line: 0, scope: !12794)
!12798 = !DILocation(line: 177, column: 2, scope: !12794)
!12799 = !DILocation(line: 189, column: 1, scope: !12794)
!12800 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !12623, file: !12623, line: 614, type: !12801, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12803)
!12801 = !DISubroutineType(types: !12802)
!12802 = !{null, !2291, !108}
!12803 = !{!12804, !12805}
!12804 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12800, file: !12623, line: 614, type: !2291)
!12805 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !12800, file: !12623, line: 614, type: !108)
!12806 = !DILocation(line: 0, scope: !12800)
!12807 = !DILocation(line: 616, column: 3, scope: !12800)
!12808 = !DILocation(line: 617, column: 1, scope: !12800)
!12809 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !12623, file: !12623, line: 1019, type: !12810, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12812)
!12810 = !DISubroutineType(types: !12811)
!12811 = !{null, !2291, !108, !108, !108}
!12812 = !{!12813, !12814, !12815, !12816}
!12813 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12809, file: !12623, line: 1019, type: !2291)
!12814 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !12809, file: !12623, line: 1019, type: !108)
!12815 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !12809, file: !12623, line: 1019, type: !108)
!12816 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !12809, file: !12623, line: 1020, type: !108)
!12817 = !DILocation(line: 0, scope: !12809)
!12818 = !DILocation(line: 1028, column: 30, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12820, file: !12623, line: 1027, column: 3)
!12820 = distinct !DILexicalBlock(scope: !12809, file: !12623, line: 1022, column: 7)
!12821 = !DILocation(line: 1028, column: 19, scope: !12819)
!12822 = !DILocation(line: 1028, column: 13, scope: !12819)
!12823 = !DILocation(line: 1028, column: 17, scope: !12819)
!12824 = !DILocation(line: 1030, column: 1, scope: !12809)
!12825 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !12623, file: !12623, line: 948, type: !12801, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12826)
!12826 = !{!12827, !12828}
!12827 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12825, file: !12623, line: 948, type: !2291)
!12828 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !12825, file: !12623, line: 948, type: !108)
!12829 = !DILocation(line: 0, scope: !12825)
!12830 = !DILocation(line: 950, column: 3, scope: !12825)
!12831 = !DILocation(line: 951, column: 1, scope: !12825)
!12832 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !12623, file: !12623, line: 587, type: !12801, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12833)
!12833 = !{!12834, !12835}
!12834 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12832, file: !12623, line: 587, type: !2291)
!12835 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12832, file: !12623, line: 587, type: !108)
!12836 = !DILocation(line: 0, scope: !12832)
!12837 = !DILocation(line: 589, column: 3, scope: !12832)
!12838 = !DILocation(line: 590, column: 1, scope: !12832)
!12839 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !12623, file: !12623, line: 804, type: !12801, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12840)
!12840 = !{!12841, !12842}
!12841 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12839, file: !12623, line: 804, type: !2291)
!12842 = !DILocalVariable(name: "StopBits", arg: 2, scope: !12839, file: !12623, line: 804, type: !108)
!12843 = !DILocation(line: 0, scope: !12839)
!12844 = !DILocation(line: 806, column: 3, scope: !12839)
!12845 = !DILocation(line: 807, column: 1, scope: !12839)
!12846 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !12623, file: !12623, line: 531, type: !12801, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12847)
!12847 = !{!12848, !12849}
!12848 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12846, file: !12623, line: 531, type: !2291)
!12849 = !DILocalVariable(name: "Parity", arg: 2, scope: !12846, file: !12623, line: 531, type: !108)
!12850 = !DILocation(line: 0, scope: !12846)
!12851 = !DILocation(line: 533, column: 3, scope: !12846)
!12852 = !DILocation(line: 534, column: 1, scope: !12846)
!12853 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !12623, file: !12623, line: 1769, type: !12624, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12854)
!12854 = !{!12855}
!12855 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12853, file: !12623, line: 1769, type: !2291)
!12856 = !DILocation(line: 0, scope: !12853)
!12857 = !DILocation(line: 1771, column: 11, scope: !12853)
!12858 = !DILocation(line: 1771, column: 46, scope: !12853)
!12859 = !DILocation(line: 1771, column: 3, scope: !12853)
!12860 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !12623, file: !12623, line: 1736, type: !12624, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12861)
!12861 = !{!12862}
!12862 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12860, file: !12623, line: 1736, type: !2291)
!12863 = !DILocation(line: 0, scope: !12860)
!12864 = !DILocation(line: 1738, column: 11, scope: !12860)
!12865 = !DILocation(line: 1738, column: 3, scope: !12860)
!12866 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !12623, file: !12623, line: 1747, type: !12624, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12867)
!12867 = !{!12868}
!12868 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12866, file: !12623, line: 1747, type: !2291)
!12869 = !DILocation(line: 0, scope: !12866)
!12870 = !DILocation(line: 1749, column: 11, scope: !12866)
!12871 = !DILocation(line: 1749, column: 45, scope: !12866)
!12872 = !DILocation(line: 1749, column: 3, scope: !12866)
!12873 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !12623, file: !12623, line: 1826, type: !12624, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12874)
!12874 = !{!12875}
!12875 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12873, file: !12623, line: 1826, type: !2291)
!12876 = !DILocation(line: 0, scope: !12873)
!12877 = !DILocation(line: 1828, column: 11, scope: !12873)
!12878 = !DILocation(line: 1828, column: 46, scope: !12873)
!12879 = !DILocation(line: 1828, column: 3, scope: !12873)
!12880 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !12623, file: !12623, line: 1991, type: !12686, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12881)
!12881 = !{!12882}
!12882 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12880, file: !12623, line: 1991, type: !2291)
!12883 = !DILocation(line: 0, scope: !12880)
!12884 = !DILocation(line: 1993, column: 3, scope: !12880)
!12885 = !DILocation(line: 1994, column: 1, scope: !12880)
!12886 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !12623, file: !12623, line: 1933, type: !12686, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12887)
!12887 = !{!12888, !12889}
!12888 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12886, file: !12623, line: 1933, type: !2291)
!12889 = !DILocalVariable(name: "tmpreg", scope: !12886, file: !12623, line: 1935, type: !813)
!12890 = !DILocation(line: 0, scope: !12886)
!12891 = !DILocation(line: 1935, column: 3, scope: !12886)
!12892 = !DILocation(line: 1935, column: 17, scope: !12886)
!12893 = !DILocation(line: 1936, column: 20, scope: !12886)
!12894 = !DILocation(line: 1936, column: 10, scope: !12886)
!12895 = !DILocation(line: 1937, column: 10, scope: !12886)
!12896 = !DILocation(line: 1938, column: 20, scope: !12886)
!12897 = !DILocation(line: 1938, column: 10, scope: !12886)
!12898 = !DILocation(line: 1939, column: 10, scope: !12886)
!12899 = !DILocation(line: 1940, column: 1, scope: !12886)
!12900 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !12623, file: !12623, line: 1876, type: !12686, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12901)
!12901 = !{!12902, !12903}
!12902 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12900, file: !12623, line: 1876, type: !2291)
!12903 = !DILocalVariable(name: "tmpreg", scope: !12900, file: !12623, line: 1878, type: !813)
!12904 = !DILocation(line: 0, scope: !12900)
!12905 = !DILocation(line: 1878, column: 3, scope: !12900)
!12906 = !DILocation(line: 1878, column: 17, scope: !12900)
!12907 = !DILocation(line: 1879, column: 20, scope: !12900)
!12908 = !DILocation(line: 1879, column: 10, scope: !12900)
!12909 = !DILocation(line: 1880, column: 10, scope: !12900)
!12910 = !DILocation(line: 1881, column: 20, scope: !12900)
!12911 = !DILocation(line: 1881, column: 10, scope: !12900)
!12912 = !DILocation(line: 1882, column: 10, scope: !12900)
!12913 = !DILocation(line: 1883, column: 1, scope: !12900)
!12914 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !12623, file: !12623, line: 1895, type: !12686, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12915)
!12915 = !{!12916, !12917}
!12916 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12914, file: !12623, line: 1895, type: !2291)
!12917 = !DILocalVariable(name: "tmpreg", scope: !12914, file: !12623, line: 1897, type: !813)
!12918 = !DILocation(line: 0, scope: !12914)
!12919 = !DILocation(line: 1897, column: 3, scope: !12914)
!12920 = !DILocation(line: 1897, column: 17, scope: !12914)
!12921 = !DILocation(line: 1898, column: 20, scope: !12914)
!12922 = !DILocation(line: 1898, column: 10, scope: !12914)
!12923 = !DILocation(line: 1899, column: 10, scope: !12914)
!12924 = !DILocation(line: 1900, column: 20, scope: !12914)
!12925 = !DILocation(line: 1900, column: 10, scope: !12914)
!12926 = !DILocation(line: 1901, column: 10, scope: !12914)
!12927 = !DILocation(line: 1902, column: 1, scope: !12914)
!12928 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !12623, file: !12623, line: 1914, type: !12686, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12929)
!12929 = !{!12930, !12931}
!12930 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12928, file: !12623, line: 1914, type: !2291)
!12931 = !DILocalVariable(name: "tmpreg", scope: !12928, file: !12623, line: 1916, type: !813)
!12932 = !DILocation(line: 0, scope: !12928)
!12933 = !DILocation(line: 1916, column: 3, scope: !12928)
!12934 = !DILocation(line: 1916, column: 17, scope: !12928)
!12935 = !DILocation(line: 1917, column: 20, scope: !12928)
!12936 = !DILocation(line: 1917, column: 10, scope: !12928)
!12937 = !DILocation(line: 1918, column: 10, scope: !12928)
!12938 = !DILocation(line: 1919, column: 20, scope: !12928)
!12939 = !DILocation(line: 1919, column: 10, scope: !12928)
!12940 = !DILocation(line: 1920, column: 10, scope: !12928)
!12941 = !DILocation(line: 1921, column: 1, scope: !12928)
!12942 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !12623, file: !12623, line: 1813, type: !12624, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12943)
!12943 = !{!12944}
!12944 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12942, file: !12623, line: 1813, type: !2291)
!12945 = !DILocation(line: 0, scope: !12942)
!12946 = !DILocation(line: 1815, column: 11, scope: !12942)
!12947 = !DILocation(line: 1815, column: 46, scope: !12942)
!12948 = !DILocation(line: 1815, column: 3, scope: !12942)
!12949 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !12623, file: !12623, line: 2425, type: !12950, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12952)
!12950 = !DISubroutineType(types: !12951)
!12951 = !{null, !2291, !164}
!12952 = !{!12953, !12954}
!12953 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12949, file: !12623, line: 2425, type: !2291)
!12954 = !DILocalVariable(name: "Value", arg: 2, scope: !12949, file: !12623, line: 2425, type: !164)
!12955 = !DILocation(line: 0, scope: !12949)
!12956 = !DILocation(line: 2427, column: 16, scope: !12949)
!12957 = !DILocation(line: 2427, column: 11, scope: !12949)
!12958 = !DILocation(line: 2427, column: 14, scope: !12949)
!12959 = !DILocation(line: 2428, column: 1, scope: !12949)
!12960 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !12623, file: !12623, line: 1791, type: !12624, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12961)
!12961 = !{!12962}
!12962 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12960, file: !12623, line: 1791, type: !2291)
!12963 = !DILocation(line: 0, scope: !12960)
!12964 = !DILocation(line: 1793, column: 11, scope: !12960)
!12965 = !DILocation(line: 1793, column: 47, scope: !12960)
!12966 = !DILocation(line: 1793, column: 3, scope: !12960)
!12967 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !12623, file: !12623, line: 2402, type: !12968, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12970)
!12968 = !DISubroutineType(types: !12969)
!12969 = !{!164, !2291}
!12970 = !{!12971}
!12971 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12967, file: !12623, line: 2402, type: !2291)
!12972 = !DILocation(line: 0, scope: !12967)
!12973 = !DILocation(line: 2404, column: 20, scope: !12967)
!12974 = !DILocation(line: 2404, column: 10, scope: !12967)
!12975 = !DILocation(line: 2404, column: 3, scope: !12967)
!12976 = distinct !DISubprogram(name: "uart_stm32_init", scope: !2344, file: !2344, line: 1583, type: !2271, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !12977)
!12977 = !{!12978, !12979, !12980, !12981, !12982, !12983}
!12978 = !DILocalVariable(name: "dev", arg: 1, scope: !12976, file: !2344, line: 1583, type: !2250)
!12979 = !DILocalVariable(name: "config", scope: !12976, file: !2344, line: 1585, type: !12314)
!12980 = !DILocalVariable(name: "data", scope: !12976, file: !2344, line: 1586, type: !12437)
!12981 = !DILocalVariable(name: "ll_parity", scope: !12976, file: !2344, line: 1587, type: !108)
!12982 = !DILocalVariable(name: "ll_datawidth", scope: !12976, file: !2344, line: 1588, type: !108)
!12983 = !DILocalVariable(name: "err", scope: !12976, file: !2344, line: 1589, type: !103)
!12984 = !DILocation(line: 0, scope: !12976)
!12985 = !DILocation(line: 1585, column: 48, scope: !12976)
!12986 = !DILocation(line: 1586, column: 38, scope: !12976)
!12987 = !DILocation(line: 1591, column: 2, scope: !12976)
!12988 = !DILocation(line: 1593, column: 29, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12976, file: !2344, line: 1593, column: 6)
!12990 = !DILocation(line: 1593, column: 7, scope: !12989)
!12991 = !DILocation(line: 1593, column: 6, scope: !12976)
!12992 = !DILocation(line: 1594, column: 3, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12994, file: !2344, line: 1594, column: 3)
!12994 = distinct !DILexicalBlock(scope: !12995, file: !2344, line: 1594, column: 3)
!12995 = distinct !DILexicalBlock(scope: !12996, file: !2344, line: 1594, column: 3)
!12996 = distinct !DILexicalBlock(scope: !12997, file: !2344, line: 1594, column: 3)
!12997 = distinct !DILexicalBlock(scope: !12989, file: !2344, line: 1593, column: 37)
!12998 = !DILocation(line: 1595, column: 3, scope: !12997)
!12999 = !DILocation(line: 1599, column: 31, scope: !12976)
!13000 = !DILocation(line: 1599, column: 71, scope: !12976)
!13001 = !DILocation(line: 1599, column: 8, scope: !12976)
!13002 = !DILocation(line: 1600, column: 10, scope: !13003)
!13003 = distinct !DILexicalBlock(scope: !12976, file: !2344, line: 1600, column: 6)
!13004 = !DILocation(line: 1600, column: 6, scope: !12976)
!13005 = !DILocation(line: 1601, column: 3, scope: !13006)
!13006 = distinct !DILexicalBlock(scope: !13007, file: !2344, line: 1601, column: 3)
!13007 = distinct !DILexicalBlock(scope: !13008, file: !2344, line: 1601, column: 3)
!13008 = distinct !DILexicalBlock(scope: !13009, file: !2344, line: 1601, column: 3)
!13009 = distinct !DILexicalBlock(scope: !13010, file: !2344, line: 1601, column: 3)
!13010 = distinct !DILexicalBlock(scope: !13003, file: !2344, line: 1600, column: 16)
!13011 = !DILocation(line: 1602, column: 3, scope: !13010)
!13012 = !DILocation(line: 1616, column: 36, scope: !12976)
!13013 = !DILocation(line: 1616, column: 8, scope: !12976)
!13014 = !DILocation(line: 1617, column: 10, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !12976, file: !2344, line: 1617, column: 6)
!13016 = !DILocation(line: 1617, column: 6, scope: !12976)
!13017 = !DILocation(line: 1621, column: 27, scope: !12976)
!13018 = !DILocation(line: 1621, column: 2, scope: !12976)
!13019 = !DILocation(line: 1624, column: 40, scope: !12976)
!13020 = !DILocation(line: 1624, column: 2, scope: !12976)
!13021 = !DILocation(line: 1630, column: 14, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !12976, file: !2344, line: 1630, column: 6)
!13023 = !DILocation(line: 1630, column: 6, scope: !12976)
!13024 = !DILocation(line: 1640, column: 4, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13026, file: !2344, line: 1640, column: 4)
!13026 = distinct !DILexicalBlock(scope: !13027, file: !2344, line: 1640, column: 4)
!13027 = distinct !DILexicalBlock(scope: !13028, file: !2344, line: 1640, column: 4)
!13028 = distinct !DILexicalBlock(scope: !13029, file: !2344, line: 1640, column: 4)
!13029 = distinct !DILexicalBlock(scope: !13030, file: !2344, line: 1639, column: 28)
!13030 = distinct !DILexicalBlock(scope: !13031, file: !2344, line: 1639, column: 7)
!13031 = distinct !DILexicalBlock(scope: !13032, file: !2344, line: 1638, column: 9)
!13032 = distinct !DILexicalBlock(scope: !13022, file: !2344, line: 1634, column: 13)
!13033 = !DILocation(line: 0, scope: !13022)
!13034 = !DILocation(line: 1649, column: 35, scope: !12976)
!13035 = !DILocation(line: 1649, column: 2, scope: !12976)
!13036 = !DILocation(line: 1654, column: 14, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !12976, file: !2344, line: 1654, column: 6)
!13038 = !DILocation(line: 1654, column: 6, scope: !12976)
!13039 = !DILocation(line: 1655, column: 3, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13037, file: !2344, line: 1654, column: 31)
!13041 = !DILocation(line: 1656, column: 2, scope: !13040)
!13042 = !DILocation(line: 1659, column: 37, scope: !12976)
!13043 = !DILocation(line: 1659, column: 2, scope: !12976)
!13044 = !DILocation(line: 1662, column: 14, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !12976, file: !2344, line: 1662, column: 6)
!13046 = !DILocation(line: 1662, column: 6, scope: !12976)
!13047 = !DILocation(line: 1663, column: 37, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13045, file: !2344, line: 1662, column: 27)
!13049 = !DILocation(line: 1663, column: 3, scope: !13048)
!13050 = !DILocation(line: 1664, column: 2, scope: !13048)
!13051 = !DILocation(line: 1684, column: 26, scope: !12976)
!13052 = !DILocation(line: 1684, column: 2, scope: !12976)
!13053 = !DILocation(line: 1722, column: 2, scope: !12976)
!13054 = !DILocation(line: 1724, column: 1, scope: !12976)
!13055 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !2344, file: !2344, line: 651, type: !13056, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !13058)
!13056 = !DISubroutineType(types: !13057)
!13057 = !{null, !2250}
!13058 = !{!13059, !13060, !13061}
!13059 = !DILocalVariable(name: "dev", arg: 1, scope: !13055, file: !2344, line: 651, type: !2250)
!13060 = !DILocalVariable(name: "data", scope: !13055, file: !2344, line: 653, type: !12437)
!13061 = !DILocalVariable(name: "clk", scope: !13055, file: !2344, line: 654, type: !13062)
!13062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2250)
!13063 = !DILocation(line: 0, scope: !13055)
!13064 = !DILocation(line: 653, column: 38, scope: !13055)
!13065 = !DILocation(line: 656, column: 8, scope: !13055)
!13066 = !DILocation(line: 656, column: 14, scope: !13055)
!13067 = !DILocation(line: 657, column: 1, scope: !13055)
!13068 = distinct !DISubprogram(name: "device_is_ready", scope: !10091, file: !10091, line: 47, type: !13069, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !13071)
!13069 = !DISubroutineType(types: !13070)
!13070 = !{!119, !2250}
!13071 = !{!13072}
!13072 = !DILocalVariable(name: "dev", arg: 1, scope: !13068, file: !10091, line: 47, type: !2250)
!13073 = !DILocation(line: 0, scope: !13068)
!13074 = !DILocation(line: 55, column: 2, scope: !13075)
!13075 = distinct !DILexicalBlock(scope: !13068, file: !10091, line: 55, column: 2)
!13076 = !{i64 2152506731}
!13077 = !DILocation(line: 56, column: 9, scope: !13068)
!13078 = !DILocation(line: 56, column: 2, scope: !13068)
!13079 = distinct !DISubprogram(name: "clock_control_on", scope: !1762, file: !1762, line: 123, type: !2309, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !13080)
!13080 = !{!13081, !13082, !13083}
!13081 = !DILocalVariable(name: "dev", arg: 1, scope: !13079, file: !1762, line: 123, type: !2250)
!13082 = !DILocalVariable(name: "sys", arg: 2, scope: !13079, file: !1762, line: 124, type: !1837)
!13083 = !DILocalVariable(name: "api", scope: !13079, file: !1762, line: 126, type: !2302)
!13084 = !DILocation(line: 0, scope: !13079)
!13085 = !DILocation(line: 127, column: 49, scope: !13079)
!13086 = !DILocation(line: 129, column: 14, scope: !13079)
!13087 = !DILocation(line: 129, column: 9, scope: !13079)
!13088 = !DILocation(line: 129, column: 2, scope: !13079)
!13089 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !2389, file: !2389, line: 342, type: !13090, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !13092)
!13090 = !DISubroutineType(types: !13091)
!13091 = !{!103, !2386, !164}
!13092 = !{!13093, !13094, !13095, !13096}
!13093 = !DILocalVariable(name: "config", arg: 1, scope: !13089, file: !2389, line: 342, type: !2386)
!13094 = !DILocalVariable(name: "id", arg: 2, scope: !13089, file: !2389, line: 343, type: !164)
!13095 = !DILocalVariable(name: "ret", scope: !13089, file: !2389, line: 345, type: !103)
!13096 = !DILocalVariable(name: "state", scope: !13089, file: !2389, line: 346, type: !2392)
!13097 = !DILocation(line: 0, scope: !13089)
!13098 = !DILocation(line: 346, column: 2, scope: !13089)
!13099 = !DILocation(line: 348, column: 8, scope: !13089)
!13100 = !DILocation(line: 349, column: 10, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13089, file: !2389, line: 349, column: 6)
!13102 = !DILocation(line: 349, column: 6, scope: !13089)
!13103 = !DILocation(line: 353, column: 44, scope: !13089)
!13104 = !DILocation(line: 353, column: 9, scope: !13089)
!13105 = !DILocation(line: 353, column: 2, scope: !13089)
!13106 = !DILocation(line: 354, column: 1, scope: !13089)
!13107 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !12623, file: !12623, line: 496, type: !12801, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !13108)
!13108 = !{!13109, !13110}
!13109 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13107, file: !12623, line: 496, type: !2291)
!13110 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !13107, file: !12623, line: 496, type: !108)
!13111 = !DILocation(line: 0, scope: !13107)
!13112 = !DILocation(line: 498, column: 3, scope: !13107)
!13113 = !DILocation(line: 499, column: 1, scope: !13107)
!13114 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !12623, file: !12623, line: 849, type: !12810, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !13115)
!13115 = !{!13116, !13117, !13118, !13119}
!13116 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13114, file: !12623, line: 849, type: !2291)
!13117 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !13114, file: !12623, line: 849, type: !108)
!13118 = !DILocalVariable(name: "Parity", arg: 3, scope: !13114, file: !12623, line: 849, type: !108)
!13119 = !DILocalVariable(name: "StopBits", arg: 4, scope: !13114, file: !12623, line: 850, type: !108)
!13120 = !DILocation(line: 0, scope: !13114)
!13121 = !DILocation(line: 852, column: 3, scope: !13114)
!13122 = !DILocation(line: 853, column: 3, scope: !13114)
!13123 = !DILocation(line: 854, column: 1, scope: !13114)
!13124 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !12623, file: !12623, line: 1336, type: !12686, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !13125)
!13125 = !{!13126}
!13126 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13124, file: !12623, line: 1336, type: !2291)
!13127 = !DILocation(line: 0, scope: !13124)
!13128 = !DILocation(line: 1338, column: 3, scope: !13124)
!13129 = !DILocation(line: 1339, column: 1, scope: !13124)
!13130 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !2389, file: !2389, line: 316, type: !13131, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !13133)
!13131 = !DISubroutineType(types: !13132)
!13132 = !{!103, !2386, !2392}
!13133 = !{!13134, !13135, !13136}
!13134 = !DILocalVariable(name: "config", arg: 1, scope: !13130, file: !2389, line: 317, type: !2386)
!13135 = !DILocalVariable(name: "state", arg: 2, scope: !13130, file: !2389, line: 318, type: !2392)
!13136 = !DILocalVariable(name: "reg", scope: !13130, file: !2389, line: 320, type: !22)
!13137 = !DILocation(line: 0, scope: !13130)
!13138 = !DILocation(line: 329, column: 39, scope: !13130)
!13139 = !DILocation(line: 329, column: 52, scope: !13130)
!13140 = !DILocation(line: 329, column: 9, scope: !13130)
!13141 = !DILocation(line: 329, column: 2, scope: !13130)
!13142 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !846, file: !846, line: 730, type: !13069, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2206, retainedNodes: !13143)
!13143 = !{!13144}
!13144 = !DILocalVariable(name: "dev", arg: 1, scope: !13142, file: !846, line: 730, type: !2250)
!13145 = !DILocation(line: 0, scope: !13142)
!13146 = !DILocation(line: 732, column: 9, scope: !13142)
!13147 = !DILocation(line: 732, column: 2, scope: !13142)
!13148 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2524, file: !2524, line: 270, type: !2530, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !13149)
!13149 = !{!13150}
!13150 = !DILocalVariable(name: "dev", arg: 1, scope: !13148, file: !2524, line: 270, type: !2532)
!13151 = !DILocation(line: 0, scope: !13148)
!13152 = !DILocation(line: 274, column: 2, scope: !13148)
!13153 = !DILocation(line: 275, column: 12, scope: !13148)
!13154 = !DILocation(line: 276, column: 15, scope: !13148)
!13155 = !DILocation(line: 277, column: 16, scope: !13148)
!13156 = !DILocation(line: 278, column: 15, scope: !13148)
!13157 = !DILocation(line: 279, column: 16, scope: !13148)
!13158 = !DILocation(line: 282, column: 2, scope: !13148)
!13159 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1041, file: !1041, line: 1638, type: !8250, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !13160)
!13160 = !{!13161, !13162}
!13161 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13159, file: !1041, line: 1638, type: !1720)
!13162 = !DILocalVariable(name: "priority", arg: 2, scope: !13159, file: !1041, line: 1638, type: !108)
!13163 = !DILocation(line: 0, scope: !13159)
!13164 = !DILocation(line: 1646, column: 46, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13166, file: !1041, line: 1645, column: 3)
!13166 = distinct !DILexicalBlock(scope: !13159, file: !1041, line: 1640, column: 7)
!13167 = !DILocation(line: 1648, column: 1, scope: !13159)
!13168 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2524, file: !2524, line: 118, type: !8147, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !13169)
!13169 = !{!13170, !13171}
!13170 = !DILocalVariable(name: "arg", arg: 1, scope: !13168, file: !2524, line: 118, type: !102)
!13171 = !DILocalVariable(name: "dticks", scope: !13168, file: !2524, line: 121, type: !108)
!13172 = !DILocation(line: 0, scope: !13168)
!13173 = !DILocation(line: 124, column: 2, scope: !13168)
!13174 = !DILocation(line: 129, column: 17, scope: !13168)
!13175 = !DILocation(line: 129, column: 14, scope: !13168)
!13176 = !DILocation(line: 130, column: 15, scope: !13168)
!13177 = !DILocation(line: 145, column: 27, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13179, file: !2524, line: 132, column: 16)
!13179 = distinct !DILexicalBlock(scope: !13168, file: !2524, line: 132, column: 6)
!13180 = !DILocation(line: 145, column: 25, scope: !13178)
!13181 = !DILocation(line: 145, column: 45, scope: !13178)
!13182 = !DILocation(line: 146, column: 30, scope: !13178)
!13183 = !DILocation(line: 146, column: 20, scope: !13178)
!13184 = !DILocation(line: 147, column: 3, scope: !13178)
!13185 = !DILocation(line: 151, column: 2, scope: !13168)
!13186 = !DILocation(line: 152, column: 1, scope: !13168)
!13187 = distinct !DISubprogram(name: "elapsed", scope: !2524, file: !2524, line: 85, type: !9213, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !13188)
!13188 = !{!13189, !13190, !13191}
!13189 = !DILocalVariable(name: "val1", scope: !13187, file: !2524, line: 87, type: !108)
!13190 = !DILocalVariable(name: "ctrl", scope: !13187, file: !2524, line: 88, type: !108)
!13191 = !DILocalVariable(name: "val2", scope: !13187, file: !2524, line: 89, type: !108)
!13192 = !DILocation(line: 87, column: 27, scope: !13187)
!13193 = !DILocation(line: 0, scope: !13187)
!13194 = !DILocation(line: 88, column: 27, scope: !13187)
!13195 = !DILocation(line: 89, column: 27, scope: !13187)
!13196 = !DILocation(line: 105, column: 12, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !13187, file: !2524, line: 105, column: 6)
!13198 = !DILocation(line: 106, column: 6, scope: !13197)
!13199 = !DILocation(line: 107, column: 16, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13197, file: !2524, line: 106, column: 24)
!13201 = !DILocation(line: 111, column: 18, scope: !13200)
!13202 = !DILocation(line: 112, column: 2, scope: !13200)
!13203 = !DILocation(line: 114, column: 20, scope: !13187)
!13204 = !DILocation(line: 114, column: 30, scope: !13187)
!13205 = !DILocation(line: 114, column: 28, scope: !13187)
!13206 = !DILocation(line: 114, column: 2, scope: !13187)
!13207 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2524, file: !2524, line: 154, type: !13208, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !13210)
!13208 = !DISubroutineType(types: !13209)
!13209 = !{null, !330, !119}
!13210 = !{!13211, !13212, !13213, !13214, !13215, !13216, !13217, !13222, !13223}
!13211 = !DILocalVariable(name: "ticks", arg: 1, scope: !13207, file: !2524, line: 154, type: !330)
!13212 = !DILocalVariable(name: "idle", arg: 2, scope: !13207, file: !2524, line: 154, type: !119)
!13213 = !DILocalVariable(name: "delay", scope: !13207, file: !2524, line: 169, type: !108)
!13214 = !DILocalVariable(name: "val1", scope: !13207, file: !2524, line: 170, type: !108)
!13215 = !DILocalVariable(name: "val2", scope: !13207, file: !2524, line: 170, type: !108)
!13216 = !DILocalVariable(name: "last_load_", scope: !13207, file: !2524, line: 171, type: !108)
!13217 = !DILocalVariable(name: "key", scope: !13207, file: !2524, line: 176, type: !13218)
!13218 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !13219)
!13219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !13220)
!13220 = !{!13221}
!13221 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13219, file: !149, line: 33, baseType: !103, size: 32)
!13222 = !DILocalVariable(name: "pending", scope: !13207, file: !2524, line: 178, type: !108)
!13223 = !DILocalVariable(name: "unannounced", scope: !13207, file: !2524, line: 185, type: !108)
!13224 = !DILocation(line: 0, scope: !13207)
!13225 = !DILocation(line: 162, column: 49, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13207, file: !2524, line: 162, column: 6)
!13227 = !DILocation(line: 163, column: 17, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13226, file: !2524, line: 162, column: 78)
!13229 = !DILocation(line: 164, column: 13, scope: !13228)
!13230 = !DILocation(line: 165, column: 3, scope: !13228)
!13231 = !DILocation(line: 171, column: 24, scope: !13207)
!13232 = !DILocation(line: 173, column: 10, scope: !13207)
!13233 = !DILocation(line: 174, column: 10, scope: !13207)
!13234 = !DILocalVariable(name: "l", arg: 1, scope: !13235, file: !149, line: 136, type: !13238)
!13235 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !13236, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !13239)
!13236 = !DISubroutineType(types: !13237)
!13237 = !{!13218, !13238}
!13238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!13239 = !{!13234, !13240}
!13240 = !DILocalVariable(name: "k", scope: !13235, file: !149, line: 139, type: !13218)
!13241 = !DILocation(line: 0, scope: !13235, inlinedAt: !13242)
!13242 = distinct !DILocation(line: 176, column: 25, scope: !13207)
!13243 = !DILocation(line: 55, column: 2, scope: !13244, inlinedAt: !13248)
!13244 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7872, file: !7872, line: 42, type: !7873, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !13245)
!13245 = !{!13246, !13247}
!13246 = !DILocalVariable(name: "key", scope: !13244, file: !7872, line: 44, type: !32)
!13247 = !DILocalVariable(name: "tmp", scope: !13244, file: !7872, line: 53, type: !32)
!13248 = distinct !DILocation(line: 145, column: 10, scope: !13235, inlinedAt: !13242)
!13249 = !{i64 1621922}
!13250 = !DILocation(line: 0, scope: !13244, inlinedAt: !13248)
!13251 = !DILocation(line: 148, column: 2, scope: !13252, inlinedAt: !13242)
!13252 = distinct !DILexicalBlock(scope: !13253, file: !149, line: 148, column: 2)
!13253 = distinct !DILexicalBlock(scope: !13235, file: !149, line: 148, column: 2)
!13254 = !DILocation(line: 148, column: 2, scope: !13253, inlinedAt: !13242)
!13255 = !DILocation(line: 148, column: 2, scope: !13256, inlinedAt: !13242)
!13256 = distinct !DILexicalBlock(scope: !13252, file: !149, line: 148, column: 2)
!13257 = !DILocation(line: 160, column: 2, scope: !13235, inlinedAt: !13242)
!13258 = !DILocation(line: 178, column: 21, scope: !13207)
!13259 = !DILocation(line: 180, column: 18, scope: !13207)
!13260 = !DILocation(line: 182, column: 14, scope: !13207)
!13261 = !DILocation(line: 183, column: 15, scope: !13207)
!13262 = !DILocation(line: 185, column: 39, scope: !13207)
!13263 = !DILocation(line: 185, column: 37, scope: !13207)
!13264 = !DILocation(line: 187, column: 27, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13207, file: !2524, line: 187, column: 6)
!13266 = !DILocation(line: 187, column: 6, scope: !13207)
!13267 = !DILocation(line: 202, column: 27, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13265, file: !2524, line: 195, column: 9)
!13269 = !DILocation(line: 202, column: 48, scope: !13268)
!13270 = !DILocation(line: 203, column: 9, scope: !13268)
!13271 = !DILocation(line: 204, column: 11, scope: !13268)
!13272 = !DILocation(line: 205, column: 13, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13268, file: !2524, line: 205, column: 7)
!13274 = !DILocation(line: 205, column: 7, scope: !13268)
!13275 = !DILocation(line: 0, scope: !13265)
!13276 = !DILocation(line: 212, column: 18, scope: !13207)
!13277 = !DILocation(line: 214, column: 28, scope: !13207)
!13278 = !DILocation(line: 214, column: 16, scope: !13207)
!13279 = !DILocation(line: 215, column: 15, scope: !13207)
!13280 = !DILocation(line: 227, column: 11, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13207, file: !2524, line: 227, column: 6)
!13282 = !DILocation(line: 227, column: 6, scope: !13207)
!13283 = !DILocation(line: 228, column: 15, scope: !13284)
!13284 = distinct !DILexicalBlock(scope: !13281, file: !2524, line: 227, column: 19)
!13285 = !DILocation(line: 228, column: 38, scope: !13284)
!13286 = !DILocation(line: 228, column: 24, scope: !13284)
!13287 = !DILocation(line: 229, column: 2, scope: !13284)
!13288 = !DILocation(line: 230, column: 24, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13281, file: !2524, line: 229, column: 9)
!13290 = !DILocation(line: 230, column: 15, scope: !13289)
!13291 = !DILocation(line: 0, scope: !13281)
!13292 = !DILocalVariable(name: "key", arg: 2, scope: !13293, file: !149, line: 190, type: !13218)
!13293 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !13294, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !13296)
!13294 = !DISubroutineType(types: !13295)
!13295 = !{null, !13238, !13218}
!13296 = !{!13297, !13292}
!13297 = !DILocalVariable(name: "l", arg: 1, scope: !13293, file: !149, line: 189, type: !13238)
!13298 = !DILocation(line: 0, scope: !13293, inlinedAt: !13299)
!13299 = distinct !DILocation(line: 232, column: 2, scope: !13207)
!13300 = !DILocation(line: 194, column: 2, scope: !13301, inlinedAt: !13299)
!13301 = distinct !DILexicalBlock(scope: !13302, file: !149, line: 194, column: 2)
!13302 = distinct !DILexicalBlock(scope: !13293, file: !149, line: 194, column: 2)
!13303 = !DILocation(line: 194, column: 2, scope: !13302, inlinedAt: !13299)
!13304 = !DILocation(line: 194, column: 2, scope: !13305, inlinedAt: !13299)
!13305 = distinct !DILexicalBlock(scope: !13301, file: !149, line: 194, column: 2)
!13306 = !DILocalVariable(name: "key", arg: 1, scope: !13307, file: !7872, line: 84, type: !32)
!13307 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7872, file: !7872, line: 84, type: !7883, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !13308)
!13308 = !{!13306}
!13309 = !DILocation(line: 0, scope: !13307, inlinedAt: !13310)
!13310 = distinct !DILocation(line: 215, column: 2, scope: !13293, inlinedAt: !13299)
!13311 = !DILocation(line: 95, column: 2, scope: !13307, inlinedAt: !13310)
!13312 = !{i64 1622739}
!13313 = !DILocation(line: 234, column: 1, scope: !13207)
!13314 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2524, file: !2524, line: 236, type: !9213, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !13315)
!13315 = !{!13316, !13317}
!13316 = !DILocalVariable(name: "key", scope: !13314, file: !2524, line: 242, type: !13218)
!13317 = !DILocalVariable(name: "cyc", scope: !13314, file: !2524, line: 243, type: !108)
!13318 = !DILocation(line: 0, scope: !13235, inlinedAt: !13319)
!13319 = distinct !DILocation(line: 242, column: 25, scope: !13314)
!13320 = !DILocation(line: 55, column: 2, scope: !13244, inlinedAt: !13321)
!13321 = distinct !DILocation(line: 145, column: 10, scope: !13235, inlinedAt: !13319)
!13322 = !DILocation(line: 0, scope: !13244, inlinedAt: !13321)
!13323 = !DILocation(line: 148, column: 2, scope: !13252, inlinedAt: !13319)
!13324 = !DILocation(line: 148, column: 2, scope: !13253, inlinedAt: !13319)
!13325 = !DILocation(line: 148, column: 2, scope: !13256, inlinedAt: !13319)
!13326 = !DILocation(line: 160, column: 2, scope: !13235, inlinedAt: !13319)
!13327 = !DILocation(line: 0, scope: !13314)
!13328 = !DILocation(line: 243, column: 17, scope: !13314)
!13329 = !DILocation(line: 243, column: 29, scope: !13314)
!13330 = !DILocation(line: 243, column: 43, scope: !13314)
!13331 = !DILocation(line: 0, scope: !13293, inlinedAt: !13332)
!13332 = distinct !DILocation(line: 245, column: 2, scope: !13314)
!13333 = !DILocation(line: 194, column: 2, scope: !13301, inlinedAt: !13332)
!13334 = !DILocation(line: 194, column: 2, scope: !13302, inlinedAt: !13332)
!13335 = !DILocation(line: 194, column: 2, scope: !13305, inlinedAt: !13332)
!13336 = !DILocation(line: 243, column: 27, scope: !13314)
!13337 = !DILocation(line: 243, column: 41, scope: !13314)
!13338 = !DILocation(line: 0, scope: !13307, inlinedAt: !13339)
!13339 = distinct !DILocation(line: 215, column: 2, scope: !13293, inlinedAt: !13332)
!13340 = !DILocation(line: 95, column: 2, scope: !13307, inlinedAt: !13339)
!13341 = !DILocation(line: 246, column: 13, scope: !13314)
!13342 = !DILocation(line: 246, column: 2, scope: !13314)
!13343 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2524, file: !2524, line: 249, type: !9213, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !13344)
!13344 = !{!13345, !13346}
!13345 = !DILocalVariable(name: "key", scope: !13343, file: !2524, line: 251, type: !13218)
!13346 = !DILocalVariable(name: "ret", scope: !13343, file: !2524, line: 252, type: !108)
!13347 = !DILocation(line: 0, scope: !13235, inlinedAt: !13348)
!13348 = distinct !DILocation(line: 251, column: 25, scope: !13343)
!13349 = !DILocation(line: 55, column: 2, scope: !13244, inlinedAt: !13350)
!13350 = distinct !DILocation(line: 145, column: 10, scope: !13235, inlinedAt: !13348)
!13351 = !DILocation(line: 0, scope: !13244, inlinedAt: !13350)
!13352 = !DILocation(line: 148, column: 2, scope: !13252, inlinedAt: !13348)
!13353 = !DILocation(line: 148, column: 2, scope: !13253, inlinedAt: !13348)
!13354 = !DILocation(line: 148, column: 2, scope: !13256, inlinedAt: !13348)
!13355 = !DILocation(line: 160, column: 2, scope: !13235, inlinedAt: !13348)
!13356 = !DILocation(line: 0, scope: !13343)
!13357 = !DILocation(line: 252, column: 17, scope: !13343)
!13358 = !DILocation(line: 252, column: 29, scope: !13343)
!13359 = !DILocation(line: 0, scope: !13293, inlinedAt: !13360)
!13360 = distinct !DILocation(line: 254, column: 2, scope: !13343)
!13361 = !DILocation(line: 194, column: 2, scope: !13301, inlinedAt: !13360)
!13362 = !DILocation(line: 194, column: 2, scope: !13302, inlinedAt: !13360)
!13363 = !DILocation(line: 194, column: 2, scope: !13305, inlinedAt: !13360)
!13364 = !DILocation(line: 252, column: 27, scope: !13343)
!13365 = !DILocation(line: 0, scope: !13307, inlinedAt: !13366)
!13366 = distinct !DILocation(line: 215, column: 2, scope: !13293, inlinedAt: !13360)
!13367 = !DILocation(line: 95, column: 2, scope: !13307, inlinedAt: !13366)
!13368 = !DILocation(line: 255, column: 2, scope: !13343)
!13369 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2524, file: !2524, line: 258, type: !333, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !2894)
!13370 = !DILocation(line: 260, column: 6, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13369, file: !2524, line: 260, column: 6)
!13372 = !DILocation(line: 260, column: 16, scope: !13371)
!13373 = !DILocation(line: 260, column: 6, scope: !13369)
!13374 = !DILocation(line: 261, column: 17, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13371, file: !2524, line: 260, column: 34)
!13376 = !DILocation(line: 262, column: 2, scope: !13375)
!13377 = !DILocation(line: 263, column: 1, scope: !13369)
!13378 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2524, file: !2524, line: 265, type: !333, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !2894)
!13379 = !DILocation(line: 267, column: 16, scope: !13378)
!13380 = !DILocation(line: 268, column: 1, scope: !13378)
!13381 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !13382, file: !13382, line: 9, type: !13383, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3815, retainedNodes: !13406)
!13382 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13383 = !DISubroutineType(types: !13384)
!13384 = !{!103, !13385, !164, !13405}
!13385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13386, size: 32)
!13386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13387)
!13387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2389, line: 60, size: 64, elements: !13388)
!13388 = !{!13389, !13404}
!13389 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !13387, file: !2389, line: 69, baseType: !13390, size: 32)
!13390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13391, size: 32)
!13391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13392)
!13392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2389, line: 50, size: 64, elements: !13393)
!13393 = !{!13394, !13402, !13403}
!13394 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !13392, file: !2389, line: 52, baseType: !13395, size: 32)
!13395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13396, size: 32)
!13396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13397)
!13397 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2400, line: 37, baseType: !13398)
!13398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2400, line: 32, size: 64, elements: !13399)
!13399 = !{!13400, !13401}
!13400 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13398, file: !2400, line: 34, baseType: !108, size: 32)
!13401 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13398, file: !2400, line: 36, baseType: !108, size: 32, offset: 32)
!13402 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !13392, file: !2389, line: 54, baseType: !164, size: 8, offset: 32)
!13403 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13392, file: !2389, line: 56, baseType: !164, size: 8, offset: 40)
!13404 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !13387, file: !2389, line: 71, baseType: !164, size: 8, offset: 32)
!13405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13390, size: 32)
!13406 = !{!13407, !13408, !13409}
!13407 = !DILocalVariable(name: "config", arg: 1, scope: !13381, file: !13382, line: 9, type: !13385)
!13408 = !DILocalVariable(name: "id", arg: 2, scope: !13381, file: !13382, line: 9, type: !164)
!13409 = !DILocalVariable(name: "state", arg: 3, scope: !13381, file: !13382, line: 10, type: !13405)
!13410 = !DILocation(line: 0, scope: !13381)
!13411 = !DILocation(line: 12, column: 20, scope: !13381)
!13412 = !DILocation(line: 13, column: 27, scope: !13381)
!13413 = !DILocation(line: 13, column: 42, scope: !13381)
!13414 = !DILocation(line: 13, column: 19, scope: !13381)
!13415 = !DILocation(line: 13, column: 16, scope: !13381)
!13416 = !DILocation(line: 13, column: 2, scope: !13381)
!13417 = distinct !{!13417, !13416, !13418}
!13418 = !DILocation(line: 19, column: 2, scope: !13381)
!13419 = !DILocation(line: 14, column: 23, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13421, file: !13382, line: 14, column: 7)
!13421 = distinct !DILexicalBlock(scope: !13381, file: !13382, line: 13, column: 54)
!13422 = !DILocation(line: 14, column: 10, scope: !13420)
!13423 = !DILocation(line: 18, column: 11, scope: !13421)
!13424 = !DILocation(line: 14, column: 7, scope: !13421)
!13425 = !DILocation(line: 22, column: 1, scope: !13381)
!13426 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2642, file: !2642, line: 193, type: !13427, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !13436)
!13427 = !DISubroutineType(types: !13428)
!13428 = !{!103, !13429, !164, !22}
!13429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13430, size: 32)
!13430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13431)
!13431 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2400, line: 37, baseType: !13432)
!13432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2400, line: 32, size: 64, elements: !13433)
!13433 = !{!13434, !13435}
!13434 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13432, file: !2400, line: 34, baseType: !108, size: 32)
!13435 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13432, file: !2400, line: 36, baseType: !108, size: 32, offset: 32)
!13436 = !{!13437, !13438, !13439, !13440, !13441, !13442, !13443, !13444, !13446}
!13437 = !DILocalVariable(name: "pins", arg: 1, scope: !13426, file: !2642, line: 193, type: !13429)
!13438 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !13426, file: !2642, line: 193, type: !164)
!13439 = !DILocalVariable(name: "reg", arg: 3, scope: !13426, file: !2642, line: 194, type: !22)
!13440 = !DILocalVariable(name: "pin", scope: !13426, file: !2642, line: 196, type: !108)
!13441 = !DILocalVariable(name: "mux", scope: !13426, file: !2642, line: 196, type: !108)
!13442 = !DILocalVariable(name: "pin_cgf", scope: !13426, file: !2642, line: 197, type: !108)
!13443 = !DILocalVariable(name: "ret", scope: !13426, file: !2642, line: 198, type: !103)
!13444 = !DILocalVariable(name: "i", scope: !13445, file: !2642, line: 209, type: !164)
!13445 = distinct !DILexicalBlock(scope: !13426, file: !2642, line: 209, column: 2)
!13446 = !DILocalVariable(name: "gpio_out", scope: !13447, file: !2642, line: 239, type: !108)
!13447 = distinct !DILexicalBlock(scope: !13448, file: !2642, line: 238, column: 55)
!13448 = distinct !DILexicalBlock(scope: !13449, file: !2642, line: 238, column: 14)
!13449 = distinct !DILexicalBlock(scope: !13450, file: !2642, line: 236, column: 14)
!13450 = distinct !DILexicalBlock(scope: !13451, file: !2642, line: 234, column: 7)
!13451 = distinct !DILexicalBlock(scope: !13452, file: !2642, line: 209, column: 41)
!13452 = distinct !DILexicalBlock(scope: !13445, file: !2642, line: 209, column: 2)
!13453 = !DILocation(line: 0, scope: !13426)
!13454 = !DILocation(line: 0, scope: !13445)
!13455 = !DILocation(line: 209, column: 25, scope: !13452)
!13456 = !DILocation(line: 209, column: 2, scope: !13445)
!13457 = distinct !{!13457, !13456, !13458}
!13458 = !DILocation(line: 259, column: 2, scope: !13445)
!13459 = !DILocation(line: 210, column: 17, scope: !13451)
!13460 = !DILocation(line: 234, column: 7, scope: !13450)
!13461 = !DILocation(line: 234, column: 33, scope: !13450)
!13462 = !DILocation(line: 234, column: 7, scope: !13451)
!13463 = !DILocation(line: 235, column: 22, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13450, file: !2642, line: 234, column: 49)
!13465 = !DILocation(line: 235, column: 29, scope: !13464)
!13466 = !DILocation(line: 236, column: 3, scope: !13464)
!13467 = !DILocation(line: 236, column: 14, scope: !13450)
!13468 = !DILocation(line: 239, column: 32, scope: !13447)
!13469 = !DILocation(line: 0, scope: !13447)
!13470 = !DILocation(line: 241, column: 8, scope: !13447)
!13471 = !DILocation(line: 246, column: 3, scope: !13447)
!13472 = !DILocation(line: 252, column: 9, scope: !13451)
!13473 = !DILocation(line: 255, column: 9, scope: !13451)
!13474 = !DILocation(line: 256, column: 11, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13451, file: !2642, line: 256, column: 7)
!13476 = !DILocation(line: 209, column: 37, scope: !13452)
!13477 = !DILocation(line: 256, column: 7, scope: !13451)
!13478 = !DILocation(line: 262, column: 1, scope: !13426)
!13479 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2642, file: !2642, line: 176, type: !13480, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !13482)
!13480 = !DISubroutineType(types: !13481)
!13481 = !{!103, !108, !108, !108}
!13482 = !{!13483, !13484, !13485, !13486}
!13483 = !DILocalVariable(name: "pin", arg: 1, scope: !13479, file: !2642, line: 176, type: !108)
!13484 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !13479, file: !2642, line: 176, type: !108)
!13485 = !DILocalVariable(name: "pin_func", arg: 3, scope: !13479, file: !2642, line: 176, type: !108)
!13486 = !DILocalVariable(name: "port_device", scope: !13479, file: !2642, line: 178, type: !2572)
!13487 = !DILocation(line: 0, scope: !13479)
!13488 = !DILocation(line: 180, column: 22, scope: !13489)
!13489 = distinct !DILexicalBlock(scope: !13479, file: !2642, line: 180, column: 6)
!13490 = !DILocation(line: 180, column: 6, scope: !13479)
!13491 = !DILocation(line: 180, column: 6, scope: !13489)
!13492 = !DILocation(line: 184, column: 16, scope: !13479)
!13493 = !DILocation(line: 186, column: 19, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13479, file: !2642, line: 186, column: 6)
!13495 = !DILocation(line: 186, column: 28, scope: !13494)
!13496 = !DILocation(line: 186, column: 33, scope: !13494)
!13497 = !DILocation(line: 186, column: 6, scope: !13479)
!13498 = !DILocation(line: 190, column: 43, scope: !13479)
!13499 = !DILocation(line: 190, column: 9, scope: !13479)
!13500 = !DILocation(line: 190, column: 2, scope: !13479)
!13501 = !DILocation(line: 191, column: 1, scope: !13479)
!13502 = distinct !DISubprogram(name: "device_is_ready", scope: !10091, file: !10091, line: 47, type: !13503, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !13505)
!13503 = !DISubroutineType(types: !13504)
!13504 = !{!119, !2572}
!13505 = !{!13506}
!13506 = !DILocalVariable(name: "dev", arg: 1, scope: !13502, file: !10091, line: 47, type: !2572)
!13507 = !DILocation(line: 0, scope: !13502)
!13508 = !DILocation(line: 55, column: 2, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13502, file: !10091, line: 55, column: 2)
!13510 = !{i64 2148855931}
!13511 = !DILocation(line: 56, column: 9, scope: !13502)
!13512 = !DILocation(line: 56, column: 2, scope: !13502)
!13513 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !846, file: !846, line: 730, type: !13503, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !13514)
!13514 = !{!13515}
!13515 = !DILocalVariable(name: "dev", arg: 1, scope: !13513, file: !846, line: 730, type: !2572)
!13516 = !DILocation(line: 0, scope: !13513)
!13517 = !DILocation(line: 732, column: 9, scope: !13513)
!13518 = !DILocation(line: 732, column: 2, scope: !13513)
!13519 = distinct !DISubprogram(name: "SystemInit", scope: !2672, file: !2672, line: 160, type: !333, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !2894)
!13520 = !DILocation(line: 170, column: 1, scope: !13519)
!13521 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2672, file: !2672, line: 210, type: !333, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !13522)
!13522 = !{!13523, !13524, !13525, !13526, !13527}
!13523 = !DILocalVariable(name: "tmp", scope: !13521, file: !2672, line: 212, type: !108)
!13524 = !DILocalVariable(name: "pllmul", scope: !13521, file: !2672, line: 212, type: !108)
!13525 = !DILocalVariable(name: "plldiv", scope: !13521, file: !2672, line: 212, type: !108)
!13526 = !DILocalVariable(name: "pllsource", scope: !13521, file: !2672, line: 212, type: !108)
!13527 = !DILocalVariable(name: "msirange", scope: !13521, file: !2672, line: 212, type: !108)
!13528 = !DILocation(line: 0, scope: !13521)
!13529 = !DILocation(line: 215, column: 14, scope: !13521)
!13530 = !DILocation(line: 217, column: 3, scope: !13521)
!13531 = !DILocation(line: 220, column: 24, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13521, file: !2672, line: 218, column: 3)
!13533 = !DILocation(line: 220, column: 52, scope: !13532)
!13534 = !DILocation(line: 221, column: 32, scope: !13532)
!13535 = !DILocation(line: 222, column: 7, scope: !13532)
!13536 = !DILocation(line: 228, column: 7, scope: !13532)
!13537 = !DILocation(line: 231, column: 21, scope: !13532)
!13538 = !DILocation(line: 232, column: 21, scope: !13532)
!13539 = !DILocation(line: 233, column: 36, scope: !13532)
!13540 = !DILocation(line: 233, column: 16, scope: !13532)
!13541 = !DILocation(line: 234, column: 24, scope: !13532)
!13542 = !DILocation(line: 234, column: 31, scope: !13532)
!13543 = !DILocation(line: 236, column: 24, scope: !13532)
!13544 = !DILocation(line: 236, column: 29, scope: !13532)
!13545 = !DILocation(line: 238, column: 21, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13532, file: !2672, line: 238, column: 11)
!13547 = !DILocation(line: 238, column: 11, scope: !13532)
!13548 = !DILocation(line: 241, column: 41, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13546, file: !2672, line: 239, column: 7)
!13550 = !DILocation(line: 241, column: 51, scope: !13549)
!13551 = !DILocation(line: 242, column: 7, scope: !13549)
!13552 = !DILocation(line: 246, column: 41, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13546, file: !2672, line: 244, column: 7)
!13554 = !DILocation(line: 246, column: 51, scope: !13553)
!13555 = !DILocation(line: 0, scope: !13532)
!13556 = !DILocation(line: 256, column: 30, scope: !13521)
!13557 = !DILocation(line: 256, column: 52, scope: !13521)
!13558 = !DILocation(line: 256, column: 9, scope: !13521)
!13559 = !DILocation(line: 258, column: 19, scope: !13521)
!13560 = !DILocation(line: 259, column: 1, scope: !13521)
!13561 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !13562, file: !13562, line: 228, type: !13563, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !13566)
!13562 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13563 = !DISubroutineType(types: !13564)
!13564 = !{!13565}
!13565 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3821, line: 45, baseType: !3820)
!13566 = !{!13567, !13568}
!13567 = !DILocalVariable(name: "tickstart", scope: !13561, file: !13562, line: 230, type: !108)
!13568 = !DILocalVariable(name: "status", scope: !13561, file: !13562, line: 231, type: !13565)
!13569 = !DILocation(line: 234, column: 3, scope: !13561)
!13570 = !DILocation(line: 238, column: 3, scope: !13561)
!13571 = !DILocation(line: 241, column: 15, scope: !13561)
!13572 = !DILocation(line: 0, scope: !13561)
!13573 = !DILocation(line: 244, column: 3, scope: !13561)
!13574 = !DILocation(line: 244, column: 10, scope: !13561)
!13575 = !DILocation(line: 244, column: 43, scope: !13561)
!13576 = !DILocation(line: 246, column: 10, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13578, file: !13562, line: 246, column: 9)
!13578 = distinct !DILexicalBlock(scope: !13561, file: !13562, line: 245, column: 3)
!13579 = !DILocation(line: 246, column: 24, scope: !13577)
!13580 = !DILocation(line: 246, column: 37, scope: !13577)
!13581 = !DILocation(line: 246, column: 9, scope: !13578)
!13582 = distinct !{!13582, !13573, !13583}
!13583 = !DILocation(line: 250, column: 3, scope: !13561)
!13584 = !DILocation(line: 253, column: 3, scope: !13561)
!13585 = !DILocation(line: 256, column: 3, scope: !13561)
!13586 = !DILocation(line: 256, column: 10, scope: !13561)
!13587 = !DILocation(line: 256, column: 44, scope: !13561)
!13588 = !DILocation(line: 258, column: 10, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13590, file: !13562, line: 258, column: 9)
!13590 = distinct !DILexicalBlock(scope: !13561, file: !13562, line: 257, column: 3)
!13591 = !DILocation(line: 258, column: 24, scope: !13589)
!13592 = !DILocation(line: 258, column: 37, scope: !13589)
!13593 = !DILocation(line: 258, column: 9, scope: !13590)
!13594 = distinct !{!13594, !13585, !13595}
!13595 = !DILocation(line: 262, column: 3, scope: !13561)
!13596 = !DILocation(line: 265, column: 19, scope: !13561)
!13597 = !DILocation(line: 268, column: 25, scope: !13561)
!13598 = !DILocation(line: 268, column: 12, scope: !13561)
!13599 = !DILocation(line: 269, column: 13, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13561, file: !13562, line: 269, column: 6)
!13601 = !DILocation(line: 269, column: 6, scope: !13561)
!13602 = !DILocation(line: 275, column: 3, scope: !13561)
!13603 = !DILocation(line: 277, column: 3, scope: !13561)
!13604 = !DILocation(line: 280, column: 15, scope: !13561)
!13605 = !DILocation(line: 283, column: 3, scope: !13561)
!13606 = !DILocation(line: 283, column: 10, scope: !13561)
!13607 = !DILocation(line: 283, column: 43, scope: !13561)
!13608 = !DILocation(line: 285, column: 10, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13610, file: !13562, line: 285, column: 9)
!13610 = distinct !DILexicalBlock(scope: !13561, file: !13562, line: 284, column: 3)
!13611 = !DILocation(line: 285, column: 24, scope: !13609)
!13612 = !DILocation(line: 285, column: 37, scope: !13609)
!13613 = !DILocation(line: 285, column: 9, scope: !13610)
!13614 = distinct !{!13614, !13605, !13615}
!13615 = !DILocation(line: 289, column: 3, scope: !13561)
!13616 = !DILocation(line: 292, column: 3, scope: !13561)
!13617 = !DILocation(line: 295, column: 3, scope: !13561)
!13618 = !DILocation(line: 299, column: 3, scope: !13561)
!13619 = !DILocation(line: 305, column: 3, scope: !13561)
!13620 = !DILocation(line: 307, column: 3, scope: !13561)
!13621 = !DILocation(line: 308, column: 1, scope: !13561)
!13622 = !DISubprogram(name: "HAL_GetTick", scope: !13623, file: !13623, line: 945, type: !9213, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2894)
!13623 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13624 = !DISubprogram(name: "HAL_InitTick", scope: !13623, file: !13623, line: 932, type: !13625, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2894)
!13625 = !DISubroutineType(types: !13626)
!13626 = !{!13565, !108}
!13627 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !13562, file: !13562, line: 324, type: !13628, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !13652)
!13628 = !DISubroutineType(types: !13629)
!13629 = !{!13565, !13630}
!13630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13631, size: 32)
!13631 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13632, line: 283, baseType: !13633)
!13632 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13633 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13632, line: 252, size: 416, elements: !13634)
!13634 = !{!13635, !13636, !13637, !13638, !13639, !13640, !13641, !13642, !13643, !13644}
!13635 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13633, file: !13632, line: 254, baseType: !108, size: 32)
!13636 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13633, file: !13632, line: 257, baseType: !108, size: 32, offset: 32)
!13637 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13633, file: !13632, line: 260, baseType: !108, size: 32, offset: 64)
!13638 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13633, file: !13632, line: 263, baseType: !108, size: 32, offset: 96)
!13639 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13633, file: !13632, line: 266, baseType: !108, size: 32, offset: 128)
!13640 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13633, file: !13632, line: 269, baseType: !108, size: 32, offset: 160)
!13641 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !13633, file: !13632, line: 272, baseType: !108, size: 32, offset: 192)
!13642 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !13633, file: !13632, line: 275, baseType: !108, size: 32, offset: 224)
!13643 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !13633, file: !13632, line: 278, baseType: !108, size: 32, offset: 256)
!13644 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13633, file: !13632, line: 281, baseType: !13645, size: 128, offset: 288)
!13645 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !13632, line: 247, baseType: !13646)
!13646 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13632, line: 234, size: 128, elements: !13647)
!13647 = !{!13648, !13649, !13650, !13651}
!13648 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13646, file: !13632, line: 236, baseType: !108, size: 32)
!13649 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13646, file: !13632, line: 239, baseType: !108, size: 32, offset: 32)
!13650 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !13646, file: !13632, line: 242, baseType: !108, size: 32, offset: 64)
!13651 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !13646, file: !13632, line: 245, baseType: !108, size: 32, offset: 96)
!13652 = !{!13653, !13654, !13655, !13656, !13657, !13658, !13662}
!13653 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13627, file: !13562, line: 324, type: !13630)
!13654 = !DILocalVariable(name: "tickstart", scope: !13627, file: !13562, line: 326, type: !108)
!13655 = !DILocalVariable(name: "status", scope: !13627, file: !13562, line: 327, type: !13565)
!13656 = !DILocalVariable(name: "sysclk_source", scope: !13627, file: !13562, line: 328, type: !108)
!13657 = !DILocalVariable(name: "pll_config", scope: !13627, file: !13562, line: 328, type: !108)
!13658 = !DILocalVariable(name: "pwrclkchanged", scope: !13659, file: !13562, line: 613, type: !13661)
!13659 = distinct !DILexicalBlock(scope: !13660, file: !13562, line: 612, column: 3)
!13660 = distinct !DILexicalBlock(scope: !13627, file: !13562, line: 611, column: 6)
!13661 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1757, line: 181, baseType: !3831)
!13662 = !DILocalVariable(name: "tmpreg", scope: !13663, file: !13562, line: 622, type: !813)
!13663 = distinct !DILexicalBlock(scope: !13664, file: !13562, line: 622, column: 7)
!13664 = distinct !DILexicalBlock(scope: !13665, file: !13562, line: 621, column: 5)
!13665 = distinct !DILexicalBlock(scope: !13659, file: !13562, line: 620, column: 8)
!13666 = !DILocation(line: 0, scope: !13627)
!13667 = !DILocation(line: 331, column: 24, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13627, file: !13562, line: 331, column: 6)
!13669 = !DILocation(line: 331, column: 6, scope: !13627)
!13670 = !DILocation(line: 338, column: 19, scope: !13627)
!13671 = !DILocation(line: 339, column: 16, scope: !13627)
!13672 = !DILocation(line: 342, column: 27, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13627, file: !13562, line: 342, column: 6)
!13674 = !DILocation(line: 342, column: 43, scope: !13673)
!13675 = !DILocation(line: 342, column: 69, scope: !13673)
!13676 = !DILocation(line: 342, column: 6, scope: !13627)
!13677 = !DILocation(line: 348, column: 23, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13679, file: !13562, line: 348, column: 8)
!13679 = distinct !DILexicalBlock(scope: !13673, file: !13562, line: 343, column: 3)
!13680 = !DILocation(line: 349, column: 8, scope: !13678)
!13681 = !DILocation(line: 349, column: 27, scope: !13678)
!13682 = !DILocation(line: 349, column: 62, scope: !13678)
!13683 = !DILocation(line: 351, column: 11, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13685, file: !13562, line: 351, column: 10)
!13685 = distinct !DILexicalBlock(scope: !13678, file: !13562, line: 350, column: 5)
!13686 = !DILocation(line: 351, column: 47, scope: !13684)
!13687 = !DILocation(line: 351, column: 54, scope: !13684)
!13688 = !DILocation(line: 351, column: 77, scope: !13684)
!13689 = !DILocation(line: 351, column: 86, scope: !13684)
!13690 = !DILocation(line: 351, column: 10, scope: !13685)
!13691 = !DILocation(line: 359, column: 7, scope: !13692)
!13692 = distinct !DILexicalBlock(scope: !13693, file: !13562, line: 359, column: 7)
!13693 = distinct !DILexicalBlock(scope: !13694, file: !13562, line: 359, column: 7)
!13694 = distinct !DILexicalBlock(scope: !13678, file: !13562, line: 357, column: 5)
!13695 = !DILocation(line: 359, column: 7, scope: !13693)
!13696 = !DILocation(line: 359, column: 7, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13692, file: !13562, line: 359, column: 7)
!13698 = !DILocation(line: 359, column: 7, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13700, file: !13562, line: 359, column: 7)
!13700 = distinct !DILexicalBlock(scope: !13692, file: !13562, line: 359, column: 7)
!13701 = !DILocation(line: 359, column: 7, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !13703, file: !13562, line: 359, column: 7)
!13703 = distinct !DILexicalBlock(scope: !13700, file: !13562, line: 359, column: 7)
!13704 = !DILocation(line: 359, column: 7, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !13703, file: !13562, line: 359, column: 7)
!13706 = !DILocation(line: 0, scope: !13692)
!13707 = !DILocation(line: 362, column: 29, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13694, file: !13562, line: 362, column: 10)
!13709 = !DILocation(line: 362, column: 38, scope: !13708)
!13710 = !DILocation(line: 0, scope: !13708)
!13711 = !DILocation(line: 362, column: 10, scope: !13694)
!13712 = !DILocation(line: 368, column: 15, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13708, file: !13562, line: 363, column: 7)
!13714 = !DILocation(line: 368, column: 51, scope: !13713)
!13715 = !DILocation(line: 368, column: 9, scope: !13713)
!13716 = !DILocation(line: 370, column: 15, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13718, file: !13562, line: 370, column: 14)
!13718 = distinct !DILexicalBlock(scope: !13713, file: !13562, line: 369, column: 9)
!13719 = !DILocation(line: 370, column: 29, scope: !13717)
!13720 = !DILocation(line: 370, column: 43, scope: !13717)
!13721 = !DILocation(line: 370, column: 14, scope: !13718)
!13722 = distinct !{!13722, !13715, !13723}
!13723 = !DILocation(line: 374, column: 9, scope: !13713)
!13724 = !DILocation(line: 382, column: 15, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13708, file: !13562, line: 377, column: 7)
!13726 = !DILocation(line: 382, column: 51, scope: !13725)
!13727 = !DILocation(line: 382, column: 9, scope: !13725)
!13728 = !DILocation(line: 384, column: 16, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13730, file: !13562, line: 384, column: 15)
!13730 = distinct !DILexicalBlock(scope: !13725, file: !13562, line: 383, column: 9)
!13731 = !DILocation(line: 384, column: 30, scope: !13729)
!13732 = !DILocation(line: 384, column: 44, scope: !13729)
!13733 = !DILocation(line: 384, column: 15, scope: !13730)
!13734 = distinct !{!13734, !13727, !13735}
!13735 = !DILocation(line: 388, column: 9, scope: !13725)
!13736 = !DILocation(line: 393, column: 27, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13627, file: !13562, line: 393, column: 6)
!13738 = !DILocation(line: 393, column: 43, scope: !13737)
!13739 = !DILocation(line: 393, column: 69, scope: !13737)
!13740 = !DILocation(line: 393, column: 6, scope: !13627)
!13741 = !DILocation(line: 400, column: 23, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13743, file: !13562, line: 400, column: 8)
!13743 = distinct !DILexicalBlock(scope: !13737, file: !13562, line: 394, column: 3)
!13744 = !DILocation(line: 401, column: 8, scope: !13742)
!13745 = !DILocation(line: 401, column: 27, scope: !13742)
!13746 = !DILocation(line: 401, column: 62, scope: !13742)
!13747 = !DILocation(line: 404, column: 11, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13749, file: !13562, line: 404, column: 10)
!13749 = distinct !DILexicalBlock(scope: !13742, file: !13562, line: 402, column: 5)
!13750 = !DILocation(line: 404, column: 47, scope: !13748)
!13751 = !DILocation(line: 404, column: 54, scope: !13748)
!13752 = !DILocation(line: 404, column: 77, scope: !13748)
!13753 = !DILocation(line: 404, column: 86, scope: !13748)
!13754 = !DILocation(line: 404, column: 10, scope: !13749)
!13755 = !DILocation(line: 418, column: 29, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13757, file: !13562, line: 418, column: 10)
!13757 = distinct !DILexicalBlock(scope: !13742, file: !13562, line: 416, column: 5)
!13758 = !DILocation(line: 418, column: 38, scope: !13756)
!13759 = !DILocation(line: 418, column: 10, scope: !13757)
!13760 = !DILocation(line: 421, column: 9, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !13756, file: !13562, line: 419, column: 7)
!13762 = !DILocation(line: 424, column: 21, scope: !13761)
!13763 = !DILocation(line: 427, column: 9, scope: !13761)
!13764 = !DILocation(line: 427, column: 15, scope: !13761)
!13765 = !DILocation(line: 427, column: 51, scope: !13761)
!13766 = !DILocation(line: 429, column: 15, scope: !13767)
!13767 = distinct !DILexicalBlock(scope: !13768, file: !13562, line: 429, column: 14)
!13768 = distinct !DILexicalBlock(scope: !13761, file: !13562, line: 428, column: 9)
!13769 = !DILocation(line: 429, column: 29, scope: !13767)
!13770 = !DILocation(line: 429, column: 43, scope: !13767)
!13771 = !DILocation(line: 429, column: 14, scope: !13768)
!13772 = distinct !{!13772, !13763, !13773}
!13773 = !DILocation(line: 433, column: 9, scope: !13761)
!13774 = !DILocation(line: 441, column: 9, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !13756, file: !13562, line: 439, column: 7)
!13776 = !DILocation(line: 444, column: 21, scope: !13775)
!13777 = !DILocation(line: 447, column: 9, scope: !13775)
!13778 = !DILocation(line: 447, column: 15, scope: !13775)
!13779 = !DILocation(line: 447, column: 51, scope: !13775)
!13780 = !DILocation(line: 449, column: 15, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !13562, line: 449, column: 14)
!13782 = distinct !DILexicalBlock(scope: !13775, file: !13562, line: 448, column: 9)
!13783 = !DILocation(line: 449, column: 29, scope: !13781)
!13784 = !DILocation(line: 449, column: 43, scope: !13781)
!13785 = !DILocation(line: 449, column: 14, scope: !13782)
!13786 = distinct !{!13786, !13777, !13787}
!13787 = !DILocation(line: 453, column: 9, scope: !13775)
!13788 = !DILocation(line: 0, scope: !13742)
!13789 = !DILocation(line: 458, column: 27, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13627, file: !13562, line: 458, column: 6)
!13791 = !DILocation(line: 458, column: 43, scope: !13790)
!13792 = !DILocation(line: 458, column: 69, scope: !13790)
!13793 = !DILocation(line: 458, column: 6, scope: !13627)
!13794 = !DILocation(line: 461, column: 22, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13796, file: !13562, line: 461, column: 8)
!13796 = distinct !DILexicalBlock(scope: !13790, file: !13562, line: 459, column: 3)
!13797 = !DILocation(line: 461, column: 8, scope: !13796)
!13798 = !DILocation(line: 463, column: 11, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13800, file: !13562, line: 463, column: 10)
!13800 = distinct !DILexicalBlock(scope: !13795, file: !13562, line: 462, column: 5)
!13801 = !DILocation(line: 463, column: 47, scope: !13799)
!13802 = !DILocation(line: 463, column: 54, scope: !13799)
!13803 = !DILocation(line: 463, column: 77, scope: !13799)
!13804 = !DILocation(line: 463, column: 86, scope: !13799)
!13805 = !DILocation(line: 463, column: 10, scope: !13800)
!13806 = !DILocation(line: 477, column: 31, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13808, file: !13562, line: 477, column: 12)
!13808 = distinct !DILexicalBlock(scope: !13799, file: !13562, line: 469, column: 7)
!13809 = !DILocation(line: 477, column: 47, scope: !13807)
!13810 = !DILocation(line: 477, column: 45, scope: !13807)
!13811 = !DILocation(line: 477, column: 12, scope: !13808)
!13812 = !DILocation(line: 480, column: 14, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13814, file: !13562, line: 480, column: 14)
!13814 = distinct !DILexicalBlock(scope: !13807, file: !13562, line: 478, column: 9)
!13815 = !DILocation(line: 480, column: 80, scope: !13813)
!13816 = !DILocation(line: 480, column: 14, scope: !13814)
!13817 = !DILocation(line: 486, column: 11, scope: !13814)
!13818 = !DILocation(line: 488, column: 11, scope: !13814)
!13819 = !DILocation(line: 489, column: 9, scope: !13814)
!13820 = !DILocation(line: 494, column: 11, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13807, file: !13562, line: 491, column: 9)
!13822 = !DILocation(line: 496, column: 11, scope: !13821)
!13823 = !DILocation(line: 499, column: 65, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13821, file: !13562, line: 499, column: 14)
!13825 = !DILocation(line: 499, column: 14, scope: !13824)
!13826 = !DILocation(line: 499, column: 80, scope: !13824)
!13827 = !DILocation(line: 499, column: 14, scope: !13821)
!13828 = !DILocation(line: 506, column: 67, scope: !13808)
!13829 = !DILocation(line: 506, column: 81, scope: !13808)
!13830 = !DILocation(line: 506, column: 36, scope: !13808)
!13831 = !DILocation(line: 507, column: 52, scope: !13808)
!13832 = !DILocation(line: 507, column: 74, scope: !13808)
!13833 = !DILocation(line: 507, column: 31, scope: !13808)
!13834 = !DILocation(line: 507, column: 28, scope: !13808)
!13835 = !DILocation(line: 506, column: 25, scope: !13808)
!13836 = !DILocation(line: 510, column: 31, scope: !13808)
!13837 = !DILocation(line: 510, column: 18, scope: !13808)
!13838 = !DILocation(line: 511, column: 19, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13808, file: !13562, line: 511, column: 12)
!13840 = !DILocation(line: 511, column: 12, scope: !13808)
!13841 = !DILocation(line: 523, column: 29, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13843, file: !13562, line: 523, column: 10)
!13843 = distinct !DILexicalBlock(scope: !13795, file: !13562, line: 518, column: 5)
!13844 = !DILocation(line: 523, column: 38, scope: !13842)
!13845 = !DILocation(line: 523, column: 10, scope: !13843)
!13846 = !DILocation(line: 526, column: 9, scope: !13847)
!13847 = distinct !DILexicalBlock(scope: !13842, file: !13562, line: 524, column: 7)
!13848 = !DILocation(line: 529, column: 21, scope: !13847)
!13849 = !DILocation(line: 532, column: 9, scope: !13847)
!13850 = !DILocation(line: 532, column: 15, scope: !13847)
!13851 = !DILocation(line: 532, column: 51, scope: !13847)
!13852 = !DILocation(line: 534, column: 15, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13854, file: !13562, line: 534, column: 14)
!13854 = distinct !DILexicalBlock(scope: !13847, file: !13562, line: 533, column: 9)
!13855 = !DILocation(line: 534, column: 29, scope: !13853)
!13856 = !DILocation(line: 534, column: 42, scope: !13853)
!13857 = !DILocation(line: 534, column: 14, scope: !13854)
!13858 = distinct !{!13858, !13849, !13859}
!13859 = !DILocation(line: 538, column: 9, scope: !13847)
!13860 = !DILocation(line: 544, column: 9, scope: !13847)
!13861 = !DILocation(line: 546, column: 9, scope: !13847)
!13862 = !DILocation(line: 548, column: 7, scope: !13847)
!13863 = !DILocation(line: 552, column: 9, scope: !13864)
!13864 = distinct !DILexicalBlock(scope: !13842, file: !13562, line: 550, column: 7)
!13865 = !DILocation(line: 555, column: 21, scope: !13864)
!13866 = !DILocation(line: 558, column: 9, scope: !13864)
!13867 = !DILocation(line: 558, column: 15, scope: !13864)
!13868 = !DILocation(line: 558, column: 51, scope: !13864)
!13869 = !DILocation(line: 560, column: 15, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13871, file: !13562, line: 560, column: 14)
!13871 = distinct !DILexicalBlock(scope: !13864, file: !13562, line: 559, column: 9)
!13872 = !DILocation(line: 560, column: 29, scope: !13870)
!13873 = !DILocation(line: 560, column: 42, scope: !13870)
!13874 = !DILocation(line: 560, column: 14, scope: !13871)
!13875 = distinct !{!13875, !13866, !13876}
!13876 = !DILocation(line: 564, column: 9, scope: !13864)
!13877 = !DILocation(line: 569, column: 27, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13627, file: !13562, line: 569, column: 6)
!13879 = !DILocation(line: 569, column: 43, scope: !13878)
!13880 = !DILocation(line: 569, column: 69, scope: !13878)
!13881 = !DILocation(line: 569, column: 6, scope: !13627)
!13882 = !DILocation(line: 575, column: 27, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13884, file: !13562, line: 575, column: 8)
!13884 = distinct !DILexicalBlock(scope: !13878, file: !13562, line: 570, column: 3)
!13885 = !DILocation(line: 575, column: 36, scope: !13883)
!13886 = !DILocation(line: 575, column: 8, scope: !13884)
!13887 = !DILocation(line: 578, column: 7, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13883, file: !13562, line: 576, column: 5)
!13889 = !DILocation(line: 581, column: 19, scope: !13888)
!13890 = !DILocation(line: 584, column: 7, scope: !13888)
!13891 = !DILocation(line: 584, column: 13, scope: !13888)
!13892 = !DILocation(line: 584, column: 49, scope: !13888)
!13893 = !DILocation(line: 586, column: 13, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13895, file: !13562, line: 586, column: 12)
!13895 = distinct !DILexicalBlock(scope: !13888, file: !13562, line: 585, column: 7)
!13896 = !DILocation(line: 586, column: 27, scope: !13894)
!13897 = !DILocation(line: 586, column: 41, scope: !13894)
!13898 = !DILocation(line: 586, column: 12, scope: !13895)
!13899 = distinct !{!13899, !13890, !13900}
!13900 = !DILocation(line: 590, column: 7, scope: !13888)
!13901 = !DILocation(line: 595, column: 7, scope: !13902)
!13902 = distinct !DILexicalBlock(scope: !13883, file: !13562, line: 593, column: 5)
!13903 = !DILocation(line: 598, column: 19, scope: !13902)
!13904 = !DILocation(line: 601, column: 7, scope: !13902)
!13905 = !DILocation(line: 601, column: 13, scope: !13902)
!13906 = !DILocation(line: 601, column: 49, scope: !13902)
!13907 = !DILocation(line: 603, column: 13, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13909, file: !13562, line: 603, column: 12)
!13909 = distinct !DILexicalBlock(scope: !13902, file: !13562, line: 602, column: 7)
!13910 = !DILocation(line: 603, column: 27, scope: !13908)
!13911 = !DILocation(line: 603, column: 41, scope: !13908)
!13912 = !DILocation(line: 603, column: 12, scope: !13909)
!13913 = distinct !{!13913, !13904, !13914}
!13914 = !DILocation(line: 607, column: 7, scope: !13902)
!13915 = !DILocation(line: 611, column: 27, scope: !13660)
!13916 = !DILocation(line: 611, column: 43, scope: !13660)
!13917 = !DILocation(line: 611, column: 69, scope: !13660)
!13918 = !DILocation(line: 611, column: 6, scope: !13627)
!13919 = !DILocation(line: 0, scope: !13659)
!13920 = !DILocation(line: 620, column: 8, scope: !13665)
!13921 = !DILocation(line: 620, column: 8, scope: !13659)
!13922 = !DILocation(line: 622, column: 7, scope: !13663)
!13923 = !DILocation(line: 622, column: 7, scope: !13664)
!13924 = !DILocation(line: 624, column: 5, scope: !13664)
!13925 = !DILocation(line: 626, column: 8, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13659, file: !13562, line: 626, column: 8)
!13927 = !DILocation(line: 626, column: 8, scope: !13659)
!13928 = !DILocation(line: 629, column: 7, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13926, file: !13562, line: 627, column: 5)
!13930 = !DILocation(line: 632, column: 19, scope: !13929)
!13931 = !DILocation(line: 634, column: 7, scope: !13929)
!13932 = !DILocation(line: 634, column: 13, scope: !13929)
!13933 = !DILocation(line: 636, column: 13, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13935, file: !13562, line: 636, column: 12)
!13935 = distinct !DILexicalBlock(scope: !13929, file: !13562, line: 635, column: 7)
!13936 = !DILocation(line: 636, column: 27, scope: !13934)
!13937 = !DILocation(line: 636, column: 40, scope: !13934)
!13938 = !DILocation(line: 636, column: 12, scope: !13935)
!13939 = distinct !{!13939, !13931, !13940}
!13940 = !DILocation(line: 640, column: 7, scope: !13929)
!13941 = !DILocation(line: 644, column: 5, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13943, file: !13562, line: 644, column: 5)
!13943 = distinct !DILexicalBlock(scope: !13659, file: !13562, line: 644, column: 5)
!13944 = !DILocation(line: 644, column: 5, scope: !13943)
!13945 = !DILocation(line: 644, column: 5, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13942, file: !13562, line: 644, column: 5)
!13947 = !DILocation(line: 644, column: 5, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13949, file: !13562, line: 644, column: 5)
!13949 = distinct !DILexicalBlock(scope: !13942, file: !13562, line: 644, column: 5)
!13950 = !DILocation(line: 644, column: 5, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13952, file: !13562, line: 644, column: 5)
!13952 = distinct !DILexicalBlock(scope: !13949, file: !13562, line: 644, column: 5)
!13953 = !DILocation(line: 644, column: 5, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13952, file: !13562, line: 644, column: 5)
!13955 = !DILocation(line: 0, scope: !13942)
!13956 = !DILocation(line: 646, column: 27, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13659, file: !13562, line: 646, column: 8)
!13958 = !DILocation(line: 646, column: 36, scope: !13957)
!13959 = !DILocation(line: 0, scope: !13957)
!13960 = !DILocation(line: 646, column: 8, scope: !13659)
!13961 = !DILocation(line: 652, column: 13, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13957, file: !13562, line: 647, column: 5)
!13963 = !DILocation(line: 652, column: 49, scope: !13962)
!13964 = !DILocation(line: 652, column: 7, scope: !13962)
!13965 = !DILocation(line: 654, column: 13, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13967, file: !13562, line: 654, column: 12)
!13967 = distinct !DILexicalBlock(scope: !13962, file: !13562, line: 653, column: 7)
!13968 = !DILocation(line: 654, column: 27, scope: !13966)
!13969 = !DILocation(line: 654, column: 41, scope: !13966)
!13970 = !DILocation(line: 654, column: 12, scope: !13967)
!13971 = distinct !{!13971, !13964, !13972}
!13972 = !DILocation(line: 658, column: 7, scope: !13962)
!13973 = !DILocation(line: 666, column: 13, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !13957, file: !13562, line: 661, column: 5)
!13975 = !DILocation(line: 666, column: 49, scope: !13974)
!13976 = !DILocation(line: 666, column: 7, scope: !13974)
!13977 = !DILocation(line: 668, column: 13, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13979, file: !13562, line: 668, column: 12)
!13979 = distinct !DILexicalBlock(scope: !13974, file: !13562, line: 667, column: 7)
!13980 = !DILocation(line: 668, column: 27, scope: !13978)
!13981 = !DILocation(line: 668, column: 41, scope: !13978)
!13982 = !DILocation(line: 668, column: 12, scope: !13979)
!13983 = distinct !{!13983, !13976, !13984}
!13984 = !DILocation(line: 672, column: 7, scope: !13974)
!13985 = !DILocation(line: 676, column: 8, scope: !13659)
!13986 = !DILocation(line: 678, column: 7, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13988, file: !13562, line: 677, column: 5)
!13988 = distinct !DILexicalBlock(scope: !13659, file: !13562, line: 676, column: 8)
!13989 = !DILocation(line: 679, column: 5, scope: !13987)
!13990 = !DILocation(line: 685, column: 31, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13627, file: !13562, line: 685, column: 7)
!13992 = !DILocation(line: 685, column: 41, scope: !13991)
!13993 = !DILocation(line: 685, column: 7, scope: !13627)
!13994 = !DILocation(line: 688, column: 22, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13996, file: !13562, line: 688, column: 8)
!13996 = distinct !DILexicalBlock(scope: !13991, file: !13562, line: 686, column: 3)
!13997 = !DILocation(line: 688, column: 8, scope: !13996)
!13998 = !DILocation(line: 690, column: 44, scope: !13999)
!13999 = distinct !DILexicalBlock(scope: !14000, file: !13562, line: 690, column: 10)
!14000 = distinct !DILexicalBlock(scope: !13995, file: !13562, line: 689, column: 5)
!14001 = !DILocation(line: 0, scope: !13999)
!14002 = !DILocation(line: 690, column: 10, scope: !14000)
!14003 = !DILocation(line: 704, column: 15, scope: !14004)
!14004 = distinct !DILexicalBlock(scope: !13999, file: !13562, line: 691, column: 7)
!14005 = !DILocation(line: 704, column: 51, scope: !14004)
!14006 = !DILocation(line: 704, column: 9, scope: !14004)
!14007 = !DILocation(line: 706, column: 15, scope: !14008)
!14008 = distinct !DILexicalBlock(scope: !14009, file: !13562, line: 706, column: 14)
!14009 = distinct !DILexicalBlock(scope: !14004, file: !13562, line: 705, column: 9)
!14010 = !DILocation(line: 706, column: 29, scope: !14008)
!14011 = !DILocation(line: 706, column: 43, scope: !14008)
!14012 = !DILocation(line: 706, column: 14, scope: !14009)
!14013 = distinct !{!14013, !14006, !14014}
!14014 = !DILocation(line: 710, column: 9, scope: !14004)
!14015 = !DILocation(line: 713, column: 9, scope: !14004)
!14016 = !DILocation(line: 717, column: 9, scope: !14004)
!14017 = !DILocation(line: 720, column: 21, scope: !14004)
!14018 = !DILocation(line: 723, column: 9, scope: !14004)
!14019 = !DILocation(line: 723, column: 15, scope: !14004)
!14020 = !DILocation(line: 723, column: 51, scope: !14004)
!14021 = !DILocation(line: 725, column: 15, scope: !14022)
!14022 = distinct !DILexicalBlock(scope: !14023, file: !13562, line: 725, column: 14)
!14023 = distinct !DILexicalBlock(scope: !14004, file: !13562, line: 724, column: 9)
!14024 = !DILocation(line: 725, column: 29, scope: !14022)
!14025 = !DILocation(line: 725, column: 43, scope: !14022)
!14026 = !DILocation(line: 725, column: 14, scope: !14023)
!14027 = distinct !{!14027, !14018, !14028}
!14028 = !DILocation(line: 729, column: 9, scope: !14004)
!14029 = !DILocation(line: 740, column: 15, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !13999, file: !13562, line: 732, column: 7)
!14031 = !DILocation(line: 740, column: 51, scope: !14030)
!14032 = !DILocation(line: 740, column: 9, scope: !14030)
!14033 = !DILocation(line: 742, column: 15, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14035, file: !13562, line: 742, column: 14)
!14035 = distinct !DILexicalBlock(scope: !14030, file: !13562, line: 741, column: 9)
!14036 = !DILocation(line: 742, column: 29, scope: !14034)
!14037 = !DILocation(line: 742, column: 43, scope: !14034)
!14038 = !DILocation(line: 742, column: 14, scope: !14035)
!14039 = distinct !{!14039, !14032, !14040}
!14040 = !DILocation(line: 746, column: 9, scope: !14030)
!14041 = !DILocation(line: 752, column: 44, scope: !14042)
!14042 = distinct !DILexicalBlock(scope: !14043, file: !13562, line: 752, column: 10)
!14043 = distinct !DILexicalBlock(scope: !13995, file: !13562, line: 750, column: 5)
!14044 = !DILocation(line: 752, column: 10, scope: !14043)
!14045 = !DILocation(line: 759, column: 27, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14042, file: !13562, line: 757, column: 7)
!14047 = !DILocation(line: 760, column: 13, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14046, file: !13562, line: 760, column: 12)
!14049 = !DILocation(line: 760, column: 77, scope: !14048)
!14050 = !DILocation(line: 760, column: 51, scope: !14048)
!14051 = !DILocation(line: 760, column: 88, scope: !14048)
!14052 = !DILocation(line: 761, column: 13, scope: !14048)
!14053 = !DILocation(line: 761, column: 77, scope: !14048)
!14054 = !DILocation(line: 761, column: 51, scope: !14048)
!14055 = !DILocation(line: 761, column: 85, scope: !14048)
!14056 = !DILocation(line: 762, column: 13, scope: !14048)
!14057 = !DILocation(line: 762, column: 77, scope: !14048)
!14058 = !DILocation(line: 762, column: 51, scope: !14048)
!14059 = !DILocation(line: 760, column: 12, scope: !14046)
!14060 = !DILocation(line: 770, column: 3, scope: !13627)
!14061 = !DILocation(line: 771, column: 1, scope: !13627)
!14062 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !13562, file: !13562, line: 1343, type: !13625, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !14063)
!14063 = !{!14064, !14065, !14066, !14067}
!14064 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !14062, file: !13562, line: 1343, type: !108)
!14065 = !DILocalVariable(name: "vos", scope: !14062, file: !13562, line: 1345, type: !108)
!14066 = !DILocalVariable(name: "latency", scope: !14062, file: !13562, line: 1346, type: !108)
!14067 = !DILocalVariable(name: "tmpreg", scope: !14068, file: !13562, line: 1357, type: !813)
!14068 = distinct !DILexicalBlock(scope: !14069, file: !13562, line: 1357, column: 7)
!14069 = distinct !DILexicalBlock(scope: !14070, file: !13562, line: 1356, column: 5)
!14070 = distinct !DILexicalBlock(scope: !14071, file: !13562, line: 1351, column: 8)
!14071 = distinct !DILexicalBlock(scope: !14072, file: !13562, line: 1350, column: 3)
!14072 = distinct !DILexicalBlock(scope: !14062, file: !13562, line: 1349, column: 7)
!14073 = !DILocation(line: 0, scope: !14062)
!14074 = !DILocation(line: 1349, column: 7, scope: !14072)
!14075 = !DILocation(line: 1349, column: 42, scope: !14072)
!14076 = !DILocation(line: 1349, column: 7, scope: !14062)
!14077 = !DILocation(line: 1351, column: 8, scope: !14070)
!14078 = !DILocation(line: 1351, column: 8, scope: !14071)
!14079 = !DILocation(line: 1353, column: 13, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14070, file: !13562, line: 1352, column: 5)
!14081 = !DILocation(line: 1354, column: 5, scope: !14080)
!14082 = !DILocation(line: 1357, column: 7, scope: !14068)
!14083 = !DILocation(line: 1357, column: 7, scope: !14069)
!14084 = !DILocation(line: 1358, column: 13, scope: !14069)
!14085 = !DILocation(line: 1359, column: 7, scope: !14069)
!14086 = !DILocation(line: 0, scope: !14070)
!14087 = !DILocation(line: 1363, column: 13, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14071, file: !13562, line: 1363, column: 8)
!14089 = !DILocation(line: 1363, column: 46, scope: !14088)
!14090 = !DILocation(line: 1369, column: 3, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14062, file: !13562, line: 1369, column: 3)
!14092 = !DILocation(line: 1369, column: 3, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !14094, file: !13562, line: 1369, column: 3)
!14094 = distinct !DILexicalBlock(scope: !14091, file: !13562, line: 1369, column: 3)
!14095 = !DILocation(line: 1373, column: 6, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14062, file: !13562, line: 1373, column: 6)
!14097 = !DILocation(line: 1379, column: 1, scope: !14062)
!14098 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !13562, file: !13562, line: 799, type: !14099, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !14110)
!14099 = !DISubroutineType(types: !14100)
!14100 = !{!13565, !14101, !108}
!14101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14102, size: 32)
!14102 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !13632, line: 304, baseType: !14103)
!14103 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13632, line: 288, size: 160, elements: !14104)
!14104 = !{!14105, !14106, !14107, !14108, !14109}
!14105 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !14103, file: !13632, line: 290, baseType: !108, size: 32)
!14106 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !14103, file: !13632, line: 293, baseType: !108, size: 32, offset: 32)
!14107 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !14103, file: !13632, line: 296, baseType: !108, size: 32, offset: 64)
!14108 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !14103, file: !13632, line: 299, baseType: !108, size: 32, offset: 96)
!14109 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !14103, file: !13632, line: 302, baseType: !108, size: 32, offset: 128)
!14110 = !{!14111, !14112, !14113, !14114}
!14111 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !14098, file: !13562, line: 799, type: !14101)
!14112 = !DILocalVariable(name: "FLatency", arg: 2, scope: !14098, file: !13562, line: 799, type: !108)
!14113 = !DILocalVariable(name: "tickstart", scope: !14098, file: !13562, line: 801, type: !108)
!14114 = !DILocalVariable(name: "status", scope: !14098, file: !13562, line: 802, type: !13565)
!14115 = !DILocation(line: 0, scope: !14098)
!14116 = !DILocation(line: 805, column: 24, scope: !14117)
!14117 = distinct !DILexicalBlock(scope: !14098, file: !13562, line: 805, column: 6)
!14118 = !DILocation(line: 805, column: 6, scope: !14098)
!14119 = !DILocation(line: 817, column: 17, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !14098, file: !13562, line: 817, column: 6)
!14121 = !DILocation(line: 817, column: 15, scope: !14120)
!14122 = !DILocation(line: 817, column: 6, scope: !14098)
!14123 = !DILocation(line: 820, column: 5, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !14125, file: !13562, line: 820, column: 5)
!14125 = distinct !DILexicalBlock(scope: !14126, file: !13562, line: 820, column: 5)
!14126 = distinct !DILexicalBlock(scope: !14120, file: !13562, line: 818, column: 3)
!14127 = !DILocation(line: 820, column: 5, scope: !14125)
!14128 = !DILocation(line: 820, column: 5, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14124, file: !13562, line: 820, column: 5)
!14130 = !DILocation(line: 824, column: 8, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14126, file: !13562, line: 824, column: 8)
!14132 = !DILocation(line: 824, column: 34, scope: !14131)
!14133 = !DILocation(line: 824, column: 8, scope: !14126)
!14134 = !DILocation(line: 831, column: 27, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14098, file: !13562, line: 831, column: 6)
!14136 = !DILocation(line: 831, column: 38, scope: !14135)
!14137 = !DILocation(line: 831, column: 60, scope: !14135)
!14138 = !DILocation(line: 831, column: 6, scope: !14098)
!14139 = !DILocation(line: 834, column: 5, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14135, file: !13562, line: 832, column: 3)
!14141 = !DILocation(line: 838, column: 27, scope: !14142)
!14142 = distinct !DILexicalBlock(scope: !14098, file: !13562, line: 838, column: 6)
!14143 = !DILocation(line: 835, column: 3, scope: !14140)
!14144 = !DILocation(line: 838, column: 38, scope: !14142)
!14145 = !DILocation(line: 838, column: 62, scope: !14142)
!14146 = !DILocation(line: 838, column: 6, scope: !14098)
!14147 = !DILocation(line: 843, column: 27, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14149, file: !13562, line: 843, column: 8)
!14149 = distinct !DILexicalBlock(scope: !14142, file: !13562, line: 839, column: 3)
!14150 = !DILocation(line: 843, column: 8, scope: !14149)
!14151 = !DILocation(line: 846, column: 10, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !14153, file: !13562, line: 846, column: 10)
!14153 = distinct !DILexicalBlock(scope: !14148, file: !13562, line: 844, column: 5)
!14154 = !DILocation(line: 846, column: 46, scope: !14152)
!14155 = !DILocation(line: 846, column: 10, scope: !14153)
!14156 = !DILocation(line: 855, column: 10, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14158, file: !13562, line: 855, column: 10)
!14158 = distinct !DILexicalBlock(scope: !14159, file: !13562, line: 853, column: 5)
!14159 = distinct !DILexicalBlock(scope: !14148, file: !13562, line: 852, column: 13)
!14160 = !DILocation(line: 855, column: 46, scope: !14157)
!14161 = !DILocation(line: 855, column: 10, scope: !14158)
!14162 = !DILocation(line: 864, column: 10, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14164, file: !13562, line: 864, column: 10)
!14164 = distinct !DILexicalBlock(scope: !14165, file: !13562, line: 862, column: 5)
!14165 = distinct !DILexicalBlock(scope: !14159, file: !13562, line: 861, column: 13)
!14166 = !DILocation(line: 864, column: 46, scope: !14163)
!14167 = !DILocation(line: 864, column: 10, scope: !14164)
!14168 = !DILocation(line: 873, column: 10, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14170, file: !13562, line: 873, column: 10)
!14170 = distinct !DILexicalBlock(scope: !14165, file: !13562, line: 871, column: 5)
!14171 = !DILocation(line: 873, column: 46, scope: !14169)
!14172 = !DILocation(line: 873, column: 10, scope: !14170)
!14173 = !DILocation(line: 878, column: 5, scope: !14149)
!14174 = !DILocation(line: 881, column: 17, scope: !14149)
!14175 = !DILocation(line: 883, column: 27, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14149, file: !13562, line: 883, column: 8)
!14177 = !DILocation(line: 883, column: 8, scope: !14149)
!14178 = !DILocation(line: 885, column: 14, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14176, file: !13562, line: 884, column: 5)
!14180 = !DILocation(line: 885, column: 44, scope: !14179)
!14181 = !DILocation(line: 885, column: 7, scope: !14179)
!14182 = !DILocation(line: 887, column: 13, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14184, file: !13562, line: 887, column: 12)
!14184 = distinct !DILexicalBlock(scope: !14179, file: !13562, line: 886, column: 7)
!14185 = !DILocation(line: 887, column: 27, scope: !14183)
!14186 = !DILocation(line: 887, column: 41, scope: !14183)
!14187 = !DILocation(line: 887, column: 12, scope: !14184)
!14188 = distinct !{!14188, !14181, !14189}
!14189 = !DILocation(line: 891, column: 7, scope: !14179)
!14190 = !DILocation(line: 895, column: 14, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14192, file: !13562, line: 894, column: 5)
!14192 = distinct !DILexicalBlock(scope: !14176, file: !13562, line: 893, column: 13)
!14193 = !DILocation(line: 895, column: 44, scope: !14191)
!14194 = !DILocation(line: 895, column: 7, scope: !14191)
!14195 = !DILocation(line: 897, column: 13, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14197, file: !13562, line: 897, column: 12)
!14197 = distinct !DILexicalBlock(scope: !14191, file: !13562, line: 896, column: 7)
!14198 = !DILocation(line: 897, column: 27, scope: !14196)
!14199 = !DILocation(line: 897, column: 41, scope: !14196)
!14200 = !DILocation(line: 897, column: 12, scope: !14197)
!14201 = distinct !{!14201, !14194, !14202}
!14202 = !DILocation(line: 901, column: 7, scope: !14191)
!14203 = !DILocation(line: 905, column: 14, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14205, file: !13562, line: 904, column: 5)
!14205 = distinct !DILexicalBlock(scope: !14192, file: !13562, line: 903, column: 13)
!14206 = !DILocation(line: 905, column: 44, scope: !14204)
!14207 = !DILocation(line: 905, column: 7, scope: !14204)
!14208 = !DILocation(line: 907, column: 13, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14210, file: !13562, line: 907, column: 12)
!14210 = distinct !DILexicalBlock(scope: !14204, file: !13562, line: 906, column: 7)
!14211 = !DILocation(line: 907, column: 27, scope: !14209)
!14212 = !DILocation(line: 907, column: 41, scope: !14209)
!14213 = !DILocation(line: 907, column: 12, scope: !14210)
!14214 = distinct !{!14214, !14207, !14215}
!14215 = !DILocation(line: 911, column: 7, scope: !14204)
!14216 = !DILocation(line: 915, column: 13, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14205, file: !13562, line: 914, column: 5)
!14218 = !DILocation(line: 915, column: 43, scope: !14217)
!14219 = !DILocation(line: 915, column: 7, scope: !14217)
!14220 = !DILocation(line: 917, column: 13, scope: !14221)
!14221 = distinct !DILexicalBlock(scope: !14222, file: !13562, line: 917, column: 12)
!14222 = distinct !DILexicalBlock(scope: !14217, file: !13562, line: 916, column: 7)
!14223 = !DILocation(line: 917, column: 27, scope: !14221)
!14224 = !DILocation(line: 917, column: 41, scope: !14221)
!14225 = !DILocation(line: 917, column: 12, scope: !14222)
!14226 = distinct !{!14226, !14219, !14227}
!14227 = !DILocation(line: 921, column: 7, scope: !14217)
!14228 = !DILocation(line: 925, column: 17, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14098, file: !13562, line: 925, column: 6)
!14230 = !DILocation(line: 925, column: 15, scope: !14229)
!14231 = !DILocation(line: 925, column: 6, scope: !14098)
!14232 = !DILocation(line: 928, column: 5, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14234, file: !13562, line: 928, column: 5)
!14234 = distinct !DILexicalBlock(scope: !14229, file: !13562, line: 926, column: 3)
!14235 = !DILocation(line: 932, column: 8, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14234, file: !13562, line: 932, column: 8)
!14237 = !DILocation(line: 932, column: 34, scope: !14236)
!14238 = !DILocation(line: 932, column: 8, scope: !14234)
!14239 = !DILocation(line: 939, column: 27, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14098, file: !13562, line: 939, column: 6)
!14241 = !DILocation(line: 939, column: 38, scope: !14240)
!14242 = !DILocation(line: 939, column: 61, scope: !14240)
!14243 = !DILocation(line: 939, column: 6, scope: !14098)
!14244 = !DILocation(line: 942, column: 5, scope: !14245)
!14245 = distinct !DILexicalBlock(scope: !14240, file: !13562, line: 940, column: 3)
!14246 = !DILocation(line: 946, column: 27, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14098, file: !13562, line: 946, column: 6)
!14248 = !DILocation(line: 943, column: 3, scope: !14245)
!14249 = !DILocation(line: 946, column: 38, scope: !14247)
!14250 = !DILocation(line: 946, column: 61, scope: !14247)
!14251 = !DILocation(line: 946, column: 6, scope: !14098)
!14252 = !DILocation(line: 949, column: 5, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14247, file: !13562, line: 947, column: 3)
!14254 = !DILocation(line: 950, column: 3, scope: !14253)
!14255 = !DILocation(line: 953, column: 21, scope: !14098)
!14256 = !DILocation(line: 953, column: 70, scope: !14098)
!14257 = !DILocation(line: 953, column: 91, scope: !14098)
!14258 = !DILocation(line: 953, column: 50, scope: !14098)
!14259 = !DILocation(line: 953, column: 47, scope: !14098)
!14260 = !DILocation(line: 953, column: 19, scope: !14098)
!14261 = !DILocation(line: 956, column: 25, scope: !14098)
!14262 = !DILocation(line: 956, column: 12, scope: !14098)
!14263 = !DILocation(line: 958, column: 3, scope: !14098)
!14264 = !DILocation(line: 959, column: 1, scope: !14098)
!14265 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !13562, file: !13562, line: 1083, type: !9213, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !14266)
!14266 = !{!14267, !14268, !14269, !14270, !14271, !14272}
!14267 = !DILocalVariable(name: "tmpreg", scope: !14265, file: !13562, line: 1085, type: !108)
!14268 = !DILocalVariable(name: "pllm", scope: !14265, file: !13562, line: 1085, type: !108)
!14269 = !DILocalVariable(name: "plld", scope: !14265, file: !13562, line: 1085, type: !108)
!14270 = !DILocalVariable(name: "pllvco", scope: !14265, file: !13562, line: 1085, type: !108)
!14271 = !DILocalVariable(name: "msiclkrange", scope: !14265, file: !13562, line: 1085, type: !108)
!14272 = !DILocalVariable(name: "sysclockfreq", scope: !14265, file: !13562, line: 1085, type: !108)
!14273 = !DILocation(line: 1087, column: 17, scope: !14265)
!14274 = !DILocation(line: 0, scope: !14265)
!14275 = !DILocation(line: 1090, column: 3, scope: !14265)
!14276 = !DILocation(line: 1100, column: 7, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14278, file: !13562, line: 1098, column: 5)
!14278 = distinct !DILexicalBlock(scope: !14265, file: !13562, line: 1091, column: 3)
!14279 = !DILocation(line: 1104, column: 63, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14278, file: !13562, line: 1103, column: 5)
!14281 = !DILocation(line: 1104, column: 14, scope: !14280)
!14282 = !DILocation(line: 1105, column: 52, scope: !14280)
!14283 = !DILocation(line: 1105, column: 76, scope: !14280)
!14284 = !DILocation(line: 1106, column: 11, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14280, file: !13562, line: 1106, column: 11)
!14286 = !DILocation(line: 1106, column: 41, scope: !14285)
!14287 = !DILocation(line: 1106, column: 11, scope: !14280)
!14288 = !DILocation(line: 0, scope: !14285)
!14289 = !DILocation(line: 1117, column: 7, scope: !14280)
!14290 = !DILocation(line: 1122, column: 27, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14278, file: !13562, line: 1121, column: 5)
!14292 = !DILocation(line: 1122, column: 56, scope: !14291)
!14293 = !DILocation(line: 1123, column: 30, scope: !14291)
!14294 = !DILocation(line: 1124, column: 7, scope: !14291)
!14295 = !DILocation(line: 0, scope: !14278)
!14296 = !DILocation(line: 1127, column: 3, scope: !14265)
!14297 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !13562, file: !13562, line: 1005, type: !11395, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !14298)
!14298 = !{!14299, !14300, !14301, !14302, !14312}
!14299 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !14297, file: !13562, line: 1005, type: !108)
!14300 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !14297, file: !13562, line: 1005, type: !108)
!14301 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !14297, file: !13562, line: 1005, type: !108)
!14302 = !DILocalVariable(name: "gpio", scope: !14297, file: !13562, line: 1007, type: !14303)
!14303 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !14304, line: 64, baseType: !14305)
!14304 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14305 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14304, line: 48, size: 160, elements: !14306)
!14306 = !{!14307, !14308, !14309, !14310, !14311}
!14307 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !14305, file: !14304, line: 50, baseType: !108, size: 32)
!14308 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !14305, file: !14304, line: 53, baseType: !108, size: 32, offset: 32)
!14309 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !14305, file: !14304, line: 56, baseType: !108, size: 32, offset: 64)
!14310 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !14305, file: !14304, line: 59, baseType: !108, size: 32, offset: 96)
!14311 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !14305, file: !14304, line: 62, baseType: !108, size: 32, offset: 128)
!14312 = !DILocalVariable(name: "tmpreg", scope: !14313, file: !13562, line: 1022, type: !813)
!14313 = distinct !DILexicalBlock(scope: !14297, file: !13562, line: 1022, column: 3)
!14314 = !DILocation(line: 0, scope: !14297)
!14315 = !DILocation(line: 1007, column: 3, scope: !14297)
!14316 = !DILocation(line: 1007, column: 20, scope: !14297)
!14317 = !DILocation(line: 1015, column: 8, scope: !14297)
!14318 = !DILocation(line: 1015, column: 18, scope: !14297)
!14319 = !DILocation(line: 1016, column: 8, scope: !14297)
!14320 = !DILocation(line: 1016, column: 18, scope: !14297)
!14321 = !DILocation(line: 1017, column: 8, scope: !14297)
!14322 = !DILocation(line: 1017, column: 18, scope: !14297)
!14323 = !DILocation(line: 1018, column: 8, scope: !14297)
!14324 = !DILocation(line: 1018, column: 18, scope: !14297)
!14325 = !DILocation(line: 1019, column: 8, scope: !14297)
!14326 = !DILocation(line: 1019, column: 18, scope: !14297)
!14327 = !DILocation(line: 1022, column: 3, scope: !14313)
!14328 = !DILocation(line: 1022, column: 3, scope: !14297)
!14329 = !DILocation(line: 1024, column: 3, scope: !14297)
!14330 = !DILocation(line: 1027, column: 3, scope: !14297)
!14331 = !DILocation(line: 1028, column: 1, scope: !14297)
!14332 = !DISubprogram(name: "HAL_GPIO_Init", scope: !14304, file: !14304, line: 293, type: !14333, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2894)
!14333 = !DISubroutineType(types: !14334)
!14334 = !{null, !3874, !14335}
!14335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14303, size: 32)
!14336 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !13562, file: !13562, line: 1039, type: !333, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !2894)
!14337 = !DILocation(line: 1041, column: 38, scope: !14336)
!14338 = !DILocation(line: 1042, column: 1, scope: !14336)
!14339 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !13562, file: !13562, line: 1048, type: !333, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !2894)
!14340 = !DILocation(line: 1050, column: 38, scope: !14339)
!14341 = !DILocation(line: 1051, column: 1, scope: !14339)
!14342 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !13562, file: !13562, line: 1139, type: !9213, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !2894)
!14343 = !DILocation(line: 1141, column: 10, scope: !14342)
!14344 = !DILocation(line: 1141, column: 3, scope: !14342)
!14345 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !13562, file: !13562, line: 1150, type: !9213, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !2894)
!14346 = !DILocation(line: 1153, column: 11, scope: !14345)
!14347 = !DILocation(line: 1153, column: 56, scope: !14345)
!14348 = !DILocation(line: 1153, column: 79, scope: !14345)
!14349 = !DILocation(line: 1153, column: 36, scope: !14345)
!14350 = !DILocation(line: 1153, column: 33, scope: !14345)
!14351 = !DILocation(line: 1153, column: 3, scope: !14345)
!14352 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !13562, file: !13562, line: 1162, type: !9213, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !2894)
!14353 = !DILocation(line: 1165, column: 11, scope: !14352)
!14354 = !DILocation(line: 1165, column: 55, scope: !14352)
!14355 = !DILocation(line: 1165, column: 78, scope: !14352)
!14356 = !DILocation(line: 1165, column: 35, scope: !14352)
!14357 = !DILocation(line: 1165, column: 32, scope: !14352)
!14358 = !DILocation(line: 1165, column: 3, scope: !14352)
!14359 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !13562, file: !13562, line: 1175, type: !14360, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !14362)
!14360 = !DISubroutineType(types: !14361)
!14361 = !{null, !13630}
!14362 = !{!14363}
!14363 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !14359, file: !13562, line: 1175, type: !13630)
!14364 = !DILocation(line: 0, scope: !14359)
!14365 = !DILocation(line: 1181, column: 22, scope: !14359)
!14366 = !DILocation(line: 1181, column: 37, scope: !14359)
!14367 = !DILocation(line: 1186, column: 12, scope: !14368)
!14368 = distinct !DILexicalBlock(scope: !14359, file: !13562, line: 1186, column: 6)
!14369 = !DILocation(line: 1186, column: 15, scope: !14368)
!14370 = !DILocation(line: 1186, column: 31, scope: !14368)
!14371 = !DILocation(line: 1186, column: 6, scope: !14359)
!14372 = !DILocation(line: 1188, column: 24, scope: !14373)
!14373 = distinct !DILexicalBlock(scope: !14368, file: !13562, line: 1187, column: 3)
!14374 = !DILocation(line: 1188, column: 33, scope: !14373)
!14375 = !DILocation(line: 1189, column: 3, scope: !14373)
!14376 = !DILocation(line: 1190, column: 17, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14368, file: !13562, line: 1190, column: 11)
!14378 = !DILocation(line: 1190, column: 20, scope: !14377)
!14379 = !DILocation(line: 1190, column: 35, scope: !14377)
!14380 = !DILocation(line: 0, scope: !14377)
!14381 = !DILocation(line: 1190, column: 11, scope: !14368)
!14382 = !DILocation(line: 1192, column: 33, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14377, file: !13562, line: 1191, column: 3)
!14384 = !DILocation(line: 1193, column: 3, scope: !14383)
!14385 = !DILocation(line: 1196, column: 33, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14377, file: !13562, line: 1195, column: 3)
!14387 = !DILocation(line: 1200, column: 12, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14359, file: !13562, line: 1200, column: 6)
!14389 = !DILocation(line: 1200, column: 15, scope: !14388)
!14390 = !DILocation(line: 1206, column: 24, scope: !14391)
!14391 = distinct !DILexicalBlock(scope: !14388, file: !13562, line: 1205, column: 3)
!14392 = !DILocation(line: 1206, column: 33, scope: !14391)
!14393 = !DILocation(line: 1209, column: 61, scope: !14359)
!14394 = !DILocation(line: 1209, column: 88, scope: !14359)
!14395 = !DILocation(line: 1209, column: 22, scope: !14359)
!14396 = !DILocation(line: 1209, column: 42, scope: !14359)
!14397 = !DILocation(line: 1212, column: 12, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14359, file: !13562, line: 1212, column: 6)
!14399 = !DILocation(line: 1212, column: 6, scope: !14359)
!14400 = !DILocation(line: 1218, column: 24, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14398, file: !13562, line: 1217, column: 3)
!14402 = !DILocation(line: 1218, column: 33, scope: !14401)
!14403 = !DILocation(line: 1221, column: 61, scope: !14359)
!14404 = !DILocation(line: 1221, column: 88, scope: !14359)
!14405 = !DILocation(line: 1221, column: 22, scope: !14359)
!14406 = !DILocation(line: 1221, column: 42, scope: !14359)
!14407 = !DILocation(line: 1222, column: 55, scope: !14359)
!14408 = !DILocation(line: 1222, column: 61, scope: !14359)
!14409 = !DILocation(line: 1222, column: 22, scope: !14359)
!14410 = !DILocation(line: 1222, column: 36, scope: !14359)
!14411 = !DILocation(line: 1225, column: 12, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !14359, file: !13562, line: 1225, column: 6)
!14413 = !DILocation(line: 1225, column: 16, scope: !14412)
!14414 = !DILocation(line: 1225, column: 33, scope: !14412)
!14415 = !DILocation(line: 1225, column: 6, scope: !14359)
!14416 = !DILocation(line: 1227, column: 24, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14412, file: !13562, line: 1226, column: 3)
!14418 = !DILocation(line: 1227, column: 33, scope: !14417)
!14419 = !DILocation(line: 1228, column: 3, scope: !14417)
!14420 = !DILocation(line: 1229, column: 17, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14412, file: !13562, line: 1229, column: 11)
!14422 = !DILocation(line: 1229, column: 21, scope: !14421)
!14423 = !DILocation(line: 1229, column: 37, scope: !14421)
!14424 = !DILocation(line: 0, scope: !14421)
!14425 = !DILocation(line: 1229, column: 11, scope: !14412)
!14426 = !DILocation(line: 1231, column: 33, scope: !14427)
!14427 = distinct !DILexicalBlock(scope: !14421, file: !13562, line: 1230, column: 3)
!14428 = !DILocation(line: 1232, column: 3, scope: !14427)
!14429 = !DILocation(line: 1235, column: 33, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !14421, file: !13562, line: 1234, column: 3)
!14431 = !DILocation(line: 1239, column: 12, scope: !14432)
!14432 = distinct !DILexicalBlock(scope: !14359, file: !13562, line: 1239, column: 6)
!14433 = !DILocation(line: 1239, column: 16, scope: !14432)
!14434 = !DILocation(line: 1245, column: 24, scope: !14435)
!14435 = distinct !DILexicalBlock(scope: !14432, file: !13562, line: 1244, column: 3)
!14436 = !DILocation(line: 1245, column: 33, scope: !14435)
!14437 = !DILocation(line: 1250, column: 12, scope: !14438)
!14438 = distinct !DILexicalBlock(scope: !14359, file: !13562, line: 1250, column: 6)
!14439 = !DILocation(line: 1250, column: 15, scope: !14438)
!14440 = !DILocation(line: 1250, column: 30, scope: !14438)
!14441 = !DILocation(line: 1250, column: 6, scope: !14359)
!14442 = !DILocation(line: 1256, column: 28, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14438, file: !13562, line: 1255, column: 3)
!14444 = !DILocation(line: 1256, column: 37, scope: !14443)
!14445 = !DILocation(line: 1258, column: 54, scope: !14359)
!14446 = !DILocation(line: 1258, column: 59, scope: !14359)
!14447 = !DILocation(line: 1258, column: 26, scope: !14359)
!14448 = !DILocation(line: 1258, column: 36, scope: !14359)
!14449 = !DILocation(line: 1259, column: 51, scope: !14359)
!14450 = !DILocation(line: 1259, column: 56, scope: !14359)
!14451 = !DILocation(line: 1259, column: 26, scope: !14359)
!14452 = !DILocation(line: 1259, column: 33, scope: !14359)
!14453 = !DILocation(line: 1260, column: 51, scope: !14359)
!14454 = !DILocation(line: 1260, column: 56, scope: !14359)
!14455 = !DILocation(line: 1260, column: 26, scope: !14359)
!14456 = !DILocation(line: 1260, column: 33, scope: !14359)
!14457 = !DILocation(line: 1261, column: 1, scope: !14359)
!14458 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !13562, file: !13562, line: 1271, type: !14459, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !14461)
!14459 = !DISubroutineType(types: !14460)
!14460 = !{null, !14101, !1793}
!14461 = !{!14462, !14463}
!14462 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !14458, file: !13562, line: 1271, type: !14101)
!14463 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !14458, file: !13562, line: 1271, type: !1793)
!14464 = !DILocation(line: 0, scope: !14458)
!14465 = !DILocation(line: 1278, column: 22, scope: !14458)
!14466 = !DILocation(line: 1278, column: 32, scope: !14458)
!14467 = !DILocation(line: 1281, column: 53, scope: !14458)
!14468 = !DILocation(line: 1281, column: 58, scope: !14458)
!14469 = !DILocation(line: 1281, column: 22, scope: !14458)
!14470 = !DILocation(line: 1281, column: 35, scope: !14458)
!14471 = !DILocation(line: 1284, column: 54, scope: !14458)
!14472 = !DILocation(line: 1284, column: 59, scope: !14458)
!14473 = !DILocation(line: 1284, column: 22, scope: !14458)
!14474 = !DILocation(line: 1284, column: 36, scope: !14458)
!14475 = !DILocation(line: 1287, column: 55, scope: !14458)
!14476 = !DILocation(line: 1287, column: 60, scope: !14458)
!14477 = !DILocation(line: 1287, column: 22, scope: !14458)
!14478 = !DILocation(line: 1287, column: 37, scope: !14458)
!14479 = !DILocation(line: 1290, column: 56, scope: !14458)
!14480 = !DILocation(line: 1290, column: 79, scope: !14458)
!14481 = !DILocation(line: 1290, column: 22, scope: !14458)
!14482 = !DILocation(line: 1290, column: 37, scope: !14458)
!14483 = !DILocation(line: 1293, column: 16, scope: !14458)
!14484 = !DILocation(line: 1293, column: 14, scope: !14458)
!14485 = !DILocation(line: 1294, column: 1, scope: !14458)
!14486 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !13562, file: !13562, line: 1301, type: !333, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !2894)
!14487 = !DILocation(line: 1304, column: 6, scope: !14488)
!14488 = distinct !DILexicalBlock(scope: !14486, file: !13562, line: 1304, column: 6)
!14489 = !DILocation(line: 1304, column: 6, scope: !14486)
!14490 = !DILocation(line: 1307, column: 5, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14488, file: !13562, line: 1305, column: 3)
!14492 = !DILocation(line: 1310, column: 5, scope: !14491)
!14493 = !DILocation(line: 1311, column: 3, scope: !14491)
!14494 = !DILocation(line: 1312, column: 1, scope: !14486)
!14495 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !13562, file: !13562, line: 1318, type: !333, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3817, retainedNodes: !2894)
!14496 = !DILocation(line: 1323, column: 1, scope: !14495)
!14497 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !14498, file: !14498, line: 147, type: !7896, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14499)
!14498 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14499 = !{!14500}
!14500 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14497, file: !14498, line: 147, type: !108)
!14501 = !DILocation(line: 0, scope: !14497)
!14502 = !DILocation(line: 150, column: 3, scope: !14497)
!14503 = !DILocation(line: 151, column: 1, scope: !14497)
!14504 = distinct !DISubprogram(name: "LL_InitTick", scope: !14505, file: !14505, line: 222, type: !11935, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14506)
!14505 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14506 = !{!14507, !14508}
!14507 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14504, file: !14505, line: 222, type: !108)
!14508 = !DILocalVariable(name: "Ticks", arg: 2, scope: !14504, file: !14505, line: 222, type: !108)
!14509 = !DILocation(line: 0, scope: !14504)
!14510 = !DILocation(line: 225, column: 46, scope: !14504)
!14511 = !DILocation(line: 225, column: 55, scope: !14504)
!14512 = !DILocation(line: 225, column: 18, scope: !14504)
!14513 = !DILocation(line: 226, column: 18, scope: !14504)
!14514 = !DILocation(line: 227, column: 18, scope: !14504)
!14515 = !DILocation(line: 229, column: 1, scope: !14504)
!14516 = distinct !DISubprogram(name: "LL_mDelay", scope: !14498, file: !14498, line: 163, type: !7896, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14517)
!14517 = !{!14518, !14519, !14520}
!14518 = !DILocalVariable(name: "Delay", arg: 1, scope: !14516, file: !14498, line: 163, type: !108)
!14519 = !DILocalVariable(name: "tmp", scope: !14516, file: !14498, line: 165, type: !813)
!14520 = !DILocalVariable(name: "tmpDelay", scope: !14516, file: !14498, line: 166, type: !108)
!14521 = !DILocation(line: 0, scope: !14516)
!14522 = !DILocation(line: 165, column: 3, scope: !14516)
!14523 = !DILocation(line: 165, column: 18, scope: !14516)
!14524 = !DILocation(line: 165, column: 33, scope: !14516)
!14525 = !DILocation(line: 169, column: 10, scope: !14516)
!14526 = !DILocation(line: 172, column: 15, scope: !14527)
!14527 = distinct !DILexicalBlock(scope: !14516, file: !14498, line: 172, column: 6)
!14528 = !DILocation(line: 177, column: 3, scope: !14516)
!14529 = !DILocation(line: 179, column: 18, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14531, file: !14498, line: 179, column: 8)
!14531 = distinct !DILexicalBlock(scope: !14516, file: !14498, line: 178, column: 3)
!14532 = !DILocation(line: 177, column: 19, scope: !14516)
!14533 = !DILocation(line: 184, column: 1, scope: !14516)
!14534 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !14498, file: !14498, line: 227, type: !7896, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14535)
!14535 = !{!14536}
!14536 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14534, file: !14498, line: 227, type: !108)
!14537 = !DILocation(line: 0, scope: !14534)
!14538 = !DILocation(line: 230, column: 19, scope: !14534)
!14539 = !DILocation(line: 231, column: 1, scope: !14534)
!14540 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !14498, file: !14498, line: 242, type: !14541, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14544)
!14541 = !DISubroutineType(types: !14542)
!14542 = !{!14543, !108}
!14543 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1757, line: 194, baseType: !1756)
!14544 = !{!14545, !14546, !14547}
!14545 = !DILocalVariable(name: "Frequency", arg: 1, scope: !14540, file: !14498, line: 242, type: !108)
!14546 = !DILocalVariable(name: "status", scope: !14540, file: !14498, line: 244, type: !14543)
!14547 = !DILocalVariable(name: "latency", scope: !14540, file: !14498, line: 246, type: !108)
!14548 = !DILocation(line: 0, scope: !14540)
!14549 = !DILocation(line: 249, column: 25, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !14540, file: !14498, line: 249, column: 7)
!14551 = !DILocation(line: 255, column: 9, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14553, file: !14498, line: 255, column: 9)
!14553 = distinct !DILexicalBlock(scope: !14550, file: !14498, line: 254, column: 3)
!14554 = !DILocation(line: 255, column: 41, scope: !14552)
!14555 = !DILocation(line: 255, column: 9, scope: !14553)
!14556 = !DILocation(line: 257, column: 21, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14558, file: !14498, line: 257, column: 11)
!14558 = distinct !DILexicalBlock(scope: !14552, file: !14498, line: 256, column: 5)
!14559 = !DILocation(line: 284, column: 9, scope: !14553)
!14560 = !DILocation(line: 264, column: 14, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14552, file: !14498, line: 264, column: 14)
!14562 = !DILocation(line: 264, column: 46, scope: !14561)
!14563 = !DILocation(line: 264, column: 14, scope: !14552)
!14564 = !DILocation(line: 266, column: 21, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14566, file: !14498, line: 266, column: 11)
!14566 = distinct !DILexicalBlock(scope: !14561, file: !14498, line: 265, column: 5)
!14567 = !DILocation(line: 275, column: 21, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14569, file: !14498, line: 275, column: 11)
!14569 = distinct !DILexicalBlock(scope: !14561, file: !14498, line: 274, column: 5)
!14570 = !DILocation(line: 286, column: 7, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14572, file: !14498, line: 285, column: 5)
!14572 = distinct !DILexicalBlock(scope: !14553, file: !14498, line: 284, column: 9)
!14573 = !DILocation(line: 287, column: 5, scope: !14571)
!14574 = !DILocation(line: 289, column: 5, scope: !14553)
!14575 = !DILocation(line: 293, column: 9, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14553, file: !14498, line: 293, column: 9)
!14577 = !DILocation(line: 293, column: 31, scope: !14576)
!14578 = !DILocation(line: 293, column: 9, scope: !14553)
!14579 = !DILocation(line: 298, column: 3, scope: !14540)
!14580 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !7910, file: !7910, line: 285, type: !9213, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !2894)
!14581 = !DILocation(line: 287, column: 21, scope: !14580)
!14582 = !DILocation(line: 287, column: 3, scope: !14580)
!14583 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !11934, file: !11934, line: 1897, type: !333, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !2894)
!14584 = !DILocation(line: 1899, column: 3, scope: !14583)
!14585 = !DILocation(line: 1900, column: 1, scope: !14583)
!14586 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !11934, file: !11934, line: 1843, type: !7896, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14587)
!14587 = !{!14588}
!14588 = !DILocalVariable(name: "Latency", arg: 1, scope: !14586, file: !11934, line: 1843, type: !108)
!14589 = !DILocation(line: 0, scope: !14586)
!14590 = !DILocation(line: 1845, column: 3, scope: !14586)
!14591 = !DILocation(line: 1846, column: 1, scope: !14586)
!14592 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !11934, file: !11934, line: 1855, type: !9213, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !2894)
!14593 = !DILocation(line: 1857, column: 21, scope: !14592)
!14594 = !DILocation(line: 1857, column: 3, scope: !14592)
!14595 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !14498, file: !14498, line: 323, type: !14596, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14611)
!14596 = !DISubroutineType(types: !14597)
!14597 = !{!14543, !14598, !14604}
!14598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14599, size: 32)
!14599 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !14505, line: 103, baseType: !14600)
!14600 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14505, line: 90, size: 64, elements: !14601)
!14601 = !{!14602, !14603}
!14602 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !14600, file: !14505, line: 92, baseType: !108, size: 32)
!14603 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !14600, file: !14505, line: 98, baseType: !108, size: 32, offset: 32)
!14604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14605, size: 32)
!14605 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !14505, line: 128, baseType: !14606)
!14606 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14505, line: 108, size: 96, elements: !14607)
!14607 = !{!14608, !14609, !14610}
!14608 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !14606, file: !14505, line: 110, baseType: !108, size: 32)
!14609 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !14606, file: !14505, line: 116, baseType: !108, size: 32, offset: 32)
!14610 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !14606, file: !14505, line: 122, baseType: !108, size: 32, offset: 64)
!14611 = !{!14612, !14613, !14614, !14615}
!14612 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !14595, file: !14498, line: 323, type: !14598)
!14613 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14595, file: !14498, line: 324, type: !14604)
!14614 = !DILocalVariable(name: "status", scope: !14595, file: !14498, line: 326, type: !14543)
!14615 = !DILocalVariable(name: "pllfreq", scope: !14595, file: !14498, line: 327, type: !108)
!14616 = !DILocation(line: 0, scope: !14595)
!14617 = !DILocation(line: 330, column: 7, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14595, file: !14498, line: 330, column: 7)
!14619 = !DILocation(line: 330, column: 26, scope: !14618)
!14620 = !DILocation(line: 330, column: 7, scope: !14595)
!14621 = !DILocation(line: 333, column: 15, scope: !14622)
!14622 = distinct !DILexicalBlock(scope: !14618, file: !14498, line: 331, column: 3)
!14623 = !DILocation(line: 336, column: 9, scope: !14624)
!14624 = distinct !DILexicalBlock(scope: !14622, file: !14498, line: 336, column: 9)
!14625 = !DILocation(line: 336, column: 30, scope: !14624)
!14626 = !DILocation(line: 336, column: 9, scope: !14622)
!14627 = !DILocation(line: 338, column: 7, scope: !14628)
!14628 = distinct !DILexicalBlock(scope: !14624, file: !14498, line: 337, column: 5)
!14629 = !DILocation(line: 339, column: 7, scope: !14628)
!14630 = !DILocation(line: 339, column: 14, scope: !14628)
!14631 = !DILocation(line: 339, column: 35, scope: !14628)
!14632 = distinct !{!14632, !14629, !14633}
!14633 = !DILocation(line: 342, column: 7, scope: !14628)
!14634 = !DILocation(line: 346, column: 76, scope: !14622)
!14635 = !DILocation(line: 346, column: 105, scope: !14622)
!14636 = !DILocation(line: 346, column: 5, scope: !14622)
!14637 = !DILocation(line: 349, column: 14, scope: !14622)
!14638 = !DILocation(line: 350, column: 3, scope: !14622)
!14639 = !DILocation(line: 0, scope: !14618)
!14640 = !DILocation(line: 357, column: 3, scope: !14595)
!14641 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !14498, file: !14498, line: 487, type: !14642, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14644)
!14642 = !DISubroutineType(types: !14643)
!14643 = !{!14543}
!14644 = !{!14645}
!14645 = !DILocalVariable(name: "status", scope: !14641, file: !14498, line: 489, type: !14543)
!14646 = !DILocation(line: 0, scope: !14641)
!14647 = !DILocation(line: 492, column: 7, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14641, file: !14498, line: 492, column: 7)
!14649 = !DILocation(line: 492, column: 28, scope: !14648)
!14650 = !DILocation(line: 492, column: 7, scope: !14641)
!14651 = !DILocation(line: 498, column: 3, scope: !14641)
!14652 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !14498, file: !14498, line: 457, type: !14653, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14655)
!14653 = !DISubroutineType(types: !14654)
!14654 = !{!108, !108, !14598}
!14655 = !{!14656, !14657, !14658}
!14656 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !14652, file: !14498, line: 457, type: !108)
!14657 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !14652, file: !14498, line: 457, type: !14598)
!14658 = !DILocalVariable(name: "pllfreq", scope: !14652, file: !14498, line: 459, type: !108)
!14659 = !DILocation(line: 0, scope: !14652)
!14660 = !DILocation(line: 470, column: 68, scope: !14652)
!14661 = !DILocation(line: 470, column: 75, scope: !14652)
!14662 = !DILocation(line: 470, column: 35, scope: !14652)
!14663 = !DILocation(line: 470, column: 34, scope: !14652)
!14664 = !DILocation(line: 470, column: 32, scope: !14652)
!14665 = !DILocation(line: 475, column: 46, scope: !14652)
!14666 = !DILocation(line: 475, column: 53, scope: !14652)
!14667 = !DILocation(line: 475, column: 76, scope: !14652)
!14668 = !DILocation(line: 475, column: 21, scope: !14652)
!14669 = !DILocation(line: 478, column: 3, scope: !14652)
!14670 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !11272, file: !11272, line: 612, type: !9213, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !2894)
!14671 = !DILocation(line: 614, column: 12, scope: !14670)
!14672 = !DILocation(line: 614, column: 11, scope: !14670)
!14673 = !DILocation(line: 614, column: 3, scope: !14670)
!14674 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !11272, file: !11272, line: 592, type: !333, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !2894)
!14675 = !DILocation(line: 594, column: 3, scope: !14674)
!14676 = !DILocation(line: 595, column: 1, scope: !14674)
!14677 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !11272, file: !11272, line: 1219, type: !11395, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14678)
!14678 = !{!14679, !14680, !14681}
!14679 = !DILocalVariable(name: "Source", arg: 1, scope: !14677, file: !11272, line: 1219, type: !108)
!14680 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !14677, file: !11272, line: 1219, type: !108)
!14681 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !14677, file: !11272, line: 1219, type: !108)
!14682 = !DILocation(line: 0, scope: !14677)
!14683 = !DILocation(line: 1221, column: 3, scope: !14677)
!14684 = !DILocation(line: 1222, column: 1, scope: !14677)
!14685 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !14498, file: !14498, line: 510, type: !14686, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14688)
!14686 = !DISubroutineType(types: !14687)
!14687 = !{!14543, !108, !14604}
!14688 = !{!14689, !14690, !14691, !14692}
!14689 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !14685, file: !14498, line: 510, type: !108)
!14690 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14685, file: !14498, line: 510, type: !14604)
!14691 = !DILocalVariable(name: "status", scope: !14685, file: !14498, line: 512, type: !14543)
!14692 = !DILocalVariable(name: "hclk_frequency", scope: !14685, file: !14498, line: 513, type: !108)
!14693 = !DILocation(line: 0, scope: !14685)
!14694 = !DILocation(line: 520, column: 20, scope: !14685)
!14695 = !DILocation(line: 523, column: 7, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !14685, file: !14498, line: 523, column: 7)
!14697 = !DILocation(line: 523, column: 23, scope: !14696)
!14698 = !DILocation(line: 523, column: 7, scope: !14685)
!14699 = !DILocation(line: 526, column: 14, scope: !14700)
!14700 = distinct !DILexicalBlock(scope: !14696, file: !14498, line: 524, column: 3)
!14701 = !DILocation(line: 530, column: 14, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14685, file: !14498, line: 530, column: 7)
!14703 = !DILocation(line: 530, column: 7, scope: !14685)
!14704 = !DILocation(line: 533, column: 5, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14702, file: !14498, line: 531, column: 3)
!14706 = !DILocation(line: 534, column: 5, scope: !14705)
!14707 = !DILocation(line: 534, column: 12, scope: !14705)
!14708 = !DILocation(line: 534, column: 33, scope: !14705)
!14709 = distinct !{!14709, !14706, !14710}
!14710 = !DILocation(line: 537, column: 5, scope: !14705)
!14711 = !DILocation(line: 540, column: 49, scope: !14705)
!14712 = !DILocation(line: 540, column: 5, scope: !14705)
!14713 = !DILocation(line: 541, column: 5, scope: !14705)
!14714 = !DILocation(line: 542, column: 5, scope: !14705)
!14715 = !DILocation(line: 542, column: 12, scope: !14705)
!14716 = !DILocation(line: 542, column: 37, scope: !14705)
!14717 = distinct !{!14717, !14714, !14718}
!14718 = !DILocation(line: 545, column: 5, scope: !14705)
!14719 = !DILocation(line: 548, column: 50, scope: !14705)
!14720 = !DILocation(line: 548, column: 5, scope: !14705)
!14721 = !DILocation(line: 549, column: 50, scope: !14705)
!14722 = !DILocation(line: 549, column: 5, scope: !14705)
!14723 = !DILocation(line: 550, column: 3, scope: !14705)
!14724 = !DILocation(line: 553, column: 7, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14685, file: !14498, line: 553, column: 7)
!14726 = !DILocation(line: 553, column: 23, scope: !14725)
!14727 = !DILocation(line: 553, column: 7, scope: !14685)
!14728 = !DILocation(line: 556, column: 14, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14725, file: !14498, line: 554, column: 3)
!14730 = !DILocation(line: 557, column: 3, scope: !14729)
!14731 = !DILocation(line: 560, column: 14, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14685, file: !14498, line: 560, column: 7)
!14733 = !DILocation(line: 560, column: 7, scope: !14685)
!14734 = !DILocation(line: 562, column: 5, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !14732, file: !14498, line: 561, column: 3)
!14736 = !DILocation(line: 563, column: 3, scope: !14735)
!14737 = !DILocation(line: 565, column: 3, scope: !14685)
!14738 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !11272, file: !11272, line: 1169, type: !333, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !2894)
!14739 = !DILocation(line: 1171, column: 3, scope: !14738)
!14740 = !DILocation(line: 1172, column: 1, scope: !14738)
!14741 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !11272, file: !11272, line: 1190, type: !9213, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !2894)
!14742 = !DILocation(line: 1192, column: 12, scope: !14741)
!14743 = !DILocation(line: 1192, column: 11, scope: !14741)
!14744 = !DILocation(line: 1192, column: 3, scope: !14741)
!14745 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !11272, file: !11272, line: 944, type: !7896, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14746)
!14746 = !{!14747}
!14747 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14745, file: !11272, line: 944, type: !108)
!14748 = !DILocation(line: 0, scope: !14745)
!14749 = !DILocation(line: 946, column: 3, scope: !14745)
!14750 = !DILocation(line: 947, column: 1, scope: !14745)
!14751 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !11272, file: !11272, line: 910, type: !7896, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14752)
!14752 = !{!14753}
!14753 = !DILocalVariable(name: "Source", arg: 1, scope: !14751, file: !11272, line: 910, type: !108)
!14754 = !DILocation(line: 0, scope: !14751)
!14755 = !DILocation(line: 912, column: 3, scope: !14751)
!14756 = !DILocation(line: 913, column: 1, scope: !14751)
!14757 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !11272, file: !11272, line: 924, type: !9213, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !2894)
!14758 = !DILocation(line: 926, column: 21, scope: !14757)
!14759 = !DILocation(line: 926, column: 3, scope: !14757)
!14760 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !11272, file: !11272, line: 960, type: !7896, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14761)
!14761 = !{!14762}
!14762 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14760, file: !11272, line: 960, type: !108)
!14763 = !DILocation(line: 0, scope: !14760)
!14764 = !DILocation(line: 962, column: 3, scope: !14760)
!14765 = !DILocation(line: 963, column: 1, scope: !14760)
!14766 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !11272, file: !11272, line: 976, type: !7896, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14767)
!14767 = !{!14768}
!14768 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14766, file: !11272, line: 976, type: !108)
!14769 = !DILocation(line: 0, scope: !14766)
!14770 = !DILocation(line: 978, column: 3, scope: !14766)
!14771 = !DILocation(line: 979, column: 1, scope: !14766)
!14772 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !14498, file: !14498, line: 385, type: !14773, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !14775)
!14773 = !DISubroutineType(types: !14774)
!14774 = !{!14543, !108, !108, !14598, !14604}
!14775 = !{!14776, !14777, !14778, !14779, !14780, !14781}
!14776 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !14772, file: !14498, line: 385, type: !108)
!14777 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !14772, file: !14498, line: 385, type: !108)
!14778 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !14772, file: !14498, line: 386, type: !14598)
!14779 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !14772, file: !14498, line: 386, type: !14604)
!14780 = !DILocalVariable(name: "status", scope: !14772, file: !14498, line: 388, type: !14543)
!14781 = !DILocalVariable(name: "pllfreq", scope: !14772, file: !14498, line: 389, type: !108)
!14782 = !DILocation(line: 0, scope: !14772)
!14783 = !DILocation(line: 396, column: 7, scope: !14784)
!14784 = distinct !DILexicalBlock(scope: !14772, file: !14498, line: 396, column: 7)
!14785 = !DILocation(line: 396, column: 26, scope: !14784)
!14786 = !DILocation(line: 396, column: 7, scope: !14772)
!14787 = !DILocation(line: 400, column: 15, scope: !14788)
!14788 = distinct !DILexicalBlock(scope: !14784, file: !14498, line: 397, column: 3)
!14789 = !DILocation(line: 403, column: 9, scope: !14790)
!14790 = distinct !DILexicalBlock(scope: !14788, file: !14498, line: 403, column: 9)
!14791 = !DILocation(line: 403, column: 30, scope: !14790)
!14792 = !DILocation(line: 403, column: 9, scope: !14788)
!14793 = !DILocation(line: 406, column: 21, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14795, file: !14498, line: 406, column: 11)
!14795 = distinct !DILexicalBlock(scope: !14790, file: !14498, line: 404, column: 5)
!14796 = !DILocation(line: 406, column: 11, scope: !14795)
!14797 = !DILocation(line: 408, column: 9, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14794, file: !14498, line: 407, column: 7)
!14799 = !DILocation(line: 409, column: 7, scope: !14798)
!14800 = !DILocation(line: 412, column: 9, scope: !14801)
!14801 = distinct !DILexicalBlock(scope: !14794, file: !14498, line: 411, column: 7)
!14802 = !DILocation(line: 416, column: 7, scope: !14795)
!14803 = !DILocation(line: 417, column: 7, scope: !14795)
!14804 = !DILocation(line: 417, column: 14, scope: !14795)
!14805 = !DILocation(line: 417, column: 35, scope: !14795)
!14806 = distinct !{!14806, !14803, !14807}
!14807 = !DILocation(line: 420, column: 7, scope: !14795)
!14808 = !DILocation(line: 424, column: 78, scope: !14788)
!14809 = !DILocation(line: 424, column: 107, scope: !14788)
!14810 = !DILocation(line: 424, column: 7, scope: !14788)
!14811 = !DILocation(line: 427, column: 14, scope: !14788)
!14812 = !DILocation(line: 428, column: 3, scope: !14788)
!14813 = !DILocation(line: 0, scope: !14784)
!14814 = !DILocation(line: 435, column: 3, scope: !14772)
!14815 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !11272, file: !11272, line: 545, type: !9213, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !2894)
!14816 = !DILocation(line: 547, column: 12, scope: !14815)
!14817 = !DILocation(line: 547, column: 11, scope: !14815)
!14818 = !DILocation(line: 547, column: 3, scope: !14815)
!14819 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !11272, file: !11272, line: 505, type: !333, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !2894)
!14820 = !DILocation(line: 507, column: 3, scope: !14819)
!14821 = !DILocation(line: 508, column: 1, scope: !14819)
!14822 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !11272, file: !11272, line: 515, type: !333, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !2894)
!14823 = !DILocation(line: 517, column: 3, scope: !14822)
!14824 = !DILocation(line: 518, column: 1, scope: !14822)
!14825 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !11272, file: !11272, line: 525, type: !333, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3888, retainedNodes: !2894)
!14826 = !DILocation(line: 527, column: 3, scope: !14825)
!14827 = !DILocation(line: 528, column: 1, scope: !14825)
!14828 = distinct !DISubprogram(name: "z_device_state_init", scope: !14829, file: !14829, line: 23, type: !333, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3937, retainedNodes: !14830)
!14829 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14830 = !{!14831}
!14831 = !DILocalVariable(name: "dev", scope: !14828, file: !14829, line: 25, type: !14832)
!14832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14833, size: 32)
!14833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14834)
!14834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !846, line: 378, size: 192, elements: !14835)
!14835 = !{!14836, !14837, !14838, !14839, !14845, !14846}
!14836 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14834, file: !846, line: 380, baseType: !336, size: 32)
!14837 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !14834, file: !846, line: 382, baseType: !13, size: 32, offset: 32)
!14838 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !14834, file: !846, line: 384, baseType: !13, size: 32, offset: 64)
!14839 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14834, file: !846, line: 386, baseType: !14840, size: 32, offset: 96)
!14840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14841, size: 32)
!14841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !846, line: 351, size: 16, elements: !14842)
!14842 = !{!14843, !14844}
!14843 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !14841, file: !846, line: 359, baseType: !164, size: 8)
!14844 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !14841, file: !846, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!14845 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14834, file: !846, line: 388, baseType: !102, size: 32, offset: 128)
!14846 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !14834, file: !846, line: 396, baseType: !859, size: 32, offset: 160)
!14847 = !DILocation(line: 0, scope: !14828)
!14848 = !DILocation(line: 31, column: 1, scope: !14828)
!14849 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !14829, file: !14829, line: 33, type: !14850, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3937, retainedNodes: !14852)
!14850 = !DISubroutineType(types: !14851)
!14851 = !{!14832, !336}
!14852 = !{!14853, !14854}
!14853 = !DILocalVariable(name: "name", arg: 1, scope: !14849, file: !14829, line: 33, type: !336)
!14854 = !DILocalVariable(name: "dev", scope: !14849, file: !14829, line: 35, type: !14832)
!14855 = !DILocation(line: 0, scope: !14849)
!14856 = !DILocation(line: 40, column: 12, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14849, file: !14829, line: 40, column: 6)
!14858 = !DILocation(line: 40, column: 21, scope: !14857)
!14859 = !DILocation(line: 40, column: 25, scope: !14857)
!14860 = !DILocation(line: 40, column: 33, scope: !14857)
!14861 = !DILocation(line: 40, column: 6, scope: !14849)
!14862 = !DILocation(line: 55, column: 2, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14849, file: !14829, line: 55, column: 2)
!14864 = !DILocation(line: 50, column: 7, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14866, file: !14829, line: 50, column: 7)
!14866 = distinct !DILexicalBlock(scope: !14867, file: !14829, line: 49, column: 57)
!14867 = distinct !DILexicalBlock(scope: !14868, file: !14829, line: 49, column: 2)
!14868 = distinct !DILexicalBlock(scope: !14849, file: !14829, line: 49, column: 2)
!14869 = !DILocation(line: 50, column: 30, scope: !14865)
!14870 = !DILocation(line: 50, column: 39, scope: !14865)
!14871 = !DILocation(line: 50, column: 44, scope: !14865)
!14872 = !DILocation(line: 50, column: 7, scope: !14866)
!14873 = !DILocation(line: 49, column: 53, scope: !14867)
!14874 = !DILocation(line: 49, column: 33, scope: !14867)
!14875 = !DILocation(line: 49, column: 2, scope: !14868)
!14876 = distinct !{!14876, !14875, !14877}
!14877 = !DILocation(line: 53, column: 2, scope: !14868)
!14878 = !DILocation(line: 56, column: 7, scope: !14879)
!14879 = distinct !DILexicalBlock(scope: !14880, file: !14829, line: 56, column: 7)
!14880 = distinct !DILexicalBlock(scope: !14881, file: !14829, line: 55, column: 57)
!14881 = distinct !DILexicalBlock(scope: !14863, file: !14829, line: 55, column: 2)
!14882 = !DILocation(line: 56, column: 30, scope: !14879)
!14883 = !DILocation(line: 56, column: 52, scope: !14879)
!14884 = !DILocation(line: 56, column: 34, scope: !14879)
!14885 = !DILocation(line: 56, column: 58, scope: !14879)
!14886 = !DILocation(line: 56, column: 7, scope: !14880)
!14887 = !DILocation(line: 55, column: 53, scope: !14881)
!14888 = !DILocation(line: 55, column: 33, scope: !14881)
!14889 = distinct !{!14889, !14862, !14890}
!14890 = !DILocation(line: 59, column: 2, scope: !14863)
!14891 = !DILocation(line: 62, column: 1, scope: !14849)
!14892 = distinct !DISubprogram(name: "z_device_is_ready", scope: !14829, file: !14829, line: 93, type: !14893, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3937, retainedNodes: !14895)
!14893 = !DISubroutineType(types: !14894)
!14894 = !{!119, !14832}
!14895 = !{!14896}
!14896 = !DILocalVariable(name: "dev", arg: 1, scope: !14892, file: !14829, line: 93, type: !14832)
!14897 = !DILocation(line: 0, scope: !14892)
!14898 = !DILocation(line: 99, column: 10, scope: !14899)
!14899 = distinct !DILexicalBlock(scope: !14892, file: !14829, line: 99, column: 6)
!14900 = !DILocation(line: 99, column: 6, scope: !14892)
!14901 = !DILocation(line: 103, column: 14, scope: !14892)
!14902 = !DILocation(line: 103, column: 21, scope: !14892)
!14903 = !DILocation(line: 103, column: 33, scope: !14892)
!14904 = !DILocation(line: 103, column: 49, scope: !14892)
!14905 = !DILocation(line: 103, column: 58, scope: !14892)
!14906 = !DILocation(line: 104, column: 1, scope: !14892)
!14907 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !14829, file: !14829, line: 87, type: !14908, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3937, retainedNodes: !14911)
!14908 = !DISubroutineType(types: !14909)
!14909 = !{!153, !14910}
!14910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14832, size: 32)
!14911 = !{!14912}
!14912 = !DILocalVariable(name: "devices", arg: 1, scope: !14907, file: !14829, line: 87, type: !14910)
!14913 = !DILocation(line: 0, scope: !14907)
!14914 = !DILocation(line: 89, column: 11, scope: !14907)
!14915 = !DILocation(line: 90, column: 2, scope: !14907)
!14916 = distinct !DISubprogram(name: "device_required_foreach", scope: !14829, file: !14829, line: 125, type: !14917, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3937, retainedNodes: !14923)
!14917 = !DISubroutineType(types: !14918)
!14918 = !{!103, !14832, !14919, !102}
!14919 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !846, line: 471, baseType: !14920)
!14920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14921, size: 32)
!14921 = !DISubroutineType(types: !14922)
!14922 = !{!103, !14832, !102}
!14923 = !{!14924, !14925, !14926, !14927, !14928}
!14924 = !DILocalVariable(name: "dev", arg: 1, scope: !14916, file: !14829, line: 125, type: !14832)
!14925 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14916, file: !14829, line: 126, type: !14919)
!14926 = !DILocalVariable(name: "context", arg: 3, scope: !14916, file: !14829, line: 127, type: !102)
!14927 = !DILocalVariable(name: "handle_count", scope: !14916, file: !14829, line: 129, type: !153)
!14928 = !DILocalVariable(name: "handles", scope: !14916, file: !14829, line: 130, type: !859)
!14929 = !DILocation(line: 0, scope: !14916)
!14930 = !DILocation(line: 129, column: 2, scope: !14916)
!14931 = !DILocation(line: 129, column: 9, scope: !14916)
!14932 = !DILocation(line: 130, column: 35, scope: !14916)
!14933 = !DILocation(line: 132, column: 33, scope: !14916)
!14934 = !DILocation(line: 132, column: 9, scope: !14916)
!14935 = !DILocation(line: 133, column: 1, scope: !14916)
!14936 = !DILocation(line: 132, column: 2, scope: !14916)
!14937 = distinct !DISubprogram(name: "device_required_handles_get", scope: !846, file: !846, line: 493, type: !14938, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3937, retainedNodes: !14940)
!14938 = !DISubroutineType(types: !14939)
!14939 = !{!859, !14832, !3477}
!14940 = !{!14941, !14942, !14943, !14944}
!14941 = !DILocalVariable(name: "dev", arg: 1, scope: !14937, file: !846, line: 493, type: !14832)
!14942 = !DILocalVariable(name: "count", arg: 2, scope: !14937, file: !846, line: 493, type: !3477)
!14943 = !DILocalVariable(name: "rv", scope: !14937, file: !846, line: 495, type: !859)
!14944 = !DILocalVariable(name: "i", scope: !14945, file: !846, line: 498, type: !153)
!14945 = distinct !DILexicalBlock(scope: !14946, file: !846, line: 497, column: 18)
!14946 = distinct !DILexicalBlock(scope: !14937, file: !846, line: 497, column: 6)
!14947 = !DILocation(line: 0, scope: !14937)
!14948 = !DILocation(line: 495, column: 35, scope: !14937)
!14949 = !DILocation(line: 497, column: 9, scope: !14946)
!14950 = !DILocation(line: 497, column: 6, scope: !14937)
!14951 = !DILocation(line: 0, scope: !14945)
!14952 = !DILocation(line: 500, column: 11, scope: !14945)
!14953 = !DILocation(line: 500, column: 40, scope: !14945)
!14954 = !DILocation(line: 502, column: 4, scope: !14955)
!14955 = distinct !DILexicalBlock(scope: !14945, file: !846, line: 501, column: 40)
!14956 = distinct !{!14956, !14957, !14958}
!14957 = !DILocation(line: 500, column: 3, scope: !14945)
!14958 = !DILocation(line: 503, column: 3, scope: !14945)
!14959 = !DILocation(line: 504, column: 10, scope: !14945)
!14960 = !DILocation(line: 505, column: 2, scope: !14945)
!14961 = !DILocation(line: 507, column: 2, scope: !14937)
!14962 = distinct !DISubprogram(name: "device_visitor", scope: !14829, file: !14829, line: 106, type: !14963, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3937, retainedNodes: !14965)
!14963 = !DISubroutineType(types: !14964)
!14964 = !{!103, !859, !153, !14919, !102}
!14965 = !{!14966, !14967, !14968, !14969, !14970, !14972, !14975, !14976}
!14966 = !DILocalVariable(name: "handles", arg: 1, scope: !14962, file: !14829, line: 106, type: !859)
!14967 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14962, file: !14829, line: 107, type: !153)
!14968 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14962, file: !14829, line: 108, type: !14919)
!14969 = !DILocalVariable(name: "context", arg: 4, scope: !14962, file: !14829, line: 109, type: !102)
!14970 = !DILocalVariable(name: "i", scope: !14971, file: !14829, line: 112, type: !153)
!14971 = distinct !DILexicalBlock(scope: !14962, file: !14829, line: 112, column: 2)
!14972 = !DILocalVariable(name: "dh", scope: !14973, file: !14829, line: 113, type: !861)
!14973 = distinct !DILexicalBlock(scope: !14974, file: !14829, line: 112, column: 44)
!14974 = distinct !DILexicalBlock(scope: !14971, file: !14829, line: 112, column: 2)
!14975 = !DILocalVariable(name: "rdev", scope: !14973, file: !14829, line: 114, type: !14832)
!14976 = !DILocalVariable(name: "rc", scope: !14973, file: !14829, line: 115, type: !103)
!14977 = !DILocation(line: 0, scope: !14962)
!14978 = !DILocation(line: 0, scope: !14971)
!14979 = !DILocation(line: 112, column: 23, scope: !14974)
!14980 = !DILocation(line: 112, column: 2, scope: !14971)
!14981 = distinct !{!14981, !14980, !14982}
!14982 = !DILocation(line: 120, column: 2, scope: !14971)
!14983 = !DILocation(line: 113, column: 24, scope: !14973)
!14984 = !DILocation(line: 0, scope: !14973)
!14985 = !DILocation(line: 114, column: 31, scope: !14973)
!14986 = !DILocation(line: 115, column: 12, scope: !14973)
!14987 = !DILocation(line: 117, column: 10, scope: !14988)
!14988 = distinct !DILexicalBlock(scope: !14973, file: !14829, line: 117, column: 7)
!14989 = !DILocation(line: 112, column: 39, scope: !14974)
!14990 = !DILocation(line: 123, column: 1, scope: !14962)
!14991 = distinct !DISubprogram(name: "device_from_handle", scope: !846, file: !846, line: 439, type: !14992, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3937, retainedNodes: !14994)
!14992 = !DISubroutineType(types: !14993)
!14993 = !{!14832, !861}
!14994 = !{!14995, !14996, !14997}
!14995 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14991, file: !846, line: 439, type: !861)
!14996 = !DILocalVariable(name: "dev", scope: !14991, file: !846, line: 443, type: !14832)
!14997 = !DILocalVariable(name: "numdev", scope: !14991, file: !846, line: 444, type: !153)
!14998 = !DILocation(line: 0, scope: !14991)
!14999 = !DILocation(line: 446, column: 7, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !14991, file: !846, line: 446, column: 6)
!15001 = !DILocation(line: 446, column: 18, scope: !15000)
!15002 = !DILocation(line: 446, column: 23, scope: !15000)
!15003 = !DILocation(line: 450, column: 2, scope: !14991)
!15004 = distinct !DISubprogram(name: "device_supported_foreach", scope: !14829, file: !14829, line: 135, type: !14917, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3937, retainedNodes: !15005)
!15005 = !{!15006, !15007, !15008, !15009, !15010}
!15006 = !DILocalVariable(name: "dev", arg: 1, scope: !15004, file: !14829, line: 135, type: !14832)
!15007 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !15004, file: !14829, line: 136, type: !14919)
!15008 = !DILocalVariable(name: "context", arg: 3, scope: !15004, file: !14829, line: 137, type: !102)
!15009 = !DILocalVariable(name: "handle_count", scope: !15004, file: !14829, line: 139, type: !153)
!15010 = !DILocalVariable(name: "handles", scope: !15004, file: !14829, line: 140, type: !859)
!15011 = !DILocation(line: 0, scope: !15004)
!15012 = !DILocation(line: 139, column: 2, scope: !15004)
!15013 = !DILocation(line: 139, column: 9, scope: !15004)
!15014 = !DILocation(line: 140, column: 35, scope: !15004)
!15015 = !DILocation(line: 142, column: 33, scope: !15004)
!15016 = !DILocation(line: 142, column: 9, scope: !15004)
!15017 = !DILocation(line: 143, column: 1, scope: !15004)
!15018 = !DILocation(line: 142, column: 2, scope: !15004)
!15019 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !846, file: !846, line: 573, type: !14938, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3937, retainedNodes: !15020)
!15020 = !{!15021, !15022, !15023, !15024, !15025}
!15021 = !DILocalVariable(name: "dev", arg: 1, scope: !15019, file: !846, line: 573, type: !14832)
!15022 = !DILocalVariable(name: "count", arg: 2, scope: !15019, file: !846, line: 573, type: !3477)
!15023 = !DILocalVariable(name: "rv", scope: !15019, file: !846, line: 575, type: !859)
!15024 = !DILocalVariable(name: "region", scope: !15019, file: !846, line: 576, type: !153)
!15025 = !DILocalVariable(name: "i", scope: !15019, file: !846, line: 577, type: !153)
!15026 = !DILocation(line: 0, scope: !15019)
!15027 = !DILocation(line: 575, column: 35, scope: !15019)
!15028 = !DILocation(line: 579, column: 9, scope: !15029)
!15029 = distinct !DILexicalBlock(scope: !15019, file: !846, line: 579, column: 6)
!15030 = !DILocation(line: 579, column: 6, scope: !15019)
!15031 = !DILocation(line: 582, column: 8, scope: !15032)
!15032 = distinct !DILexicalBlock(scope: !15033, file: !846, line: 582, column: 8)
!15033 = distinct !DILexicalBlock(scope: !15034, file: !846, line: 581, column: 23)
!15034 = distinct !DILexicalBlock(scope: !15029, file: !846, line: 579, column: 18)
!15035 = !DILocation(line: 582, column: 12, scope: !15032)
!15036 = !DILocation(line: 585, column: 6, scope: !15033)
!15037 = !DILocation(line: 0, scope: !15034)
!15038 = !DILocation(line: 581, column: 17, scope: !15034)
!15039 = !DILocation(line: 581, column: 3, scope: !15034)
!15040 = !DILocation(line: 588, column: 10, scope: !15034)
!15041 = !DILocation(line: 588, column: 16, scope: !15034)
!15042 = !DILocation(line: 589, column: 4, scope: !15043)
!15043 = distinct !DILexicalBlock(scope: !15034, file: !846, line: 588, column: 39)
!15044 = !DILocation(line: 588, column: 3, scope: !15034)
!15045 = distinct !{!15045, !15044, !15046}
!15046 = !DILocation(line: 590, column: 3, scope: !15034)
!15047 = !DILocation(line: 591, column: 10, scope: !15034)
!15048 = !DILocation(line: 592, column: 2, scope: !15034)
!15049 = !DILocation(line: 575, column: 25, scope: !15019)
!15050 = !DILocation(line: 594, column: 2, scope: !15019)
!15051 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2686, file: !2686, line: 49, type: !15052, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !2894)
!15052 = !DISubroutineType(types: !15053)
!15053 = !{!778}
!15054 = !DILocation(line: 51, column: 10, scope: !15051)
!15055 = !DILocation(line: 51, column: 20, scope: !15051)
!15056 = !DILocation(line: 51, column: 2, scope: !15051)
!15057 = distinct !DISubprogram(name: "coredump", scope: !3944, file: !3944, line: 209, type: !15058, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15206)
!15058 = !DISubroutineType(types: !15059)
!15059 = !{null, !32, !15060, !15104}
!15060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15061, size: 32)
!15061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15062)
!15062 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3607, line: 141, baseType: !15063)
!15063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3607, line: 97, size: 256, elements: !15064)
!15064 = !{!15065}
!15065 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !15063, file: !3607, line: 107, baseType: !15066, size: 256)
!15066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3607, line: 98, size: 256, elements: !15067)
!15067 = !{!15068, !15073, !15078, !15083, !15088, !15093, !15098, !15103}
!15068 = !DIDerivedType(tag: DW_TAG_member, scope: !15066, file: !3607, line: 99, baseType: !15069, size: 32)
!15069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15066, file: !3607, line: 99, size: 32, elements: !15070)
!15070 = !{!15071, !15072}
!15071 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !15069, file: !3607, line: 99, baseType: !108, size: 32)
!15072 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !15069, file: !3607, line: 99, baseType: !108, size: 32)
!15073 = !DIDerivedType(tag: DW_TAG_member, scope: !15066, file: !3607, line: 100, baseType: !15074, size: 32, offset: 32)
!15074 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15066, file: !3607, line: 100, size: 32, elements: !15075)
!15075 = !{!15076, !15077}
!15076 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !15074, file: !3607, line: 100, baseType: !108, size: 32)
!15077 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !15074, file: !3607, line: 100, baseType: !108, size: 32)
!15078 = !DIDerivedType(tag: DW_TAG_member, scope: !15066, file: !3607, line: 101, baseType: !15079, size: 32, offset: 64)
!15079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15066, file: !3607, line: 101, size: 32, elements: !15080)
!15080 = !{!15081, !15082}
!15081 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !15079, file: !3607, line: 101, baseType: !108, size: 32)
!15082 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !15079, file: !3607, line: 101, baseType: !108, size: 32)
!15083 = !DIDerivedType(tag: DW_TAG_member, scope: !15066, file: !3607, line: 102, baseType: !15084, size: 32, offset: 96)
!15084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15066, file: !3607, line: 102, size: 32, elements: !15085)
!15085 = !{!15086, !15087}
!15086 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !15084, file: !3607, line: 102, baseType: !108, size: 32)
!15087 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !15084, file: !3607, line: 102, baseType: !108, size: 32)
!15088 = !DIDerivedType(tag: DW_TAG_member, scope: !15066, file: !3607, line: 103, baseType: !15089, size: 32, offset: 128)
!15089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15066, file: !3607, line: 103, size: 32, elements: !15090)
!15090 = !{!15091, !15092}
!15091 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !15089, file: !3607, line: 103, baseType: !108, size: 32)
!15092 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !15089, file: !3607, line: 103, baseType: !108, size: 32)
!15093 = !DIDerivedType(tag: DW_TAG_member, scope: !15066, file: !3607, line: 104, baseType: !15094, size: 32, offset: 160)
!15094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15066, file: !3607, line: 104, size: 32, elements: !15095)
!15095 = !{!15096, !15097}
!15096 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !15094, file: !3607, line: 104, baseType: !108, size: 32)
!15097 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !15094, file: !3607, line: 104, baseType: !108, size: 32)
!15098 = !DIDerivedType(tag: DW_TAG_member, scope: !15066, file: !3607, line: 105, baseType: !15099, size: 32, offset: 192)
!15099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15066, file: !3607, line: 105, size: 32, elements: !15100)
!15100 = !{!15101, !15102}
!15101 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !15099, file: !3607, line: 105, baseType: !108, size: 32)
!15102 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !15099, file: !3607, line: 105, baseType: !108, size: 32)
!15103 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !15066, file: !3607, line: 106, baseType: !108, size: 32, offset: 224)
!15104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15105, size: 32)
!15105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !15106)
!15106 = !{!15107, !15165, !15177, !15178, !15179, !15180, !15186, !15201}
!15107 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !15105, file: !195, line: 247, baseType: !15108, size: 384)
!15108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !15109)
!15109 = !{!15110, !15134, !15141, !15142, !15143, !15152, !15153, !15154}
!15110 = !DIDerivedType(tag: DW_TAG_member, scope: !15108, file: !195, line: 60, baseType: !15111, size: 64)
!15111 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15108, file: !195, line: 60, size: 64, elements: !15112)
!15112 = !{!15113, !15128}
!15113 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !15111, file: !195, line: 61, baseType: !15114, size: 64)
!15114 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !15115)
!15115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !15116)
!15116 = !{!15117, !15123}
!15117 = !DIDerivedType(tag: DW_TAG_member, scope: !15115, file: !133, line: 38, baseType: !15118, size: 32)
!15118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15115, file: !133, line: 38, size: 32, elements: !15119)
!15119 = !{!15120, !15122}
!15120 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !15118, file: !133, line: 39, baseType: !15121, size: 32)
!15121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15115, size: 32)
!15122 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15118, file: !133, line: 40, baseType: !15121, size: 32)
!15123 = !DIDerivedType(tag: DW_TAG_member, scope: !15115, file: !133, line: 42, baseType: !15124, size: 32, offset: 32)
!15124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15115, file: !133, line: 42, size: 32, elements: !15125)
!15125 = !{!15126, !15127}
!15126 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !15124, file: !133, line: 43, baseType: !15121, size: 32)
!15127 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15124, file: !133, line: 44, baseType: !15121, size: 32)
!15128 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !15111, file: !195, line: 62, baseType: !15129, size: 64)
!15129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !15130)
!15130 = !{!15131}
!15131 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !15129, file: !207, line: 50, baseType: !15132, size: 64)
!15132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15133, size: 64, elements: !212)
!15133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15129, size: 32)
!15134 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !15108, file: !195, line: 68, baseType: !15135, size: 32, offset: 64)
!15135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15136, size: 32)
!15136 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !15137)
!15137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !15138)
!15138 = !{!15139}
!15139 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !15137, file: !128, line: 232, baseType: !15140, size: 64)
!15140 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !15115)
!15141 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !15108, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!15142 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !15108, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!15143 = !DIDerivedType(tag: DW_TAG_member, scope: !15108, file: !195, line: 90, baseType: !15144, size: 16, offset: 112)
!15144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15108, file: !195, line: 90, size: 16, elements: !15145)
!15145 = !{!15146, !15151}
!15146 = !DIDerivedType(tag: DW_TAG_member, scope: !15144, file: !195, line: 91, baseType: !15147, size: 16)
!15147 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15144, file: !195, line: 91, size: 16, elements: !15148)
!15148 = !{!15149, !15150}
!15149 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !15147, file: !195, line: 96, baseType: !225, size: 8)
!15150 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !15147, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!15151 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !15144, file: !195, line: 100, baseType: !177, size: 16)
!15152 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !15108, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!15153 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !15108, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!15154 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !15108, file: !195, line: 131, baseType: !15155, size: 192, offset: 192)
!15155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !15156)
!15156 = !{!15157, !15158, !15164}
!15157 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !15155, file: !128, line: 245, baseType: !15114, size: 64)
!15158 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !15155, file: !128, line: 246, baseType: !15159, size: 32, offset: 64)
!15159 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !15160)
!15160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15161, size: 32)
!15161 = !DISubroutineType(types: !15162)
!15162 = !{null, !15163}
!15163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15155, size: 32)
!15164 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !15155, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!15165 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !15105, file: !195, line: 250, baseType: !15166, size: 288, offset: 384)
!15166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !15167)
!15167 = !{!15168, !15169, !15170, !15171, !15172, !15173, !15174, !15175, !15176}
!15168 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !15166, file: !244, line: 26, baseType: !108, size: 32)
!15169 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !15166, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!15170 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !15166, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!15171 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !15166, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!15172 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !15166, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!15173 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !15166, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!15174 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !15166, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!15175 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !15166, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!15176 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !15166, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!15177 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !15105, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!15178 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !15105, file: !195, line: 256, baseType: !15136, size: 64, offset: 704)
!15179 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !15105, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!15180 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !15105, file: !195, line: 300, baseType: !15181, size: 96, offset: 800)
!15181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !15182)
!15182 = !{!15183, !15184, !15185}
!15183 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !15181, file: !195, line: 153, baseType: !22, size: 32)
!15184 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !15181, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!15185 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !15181, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!15186 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !15105, file: !195, line: 325, baseType: !15187, size: 32, offset: 896)
!15187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15188, size: 32)
!15188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !15189)
!15189 = !{!15190, !15196, !15197}
!15190 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15188, file: !124, line: 5074, baseType: !15191, size: 96)
!15191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !15192)
!15192 = !{!15193, !15194, !15195}
!15193 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15191, file: !270, line: 57, baseType: !273, size: 32)
!15194 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !15191, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!15195 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !15191, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!15196 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15188, file: !124, line: 5075, baseType: !15136, size: 64, offset: 96)
!15197 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15188, file: !124, line: 5076, baseType: !15198, size: 32, offset: 160)
!15198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !15199)
!15199 = !{!15200}
!15200 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !15198, file: !149, line: 52, baseType: !22, size: 32)
!15201 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !15105, file: !195, line: 343, baseType: !15202, size: 64, offset: 928)
!15202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !15203)
!15203 = !{!15204, !15205}
!15204 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !15202, file: !244, line: 63, baseType: !108, size: 32)
!15205 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !15202, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!15206 = !{!15207, !15208, !15209}
!15207 = !DILocalVariable(name: "reason", arg: 1, scope: !15057, file: !3944, line: 209, type: !32)
!15208 = !DILocalVariable(name: "esf", arg: 2, scope: !15057, file: !3944, line: 209, type: !15060)
!15209 = !DILocalVariable(name: "thread", arg: 3, scope: !15057, file: !3944, line: 210, type: !15104)
!15210 = !DILocation(line: 0, scope: !15057)
!15211 = !DILocation(line: 212, column: 1, scope: !15057)
!15212 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3944, file: !3944, line: 214, type: !15213, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15215)
!15213 = !DISubroutineType(types: !15214)
!15214 = !{null, !22, !22}
!15215 = !{!15216, !15217}
!15216 = !DILocalVariable(name: "start_addr", arg: 1, scope: !15212, file: !3944, line: 214, type: !22)
!15217 = !DILocalVariable(name: "end_addr", arg: 2, scope: !15212, file: !3944, line: 214, type: !22)
!15218 = !DILocation(line: 0, scope: !15212)
!15219 = !DILocation(line: 216, column: 1, scope: !15212)
!15220 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3944, file: !3944, line: 218, type: !15221, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15223)
!15221 = !DISubroutineType(types: !15222)
!15222 = !{null, !783, !153}
!15223 = !{!15224, !15225}
!15224 = !DILocalVariable(name: "buf", arg: 1, scope: !15220, file: !3944, line: 218, type: !783)
!15225 = !DILocalVariable(name: "buflen", arg: 2, scope: !15220, file: !3944, line: 218, type: !153)
!15226 = !DILocation(line: 0, scope: !15220)
!15227 = !DILocation(line: 220, column: 1, scope: !15220)
!15228 = distinct !DISubprogram(name: "coredump_query", scope: !3944, file: !3944, line: 222, type: !15229, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15231)
!15229 = !DISubroutineType(types: !15230)
!15230 = !{!103, !3943, !102}
!15231 = !{!15232, !15233}
!15232 = !DILocalVariable(name: "query_id", arg: 1, scope: !15228, file: !3944, line: 222, type: !3943)
!15233 = !DILocalVariable(name: "arg", arg: 2, scope: !15228, file: !3944, line: 222, type: !102)
!15234 = !DILocation(line: 0, scope: !15228)
!15235 = !DILocation(line: 224, column: 2, scope: !15228)
!15236 = distinct !DISubprogram(name: "coredump_cmd", scope: !3944, file: !3944, line: 227, type: !15237, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15239)
!15237 = !DISubroutineType(types: !15238)
!15238 = !{!103, !3950, !102}
!15239 = !{!15240, !15241}
!15240 = !DILocalVariable(name: "query_id", arg: 1, scope: !15236, file: !3944, line: 227, type: !3950)
!15241 = !DILocalVariable(name: "arg", arg: 2, scope: !15236, file: !3944, line: 227, type: !102)
!15242 = !DILocation(line: 0, scope: !15236)
!15243 = !DILocation(line: 229, column: 2, scope: !15236)
!15244 = distinct !DISubprogram(name: "arch_system_halt", scope: !15245, file: !15245, line: 23, type: !7883, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15246)
!15245 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15246 = !{!15247}
!15247 = !DILocalVariable(name: "reason", arg: 1, scope: !15244, file: !15245, line: 23, type: !32)
!15248 = !DILocation(line: 0, scope: !15244)
!15249 = !DILocation(line: 55, column: 2, scope: !15250, inlinedAt: !15254)
!15250 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7872, file: !7872, line: 42, type: !7873, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15251)
!15251 = !{!15252, !15253}
!15252 = !DILocalVariable(name: "key", scope: !15250, file: !7872, line: 44, type: !32)
!15253 = !DILocalVariable(name: "tmp", scope: !15250, file: !7872, line: 53, type: !32)
!15254 = distinct !DILocation(line: 31, column: 8, scope: !15244)
!15255 = !{i64 1654190}
!15256 = !DILocation(line: 0, scope: !15250, inlinedAt: !15254)
!15257 = !DILocation(line: 32, column: 2, scope: !15244)
!15258 = !DILocation(line: 32, column: 2, scope: !15259)
!15259 = distinct !DILexicalBlock(scope: !15260, file: !15245, line: 32, column: 2)
!15260 = distinct !DILexicalBlock(scope: !15244, file: !15245, line: 32, column: 2)
!15261 = distinct !{!15261, !15262, !15263}
!15262 = !DILocation(line: 32, column: 2, scope: !15260)
!15263 = !DILocation(line: 34, column: 2, scope: !15260)
!15264 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !15245, file: !15245, line: 39, type: !15265, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15267)
!15265 = !DISubroutineType(types: !15266)
!15266 = !{null, !32, !15060}
!15267 = !{!15268, !15269}
!15268 = !DILocalVariable(name: "reason", arg: 1, scope: !15264, file: !15245, line: 39, type: !32)
!15269 = !DILocalVariable(name: "esf", arg: 2, scope: !15264, file: !15245, line: 40, type: !15060)
!15270 = !DILocation(line: 0, scope: !15264)
!15271 = !DILocation(line: 45, column: 2, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15273, file: !15245, line: 45, column: 2)
!15273 = distinct !DILexicalBlock(scope: !15274, file: !15245, line: 45, column: 2)
!15274 = distinct !DILexicalBlock(scope: !15275, file: !15245, line: 45, column: 2)
!15275 = distinct !DILexicalBlock(scope: !15264, file: !15245, line: 45, column: 2)
!15276 = !DILocation(line: 46, column: 2, scope: !15264)
!15277 = distinct !DISubprogram(name: "k_fatal_halt", scope: !15245, file: !15245, line: 81, type: !7883, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15278)
!15278 = !{!15279}
!15279 = !DILocalVariable(name: "reason", arg: 1, scope: !15277, file: !15245, line: 81, type: !32)
!15280 = !DILocation(line: 0, scope: !15277)
!15281 = !DILocation(line: 83, column: 2, scope: !15277)
!15282 = distinct !DISubprogram(name: "z_fatal_error", scope: !15245, file: !15245, line: 96, type: !15265, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15283)
!15283 = !{!15284, !15285, !15286, !15287}
!15284 = !DILocalVariable(name: "reason", arg: 1, scope: !15282, file: !15245, line: 96, type: !32)
!15285 = !DILocalVariable(name: "esf", arg: 2, scope: !15282, file: !15245, line: 96, type: !15060)
!15286 = !DILocalVariable(name: "key", scope: !15282, file: !15245, line: 102, type: !32)
!15287 = !DILocalVariable(name: "thread", scope: !15282, file: !15245, line: 103, type: !15104)
!15288 = !DILocation(line: 0, scope: !15282)
!15289 = !DILocation(line: 55, column: 2, scope: !15250, inlinedAt: !15290)
!15290 = distinct !DILocation(line: 102, column: 21, scope: !15282)
!15291 = !DILocation(line: 0, scope: !15250, inlinedAt: !15290)
!15292 = !DILocation(line: 104, column: 4, scope: !15282)
!15293 = !DILocation(line: 109, column: 2, scope: !15294)
!15294 = distinct !DILexicalBlock(scope: !15295, file: !15245, line: 109, column: 2)
!15295 = distinct !DILexicalBlock(scope: !15296, file: !15245, line: 109, column: 2)
!15296 = distinct !DILexicalBlock(scope: !15297, file: !15245, line: 109, column: 2)
!15297 = distinct !DILexicalBlock(scope: !15282, file: !15245, line: 109, column: 2)
!15298 = !DILocation(line: 119, column: 11, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15282, file: !15245, line: 119, column: 6)
!15300 = !DILocation(line: 119, column: 20, scope: !15299)
!15301 = !DILocalVariable(name: "esf", arg: 1, scope: !15302, file: !9219, line: 71, type: !15060)
!15302 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !9219, file: !9219, line: 71, type: !15303, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15305)
!15303 = !DISubroutineType(types: !15304)
!15304 = !{!119, !15060}
!15305 = !{!15301}
!15306 = !DILocation(line: 0, scope: !15302, inlinedAt: !15307)
!15307 = distinct !DILocation(line: 119, column: 23, scope: !15299)
!15308 = !DILocation(line: 73, column: 21, scope: !15302, inlinedAt: !15307)
!15309 = !DILocation(line: 73, column: 26, scope: !15302, inlinedAt: !15307)
!15310 = !DILocation(line: 73, column: 9, scope: !15302, inlinedAt: !15307)
!15311 = !DILocation(line: 119, column: 6, scope: !15282)
!15312 = !DILocation(line: 120, column: 3, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !15314, file: !15245, line: 120, column: 3)
!15314 = distinct !DILexicalBlock(scope: !15315, file: !15245, line: 120, column: 3)
!15315 = distinct !DILexicalBlock(scope: !15316, file: !15245, line: 120, column: 3)
!15316 = distinct !DILexicalBlock(scope: !15317, file: !15245, line: 120, column: 3)
!15317 = distinct !DILexicalBlock(scope: !15299, file: !15245, line: 119, column: 57)
!15318 = !DILocation(line: 121, column: 2, scope: !15317)
!15319 = !DILocation(line: 124, column: 2, scope: !15320)
!15320 = distinct !DILexicalBlock(scope: !15321, file: !15245, line: 124, column: 2)
!15321 = distinct !DILexicalBlock(scope: !15322, file: !15245, line: 124, column: 2)
!15322 = distinct !DILexicalBlock(scope: !15323, file: !15245, line: 124, column: 2)
!15323 = distinct !DILexicalBlock(scope: !15282, file: !15245, line: 124, column: 2)
!15324 = !DILocation(line: 131, column: 2, scope: !15282)
!15325 = !DILocation(line: 147, column: 3, scope: !15326)
!15326 = distinct !DILexicalBlock(scope: !15327, file: !15245, line: 147, column: 3)
!15327 = distinct !DILexicalBlock(scope: !15328, file: !15245, line: 147, column: 3)
!15328 = distinct !DILexicalBlock(scope: !15329, file: !15245, line: 146, column: 32)
!15329 = distinct !DILexicalBlock(scope: !15282, file: !15245, line: 146, column: 6)
!15330 = !DILocation(line: 147, column: 3, scope: !15327)
!15331 = !DILocation(line: 147, column: 3, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15326, file: !15245, line: 147, column: 3)
!15333 = !DILocalVariable(name: "key", arg: 1, scope: !15334, file: !7872, line: 84, type: !32)
!15334 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7872, file: !7872, line: 84, type: !7883, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15335)
!15335 = !{!15333}
!15336 = !DILocation(line: 0, scope: !15334, inlinedAt: !15337)
!15337 = distinct !DILocation(line: 186, column: 2, scope: !15282)
!15338 = !DILocation(line: 95, column: 2, scope: !15334, inlinedAt: !15337)
!15339 = !{i64 1655007}
!15340 = !DILocation(line: 189, column: 3, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15342, file: !15245, line: 188, column: 41)
!15342 = distinct !DILexicalBlock(scope: !15282, file: !15245, line: 188, column: 6)
!15343 = !DILocation(line: 191, column: 1, scope: !15282)
!15344 = distinct !DISubprogram(name: "k_current_get", scope: !124, file: !124, line: 530, type: !15345, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !2894)
!15345 = !DISubroutineType(types: !15346)
!15346 = !{!15347}
!15347 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !15104)
!15348 = !DILocation(line: 535, column: 9, scope: !15344)
!15349 = !DILocation(line: 535, column: 2, scope: !15344)
!15350 = distinct !DISubprogram(name: "reason_to_str", scope: !15245, file: !15245, line: 62, type: !15351, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15353)
!15351 = !DISubroutineType(types: !15352)
!15352 = !{!336, !32}
!15353 = !{!15354}
!15354 = !DILocalVariable(name: "reason", arg: 1, scope: !15350, file: !15245, line: 62, type: !32)
!15355 = !DILocation(line: 0, scope: !15350)
!15356 = !DILocation(line: 64, column: 2, scope: !15350)
!15357 = !DILocation(line: 0, scope: !15358)
!15358 = distinct !DILexicalBlock(scope: !15350, file: !15245, line: 64, column: 18)
!15359 = !DILocation(line: 78, column: 1, scope: !15350)
!15360 = distinct !DISubprogram(name: "thread_name_get", scope: !15245, file: !15245, line: 51, type: !15361, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15363)
!15361 = !DISubroutineType(types: !15362)
!15362 = !{!336, !15104}
!15363 = !{!15364, !15365}
!15364 = !DILocalVariable(name: "thread", arg: 1, scope: !15360, file: !15245, line: 51, type: !15104)
!15365 = !DILocalVariable(name: "thread_name", scope: !15360, file: !15245, line: 53, type: !336)
!15366 = !DILocation(line: 0, scope: !15360)
!15367 = !DILocation(line: 53, column: 36, scope: !15360)
!15368 = !DILocation(line: 53, column: 28, scope: !15360)
!15369 = !DILocation(line: 53, column: 47, scope: !15360)
!15370 = !DILocation(line: 55, column: 19, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15360, file: !15245, line: 55, column: 6)
!15372 = !DILocation(line: 55, column: 28, scope: !15371)
!15373 = !DILocation(line: 55, column: 32, scope: !15371)
!15374 = !DILocation(line: 55, column: 47, scope: !15371)
!15375 = !DILocation(line: 55, column: 6, scope: !15360)
!15376 = !DILocation(line: 57, column: 2, scope: !15377)
!15377 = distinct !DILexicalBlock(scope: !15371, file: !15245, line: 55, column: 57)
!15378 = !DILocation(line: 59, column: 2, scope: !15360)
!15379 = distinct !DISubprogram(name: "k_thread_abort", scope: !4394, file: !4394, line: 188, type: !15380, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !15382)
!15380 = !DISubroutineType(types: !15381)
!15381 = !{null, !15347}
!15382 = !{!15383}
!15383 = !DILocalVariable(name: "thread", arg: 1, scope: !15379, file: !4394, line: 188, type: !15347)
!15384 = !DILocation(line: 0, scope: !15379)
!15385 = !DILocation(line: 197, column: 2, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15379, file: !4394, line: 197, column: 2)
!15387 = !{i64 2152224438}
!15388 = !DILocation(line: 198, column: 2, scope: !15379)
!15389 = !DILocation(line: 199, column: 1, scope: !15379)
!15390 = distinct !DISubprogram(name: "z_current_get", scope: !4394, file: !4394, line: 173, type: !15345, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3940, retainedNodes: !2894)
!15391 = !DILocation(line: 180, column: 2, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !15390, file: !4394, line: 180, column: 2)
!15393 = !{i64 2152224370}
!15394 = !DILocation(line: 181, column: 9, scope: !15390)
!15395 = !DILocation(line: 181, column: 2, scope: !15390)
!15396 = distinct !DISubprogram(name: "z_early_memset", scope: !2694, file: !2694, line: 108, type: !15397, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !15399)
!15397 = !DISubroutineType(types: !15398)
!15398 = !{null, !102, !103, !153}
!15399 = !{!15400, !15401, !15402}
!15400 = !DILocalVariable(name: "dst", arg: 1, scope: !15396, file: !2694, line: 108, type: !102)
!15401 = !DILocalVariable(name: "c", arg: 2, scope: !15396, file: !2694, line: 108, type: !103)
!15402 = !DILocalVariable(name: "n", arg: 3, scope: !15396, file: !2694, line: 108, type: !153)
!15403 = !DILocation(line: 0, scope: !15396)
!15404 = !DILocation(line: 110, column: 9, scope: !15396)
!15405 = !DILocation(line: 111, column: 1, scope: !15396)
!15406 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2694, file: !2694, line: 121, type: !15407, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !15409)
!15407 = !DISubroutineType(types: !15408)
!15408 = !{null, !102, !13, !153}
!15409 = !{!15410, !15411, !15412}
!15410 = !DILocalVariable(name: "dst", arg: 1, scope: !15406, file: !2694, line: 121, type: !102)
!15411 = !DILocalVariable(name: "src", arg: 2, scope: !15406, file: !2694, line: 121, type: !13)
!15412 = !DILocalVariable(name: "n", arg: 3, scope: !15406, file: !2694, line: 121, type: !153)
!15413 = !DILocation(line: 0, scope: !15406)
!15414 = !DILocation(line: 123, column: 9, scope: !15406)
!15415 = !DILocation(line: 124, column: 1, scope: !15406)
!15416 = distinct !DISubprogram(name: "z_bss_zero", scope: !2694, file: !2694, line: 132, type: !333, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !2894)
!15417 = !DILocation(line: 143, column: 2, scope: !15416)
!15418 = !DILocation(line: 168, column: 1, scope: !15416)
!15419 = distinct !DISubprogram(name: "z_init_cpu", scope: !2694, file: !2694, line: 372, type: !10944, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !15420)
!15420 = !{!15421}
!15421 = !DILocalVariable(name: "id", arg: 1, scope: !15419, file: !2694, line: 372, type: !103)
!15422 = !DILocation(line: 0, scope: !15419)
!15423 = !DILocation(line: 374, column: 2, scope: !15419)
!15424 = !DILocation(line: 375, column: 34, scope: !15419)
!15425 = !DILocation(line: 375, column: 19, scope: !15419)
!15426 = !DILocation(line: 375, column: 31, scope: !15419)
!15427 = !DILocation(line: 376, column: 24, scope: !15419)
!15428 = !DILocation(line: 376, column: 19, scope: !15419)
!15429 = !DILocation(line: 376, column: 22, scope: !15419)
!15430 = !DILocation(line: 378, column: 26, scope: !15419)
!15431 = !DILocation(line: 378, column: 4, scope: !15419)
!15432 = !DILocation(line: 378, column: 50, scope: !15419)
!15433 = !DILocation(line: 377, column: 19, scope: !15419)
!15434 = !DILocation(line: 377, column: 29, scope: !15419)
!15435 = !DILocation(line: 384, column: 1, scope: !15419)
!15436 = distinct !DISubprogram(name: "init_idle_thread", scope: !2694, file: !2694, line: 343, type: !10944, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !15437)
!15437 = !{!15438, !15439, !15440, !15443}
!15438 = !DILocalVariable(name: "i", arg: 1, scope: !15436, file: !2694, line: 343, type: !103)
!15439 = !DILocalVariable(name: "thread", scope: !15436, file: !2694, line: 345, type: !2786)
!15440 = !DILocalVariable(name: "stack", scope: !15436, file: !2694, line: 346, type: !15441)
!15441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15442, size: 32)
!15442 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !313, line: 44, baseType: !2903)
!15443 = !DILocalVariable(name: "tname", scope: !15436, file: !2694, line: 358, type: !157)
!15444 = !DILocation(line: 0, scope: !15436)
!15445 = !DILocation(line: 345, column: 29, scope: !15436)
!15446 = !DILocation(line: 346, column: 28, scope: !15436)
!15447 = !DILocation(line: 362, column: 37, scope: !15436)
!15448 = !DILocation(line: 362, column: 36, scope: !15436)
!15449 = !DILocation(line: 361, column: 2, scope: !15436)
!15450 = !DILocation(line: 365, column: 2, scope: !15436)
!15451 = !DILocation(line: 370, column: 1, scope: !15436)
!15452 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !315, file: !315, line: 331, type: !15453, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !15455)
!15453 = !DISubroutineType(types: !15454)
!15454 = !{!157, !15441}
!15455 = !{!15456}
!15456 = !DILocalVariable(name: "sym", arg: 1, scope: !15452, file: !315, line: 331, type: !15441)
!15457 = !DILocation(line: 0, scope: !15452)
!15458 = !DILocation(line: 333, column: 21, scope: !15452)
!15459 = !DILocation(line: 333, column: 2, scope: !15452)
!15460 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15461, file: !15461, line: 155, type: !15462, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !15464)
!15461 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15462 = !DISubroutineType(types: !15463)
!15463 = !{null, !2786}
!15464 = !{!15465}
!15465 = !DILocalVariable(name: "thread", arg: 1, scope: !15460, file: !15461, line: 155, type: !2786)
!15466 = !DILocation(line: 0, scope: !15460)
!15467 = !DILocation(line: 157, column: 15, scope: !15460)
!15468 = !DILocation(line: 157, column: 28, scope: !15460)
!15469 = !DILocation(line: 158, column: 1, scope: !15460)
!15470 = distinct !DISubprogram(name: "z_cstart", scope: !2694, file: !2694, line: 501, type: !333, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !15471)
!15471 = !{!15472}
!15472 = !DILocalVariable(name: "dummy_thread", scope: !15470, file: !2694, line: 518, type: !2787)
!15473 = !DILocation(line: 507, column: 2, scope: !15470)
!15474 = !DILocation(line: 43, column: 14, scope: !15475, inlinedAt: !15479)
!15475 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !15476, file: !15476, line: 40, type: !333, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !15477)
!15476 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15477 = !{!15478}
!15478 = !DILocalVariable(name: "msp", scope: !15475, file: !15476, line: 42, type: !108)
!15479 = distinct !DILocation(line: 44, column: 2, scope: !15480, inlinedAt: !15482)
!15480 = distinct !DISubprogram(name: "arch_kernel_init", scope: !15481, file: !15481, line: 42, type: !333, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !2894)
!15481 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15482 = distinct !DILocation(line: 510, column: 2, scope: !15470)
!15483 = !DILocation(line: 43, column: 3, scope: !15475, inlinedAt: !15479)
!15484 = !DILocation(line: 43, column: 60, scope: !15475, inlinedAt: !15479)
!15485 = !DILocation(line: 0, scope: !15475, inlinedAt: !15479)
!15486 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !15487, file: !8210, line: 1153, type: !108)
!15487 = distinct !DISubprogram(name: "__set_MSP", scope: !8210, file: !8210, line: 1153, type: !7896, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !15488)
!15488 = !{!15486}
!15489 = !DILocation(line: 0, scope: !15487, inlinedAt: !15490)
!15490 = distinct !DILocation(line: 46, column: 2, scope: !15475, inlinedAt: !15479)
!15491 = !DILocation(line: 1155, column: 3, scope: !15487, inlinedAt: !15490)
!15492 = !{i64 2467630}
!15493 = !DILocation(line: 62, column: 11, scope: !15475, inlinedAt: !15479)
!15494 = !DILocation(line: 102, column: 2, scope: !15495, inlinedAt: !15496)
!15495 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !9219, file: !9219, line: 97, type: !333, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !2894)
!15496 = distinct !DILocation(line: 45, column: 2, scope: !15480, inlinedAt: !15482)
!15497 = !DILocation(line: 108, column: 2, scope: !15495, inlinedAt: !15496)
!15498 = !DILocation(line: 112, column: 2, scope: !15495, inlinedAt: !15496)
!15499 = !DILocation(line: 113, column: 2, scope: !15495, inlinedAt: !15496)
!15500 = !DILocation(line: 114, column: 2, scope: !15495, inlinedAt: !15496)
!15501 = !DILocation(line: 116, column: 2, scope: !15495, inlinedAt: !15496)
!15502 = !DILocation(line: 123, column: 13, scope: !15495, inlinedAt: !15496)
!15503 = !DILocation(line: 46, column: 2, scope: !15480, inlinedAt: !15482)
!15504 = !DILocation(line: 47, column: 2, scope: !15480, inlinedAt: !15482)
!15505 = !DILocation(line: 174, column: 12, scope: !15506, inlinedAt: !15507)
!15506 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !9219, file: !9219, line: 169, type: !333, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !2894)
!15507 = distinct !DILocation(line: 48, column: 2, scope: !15480, inlinedAt: !15482)
!15508 = !DILocation(line: 179, column: 12, scope: !15506, inlinedAt: !15507)
!15509 = !DILocation(line: 50, column: 2, scope: !15480, inlinedAt: !15482)
!15510 = !DILocation(line: 57, column: 2, scope: !15480, inlinedAt: !15482)
!15511 = !DILocation(line: 518, column: 2, scope: !15470)
!15512 = !DILocation(line: 518, column: 18, scope: !15470)
!15513 = !DILocation(line: 520, column: 2, scope: !15470)
!15514 = !DILocation(line: 523, column: 2, scope: !15470)
!15515 = !DILocation(line: 526, column: 2, scope: !15470)
!15516 = !DILocation(line: 527, column: 2, scope: !15470)
!15517 = !DILocation(line: 543, column: 24, scope: !15470)
!15518 = !DILocation(line: 543, column: 2, scope: !15470)
!15519 = !DILocation(line: 0, scope: !2927)
!15520 = !DILocation(line: 246, column: 15, scope: !2945)
!15521 = !DILocation(line: 246, column: 36, scope: !2944)
!15522 = !DILocation(line: 246, column: 2, scope: !2945)
!15523 = !DILocation(line: 247, column: 37, scope: !2943)
!15524 = !DILocation(line: 0, scope: !2943)
!15525 = !DILocation(line: 248, column: 19, scope: !2943)
!15526 = !DILocation(line: 248, column: 12, scope: !2943)
!15527 = !DILocation(line: 250, column: 11, scope: !15528)
!15528 = distinct !DILexicalBlock(scope: !2943, file: !2694, line: 250, column: 7)
!15529 = !DILocation(line: 250, column: 7, scope: !2943)
!15530 = !DILocation(line: 254, column: 11, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15532, file: !2694, line: 254, column: 8)
!15532 = distinct !DILexicalBlock(scope: !15528, file: !2694, line: 250, column: 20)
!15533 = !DILocation(line: 254, column: 8, scope: !15532)
!15534 = !DILocation(line: 255, column: 9, scope: !15535)
!15535 = distinct !DILexicalBlock(scope: !15531, file: !2694, line: 254, column: 17)
!15536 = !DILocation(line: 258, column: 9, scope: !15535)
!15537 = !DILocation(line: 261, column: 28, scope: !15535)
!15538 = !DILocation(line: 261, column: 10, scope: !15535)
!15539 = !DILocation(line: 261, column: 17, scope: !15535)
!15540 = !DILocation(line: 261, column: 26, scope: !15535)
!15541 = !DILocation(line: 262, column: 4, scope: !15535)
!15542 = !DILocation(line: 263, column: 9, scope: !15532)
!15543 = !DILocation(line: 263, column: 16, scope: !15532)
!15544 = !DILocation(line: 263, column: 28, scope: !15532)
!15545 = !DILocation(line: 264, column: 3, scope: !15532)
!15546 = !DILocation(line: 246, column: 60, scope: !2944)
!15547 = distinct !{!15547, !15522, !15548}
!15548 = !DILocation(line: 265, column: 2, scope: !2945)
!15549 = !DILocation(line: 266, column: 1, scope: !2927)
!15550 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1041, file: !1041, line: 1638, type: !8250, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !15551)
!15551 = !{!15552, !15553}
!15552 = !DILocalVariable(name: "IRQn", arg: 1, scope: !15550, file: !1041, line: 1638, type: !1720)
!15553 = !DILocalVariable(name: "priority", arg: 2, scope: !15550, file: !1041, line: 1638, type: !108)
!15554 = !DILocation(line: 0, scope: !15550)
!15555 = !DILocation(line: 1646, column: 48, scope: !15556)
!15556 = distinct !DILexicalBlock(scope: !15557, file: !1041, line: 1645, column: 3)
!15557 = distinct !DILexicalBlock(scope: !15550, file: !1041, line: 1640, column: 7)
!15558 = !DILocation(line: 1646, column: 32, scope: !15556)
!15559 = !DILocation(line: 1646, column: 40, scope: !15556)
!15560 = !DILocation(line: 1646, column: 5, scope: !15556)
!15561 = !DILocation(line: 1646, column: 46, scope: !15556)
!15562 = !DILocation(line: 1648, column: 1, scope: !15550)
!15563 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !15481, file: !15481, line: 32, type: !333, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2894)
!15564 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !15565, file: !15565, line: 215, type: !15462, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !15566)
!15565 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15566 = !{!15567}
!15567 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !15564, file: !15565, line: 215, type: !2786)
!15568 = !DILocation(line: 0, scope: !15564)
!15569 = !DILocation(line: 217, column: 21, scope: !15564)
!15570 = !DILocation(line: 217, column: 34, scope: !15564)
!15571 = !DILocation(line: 221, column: 21, scope: !15564)
!15572 = !DILocation(line: 221, column: 34, scope: !15564)
!15573 = !DILocation(line: 223, column: 27, scope: !15564)
!15574 = !DILocation(line: 223, column: 33, scope: !15564)
!15575 = !DILocation(line: 224, column: 27, scope: !15564)
!15576 = !DILocation(line: 224, column: 32, scope: !15564)
!15577 = !DILocation(line: 232, column: 16, scope: !15564)
!15578 = !DILocation(line: 232, column: 30, scope: !15564)
!15579 = !DILocation(line: 239, column: 24, scope: !15564)
!15580 = !DILocation(line: 240, column: 1, scope: !15564)
!15581 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2694, file: !2694, line: 399, type: !15582, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !15584)
!15582 = !DISubroutineType(types: !15583)
!15583 = !{!157}
!15584 = !{!15585}
!15585 = !DILocalVariable(name: "stack_ptr", scope: !15581, file: !2694, line: 401, type: !157)
!15586 = !DILocation(line: 404, column: 2, scope: !15581)
!15587 = !DILocation(line: 416, column: 24, scope: !15581)
!15588 = !DILocation(line: 418, column: 14, scope: !15581)
!15589 = !DILocation(line: 0, scope: !15581)
!15590 = !DILocation(line: 423, column: 2, scope: !15581)
!15591 = !DILocation(line: 424, column: 2, scope: !15581)
!15592 = !DILocation(line: 426, column: 2, scope: !15581)
!15593 = !DILocation(line: 428, column: 2, scope: !15581)
!15594 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2694, file: !2694, line: 432, type: !15595, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !15597)
!15595 = !DISubroutineType(types: !15596)
!15596 = !{null, !157}
!15597 = !{!15598}
!15598 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !15594, file: !2694, line: 432, type: !157)
!15599 = !DILocation(line: 0, scope: !15594)
!15600 = !DILocation(line: 435, column: 2, scope: !15594)
!15601 = !DILocation(line: 445, column: 2, scope: !15594)
!15602 = distinct !DISubprogram(name: "bg_thread_main", scope: !2694, file: !2694, line: 277, type: !322, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !15603)
!15603 = !{!15604, !15605, !15606}
!15604 = !DILocalVariable(name: "unused1", arg: 1, scope: !15602, file: !2694, line: 277, type: !102)
!15605 = !DILocalVariable(name: "unused2", arg: 2, scope: !15602, file: !2694, line: 277, type: !102)
!15606 = !DILocalVariable(name: "unused3", arg: 3, scope: !15602, file: !2694, line: 277, type: !102)
!15607 = !DILocation(line: 0, scope: !15602)
!15608 = !DILocation(line: 291, column: 20, scope: !15602)
!15609 = !DILocation(line: 293, column: 2, scope: !15602)
!15610 = !DILocation(line: 297, column: 2, scope: !15602)
!15611 = !DILocation(line: 305, column: 2, scope: !15602)
!15612 = !DILocation(line: 307, column: 2, scope: !15602)
!15613 = !DILocation(line: 330, column: 8, scope: !15602)
!15614 = !DILocation(line: 333, column: 34, scope: !15602)
!15615 = !DILocation(line: 339, column: 1, scope: !15602)
!15616 = distinct !DISubprogram(name: "init_mem_slab_module", scope: !2975, file: !2975, line: 56, type: !2981, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !15617)
!15617 = !{!15618, !15619, !15620, !15640}
!15618 = !DILocalVariable(name: "dev", arg: 1, scope: !15616, file: !2975, line: 56, type: !2983)
!15619 = !DILocalVariable(name: "rc", scope: !15616, file: !2975, line: 58, type: !103)
!15620 = !DILocalVariable(name: "slab", scope: !15621, file: !2975, line: 61, type: !15622)
!15621 = distinct !DILexicalBlock(scope: !15616, file: !2975, line: 61, column: 2)
!15622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15623, size: 32)
!15623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_slab", file: !124, line: 4836, size: 256, elements: !15624)
!15624 = !{!15625, !15631, !15635, !15636, !15637, !15638, !15639}
!15625 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15623, file: !124, line: 4837, baseType: !15626, size: 64)
!15626 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !15627)
!15627 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !15628)
!15628 = !{!15629}
!15629 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !15627, file: !128, line: 232, baseType: !15630, size: 64)
!15630 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !2961)
!15631 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15623, file: !124, line: 4838, baseType: !15632, size: 32, offset: 64)
!15632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !15633)
!15633 = !{!15634}
!15634 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !15632, file: !149, line: 52, baseType: !22, size: 32)
!15635 = !DIDerivedType(tag: DW_TAG_member, name: "num_blocks", scope: !15623, file: !124, line: 4839, baseType: !108, size: 32, offset: 96)
!15636 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !15623, file: !124, line: 4840, baseType: !153, size: 32, offset: 128)
!15637 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !15623, file: !124, line: 4841, baseType: !157, size: 32, offset: 160)
!15638 = !DIDerivedType(tag: DW_TAG_member, name: "free_list", scope: !15623, file: !124, line: 4842, baseType: !157, size: 32, offset: 192)
!15639 = !DIDerivedType(tag: DW_TAG_member, name: "num_used", scope: !15623, file: !124, line: 4843, baseType: !108, size: 32, offset: 224)
!15640 = !DILabel(scope: !15616, name: "out", file: !2975, line: 69)
!15641 = !DILocation(line: 0, scope: !15616)
!15642 = !DILocation(line: 0, scope: !15621)
!15643 = !DILocation(line: 61, column: 2, scope: !15644)
!15644 = distinct !DILexicalBlock(scope: !15645, file: !2975, line: 61, column: 2)
!15645 = distinct !DILexicalBlock(scope: !15646, file: !2975, line: 61, column: 2)
!15646 = distinct !DILexicalBlock(scope: !15621, file: !2975, line: 61, column: 2)
!15647 = !DILocation(line: 61, column: 2, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15644, file: !2975, line: 61, column: 2)
!15649 = distinct !{!15649, !15650, !15651}
!15650 = !DILocation(line: 61, column: 2, scope: !15621)
!15651 = !DILocation(line: 67, column: 2, scope: !15621)
!15652 = !DILocation(line: 61, column: 2, scope: !15653)
!15653 = distinct !DILexicalBlock(scope: !15648, file: !2975, line: 61, column: 2)
!15654 = !DILocation(line: 61, column: 2, scope: !15645)
!15655 = !DILocation(line: 62, column: 8, scope: !15656)
!15656 = distinct !DILexicalBlock(scope: !15646, file: !2975, line: 61, column: 43)
!15657 = !DILocation(line: 63, column: 10, scope: !15658)
!15658 = distinct !DILexicalBlock(scope: !15656, file: !2975, line: 63, column: 7)
!15659 = !DILocation(line: 61, column: 2, scope: !15646)
!15660 = !DILocation(line: 63, column: 7, scope: !15656)
!15661 = !DILocation(line: 71, column: 1, scope: !15616)
!15662 = distinct !DISubprogram(name: "create_free_list", scope: !2975, file: !2975, line: 27, type: !15663, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !15665)
!15663 = !DISubroutineType(types: !15664)
!15664 = !{!103, !15622}
!15665 = !{!15666, !15667, !15668}
!15666 = !DILocalVariable(name: "slab", arg: 1, scope: !15662, file: !2975, line: 27, type: !15622)
!15667 = !DILocalVariable(name: "j", scope: !15662, file: !2975, line: 29, type: !108)
!15668 = !DILocalVariable(name: "p", scope: !15662, file: !2975, line: 30, type: !157)
!15669 = !DILocation(line: 0, scope: !15662)
!15670 = !DILocation(line: 33, column: 2, scope: !15671)
!15671 = distinct !DILexicalBlock(scope: !15662, file: !2975, line: 33, column: 2)
!15672 = !DILocation(line: 33, column: 2, scope: !15662)
!15673 = !DILocation(line: 38, column: 8, scope: !15662)
!15674 = !DILocation(line: 38, column: 18, scope: !15662)
!15675 = !DILocation(line: 41, column: 25, scope: !15676)
!15676 = distinct !DILexicalBlock(scope: !15677, file: !2975, line: 41, column: 2)
!15677 = distinct !DILexicalBlock(scope: !15662, file: !2975, line: 41, column: 2)
!15678 = !DILocation(line: 41, column: 17, scope: !15676)
!15679 = !DILocation(line: 41, column: 2, scope: !15677)
!15680 = !DILocation(line: 42, column: 23, scope: !15681)
!15681 = distinct !DILexicalBlock(scope: !15676, file: !2975, line: 41, column: 42)
!15682 = !DILocation(line: 42, column: 3, scope: !15681)
!15683 = !DILocation(line: 42, column: 15, scope: !15681)
!15684 = !DILocation(line: 43, column: 19, scope: !15681)
!15685 = !DILocation(line: 44, column: 14, scope: !15681)
!15686 = !DILocation(line: 44, column: 5, scope: !15681)
!15687 = !DILocation(line: 41, column: 38, scope: !15676)
!15688 = distinct !{!15688, !15679, !15689}
!15689 = !DILocation(line: 45, column: 2, scope: !15677)
!15690 = !DILocation(line: 47, column: 1, scope: !15662)
!15691 = distinct !DISubprogram(name: "k_mem_slab_init", scope: !2975, file: !2975, line: 76, type: !15692, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !15694)
!15692 = !DISubroutineType(types: !15693)
!15693 = !{!103, !15622, !102, !153, !108}
!15694 = !{!15695, !15696, !15697, !15698, !15699, !15700}
!15695 = !DILocalVariable(name: "slab", arg: 1, scope: !15691, file: !2975, line: 76, type: !15622)
!15696 = !DILocalVariable(name: "buffer", arg: 2, scope: !15691, file: !2975, line: 76, type: !102)
!15697 = !DILocalVariable(name: "block_size", arg: 3, scope: !15691, file: !2975, line: 77, type: !153)
!15698 = !DILocalVariable(name: "num_blocks", arg: 4, scope: !15691, file: !2975, line: 77, type: !108)
!15699 = !DILocalVariable(name: "rc", scope: !15691, file: !2975, line: 79, type: !103)
!15700 = !DILabel(scope: !15691, name: "out", file: !2975, line: 98)
!15701 = !DILocation(line: 0, scope: !15691)
!15702 = !DILocation(line: 81, column: 8, scope: !15691)
!15703 = !DILocation(line: 81, column: 19, scope: !15691)
!15704 = !DILocation(line: 82, column: 8, scope: !15691)
!15705 = !DILocation(line: 82, column: 19, scope: !15691)
!15706 = !DILocation(line: 83, column: 8, scope: !15691)
!15707 = !DILocation(line: 83, column: 15, scope: !15691)
!15708 = !DILocation(line: 84, column: 8, scope: !15691)
!15709 = !DILocation(line: 84, column: 17, scope: !15691)
!15710 = !DILocation(line: 85, column: 15, scope: !15691)
!15711 = !DILocation(line: 91, column: 7, scope: !15691)
!15712 = !DILocation(line: 92, column: 9, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15691, file: !2975, line: 92, column: 6)
!15714 = !DILocation(line: 92, column: 6, scope: !15691)
!15715 = !DILocation(line: 96, column: 22, scope: !15691)
!15716 = !DILocation(line: 96, column: 2, scope: !15691)
!15717 = !DILocation(line: 97, column: 2, scope: !15691)
!15718 = !DILocation(line: 98, column: 1, scope: !15691)
!15719 = !DILocation(line: 101, column: 2, scope: !15691)
!15720 = distinct !DISubprogram(name: "z_waitq_init", scope: !15721, file: !15721, line: 47, type: !15722, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !15725)
!15721 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15722 = !DISubroutineType(types: !15723)
!15723 = !{null, !15724}
!15724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15626, size: 32)
!15725 = !{!15726}
!15726 = !DILocalVariable(name: "w", arg: 1, scope: !15720, file: !15721, line: 47, type: !15724)
!15727 = !DILocation(line: 0, scope: !15720)
!15728 = !DILocation(line: 49, column: 21, scope: !15720)
!15729 = !DILocation(line: 49, column: 2, scope: !15720)
!15730 = !DILocation(line: 50, column: 1, scope: !15720)
!15731 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !15732, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !15735)
!15732 = !DISubroutineType(types: !15733)
!15733 = !{null, !15734}
!15734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15630, size: 32)
!15735 = !{!15736}
!15736 = !DILocalVariable(name: "list", arg: 1, scope: !15731, file: !133, line: 197, type: !15734)
!15737 = !DILocation(line: 0, scope: !15731)
!15738 = !DILocation(line: 199, column: 8, scope: !15731)
!15739 = !DILocation(line: 199, column: 13, scope: !15731)
!15740 = !DILocation(line: 200, column: 8, scope: !15731)
!15741 = !DILocation(line: 200, column: 13, scope: !15731)
!15742 = !DILocation(line: 201, column: 1, scope: !15731)
!15743 = distinct !DISubprogram(name: "k_mem_slab_alloc", scope: !2975, file: !2975, line: 104, type: !15744, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !15750)
!15744 = !DISubroutineType(types: !15745)
!15745 = !{!103, !15622, !1557, !15746}
!15746 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15747)
!15747 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15748)
!15748 = !{!15749}
!15749 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15747, file: !105, line: 66, baseType: !104, size: 64)
!15750 = !{!15751, !15752, !15753, !15754, !15759}
!15751 = !DILocalVariable(name: "slab", arg: 1, scope: !15743, file: !2975, line: 104, type: !15622)
!15752 = !DILocalVariable(name: "mem", arg: 2, scope: !15743, file: !2975, line: 104, type: !1557)
!15753 = !DILocalVariable(name: "timeout", arg: 3, scope: !15743, file: !2975, line: 104, type: !15746)
!15754 = !DILocalVariable(name: "key", scope: !15743, file: !2975, line: 106, type: !15755)
!15755 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !15756)
!15756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !15757)
!15757 = !{!15758}
!15758 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15756, file: !149, line: 33, baseType: !103, size: 32)
!15759 = !DILocalVariable(name: "result", scope: !15743, file: !2975, line: 107, type: !103)
!15760 = !DILocation(line: 0, scope: !15743)
!15761 = !DILocation(line: 106, column: 44, scope: !15743)
!15762 = !DILocalVariable(name: "l", arg: 1, scope: !15763, file: !149, line: 136, type: !15766)
!15763 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !15764, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !15767)
!15764 = !DISubroutineType(types: !15765)
!15765 = !{!15755, !15766}
!15766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15632, size: 32)
!15767 = !{!15762, !15768}
!15768 = !DILocalVariable(name: "k", scope: !15763, file: !149, line: 139, type: !15755)
!15769 = !DILocation(line: 0, scope: !15763, inlinedAt: !15770)
!15770 = distinct !DILocation(line: 106, column: 25, scope: !15743)
!15771 = !DILocation(line: 55, column: 2, scope: !15772, inlinedAt: !15776)
!15772 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7872, file: !7872, line: 42, type: !7873, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !15773)
!15773 = !{!15774, !15775}
!15774 = !DILocalVariable(name: "key", scope: !15772, file: !7872, line: 44, type: !32)
!15775 = !DILocalVariable(name: "tmp", scope: !15772, file: !7872, line: 53, type: !32)
!15776 = distinct !DILocation(line: 145, column: 10, scope: !15763, inlinedAt: !15770)
!15777 = !{i64 1654279}
!15778 = !DILocation(line: 0, scope: !15772, inlinedAt: !15776)
!15779 = !DILocation(line: 148, column: 2, scope: !15780, inlinedAt: !15770)
!15780 = distinct !DILexicalBlock(scope: !15781, file: !149, line: 148, column: 2)
!15781 = distinct !DILexicalBlock(scope: !15763, file: !149, line: 148, column: 2)
!15782 = !DILocation(line: 148, column: 2, scope: !15781, inlinedAt: !15770)
!15783 = !DILocation(line: 148, column: 2, scope: !15784, inlinedAt: !15770)
!15784 = distinct !DILexicalBlock(scope: !15780, file: !149, line: 148, column: 2)
!15785 = !DILocation(line: 160, column: 2, scope: !15763, inlinedAt: !15770)
!15786 = !DILocation(line: 111, column: 12, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15743, file: !2975, line: 111, column: 6)
!15788 = !DILocation(line: 111, column: 22, scope: !15787)
!15789 = !DILocation(line: 111, column: 6, scope: !15743)
!15790 = !DILocation(line: 113, column: 8, scope: !15791)
!15791 = distinct !DILexicalBlock(scope: !15787, file: !2975, line: 111, column: 31)
!15792 = !DILocation(line: 114, column: 38, scope: !15791)
!15793 = !DILocation(line: 114, column: 21, scope: !15791)
!15794 = !DILocation(line: 114, column: 19, scope: !15791)
!15795 = !DILocation(line: 115, column: 9, scope: !15791)
!15796 = !DILocation(line: 115, column: 17, scope: !15791)
!15797 = !DILocation(line: 122, column: 2, scope: !15791)
!15798 = !DILocation(line: 122, column: 13, scope: !15799)
!15799 = distinct !DILexicalBlock(scope: !15787, file: !2975, line: 122, column: 13)
!15800 = !DILocation(line: 122, column: 13, scope: !15787)
!15801 = !DILocation(line: 125, column: 8, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15799, file: !2975, line: 123, column: 42)
!15803 = !DILocation(line: 131, column: 49, scope: !15804)
!15804 = distinct !DILexicalBlock(scope: !15799, file: !2975, line: 127, column: 9)
!15805 = !DILocation(line: 131, column: 12, scope: !15804)
!15806 = !DILocation(line: 132, column: 14, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15804, file: !2975, line: 132, column: 7)
!15808 = !DILocation(line: 132, column: 7, scope: !15804)
!15809 = !DILocation(line: 133, column: 11, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15807, file: !2975, line: 132, column: 20)
!15811 = !DILocation(line: 133, column: 26, scope: !15810)
!15812 = !DILocation(line: 133, column: 9, scope: !15810)
!15813 = !DILocation(line: 134, column: 3, scope: !15810)
!15814 = !DILocation(line: 0, scope: !15787)
!15815 = !DILocalVariable(name: "key", arg: 2, scope: !15816, file: !149, line: 190, type: !15755)
!15816 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !15817, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !15819)
!15817 = !DISubroutineType(types: !15818)
!15818 = !{null, !15766, !15755}
!15819 = !{!15820, !15815}
!15820 = !DILocalVariable(name: "l", arg: 1, scope: !15816, file: !149, line: 189, type: !15766)
!15821 = !DILocation(line: 0, scope: !15816, inlinedAt: !15822)
!15822 = distinct !DILocation(line: 143, column: 2, scope: !15743)
!15823 = !DILocation(line: 194, column: 2, scope: !15824, inlinedAt: !15822)
!15824 = distinct !DILexicalBlock(scope: !15825, file: !149, line: 194, column: 2)
!15825 = distinct !DILexicalBlock(scope: !15816, file: !149, line: 194, column: 2)
!15826 = !DILocation(line: 194, column: 2, scope: !15825, inlinedAt: !15822)
!15827 = !DILocation(line: 194, column: 2, scope: !15828, inlinedAt: !15822)
!15828 = distinct !DILexicalBlock(scope: !15824, file: !149, line: 194, column: 2)
!15829 = !DILocalVariable(name: "key", arg: 1, scope: !15830, file: !7872, line: 84, type: !32)
!15830 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7872, file: !7872, line: 84, type: !7883, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !15831)
!15831 = !{!15829}
!15832 = !DILocation(line: 0, scope: !15830, inlinedAt: !15833)
!15833 = distinct !DILocation(line: 215, column: 2, scope: !15816, inlinedAt: !15822)
!15834 = !DILocation(line: 95, column: 2, scope: !15830, inlinedAt: !15833)
!15835 = !{i64 1655096}
!15836 = !DILocation(line: 145, column: 2, scope: !15743)
!15837 = !DILocation(line: 146, column: 1, scope: !15743)
!15838 = distinct !DISubprogram(name: "k_mem_slab_free", scope: !2975, file: !2975, line: 148, type: !15839, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !15841)
!15839 = !DISubroutineType(types: !15840)
!15840 = !{null, !15622, !1557}
!15841 = !{!15842, !15843, !15844, !15845}
!15842 = !DILocalVariable(name: "slab", arg: 1, scope: !15838, file: !2975, line: 148, type: !15622)
!15843 = !DILocalVariable(name: "mem", arg: 2, scope: !15838, file: !2975, line: 148, type: !1557)
!15844 = !DILocalVariable(name: "key", scope: !15838, file: !2975, line: 150, type: !15755)
!15845 = !DILocalVariable(name: "pending_thread", scope: !15846, file: !2975, line: 154, type: !15848)
!15846 = distinct !DILexicalBlock(scope: !15847, file: !2975, line: 153, column: 68)
!15847 = distinct !DILexicalBlock(scope: !15838, file: !2975, line: 153, column: 6)
!15848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15849, size: 32)
!15849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !15850)
!15850 = !{!15851, !15889, !15901, !15902, !15903, !15904, !15910, !15922}
!15851 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !15849, file: !195, line: 247, baseType: !15852, size: 384)
!15852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !15853)
!15853 = !{!15854, !15864, !15865, !15866, !15867, !15876, !15877, !15878}
!15854 = !DIDerivedType(tag: DW_TAG_member, scope: !15852, file: !195, line: 60, baseType: !15855, size: 64)
!15855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15852, file: !195, line: 60, size: 64, elements: !15856)
!15856 = !{!15857, !15858}
!15857 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !15855, file: !195, line: 61, baseType: !2960, size: 64)
!15858 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !15855, file: !195, line: 62, baseType: !15859, size: 64)
!15859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !15860)
!15860 = !{!15861}
!15861 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !15859, file: !207, line: 50, baseType: !15862, size: 64)
!15862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15863, size: 64, elements: !212)
!15863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15859, size: 32)
!15864 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !15852, file: !195, line: 68, baseType: !15724, size: 32, offset: 64)
!15865 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !15852, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!15866 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !15852, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!15867 = !DIDerivedType(tag: DW_TAG_member, scope: !15852, file: !195, line: 90, baseType: !15868, size: 16, offset: 112)
!15868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15852, file: !195, line: 90, size: 16, elements: !15869)
!15869 = !{!15870, !15875}
!15870 = !DIDerivedType(tag: DW_TAG_member, scope: !15868, file: !195, line: 91, baseType: !15871, size: 16)
!15871 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15868, file: !195, line: 91, size: 16, elements: !15872)
!15872 = !{!15873, !15874}
!15873 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !15871, file: !195, line: 96, baseType: !225, size: 8)
!15874 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !15871, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!15875 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !15868, file: !195, line: 100, baseType: !177, size: 16)
!15876 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !15852, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!15877 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !15852, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!15878 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !15852, file: !195, line: 131, baseType: !15879, size: 192, offset: 192)
!15879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !15880)
!15880 = !{!15881, !15882, !15888}
!15881 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !15879, file: !128, line: 245, baseType: !2960, size: 64)
!15882 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !15879, file: !128, line: 246, baseType: !15883, size: 32, offset: 64)
!15883 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !15884)
!15884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15885, size: 32)
!15885 = !DISubroutineType(types: !15886)
!15886 = !{null, !15887}
!15887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15879, size: 32)
!15888 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !15879, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!15889 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !15849, file: !195, line: 250, baseType: !15890, size: 288, offset: 384)
!15890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !15891)
!15891 = !{!15892, !15893, !15894, !15895, !15896, !15897, !15898, !15899, !15900}
!15892 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !15890, file: !244, line: 26, baseType: !108, size: 32)
!15893 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !15890, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!15894 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !15890, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!15895 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !15890, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!15896 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !15890, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!15897 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !15890, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!15898 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !15890, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!15899 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !15890, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!15900 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !15890, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!15901 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !15849, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!15902 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !15849, file: !195, line: 256, baseType: !15626, size: 64, offset: 704)
!15903 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !15849, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!15904 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !15849, file: !195, line: 300, baseType: !15905, size: 96, offset: 800)
!15905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !15906)
!15906 = !{!15907, !15908, !15909}
!15907 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !15905, file: !195, line: 153, baseType: !22, size: 32)
!15908 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !15905, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!15909 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !15905, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!15910 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !15849, file: !195, line: 325, baseType: !15911, size: 32, offset: 896)
!15911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15912, size: 32)
!15912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !15913)
!15913 = !{!15914, !15920, !15921}
!15914 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15912, file: !124, line: 5074, baseType: !15915, size: 96)
!15915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !15916)
!15916 = !{!15917, !15918, !15919}
!15917 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15915, file: !270, line: 57, baseType: !273, size: 32)
!15918 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !15915, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!15919 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !15915, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!15920 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15912, file: !124, line: 5075, baseType: !15626, size: 64, offset: 96)
!15921 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15912, file: !124, line: 5076, baseType: !15632, size: 32, offset: 160)
!15922 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !15849, file: !195, line: 343, baseType: !15923, size: 64, offset: 928)
!15923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !15924)
!15924 = !{!15925, !15926}
!15925 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !15923, file: !244, line: 63, baseType: !108, size: 32)
!15926 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !15923, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!15927 = !DILocation(line: 0, scope: !15838)
!15928 = !DILocation(line: 150, column: 44, scope: !15838)
!15929 = !DILocation(line: 0, scope: !15763, inlinedAt: !15930)
!15930 = distinct !DILocation(line: 150, column: 25, scope: !15838)
!15931 = !DILocation(line: 55, column: 2, scope: !15772, inlinedAt: !15932)
!15932 = distinct !DILocation(line: 145, column: 10, scope: !15763, inlinedAt: !15930)
!15933 = !DILocation(line: 0, scope: !15772, inlinedAt: !15932)
!15934 = !DILocation(line: 148, column: 2, scope: !15780, inlinedAt: !15930)
!15935 = !DILocation(line: 148, column: 2, scope: !15781, inlinedAt: !15930)
!15936 = !DILocation(line: 148, column: 2, scope: !15784, inlinedAt: !15930)
!15937 = !DILocation(line: 160, column: 2, scope: !15763, inlinedAt: !15930)
!15938 = !DILocation(line: 153, column: 12, scope: !15847)
!15939 = !DILocation(line: 153, column: 22, scope: !15847)
!15940 = !DILocation(line: 153, column: 6, scope: !15838)
!15941 = !DILocation(line: 154, column: 66, scope: !15846)
!15942 = !DILocation(line: 154, column: 37, scope: !15846)
!15943 = !DILocation(line: 0, scope: !15846)
!15944 = !DILocation(line: 156, column: 22, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15846, file: !2975, line: 156, column: 7)
!15946 = !DILocation(line: 156, column: 7, scope: !15846)
!15947 = !DILocation(line: 165, column: 27, scope: !15838)
!15948 = !DILocation(line: 159, column: 59, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15945, file: !2975, line: 156, column: 31)
!15950 = !DILocalVariable(name: "thread", arg: 1, scope: !15951, file: !15952, line: 134, type: !15848)
!15951 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15952, file: !15952, line: 134, type: !15953, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !15955)
!15952 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15953 = !DISubroutineType(types: !15954)
!15954 = !{null, !15848, !32, !102}
!15955 = !{!15950, !15956, !15957}
!15956 = !DILocalVariable(name: "value", arg: 2, scope: !15951, file: !15952, line: 135, type: !32)
!15957 = !DILocalVariable(name: "data", arg: 3, scope: !15951, file: !15952, line: 136, type: !102)
!15958 = !DILocation(line: 0, scope: !15951, inlinedAt: !15959)
!15959 = distinct !DILocation(line: 159, column: 4, scope: !15949)
!15960 = !DILocalVariable(name: "thread", arg: 1, scope: !15961, file: !15481, line: 65, type: !15848)
!15961 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !15481, file: !15481, line: 65, type: !15962, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !15964)
!15962 = !DISubroutineType(types: !15963)
!15963 = !{null, !15848, !32}
!15964 = !{!15960, !15965}
!15965 = !DILocalVariable(name: "value", arg: 2, scope: !15961, file: !15481, line: 65, type: !32)
!15966 = !DILocation(line: 0, scope: !15961, inlinedAt: !15967)
!15967 = distinct !DILocation(line: 138, column: 2, scope: !15951, inlinedAt: !15959)
!15968 = !DILocation(line: 67, column: 15, scope: !15961, inlinedAt: !15967)
!15969 = !DILocation(line: 67, column: 33, scope: !15961, inlinedAt: !15967)
!15970 = !DILocation(line: 139, column: 15, scope: !15951, inlinedAt: !15959)
!15971 = !DILocation(line: 139, column: 25, scope: !15951, inlinedAt: !15959)
!15972 = !DILocation(line: 160, column: 4, scope: !15949)
!15973 = !DILocation(line: 161, column: 4, scope: !15949)
!15974 = !DILocation(line: 165, column: 3, scope: !15838)
!15975 = !DILocation(line: 165, column: 19, scope: !15838)
!15976 = !DILocation(line: 166, column: 20, scope: !15838)
!15977 = !DILocation(line: 166, column: 18, scope: !15838)
!15978 = !DILocation(line: 167, column: 8, scope: !15838)
!15979 = !DILocation(line: 167, column: 16, scope: !15838)
!15980 = !DILocation(line: 0, scope: !15816, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 171, column: 2, scope: !15838)
!15982 = !DILocation(line: 194, column: 2, scope: !15824, inlinedAt: !15981)
!15983 = !DILocation(line: 194, column: 2, scope: !15825, inlinedAt: !15981)
!15984 = !DILocation(line: 194, column: 2, scope: !15828, inlinedAt: !15981)
!15985 = !DILocation(line: 0, scope: !15830, inlinedAt: !15986)
!15986 = distinct !DILocation(line: 215, column: 2, scope: !15816, inlinedAt: !15981)
!15987 = !DILocation(line: 95, column: 2, scope: !15830, inlinedAt: !15986)
!15988 = !DILocation(line: 172, column: 1, scope: !15838)
!15989 = distinct !DISubprogram(name: "k_mem_slab_runtime_stats_get", scope: !2975, file: !2975, line: 174, type: !15990, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !15999)
!15990 = !DISubroutineType(types: !15991)
!15991 = !{!103, !15622, !15992}
!15992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15993, size: 32)
!15993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !15994, line: 24, size: 96, elements: !15995)
!15994 = !DIFile(filename: "zephyr/include/zephyr/sys/mem_stats.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15995 = !{!15996, !15997, !15998}
!15996 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !15993, file: !15994, line: 25, baseType: !153, size: 32)
!15997 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !15993, file: !15994, line: 26, baseType: !153, size: 32, offset: 32)
!15998 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !15993, file: !15994, line: 27, baseType: !153, size: 32, offset: 64)
!15999 = !{!16000, !16001, !16002}
!16000 = !DILocalVariable(name: "slab", arg: 1, scope: !15989, file: !2975, line: 174, type: !15622)
!16001 = !DILocalVariable(name: "stats", arg: 2, scope: !15989, file: !2975, line: 174, type: !15992)
!16002 = !DILocalVariable(name: "key", scope: !15989, file: !2975, line: 180, type: !15755)
!16003 = !DILocation(line: 0, scope: !15989)
!16004 = !DILocation(line: 176, column: 12, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !15989, file: !2975, line: 176, column: 6)
!16006 = !DILocation(line: 176, column: 21, scope: !16005)
!16007 = !DILocation(line: 180, column: 44, scope: !15989)
!16008 = !DILocation(line: 0, scope: !15763, inlinedAt: !16009)
!16009 = distinct !DILocation(line: 180, column: 25, scope: !15989)
!16010 = !DILocation(line: 55, column: 2, scope: !15772, inlinedAt: !16011)
!16011 = distinct !DILocation(line: 145, column: 10, scope: !15763, inlinedAt: !16009)
!16012 = !DILocation(line: 0, scope: !15772, inlinedAt: !16011)
!16013 = !DILocation(line: 148, column: 2, scope: !15780, inlinedAt: !16009)
!16014 = !DILocation(line: 148, column: 2, scope: !15781, inlinedAt: !16009)
!16015 = !DILocation(line: 148, column: 2, scope: !15784, inlinedAt: !16009)
!16016 = !DILocation(line: 160, column: 2, scope: !15763, inlinedAt: !16009)
!16017 = !DILocation(line: 182, column: 33, scope: !15989)
!16018 = !DILocation(line: 182, column: 50, scope: !15989)
!16019 = !DILocation(line: 182, column: 42, scope: !15989)
!16020 = !DILocation(line: 182, column: 9, scope: !15989)
!16021 = !DILocation(line: 182, column: 25, scope: !15989)
!16022 = !DILocation(line: 183, column: 29, scope: !15989)
!16023 = !DILocation(line: 183, column: 48, scope: !15989)
!16024 = !DILocation(line: 183, column: 40, scope: !15989)
!16025 = !DILocation(line: 183, column: 66, scope: !15989)
!16026 = !DILocation(line: 183, column: 58, scope: !15989)
!16027 = !DILocation(line: 183, column: 9, scope: !15989)
!16028 = !DILocation(line: 183, column: 20, scope: !15989)
!16029 = !DILocation(line: 187, column: 9, scope: !15989)
!16030 = !DILocation(line: 187, column: 29, scope: !15989)
!16031 = !DILocation(line: 0, scope: !15816, inlinedAt: !16032)
!16032 = distinct !DILocation(line: 190, column: 2, scope: !15989)
!16033 = !DILocation(line: 194, column: 2, scope: !15824, inlinedAt: !16032)
!16034 = !DILocation(line: 194, column: 2, scope: !15825, inlinedAt: !16032)
!16035 = !DILocation(line: 194, column: 2, scope: !15828, inlinedAt: !16032)
!16036 = !DILocation(line: 0, scope: !15830, inlinedAt: !16037)
!16037 = distinct !DILocation(line: 215, column: 2, scope: !15816, inlinedAt: !16032)
!16038 = !DILocation(line: 95, column: 2, scope: !15830, inlinedAt: !16037)
!16039 = !DILocation(line: 193, column: 1, scope: !15989)
!16040 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2990, file: !2990, line: 45, type: !16041, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16049)
!16041 = !DISubroutineType(types: !16042)
!16042 = !{null, !16043, !102}
!16043 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !124, line: 103, baseType: !16044)
!16044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16045, size: 32)
!16045 = !DISubroutineType(types: !16046)
!16046 = !{null, !16047, !102}
!16047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16048, size: 32)
!16048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2995)
!16049 = !{!16050, !16051}
!16050 = !DILocalVariable(name: "user_cb", arg: 1, scope: !16040, file: !2990, line: 45, type: !16043)
!16051 = !DILocalVariable(name: "user_data", arg: 2, scope: !16040, file: !2990, line: 45, type: !102)
!16052 = !DILocation(line: 0, scope: !16040)
!16053 = !DILocation(line: 71, column: 1, scope: !16040)
!16054 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2990, file: !2990, line: 73, type: !16041, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16055)
!16055 = !{!16056, !16057}
!16056 = !DILocalVariable(name: "user_cb", arg: 1, scope: !16054, file: !2990, line: 73, type: !16043)
!16057 = !DILocalVariable(name: "user_data", arg: 2, scope: !16054, file: !2990, line: 73, type: !102)
!16058 = !DILocation(line: 0, scope: !16054)
!16059 = !DILocation(line: 95, column: 1, scope: !16054)
!16060 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2990, file: !2990, line: 97, type: !9220, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !2894)
!16061 = !DILocation(line: 1031, column: 3, scope: !16062, inlinedAt: !16065)
!16062 = distinct !DISubprogram(name: "__get_IPSR", scope: !8210, file: !8210, line: 1027, type: !9213, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16063)
!16063 = !{!16064}
!16064 = !DILocalVariable(name: "result", scope: !16062, file: !8210, line: 1029, type: !108)
!16065 = distinct !DILocation(line: 48, column: 10, scope: !16066, inlinedAt: !16067)
!16066 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9219, file: !9219, line: 46, type: !9220, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !2894)
!16067 = distinct !DILocation(line: 99, column: 9, scope: !16060)
!16068 = !{i64 2473281}
!16069 = !DILocation(line: 0, scope: !16062, inlinedAt: !16065)
!16070 = !DILocation(line: 48, column: 9, scope: !16066, inlinedAt: !16067)
!16071 = !DILocation(line: 99, column: 2, scope: !16060)
!16072 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2990, file: !2990, line: 106, type: !333, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !2894)
!16073 = !DILocation(line: 108, column: 2, scope: !16072)
!16074 = !DILocation(line: 108, column: 17, scope: !16072)
!16075 = !DILocation(line: 108, column: 30, scope: !16072)
!16076 = !DILocation(line: 109, column: 1, scope: !16072)
!16077 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2990, file: !2990, line: 116, type: !333, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !2894)
!16078 = !DILocation(line: 118, column: 2, scope: !16077)
!16079 = !DILocation(line: 118, column: 17, scope: !16077)
!16080 = !DILocation(line: 118, column: 30, scope: !16077)
!16081 = !DILocation(line: 119, column: 1, scope: !16077)
!16082 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2990, file: !2990, line: 126, type: !9220, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !2894)
!16083 = !DILocation(line: 128, column: 10, scope: !16082)
!16084 = !DILocation(line: 128, column: 25, scope: !16082)
!16085 = !DILocation(line: 128, column: 38, scope: !16082)
!16086 = !DILocation(line: 128, column: 53, scope: !16082)
!16087 = !DILocation(line: 128, column: 2, scope: !16082)
!16088 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2990, file: !2990, line: 187, type: !16089, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16091)
!16089 = !DISubroutineType(types: !16090)
!16090 = !{!103, !2994, !336}
!16091 = !{!16092, !16093}
!16092 = !DILocalVariable(name: "thread", arg: 1, scope: !16088, file: !2990, line: 187, type: !2994)
!16093 = !DILocalVariable(name: "value", arg: 2, scope: !16088, file: !2990, line: 187, type: !336)
!16094 = !DILocation(line: 0, scope: !16088)
!16095 = !DILocation(line: 206, column: 2, scope: !16088)
!16096 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2990, file: !2990, line: 238, type: !16097, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16099)
!16097 = !DISubroutineType(types: !16098)
!16098 = !{!336, !2994}
!16099 = !{!16100}
!16100 = !DILocalVariable(name: "thread", arg: 1, scope: !16096, file: !2990, line: 238, type: !2994)
!16101 = !DILocation(line: 0, scope: !16096)
!16102 = !DILocation(line: 244, column: 2, scope: !16096)
!16103 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2990, file: !2990, line: 248, type: !16104, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16106)
!16104 = !DISubroutineType(types: !16105)
!16105 = !{!103, !2993, !157, !153}
!16106 = !{!16107, !16108, !16109}
!16107 = !DILocalVariable(name: "thread", arg: 1, scope: !16103, file: !2990, line: 248, type: !2993)
!16108 = !DILocalVariable(name: "buf", arg: 2, scope: !16103, file: !2990, line: 248, type: !157)
!16109 = !DILocalVariable(name: "size", arg: 3, scope: !16103, file: !2990, line: 248, type: !153)
!16110 = !DILocation(line: 0, scope: !16103)
!16111 = !DILocation(line: 257, column: 2, scope: !16103)
!16112 = !DILocation(line: 0, scope: !2989)
!16113 = !DILocation(line: 281, column: 11, scope: !16114)
!16114 = distinct !DILexicalBlock(scope: !2989, file: !2990, line: 281, column: 6)
!16115 = !DILocation(line: 281, column: 20, scope: !16114)
!16116 = !DILocation(line: 275, column: 45, scope: !2989)
!16117 = !DILocation(line: 285, column: 10, scope: !2989)
!16118 = !DILocation(line: 0, scope: !3112)
!16119 = !DILocation(line: 293, column: 39, scope: !16120)
!16120 = distinct !DILexicalBlock(scope: !3112, file: !2990, line: 293, column: 2)
!16121 = !DILocation(line: 293, column: 2, scope: !3112)
!16122 = !DILocation(line: 273, column: 14, scope: !2989)
!16123 = !DILocation(line: 309, column: 2, scope: !2989)
!16124 = !DILocation(line: 309, column: 11, scope: !2989)
!16125 = !DILocation(line: 311, column: 2, scope: !2989)
!16126 = !DILocation(line: 293, column: 26, scope: !16120)
!16127 = !DILocation(line: 294, column: 9, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16120, file: !2990, line: 293, column: 54)
!16129 = !DILocation(line: 295, column: 21, scope: !16130)
!16130 = distinct !DILexicalBlock(scope: !16128, file: !2990, line: 295, column: 7)
!16131 = !DILocation(line: 295, column: 28, scope: !16130)
!16132 = !DILocation(line: 295, column: 7, scope: !16128)
!16133 = !DILocation(line: 299, column: 25, scope: !16128)
!16134 = !DILocation(line: 299, column: 41, scope: !16128)
!16135 = !DILocation(line: 300, column: 7, scope: !16128)
!16136 = !DILocation(line: 300, column: 26, scope: !16128)
!16137 = !DILocation(line: 299, column: 10, scope: !16128)
!16138 = !DILocation(line: 299, column: 7, scope: !16128)
!16139 = !DILocation(line: 302, column: 16, scope: !16128)
!16140 = !DILocation(line: 304, column: 20, scope: !16141)
!16141 = distinct !DILexicalBlock(scope: !16128, file: !2990, line: 304, column: 7)
!16142 = !DILocation(line: 304, column: 7, scope: !16128)
!16143 = !DILocation(line: 305, column: 26, scope: !16144)
!16144 = distinct !DILexicalBlock(scope: !16141, file: !2990, line: 304, column: 26)
!16145 = !DILocation(line: 305, column: 42, scope: !16144)
!16146 = !DILocation(line: 305, column: 11, scope: !16144)
!16147 = !DILocation(line: 305, column: 8, scope: !16144)
!16148 = !DILocation(line: 306, column: 3, scope: !16144)
!16149 = !DILocation(line: 293, column: 50, scope: !16120)
!16150 = !DILocation(line: 312, column: 1, scope: !2989)
!16151 = distinct !DISubprogram(name: "copy_bytes", scope: !2990, file: !2990, line: 261, type: !16152, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16154)
!16152 = !DISubroutineType(types: !16153)
!16153 = !{!153, !157, !153, !336, !153}
!16154 = !{!16155, !16156, !16157, !16158, !16159}
!16155 = !DILocalVariable(name: "dest", arg: 1, scope: !16151, file: !2990, line: 261, type: !157)
!16156 = !DILocalVariable(name: "dest_size", arg: 2, scope: !16151, file: !2990, line: 261, type: !153)
!16157 = !DILocalVariable(name: "src", arg: 3, scope: !16151, file: !2990, line: 261, type: !336)
!16158 = !DILocalVariable(name: "src_size", arg: 4, scope: !16151, file: !2990, line: 261, type: !153)
!16159 = !DILocalVariable(name: "bytes_to_copy", scope: !16151, file: !2990, line: 263, type: !153)
!16160 = !DILocation(line: 0, scope: !16151)
!16161 = !DILocation(line: 265, column: 18, scope: !16151)
!16162 = !DILocation(line: 266, column: 2, scope: !16151)
!16163 = !DILocation(line: 268, column: 2, scope: !16151)
!16164 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2990, file: !2990, line: 383, type: !16165, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16167)
!16165 = !DISubroutineType(types: !16166)
!16166 = !{null, !2994}
!16167 = !{!16168}
!16168 = !DILocalVariable(name: "thread", arg: 1, scope: !16164, file: !2990, line: 383, type: !2994)
!16169 = !DILocation(line: 0, scope: !16164)
!16170 = !DILocation(line: 387, column: 2, scope: !16164)
!16171 = !DILocation(line: 388, column: 1, scope: !16164)
!16172 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2990, file: !2990, line: 528, type: !16173, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16180)
!16173 = !DISubroutineType(types: !16174)
!16174 = !{!157, !2994, !16175, !153, !320, !102, !102, !102, !103, !108, !336}
!16175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16176, size: 32)
!16176 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !313, line: 44, baseType: !16177)
!16177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !315, line: 47, size: 8, elements: !16178)
!16178 = !{!16179}
!16179 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !16177, file: !315, line: 48, baseType: !158, size: 8)
!16180 = !{!16181, !16182, !16183, !16184, !16185, !16186, !16187, !16188, !16189, !16190, !16191}
!16181 = !DILocalVariable(name: "new_thread", arg: 1, scope: !16172, file: !2990, line: 528, type: !2994)
!16182 = !DILocalVariable(name: "stack", arg: 2, scope: !16172, file: !2990, line: 529, type: !16175)
!16183 = !DILocalVariable(name: "stack_size", arg: 3, scope: !16172, file: !2990, line: 529, type: !153)
!16184 = !DILocalVariable(name: "entry", arg: 4, scope: !16172, file: !2990, line: 530, type: !320)
!16185 = !DILocalVariable(name: "p1", arg: 5, scope: !16172, file: !2990, line: 531, type: !102)
!16186 = !DILocalVariable(name: "p2", arg: 6, scope: !16172, file: !2990, line: 531, type: !102)
!16187 = !DILocalVariable(name: "p3", arg: 7, scope: !16172, file: !2990, line: 531, type: !102)
!16188 = !DILocalVariable(name: "prio", arg: 8, scope: !16172, file: !2990, line: 532, type: !103)
!16189 = !DILocalVariable(name: "options", arg: 9, scope: !16172, file: !2990, line: 532, type: !108)
!16190 = !DILocalVariable(name: "name", arg: 10, scope: !16172, file: !2990, line: 532, type: !336)
!16191 = !DILocalVariable(name: "stack_ptr", scope: !16172, file: !2990, line: 534, type: !157)
!16192 = !DILocation(line: 0, scope: !16172)
!16193 = !DILocation(line: 536, column: 2, scope: !16194)
!16194 = distinct !DILexicalBlock(scope: !16195, file: !2990, line: 536, column: 2)
!16195 = distinct !DILexicalBlock(scope: !16196, file: !2990, line: 536, column: 2)
!16196 = distinct !DILexicalBlock(scope: !16172, file: !2990, line: 536, column: 2)
!16197 = !DILocation(line: 536, column: 2, scope: !16198)
!16198 = distinct !DILexicalBlock(scope: !16194, file: !2990, line: 536, column: 2)
!16199 = !DILocation(line: 550, column: 28, scope: !16172)
!16200 = !DILocation(line: 550, column: 2, scope: !16172)
!16201 = !DILocation(line: 553, column: 34, scope: !16172)
!16202 = !DILocation(line: 553, column: 2, scope: !16172)
!16203 = !DILocation(line: 554, column: 14, scope: !16172)
!16204 = !DILocation(line: 564, column: 2, scope: !16172)
!16205 = !DILocation(line: 567, column: 14, scope: !16172)
!16206 = !DILocation(line: 567, column: 24, scope: !16172)
!16207 = !DILocation(line: 612, column: 7, scope: !16208)
!16208 = distinct !DILexicalBlock(scope: !16172, file: !2990, line: 612, column: 6)
!16209 = !DILocation(line: 612, column: 6, scope: !16172)
!16210 = !DILocation(line: 627, column: 40, scope: !16172)
!16211 = !DILocation(line: 637, column: 2, scope: !16172)
!16212 = !DILocation(line: 613, column: 15, scope: !16213)
!16213 = distinct !DILexicalBlock(scope: !16208, file: !2990, line: 612, column: 17)
!16214 = !DILocation(line: 613, column: 29, scope: !16213)
!16215 = !DILocation(line: 638, column: 1, scope: !16172)
!16216 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !15461, file: !15461, line: 78, type: !16217, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16219)
!16217 = !DISubroutineType(types: !16218)
!16218 = !{!119, !102}
!16219 = !{!16220}
!16220 = !DILocalVariable(name: "entry_point", arg: 1, scope: !16216, file: !15461, line: 78, type: !102)
!16221 = !DILocation(line: 0, scope: !16216)
!16222 = !DILocation(line: 80, column: 21, scope: !16216)
!16223 = !DILocation(line: 80, column: 2, scope: !16216)
!16224 = distinct !DISubprogram(name: "z_waitq_init", scope: !15721, file: !15721, line: 47, type: !16225, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16227)
!16225 = !DISubroutineType(types: !16226)
!16226 = !{null, !3025}
!16227 = !{!16228}
!16228 = !DILocalVariable(name: "w", arg: 1, scope: !16224, file: !15721, line: 47, type: !3025)
!16229 = !DILocation(line: 0, scope: !16224)
!16230 = !DILocation(line: 49, column: 21, scope: !16224)
!16231 = !DILocation(line: 49, column: 2, scope: !16224)
!16232 = !DILocation(line: 50, column: 1, scope: !16224)
!16233 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2990, file: !2990, line: 791, type: !16234, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16237)
!16234 = !DISubroutineType(types: !16235)
!16235 = !{null, !16236, !103, !108, !32}
!16236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 32)
!16237 = !{!16238, !16239, !16240, !16241}
!16238 = !DILocalVariable(name: "thread_base", arg: 1, scope: !16233, file: !2990, line: 791, type: !16236)
!16239 = !DILocalVariable(name: "priority", arg: 2, scope: !16233, file: !2990, line: 791, type: !103)
!16240 = !DILocalVariable(name: "initial_state", arg: 3, scope: !16233, file: !2990, line: 792, type: !108)
!16241 = !DILocalVariable(name: "options", arg: 4, scope: !16233, file: !2990, line: 792, type: !32)
!16242 = !DILocation(line: 0, scope: !16233)
!16243 = !DILocation(line: 795, column: 15, scope: !16233)
!16244 = !DILocation(line: 795, column: 25, scope: !16233)
!16245 = !DILocation(line: 796, column: 30, scope: !16233)
!16246 = !DILocation(line: 796, column: 15, scope: !16233)
!16247 = !DILocation(line: 796, column: 28, scope: !16233)
!16248 = !DILocation(line: 797, column: 30, scope: !16233)
!16249 = !DILocation(line: 797, column: 15, scope: !16233)
!16250 = !DILocation(line: 797, column: 28, scope: !16233)
!16251 = !DILocation(line: 799, column: 22, scope: !16233)
!16252 = !DILocation(line: 799, column: 15, scope: !16233)
!16253 = !DILocation(line: 799, column: 20, scope: !16233)
!16254 = !DILocation(line: 801, column: 15, scope: !16233)
!16255 = !DILocation(line: 801, column: 28, scope: !16233)
!16256 = !DILocation(line: 814, column: 2, scope: !16233)
!16257 = !DILocation(line: 815, column: 1, scope: !16233)
!16258 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2990, file: !2990, line: 449, type: !16259, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16261)
!16259 = !DISubroutineType(types: !16260)
!16260 = !{!157, !2994, !16175, !153}
!16261 = !{!16262, !16263, !16264, !16265, !16266, !16267, !16268, !16269}
!16262 = !DILocalVariable(name: "new_thread", arg: 1, scope: !16258, file: !2990, line: 449, type: !2994)
!16263 = !DILocalVariable(name: "stack", arg: 2, scope: !16258, file: !2990, line: 450, type: !16175)
!16264 = !DILocalVariable(name: "stack_size", arg: 3, scope: !16258, file: !2990, line: 450, type: !153)
!16265 = !DILocalVariable(name: "stack_obj_size", scope: !16258, file: !2990, line: 452, type: !153)
!16266 = !DILocalVariable(name: "stack_buf_size", scope: !16258, file: !2990, line: 452, type: !153)
!16267 = !DILocalVariable(name: "stack_ptr", scope: !16258, file: !2990, line: 453, type: !157)
!16268 = !DILocalVariable(name: "stack_buf_start", scope: !16258, file: !2990, line: 453, type: !157)
!16269 = !DILocalVariable(name: "delta", scope: !16258, file: !2990, line: 454, type: !153)
!16270 = !DILocation(line: 0, scope: !16258)
!16271 = !DILocation(line: 465, column: 20, scope: !16272)
!16272 = distinct !DILexicalBlock(scope: !16258, file: !2990, line: 463, column: 2)
!16273 = !DILocation(line: 466, column: 21, scope: !16272)
!16274 = !DILocation(line: 473, column: 28, scope: !16258)
!16275 = !DILocation(line: 514, column: 33, scope: !16258)
!16276 = !DILocation(line: 514, column: 25, scope: !16258)
!16277 = !DILocation(line: 514, column: 31, scope: !16258)
!16278 = !DILocation(line: 515, column: 25, scope: !16258)
!16279 = !DILocation(line: 515, column: 30, scope: !16258)
!16280 = !DILocation(line: 516, column: 25, scope: !16258)
!16281 = !DILocation(line: 516, column: 31, scope: !16258)
!16282 = !DILocation(line: 520, column: 2, scope: !16258)
!16283 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !315, file: !315, line: 331, type: !16284, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16286)
!16284 = !DISubroutineType(types: !16285)
!16285 = !{!157, !16175}
!16286 = !{!16287}
!16287 = !DILocalVariable(name: "sym", arg: 1, scope: !16283, file: !315, line: 331, type: !16175)
!16288 = !DILocation(line: 0, scope: !16283)
!16289 = !DILocation(line: 333, column: 21, scope: !16283)
!16290 = !DILocation(line: 333, column: 2, scope: !16283)
!16291 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !16292, file: !16292, line: 40, type: !16293, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16295)
!16292 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16293 = !DISubroutineType(types: !16294)
!16294 = !{null, !16236}
!16295 = !{!16296}
!16296 = !DILocalVariable(name: "thread_base", arg: 1, scope: !16291, file: !16292, line: 40, type: !16236)
!16297 = !DILocation(line: 0, scope: !16291)
!16298 = !DILocation(line: 42, column: 31, scope: !16291)
!16299 = !DILocation(line: 42, column: 2, scope: !16291)
!16300 = !DILocation(line: 43, column: 1, scope: !16291)
!16301 = distinct !DISubprogram(name: "z_init_timeout", scope: !16292, file: !16292, line: 25, type: !3051, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16302)
!16302 = !{!16303}
!16303 = !DILocalVariable(name: "to", arg: 1, scope: !16301, file: !16292, line: 25, type: !3053)
!16304 = !DILocation(line: 0, scope: !16301)
!16305 = !DILocation(line: 27, column: 22, scope: !16301)
!16306 = !DILocation(line: 27, column: 2, scope: !16301)
!16307 = !DILocation(line: 28, column: 1, scope: !16301)
!16308 = distinct !DISubprogram(name: "sys_dnode_init", scope: !133, file: !133, line: 211, type: !16309, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16311)
!16309 = !DISubroutineType(types: !16310)
!16310 = !{null, !3099}
!16311 = !{!16312}
!16312 = !DILocalVariable(name: "node", arg: 1, scope: !16308, file: !133, line: 211, type: !3099)
!16313 = !DILocation(line: 0, scope: !16308)
!16314 = !DILocation(line: 213, column: 8, scope: !16308)
!16315 = !DILocation(line: 213, column: 13, scope: !16308)
!16316 = !DILocation(line: 214, column: 8, scope: !16308)
!16317 = !DILocation(line: 214, column: 13, scope: !16308)
!16318 = !DILocation(line: 215, column: 1, scope: !16308)
!16319 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !16320, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16323)
!16320 = !DISubroutineType(types: !16321)
!16321 = !{null, !16322}
!16322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 32)
!16323 = !{!16324}
!16324 = !DILocalVariable(name: "list", arg: 1, scope: !16319, file: !133, line: 197, type: !16322)
!16325 = !DILocation(line: 0, scope: !16319)
!16326 = !DILocation(line: 199, column: 8, scope: !16319)
!16327 = !DILocation(line: 199, column: 13, scope: !16319)
!16328 = !DILocation(line: 200, column: 8, scope: !16319)
!16329 = !DILocation(line: 200, column: 13, scope: !16319)
!16330 = !DILocation(line: 201, column: 1, scope: !16319)
!16331 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2990, file: !2990, line: 641, type: !16332, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16338)
!16332 = !DISubroutineType(types: !16333)
!16333 = !{!2993, !2994, !16175, !153, !320, !102, !102, !102, !103, !108, !16334}
!16334 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16335)
!16335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16336)
!16336 = !{!16337}
!16337 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16335, file: !105, line: 66, baseType: !104, size: 64)
!16338 = !{!16339, !16340, !16341, !16342, !16343, !16344, !16345, !16346, !16347, !16348}
!16339 = !DILocalVariable(name: "new_thread", arg: 1, scope: !16331, file: !2990, line: 641, type: !2994)
!16340 = !DILocalVariable(name: "stack", arg: 2, scope: !16331, file: !2990, line: 642, type: !16175)
!16341 = !DILocalVariable(name: "stack_size", arg: 3, scope: !16331, file: !2990, line: 643, type: !153)
!16342 = !DILocalVariable(name: "entry", arg: 4, scope: !16331, file: !2990, line: 643, type: !320)
!16343 = !DILocalVariable(name: "p1", arg: 5, scope: !16331, file: !2990, line: 644, type: !102)
!16344 = !DILocalVariable(name: "p2", arg: 6, scope: !16331, file: !2990, line: 644, type: !102)
!16345 = !DILocalVariable(name: "p3", arg: 7, scope: !16331, file: !2990, line: 644, type: !102)
!16346 = !DILocalVariable(name: "prio", arg: 8, scope: !16331, file: !2990, line: 645, type: !103)
!16347 = !DILocalVariable(name: "options", arg: 9, scope: !16331, file: !2990, line: 645, type: !108)
!16348 = !DILocalVariable(name: "delay", arg: 10, scope: !16331, file: !2990, line: 645, type: !16334)
!16349 = !DILocation(line: 0, scope: !16331)
!16350 = !DILocation(line: 1031, column: 3, scope: !16062, inlinedAt: !16351)
!16351 = distinct !DILocation(line: 48, column: 10, scope: !16066, inlinedAt: !16352)
!16352 = distinct !DILocation(line: 647, column: 2, scope: !16353)
!16353 = distinct !DILexicalBlock(scope: !16354, file: !2990, line: 647, column: 2)
!16354 = distinct !DILexicalBlock(scope: !16331, file: !2990, line: 647, column: 2)
!16355 = !DILocation(line: 0, scope: !16062, inlinedAt: !16351)
!16356 = !DILocation(line: 48, column: 9, scope: !16066, inlinedAt: !16352)
!16357 = !DILocation(line: 647, column: 2, scope: !16354)
!16358 = !DILocation(line: 647, column: 2, scope: !16359)
!16359 = distinct !DILexicalBlock(scope: !16353, file: !2990, line: 647, column: 2)
!16360 = !DILocation(line: 649, column: 2, scope: !16331)
!16361 = !DILocation(line: 652, column: 7, scope: !16362)
!16362 = distinct !DILexicalBlock(scope: !16331, file: !2990, line: 652, column: 6)
!16363 = !DILocation(line: 652, column: 6, scope: !16331)
!16364 = !DILocation(line: 653, column: 3, scope: !16365)
!16365 = distinct !DILexicalBlock(scope: !16362, file: !2990, line: 652, column: 39)
!16366 = !DILocation(line: 654, column: 2, scope: !16365)
!16367 = !DILocation(line: 656, column: 2, scope: !16331)
!16368 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2990, file: !2990, line: 401, type: !16369, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16371)
!16369 = !DISubroutineType(types: !16370)
!16370 = !{null, !2994, !16334}
!16371 = !{!16372, !16373}
!16372 = !DILocalVariable(name: "thread", arg: 1, scope: !16368, file: !2990, line: 401, type: !2994)
!16373 = !DILocalVariable(name: "delay", arg: 2, scope: !16368, file: !2990, line: 401, type: !16334)
!16374 = !DILocation(line: 0, scope: !16368)
!16375 = !DILocation(line: 404, column: 6, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16368, file: !2990, line: 404, column: 6)
!16377 = !DILocation(line: 404, column: 6, scope: !16368)
!16378 = !DILocation(line: 405, column: 3, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16376, file: !2990, line: 404, column: 38)
!16380 = !DILocation(line: 406, column: 2, scope: !16379)
!16381 = !DILocation(line: 407, column: 3, scope: !16382)
!16382 = distinct !DILexicalBlock(scope: !16376, file: !2990, line: 406, column: 9)
!16383 = !DILocation(line: 413, column: 1, scope: !16368)
!16384 = distinct !DISubprogram(name: "k_thread_start", scope: !4394, file: !4394, line: 205, type: !16385, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16387)
!16385 = !DISubroutineType(types: !16386)
!16386 = !{null, !2993}
!16387 = !{!16388}
!16388 = !DILocalVariable(name: "thread", arg: 1, scope: !16384, file: !4394, line: 205, type: !2993)
!16389 = !DILocation(line: 0, scope: !16384)
!16390 = !DILocation(line: 214, column: 2, scope: !16391)
!16391 = distinct !DILexicalBlock(scope: !16384, file: !4394, line: 214, column: 2)
!16392 = !{i64 2152249662}
!16393 = !DILocation(line: 215, column: 2, scope: !16384)
!16394 = !DILocation(line: 216, column: 1, scope: !16384)
!16395 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !16292, file: !16292, line: 47, type: !16369, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16396)
!16396 = !{!16397, !16398}
!16397 = !DILocalVariable(name: "thread", arg: 1, scope: !16395, file: !16292, line: 47, type: !2994)
!16398 = !DILocalVariable(name: "ticks", arg: 2, scope: !16395, file: !16292, line: 47, type: !16334)
!16399 = !DILocation(line: 0, scope: !16395)
!16400 = !DILocation(line: 49, column: 30, scope: !16395)
!16401 = !DILocation(line: 49, column: 2, scope: !16395)
!16402 = !DILocation(line: 50, column: 1, scope: !16395)
!16403 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2990, file: !2990, line: 748, type: !333, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16404)
!16404 = !{!16405, !16422}
!16405 = !DILocalVariable(name: "thread_data", scope: !16406, file: !2990, line: 750, type: !16407)
!16406 = distinct !DILexicalBlock(scope: !16403, file: !2990, line: 750, column: 2)
!16407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16408, size: 32)
!16408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !124, line: 620, size: 384, elements: !16409)
!16409 = !{!16410, !16411, !16412, !16413, !16414, !16415, !16416, !16417, !16418, !16419, !16420, !16421}
!16410 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !16408, file: !124, line: 621, baseType: !2994, size: 32)
!16411 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !16408, file: !124, line: 622, baseType: !16175, size: 32, offset: 32)
!16412 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !16408, file: !124, line: 623, baseType: !32, size: 32, offset: 64)
!16413 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !16408, file: !124, line: 624, baseType: !320, size: 32, offset: 96)
!16414 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !16408, file: !124, line: 625, baseType: !102, size: 32, offset: 128)
!16415 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !16408, file: !124, line: 626, baseType: !102, size: 32, offset: 160)
!16416 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !16408, file: !124, line: 627, baseType: !102, size: 32, offset: 192)
!16417 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !16408, file: !124, line: 628, baseType: !103, size: 32, offset: 224)
!16418 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !16408, file: !124, line: 629, baseType: !108, size: 32, offset: 256)
!16419 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !16408, file: !124, line: 630, baseType: !330, size: 32, offset: 288)
!16420 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !16408, file: !124, line: 631, baseType: !332, size: 32, offset: 320)
!16421 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !16408, file: !124, line: 632, baseType: !336, size: 32, offset: 352)
!16422 = !DILocalVariable(name: "thread_data", scope: !16423, file: !2990, line: 781, type: !16407)
!16423 = distinct !DILexicalBlock(scope: !16403, file: !2990, line: 781, column: 2)
!16424 = !DILocation(line: 0, scope: !16406)
!16425 = !DILocation(line: 750, column: 2, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16427, file: !2990, line: 750, column: 2)
!16427 = distinct !DILexicalBlock(scope: !16428, file: !2990, line: 750, column: 2)
!16428 = distinct !DILexicalBlock(scope: !16406, file: !2990, line: 750, column: 2)
!16429 = !DILocation(line: 750, column: 2, scope: !16430)
!16430 = distinct !DILexicalBlock(scope: !16431, file: !2990, line: 750, column: 2)
!16431 = distinct !DILexicalBlock(scope: !16426, file: !2990, line: 750, column: 2)
!16432 = !DILocation(line: 750, column: 2, scope: !16427)
!16433 = !DILocation(line: 750, column: 2, scope: !16406)
!16434 = !DILocation(line: 780, column: 2, scope: !16403)
!16435 = !DILocation(line: 0, scope: !16423)
!16436 = !DILocation(line: 781, column: 2, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16438, file: !2990, line: 781, column: 2)
!16438 = distinct !DILexicalBlock(scope: !16439, file: !2990, line: 781, column: 2)
!16439 = distinct !DILexicalBlock(scope: !16423, file: !2990, line: 781, column: 2)
!16440 = !DILocation(line: 752, column: 17, scope: !16441)
!16441 = distinct !DILexicalBlock(scope: !16428, file: !2990, line: 750, column: 38)
!16442 = !DILocation(line: 753, column: 17, scope: !16441)
!16443 = !DILocation(line: 754, column: 17, scope: !16441)
!16444 = !DILocation(line: 755, column: 17, scope: !16441)
!16445 = !DILocation(line: 756, column: 17, scope: !16441)
!16446 = !DILocation(line: 757, column: 17, scope: !16441)
!16447 = !DILocation(line: 758, column: 17, scope: !16441)
!16448 = !DILocation(line: 759, column: 17, scope: !16441)
!16449 = !DILocation(line: 760, column: 17, scope: !16441)
!16450 = !DILocation(line: 751, column: 3, scope: !16441)
!16451 = !DILocation(line: 763, column: 16, scope: !16441)
!16452 = !DILocation(line: 763, column: 29, scope: !16441)
!16453 = !DILocation(line: 763, column: 39, scope: !16441)
!16454 = !DILocation(line: 750, column: 2, scope: !16428)
!16455 = !DILocation(line: 750, column: 2, scope: !16431)
!16456 = distinct !{!16456, !16433, !16457}
!16457 = !DILocation(line: 764, column: 2, scope: !16406)
!16458 = !DILocation(line: 781, column: 2, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16460, file: !2990, line: 781, column: 2)
!16460 = distinct !DILexicalBlock(scope: !16437, file: !2990, line: 781, column: 2)
!16461 = !DILocation(line: 781, column: 2, scope: !16438)
!16462 = !DILocation(line: 781, column: 2, scope: !16423)
!16463 = !DILocation(line: 787, column: 2, scope: !16403)
!16464 = !DILocation(line: 788, column: 1, scope: !16403)
!16465 = !DILocation(line: 782, column: 20, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16467, file: !2990, line: 782, column: 7)
!16467 = distinct !DILexicalBlock(scope: !16439, file: !2990, line: 781, column: 38)
!16468 = !DILocation(line: 782, column: 31, scope: !16466)
!16469 = !DILocation(line: 782, column: 7, scope: !16467)
!16470 = !DILocation(line: 783, column: 37, scope: !16471)
!16471 = distinct !DILexicalBlock(scope: !16466, file: !2990, line: 782, column: 51)
!16472 = !DILocation(line: 784, column: 10, scope: !16471)
!16473 = !DILocation(line: 783, column: 4, scope: !16471)
!16474 = !DILocation(line: 785, column: 3, scope: !16471)
!16475 = !DILocation(line: 781, column: 2, scope: !16439)
!16476 = !DILocation(line: 781, column: 2, scope: !16460)
!16477 = distinct !{!16477, !16462, !16478}
!16478 = !DILocation(line: 786, column: 2, scope: !16423)
!16479 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !4352, file: !4352, line: 403, type: !4353, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16480)
!16480 = !{!16481}
!16481 = !DILocalVariable(name: "t", arg: 1, scope: !16479, file: !4352, line: 403, type: !109)
!16482 = !DILocation(line: 0, scope: !16479)
!16483 = !DILocalVariable(name: "t", arg: 1, scope: !16484, file: !4352, line: 102, type: !109)
!16484 = distinct !DISubprogram(name: "z_tmcvt", scope: !4352, file: !4352, line: 102, type: !4360, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16485)
!16485 = !{!16483, !16486, !16487, !16488, !16489, !16490, !16491, !16492, !16493, !16494, !16495}
!16486 = !DILocalVariable(name: "from_hz", arg: 2, scope: !16484, file: !4352, line: 102, type: !108)
!16487 = !DILocalVariable(name: "to_hz", arg: 3, scope: !16484, file: !4352, line: 103, type: !108)
!16488 = !DILocalVariable(name: "const_hz", arg: 4, scope: !16484, file: !4352, line: 103, type: !119)
!16489 = !DILocalVariable(name: "result32", arg: 5, scope: !16484, file: !4352, line: 104, type: !119)
!16490 = !DILocalVariable(name: "round_up", arg: 6, scope: !16484, file: !4352, line: 104, type: !119)
!16491 = !DILocalVariable(name: "round_off", arg: 7, scope: !16484, file: !4352, line: 105, type: !119)
!16492 = !DILocalVariable(name: "mul_ratio", scope: !16484, file: !4352, line: 107, type: !119)
!16493 = !DILocalVariable(name: "div_ratio", scope: !16484, file: !4352, line: 109, type: !119)
!16494 = !DILocalVariable(name: "off", scope: !16484, file: !4352, line: 116, type: !109)
!16495 = !DILocalVariable(name: "rdivisor", scope: !16496, file: !4352, line: 119, type: !108)
!16496 = distinct !DILexicalBlock(scope: !16497, file: !4352, line: 118, column: 18)
!16497 = distinct !DILexicalBlock(scope: !16484, file: !4352, line: 118, column: 6)
!16498 = !DILocation(line: 0, scope: !16484, inlinedAt: !16499)
!16499 = distinct !DILocation(line: 406, column: 9, scope: !16479)
!16500 = !DILocation(line: 145, column: 13, scope: !16501, inlinedAt: !16499)
!16501 = distinct !DILexicalBlock(scope: !16502, file: !4352, line: 144, column: 10)
!16502 = distinct !DILexicalBlock(scope: !16503, file: !4352, line: 142, column: 7)
!16503 = distinct !DILexicalBlock(scope: !16504, file: !4352, line: 141, column: 24)
!16504 = distinct !DILexicalBlock(scope: !16505, file: !4352, line: 141, column: 13)
!16505 = distinct !DILexicalBlock(scope: !16484, file: !4352, line: 134, column: 6)
!16506 = !DILocation(line: 406, column: 2, scope: !16479)
!16507 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2990, file: !2990, line: 817, type: !5501, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16508)
!16508 = !{!16509, !16510, !16511, !16512}
!16509 = !DILocalVariable(name: "entry", arg: 1, scope: !16507, file: !2990, line: 817, type: !320)
!16510 = !DILocalVariable(name: "p1", arg: 2, scope: !16507, file: !2990, line: 818, type: !102)
!16511 = !DILocalVariable(name: "p2", arg: 3, scope: !16507, file: !2990, line: 818, type: !102)
!16512 = !DILocalVariable(name: "p3", arg: 4, scope: !16507, file: !2990, line: 818, type: !102)
!16513 = !DILocation(line: 0, scope: !16507)
!16514 = !DILocation(line: 822, column: 2, scope: !16507)
!16515 = !DILocation(line: 822, column: 17, scope: !16507)
!16516 = !DILocation(line: 822, column: 30, scope: !16507)
!16517 = !DILocation(line: 823, column: 2, scope: !16507)
!16518 = !DILocation(line: 845, column: 2, scope: !16507)
!16519 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2990, file: !2990, line: 853, type: !16520, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16523)
!16520 = !DISubroutineType(types: !16521)
!16521 = !{!119, !16522}
!16522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 32)
!16523 = !{!16524, !16525}
!16524 = !DILocalVariable(name: "l", arg: 1, scope: !16519, file: !2990, line: 853, type: !16522)
!16525 = !DILocalVariable(name: "thread_cpu", scope: !16519, file: !2990, line: 855, type: !22)
!16526 = !DILocation(line: 0, scope: !16519)
!16527 = !DILocation(line: 855, column: 28, scope: !16519)
!16528 = !DILocation(line: 857, column: 17, scope: !16529)
!16529 = distinct !DILexicalBlock(scope: !16519, file: !2990, line: 857, column: 6)
!16530 = !DILocation(line: 857, column: 6, scope: !16519)
!16531 = !DILocation(line: 858, column: 19, scope: !16532)
!16532 = distinct !DILexicalBlock(scope: !16533, file: !2990, line: 858, column: 7)
!16533 = distinct !DILexicalBlock(scope: !16529, file: !2990, line: 857, column: 24)
!16534 = !DILocation(line: 858, column: 42, scope: !16532)
!16535 = !DILocation(line: 858, column: 28, scope: !16532)
!16536 = !DILocation(line: 858, column: 25, scope: !16532)
!16537 = !DILocation(line: 858, column: 7, scope: !16533)
!16538 = !DILocation(line: 862, column: 2, scope: !16519)
!16539 = !DILocation(line: 863, column: 1, scope: !16519)
!16540 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2990, file: !2990, line: 865, type: !16520, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16541)
!16541 = !{!16542}
!16542 = !DILocalVariable(name: "l", arg: 1, scope: !16540, file: !2990, line: 865, type: !16522)
!16543 = !DILocation(line: 0, scope: !16540)
!16544 = !DILocation(line: 867, column: 9, scope: !16545)
!16545 = distinct !DILexicalBlock(scope: !16540, file: !2990, line: 867, column: 6)
!16546 = !DILocation(line: 867, column: 38, scope: !16545)
!16547 = !DILocation(line: 867, column: 24, scope: !16545)
!16548 = !DILocation(line: 867, column: 54, scope: !16545)
!16549 = !DILocation(line: 867, column: 43, scope: !16545)
!16550 = !DILocation(line: 867, column: 41, scope: !16545)
!16551 = !DILocation(line: 867, column: 20, scope: !16545)
!16552 = !DILocation(line: 867, column: 6, scope: !16540)
!16553 = !DILocation(line: 870, column: 16, scope: !16540)
!16554 = !DILocation(line: 871, column: 2, scope: !16540)
!16555 = !DILocation(line: 872, column: 1, scope: !16540)
!16556 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2990, file: !2990, line: 874, type: !16557, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16559)
!16557 = !DISubroutineType(types: !16558)
!16558 = !{null, !16522}
!16559 = !{!16560}
!16560 = !DILocalVariable(name: "l", arg: 1, scope: !16556, file: !2990, line: 874, type: !16522)
!16561 = !DILocation(line: 0, scope: !16556)
!16562 = !DILocation(line: 876, column: 32, scope: !16556)
!16563 = !DILocation(line: 876, column: 18, scope: !16556)
!16564 = !DILocation(line: 876, column: 48, scope: !16556)
!16565 = !DILocation(line: 876, column: 37, scope: !16556)
!16566 = !DILocation(line: 876, column: 35, scope: !16556)
!16567 = !DILocation(line: 876, column: 5, scope: !16556)
!16568 = !DILocation(line: 876, column: 16, scope: !16556)
!16569 = !DILocation(line: 877, column: 1, scope: !16556)
!16570 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2990, file: !2990, line: 888, type: !16571, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16573)
!16571 = !DISubroutineType(types: !16572)
!16572 = !{!103, !2994}
!16573 = !{!16574}
!16574 = !DILocalVariable(name: "thread", arg: 1, scope: !16570, file: !2990, line: 888, type: !2994)
!16575 = !DILocation(line: 0, scope: !16570)
!16576 = !DILocation(line: 893, column: 2, scope: !16570)
!16577 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2990, file: !2990, line: 897, type: !16578, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16580)
!16578 = !DISubroutineType(types: !16579)
!16579 = !{!103, !2994, !32}
!16580 = !{!16581, !16582}
!16581 = !DILocalVariable(name: "thread", arg: 1, scope: !16577, file: !2990, line: 897, type: !2994)
!16582 = !DILocalVariable(name: "options", arg: 2, scope: !16577, file: !2990, line: 897, type: !32)
!16583 = !DILocation(line: 0, scope: !16577)
!16584 = !DILocation(line: 902, column: 2, scope: !16577)
!16585 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2990, file: !2990, line: 1072, type: !16586, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16591)
!16586 = !DISubroutineType(types: !16587)
!16587 = !{!103, !2993, !16588}
!16588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16589, size: 32)
!16589 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !195, line: 234, baseType: !16590)
!16590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !195, line: 192, elements: !2894)
!16591 = !{!16592, !16593}
!16592 = !DILocalVariable(name: "thread", arg: 1, scope: !16585, file: !2990, line: 1072, type: !2993)
!16593 = !DILocalVariable(name: "stats", arg: 2, scope: !16585, file: !2990, line: 1073, type: !16588)
!16594 = !DILocation(line: 0, scope: !16585)
!16595 = !DILocation(line: 1075, column: 14, scope: !16596)
!16596 = distinct !DILexicalBlock(scope: !16585, file: !2990, line: 1075, column: 6)
!16597 = !DILocation(line: 1075, column: 23, scope: !16596)
!16598 = !DILocation(line: 1086, column: 1, scope: !16585)
!16599 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2990, file: !2990, line: 1088, type: !16600, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3096, retainedNodes: !16602)
!16600 = !DISubroutineType(types: !16601)
!16601 = !{!103, !16588}
!16602 = !{!16603}
!16603 = !DILocalVariable(name: "stats", arg: 1, scope: !16599, file: !2990, line: 1088, type: !16588)
!16604 = !DILocation(line: 0, scope: !16599)
!16605 = !DILocation(line: 1094, column: 12, scope: !16606)
!16606 = distinct !DILexicalBlock(scope: !16599, file: !2990, line: 1094, column: 6)
!16607 = !DILocation(line: 1120, column: 1, scope: !16599)
!16608 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !16609, file: !16609, line: 20, type: !333, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3958, retainedNodes: !2894)
!16609 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16610 = !DILocation(line: 30, column: 2, scope: !16608)
!16611 = !DILocation(line: 31, column: 1, scope: !16608)
!16612 = distinct !DISubprogram(name: "idle", scope: !16609, file: !16609, line: 33, type: !322, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3958, retainedNodes: !16613)
!16613 = !{!16614, !16615, !16616}
!16614 = !DILocalVariable(name: "unused1", arg: 1, scope: !16612, file: !16609, line: 33, type: !102)
!16615 = !DILocalVariable(name: "unused2", arg: 2, scope: !16612, file: !16609, line: 33, type: !102)
!16616 = !DILocalVariable(name: "unused3", arg: 3, scope: !16612, file: !16609, line: 33, type: !102)
!16617 = !DILocation(line: 0, scope: !16612)
!16618 = !DILocation(line: 39, column: 2, scope: !16619)
!16619 = distinct !DILexicalBlock(scope: !16620, file: !16609, line: 39, column: 2)
!16620 = distinct !DILexicalBlock(scope: !16612, file: !16609, line: 39, column: 2)
!16621 = !DILocation(line: 39, column: 2, scope: !16620)
!16622 = !DILocation(line: 39, column: 2, scope: !16623)
!16623 = distinct !DILexicalBlock(scope: !16619, file: !16609, line: 39, column: 2)
!16624 = !DILocation(line: 55, column: 2, scope: !16625, inlinedAt: !16629)
!16625 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7872, file: !7872, line: 42, type: !7873, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3958, retainedNodes: !16626)
!16626 = !{!16627, !16628}
!16627 = !DILocalVariable(name: "key", scope: !16625, file: !7872, line: 44, type: !32)
!16628 = !DILocalVariable(name: "tmp", scope: !16625, file: !7872, line: 53, type: !32)
!16629 = distinct !DILocation(line: 62, column: 10, scope: !16630)
!16630 = distinct !DILexicalBlock(scope: !16612, file: !16609, line: 41, column: 15)
!16631 = !{i64 1652532}
!16632 = !DILocation(line: 0, scope: !16625, inlinedAt: !16629)
!16633 = !DILocation(line: 86, column: 3, scope: !16630)
!16634 = !DILocation(line: 41, column: 2, scope: !16612)
!16635 = distinct !{!16635, !16634, !16636}
!16636 = !DILocation(line: 105, column: 2, scope: !16612)
!16637 = distinct !DISubprogram(name: "k_cpu_idle", scope: !124, file: !124, line: 5627, type: !333, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3958, retainedNodes: !2894)
!16638 = !DILocation(line: 5629, column: 2, scope: !16637)
!16639 = !DILocation(line: 5630, column: 1, scope: !16637)
!16640 = !DISubprogram(name: "arch_cpu_idle", scope: !313, file: !313, line: 167, type: !333, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2894)
!16641 = distinct !DISubprogram(name: "k_msgq_init", scope: !16642, file: !16642, line: 35, type: !16643, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16658)
!16642 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16643 = !DISubroutineType(types: !16644)
!16644 = !{null, !16645, !157, !153, !108}
!16645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16646, size: 32)
!16646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !16647)
!16647 = !{!16648, !16649, !16650, !16651, !16652, !16653, !16654, !16655, !16656, !16657}
!16648 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16646, file: !124, line: 4206, baseType: !3996, size: 64)
!16649 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16646, file: !124, line: 4208, baseType: !4058, size: 32, offset: 64)
!16650 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !16646, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!16651 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !16646, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!16652 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !16646, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!16653 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !16646, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!16654 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !16646, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!16655 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !16646, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!16656 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !16646, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!16657 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !16646, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!16658 = !{!16659, !16660, !16661, !16662}
!16659 = !DILocalVariable(name: "msgq", arg: 1, scope: !16641, file: !16642, line: 35, type: !16645)
!16660 = !DILocalVariable(name: "buffer", arg: 2, scope: !16641, file: !16642, line: 35, type: !157)
!16661 = !DILocalVariable(name: "msg_size", arg: 3, scope: !16641, file: !16642, line: 35, type: !153)
!16662 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !16641, file: !16642, line: 36, type: !108)
!16663 = !DILocation(line: 0, scope: !16641)
!16664 = !DILocation(line: 38, column: 8, scope: !16641)
!16665 = !DILocation(line: 38, column: 17, scope: !16641)
!16666 = !DILocation(line: 39, column: 8, scope: !16641)
!16667 = !DILocation(line: 39, column: 17, scope: !16641)
!16668 = !DILocation(line: 40, column: 8, scope: !16641)
!16669 = !DILocation(line: 40, column: 21, scope: !16641)
!16670 = !DILocation(line: 41, column: 40, scope: !16641)
!16671 = !DILocation(line: 41, column: 28, scope: !16641)
!16672 = !DILocation(line: 41, column: 8, scope: !16641)
!16673 = !DILocation(line: 41, column: 19, scope: !16641)
!16674 = !DILocation(line: 42, column: 8, scope: !16641)
!16675 = !DILocation(line: 42, column: 17, scope: !16641)
!16676 = !DILocation(line: 43, column: 8, scope: !16641)
!16677 = !DILocation(line: 43, column: 18, scope: !16641)
!16678 = !DILocation(line: 44, column: 8, scope: !16641)
!16679 = !DILocation(line: 44, column: 18, scope: !16641)
!16680 = !DILocation(line: 45, column: 8, scope: !16641)
!16681 = !DILocation(line: 45, column: 14, scope: !16641)
!16682 = !DILocation(line: 46, column: 22, scope: !16641)
!16683 = !DILocation(line: 46, column: 2, scope: !16641)
!16684 = !DILocation(line: 47, column: 15, scope: !16641)
!16685 = !DILocation(line: 55, column: 1, scope: !16641)
!16686 = distinct !DISubprogram(name: "z_waitq_init", scope: !15721, file: !15721, line: 47, type: !16687, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16689)
!16687 = !DISubroutineType(types: !16688)
!16688 = !{null, !3995}
!16689 = !{!16690}
!16690 = !DILocalVariable(name: "w", arg: 1, scope: !16686, file: !15721, line: 47, type: !3995)
!16691 = !DILocation(line: 0, scope: !16686)
!16692 = !DILocation(line: 49, column: 21, scope: !16686)
!16693 = !DILocation(line: 49, column: 2, scope: !16686)
!16694 = !DILocation(line: 50, column: 1, scope: !16686)
!16695 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !16696, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16699)
!16696 = !DISubroutineType(types: !16697)
!16697 = !{null, !16698}
!16698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 32)
!16699 = !{!16700}
!16700 = !DILocalVariable(name: "list", arg: 1, scope: !16695, file: !133, line: 197, type: !16698)
!16701 = !DILocation(line: 0, scope: !16695)
!16702 = !DILocation(line: 199, column: 8, scope: !16695)
!16703 = !DILocation(line: 199, column: 13, scope: !16695)
!16704 = !DILocation(line: 200, column: 8, scope: !16695)
!16705 = !DILocation(line: 200, column: 13, scope: !16695)
!16706 = !DILocation(line: 201, column: 1, scope: !16695)
!16707 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !16642, file: !16642, line: 57, type: !16708, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16710)
!16708 = !DISubroutineType(types: !16709)
!16709 = !{!103, !16645, !153, !108}
!16710 = !{!16711, !16712, !16713, !16714, !16715, !16716}
!16711 = !DILocalVariable(name: "msgq", arg: 1, scope: !16707, file: !16642, line: 57, type: !16645)
!16712 = !DILocalVariable(name: "msg_size", arg: 2, scope: !16707, file: !16642, line: 57, type: !153)
!16713 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !16707, file: !16642, line: 58, type: !108)
!16714 = !DILocalVariable(name: "buffer", scope: !16707, file: !16642, line: 60, type: !102)
!16715 = !DILocalVariable(name: "ret", scope: !16707, file: !16642, line: 61, type: !103)
!16716 = !DILocalVariable(name: "total_size", scope: !16707, file: !16642, line: 62, type: !153)
!16717 = !DILocation(line: 0, scope: !16707)
!16718 = !DILocation(line: 62, column: 2, scope: !16707)
!16719 = !DILocation(line: 66, column: 6, scope: !16720)
!16720 = distinct !DILexicalBlock(scope: !16707, file: !16642, line: 66, column: 6)
!16721 = !DILocation(line: 66, column: 6, scope: !16707)
!16722 = !DILocation(line: 69, column: 28, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16720, file: !16642, line: 68, column: 9)
!16724 = !DILocation(line: 69, column: 12, scope: !16723)
!16725 = !DILocation(line: 70, column: 14, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16723, file: !16642, line: 70, column: 7)
!16727 = !DILocation(line: 70, column: 7, scope: !16723)
!16728 = !DILocation(line: 71, column: 4, scope: !16729)
!16729 = distinct !DILexicalBlock(scope: !16726, file: !16642, line: 70, column: 23)
!16730 = !DILocation(line: 72, column: 10, scope: !16729)
!16731 = !DILocation(line: 72, column: 16, scope: !16729)
!16732 = !DILocation(line: 74, column: 3, scope: !16729)
!16733 = !DILocation(line: 0, scope: !16720)
!16734 = !DILocation(line: 82, column: 1, scope: !16707)
!16735 = !DILocation(line: 81, column: 2, scope: !16707)
!16736 = distinct !DISubprogram(name: "size_mul_overflow", scope: !16737, file: !16737, line: 105, type: !16738, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16740)
!16737 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16738 = !DISubroutineType(types: !16739)
!16739 = !{!119, !153, !153, !3477}
!16740 = !{!16741, !16742, !16743}
!16741 = !DILocalVariable(name: "a", arg: 1, scope: !16736, file: !16737, line: 105, type: !153)
!16742 = !DILocalVariable(name: "b", arg: 2, scope: !16736, file: !16737, line: 105, type: !153)
!16743 = !DILocalVariable(name: "result", arg: 3, scope: !16736, file: !16737, line: 105, type: !3477)
!16744 = !DILocation(line: 0, scope: !16736)
!16745 = !DILocation(line: 107, column: 9, scope: !16736)
!16746 = !DILocation(line: 107, column: 2, scope: !16736)
!16747 = distinct !DISubprogram(name: "z_thread_malloc", scope: !15952, file: !15952, line: 102, type: !16748, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16749)
!16748 = !DISubroutineType(types: !3939)
!16749 = !{!16750}
!16750 = !DILocalVariable(name: "size", arg: 1, scope: !16747, file: !15952, line: 102, type: !153)
!16751 = !DILocation(line: 0, scope: !16747)
!16752 = !DILocation(line: 104, column: 9, scope: !16747)
!16753 = !DILocation(line: 104, column: 2, scope: !16747)
!16754 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !15952, file: !15952, line: 87, type: !16755, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2894)
!16755 = !DISubroutineType(types: !16756)
!16756 = !{!102, !153, !153}
!16757 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !16642, file: !16642, line: 95, type: !16758, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16760)
!16758 = !DISubroutineType(types: !16759)
!16759 = !{!103, !16645}
!16760 = !{!16761}
!16761 = !DILocalVariable(name: "msgq", arg: 1, scope: !16757, file: !16642, line: 95, type: !16645)
!16762 = !DILocation(line: 0, scope: !16757)
!16763 = !DILocation(line: 99, column: 2, scope: !16764)
!16764 = distinct !DILexicalBlock(scope: !16757, file: !16642, line: 99, column: 2)
!16765 = !DILocation(line: 99, column: 2, scope: !16757)
!16766 = !DILocation(line: 105, column: 13, scope: !16767)
!16767 = distinct !DILexicalBlock(scope: !16757, file: !16642, line: 105, column: 6)
!16768 = !DILocation(line: 105, column: 19, scope: !16767)
!16769 = !DILocation(line: 105, column: 40, scope: !16767)
!16770 = !DILocation(line: 105, column: 6, scope: !16757)
!16771 = !DILocation(line: 106, column: 16, scope: !16772)
!16772 = distinct !DILexicalBlock(scope: !16767, file: !16642, line: 105, column: 47)
!16773 = !DILocation(line: 106, column: 3, scope: !16772)
!16774 = !DILocation(line: 107, column: 15, scope: !16772)
!16775 = !DILocation(line: 108, column: 2, scope: !16772)
!16776 = !DILocation(line: 113, column: 1, scope: !16757)
!16777 = distinct !DISubprogram(name: "z_waitq_head", scope: !15721, file: !15721, line: 52, type: !16778, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16780)
!16778 = !DISubroutineType(types: !16779)
!16779 = !{!3978, !3995}
!16780 = !{!16781}
!16781 = !DILocalVariable(name: "w", arg: 1, scope: !16777, file: !15721, line: 52, type: !3995)
!16782 = !DILocation(line: 0, scope: !16777)
!16783 = !DILocation(line: 54, column: 52, scope: !16777)
!16784 = !DILocation(line: 54, column: 28, scope: !16777)
!16785 = !DILocation(line: 54, column: 9, scope: !16777)
!16786 = !DILocation(line: 54, column: 2, scope: !16777)
!16787 = !DISubprogram(name: "k_free", scope: !124, file: !124, line: 5272, type: !8147, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2894)
!16788 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !133, file: !133, line: 294, type: !16789, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16791)
!16789 = !DISubroutineType(types: !16790)
!16790 = !{!3963, !16698}
!16791 = !{!16792}
!16792 = !DILocalVariable(name: "list", arg: 1, scope: !16788, file: !133, line: 294, type: !16698)
!16793 = !DILocation(line: 0, scope: !16788)
!16794 = !DILocation(line: 296, column: 9, scope: !16788)
!16795 = !DILocation(line: 296, column: 49, scope: !16788)
!16796 = !DILocation(line: 296, column: 2, scope: !16788)
!16797 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !133, file: !133, line: 266, type: !16798, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16800)
!16798 = !DISubroutineType(types: !16799)
!16799 = !{!119, !16698}
!16800 = !{!16801}
!16801 = !DILocalVariable(name: "list", arg: 1, scope: !16797, file: !133, line: 266, type: !16698)
!16802 = !DILocation(line: 0, scope: !16797)
!16803 = !DILocation(line: 268, column: 15, scope: !16797)
!16804 = !DILocation(line: 268, column: 20, scope: !16797)
!16805 = !DILocation(line: 268, column: 2, scope: !16797)
!16806 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !16642, file: !16642, line: 116, type: !16807, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16813)
!16807 = !DISubroutineType(types: !16808)
!16808 = !{!103, !16645, !13, !16809}
!16809 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16810)
!16810 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16811)
!16811 = !{!16812}
!16812 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16810, file: !105, line: 66, baseType: !104, size: 64)
!16813 = !{!16814, !16815, !16816, !16817, !16818, !16823}
!16814 = !DILocalVariable(name: "msgq", arg: 1, scope: !16806, file: !16642, line: 116, type: !16645)
!16815 = !DILocalVariable(name: "data", arg: 2, scope: !16806, file: !16642, line: 116, type: !13)
!16816 = !DILocalVariable(name: "timeout", arg: 3, scope: !16806, file: !16642, line: 116, type: !16809)
!16817 = !DILocalVariable(name: "pending_thread", scope: !16806, file: !16642, line: 120, type: !3978)
!16818 = !DILocalVariable(name: "key", scope: !16806, file: !16642, line: 121, type: !16819)
!16819 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !16820)
!16820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !16821)
!16821 = !{!16822}
!16822 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16820, file: !149, line: 33, baseType: !103, size: 32)
!16823 = !DILocalVariable(name: "result", scope: !16806, file: !16642, line: 122, type: !103)
!16824 = !DILocation(line: 0, scope: !16806)
!16825 = !DILocation(line: 1031, column: 3, scope: !16826, inlinedAt: !16829)
!16826 = distinct !DISubprogram(name: "__get_IPSR", scope: !8210, file: !8210, line: 1027, type: !9213, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16827)
!16827 = !{!16828}
!16828 = !DILocalVariable(name: "result", scope: !16826, file: !8210, line: 1029, type: !108)
!16829 = distinct !DILocation(line: 48, column: 10, scope: !16830, inlinedAt: !16831)
!16830 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9219, file: !9219, line: 46, type: !9220, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !2894)
!16831 = distinct !DILocation(line: 118, column: 2, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !16833, file: !16642, line: 118, column: 2)
!16833 = distinct !DILexicalBlock(scope: !16806, file: !16642, line: 118, column: 2)
!16834 = !{i64 2452604}
!16835 = !DILocation(line: 0, scope: !16826, inlinedAt: !16829)
!16836 = !DILocation(line: 48, column: 9, scope: !16830, inlinedAt: !16831)
!16837 = !DILocation(line: 118, column: 2, scope: !16832)
!16838 = !DILocation(line: 118, column: 2, scope: !16839)
!16839 = distinct !DILexicalBlock(scope: !16832, file: !16642, line: 118, column: 2)
!16840 = !DILocation(line: 124, column: 27, scope: !16806)
!16841 = !DILocalVariable(name: "l", arg: 1, scope: !16842, file: !149, line: 136, type: !16845)
!16842 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !16843, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16846)
!16843 = !DISubroutineType(types: !16844)
!16844 = !{!16819, !16845}
!16845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4058, size: 32)
!16846 = !{!16841, !16847}
!16847 = !DILocalVariable(name: "k", scope: !16842, file: !149, line: 139, type: !16819)
!16848 = !DILocation(line: 0, scope: !16842, inlinedAt: !16849)
!16849 = distinct !DILocation(line: 124, column: 8, scope: !16806)
!16850 = !DILocation(line: 55, column: 2, scope: !16851, inlinedAt: !16855)
!16851 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7872, file: !7872, line: 42, type: !7873, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16852)
!16852 = !{!16853, !16854}
!16853 = !DILocalVariable(name: "key", scope: !16851, file: !7872, line: 44, type: !32)
!16854 = !DILocalVariable(name: "tmp", scope: !16851, file: !7872, line: 53, type: !32)
!16855 = distinct !DILocation(line: 145, column: 10, scope: !16842, inlinedAt: !16849)
!16856 = !{i64 1658669}
!16857 = !DILocation(line: 0, scope: !16851, inlinedAt: !16855)
!16858 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !16849)
!16859 = distinct !DILexicalBlock(scope: !16860, file: !149, line: 148, column: 2)
!16860 = distinct !DILexicalBlock(scope: !16842, file: !149, line: 148, column: 2)
!16861 = !DILocation(line: 148, column: 2, scope: !16860, inlinedAt: !16849)
!16862 = !DILocation(line: 148, column: 2, scope: !16863, inlinedAt: !16849)
!16863 = distinct !DILexicalBlock(scope: !16859, file: !149, line: 148, column: 2)
!16864 = !DILocation(line: 160, column: 2, scope: !16842, inlinedAt: !16849)
!16865 = !DILocation(line: 128, column: 12, scope: !16866)
!16866 = distinct !DILexicalBlock(scope: !16806, file: !16642, line: 128, column: 6)
!16867 = !DILocation(line: 128, column: 30, scope: !16866)
!16868 = !DILocation(line: 128, column: 22, scope: !16866)
!16869 = !DILocation(line: 128, column: 6, scope: !16806)
!16870 = !DILocation(line: 130, column: 49, scope: !16871)
!16871 = distinct !DILexicalBlock(scope: !16866, file: !16642, line: 128, column: 40)
!16872 = !DILocation(line: 130, column: 20, scope: !16871)
!16873 = !DILocation(line: 131, column: 22, scope: !16874)
!16874 = distinct !DILexicalBlock(scope: !16871, file: !16642, line: 131, column: 7)
!16875 = !DILocation(line: 131, column: 7, scope: !16871)
!16876 = !DILocation(line: 135, column: 38, scope: !16877)
!16877 = distinct !DILexicalBlock(scope: !16874, file: !16642, line: 131, column: 31)
!16878 = !DILocation(line: 136, column: 17, scope: !16877)
!16879 = !DILocation(line: 135, column: 10, scope: !16877)
!16880 = !DILocalVariable(name: "thread", arg: 1, scope: !16881, file: !15481, line: 65, type: !3978)
!16881 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !15481, file: !15481, line: 65, type: !16882, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16884)
!16882 = !DISubroutineType(types: !16883)
!16883 = !{null, !3978, !32}
!16884 = !{!16880, !16885}
!16885 = !DILocalVariable(name: "value", arg: 2, scope: !16881, file: !15481, line: 65, type: !32)
!16886 = !DILocation(line: 0, scope: !16881, inlinedAt: !16887)
!16887 = distinct !DILocation(line: 138, column: 4, scope: !16877)
!16888 = !DILocation(line: 67, column: 15, scope: !16881, inlinedAt: !16887)
!16889 = !DILocation(line: 67, column: 33, scope: !16881, inlinedAt: !16887)
!16890 = !DILocation(line: 139, column: 4, scope: !16877)
!16891 = !DILocation(line: 140, column: 4, scope: !16877)
!16892 = !DILocation(line: 141, column: 4, scope: !16877)
!16893 = !DILocation(line: 144, column: 23, scope: !16894)
!16894 = distinct !DILexicalBlock(scope: !16874, file: !16642, line: 142, column: 10)
!16895 = !DILocation(line: 144, column: 46, scope: !16894)
!16896 = !DILocation(line: 144, column: 10, scope: !16894)
!16897 = !DILocation(line: 145, column: 29, scope: !16894)
!16898 = !DILocation(line: 145, column: 20, scope: !16894)
!16899 = !DILocation(line: 146, column: 33, scope: !16900)
!16900 = distinct !DILexicalBlock(scope: !16894, file: !16642, line: 146, column: 8)
!16901 = !DILocation(line: 146, column: 24, scope: !16900)
!16902 = !DILocation(line: 146, column: 8, scope: !16894)
!16903 = !DILocation(line: 147, column: 29, scope: !16904)
!16904 = distinct !DILexicalBlock(scope: !16900, file: !16642, line: 146, column: 45)
!16905 = !DILocation(line: 147, column: 21, scope: !16904)
!16906 = !DILocation(line: 148, column: 4, scope: !16904)
!16907 = !DILocation(line: 149, column: 19, scope: !16894)
!16908 = !DILocation(line: 155, column: 2, scope: !16871)
!16909 = !DILocation(line: 155, column: 13, scope: !16866)
!16910 = !DILocation(line: 162, column: 3, scope: !16911)
!16911 = distinct !DILexicalBlock(scope: !16912, file: !16642, line: 158, column: 9)
!16912 = distinct !DILexicalBlock(scope: !16866, file: !16642, line: 155, column: 13)
!16913 = !DILocation(line: 162, column: 18, scope: !16911)
!16914 = !DILocation(line: 162, column: 28, scope: !16911)
!16915 = !DILocation(line: 164, column: 49, scope: !16911)
!16916 = !DILocation(line: 164, column: 12, scope: !16911)
!16917 = !DILocation(line: 166, column: 3, scope: !16911)
!16918 = !DILocation(line: 0, scope: !16866)
!16919 = !DILocalVariable(name: "key", arg: 2, scope: !16920, file: !149, line: 190, type: !16819)
!16920 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !16921, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16923)
!16921 = !DISubroutineType(types: !16922)
!16922 = !{null, !16845, !16819}
!16923 = !{!16924, !16919}
!16924 = !DILocalVariable(name: "l", arg: 1, scope: !16920, file: !149, line: 189, type: !16845)
!16925 = !DILocation(line: 0, scope: !16920, inlinedAt: !16926)
!16926 = distinct !DILocation(line: 171, column: 2, scope: !16806)
!16927 = !DILocation(line: 194, column: 2, scope: !16928, inlinedAt: !16926)
!16928 = distinct !DILexicalBlock(scope: !16929, file: !149, line: 194, column: 2)
!16929 = distinct !DILexicalBlock(scope: !16920, file: !149, line: 194, column: 2)
!16930 = !DILocation(line: 194, column: 2, scope: !16929, inlinedAt: !16926)
!16931 = !DILocation(line: 194, column: 2, scope: !16932, inlinedAt: !16926)
!16932 = distinct !DILexicalBlock(scope: !16928, file: !149, line: 194, column: 2)
!16933 = !DILocalVariable(name: "key", arg: 1, scope: !16934, file: !7872, line: 84, type: !32)
!16934 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7872, file: !7872, line: 84, type: !7883, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16935)
!16935 = !{!16933}
!16936 = !DILocation(line: 0, scope: !16934, inlinedAt: !16937)
!16937 = distinct !DILocation(line: 215, column: 2, scope: !16920, inlinedAt: !16926)
!16938 = !DILocation(line: 95, column: 2, scope: !16934, inlinedAt: !16937)
!16939 = !{i64 1659486}
!16940 = !DILocation(line: 173, column: 2, scope: !16806)
!16941 = !DILocation(line: 174, column: 1, scope: !16806)
!16942 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !16642, file: !16642, line: 188, type: !16943, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16951)
!16943 = !DISubroutineType(types: !16944)
!16944 = !{null, !16645, !16945}
!16945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16946, size: 32)
!16946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !124, line: 4259, size: 96, elements: !16947)
!16947 = !{!16948, !16949, !16950}
!16948 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !16946, file: !124, line: 4261, baseType: !153, size: 32)
!16949 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !16946, file: !124, line: 4263, baseType: !108, size: 32, offset: 32)
!16950 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !16946, file: !124, line: 4265, baseType: !108, size: 32, offset: 64)
!16951 = !{!16952, !16953}
!16952 = !DILocalVariable(name: "msgq", arg: 1, scope: !16942, file: !16642, line: 188, type: !16645)
!16953 = !DILocalVariable(name: "attrs", arg: 2, scope: !16942, file: !16642, line: 188, type: !16945)
!16954 = !DILocation(line: 0, scope: !16942)
!16955 = !DILocation(line: 190, column: 26, scope: !16942)
!16956 = !DILocation(line: 190, column: 9, scope: !16942)
!16957 = !DILocation(line: 190, column: 18, scope: !16942)
!16958 = !DILocation(line: 191, column: 26, scope: !16942)
!16959 = !DILocation(line: 191, column: 9, scope: !16942)
!16960 = !DILocation(line: 191, column: 18, scope: !16942)
!16961 = !DILocation(line: 192, column: 27, scope: !16942)
!16962 = !DILocation(line: 192, column: 9, scope: !16942)
!16963 = !DILocation(line: 192, column: 19, scope: !16942)
!16964 = !DILocation(line: 193, column: 1, scope: !16942)
!16965 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !16642, file: !16642, line: 206, type: !16966, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !16968)
!16966 = !DISubroutineType(types: !16967)
!16967 = !{!103, !16645, !102, !16809}
!16968 = !{!16969, !16970, !16971, !16972, !16973, !16974}
!16969 = !DILocalVariable(name: "msgq", arg: 1, scope: !16965, file: !16642, line: 206, type: !16645)
!16970 = !DILocalVariable(name: "data", arg: 2, scope: !16965, file: !16642, line: 206, type: !102)
!16971 = !DILocalVariable(name: "timeout", arg: 3, scope: !16965, file: !16642, line: 206, type: !16809)
!16972 = !DILocalVariable(name: "key", scope: !16965, file: !16642, line: 210, type: !16819)
!16973 = !DILocalVariable(name: "pending_thread", scope: !16965, file: !16642, line: 211, type: !3978)
!16974 = !DILocalVariable(name: "result", scope: !16965, file: !16642, line: 212, type: !103)
!16975 = !DILocation(line: 0, scope: !16965)
!16976 = !DILocation(line: 1031, column: 3, scope: !16826, inlinedAt: !16977)
!16977 = distinct !DILocation(line: 48, column: 10, scope: !16830, inlinedAt: !16978)
!16978 = distinct !DILocation(line: 208, column: 2, scope: !16979)
!16979 = distinct !DILexicalBlock(scope: !16980, file: !16642, line: 208, column: 2)
!16980 = distinct !DILexicalBlock(scope: !16965, file: !16642, line: 208, column: 2)
!16981 = !DILocation(line: 0, scope: !16826, inlinedAt: !16977)
!16982 = !DILocation(line: 48, column: 9, scope: !16830, inlinedAt: !16978)
!16983 = !DILocation(line: 208, column: 2, scope: !16979)
!16984 = !DILocation(line: 208, column: 2, scope: !16985)
!16985 = distinct !DILexicalBlock(scope: !16979, file: !16642, line: 208, column: 2)
!16986 = !DILocation(line: 214, column: 27, scope: !16965)
!16987 = !DILocation(line: 0, scope: !16842, inlinedAt: !16988)
!16988 = distinct !DILocation(line: 214, column: 8, scope: !16965)
!16989 = !DILocation(line: 55, column: 2, scope: !16851, inlinedAt: !16990)
!16990 = distinct !DILocation(line: 145, column: 10, scope: !16842, inlinedAt: !16988)
!16991 = !DILocation(line: 0, scope: !16851, inlinedAt: !16990)
!16992 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !16988)
!16993 = !DILocation(line: 148, column: 2, scope: !16860, inlinedAt: !16988)
!16994 = !DILocation(line: 148, column: 2, scope: !16863, inlinedAt: !16988)
!16995 = !DILocation(line: 160, column: 2, scope: !16842, inlinedAt: !16988)
!16996 = !DILocation(line: 218, column: 12, scope: !16997)
!16997 = distinct !DILexicalBlock(scope: !16965, file: !16642, line: 218, column: 6)
!16998 = !DILocation(line: 218, column: 22, scope: !16997)
!16999 = !DILocation(line: 218, column: 6, scope: !16965)
!17000 = !DILocation(line: 220, column: 28, scope: !17001)
!17001 = distinct !DILexicalBlock(scope: !16997, file: !16642, line: 218, column: 28)
!17002 = !DILocation(line: 220, column: 44, scope: !17001)
!17003 = !DILocation(line: 220, column: 9, scope: !17001)
!17004 = !DILocation(line: 221, column: 27, scope: !17001)
!17005 = !DILocation(line: 221, column: 18, scope: !17001)
!17006 = !DILocation(line: 222, column: 31, scope: !17007)
!17007 = distinct !DILexicalBlock(scope: !17001, file: !16642, line: 222, column: 7)
!17008 = !DILocation(line: 222, column: 22, scope: !17007)
!17009 = !DILocation(line: 222, column: 7, scope: !17001)
!17010 = !DILocation(line: 223, column: 27, scope: !17011)
!17011 = distinct !DILexicalBlock(scope: !17007, file: !16642, line: 222, column: 43)
!17012 = !DILocation(line: 223, column: 19, scope: !17011)
!17013 = !DILocation(line: 224, column: 3, scope: !17011)
!17014 = !DILocation(line: 225, column: 18, scope: !17001)
!17015 = !DILocation(line: 228, column: 49, scope: !17001)
!17016 = !DILocation(line: 228, column: 20, scope: !17001)
!17017 = !DILocation(line: 229, column: 22, scope: !17018)
!17018 = distinct !DILexicalBlock(scope: !17001, file: !16642, line: 229, column: 7)
!17019 = !DILocation(line: 229, column: 7, scope: !17001)
!17020 = !DILocation(line: 233, column: 23, scope: !17021)
!17021 = distinct !DILexicalBlock(scope: !17018, file: !16642, line: 229, column: 31)
!17022 = !DILocation(line: 233, column: 55, scope: !17021)
!17023 = !DILocation(line: 234, column: 17, scope: !17021)
!17024 = !DILocation(line: 233, column: 10, scope: !17021)
!17025 = !DILocation(line: 235, column: 29, scope: !17021)
!17026 = !DILocation(line: 235, column: 20, scope: !17021)
!17027 = !DILocation(line: 236, column: 33, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !17021, file: !16642, line: 236, column: 8)
!17029 = !DILocation(line: 236, column: 24, scope: !17028)
!17030 = !DILocation(line: 236, column: 8, scope: !17021)
!17031 = !DILocation(line: 237, column: 29, scope: !17032)
!17032 = distinct !DILexicalBlock(scope: !17028, file: !16642, line: 236, column: 45)
!17033 = !DILocation(line: 237, column: 21, scope: !17032)
!17034 = !DILocation(line: 238, column: 4, scope: !17032)
!17035 = !DILocation(line: 239, column: 19, scope: !17021)
!17036 = !DILocation(line: 0, scope: !16881, inlinedAt: !17037)
!17037 = distinct !DILocation(line: 242, column: 4, scope: !17021)
!17038 = !DILocation(line: 67, column: 15, scope: !16881, inlinedAt: !17037)
!17039 = !DILocation(line: 67, column: 33, scope: !16881, inlinedAt: !17037)
!17040 = !DILocation(line: 243, column: 4, scope: !17021)
!17041 = !DILocation(line: 244, column: 4, scope: !17021)
!17042 = !DILocation(line: 248, column: 4, scope: !17021)
!17043 = !DILocation(line: 251, column: 13, scope: !16997)
!17044 = !DILocation(line: 258, column: 3, scope: !17045)
!17045 = distinct !DILexicalBlock(scope: !17046, file: !16642, line: 254, column: 9)
!17046 = distinct !DILexicalBlock(scope: !16997, file: !16642, line: 251, column: 13)
!17047 = !DILocation(line: 258, column: 18, scope: !17045)
!17048 = !DILocation(line: 258, column: 28, scope: !17045)
!17049 = !DILocation(line: 260, column: 49, scope: !17045)
!17050 = !DILocation(line: 260, column: 12, scope: !17045)
!17051 = !DILocation(line: 262, column: 3, scope: !17045)
!17052 = !DILocation(line: 0, scope: !16997)
!17053 = !DILocation(line: 0, scope: !16920, inlinedAt: !17054)
!17054 = distinct !DILocation(line: 267, column: 2, scope: !16965)
!17055 = !DILocation(line: 194, column: 2, scope: !16928, inlinedAt: !17054)
!17056 = !DILocation(line: 194, column: 2, scope: !16929, inlinedAt: !17054)
!17057 = !DILocation(line: 194, column: 2, scope: !16932, inlinedAt: !17054)
!17058 = !DILocation(line: 0, scope: !16934, inlinedAt: !17059)
!17059 = distinct !DILocation(line: 215, column: 2, scope: !16920, inlinedAt: !17054)
!17060 = !DILocation(line: 95, column: 2, scope: !16934, inlinedAt: !17059)
!17061 = !DILocation(line: 269, column: 2, scope: !16965)
!17062 = !DILocation(line: 270, column: 1, scope: !16965)
!17063 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !16642, file: !16642, line: 284, type: !17064, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !17066)
!17064 = !DISubroutineType(types: !17065)
!17065 = !{!103, !16645, !102}
!17066 = !{!17067, !17068, !17069, !17070}
!17067 = !DILocalVariable(name: "msgq", arg: 1, scope: !17063, file: !16642, line: 284, type: !16645)
!17068 = !DILocalVariable(name: "data", arg: 2, scope: !17063, file: !16642, line: 284, type: !102)
!17069 = !DILocalVariable(name: "key", scope: !17063, file: !16642, line: 286, type: !16819)
!17070 = !DILocalVariable(name: "result", scope: !17063, file: !16642, line: 287, type: !103)
!17071 = !DILocation(line: 0, scope: !17063)
!17072 = !DILocation(line: 289, column: 27, scope: !17063)
!17073 = !DILocation(line: 0, scope: !16842, inlinedAt: !17074)
!17074 = distinct !DILocation(line: 289, column: 8, scope: !17063)
!17075 = !DILocation(line: 55, column: 2, scope: !16851, inlinedAt: !17076)
!17076 = distinct !DILocation(line: 145, column: 10, scope: !16842, inlinedAt: !17074)
!17077 = !DILocation(line: 0, scope: !16851, inlinedAt: !17076)
!17078 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17074)
!17079 = !DILocation(line: 148, column: 2, scope: !16860, inlinedAt: !17074)
!17080 = !DILocation(line: 148, column: 2, scope: !16863, inlinedAt: !17074)
!17081 = !DILocation(line: 160, column: 2, scope: !16842, inlinedAt: !17074)
!17082 = !DILocation(line: 291, column: 12, scope: !17083)
!17083 = distinct !DILexicalBlock(scope: !17063, file: !16642, line: 291, column: 6)
!17084 = !DILocation(line: 291, column: 22, scope: !17083)
!17085 = !DILocation(line: 291, column: 6, scope: !17063)
!17086 = !DILocation(line: 293, column: 28, scope: !17087)
!17087 = distinct !DILexicalBlock(scope: !17083, file: !16642, line: 291, column: 28)
!17088 = !DILocation(line: 293, column: 44, scope: !17087)
!17089 = !DILocation(line: 293, column: 9, scope: !17087)
!17090 = !DILocation(line: 295, column: 2, scope: !17087)
!17091 = !DILocation(line: 0, scope: !17083)
!17092 = !DILocation(line: 0, scope: !16920, inlinedAt: !17093)
!17093 = distinct !DILocation(line: 302, column: 2, scope: !17063)
!17094 = !DILocation(line: 194, column: 2, scope: !16928, inlinedAt: !17093)
!17095 = !DILocation(line: 194, column: 2, scope: !16929, inlinedAt: !17093)
!17096 = !DILocation(line: 194, column: 2, scope: !16932, inlinedAt: !17093)
!17097 = !DILocation(line: 0, scope: !16934, inlinedAt: !17098)
!17098 = distinct !DILocation(line: 215, column: 2, scope: !16920, inlinedAt: !17093)
!17099 = !DILocation(line: 95, column: 2, scope: !16934, inlinedAt: !17098)
!17100 = !DILocation(line: 304, column: 2, scope: !17063)
!17101 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !16642, file: !16642, line: 318, type: !17102, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3960, retainedNodes: !17104)
!17102 = !DISubroutineType(types: !17103)
!17103 = !{null, !16645}
!17104 = !{!17105, !17106, !17107}
!17105 = !DILocalVariable(name: "msgq", arg: 1, scope: !17101, file: !16642, line: 318, type: !16645)
!17106 = !DILocalVariable(name: "key", scope: !17101, file: !16642, line: 320, type: !16819)
!17107 = !DILocalVariable(name: "pending_thread", scope: !17101, file: !16642, line: 321, type: !3978)
!17108 = !DILocation(line: 0, scope: !17101)
!17109 = !DILocation(line: 323, column: 27, scope: !17101)
!17110 = !DILocation(line: 0, scope: !16842, inlinedAt: !17111)
!17111 = distinct !DILocation(line: 323, column: 8, scope: !17101)
!17112 = !DILocation(line: 55, column: 2, scope: !16851, inlinedAt: !17113)
!17113 = distinct !DILocation(line: 145, column: 10, scope: !16842, inlinedAt: !17111)
!17114 = !DILocation(line: 0, scope: !16851, inlinedAt: !17113)
!17115 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17111)
!17116 = !DILocation(line: 148, column: 2, scope: !16860, inlinedAt: !17111)
!17117 = !DILocation(line: 148, column: 2, scope: !16863, inlinedAt: !17111)
!17118 = !DILocation(line: 160, column: 2, scope: !16842, inlinedAt: !17111)
!17119 = !DILocation(line: 328, column: 27, scope: !17101)
!17120 = !DILocation(line: 328, column: 65, scope: !17101)
!17121 = !DILocation(line: 328, column: 2, scope: !17101)
!17122 = !DILocation(line: 0, scope: !16881, inlinedAt: !17123)
!17123 = distinct !DILocation(line: 329, column: 3, scope: !17124)
!17124 = distinct !DILexicalBlock(scope: !17101, file: !16642, line: 328, column: 74)
!17125 = !DILocation(line: 67, column: 15, scope: !16881, inlinedAt: !17123)
!17126 = !DILocation(line: 67, column: 33, scope: !16881, inlinedAt: !17123)
!17127 = !DILocation(line: 330, column: 3, scope: !17124)
!17128 = distinct !{!17128, !17121, !17129}
!17129 = !DILocation(line: 331, column: 2, scope: !17101)
!17130 = !DILocation(line: 333, column: 8, scope: !17101)
!17131 = !DILocation(line: 333, column: 18, scope: !17101)
!17132 = !DILocation(line: 334, column: 25, scope: !17101)
!17133 = !DILocation(line: 334, column: 8, scope: !17101)
!17134 = !DILocation(line: 334, column: 17, scope: !17101)
!17135 = !DILocation(line: 336, column: 2, scope: !17101)
!17136 = !DILocation(line: 337, column: 1, scope: !17101)
!17137 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !3223, file: !3223, line: 49, type: !17138, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17147)
!17138 = !DISubroutineType(types: !17139)
!17139 = !{!103, !17140}
!17140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17141, size: 32)
!17141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !17142)
!17142 = !{!17143, !17144, !17145, !17146}
!17143 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17141, file: !124, line: 2722, baseType: !3152, size: 64)
!17144 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !17141, file: !124, line: 2724, baseType: !3134, size: 32, offset: 64)
!17145 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !17141, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!17146 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !17141, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!17147 = !{!17148}
!17148 = !DILocalVariable(name: "mutex", arg: 1, scope: !17137, file: !3223, line: 49, type: !17140)
!17149 = !DILocation(line: 0, scope: !17137)
!17150 = !DILocation(line: 51, column: 9, scope: !17137)
!17151 = !DILocation(line: 51, column: 15, scope: !17137)
!17152 = !DILocation(line: 52, column: 9, scope: !17137)
!17153 = !DILocation(line: 52, column: 20, scope: !17137)
!17154 = !DILocation(line: 54, column: 23, scope: !17137)
!17155 = !DILocation(line: 54, column: 2, scope: !17137)
!17156 = !DILocation(line: 60, column: 2, scope: !17137)
!17157 = distinct !DISubprogram(name: "z_waitq_init", scope: !15721, file: !15721, line: 47, type: !17158, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17160)
!17158 = !DISubroutineType(types: !17159)
!17159 = !{null, !3151}
!17160 = !{!17161}
!17161 = !DILocalVariable(name: "w", arg: 1, scope: !17157, file: !15721, line: 47, type: !3151)
!17162 = !DILocation(line: 0, scope: !17157)
!17163 = !DILocation(line: 49, column: 21, scope: !17157)
!17164 = !DILocation(line: 49, column: 2, scope: !17157)
!17165 = !DILocation(line: 50, column: 1, scope: !17157)
!17166 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !17167, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17170)
!17167 = !DISubroutineType(types: !17168)
!17168 = !{null, !17169}
!17169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 32)
!17170 = !{!17171}
!17171 = !DILocalVariable(name: "list", arg: 1, scope: !17166, file: !133, line: 197, type: !17169)
!17172 = !DILocation(line: 0, scope: !17166)
!17173 = !DILocation(line: 199, column: 8, scope: !17166)
!17174 = !DILocation(line: 199, column: 13, scope: !17166)
!17175 = !DILocation(line: 200, column: 8, scope: !17166)
!17176 = !DILocation(line: 200, column: 13, scope: !17166)
!17177 = !DILocation(line: 201, column: 1, scope: !17166)
!17178 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !3223, file: !3223, line: 95, type: !17179, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17185)
!17179 = !DISubroutineType(types: !17180)
!17180 = !{!103, !17140, !17181}
!17181 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !17182)
!17182 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !17183)
!17183 = !{!17184}
!17184 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17182, file: !105, line: 66, baseType: !104, size: 64)
!17185 = !{!17186, !17187, !17188, !17189, !17194, !17195, !17196}
!17186 = !DILocalVariable(name: "mutex", arg: 1, scope: !17178, file: !3223, line: 95, type: !17140)
!17187 = !DILocalVariable(name: "timeout", arg: 2, scope: !17178, file: !3223, line: 95, type: !17181)
!17188 = !DILocalVariable(name: "new_prio", scope: !17178, file: !3223, line: 97, type: !103)
!17189 = !DILocalVariable(name: "key", scope: !17178, file: !3223, line: 98, type: !17190)
!17190 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !17191)
!17191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !17192)
!17192 = !{!17193}
!17193 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17191, file: !149, line: 33, baseType: !103, size: 32)
!17194 = !DILocalVariable(name: "resched", scope: !17178, file: !3223, line: 99, type: !119)
!17195 = !DILocalVariable(name: "got_mutex", scope: !17178, file: !3223, line: 146, type: !103)
!17196 = !DILocalVariable(name: "waiter", scope: !17197, file: !3223, line: 169, type: !3134)
!17197 = distinct !DILexicalBlock(scope: !17198, file: !3223, line: 168, column: 36)
!17198 = distinct !DILexicalBlock(scope: !17178, file: !3223, line: 168, column: 6)
!17199 = !DILocation(line: 0, scope: !17178)
!17200 = !DILocation(line: 1031, column: 3, scope: !17201, inlinedAt: !17204)
!17201 = distinct !DISubprogram(name: "__get_IPSR", scope: !8210, file: !8210, line: 1027, type: !9213, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17202)
!17202 = !{!17203}
!17203 = !DILocalVariable(name: "result", scope: !17201, file: !8210, line: 1029, type: !108)
!17204 = distinct !DILocation(line: 48, column: 10, scope: !17205, inlinedAt: !17206)
!17205 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9219, file: !9219, line: 46, type: !9220, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !2894)
!17206 = distinct !DILocation(line: 101, column: 2, scope: !17207)
!17207 = distinct !DILexicalBlock(scope: !17208, file: !3223, line: 101, column: 2)
!17208 = distinct !DILexicalBlock(scope: !17178, file: !3223, line: 101, column: 2)
!17209 = !{i64 2450875}
!17210 = !DILocation(line: 0, scope: !17201, inlinedAt: !17204)
!17211 = !DILocation(line: 48, column: 9, scope: !17205, inlinedAt: !17206)
!17212 = !DILocation(line: 101, column: 2, scope: !17208)
!17213 = !DILocation(line: 101, column: 2, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !17207, file: !3223, line: 101, column: 2)
!17215 = !DILocalVariable(name: "l", arg: 1, scope: !17216, file: !149, line: 136, type: !17219)
!17216 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !17217, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17220)
!17217 = !DISubroutineType(types: !17218)
!17218 = !{!17190, !17219}
!17219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 32)
!17220 = !{!17215, !17221}
!17221 = !DILocalVariable(name: "k", scope: !17216, file: !149, line: 139, type: !17190)
!17222 = !DILocation(line: 0, scope: !17216, inlinedAt: !17223)
!17223 = distinct !DILocation(line: 105, column: 8, scope: !17178)
!17224 = !DILocation(line: 55, column: 2, scope: !17225, inlinedAt: !17229)
!17225 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7872, file: !7872, line: 42, type: !7873, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17226)
!17226 = !{!17227, !17228}
!17227 = !DILocalVariable(name: "key", scope: !17225, file: !7872, line: 44, type: !32)
!17228 = !DILocalVariable(name: "tmp", scope: !17225, file: !7872, line: 53, type: !32)
!17229 = distinct !DILocation(line: 145, column: 10, scope: !17216, inlinedAt: !17223)
!17230 = !{i64 1656940}
!17231 = !DILocation(line: 0, scope: !17225, inlinedAt: !17229)
!17232 = !DILocation(line: 148, column: 2, scope: !17233, inlinedAt: !17223)
!17233 = distinct !DILexicalBlock(scope: !17234, file: !149, line: 148, column: 2)
!17234 = distinct !DILexicalBlock(scope: !17216, file: !149, line: 148, column: 2)
!17235 = !DILocation(line: 148, column: 2, scope: !17234, inlinedAt: !17223)
!17236 = !DILocation(line: 148, column: 2, scope: !17237, inlinedAt: !17223)
!17237 = distinct !DILexicalBlock(scope: !17233, file: !149, line: 148, column: 2)
!17238 = !DILocation(line: 160, column: 2, scope: !17216, inlinedAt: !17223)
!17239 = !DILocation(line: 107, column: 6, scope: !17240)
!17240 = distinct !DILexicalBlock(scope: !17178, file: !3223, line: 107, column: 6)
!17241 = !DILocation(line: 107, column: 6, scope: !17178)
!17242 = !{!"branch_weights", i32 2000, i32 1}
!17243 = !DILocation(line: 110, column: 6, scope: !17244)
!17244 = distinct !DILexicalBlock(scope: !17240, file: !3223, line: 107, column: 71)
!17245 = !DILocation(line: 110, column: 21, scope: !17244)
!17246 = !DILocation(line: 109, column: 28, scope: !17244)
!17247 = !DILocation(line: 111, column: 13, scope: !17244)
!17248 = !DILocation(line: 114, column: 18, scope: !17244)
!17249 = !DILocation(line: 109, column: 10, scope: !17244)
!17250 = !DILocation(line: 109, column: 26, scope: !17244)
!17251 = !DILocation(line: 113, column: 20, scope: !17244)
!17252 = !DILocation(line: 114, column: 10, scope: !17244)
!17253 = !DILocation(line: 114, column: 16, scope: !17244)
!17254 = !DILocalVariable(name: "key", arg: 2, scope: !17255, file: !149, line: 190, type: !17190)
!17255 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !17256, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17258)
!17256 = !DISubroutineType(types: !17257)
!17257 = !{null, !17219, !17190}
!17258 = !{!17259, !17254}
!17259 = !DILocalVariable(name: "l", arg: 1, scope: !17255, file: !149, line: 189, type: !17219)
!17260 = !DILocation(line: 0, scope: !17255, inlinedAt: !17261)
!17261 = distinct !DILocation(line: 120, column: 3, scope: !17244)
!17262 = !DILocation(line: 194, column: 2, scope: !17263, inlinedAt: !17261)
!17263 = distinct !DILexicalBlock(scope: !17264, file: !149, line: 194, column: 2)
!17264 = distinct !DILexicalBlock(scope: !17255, file: !149, line: 194, column: 2)
!17265 = !DILocation(line: 194, column: 2, scope: !17264, inlinedAt: !17261)
!17266 = !DILocation(line: 194, column: 2, scope: !17267, inlinedAt: !17261)
!17267 = distinct !DILexicalBlock(scope: !17263, file: !149, line: 194, column: 2)
!17268 = !DILocalVariable(name: "key", arg: 1, scope: !17269, file: !7872, line: 84, type: !32)
!17269 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7872, file: !7872, line: 84, type: !7883, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17270)
!17270 = !{!17268}
!17271 = !DILocation(line: 0, scope: !17269, inlinedAt: !17272)
!17272 = distinct !DILocation(line: 215, column: 2, scope: !17255, inlinedAt: !17261)
!17273 = !DILocation(line: 95, column: 2, scope: !17269, inlinedAt: !17272)
!17274 = !{i64 1657757}
!17275 = !DILocation(line: 124, column: 3, scope: !17244)
!17276 = !DILocation(line: 127, column: 6, scope: !17277)
!17277 = distinct !DILexicalBlock(scope: !17178, file: !3223, line: 127, column: 6)
!17278 = !DILocation(line: 127, column: 6, scope: !17178)
!17279 = !{!"branch_weights", i32 1, i32 2000}
!17280 = !DILocation(line: 0, scope: !17255, inlinedAt: !17281)
!17281 = distinct !DILocation(line: 128, column: 3, scope: !17282)
!17282 = distinct !DILexicalBlock(scope: !17277, file: !3223, line: 127, column: 50)
!17283 = !DILocation(line: 194, column: 2, scope: !17263, inlinedAt: !17281)
!17284 = !DILocation(line: 194, column: 2, scope: !17264, inlinedAt: !17281)
!17285 = !DILocation(line: 194, column: 2, scope: !17267, inlinedAt: !17281)
!17286 = !DILocation(line: 0, scope: !17269, inlinedAt: !17287)
!17287 = distinct !DILocation(line: 215, column: 2, scope: !17255, inlinedAt: !17281)
!17288 = !DILocation(line: 95, column: 2, scope: !17269, inlinedAt: !17287)
!17289 = !DILocation(line: 132, column: 3, scope: !17282)
!17290 = !DILocation(line: 137, column: 53, scope: !17178)
!17291 = !DILocation(line: 137, column: 38, scope: !17178)
!17292 = !DILocation(line: 138, column: 29, scope: !17178)
!17293 = !DILocation(line: 138, column: 10, scope: !17178)
!17294 = !DILocation(line: 137, column: 13, scope: !17178)
!17295 = !DILocation(line: 142, column: 6, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17178, file: !3223, line: 142, column: 6)
!17297 = !DILocation(line: 142, column: 6, scope: !17178)
!17298 = !DILocation(line: 143, column: 13, scope: !17299)
!17299 = distinct !DILexicalBlock(scope: !17296, file: !3223, line: 142, column: 59)
!17300 = !DILocation(line: 144, column: 2, scope: !17299)
!17301 = !DILocation(line: 146, column: 50, scope: !17178)
!17302 = !DILocation(line: 146, column: 18, scope: !17178)
!17303 = !DILocation(line: 153, column: 16, scope: !17304)
!17304 = distinct !DILexicalBlock(scope: !17178, file: !3223, line: 153, column: 6)
!17305 = !DILocation(line: 153, column: 6, scope: !17178)
!17306 = !DILocation(line: 0, scope: !17216, inlinedAt: !17307)
!17307 = distinct !DILocation(line: 162, column: 8, scope: !17178)
!17308 = !DILocation(line: 55, column: 2, scope: !17225, inlinedAt: !17309)
!17309 = distinct !DILocation(line: 145, column: 10, scope: !17216, inlinedAt: !17307)
!17310 = !DILocation(line: 0, scope: !17225, inlinedAt: !17309)
!17311 = !DILocation(line: 148, column: 2, scope: !17233, inlinedAt: !17307)
!17312 = !DILocation(line: 148, column: 2, scope: !17234, inlinedAt: !17307)
!17313 = !DILocation(line: 148, column: 2, scope: !17237, inlinedAt: !17307)
!17314 = !DILocation(line: 160, column: 2, scope: !17216, inlinedAt: !17307)
!17315 = !DILocation(line: 168, column: 6, scope: !17198)
!17316 = !DILocation(line: 168, column: 6, scope: !17178)
!17317 = !DILocation(line: 169, column: 29, scope: !17197)
!17318 = !DILocation(line: 0, scope: !17197)
!17319 = !DILocation(line: 171, column: 22, scope: !17197)
!17320 = !DILocation(line: 171, column: 14, scope: !17197)
!17321 = !DILocation(line: 172, column: 42, scope: !17197)
!17322 = !DILocation(line: 172, column: 29, scope: !17197)
!17323 = !DILocation(line: 172, column: 55, scope: !17197)
!17324 = !DILocation(line: 172, column: 4, scope: !17197)
!17325 = !DILocation(line: 173, column: 11, scope: !17197)
!17326 = !DILocation(line: 177, column: 13, scope: !17197)
!17327 = !DILocation(line: 177, column: 48, scope: !17197)
!17328 = !DILocation(line: 180, column: 6, scope: !17178)
!17329 = !DILocation(line: 181, column: 3, scope: !17330)
!17330 = distinct !DILexicalBlock(scope: !17331, file: !3223, line: 180, column: 15)
!17331 = distinct !DILexicalBlock(scope: !17178, file: !3223, line: 180, column: 6)
!17332 = !DILocation(line: 182, column: 2, scope: !17330)
!17333 = !DILocation(line: 0, scope: !17255, inlinedAt: !17334)
!17334 = distinct !DILocation(line: 183, column: 3, scope: !17335)
!17335 = distinct !DILexicalBlock(scope: !17331, file: !3223, line: 182, column: 9)
!17336 = !DILocation(line: 194, column: 2, scope: !17263, inlinedAt: !17334)
!17337 = !DILocation(line: 194, column: 2, scope: !17264, inlinedAt: !17334)
!17338 = !DILocation(line: 194, column: 2, scope: !17267, inlinedAt: !17334)
!17339 = !DILocation(line: 0, scope: !17269, inlinedAt: !17340)
!17340 = distinct !DILocation(line: 215, column: 2, scope: !17255, inlinedAt: !17334)
!17341 = !DILocation(line: 95, column: 2, scope: !17269, inlinedAt: !17340)
!17342 = !DILocation(line: 189, column: 1, scope: !17178)
!17343 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !3223, file: !3223, line: 72, type: !17344, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17346)
!17344 = !DISubroutineType(types: !17345)
!17345 = !{!330, !330, !330}
!17346 = !{!17347, !17348, !17349}
!17347 = !DILocalVariable(name: "target", arg: 1, scope: !17343, file: !3223, line: 72, type: !330)
!17348 = !DILocalVariable(name: "limit", arg: 2, scope: !17343, file: !3223, line: 72, type: !330)
!17349 = !DILocalVariable(name: "new_prio", scope: !17343, file: !3223, line: 74, type: !103)
!17350 = !DILocation(line: 0, scope: !17343)
!17351 = !DILocation(line: 74, column: 17, scope: !17343)
!17352 = !DILocation(line: 76, column: 13, scope: !17343)
!17353 = !DILocation(line: 78, column: 2, scope: !17343)
!17354 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !15461, file: !15461, line: 211, type: !17355, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17357)
!17355 = !DISubroutineType(types: !17356)
!17356 = !{!119, !103, !103}
!17357 = !{!17358, !17359}
!17358 = !DILocalVariable(name: "prio", arg: 1, scope: !17354, file: !15461, line: 211, type: !103)
!17359 = !DILocalVariable(name: "test_prio", arg: 2, scope: !17354, file: !15461, line: 211, type: !103)
!17360 = !DILocation(line: 0, scope: !17354)
!17361 = !DILocation(line: 213, column: 9, scope: !17354)
!17362 = !DILocation(line: 213, column: 2, scope: !17354)
!17363 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !3223, file: !3223, line: 81, type: !17364, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17366)
!17364 = !DISubroutineType(types: !17365)
!17365 = !{!119, !17140, !330}
!17366 = !{!17367, !17368}
!17367 = !DILocalVariable(name: "mutex", arg: 1, scope: !17363, file: !3223, line: 81, type: !17140)
!17368 = !DILocalVariable(name: "new_prio", arg: 2, scope: !17363, file: !3223, line: 81, type: !330)
!17369 = !DILocation(line: 0, scope: !17363)
!17370 = !DILocation(line: 83, column: 13, scope: !17371)
!17371 = distinct !DILexicalBlock(scope: !17363, file: !3223, line: 83, column: 6)
!17372 = !DILocation(line: 83, column: 25, scope: !17371)
!17373 = !DILocation(line: 83, column: 6, scope: !17371)
!17374 = !DILocation(line: 83, column: 30, scope: !17371)
!17375 = !DILocation(line: 83, column: 6, scope: !17363)
!17376 = !DILocation(line: 90, column: 10, scope: !17377)
!17377 = distinct !DILexicalBlock(scope: !17371, file: !3223, line: 83, column: 43)
!17378 = !DILocation(line: 90, column: 3, scope: !17377)
!17379 = !DILocation(line: 93, column: 1, scope: !17363)
!17380 = distinct !DISubprogram(name: "z_waitq_head", scope: !15721, file: !15721, line: 52, type: !17381, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17383)
!17381 = !DISubroutineType(types: !17382)
!17382 = !{!3134, !3151}
!17383 = !{!17384}
!17384 = !DILocalVariable(name: "w", arg: 1, scope: !17380, file: !15721, line: 52, type: !3151)
!17385 = !DILocation(line: 0, scope: !17380)
!17386 = !DILocation(line: 54, column: 52, scope: !17380)
!17387 = !DILocation(line: 54, column: 28, scope: !17380)
!17388 = !DILocation(line: 54, column: 9, scope: !17380)
!17389 = !DILocation(line: 54, column: 2, scope: !17380)
!17390 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !133, file: !133, line: 294, type: !17391, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17393)
!17391 = !DISubroutineType(types: !17392)
!17392 = !{!3119, !17169}
!17393 = !{!17394}
!17394 = !DILocalVariable(name: "list", arg: 1, scope: !17390, file: !133, line: 294, type: !17169)
!17395 = !DILocation(line: 0, scope: !17390)
!17396 = !DILocation(line: 296, column: 9, scope: !17390)
!17397 = !DILocation(line: 296, column: 49, scope: !17390)
!17398 = !DILocation(line: 296, column: 2, scope: !17390)
!17399 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !133, file: !133, line: 266, type: !17400, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17402)
!17400 = !DISubroutineType(types: !17401)
!17401 = !{!119, !17169}
!17402 = !{!17403}
!17403 = !DILocalVariable(name: "list", arg: 1, scope: !17399, file: !133, line: 266, type: !17169)
!17404 = !DILocation(line: 0, scope: !17399)
!17405 = !DILocation(line: 268, column: 15, scope: !17399)
!17406 = !DILocation(line: 268, column: 20, scope: !17399)
!17407 = !DILocation(line: 268, column: 2, scope: !17399)
!17408 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !15461, file: !15461, line: 206, type: !17355, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17409)
!17409 = !{!17410, !17411}
!17410 = !DILocalVariable(name: "prio1", arg: 1, scope: !17408, file: !15461, line: 206, type: !103)
!17411 = !DILocalVariable(name: "prio2", arg: 2, scope: !17408, file: !15461, line: 206, type: !103)
!17412 = !DILocation(line: 0, scope: !17408)
!17413 = !DILocation(line: 208, column: 15, scope: !17408)
!17414 = !DILocation(line: 208, column: 2, scope: !17408)
!17415 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !15461, file: !15461, line: 186, type: !800, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17416)
!17416 = !{!17417}
!17417 = !DILocalVariable(name: "prio", arg: 1, scope: !17415, file: !15461, line: 186, type: !103)
!17418 = !DILocation(line: 0, scope: !17415)
!17419 = !DILocation(line: 188, column: 9, scope: !17415)
!17420 = !DILocation(line: 188, column: 2, scope: !17415)
!17421 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !15461, file: !15461, line: 181, type: !17422, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17424)
!17422 = !DISubroutineType(types: !17423)
!17423 = !{!119, !103}
!17424 = !{!17425}
!17425 = !DILocalVariable(name: "prio", arg: 1, scope: !17421, file: !15461, line: 181, type: !103)
!17426 = !DILocation(line: 0, scope: !17421)
!17427 = !DILocation(line: 183, column: 14, scope: !17421)
!17428 = !DILocation(line: 183, column: 2, scope: !17421)
!17429 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !3223, file: !3223, line: 201, type: !17138, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17430)
!17430 = !{!17431, !17432, !17433, !17434}
!17431 = !DILocalVariable(name: "mutex", arg: 1, scope: !17429, file: !3223, line: 201, type: !17140)
!17432 = !DILocalVariable(name: "new_owner", scope: !17429, file: !3223, line: 203, type: !3134)
!17433 = !DILocalVariable(name: "key", scope: !17429, file: !3223, line: 242, type: !17190)
!17434 = !DILabel(scope: !17429, name: "k_mutex_unlock_return", file: !3223, line: 270)
!17435 = !DILocation(line: 0, scope: !17429)
!17436 = !DILocation(line: 1031, column: 3, scope: !17201, inlinedAt: !17437)
!17437 = distinct !DILocation(line: 48, column: 10, scope: !17205, inlinedAt: !17438)
!17438 = distinct !DILocation(line: 205, column: 2, scope: !17439)
!17439 = distinct !DILexicalBlock(scope: !17440, file: !3223, line: 205, column: 2)
!17440 = distinct !DILexicalBlock(scope: !17429, file: !3223, line: 205, column: 2)
!17441 = !DILocation(line: 0, scope: !17201, inlinedAt: !17437)
!17442 = !DILocation(line: 48, column: 9, scope: !17205, inlinedAt: !17438)
!17443 = !DILocation(line: 205, column: 2, scope: !17440)
!17444 = !DILocation(line: 205, column: 2, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17439, file: !3223, line: 205, column: 2)
!17446 = !DILocation(line: 209, column: 2, scope: !17447)
!17447 = distinct !DILexicalBlock(scope: !17429, file: !3223, line: 209, column: 2)
!17448 = !DILocation(line: 209, column: 2, scope: !17429)
!17449 = !DILocation(line: 217, column: 2, scope: !17450)
!17450 = distinct !DILexicalBlock(scope: !17429, file: !3223, line: 217, column: 2)
!17451 = !DILocation(line: 217, column: 2, scope: !17429)
!17452 = !DILocation(line: 229, column: 2, scope: !17453)
!17453 = distinct !DILexicalBlock(scope: !17454, file: !3223, line: 229, column: 2)
!17454 = distinct !DILexicalBlock(scope: !17429, file: !3223, line: 229, column: 2)
!17455 = !DILocation(line: 229, column: 2, scope: !17454)
!17456 = !DILocation(line: 229, column: 2, scope: !17457)
!17457 = distinct !DILexicalBlock(scope: !17453, file: !3223, line: 229, column: 2)
!17458 = !DILocation(line: 238, column: 20, scope: !17459)
!17459 = distinct !DILexicalBlock(scope: !17460, file: !3223, line: 237, column: 30)
!17460 = distinct !DILexicalBlock(scope: !17429, file: !3223, line: 237, column: 6)
!17461 = !DILocation(line: 239, column: 3, scope: !17459)
!17462 = !DILocation(line: 0, scope: !17216, inlinedAt: !17463)
!17463 = distinct !DILocation(line: 242, column: 25, scope: !17429)
!17464 = !DILocation(line: 55, column: 2, scope: !17225, inlinedAt: !17465)
!17465 = distinct !DILocation(line: 145, column: 10, scope: !17216, inlinedAt: !17463)
!17466 = !DILocation(line: 0, scope: !17225, inlinedAt: !17465)
!17467 = !DILocation(line: 148, column: 2, scope: !17233, inlinedAt: !17463)
!17468 = !DILocation(line: 148, column: 2, scope: !17234, inlinedAt: !17463)
!17469 = !DILocation(line: 148, column: 2, scope: !17237, inlinedAt: !17463)
!17470 = !DILocation(line: 160, column: 2, scope: !17216, inlinedAt: !17463)
!17471 = !DILocation(line: 244, column: 34, scope: !17429)
!17472 = !DILocation(line: 244, column: 2, scope: !17429)
!17473 = !DILocation(line: 247, column: 44, scope: !17429)
!17474 = !DILocation(line: 247, column: 14, scope: !17429)
!17475 = !DILocation(line: 249, column: 15, scope: !17429)
!17476 = !DILocation(line: 254, column: 16, scope: !17477)
!17477 = distinct !DILexicalBlock(scope: !17429, file: !3223, line: 254, column: 6)
!17478 = !DILocation(line: 254, column: 6, scope: !17429)
!17479 = !DILocation(line: 260, column: 44, scope: !17480)
!17480 = distinct !DILexicalBlock(scope: !17477, file: !3223, line: 254, column: 25)
!17481 = !DILocation(line: 260, column: 28, scope: !17480)
!17482 = !DILocation(line: 260, column: 26, scope: !17480)
!17483 = !DILocalVariable(name: "thread", arg: 1, scope: !17484, file: !15481, line: 65, type: !3134)
!17484 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !15481, file: !15481, line: 65, type: !17485, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !17487)
!17485 = !DISubroutineType(types: !17486)
!17486 = !{null, !3134, !32}
!17487 = !{!17483, !17488}
!17488 = !DILocalVariable(name: "value", arg: 2, scope: !17484, file: !15481, line: 65, type: !32)
!17489 = !DILocation(line: 0, scope: !17484, inlinedAt: !17490)
!17490 = distinct !DILocation(line: 261, column: 3, scope: !17480)
!17491 = !DILocation(line: 67, column: 15, scope: !17484, inlinedAt: !17490)
!17492 = !DILocation(line: 67, column: 33, scope: !17484, inlinedAt: !17490)
!17493 = !DILocation(line: 262, column: 3, scope: !17480)
!17494 = !DILocation(line: 263, column: 3, scope: !17480)
!17495 = !DILocation(line: 264, column: 2, scope: !17480)
!17496 = !DILocation(line: 265, column: 21, scope: !17497)
!17497 = distinct !DILexicalBlock(scope: !17477, file: !3223, line: 264, column: 9)
!17498 = !DILocation(line: 0, scope: !17255, inlinedAt: !17499)
!17499 = distinct !DILocation(line: 266, column: 3, scope: !17497)
!17500 = !DILocation(line: 194, column: 2, scope: !17263, inlinedAt: !17499)
!17501 = !DILocation(line: 194, column: 2, scope: !17264, inlinedAt: !17499)
!17502 = !DILocation(line: 194, column: 2, scope: !17267, inlinedAt: !17499)
!17503 = !DILocation(line: 0, scope: !17269, inlinedAt: !17504)
!17504 = distinct !DILocation(line: 215, column: 2, scope: !17255, inlinedAt: !17499)
!17505 = !DILocation(line: 95, column: 2, scope: !17269, inlinedAt: !17504)
!17506 = !DILocation(line: 274, column: 1, scope: !17429)
!17507 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !3336, file: !3336, line: 93, type: !17508, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17510)
!17508 = !DISubroutineType(types: !17509)
!17509 = !{!330, !3229, !3229}
!17510 = !{!17511, !17512, !17513, !17514}
!17511 = !DILocalVariable(name: "thread_1", arg: 1, scope: !17507, file: !3336, line: 93, type: !3229)
!17512 = !DILocalVariable(name: "thread_2", arg: 2, scope: !17507, file: !3336, line: 94, type: !3229)
!17513 = !DILocalVariable(name: "b1", scope: !17507, file: !3336, line: 97, type: !330)
!17514 = !DILocalVariable(name: "b2", scope: !17507, file: !3336, line: 98, type: !330)
!17515 = !DILocation(line: 0, scope: !17507)
!17516 = !DILocation(line: 97, column: 30, scope: !17507)
!17517 = !DILocation(line: 98, column: 30, scope: !17507)
!17518 = !DILocation(line: 100, column: 9, scope: !17519)
!17519 = distinct !DILexicalBlock(scope: !17507, file: !3336, line: 100, column: 6)
!17520 = !DILocation(line: 100, column: 6, scope: !17507)
!17521 = !DILocation(line: 125, column: 1, scope: !17507)
!17522 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !3336, file: !3336, line: 428, type: !17523, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17525)
!17523 = !DISubroutineType(types: !17524)
!17524 = !{null, !3229}
!17525 = !{!17526}
!17526 = !DILocalVariable(name: "curr", arg: 1, scope: !17522, file: !3336, line: 428, type: !3229)
!17527 = !DILocation(line: 0, scope: !17522)
!17528 = !DILocation(line: 434, column: 6, scope: !17529)
!17529 = distinct !DILexicalBlock(scope: !17522, file: !3336, line: 434, column: 6)
!17530 = !DILocation(line: 434, column: 23, scope: !17529)
!17531 = !DILocation(line: 434, column: 6, scope: !17522)
!17532 = !DILocation(line: 435, column: 50, scope: !17533)
!17533 = distinct !DILexicalBlock(scope: !17529, file: !3336, line: 434, column: 29)
!17534 = !DILocation(line: 435, column: 48, scope: !17533)
!17535 = !DILocation(line: 435, column: 29, scope: !17533)
!17536 = !DILocation(line: 436, column: 24, scope: !17533)
!17537 = !DILocation(line: 436, column: 3, scope: !17533)
!17538 = !DILocation(line: 437, column: 2, scope: !17533)
!17539 = !DILocation(line: 438, column: 1, scope: !17522)
!17540 = distinct !DISubprogram(name: "slice_time", scope: !3336, file: !3336, line: 407, type: !17541, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17543)
!17541 = !DISubroutineType(types: !17542)
!17542 = !{!103, !3229}
!17543 = !{!17544, !17545}
!17544 = !DILocalVariable(name: "curr", arg: 1, scope: !17540, file: !3336, line: 407, type: !3229)
!17545 = !DILocalVariable(name: "ret", scope: !17540, file: !3336, line: 409, type: !103)
!17546 = !DILocation(line: 0, scope: !17540)
!17547 = !DILocation(line: 409, column: 12, scope: !17540)
!17548 = !DILocation(line: 416, column: 2, scope: !17540)
!17549 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !3336, file: !3336, line: 440, type: !17550, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17552)
!17550 = !DISubroutineType(types: !17551)
!17551 = !{null, !330, !103}
!17552 = !{!17553, !17554, !17555, !17561}
!17553 = !DILocalVariable(name: "slice", arg: 1, scope: !17549, file: !3336, line: 440, type: !330)
!17554 = !DILocalVariable(name: "prio", arg: 2, scope: !17549, file: !3336, line: 440, type: !103)
!17555 = !DILocalVariable(name: "__i", scope: !17556, file: !3336, line: 442, type: !17557)
!17556 = distinct !DILexicalBlock(scope: !17549, file: !3336, line: 442, column: 2)
!17557 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !17558)
!17558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !17559)
!17559 = !{!17560}
!17560 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17558, file: !149, line: 33, baseType: !103, size: 32)
!17561 = !DILocalVariable(name: "__key", scope: !17556, file: !3336, line: 442, type: !17557)
!17562 = !DILocation(line: 0, scope: !17549)
!17563 = !DILocation(line: 0, scope: !17556)
!17564 = !DILocalVariable(name: "l", arg: 1, scope: !17565, file: !149, line: 136, type: !17568)
!17565 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !17566, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17569)
!17566 = !DISubroutineType(types: !17567)
!17567 = !{!17557, !17568}
!17568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 32)
!17569 = !{!17564, !17570}
!17570 = !DILocalVariable(name: "k", scope: !17565, file: !149, line: 139, type: !17557)
!17571 = !DILocation(line: 0, scope: !17565, inlinedAt: !17572)
!17572 = distinct !DILocation(line: 442, column: 2, scope: !17556)
!17573 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !17578)
!17574 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7872, file: !7872, line: 42, type: !7873, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17575)
!17575 = !{!17576, !17577}
!17576 = !DILocalVariable(name: "key", scope: !17574, file: !7872, line: 44, type: !32)
!17577 = !DILocalVariable(name: "tmp", scope: !17574, file: !7872, line: 53, type: !32)
!17578 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !17572)
!17579 = !{i64 1696503}
!17580 = !DILocation(line: 0, scope: !17574, inlinedAt: !17578)
!17581 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !17572)
!17582 = distinct !DILexicalBlock(scope: !17583, file: !149, line: 148, column: 2)
!17583 = distinct !DILexicalBlock(scope: !17565, file: !149, line: 148, column: 2)
!17584 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !17572)
!17585 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !17572)
!17586 = distinct !DILexicalBlock(scope: !17582, file: !149, line: 148, column: 2)
!17587 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !17572)
!17588 = !DILocation(line: 443, column: 29, scope: !17589)
!17589 = distinct !DILexicalBlock(scope: !17590, file: !3336, line: 442, column: 26)
!17590 = distinct !DILexicalBlock(scope: !17556, file: !3336, line: 442, column: 2)
!17591 = !DILocation(line: 444, column: 17, scope: !17589)
!17592 = !DILocation(line: 445, column: 51, scope: !17593)
!17593 = distinct !DILexicalBlock(scope: !17589, file: !3336, line: 445, column: 7)
!17594 = !DILocation(line: 445, column: 7, scope: !17589)
!17595 = !DILocation(line: 0, scope: !17589)
!17596 = !DILocation(line: 451, column: 18, scope: !17589)
!17597 = !DILocation(line: 452, column: 3, scope: !17589)
!17598 = !DILocalVariable(name: "key", arg: 2, scope: !17599, file: !149, line: 190, type: !17557)
!17599 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !17600, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17602)
!17600 = !DISubroutineType(types: !17601)
!17601 = !{null, !17568, !17557}
!17602 = !{!17603, !17598}
!17603 = !DILocalVariable(name: "l", arg: 1, scope: !17599, file: !149, line: 189, type: !17568)
!17604 = !DILocation(line: 0, scope: !17599, inlinedAt: !17605)
!17605 = distinct !DILocation(line: 442, column: 2, scope: !17590)
!17606 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !17605)
!17607 = distinct !DILexicalBlock(scope: !17608, file: !149, line: 194, column: 2)
!17608 = distinct !DILexicalBlock(scope: !17599, file: !149, line: 194, column: 2)
!17609 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !17605)
!17610 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !17605)
!17611 = distinct !DILexicalBlock(scope: !17607, file: !149, line: 194, column: 2)
!17612 = !DILocalVariable(name: "key", arg: 1, scope: !17613, file: !7872, line: 84, type: !32)
!17613 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7872, file: !7872, line: 84, type: !7883, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17614)
!17614 = !{!17612}
!17615 = !DILocation(line: 0, scope: !17613, inlinedAt: !17616)
!17616 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !17605)
!17617 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !17616)
!17618 = !{i64 1697320}
!17619 = !DILocation(line: 454, column: 1, scope: !17549)
!17620 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !4352, file: !4352, line: 389, type: !9453, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17621)
!17621 = !{!17622}
!17622 = !DILocalVariable(name: "t", arg: 1, scope: !17620, file: !4352, line: 389, type: !108)
!17623 = !DILocation(line: 0, scope: !17620)
!17624 = !DILocalVariable(name: "t", arg: 1, scope: !17625, file: !4352, line: 102, type: !109)
!17625 = distinct !DISubprogram(name: "z_tmcvt", scope: !4352, file: !4352, line: 102, type: !4360, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17626)
!17626 = !{!17624, !17627, !17628, !17629, !17630, !17631, !17632, !17633, !17634, !17635, !17636}
!17627 = !DILocalVariable(name: "from_hz", arg: 2, scope: !17625, file: !4352, line: 102, type: !108)
!17628 = !DILocalVariable(name: "to_hz", arg: 3, scope: !17625, file: !4352, line: 103, type: !108)
!17629 = !DILocalVariable(name: "const_hz", arg: 4, scope: !17625, file: !4352, line: 103, type: !119)
!17630 = !DILocalVariable(name: "result32", arg: 5, scope: !17625, file: !4352, line: 104, type: !119)
!17631 = !DILocalVariable(name: "round_up", arg: 6, scope: !17625, file: !4352, line: 104, type: !119)
!17632 = !DILocalVariable(name: "round_off", arg: 7, scope: !17625, file: !4352, line: 105, type: !119)
!17633 = !DILocalVariable(name: "mul_ratio", scope: !17625, file: !4352, line: 107, type: !119)
!17634 = !DILocalVariable(name: "div_ratio", scope: !17625, file: !4352, line: 109, type: !119)
!17635 = !DILocalVariable(name: "off", scope: !17625, file: !4352, line: 116, type: !109)
!17636 = !DILocalVariable(name: "rdivisor", scope: !17637, file: !4352, line: 119, type: !108)
!17637 = distinct !DILexicalBlock(scope: !17638, file: !4352, line: 118, column: 18)
!17638 = distinct !DILexicalBlock(scope: !17625, file: !4352, line: 118, column: 6)
!17639 = !DILocation(line: 0, scope: !17625, inlinedAt: !17640)
!17640 = distinct !DILocation(line: 392, column: 9, scope: !17620)
!17641 = !DILocation(line: 143, column: 25, scope: !17642, inlinedAt: !17640)
!17642 = distinct !DILexicalBlock(scope: !17643, file: !4352, line: 142, column: 17)
!17643 = distinct !DILexicalBlock(scope: !17644, file: !4352, line: 142, column: 7)
!17644 = distinct !DILexicalBlock(scope: !17645, file: !4352, line: 141, column: 24)
!17645 = distinct !DILexicalBlock(scope: !17646, file: !4352, line: 141, column: 13)
!17646 = distinct !DILexicalBlock(scope: !17625, file: !4352, line: 134, column: 6)
!17647 = !DILocation(line: 392, column: 2, scope: !17620)
!17648 = distinct !DISubprogram(name: "z_time_slice", scope: !3336, file: !3336, line: 502, type: !10944, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17649)
!17649 = !{!17650, !17651}
!17650 = !DILocalVariable(name: "ticks", arg: 1, scope: !17648, file: !3336, line: 502, type: !103)
!17651 = !DILocalVariable(name: "key", scope: !17648, file: !3336, line: 511, type: !17557)
!17652 = !DILocation(line: 0, scope: !17648)
!17653 = !DILocation(line: 0, scope: !17565, inlinedAt: !17654)
!17654 = distinct !DILocation(line: 511, column: 25, scope: !17648)
!17655 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !17656)
!17656 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !17654)
!17657 = !DILocation(line: 0, scope: !17574, inlinedAt: !17656)
!17658 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !17654)
!17659 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !17654)
!17660 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !17654)
!17661 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !17654)
!17662 = !DILocation(line: 514, column: 6, scope: !17663)
!17663 = distinct !DILexicalBlock(scope: !17648, file: !3336, line: 514, column: 6)
!17664 = !DILocation(line: 514, column: 25, scope: !17663)
!17665 = !DILocation(line: 514, column: 22, scope: !17663)
!17666 = !DILocation(line: 514, column: 6, scope: !17648)
!17667 = !DILocation(line: 515, column: 3, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17663, file: !3336, line: 514, column: 35)
!17669 = !DILocation(line: 0, scope: !17599, inlinedAt: !17670)
!17670 = distinct !DILocation(line: 516, column: 3, scope: !17668)
!17671 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !17670)
!17672 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !17670)
!17673 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !17670)
!17674 = !DILocation(line: 0, scope: !17613, inlinedAt: !17675)
!17675 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !17670)
!17676 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !17675)
!17677 = !DILocation(line: 517, column: 3, scope: !17668)
!17678 = !DILocation(line: 519, column: 18, scope: !17648)
!17679 = !DILocation(line: 522, column: 6, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17648, file: !3336, line: 522, column: 6)
!17681 = !DILocation(line: 522, column: 27, scope: !17680)
!17682 = !DILocation(line: 522, column: 30, scope: !17680)
!17683 = !DILocation(line: 522, column: 6, scope: !17648)
!17684 = !DILocation(line: 523, column: 30, scope: !17685)
!17685 = distinct !DILexicalBlock(scope: !17686, file: !3336, line: 523, column: 7)
!17686 = distinct !DILexicalBlock(scope: !17680, file: !3336, line: 522, column: 51)
!17687 = !DILocation(line: 523, column: 13, scope: !17685)
!17688 = !DILocation(line: 523, column: 7, scope: !17686)
!17689 = !DILocation(line: 530, column: 10, scope: !17690)
!17690 = distinct !DILexicalBlock(scope: !17685, file: !3336, line: 523, column: 43)
!17691 = !DILocation(line: 531, column: 3, scope: !17690)
!17692 = !DILocation(line: 532, column: 30, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !17685, file: !3336, line: 531, column: 10)
!17694 = !DILocation(line: 535, column: 29, scope: !17695)
!17695 = distinct !DILexicalBlock(scope: !17680, file: !3336, line: 534, column: 9)
!17696 = !DILocation(line: 0, scope: !17599, inlinedAt: !17697)
!17697 = distinct !DILocation(line: 537, column: 2, scope: !17648)
!17698 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !17697)
!17699 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !17697)
!17700 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !17697)
!17701 = !DILocation(line: 0, scope: !17613, inlinedAt: !17702)
!17702 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !17697)
!17703 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !17702)
!17704 = !DILocation(line: 538, column: 1, scope: !17648)
!17705 = distinct !DISubprogram(name: "sliceable", scope: !3336, file: !3336, line: 468, type: !17706, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17708)
!17706 = !DISubroutineType(types: !17707)
!17707 = !{!119, !3229}
!17708 = !{!17709, !17710}
!17709 = !DILocalVariable(name: "thread", arg: 1, scope: !17705, file: !3336, line: 468, type: !3229)
!17710 = !DILocalVariable(name: "ret", scope: !17705, file: !3336, line: 470, type: !119)
!17711 = !DILocation(line: 0, scope: !17705)
!17712 = !DILocation(line: 470, column: 13, scope: !17705)
!17713 = !DILocation(line: 471, column: 3, scope: !17705)
!17714 = !DILocation(line: 471, column: 7, scope: !17705)
!17715 = !DILocation(line: 472, column: 3, scope: !17705)
!17716 = !DILocation(line: 472, column: 37, scope: !17705)
!17717 = !DILocation(line: 472, column: 24, scope: !17705)
!17718 = !DILocation(line: 472, column: 43, scope: !17705)
!17719 = !DILocation(line: 472, column: 7, scope: !17705)
!17720 = !DILocation(line: 473, column: 3, scope: !17705)
!17721 = !DILocation(line: 473, column: 7, scope: !17705)
!17722 = !DILocation(line: 473, column: 6, scope: !17705)
!17723 = !DILocation(line: 479, column: 2, scope: !17705)
!17724 = distinct !DISubprogram(name: "slice_expired_locked", scope: !3336, file: !3336, line: 482, type: !17725, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17727)
!17725 = !DISubroutineType(types: !17726)
!17726 = !{!17557, !17557}
!17727 = !{!17728, !17729}
!17728 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !17724, file: !3336, line: 482, type: !17557)
!17729 = !DILocalVariable(name: "curr", scope: !17724, file: !3336, line: 484, type: !3229)
!17730 = !DILocation(line: 0, scope: !17724)
!17731 = !DILocation(line: 484, column: 26, scope: !17724)
!17732 = !DILocation(line: 493, column: 7, scope: !17733)
!17733 = distinct !DILexicalBlock(scope: !17724, file: !3336, line: 493, column: 6)
!17734 = !DILocation(line: 493, column: 6, scope: !17724)
!17735 = !DILocation(line: 494, column: 3, scope: !17736)
!17736 = distinct !DILexicalBlock(scope: !17733, file: !3336, line: 493, column: 49)
!17737 = !DILocation(line: 495, column: 2, scope: !17736)
!17738 = !DILocation(line: 496, column: 2, scope: !17724)
!17739 = !DILocation(line: 499, column: 1, scope: !17724)
!17740 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !15461, file: !15461, line: 106, type: !17706, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17741)
!17741 = !{!17742, !17743}
!17742 = !DILocalVariable(name: "thread", arg: 1, scope: !17740, file: !15461, line: 106, type: !3229)
!17743 = !DILocalVariable(name: "state", scope: !17740, file: !15461, line: 108, type: !164)
!17744 = !DILocation(line: 0, scope: !17740)
!17745 = !DILocation(line: 108, column: 31, scope: !17740)
!17746 = !DILocation(line: 110, column: 16, scope: !17740)
!17747 = !DILocation(line: 111, column: 41, scope: !17740)
!17748 = !DILocation(line: 110, column: 2, scope: !17740)
!17749 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !3336, file: !3336, line: 393, type: !17523, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17750)
!17750 = !{!17751}
!17751 = !DILocalVariable(name: "thread", arg: 1, scope: !17749, file: !3336, line: 393, type: !3229)
!17752 = !DILocation(line: 0, scope: !17749)
!17753 = !DILocation(line: 395, column: 6, scope: !17754)
!17754 = distinct !DILexicalBlock(scope: !17749, file: !3336, line: 395, column: 6)
!17755 = !DILocation(line: 395, column: 6, scope: !17749)
!17756 = !DILocalVariable(name: "thread", arg: 1, scope: !17757, file: !3336, line: 264, type: !3229)
!17757 = distinct !DISubprogram(name: "dequeue_thread", scope: !3336, file: !3336, line: 264, type: !17523, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17758)
!17758 = !{!17756}
!17759 = !DILocation(line: 0, scope: !17757, inlinedAt: !17760)
!17760 = distinct !DILocation(line: 396, column: 3, scope: !17761)
!17761 = distinct !DILexicalBlock(scope: !17754, file: !3336, line: 395, column: 34)
!17762 = !DILocation(line: 266, column: 15, scope: !17757, inlinedAt: !17760)
!17763 = !DILocation(line: 266, column: 28, scope: !17757, inlinedAt: !17760)
!17764 = !DILocalVariable(name: "thread", arg: 1, scope: !17765, file: !3336, line: 232, type: !3229)
!17765 = distinct !DISubprogram(name: "runq_remove", scope: !3336, file: !3336, line: 232, type: !17523, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17766)
!17766 = !{!17764}
!17767 = !DILocation(line: 0, scope: !17765, inlinedAt: !17768)
!17768 = distinct !DILocation(line: 268, column: 3, scope: !17769, inlinedAt: !17760)
!17769 = distinct !DILexicalBlock(scope: !17770, file: !3336, line: 267, column: 35)
!17770 = distinct !DILexicalBlock(scope: !17757, file: !3336, line: 267, column: 6)
!17771 = !DILocation(line: 234, column: 2, scope: !17765, inlinedAt: !17768)
!17772 = !DILocation(line: 397, column: 2, scope: !17761)
!17773 = !DILocalVariable(name: "thread", arg: 1, scope: !17774, file: !3336, line: 250, type: !3229)
!17774 = distinct !DISubprogram(name: "queue_thread", scope: !3336, file: !3336, line: 250, type: !17523, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17775)
!17775 = !{!17773}
!17776 = !DILocation(line: 0, scope: !17774, inlinedAt: !17777)
!17777 = distinct !DILocation(line: 398, column: 2, scope: !17749)
!17778 = !DILocation(line: 252, column: 15, scope: !17774, inlinedAt: !17777)
!17779 = !DILocation(line: 252, column: 28, scope: !17774, inlinedAt: !17777)
!17780 = !DILocalVariable(name: "thread", arg: 1, scope: !17781, file: !3336, line: 227, type: !3229)
!17781 = distinct !DISubprogram(name: "runq_add", scope: !3336, file: !3336, line: 227, type: !17523, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17782)
!17782 = !{!17780}
!17783 = !DILocation(line: 0, scope: !17781, inlinedAt: !17784)
!17784 = distinct !DILocation(line: 254, column: 3, scope: !17785, inlinedAt: !17777)
!17785 = distinct !DILexicalBlock(scope: !17786, file: !3336, line: 253, column: 35)
!17786 = distinct !DILexicalBlock(scope: !17774, file: !3336, line: 253, column: 6)
!17787 = !DILocalVariable(name: "pq", arg: 1, scope: !17788, file: !3336, line: 181, type: !17791)
!17788 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !3336, file: !3336, line: 181, type: !17789, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17792)
!17789 = !DISubroutineType(types: !17790)
!17790 = !{null, !17791, !3229}
!17791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 32)
!17792 = !{!17787, !17793, !17794}
!17793 = !DILocalVariable(name: "thread", arg: 2, scope: !17788, file: !3336, line: 182, type: !3229)
!17794 = !DILocalVariable(name: "t", scope: !17788, file: !3336, line: 184, type: !3229)
!17795 = !DILocation(line: 0, scope: !17788, inlinedAt: !17796)
!17796 = distinct !DILocation(line: 229, column: 2, scope: !17781, inlinedAt: !17784)
!17797 = !DILocation(line: 186, column: 2, scope: !17798, inlinedAt: !17796)
!17798 = distinct !DILexicalBlock(scope: !17799, file: !3336, line: 186, column: 2)
!17799 = distinct !DILexicalBlock(scope: !17788, file: !3336, line: 186, column: 2)
!17800 = !DILocation(line: 186, column: 2, scope: !17799, inlinedAt: !17796)
!17801 = !DILocation(line: 186, column: 2, scope: !17802, inlinedAt: !17796)
!17802 = distinct !DILexicalBlock(scope: !17798, file: !3336, line: 186, column: 2)
!17803 = !DILocation(line: 188, column: 2, scope: !17804, inlinedAt: !17796)
!17804 = distinct !DILexicalBlock(scope: !17788, file: !3336, line: 188, column: 2)
!17805 = !DILocation(line: 188, column: 2, scope: !17806, inlinedAt: !17796)
!17806 = distinct !DILexicalBlock(scope: !17804, file: !3336, line: 188, column: 2)
!17807 = !DILocation(line: 0, scope: !17804, inlinedAt: !17796)
!17808 = !DILocation(line: 189, column: 7, scope: !17809, inlinedAt: !17796)
!17809 = distinct !DILexicalBlock(scope: !17810, file: !3336, line: 189, column: 7)
!17810 = distinct !DILexicalBlock(scope: !17806, file: !3336, line: 188, column: 56)
!17811 = !DILocation(line: 189, column: 35, scope: !17809, inlinedAt: !17796)
!17812 = !DILocation(line: 189, column: 7, scope: !17810, inlinedAt: !17796)
!17813 = !DILocation(line: 191, column: 21, scope: !17814, inlinedAt: !17796)
!17814 = distinct !DILexicalBlock(scope: !17809, file: !3336, line: 189, column: 40)
!17815 = !DILocation(line: 190, column: 4, scope: !17814, inlinedAt: !17796)
!17816 = !DILocation(line: 192, column: 4, scope: !17814, inlinedAt: !17796)
!17817 = distinct !{!17817, !17803, !17818}
!17818 = !DILocation(line: 194, column: 2, scope: !17804, inlinedAt: !17796)
!17819 = !DILocation(line: 196, column: 37, scope: !17788, inlinedAt: !17796)
!17820 = !DILocation(line: 196, column: 2, scope: !17788, inlinedAt: !17796)
!17821 = !DILocation(line: 197, column: 1, scope: !17788, inlinedAt: !17796)
!17822 = !DILocation(line: 399, column: 25, scope: !17749)
!17823 = !DILocation(line: 399, column: 22, scope: !17749)
!17824 = !DILocation(line: 399, column: 2, scope: !17749)
!17825 = !DILocation(line: 400, column: 1, scope: !17749)
!17826 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !15461, file: !15461, line: 136, type: !17706, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17827)
!17827 = !{!17828}
!17828 = !DILocalVariable(name: "thread", arg: 1, scope: !17826, file: !15461, line: 136, type: !3229)
!17829 = !DILocation(line: 0, scope: !17826)
!17830 = !DILocation(line: 138, column: 9, scope: !17826)
!17831 = !DILocation(line: 138, column: 2, scope: !17826)
!17832 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !3336, file: !3336, line: 1137, type: !17789, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17833)
!17833 = !{!17834, !17835}
!17834 = !DILocalVariable(name: "pq", arg: 1, scope: !17832, file: !3336, line: 1137, type: !17791)
!17835 = !DILocalVariable(name: "thread", arg: 2, scope: !17832, file: !3336, line: 1137, type: !3229)
!17836 = !DILocation(line: 0, scope: !17832)
!17837 = !DILocation(line: 1139, column: 2, scope: !17838)
!17838 = distinct !DILexicalBlock(scope: !17839, file: !3336, line: 1139, column: 2)
!17839 = distinct !DILexicalBlock(scope: !17832, file: !3336, line: 1139, column: 2)
!17840 = !DILocation(line: 1139, column: 2, scope: !17839)
!17841 = !DILocation(line: 1139, column: 2, scope: !17842)
!17842 = distinct !DILexicalBlock(scope: !17838, file: !3336, line: 1139, column: 2)
!17843 = !DILocation(line: 1141, column: 33, scope: !17832)
!17844 = !DILocation(line: 1141, column: 2, scope: !17832)
!17845 = !DILocation(line: 1142, column: 1, scope: !17832)
!17846 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !15461, file: !15461, line: 83, type: !17706, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17847)
!17847 = !{!17848}
!17848 = !DILocalVariable(name: "thread", arg: 1, scope: !17846, file: !15461, line: 83, type: !3229)
!17849 = !DILocation(line: 0, scope: !17846)
!17850 = !DILocation(line: 89, column: 16, scope: !17846)
!17851 = !DILocation(line: 89, column: 2, scope: !17846)
!17852 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !133, file: !133, line: 294, type: !17853, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17855)
!17853 = !DISubroutineType(types: !17854)
!17854 = !{!3332, !17791}
!17855 = !{!17856}
!17856 = !DILocalVariable(name: "list", arg: 1, scope: !17852, file: !133, line: 294, type: !17791)
!17857 = !DILocation(line: 0, scope: !17852)
!17858 = !DILocation(line: 296, column: 9, scope: !17852)
!17859 = !DILocation(line: 296, column: 49, scope: !17852)
!17860 = !DILocation(line: 296, column: 2, scope: !17852)
!17861 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !133, file: !133, line: 443, type: !17862, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17864)
!17862 = !DISubroutineType(types: !17863)
!17863 = !{null, !3332, !3332}
!17864 = !{!17865, !17866, !17867}
!17865 = !DILocalVariable(name: "successor", arg: 1, scope: !17861, file: !133, line: 443, type: !3332)
!17866 = !DILocalVariable(name: "node", arg: 2, scope: !17861, file: !133, line: 443, type: !3332)
!17867 = !DILocalVariable(name: "prev", scope: !17861, file: !133, line: 445, type: !17868)
!17868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3332)
!17869 = !DILocation(line: 0, scope: !17861)
!17870 = !DILocation(line: 445, column: 39, scope: !17861)
!17871 = !DILocation(line: 447, column: 8, scope: !17861)
!17872 = !DILocation(line: 447, column: 13, scope: !17861)
!17873 = !DILocation(line: 448, column: 8, scope: !17861)
!17874 = !DILocation(line: 448, column: 13, scope: !17861)
!17875 = !DILocation(line: 449, column: 8, scope: !17861)
!17876 = !DILocation(line: 449, column: 13, scope: !17861)
!17877 = !DILocation(line: 450, column: 18, scope: !17861)
!17878 = !DILocation(line: 451, column: 1, scope: !17861)
!17879 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !133, file: !133, line: 341, type: !17880, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17882)
!17880 = !DISubroutineType(types: !17881)
!17881 = !{!3332, !17791, !3332}
!17882 = !{!17883, !17884}
!17883 = !DILocalVariable(name: "list", arg: 1, scope: !17879, file: !133, line: 341, type: !17791)
!17884 = !DILocalVariable(name: "node", arg: 2, scope: !17879, file: !133, line: 342, type: !3332)
!17885 = !DILocation(line: 0, scope: !17879)
!17886 = !DILocation(line: 344, column: 15, scope: !17879)
!17887 = !DILocation(line: 344, column: 9, scope: !17879)
!17888 = !DILocation(line: 344, column: 26, scope: !17879)
!17889 = !DILocation(line: 344, column: 2, scope: !17879)
!17890 = distinct !DISubprogram(name: "sys_dlist_append", scope: !133, file: !133, line: 404, type: !17891, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17893)
!17891 = !DISubroutineType(types: !17892)
!17892 = !{null, !17791, !3332}
!17893 = !{!17894, !17895, !17896}
!17894 = !DILocalVariable(name: "list", arg: 1, scope: !17890, file: !133, line: 404, type: !17791)
!17895 = !DILocalVariable(name: "node", arg: 2, scope: !17890, file: !133, line: 404, type: !3332)
!17896 = !DILocalVariable(name: "tail", scope: !17890, file: !133, line: 406, type: !17868)
!17897 = !DILocation(line: 0, scope: !17890)
!17898 = !DILocation(line: 406, column: 34, scope: !17890)
!17899 = !DILocation(line: 408, column: 8, scope: !17890)
!17900 = !DILocation(line: 408, column: 13, scope: !17890)
!17901 = !DILocation(line: 409, column: 8, scope: !17890)
!17902 = !DILocation(line: 409, column: 13, scope: !17890)
!17903 = !DILocation(line: 411, column: 8, scope: !17890)
!17904 = !DILocation(line: 411, column: 13, scope: !17890)
!17905 = !DILocation(line: 412, column: 13, scope: !17890)
!17906 = !DILocation(line: 413, column: 1, scope: !17890)
!17907 = distinct !DISubprogram(name: "update_cache", scope: !3336, file: !3336, line: 559, type: !10944, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17908)
!17908 = !{!17909, !17910}
!17909 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !17907, file: !3336, line: 559, type: !103)
!17910 = !DILocalVariable(name: "thread", scope: !17907, file: !3336, line: 562, type: !3229)
!17911 = !DILocation(line: 0, scope: !17907)
!17912 = !DILocation(line: 239, column: 9, scope: !17913, inlinedAt: !17916)
!17913 = distinct !DISubprogram(name: "runq_best", scope: !3336, file: !3336, line: 237, type: !17914, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !2894)
!17914 = !DISubroutineType(types: !17915)
!17915 = !{!3229}
!17916 = distinct !DILocation(line: 314, column: 28, scope: !17917, inlinedAt: !17920)
!17917 = distinct !DISubprogram(name: "next_up", scope: !3336, file: !3336, line: 312, type: !17914, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17918)
!17918 = !{!17919}
!17919 = !DILocalVariable(name: "thread", scope: !17917, file: !3336, line: 314, type: !3229)
!17920 = distinct !DILocation(line: 562, column: 28, scope: !17907)
!17921 = !DILocation(line: 0, scope: !17917, inlinedAt: !17920)
!17922 = !DILocation(line: 340, column: 17, scope: !17917, inlinedAt: !17920)
!17923 = !DILocation(line: 340, column: 9, scope: !17917, inlinedAt: !17920)
!17924 = !DILocalVariable(name: "thread", arg: 1, scope: !17925, file: !3336, line: 127, type: !3229)
!17925 = distinct !DISubprogram(name: "should_preempt", scope: !3336, file: !3336, line: 127, type: !17926, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17928)
!17926 = !DISubroutineType(types: !17927)
!17927 = !{!119, !3229, !103}
!17928 = !{!17924, !17929}
!17929 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !17925, file: !3336, line: 128, type: !103)
!17930 = !DILocation(line: 0, scope: !17925, inlinedAt: !17931)
!17931 = distinct !DILocation(line: 564, column: 6, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17907, file: !3336, line: 564, column: 6)
!17933 = !DILocation(line: 133, column: 17, scope: !17934, inlinedAt: !17931)
!17934 = distinct !DILexicalBlock(scope: !17925, file: !3336, line: 133, column: 6)
!17935 = !DILocation(line: 0, scope: !17932)
!17936 = !DILocation(line: 133, column: 6, scope: !17925, inlinedAt: !17931)
!17937 = !DILocation(line: 137, column: 2, scope: !17938, inlinedAt: !17931)
!17938 = distinct !DILexicalBlock(scope: !17939, file: !3336, line: 137, column: 2)
!17939 = distinct !DILexicalBlock(scope: !17925, file: !3336, line: 137, column: 2)
!17940 = !DILocation(line: 137, column: 2, scope: !17939, inlinedAt: !17931)
!17941 = !DILocation(line: 137, column: 2, scope: !17942, inlinedAt: !17931)
!17942 = distinct !DILexicalBlock(scope: !17938, file: !3336, line: 137, column: 2)
!17943 = !DILocation(line: 140, column: 6, scope: !17944, inlinedAt: !17931)
!17944 = distinct !DILexicalBlock(scope: !17925, file: !3336, line: 140, column: 6)
!17945 = !DILocation(line: 140, column: 6, scope: !17925, inlinedAt: !17931)
!17946 = !DILocation(line: 150, column: 9, scope: !17947, inlinedAt: !17931)
!17947 = distinct !DILexicalBlock(scope: !17925, file: !3336, line: 149, column: 6)
!17948 = !DILocation(line: 149, column: 6, scope: !17925, inlinedAt: !17931)
!17949 = !DILocation(line: 157, column: 6, scope: !17950, inlinedAt: !17931)
!17950 = distinct !DILexicalBlock(scope: !17925, file: !3336, line: 157, column: 6)
!17951 = !DILocation(line: 564, column: 6, scope: !17907)
!17952 = !DILocation(line: 566, column: 14, scope: !17953)
!17953 = distinct !DILexicalBlock(scope: !17954, file: !3336, line: 566, column: 7)
!17954 = distinct !DILexicalBlock(scope: !17932, file: !3336, line: 564, column: 42)
!17955 = !DILocation(line: 566, column: 7, scope: !17954)
!17956 = !DILocation(line: 567, column: 4, scope: !17957)
!17957 = distinct !DILexicalBlock(scope: !17953, file: !3336, line: 566, column: 27)
!17958 = !DILocation(line: 568, column: 3, scope: !17957)
!17959 = !DILocation(line: 585, column: 1, scope: !17907)
!17960 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !3336, file: !3336, line: 1144, type: !17961, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17963)
!17961 = !DISubroutineType(types: !17962)
!17962 = !{!3229, !17791}
!17963 = !{!17964, !17965, !17966}
!17964 = !DILocalVariable(name: "pq", arg: 1, scope: !17960, file: !3336, line: 1144, type: !17791)
!17965 = !DILocalVariable(name: "thread", scope: !17960, file: !3336, line: 1146, type: !3229)
!17966 = !DILocalVariable(name: "n", scope: !17960, file: !3336, line: 1147, type: !3332)
!17967 = !DILocation(line: 0, scope: !17960)
!17968 = !DILocation(line: 1147, column: 19, scope: !17960)
!17969 = !DILocation(line: 1152, column: 2, scope: !17960)
!17970 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !15461, file: !15461, line: 115, type: !17706, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17971)
!17971 = !{!17972}
!17972 = !DILocalVariable(name: "thread", arg: 1, scope: !17970, file: !15461, line: 115, type: !3229)
!17973 = !DILocation(line: 0, scope: !17970)
!17974 = !DILocation(line: 117, column: 46, scope: !17970)
!17975 = !DILocation(line: 117, column: 10, scope: !17970)
!17976 = !DILocation(line: 117, column: 9, scope: !17970)
!17977 = !DILocation(line: 117, column: 2, scope: !17970)
!17978 = distinct !DISubprogram(name: "is_preempt", scope: !3336, file: !3336, line: 62, type: !17541, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17979)
!17979 = !{!17980}
!17980 = !DILocalVariable(name: "thread", arg: 1, scope: !17978, file: !3336, line: 62, type: !3229)
!17981 = !DILocation(line: 0, scope: !17978)
!17982 = !DILocation(line: 65, column: 22, scope: !17978)
!17983 = !DILocation(line: 65, column: 30, scope: !17978)
!17984 = !DILocation(line: 65, column: 2, scope: !17978)
!17985 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !16292, file: !16292, line: 35, type: !17986, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !17990)
!17986 = !DISubroutineType(types: !17987)
!17987 = !{!119, !17988}
!17988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17989, size: 32)
!17989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3280)
!17990 = !{!17991}
!17991 = !DILocalVariable(name: "to", arg: 1, scope: !17985, file: !16292, line: 35, type: !17988)
!17992 = !DILocation(line: 0, scope: !17985)
!17993 = !DILocation(line: 37, column: 35, scope: !17985)
!17994 = !DILocation(line: 37, column: 10, scope: !17985)
!17995 = !DILocation(line: 37, column: 9, scope: !17985)
!17996 = !DILocation(line: 37, column: 2, scope: !17985)
!17997 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !133, file: !133, line: 225, type: !17998, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18002)
!17998 = !DISubroutineType(types: !17999)
!17999 = !{!119, !18000}
!18000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18001, size: 32)
!18001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3239)
!18002 = !{!18003}
!18003 = !DILocalVariable(name: "node", arg: 1, scope: !17997, file: !133, line: 225, type: !18000)
!18004 = !DILocation(line: 0, scope: !17997)
!18005 = !DILocation(line: 227, column: 15, scope: !17997)
!18006 = !DILocation(line: 227, column: 20, scope: !17997)
!18007 = !DILocation(line: 227, column: 2, scope: !17997)
!18008 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !133, file: !133, line: 325, type: !17880, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18009)
!18009 = !{!18010, !18011}
!18010 = !DILocalVariable(name: "list", arg: 1, scope: !18008, file: !133, line: 325, type: !17791)
!18011 = !DILocalVariable(name: "node", arg: 2, scope: !18008, file: !133, line: 326, type: !3332)
!18012 = !DILocation(line: 0, scope: !18008)
!18013 = !DILocation(line: 328, column: 24, scope: !18008)
!18014 = !DILocation(line: 328, column: 15, scope: !18008)
!18015 = !DILocation(line: 328, column: 9, scope: !18008)
!18016 = !DILocation(line: 328, column: 45, scope: !18008)
!18017 = !DILocation(line: 328, column: 2, scope: !18008)
!18018 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !133, file: !133, line: 266, type: !18019, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18021)
!18019 = !DISubroutineType(types: !18020)
!18020 = !{!119, !17791}
!18021 = !{!18022}
!18022 = !DILocalVariable(name: "list", arg: 1, scope: !18018, file: !133, line: 266, type: !17791)
!18023 = !DILocation(line: 0, scope: !18018)
!18024 = !DILocation(line: 268, column: 15, scope: !18018)
!18025 = !DILocation(line: 268, column: 20, scope: !18018)
!18026 = !DILocation(line: 268, column: 2, scope: !18018)
!18027 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !133, file: !133, line: 496, type: !18028, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18030)
!18028 = !DISubroutineType(types: !18029)
!18029 = !{null, !3332}
!18030 = !{!18031, !18032, !18033}
!18031 = !DILocalVariable(name: "node", arg: 1, scope: !18027, file: !133, line: 496, type: !3332)
!18032 = !DILocalVariable(name: "prev", scope: !18027, file: !133, line: 498, type: !17868)
!18033 = !DILocalVariable(name: "next", scope: !18027, file: !133, line: 499, type: !17868)
!18034 = !DILocation(line: 0, scope: !18027)
!18035 = !DILocation(line: 498, column: 34, scope: !18027)
!18036 = !DILocation(line: 499, column: 34, scope: !18027)
!18037 = !DILocation(line: 501, column: 8, scope: !18027)
!18038 = !DILocation(line: 501, column: 13, scope: !18027)
!18039 = !DILocation(line: 502, column: 8, scope: !18027)
!18040 = !DILocation(line: 502, column: 13, scope: !18027)
!18041 = !DILocation(line: 503, column: 2, scope: !18027)
!18042 = !DILocation(line: 504, column: 1, scope: !18027)
!18043 = distinct !DISubprogram(name: "sys_dnode_init", scope: !133, file: !133, line: 211, type: !18028, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18044)
!18044 = !{!18045}
!18045 = !DILocalVariable(name: "node", arg: 1, scope: !18043, file: !133, line: 211, type: !3332)
!18046 = !DILocation(line: 0, scope: !18043)
!18047 = !DILocation(line: 213, column: 8, scope: !18043)
!18048 = !DILocation(line: 213, column: 13, scope: !18043)
!18049 = !DILocation(line: 214, column: 8, scope: !18043)
!18050 = !DILocation(line: 214, column: 13, scope: !18043)
!18051 = !DILocation(line: 215, column: 1, scope: !18043)
!18052 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !15461, file: !15461, line: 131, type: !18053, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18055)
!18053 = !DISubroutineType(types: !18054)
!18054 = !{!119, !3229, !108}
!18055 = !{!18056, !18057}
!18056 = !DILocalVariable(name: "thread", arg: 1, scope: !18052, file: !15461, line: 131, type: !3229)
!18057 = !DILocalVariable(name: "state", arg: 2, scope: !18052, file: !15461, line: 131, type: !108)
!18058 = !DILocation(line: 0, scope: !18052)
!18059 = !DILocation(line: 133, column: 23, scope: !18052)
!18060 = !DILocation(line: 133, column: 10, scope: !18052)
!18061 = !DILocation(line: 133, column: 36, scope: !18052)
!18062 = !DILocation(line: 133, column: 45, scope: !18052)
!18063 = !DILocation(line: 133, column: 2, scope: !18052)
!18064 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !15461, file: !15461, line: 211, type: !17355, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18065)
!18065 = !{!18066, !18067}
!18066 = !DILocalVariable(name: "prio", arg: 1, scope: !18064, file: !15461, line: 211, type: !103)
!18067 = !DILocalVariable(name: "test_prio", arg: 2, scope: !18064, file: !15461, line: 211, type: !103)
!18068 = !DILocation(line: 0, scope: !18064)
!18069 = !DILocation(line: 213, column: 9, scope: !18064)
!18070 = !DILocation(line: 213, column: 2, scope: !18064)
!18071 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !15461, file: !15461, line: 206, type: !17355, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18072)
!18072 = !{!18073, !18074}
!18073 = !DILocalVariable(name: "prio1", arg: 1, scope: !18071, file: !15461, line: 206, type: !103)
!18074 = !DILocalVariable(name: "prio2", arg: 2, scope: !18071, file: !15461, line: 206, type: !103)
!18075 = !DILocation(line: 0, scope: !18071)
!18076 = !DILocation(line: 208, column: 15, scope: !18071)
!18077 = !DILocation(line: 208, column: 2, scope: !18071)
!18078 = distinct !DISubprogram(name: "z_ready_thread", scope: !3336, file: !3336, line: 635, type: !17523, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18079)
!18079 = !{!18080, !18081, !18083}
!18080 = !DILocalVariable(name: "thread", arg: 1, scope: !18078, file: !3336, line: 635, type: !3229)
!18081 = !DILocalVariable(name: "__i", scope: !18082, file: !3336, line: 637, type: !17557)
!18082 = distinct !DILexicalBlock(scope: !18078, file: !3336, line: 637, column: 2)
!18083 = !DILocalVariable(name: "__key", scope: !18082, file: !3336, line: 637, type: !17557)
!18084 = !DILocation(line: 0, scope: !18078)
!18085 = !DILocation(line: 0, scope: !18082)
!18086 = !DILocation(line: 0, scope: !17565, inlinedAt: !18087)
!18087 = distinct !DILocation(line: 637, column: 2, scope: !18082)
!18088 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18089)
!18089 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18087)
!18090 = !DILocation(line: 0, scope: !17574, inlinedAt: !18089)
!18091 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18087)
!18092 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18087)
!18093 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18087)
!18094 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18087)
!18095 = !DILocation(line: 639, column: 4, scope: !18096)
!18096 = distinct !DILexicalBlock(scope: !18097, file: !3336, line: 638, column: 41)
!18097 = distinct !DILexicalBlock(scope: !18098, file: !3336, line: 638, column: 7)
!18098 = distinct !DILexicalBlock(scope: !18099, file: !3336, line: 637, column: 26)
!18099 = distinct !DILexicalBlock(scope: !18082, file: !3336, line: 637, column: 2)
!18100 = !DILocation(line: 0, scope: !17599, inlinedAt: !18101)
!18101 = distinct !DILocation(line: 637, column: 2, scope: !18099)
!18102 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18101)
!18103 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18101)
!18104 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18101)
!18105 = !DILocation(line: 0, scope: !17613, inlinedAt: !18106)
!18106 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18101)
!18107 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18106)
!18108 = !DILocation(line: 642, column: 1, scope: !18078)
!18109 = distinct !DISubprogram(name: "ready_thread", scope: !3336, file: !3336, line: 617, type: !17523, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18110)
!18110 = !{!18111}
!18111 = !DILocalVariable(name: "thread", arg: 1, scope: !18109, file: !3336, line: 617, type: !3229)
!18112 = !DILocation(line: 0, scope: !18109)
!18113 = !DILocation(line: 626, column: 7, scope: !18114)
!18114 = distinct !DILexicalBlock(scope: !18109, file: !3336, line: 626, column: 6)
!18115 = !DILocation(line: 626, column: 34, scope: !18114)
!18116 = !DILocation(line: 626, column: 37, scope: !18114)
!18117 = !DILocation(line: 626, column: 6, scope: !18109)
!18118 = !DILocation(line: 0, scope: !17774, inlinedAt: !18119)
!18119 = distinct !DILocation(line: 629, column: 3, scope: !18120)
!18120 = distinct !DILexicalBlock(scope: !18114, file: !3336, line: 626, column: 64)
!18121 = !DILocation(line: 252, column: 15, scope: !17774, inlinedAt: !18119)
!18122 = !DILocation(line: 252, column: 28, scope: !17774, inlinedAt: !18119)
!18123 = !DILocation(line: 0, scope: !17781, inlinedAt: !18124)
!18124 = distinct !DILocation(line: 254, column: 3, scope: !17785, inlinedAt: !18119)
!18125 = !DILocation(line: 0, scope: !17788, inlinedAt: !18126)
!18126 = distinct !DILocation(line: 229, column: 2, scope: !17781, inlinedAt: !18124)
!18127 = !DILocation(line: 186, column: 2, scope: !17798, inlinedAt: !18126)
!18128 = !DILocation(line: 186, column: 2, scope: !17799, inlinedAt: !18126)
!18129 = !DILocation(line: 186, column: 2, scope: !17802, inlinedAt: !18126)
!18130 = !DILocation(line: 188, column: 2, scope: !17804, inlinedAt: !18126)
!18131 = !DILocation(line: 188, column: 2, scope: !17806, inlinedAt: !18126)
!18132 = !DILocation(line: 0, scope: !17804, inlinedAt: !18126)
!18133 = !DILocation(line: 189, column: 7, scope: !17809, inlinedAt: !18126)
!18134 = !DILocation(line: 189, column: 35, scope: !17809, inlinedAt: !18126)
!18135 = !DILocation(line: 189, column: 7, scope: !17810, inlinedAt: !18126)
!18136 = !DILocation(line: 191, column: 21, scope: !17814, inlinedAt: !18126)
!18137 = !DILocation(line: 190, column: 4, scope: !17814, inlinedAt: !18126)
!18138 = !DILocation(line: 192, column: 4, scope: !17814, inlinedAt: !18126)
!18139 = distinct !{!18139, !18130, !18140}
!18140 = !DILocation(line: 194, column: 2, scope: !17804, inlinedAt: !18126)
!18141 = !DILocation(line: 196, column: 37, scope: !17788, inlinedAt: !18126)
!18142 = !DILocation(line: 196, column: 2, scope: !17788, inlinedAt: !18126)
!18143 = !DILocation(line: 197, column: 1, scope: !17788, inlinedAt: !18126)
!18144 = !DILocation(line: 630, column: 3, scope: !18120)
!18145 = !DILocation(line: 632, column: 2, scope: !18120)
!18146 = !DILocation(line: 633, column: 1, scope: !18109)
!18147 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !15461, file: !15461, line: 120, type: !17706, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18148)
!18148 = !{!18149}
!18149 = !DILocalVariable(name: "thread", arg: 1, scope: !18147, file: !15461, line: 120, type: !3229)
!18150 = !DILocation(line: 0, scope: !18147)
!18151 = !DILocation(line: 122, column: 12, scope: !18147)
!18152 = !DILocation(line: 122, column: 62, scope: !18147)
!18153 = !DILocation(line: 123, column: 4, scope: !18147)
!18154 = !DILocation(line: 122, column: 2, scope: !18147)
!18155 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !3336, file: !3336, line: 644, type: !17523, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18156)
!18156 = !{!18157, !18158, !18160}
!18157 = !DILocalVariable(name: "thread", arg: 1, scope: !18155, file: !3336, line: 644, type: !3229)
!18158 = !DILocalVariable(name: "__i", scope: !18159, file: !3336, line: 646, type: !17557)
!18159 = distinct !DILexicalBlock(scope: !18155, file: !3336, line: 646, column: 2)
!18160 = !DILocalVariable(name: "__key", scope: !18159, file: !3336, line: 646, type: !17557)
!18161 = !DILocation(line: 0, scope: !18155)
!18162 = !DILocation(line: 0, scope: !18159)
!18163 = !DILocation(line: 0, scope: !17565, inlinedAt: !18164)
!18164 = distinct !DILocation(line: 646, column: 2, scope: !18159)
!18165 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18166)
!18166 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18164)
!18167 = !DILocation(line: 0, scope: !17574, inlinedAt: !18166)
!18168 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18164)
!18169 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18164)
!18170 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18164)
!18171 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18164)
!18172 = !DILocation(line: 647, column: 3, scope: !18173)
!18173 = distinct !DILexicalBlock(scope: !18174, file: !3336, line: 646, column: 26)
!18174 = distinct !DILexicalBlock(scope: !18159, file: !3336, line: 646, column: 2)
!18175 = !DILocation(line: 0, scope: !17599, inlinedAt: !18176)
!18176 = distinct !DILocation(line: 646, column: 2, scope: !18174)
!18177 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18176)
!18178 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18176)
!18179 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18176)
!18180 = !DILocation(line: 0, scope: !17613, inlinedAt: !18181)
!18181 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18176)
!18182 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18181)
!18183 = !DILocation(line: 649, column: 1, scope: !18155)
!18184 = distinct !DISubprogram(name: "z_sched_start", scope: !3336, file: !3336, line: 651, type: !17523, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18185)
!18185 = !{!18186, !18187}
!18186 = !DILocalVariable(name: "thread", arg: 1, scope: !18184, file: !3336, line: 651, type: !3229)
!18187 = !DILocalVariable(name: "key", scope: !18184, file: !3336, line: 653, type: !17557)
!18188 = !DILocation(line: 0, scope: !18184)
!18189 = !DILocation(line: 0, scope: !17565, inlinedAt: !18190)
!18190 = distinct !DILocation(line: 653, column: 25, scope: !18184)
!18191 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18192)
!18192 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18190)
!18193 = !DILocation(line: 0, scope: !17574, inlinedAt: !18192)
!18194 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18190)
!18195 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18190)
!18196 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18190)
!18197 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18190)
!18198 = !DILocation(line: 655, column: 6, scope: !18199)
!18199 = distinct !DILexicalBlock(scope: !18184, file: !3336, line: 655, column: 6)
!18200 = !DILocation(line: 655, column: 6, scope: !18184)
!18201 = !DILocation(line: 0, scope: !17599, inlinedAt: !18202)
!18202 = distinct !DILocation(line: 656, column: 3, scope: !18203)
!18203 = distinct !DILexicalBlock(scope: !18199, file: !3336, line: 655, column: 36)
!18204 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18202)
!18205 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18202)
!18206 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18202)
!18207 = !DILocation(line: 0, scope: !17613, inlinedAt: !18208)
!18208 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18202)
!18209 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18208)
!18210 = !DILocation(line: 657, column: 3, scope: !18203)
!18211 = !DILocation(line: 660, column: 2, scope: !18184)
!18212 = !DILocation(line: 661, column: 2, scope: !18184)
!18213 = !DILocation(line: 662, column: 2, scope: !18184)
!18214 = !DILocation(line: 663, column: 1, scope: !18184)
!18215 = distinct !DISubprogram(name: "z_has_thread_started", scope: !15461, file: !15461, line: 126, type: !17706, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18216)
!18216 = !{!18217}
!18217 = !DILocalVariable(name: "thread", arg: 1, scope: !18215, file: !15461, line: 126, type: !3229)
!18218 = !DILocation(line: 0, scope: !18215)
!18219 = !DILocation(line: 128, column: 23, scope: !18215)
!18220 = !DILocation(line: 128, column: 36, scope: !18215)
!18221 = !DILocation(line: 128, column: 56, scope: !18215)
!18222 = !DILocation(line: 128, column: 2, scope: !18215)
!18223 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15461, file: !15461, line: 155, type: !17523, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18224)
!18224 = !{!18225}
!18225 = !DILocalVariable(name: "thread", arg: 1, scope: !18223, file: !15461, line: 155, type: !3229)
!18226 = !DILocation(line: 0, scope: !18223)
!18227 = !DILocation(line: 157, column: 15, scope: !18223)
!18228 = !DILocation(line: 157, column: 28, scope: !18223)
!18229 = !DILocation(line: 158, column: 1, scope: !18223)
!18230 = distinct !DISubprogram(name: "z_reschedule", scope: !3336, file: !3336, line: 967, type: !17600, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18231)
!18231 = !{!18232, !18233}
!18232 = !DILocalVariable(name: "lock", arg: 1, scope: !18230, file: !3336, line: 967, type: !17568)
!18233 = !DILocalVariable(name: "key", arg: 2, scope: !18230, file: !3336, line: 967, type: !17557)
!18234 = !DILocation(line: 0, scope: !18230)
!18235 = !DILocation(line: 969, column: 6, scope: !18236)
!18236 = distinct !DILexicalBlock(scope: !18230, file: !3336, line: 969, column: 6)
!18237 = !DILocation(line: 969, column: 23, scope: !18236)
!18238 = !DILocation(line: 969, column: 26, scope: !18236)
!18239 = !DILocation(line: 969, column: 6, scope: !18230)
!18240 = !DILocalVariable(name: "key", arg: 2, scope: !18241, file: !15565, line: 193, type: !17557)
!18241 = distinct !DISubprogram(name: "z_swap", scope: !15565, file: !15565, line: 193, type: !18242, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18244)
!18242 = !DISubroutineType(types: !18243)
!18243 = !{!103, !17568, !17557}
!18244 = !{!18245, !18240}
!18245 = !DILocalVariable(name: "lock", arg: 1, scope: !18241, file: !15565, line: 193, type: !17568)
!18246 = !DILocation(line: 0, scope: !18241, inlinedAt: !18247)
!18247 = distinct !DILocation(line: 970, column: 3, scope: !18248)
!18248 = distinct !DILexicalBlock(scope: !18236, file: !3336, line: 969, column: 39)
!18249 = !DILocalVariable(name: "l", arg: 1, scope: !18250, file: !149, line: 221, type: !17568)
!18250 = distinct !DISubprogram(name: "k_spin_release", scope: !149, file: !149, line: 221, type: !18251, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18253)
!18251 = !DISubroutineType(types: !18252)
!18252 = !{null, !17568}
!18253 = !{!18249}
!18254 = !DILocation(line: 0, scope: !18250, inlinedAt: !18255)
!18255 = distinct !DILocation(line: 195, column: 2, scope: !18241, inlinedAt: !18247)
!18256 = !DILocation(line: 225, column: 2, scope: !18257, inlinedAt: !18255)
!18257 = distinct !DILexicalBlock(scope: !18258, file: !149, line: 225, column: 2)
!18258 = distinct !DILexicalBlock(scope: !18250, file: !149, line: 225, column: 2)
!18259 = !DILocation(line: 225, column: 2, scope: !18258, inlinedAt: !18255)
!18260 = !DILocation(line: 225, column: 2, scope: !18261, inlinedAt: !18255)
!18261 = distinct !DILexicalBlock(scope: !18257, file: !149, line: 225, column: 2)
!18262 = !DILocation(line: 196, column: 9, scope: !18241, inlinedAt: !18247)
!18263 = !DILocation(line: 971, column: 2, scope: !18248)
!18264 = !DILocation(line: 0, scope: !17599, inlinedAt: !18265)
!18265 = distinct !DILocation(line: 972, column: 3, scope: !18266)
!18266 = distinct !DILexicalBlock(scope: !18236, file: !3336, line: 971, column: 9)
!18267 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18265)
!18268 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18265)
!18269 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18265)
!18270 = !DILocation(line: 0, scope: !17613, inlinedAt: !18271)
!18271 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18265)
!18272 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18271)
!18273 = !DILocation(line: 975, column: 1, scope: !18230)
!18274 = distinct !DISubprogram(name: "resched", scope: !3336, file: !3336, line: 940, type: !18275, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18277)
!18275 = !DISubroutineType(types: !18276)
!18276 = !{!119, !108}
!18277 = !{!18278}
!18278 = !DILocalVariable(name: "key", arg: 1, scope: !18274, file: !3336, line: 940, type: !108)
!18279 = !DILocation(line: 0, scope: !18274)
!18280 = !DILocalVariable(name: "key", arg: 1, scope: !18281, file: !7872, line: 112, type: !32)
!18281 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7872, file: !7872, line: 112, type: !18282, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18284)
!18282 = !DISubroutineType(types: !18283)
!18283 = !{!119, !32}
!18284 = !{!18280}
!18285 = !DILocation(line: 0, scope: !18281, inlinedAt: !18286)
!18286 = distinct !DILocation(line: 946, column: 9, scope: !18274)
!18287 = !DILocation(line: 115, column: 13, scope: !18281, inlinedAt: !18286)
!18288 = !DILocation(line: 946, column: 32, scope: !18274)
!18289 = !DILocation(line: 1031, column: 3, scope: !18290, inlinedAt: !18293)
!18290 = distinct !DISubprogram(name: "__get_IPSR", scope: !8210, file: !8210, line: 1027, type: !9213, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18291)
!18291 = !{!18292}
!18292 = !DILocalVariable(name: "result", scope: !18290, file: !8210, line: 1029, type: !108)
!18293 = distinct !DILocation(line: 48, column: 10, scope: !18294, inlinedAt: !18295)
!18294 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9219, file: !9219, line: 46, type: !9220, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !2894)
!18295 = distinct !DILocation(line: 946, column: 36, scope: !18274)
!18296 = !{i64 2490438}
!18297 = !DILocation(line: 0, scope: !18290, inlinedAt: !18293)
!18298 = !DILocation(line: 48, column: 9, scope: !18294, inlinedAt: !18295)
!18299 = !DILocation(line: 946, column: 2, scope: !18274)
!18300 = distinct !DISubprogram(name: "need_swap", scope: !3336, file: !3336, line: 953, type: !9220, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18301)
!18301 = !{!18302}
!18302 = !DILocalVariable(name: "new_thread", scope: !18300, file: !3336, line: 959, type: !3229)
!18303 = !DILocation(line: 962, column: 31, scope: !18300)
!18304 = !DILocation(line: 0, scope: !18300)
!18305 = !DILocation(line: 963, column: 23, scope: !18300)
!18306 = !DILocation(line: 963, column: 20, scope: !18300)
!18307 = !DILocation(line: 963, column: 2, scope: !18300)
!18308 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !15565, file: !15565, line: 181, type: !8220, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18309)
!18309 = !{!18310, !18311}
!18310 = !DILocalVariable(name: "key", arg: 1, scope: !18308, file: !15565, line: 181, type: !32)
!18311 = !DILocalVariable(name: "ret", scope: !18308, file: !15565, line: 183, type: !103)
!18312 = !DILocation(line: 0, scope: !18308)
!18313 = !DILocation(line: 185, column: 8, scope: !18308)
!18314 = !DILocation(line: 186, column: 2, scope: !18308)
!18315 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !3336, file: !3336, line: 665, type: !17523, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18316)
!18316 = !{!18317, !18318, !18320}
!18317 = !DILocalVariable(name: "thread", arg: 1, scope: !18315, file: !3336, line: 665, type: !3229)
!18318 = !DILocalVariable(name: "__i", scope: !18319, file: !3336, line: 671, type: !17557)
!18319 = distinct !DILexicalBlock(scope: !18315, file: !3336, line: 671, column: 2)
!18320 = !DILocalVariable(name: "__key", scope: !18319, file: !3336, line: 671, type: !17557)
!18321 = !DILocation(line: 0, scope: !18315)
!18322 = !DILocation(line: 669, column: 8, scope: !18315)
!18323 = !DILocation(line: 0, scope: !18319)
!18324 = !DILocation(line: 0, scope: !17565, inlinedAt: !18325)
!18325 = distinct !DILocation(line: 671, column: 2, scope: !18319)
!18326 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18327)
!18327 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18325)
!18328 = !DILocation(line: 0, scope: !17574, inlinedAt: !18327)
!18329 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18325)
!18330 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18325)
!18331 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18325)
!18332 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18325)
!18333 = !DILocation(line: 672, column: 7, scope: !18334)
!18334 = distinct !DILexicalBlock(scope: !18335, file: !3336, line: 672, column: 7)
!18335 = distinct !DILexicalBlock(scope: !18336, file: !3336, line: 671, column: 26)
!18336 = distinct !DILexicalBlock(scope: !18319, file: !3336, line: 671, column: 2)
!18337 = !DILocation(line: 672, column: 7, scope: !18335)
!18338 = !DILocation(line: 0, scope: !17757, inlinedAt: !18339)
!18339 = distinct !DILocation(line: 673, column: 4, scope: !18340)
!18340 = distinct !DILexicalBlock(scope: !18334, file: !3336, line: 672, column: 35)
!18341 = !DILocation(line: 266, column: 15, scope: !17757, inlinedAt: !18339)
!18342 = !DILocation(line: 266, column: 28, scope: !17757, inlinedAt: !18339)
!18343 = !DILocation(line: 0, scope: !17765, inlinedAt: !18344)
!18344 = distinct !DILocation(line: 268, column: 3, scope: !17769, inlinedAt: !18339)
!18345 = !DILocation(line: 234, column: 2, scope: !17765, inlinedAt: !18344)
!18346 = !DILocation(line: 674, column: 3, scope: !18340)
!18347 = !DILocation(line: 675, column: 3, scope: !18335)
!18348 = !DILocation(line: 676, column: 26, scope: !18335)
!18349 = !DILocation(line: 676, column: 23, scope: !18335)
!18350 = !DILocation(line: 676, column: 3, scope: !18335)
!18351 = !DILocation(line: 0, scope: !17599, inlinedAt: !18352)
!18352 = distinct !DILocation(line: 671, column: 2, scope: !18336)
!18353 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18352)
!18354 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18352)
!18355 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18352)
!18356 = !DILocation(line: 0, scope: !17613, inlinedAt: !18357)
!18357 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18352)
!18358 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18357)
!18359 = !DILocation(line: 679, column: 16, scope: !18360)
!18360 = distinct !DILexicalBlock(scope: !18315, file: !3336, line: 679, column: 6)
!18361 = !DILocation(line: 679, column: 13, scope: !18360)
!18362 = !DILocation(line: 679, column: 6, scope: !18315)
!18363 = !DILocation(line: 680, column: 3, scope: !18364)
!18364 = distinct !DILexicalBlock(scope: !18360, file: !3336, line: 679, column: 26)
!18365 = !DILocation(line: 681, column: 2, scope: !18364)
!18366 = !DILocation(line: 684, column: 1, scope: !18315)
!18367 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !16292, file: !16292, line: 52, type: !17541, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18368)
!18368 = !{!18369}
!18369 = !DILocalVariable(name: "thread", arg: 1, scope: !18367, file: !16292, line: 52, type: !3229)
!18370 = !DILocation(line: 0, scope: !18367)
!18371 = !DILocation(line: 54, column: 39, scope: !18367)
!18372 = !DILocation(line: 54, column: 9, scope: !18367)
!18373 = !DILocation(line: 54, column: 2, scope: !18367)
!18374 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !15461, file: !15461, line: 141, type: !17523, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18375)
!18375 = !{!18376}
!18376 = !DILocalVariable(name: "thread", arg: 1, scope: !18374, file: !15461, line: 141, type: !3229)
!18377 = !DILocation(line: 0, scope: !18374)
!18378 = !DILocation(line: 143, column: 15, scope: !18374)
!18379 = !DILocation(line: 143, column: 28, scope: !18374)
!18380 = !DILocation(line: 146, column: 1, scope: !18374)
!18381 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !15461, file: !15461, line: 73, type: !333, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !2894)
!18382 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18383)
!18383 = distinct !DILocation(line: 75, column: 30, scope: !18381)
!18384 = !DILocation(line: 0, scope: !17574, inlinedAt: !18383)
!18385 = !DILocation(line: 75, column: 9, scope: !18381)
!18386 = !DILocation(line: 76, column: 1, scope: !18381)
!18387 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !3336, file: !3336, line: 977, type: !7896, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18388)
!18388 = !{!18389}
!18389 = !DILocalVariable(name: "key", arg: 1, scope: !18387, file: !3336, line: 977, type: !108)
!18390 = !DILocation(line: 0, scope: !18387)
!18391 = !DILocation(line: 979, column: 6, scope: !18392)
!18392 = distinct !DILexicalBlock(scope: !18387, file: !3336, line: 979, column: 6)
!18393 = !DILocation(line: 979, column: 6, scope: !18387)
!18394 = !DILocation(line: 980, column: 3, scope: !18395)
!18395 = distinct !DILexicalBlock(scope: !18392, file: !3336, line: 979, column: 20)
!18396 = !DILocation(line: 981, column: 2, scope: !18395)
!18397 = !DILocation(line: 0, scope: !17613, inlinedAt: !18398)
!18398 = distinct !DILocation(line: 982, column: 3, scope: !18399)
!18399 = distinct !DILexicalBlock(scope: !18392, file: !3336, line: 981, column: 9)
!18400 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18398)
!18401 = !DILocation(line: 985, column: 1, scope: !18387)
!18402 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !3336, file: !3336, line: 695, type: !17523, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18403)
!18403 = !{!18404, !18405}
!18404 = !DILocalVariable(name: "thread", arg: 1, scope: !18402, file: !3336, line: 695, type: !3229)
!18405 = !DILocalVariable(name: "key", scope: !18402, file: !3336, line: 699, type: !17557)
!18406 = !DILocation(line: 0, scope: !18402)
!18407 = !DILocation(line: 0, scope: !17565, inlinedAt: !18408)
!18408 = distinct !DILocation(line: 699, column: 25, scope: !18402)
!18409 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18410)
!18410 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18408)
!18411 = !DILocation(line: 0, scope: !17574, inlinedAt: !18410)
!18412 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18408)
!18413 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18408)
!18414 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18408)
!18415 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18408)
!18416 = !DILocation(line: 702, column: 7, scope: !18417)
!18417 = distinct !DILexicalBlock(scope: !18402, file: !3336, line: 702, column: 6)
!18418 = !DILocation(line: 702, column: 6, scope: !18402)
!18419 = !DILocation(line: 0, scope: !17599, inlinedAt: !18420)
!18420 = distinct !DILocation(line: 703, column: 3, scope: !18421)
!18421 = distinct !DILexicalBlock(scope: !18417, file: !3336, line: 702, column: 38)
!18422 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18420)
!18423 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18420)
!18424 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18420)
!18425 = !DILocation(line: 0, scope: !17613, inlinedAt: !18426)
!18426 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18420)
!18427 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18426)
!18428 = !DILocation(line: 704, column: 3, scope: !18421)
!18429 = !DILocation(line: 707, column: 2, scope: !18402)
!18430 = !DILocation(line: 708, column: 2, scope: !18402)
!18431 = !DILocation(line: 710, column: 2, scope: !18402)
!18432 = !DILocation(line: 713, column: 1, scope: !18402)
!18433 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !15461, file: !15461, line: 96, type: !17706, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18434)
!18434 = !{!18435}
!18435 = !DILocalVariable(name: "thread", arg: 1, scope: !18433, file: !15461, line: 96, type: !3229)
!18436 = !DILocation(line: 0, scope: !18433)
!18437 = !DILocation(line: 98, column: 23, scope: !18433)
!18438 = !DILocation(line: 98, column: 36, scope: !18433)
!18439 = !DILocation(line: 98, column: 57, scope: !18433)
!18440 = !DILocation(line: 98, column: 2, scope: !18433)
!18441 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !15461, file: !15461, line: 148, type: !17523, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18442)
!18442 = !{!18443}
!18443 = !DILocalVariable(name: "thread", arg: 1, scope: !18441, file: !15461, line: 148, type: !3229)
!18444 = !DILocation(line: 0, scope: !18441)
!18445 = !DILocation(line: 150, column: 15, scope: !18441)
!18446 = !DILocation(line: 150, column: 28, scope: !18441)
!18447 = !DILocation(line: 153, column: 1, scope: !18441)
!18448 = distinct !DISubprogram(name: "z_pend_thread", scope: !3336, file: !3336, line: 770, type: !18449, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18455)
!18449 = !DISubroutineType(types: !18450)
!18450 = !{null, !3229, !3260, !18451}
!18451 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !18452)
!18452 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !18453)
!18453 = !{!18454}
!18454 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18452, file: !105, line: 66, baseType: !104, size: 64)
!18455 = !{!18456, !18457, !18458, !18459, !18461}
!18456 = !DILocalVariable(name: "thread", arg: 1, scope: !18448, file: !3336, line: 770, type: !3229)
!18457 = !DILocalVariable(name: "wait_q", arg: 2, scope: !18448, file: !3336, line: 770, type: !3260)
!18458 = !DILocalVariable(name: "timeout", arg: 3, scope: !18448, file: !3336, line: 771, type: !18451)
!18459 = !DILocalVariable(name: "__i", scope: !18460, file: !3336, line: 774, type: !17557)
!18460 = distinct !DILexicalBlock(scope: !18448, file: !3336, line: 774, column: 2)
!18461 = !DILocalVariable(name: "__key", scope: !18460, file: !3336, line: 774, type: !17557)
!18462 = !DILocation(line: 0, scope: !18448)
!18463 = !DILocation(line: 773, column: 2, scope: !18464)
!18464 = distinct !DILexicalBlock(scope: !18465, file: !3336, line: 773, column: 2)
!18465 = distinct !DILexicalBlock(scope: !18448, file: !3336, line: 773, column: 2)
!18466 = !DILocation(line: 773, column: 2, scope: !18465)
!18467 = !DILocation(line: 773, column: 2, scope: !18468)
!18468 = distinct !DILexicalBlock(scope: !18464, file: !3336, line: 773, column: 2)
!18469 = !DILocation(line: 0, scope: !18460)
!18470 = !DILocation(line: 0, scope: !17565, inlinedAt: !18471)
!18471 = distinct !DILocation(line: 774, column: 2, scope: !18460)
!18472 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18473)
!18473 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18471)
!18474 = !DILocation(line: 0, scope: !17574, inlinedAt: !18473)
!18475 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18471)
!18476 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18471)
!18477 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18471)
!18478 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18471)
!18479 = !DILocation(line: 775, column: 3, scope: !18480)
!18480 = distinct !DILexicalBlock(scope: !18481, file: !3336, line: 774, column: 26)
!18481 = distinct !DILexicalBlock(scope: !18460, file: !3336, line: 774, column: 2)
!18482 = !DILocation(line: 0, scope: !17599, inlinedAt: !18483)
!18483 = distinct !DILocation(line: 774, column: 2, scope: !18481)
!18484 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18483)
!18485 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18483)
!18486 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18483)
!18487 = !DILocation(line: 0, scope: !17613, inlinedAt: !18488)
!18488 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18483)
!18489 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18488)
!18490 = !DILocation(line: 777, column: 1, scope: !18448)
!18491 = distinct !DISubprogram(name: "is_thread_dummy", scope: !3336, file: !3336, line: 79, type: !17706, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18492)
!18492 = !{!18493}
!18493 = !DILocalVariable(name: "thread", arg: 1, scope: !18491, file: !3336, line: 79, type: !3229)
!18494 = !DILocation(line: 0, scope: !18491)
!18495 = !DILocation(line: 81, column: 23, scope: !18491)
!18496 = !DILocation(line: 81, column: 36, scope: !18491)
!18497 = !DILocation(line: 81, column: 53, scope: !18491)
!18498 = !DILocation(line: 81, column: 2, scope: !18491)
!18499 = distinct !DISubprogram(name: "pend_locked", scope: !3336, file: !3336, line: 760, type: !18449, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18500)
!18500 = !{!18501, !18502, !18503}
!18501 = !DILocalVariable(name: "thread", arg: 1, scope: !18499, file: !3336, line: 760, type: !3229)
!18502 = !DILocalVariable(name: "wait_q", arg: 2, scope: !18499, file: !3336, line: 760, type: !3260)
!18503 = !DILocalVariable(name: "timeout", arg: 3, scope: !18499, file: !3336, line: 761, type: !18451)
!18504 = !DILocation(line: 0, scope: !18499)
!18505 = !DILocation(line: 766, column: 2, scope: !18499)
!18506 = !DILocation(line: 767, column: 2, scope: !18499)
!18507 = !DILocation(line: 768, column: 1, scope: !18499)
!18508 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !3336, file: !3336, line: 740, type: !18509, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18511)
!18509 = !DISubroutineType(types: !18510)
!18510 = !{null, !3229, !3260}
!18511 = !{!18512, !18513}
!18512 = !DILocalVariable(name: "thread", arg: 1, scope: !18508, file: !3336, line: 740, type: !3229)
!18513 = !DILocalVariable(name: "wait_q", arg: 2, scope: !18508, file: !3336, line: 740, type: !3260)
!18514 = !DILocation(line: 0, scope: !18508)
!18515 = !DILocation(line: 742, column: 2, scope: !18508)
!18516 = !DILocation(line: 743, column: 2, scope: !18508)
!18517 = !DILocation(line: 747, column: 13, scope: !18518)
!18518 = distinct !DILexicalBlock(scope: !18508, file: !3336, line: 747, column: 6)
!18519 = !DILocation(line: 747, column: 6, scope: !18508)
!18520 = !DILocation(line: 748, column: 16, scope: !18521)
!18521 = distinct !DILexicalBlock(scope: !18518, file: !3336, line: 747, column: 22)
!18522 = !DILocation(line: 748, column: 26, scope: !18521)
!18523 = !DILocation(line: 749, column: 28, scope: !18521)
!18524 = !DILocation(line: 0, scope: !17788, inlinedAt: !18525)
!18525 = distinct !DILocation(line: 749, column: 3, scope: !18521)
!18526 = !DILocation(line: 186, column: 2, scope: !17798, inlinedAt: !18525)
!18527 = !DILocation(line: 186, column: 2, scope: !17799, inlinedAt: !18525)
!18528 = !DILocation(line: 186, column: 2, scope: !17802, inlinedAt: !18525)
!18529 = !DILocation(line: 188, column: 2, scope: !17804, inlinedAt: !18525)
!18530 = !DILocation(line: 188, column: 2, scope: !17806, inlinedAt: !18525)
!18531 = !DILocation(line: 0, scope: !17804, inlinedAt: !18525)
!18532 = !DILocation(line: 189, column: 7, scope: !17809, inlinedAt: !18525)
!18533 = !DILocation(line: 189, column: 35, scope: !17809, inlinedAt: !18525)
!18534 = !DILocation(line: 189, column: 7, scope: !17810, inlinedAt: !18525)
!18535 = !DILocation(line: 191, column: 21, scope: !17814, inlinedAt: !18525)
!18536 = !DILocation(line: 190, column: 4, scope: !17814, inlinedAt: !18525)
!18537 = !DILocation(line: 192, column: 4, scope: !17814, inlinedAt: !18525)
!18538 = distinct !{!18538, !18529, !18539}
!18539 = !DILocation(line: 194, column: 2, scope: !17804, inlinedAt: !18525)
!18540 = !DILocation(line: 196, column: 37, scope: !17788, inlinedAt: !18525)
!18541 = !DILocation(line: 196, column: 2, scope: !17788, inlinedAt: !18525)
!18542 = !DILocation(line: 197, column: 1, scope: !17788, inlinedAt: !18525)
!18543 = !DILocation(line: 751, column: 1, scope: !18508)
!18544 = distinct !DISubprogram(name: "add_thread_timeout", scope: !3336, file: !3336, line: 753, type: !18545, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18547)
!18545 = !DISubroutineType(types: !18546)
!18546 = !{null, !3229, !18451}
!18547 = !{!18548, !18549}
!18548 = !DILocalVariable(name: "thread", arg: 1, scope: !18544, file: !3336, line: 753, type: !3229)
!18549 = !DILocalVariable(name: "timeout", arg: 2, scope: !18544, file: !3336, line: 753, type: !18451)
!18550 = !DILocation(line: 0, scope: !18544)
!18551 = !DILocation(line: 755, column: 7, scope: !18552)
!18552 = distinct !DILexicalBlock(scope: !18544, file: !3336, line: 755, column: 6)
!18553 = !DILocation(line: 755, column: 6, scope: !18544)
!18554 = !DILocation(line: 756, column: 3, scope: !18555)
!18555 = distinct !DILexicalBlock(scope: !18552, file: !3336, line: 755, column: 41)
!18556 = !DILocation(line: 757, column: 2, scope: !18555)
!18557 = !DILocation(line: 758, column: 1, scope: !18544)
!18558 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !16292, file: !16292, line: 47, type: !18545, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18559)
!18559 = !{!18560, !18561}
!18560 = !DILocalVariable(name: "thread", arg: 1, scope: !18558, file: !16292, line: 47, type: !3229)
!18561 = !DILocalVariable(name: "ticks", arg: 2, scope: !18558, file: !16292, line: 47, type: !18451)
!18562 = !DILocation(line: 0, scope: !18558)
!18563 = !DILocation(line: 49, column: 30, scope: !18558)
!18564 = !DILocation(line: 49, column: 2, scope: !18558)
!18565 = !DILocation(line: 50, column: 1, scope: !18558)
!18566 = distinct !DISubprogram(name: "z_thread_timeout", scope: !3336, file: !3336, line: 795, type: !3286, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18567)
!18567 = !{!18568, !18569, !18570, !18572, !18573}
!18568 = !DILocalVariable(name: "timeout", arg: 1, scope: !18566, file: !3336, line: 795, type: !3288)
!18569 = !DILocalVariable(name: "thread", scope: !18566, file: !3336, line: 797, type: !3229)
!18570 = !DILocalVariable(name: "__i", scope: !18571, file: !3336, line: 800, type: !17557)
!18571 = distinct !DILexicalBlock(scope: !18566, file: !3336, line: 800, column: 2)
!18572 = !DILocalVariable(name: "__key", scope: !18571, file: !3336, line: 800, type: !17557)
!18573 = !DILocalVariable(name: "killed", scope: !18574, file: !3336, line: 801, type: !119)
!18574 = distinct !DILexicalBlock(scope: !18575, file: !3336, line: 800, column: 26)
!18575 = distinct !DILexicalBlock(scope: !18571, file: !3336, line: 800, column: 2)
!18576 = !DILocation(line: 0, scope: !18566)
!18577 = !DILocation(line: 797, column: 28, scope: !18566)
!18578 = !DILocation(line: 0, scope: !18571)
!18579 = !DILocation(line: 0, scope: !17565, inlinedAt: !18580)
!18580 = distinct !DILocation(line: 800, column: 2, scope: !18571)
!18581 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18582)
!18582 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18580)
!18583 = !DILocation(line: 0, scope: !17574, inlinedAt: !18582)
!18584 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18580)
!18585 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18580)
!18586 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18580)
!18587 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18580)
!18588 = !DILocation(line: 801, column: 27, scope: !18574)
!18589 = !DILocation(line: 801, column: 32, scope: !18574)
!18590 = !DILocation(line: 801, column: 61, scope: !18574)
!18591 = !DILocation(line: 0, scope: !18574)
!18592 = !DILocation(line: 804, column: 7, scope: !18574)
!18593 = !DILocation(line: 805, column: 21, scope: !18594)
!18594 = distinct !DILexicalBlock(scope: !18595, file: !3336, line: 805, column: 8)
!18595 = distinct !DILexicalBlock(scope: !18596, file: !3336, line: 804, column: 16)
!18596 = distinct !DILexicalBlock(scope: !18574, file: !3336, line: 804, column: 7)
!18597 = !DILocation(line: 805, column: 31, scope: !18594)
!18598 = !DILocation(line: 805, column: 8, scope: !18595)
!18599 = !DILocation(line: 806, column: 5, scope: !18600)
!18600 = distinct !DILexicalBlock(scope: !18594, file: !3336, line: 805, column: 40)
!18601 = !DILocation(line: 807, column: 4, scope: !18600)
!18602 = !DILocation(line: 808, column: 4, scope: !18595)
!18603 = !DILocation(line: 809, column: 4, scope: !18595)
!18604 = !DILocation(line: 810, column: 4, scope: !18595)
!18605 = !DILocation(line: 811, column: 3, scope: !18595)
!18606 = !DILocation(line: 0, scope: !17599, inlinedAt: !18607)
!18607 = distinct !DILocation(line: 800, column: 2, scope: !18575)
!18608 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18607)
!18609 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18607)
!18610 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18607)
!18611 = !DILocation(line: 0, scope: !17613, inlinedAt: !18612)
!18612 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18607)
!18613 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18612)
!18614 = !DILocation(line: 813, column: 1, scope: !18566)
!18615 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !3336, file: !3336, line: 779, type: !17523, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18616)
!18616 = !{!18617}
!18617 = !DILocalVariable(name: "thread", arg: 1, scope: !18615, file: !3336, line: 779, type: !3229)
!18618 = !DILocation(line: 0, scope: !18615)
!18619 = !DILocation(line: 781, column: 21, scope: !18615)
!18620 = !DILocation(line: 781, column: 2, scope: !18615)
!18621 = !DILocation(line: 782, column: 2, scope: !18615)
!18622 = !DILocation(line: 783, column: 15, scope: !18615)
!18623 = !DILocation(line: 783, column: 25, scope: !18615)
!18624 = !DILocation(line: 784, column: 1, scope: !18615)
!18625 = distinct !DISubprogram(name: "pended_on_thread", scope: !3336, file: !3336, line: 724, type: !18626, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18628)
!18626 = !DISubroutineType(types: !18627)
!18627 = !{!3260, !3229}
!18628 = !{!18629}
!18629 = !DILocalVariable(name: "thread", arg: 1, scope: !18625, file: !3336, line: 724, type: !3229)
!18630 = !DILocation(line: 0, scope: !18625)
!18631 = !DILocation(line: 726, column: 2, scope: !18632)
!18632 = distinct !DILexicalBlock(scope: !18633, file: !3336, line: 726, column: 2)
!18633 = distinct !DILexicalBlock(scope: !18625, file: !3336, line: 726, column: 2)
!18634 = !DILocation(line: 726, column: 2, scope: !18633)
!18635 = !DILocation(line: 726, column: 2, scope: !18636)
!18636 = distinct !DILexicalBlock(scope: !18632, file: !3336, line: 726, column: 2)
!18637 = !DILocation(line: 728, column: 2, scope: !18625)
!18638 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !15461, file: !15461, line: 165, type: !17523, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18639)
!18639 = !{!18640}
!18640 = !DILocalVariable(name: "thread", arg: 1, scope: !18638, file: !15461, line: 165, type: !3229)
!18641 = !DILocation(line: 0, scope: !18638)
!18642 = !DILocation(line: 167, column: 15, scope: !18638)
!18643 = !DILocation(line: 167, column: 28, scope: !18638)
!18644 = !DILocation(line: 168, column: 1, scope: !18638)
!18645 = distinct !DISubprogram(name: "unready_thread", scope: !3336, file: !3336, line: 731, type: !17523, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18646)
!18646 = !{!18647}
!18647 = !DILocalVariable(name: "thread", arg: 1, scope: !18645, file: !3336, line: 731, type: !3229)
!18648 = !DILocation(line: 0, scope: !18645)
!18649 = !DILocation(line: 733, column: 6, scope: !18650)
!18650 = distinct !DILexicalBlock(scope: !18645, file: !3336, line: 733, column: 6)
!18651 = !DILocation(line: 733, column: 6, scope: !18645)
!18652 = !DILocation(line: 0, scope: !17757, inlinedAt: !18653)
!18653 = distinct !DILocation(line: 734, column: 3, scope: !18654)
!18654 = distinct !DILexicalBlock(scope: !18650, file: !3336, line: 733, column: 34)
!18655 = !DILocation(line: 266, column: 15, scope: !17757, inlinedAt: !18653)
!18656 = !DILocation(line: 266, column: 28, scope: !17757, inlinedAt: !18653)
!18657 = !DILocation(line: 0, scope: !17765, inlinedAt: !18658)
!18658 = distinct !DILocation(line: 268, column: 3, scope: !17769, inlinedAt: !18653)
!18659 = !DILocation(line: 234, column: 2, scope: !17765, inlinedAt: !18658)
!18660 = !DILocation(line: 735, column: 2, scope: !18654)
!18661 = !DILocation(line: 736, column: 25, scope: !18645)
!18662 = !DILocation(line: 736, column: 22, scope: !18645)
!18663 = !DILocation(line: 736, column: 2, scope: !18645)
!18664 = !DILocation(line: 737, column: 1, scope: !18645)
!18665 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !15461, file: !15461, line: 160, type: !17523, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18666)
!18666 = !{!18667}
!18667 = !DILocalVariable(name: "thread", arg: 1, scope: !18665, file: !15461, line: 160, type: !3229)
!18668 = !DILocation(line: 0, scope: !18665)
!18669 = !DILocation(line: 162, column: 15, scope: !18665)
!18670 = !DILocation(line: 162, column: 28, scope: !18665)
!18671 = !DILocation(line: 163, column: 1, scope: !18665)
!18672 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !3336, file: !3336, line: 786, type: !17523, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18673)
!18673 = !{!18674, !18675, !18677}
!18674 = !DILocalVariable(name: "thread", arg: 1, scope: !18672, file: !3336, line: 786, type: !3229)
!18675 = !DILocalVariable(name: "__i", scope: !18676, file: !3336, line: 788, type: !17557)
!18676 = distinct !DILexicalBlock(scope: !18672, file: !3336, line: 788, column: 2)
!18677 = !DILocalVariable(name: "__key", scope: !18676, file: !3336, line: 788, type: !17557)
!18678 = !DILocation(line: 0, scope: !18672)
!18679 = !DILocation(line: 0, scope: !18676)
!18680 = !DILocation(line: 0, scope: !17565, inlinedAt: !18681)
!18681 = distinct !DILocation(line: 788, column: 2, scope: !18676)
!18682 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18683)
!18683 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18681)
!18684 = !DILocation(line: 0, scope: !17574, inlinedAt: !18683)
!18685 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18681)
!18686 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18681)
!18687 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18681)
!18688 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18681)
!18689 = !DILocation(line: 789, column: 3, scope: !18690)
!18690 = distinct !DILexicalBlock(scope: !18691, file: !3336, line: 788, column: 26)
!18691 = distinct !DILexicalBlock(scope: !18676, file: !3336, line: 788, column: 2)
!18692 = !DILocation(line: 0, scope: !17599, inlinedAt: !18693)
!18693 = distinct !DILocation(line: 788, column: 2, scope: !18691)
!18694 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18693)
!18695 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18693)
!18696 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18693)
!18697 = !DILocation(line: 0, scope: !17613, inlinedAt: !18698)
!18698 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18693)
!18699 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18698)
!18700 = !DILocation(line: 791, column: 1, scope: !18672)
!18701 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !3336, file: !3336, line: 816, type: !18702, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18704)
!18702 = !DISubroutineType(types: !18703)
!18703 = !{!103, !108, !3260, !18451}
!18704 = !{!18705, !18706, !18707, !18708, !18709, !18711}
!18705 = !DILocalVariable(name: "key", arg: 1, scope: !18701, file: !3336, line: 816, type: !108)
!18706 = !DILocalVariable(name: "wait_q", arg: 2, scope: !18701, file: !3336, line: 816, type: !3260)
!18707 = !DILocalVariable(name: "timeout", arg: 3, scope: !18701, file: !3336, line: 816, type: !18451)
!18708 = !DILocalVariable(name: "ret", scope: !18701, file: !3336, line: 828, type: !103)
!18709 = !DILocalVariable(name: "__i", scope: !18710, file: !3336, line: 829, type: !17557)
!18710 = distinct !DILexicalBlock(scope: !18701, file: !3336, line: 829, column: 2)
!18711 = !DILocalVariable(name: "__key", scope: !18710, file: !3336, line: 829, type: !17557)
!18712 = !DILocation(line: 0, scope: !18701)
!18713 = !DILocation(line: 823, column: 14, scope: !18701)
!18714 = !DILocation(line: 823, column: 2, scope: !18701)
!18715 = !DILocation(line: 826, column: 20, scope: !18701)
!18716 = !DILocation(line: 826, column: 18, scope: !18701)
!18717 = !DILocation(line: 828, column: 12, scope: !18701)
!18718 = !DILocation(line: 0, scope: !18710)
!18719 = !DILocation(line: 0, scope: !17565, inlinedAt: !18720)
!18720 = distinct !DILocation(line: 829, column: 2, scope: !18710)
!18721 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18722)
!18722 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18720)
!18723 = !DILocation(line: 0, scope: !17574, inlinedAt: !18722)
!18724 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18720)
!18725 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18720)
!18726 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18720)
!18727 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18720)
!18728 = !DILocation(line: 830, column: 7, scope: !18729)
!18729 = distinct !DILexicalBlock(scope: !18730, file: !3336, line: 830, column: 7)
!18730 = distinct !DILexicalBlock(scope: !18731, file: !3336, line: 829, column: 26)
!18731 = distinct !DILexicalBlock(scope: !18710, file: !3336, line: 829, column: 2)
!18732 = !DILocation(line: 830, column: 26, scope: !18729)
!18733 = !DILocation(line: 830, column: 23, scope: !18729)
!18734 = !DILocation(line: 830, column: 7, scope: !18730)
!18735 = !DILocation(line: 831, column: 20, scope: !18736)
!18736 = distinct !DILexicalBlock(scope: !18729, file: !3336, line: 830, column: 36)
!18737 = !DILocation(line: 832, column: 3, scope: !18736)
!18738 = !DILocation(line: 0, scope: !17599, inlinedAt: !18739)
!18739 = distinct !DILocation(line: 829, column: 2, scope: !18731)
!18740 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18739)
!18741 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18739)
!18742 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18739)
!18743 = !DILocation(line: 0, scope: !17613, inlinedAt: !18744)
!18744 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18739)
!18745 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18744)
!18746 = !DILocation(line: 834, column: 2, scope: !18701)
!18747 = distinct !DISubprogram(name: "z_pend_curr", scope: !3336, file: !3336, line: 840, type: !18748, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18750)
!18748 = !DISubroutineType(types: !18749)
!18749 = !{!103, !17568, !17557, !3260, !18451}
!18750 = !{!18751, !18752, !18753, !18754}
!18751 = !DILocalVariable(name: "lock", arg: 1, scope: !18747, file: !3336, line: 840, type: !17568)
!18752 = !DILocalVariable(name: "key", arg: 2, scope: !18747, file: !3336, line: 840, type: !17557)
!18753 = !DILocalVariable(name: "wait_q", arg: 3, scope: !18747, file: !3336, line: 841, type: !3260)
!18754 = !DILocalVariable(name: "timeout", arg: 4, scope: !18747, file: !3336, line: 841, type: !18451)
!18755 = !DILocation(line: 0, scope: !18747)
!18756 = !DILocation(line: 844, column: 20, scope: !18747)
!18757 = !DILocation(line: 844, column: 18, scope: !18747)
!18758 = !DILocation(line: 846, column: 2, scope: !18759)
!18759 = distinct !DILexicalBlock(scope: !18760, file: !3336, line: 846, column: 2)
!18760 = distinct !DILexicalBlock(scope: !18747, file: !3336, line: 846, column: 2)
!18761 = !DILocation(line: 846, column: 2, scope: !18760)
!18762 = !DILocation(line: 846, column: 2, scope: !18763)
!18763 = distinct !DILexicalBlock(scope: !18759, file: !3336, line: 846, column: 2)
!18764 = !DILocation(line: 0, scope: !17565, inlinedAt: !18765)
!18765 = distinct !DILocation(line: 856, column: 9, scope: !18747)
!18766 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18767)
!18767 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18765)
!18768 = !DILocation(line: 0, scope: !17574, inlinedAt: !18767)
!18769 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18765)
!18770 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18765)
!18771 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18765)
!18772 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18765)
!18773 = !DILocation(line: 857, column: 14, scope: !18747)
!18774 = !DILocation(line: 857, column: 2, scope: !18747)
!18775 = !DILocation(line: 0, scope: !18250, inlinedAt: !18776)
!18776 = distinct !DILocation(line: 858, column: 2, scope: !18747)
!18777 = !DILocation(line: 225, column: 2, scope: !18257, inlinedAt: !18776)
!18778 = !DILocation(line: 225, column: 2, scope: !18258, inlinedAt: !18776)
!18779 = !DILocation(line: 225, column: 2, scope: !18261, inlinedAt: !18776)
!18780 = !DILocation(line: 0, scope: !18241, inlinedAt: !18781)
!18781 = distinct !DILocation(line: 859, column: 9, scope: !18747)
!18782 = !DILocation(line: 0, scope: !18250, inlinedAt: !18783)
!18783 = distinct !DILocation(line: 195, column: 2, scope: !18241, inlinedAt: !18781)
!18784 = !DILocation(line: 225, column: 2, scope: !18257, inlinedAt: !18783)
!18785 = !DILocation(line: 225, column: 2, scope: !18258, inlinedAt: !18783)
!18786 = !DILocation(line: 225, column: 2, scope: !18261, inlinedAt: !18783)
!18787 = !DILocation(line: 196, column: 9, scope: !18241, inlinedAt: !18781)
!18788 = !DILocation(line: 859, column: 2, scope: !18747)
!18789 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !3336, file: !3336, line: 862, type: !18790, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18792)
!18790 = !DISubroutineType(types: !18791)
!18791 = !{!3229, !3260}
!18792 = !{!18793, !18794, !18795, !18797}
!18793 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18789, file: !3336, line: 862, type: !3260)
!18794 = !DILocalVariable(name: "thread", scope: !18789, file: !3336, line: 864, type: !3229)
!18795 = !DILocalVariable(name: "__i", scope: !18796, file: !3336, line: 866, type: !17557)
!18796 = distinct !DILexicalBlock(scope: !18789, file: !3336, line: 866, column: 2)
!18797 = !DILocalVariable(name: "__key", scope: !18796, file: !3336, line: 866, type: !17557)
!18798 = !DILocation(line: 0, scope: !18789)
!18799 = !DILocation(line: 0, scope: !18796)
!18800 = !DILocation(line: 0, scope: !17565, inlinedAt: !18801)
!18801 = distinct !DILocation(line: 866, column: 2, scope: !18796)
!18802 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18803)
!18803 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18801)
!18804 = !DILocation(line: 0, scope: !17574, inlinedAt: !18803)
!18805 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18801)
!18806 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18801)
!18807 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18801)
!18808 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18801)
!18809 = !DILocation(line: 867, column: 12, scope: !18810)
!18810 = distinct !DILexicalBlock(scope: !18811, file: !3336, line: 866, column: 26)
!18811 = distinct !DILexicalBlock(scope: !18796, file: !3336, line: 866, column: 2)
!18812 = !DILocation(line: 869, column: 14, scope: !18813)
!18813 = distinct !DILexicalBlock(scope: !18810, file: !3336, line: 869, column: 7)
!18814 = !DILocation(line: 869, column: 7, scope: !18810)
!18815 = !DILocation(line: 870, column: 4, scope: !18816)
!18816 = distinct !DILexicalBlock(scope: !18813, file: !3336, line: 869, column: 23)
!18817 = !DILocation(line: 871, column: 3, scope: !18816)
!18818 = !DILocation(line: 0, scope: !17599, inlinedAt: !18819)
!18819 = distinct !DILocation(line: 866, column: 2, scope: !18811)
!18820 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18819)
!18821 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18819)
!18822 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18819)
!18823 = !DILocation(line: 0, scope: !17613, inlinedAt: !18824)
!18824 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18819)
!18825 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18824)
!18826 = !DILocation(line: 874, column: 2, scope: !18789)
!18827 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !3336, file: !3336, line: 877, type: !18790, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18828)
!18828 = !{!18829, !18830, !18831, !18833}
!18829 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18827, file: !3336, line: 877, type: !3260)
!18830 = !DILocalVariable(name: "thread", scope: !18827, file: !3336, line: 879, type: !3229)
!18831 = !DILocalVariable(name: "__i", scope: !18832, file: !3336, line: 881, type: !17557)
!18832 = distinct !DILexicalBlock(scope: !18827, file: !3336, line: 881, column: 2)
!18833 = !DILocalVariable(name: "__key", scope: !18832, file: !3336, line: 881, type: !17557)
!18834 = !DILocation(line: 0, scope: !18827)
!18835 = !DILocation(line: 0, scope: !18832)
!18836 = !DILocation(line: 0, scope: !17565, inlinedAt: !18837)
!18837 = distinct !DILocation(line: 881, column: 2, scope: !18832)
!18838 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18839)
!18839 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18837)
!18840 = !DILocation(line: 0, scope: !17574, inlinedAt: !18839)
!18841 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18837)
!18842 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18837)
!18843 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18837)
!18844 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18837)
!18845 = !DILocation(line: 882, column: 12, scope: !18846)
!18846 = distinct !DILexicalBlock(scope: !18847, file: !3336, line: 881, column: 26)
!18847 = distinct !DILexicalBlock(scope: !18832, file: !3336, line: 881, column: 2)
!18848 = !DILocation(line: 884, column: 14, scope: !18849)
!18849 = distinct !DILexicalBlock(scope: !18846, file: !3336, line: 884, column: 7)
!18850 = !DILocation(line: 884, column: 7, scope: !18846)
!18851 = !DILocation(line: 885, column: 4, scope: !18852)
!18852 = distinct !DILexicalBlock(scope: !18849, file: !3336, line: 884, column: 23)
!18853 = !DILocation(line: 886, column: 10, scope: !18852)
!18854 = !DILocation(line: 887, column: 3, scope: !18852)
!18855 = !DILocation(line: 0, scope: !17599, inlinedAt: !18856)
!18856 = distinct !DILocation(line: 881, column: 2, scope: !18847)
!18857 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18856)
!18858 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18856)
!18859 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18856)
!18860 = !DILocation(line: 0, scope: !17613, inlinedAt: !18861)
!18861 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18856)
!18862 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18861)
!18863 = !DILocation(line: 890, column: 2, scope: !18827)
!18864 = distinct !DISubprogram(name: "z_unpend_thread", scope: !3336, file: !3336, line: 893, type: !17523, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18865)
!18865 = !{!18866}
!18866 = !DILocalVariable(name: "thread", arg: 1, scope: !18864, file: !3336, line: 893, type: !3229)
!18867 = !DILocation(line: 0, scope: !18864)
!18868 = !DILocation(line: 0, scope: !18672, inlinedAt: !18869)
!18869 = distinct !DILocation(line: 895, column: 2, scope: !18864)
!18870 = !DILocation(line: 0, scope: !18676, inlinedAt: !18869)
!18871 = !DILocation(line: 0, scope: !17565, inlinedAt: !18872)
!18872 = distinct !DILocation(line: 788, column: 2, scope: !18676, inlinedAt: !18869)
!18873 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18874)
!18874 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18872)
!18875 = !DILocation(line: 0, scope: !17574, inlinedAt: !18874)
!18876 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18872)
!18877 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18872)
!18878 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18872)
!18879 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18872)
!18880 = !DILocation(line: 789, column: 3, scope: !18690, inlinedAt: !18869)
!18881 = !DILocation(line: 0, scope: !17599, inlinedAt: !18882)
!18882 = distinct !DILocation(line: 788, column: 2, scope: !18691, inlinedAt: !18869)
!18883 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18882)
!18884 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18882)
!18885 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18882)
!18886 = !DILocation(line: 0, scope: !17613, inlinedAt: !18887)
!18887 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18882)
!18888 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18887)
!18889 = !DILocation(line: 896, column: 8, scope: !18864)
!18890 = !DILocation(line: 897, column: 1, scope: !18864)
!18891 = distinct !DISubprogram(name: "z_set_prio", scope: !3336, file: !3336, line: 902, type: !17926, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18892)
!18892 = !{!18893, !18894, !18895, !18896, !18898}
!18893 = !DILocalVariable(name: "thread", arg: 1, scope: !18891, file: !3336, line: 902, type: !3229)
!18894 = !DILocalVariable(name: "prio", arg: 2, scope: !18891, file: !3336, line: 902, type: !103)
!18895 = !DILocalVariable(name: "need_sched", scope: !18891, file: !3336, line: 904, type: !119)
!18896 = !DILocalVariable(name: "__i", scope: !18897, file: !3336, line: 906, type: !17557)
!18897 = distinct !DILexicalBlock(scope: !18891, file: !3336, line: 906, column: 2)
!18898 = !DILocalVariable(name: "__key", scope: !18897, file: !3336, line: 906, type: !17557)
!18899 = !DILocation(line: 0, scope: !18891)
!18900 = !DILocation(line: 0, scope: !18897)
!18901 = !DILocation(line: 0, scope: !17565, inlinedAt: !18902)
!18902 = distinct !DILocation(line: 906, column: 2, scope: !18897)
!18903 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18904)
!18904 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18902)
!18905 = !DILocation(line: 0, scope: !17574, inlinedAt: !18904)
!18906 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18902)
!18907 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18902)
!18908 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18902)
!18909 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18902)
!18910 = !DILocation(line: 907, column: 16, scope: !18911)
!18911 = distinct !DILexicalBlock(scope: !18912, file: !3336, line: 906, column: 26)
!18912 = distinct !DILexicalBlock(scope: !18897, file: !3336, line: 906, column: 2)
!18913 = !DILocation(line: 909, column: 7, scope: !18911)
!18914 = !DILocation(line: 0, scope: !17757, inlinedAt: !18915)
!18915 = distinct !DILocation(line: 912, column: 5, scope: !18916)
!18916 = distinct !DILexicalBlock(scope: !18917, file: !3336, line: 911, column: 63)
!18917 = distinct !DILexicalBlock(scope: !18918, file: !3336, line: 911, column: 8)
!18918 = distinct !DILexicalBlock(scope: !18919, file: !3336, line: 909, column: 19)
!18919 = distinct !DILexicalBlock(scope: !18911, file: !3336, line: 909, column: 7)
!18920 = !DILocation(line: 266, column: 28, scope: !17757, inlinedAt: !18915)
!18921 = !DILocation(line: 0, scope: !17765, inlinedAt: !18922)
!18922 = distinct !DILocation(line: 268, column: 3, scope: !17769, inlinedAt: !18915)
!18923 = !DILocation(line: 234, column: 2, scope: !17765, inlinedAt: !18922)
!18924 = !DILocation(line: 913, column: 23, scope: !18916)
!18925 = !DILocation(line: 0, scope: !17774, inlinedAt: !18926)
!18926 = distinct !DILocation(line: 914, column: 5, scope: !18916)
!18927 = !DILocation(line: 252, column: 28, scope: !17774, inlinedAt: !18926)
!18928 = !DILocation(line: 0, scope: !17781, inlinedAt: !18929)
!18929 = distinct !DILocation(line: 254, column: 3, scope: !17785, inlinedAt: !18926)
!18930 = !DILocation(line: 0, scope: !17788, inlinedAt: !18931)
!18931 = distinct !DILocation(line: 229, column: 2, scope: !17781, inlinedAt: !18929)
!18932 = !DILocation(line: 186, column: 2, scope: !17798, inlinedAt: !18931)
!18933 = !DILocation(line: 186, column: 2, scope: !17799, inlinedAt: !18931)
!18934 = !DILocation(line: 186, column: 2, scope: !17802, inlinedAt: !18931)
!18935 = !DILocation(line: 188, column: 2, scope: !17804, inlinedAt: !18931)
!18936 = !DILocation(line: 188, column: 2, scope: !17806, inlinedAt: !18931)
!18937 = !DILocation(line: 0, scope: !17804, inlinedAt: !18931)
!18938 = !DILocation(line: 189, column: 7, scope: !17809, inlinedAt: !18931)
!18939 = !DILocation(line: 189, column: 35, scope: !17809, inlinedAt: !18931)
!18940 = !DILocation(line: 189, column: 7, scope: !17810, inlinedAt: !18931)
!18941 = !DILocation(line: 190, column: 4, scope: !17814, inlinedAt: !18931)
!18942 = !DILocation(line: 192, column: 4, scope: !17814, inlinedAt: !18931)
!18943 = distinct !{!18943, !18935, !18944}
!18944 = !DILocation(line: 194, column: 2, scope: !17804, inlinedAt: !18931)
!18945 = !DILocation(line: 196, column: 2, scope: !17788, inlinedAt: !18931)
!18946 = !DILocation(line: 197, column: 1, scope: !17788, inlinedAt: !18931)
!18947 = !DILocation(line: 918, column: 4, scope: !18918)
!18948 = !DILocation(line: 919, column: 3, scope: !18918)
!18949 = !DILocation(line: 920, column: 22, scope: !18950)
!18950 = distinct !DILexicalBlock(scope: !18919, file: !3336, line: 919, column: 10)
!18951 = !DILocation(line: 0, scope: !17599, inlinedAt: !18952)
!18952 = distinct !DILocation(line: 906, column: 2, scope: !18912)
!18953 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18952)
!18954 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18952)
!18955 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18952)
!18956 = !DILocation(line: 0, scope: !17613, inlinedAt: !18957)
!18957 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18952)
!18958 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !18957)
!18959 = !DILocation(line: 926, column: 2, scope: !18891)
!18960 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !3336, file: !3336, line: 929, type: !18961, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18963)
!18961 = !DISubroutineType(types: !18962)
!18962 = !{null, !3229, !103}
!18963 = !{!18964, !18965, !18966}
!18964 = !DILocalVariable(name: "thread", arg: 1, scope: !18960, file: !3336, line: 929, type: !3229)
!18965 = !DILocalVariable(name: "prio", arg: 2, scope: !18960, file: !3336, line: 929, type: !103)
!18966 = !DILocalVariable(name: "need_sched", scope: !18960, file: !3336, line: 931, type: !119)
!18967 = !DILocation(line: 0, scope: !18960)
!18968 = !DILocation(line: 931, column: 20, scope: !18960)
!18969 = !DILocation(line: 935, column: 17, scope: !18970)
!18970 = distinct !DILexicalBlock(scope: !18960, file: !3336, line: 935, column: 6)
!18971 = !DILocation(line: 935, column: 20, scope: !18970)
!18972 = !DILocation(line: 935, column: 35, scope: !18970)
!18973 = !DILocation(line: 935, column: 48, scope: !18970)
!18974 = !DILocation(line: 935, column: 6, scope: !18960)
!18975 = !DILocation(line: 936, column: 3, scope: !18976)
!18976 = distinct !DILexicalBlock(scope: !18970, file: !3336, line: 935, column: 55)
!18977 = !DILocation(line: 937, column: 2, scope: !18976)
!18978 = !DILocation(line: 938, column: 1, scope: !18960)
!18979 = distinct !DISubprogram(name: "k_sched_lock", scope: !3336, file: !3336, line: 987, type: !333, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !18980)
!18980 = !{!18981, !18983}
!18981 = !DILocalVariable(name: "__i", scope: !18982, file: !3336, line: 989, type: !17557)
!18982 = distinct !DILexicalBlock(scope: !18979, file: !3336, line: 989, column: 2)
!18983 = !DILocalVariable(name: "__key", scope: !18982, file: !3336, line: 989, type: !17557)
!18984 = !DILocation(line: 0, scope: !18982)
!18985 = !DILocation(line: 0, scope: !17565, inlinedAt: !18986)
!18986 = distinct !DILocation(line: 989, column: 2, scope: !18982)
!18987 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !18988)
!18988 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !18986)
!18989 = !DILocation(line: 0, scope: !17574, inlinedAt: !18988)
!18990 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !18986)
!18991 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !18986)
!18992 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !18986)
!18993 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !18986)
!18994 = !DILocation(line: 992, column: 3, scope: !18995)
!18995 = distinct !DILexicalBlock(scope: !18996, file: !3336, line: 989, column: 26)
!18996 = distinct !DILexicalBlock(scope: !18982, file: !3336, line: 989, column: 2)
!18997 = !DILocation(line: 0, scope: !17599, inlinedAt: !18998)
!18998 = distinct !DILocation(line: 989, column: 2, scope: !18996)
!18999 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !18998)
!19000 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !18998)
!19001 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !18998)
!19002 = !DILocation(line: 0, scope: !17613, inlinedAt: !19003)
!19003 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !18998)
!19004 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !19003)
!19005 = !DILocation(line: 994, column: 1, scope: !18979)
!19006 = distinct !DISubprogram(name: "z_sched_lock", scope: !15461, file: !15461, line: 251, type: !333, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !2894)
!19007 = !DILocation(line: 1031, column: 3, scope: !18290, inlinedAt: !19008)
!19008 = distinct !DILocation(line: 48, column: 10, scope: !18294, inlinedAt: !19009)
!19009 = distinct !DILocation(line: 253, column: 2, scope: !19010)
!19010 = distinct !DILexicalBlock(scope: !19011, file: !15461, line: 253, column: 2)
!19011 = distinct !DILexicalBlock(scope: !19006, file: !15461, line: 253, column: 2)
!19012 = !DILocation(line: 0, scope: !18290, inlinedAt: !19008)
!19013 = !DILocation(line: 48, column: 9, scope: !18294, inlinedAt: !19009)
!19014 = !DILocation(line: 253, column: 2, scope: !19011)
!19015 = !DILocation(line: 253, column: 2, scope: !19016)
!19016 = distinct !DILexicalBlock(scope: !19010, file: !15461, line: 253, column: 2)
!19017 = !DILocation(line: 254, column: 2, scope: !19018)
!19018 = distinct !DILexicalBlock(scope: !19019, file: !15461, line: 254, column: 2)
!19019 = distinct !DILexicalBlock(scope: !19006, file: !15461, line: 254, column: 2)
!19020 = !DILocation(line: 254, column: 2, scope: !19019)
!19021 = !DILocation(line: 254, column: 2, scope: !19022)
!19022 = distinct !DILexicalBlock(scope: !19018, file: !15461, line: 254, column: 2)
!19023 = !DILocation(line: 256, column: 2, scope: !19006)
!19024 = !DILocation(line: 258, column: 2, scope: !19025)
!19025 = distinct !DILexicalBlock(scope: !19006, file: !15461, line: 258, column: 2)
!19026 = !{i64 2152351069}
!19027 = !DILocation(line: 259, column: 1, scope: !19006)
!19028 = distinct !DISubprogram(name: "k_sched_unlock", scope: !3336, file: !3336, line: 996, type: !333, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19029)
!19029 = !{!19030, !19032}
!19030 = !DILocalVariable(name: "__i", scope: !19031, file: !3336, line: 998, type: !17557)
!19031 = distinct !DILexicalBlock(scope: !19028, file: !3336, line: 998, column: 2)
!19032 = !DILocalVariable(name: "__key", scope: !19031, file: !3336, line: 998, type: !17557)
!19033 = !DILocation(line: 0, scope: !19031)
!19034 = !DILocation(line: 0, scope: !17565, inlinedAt: !19035)
!19035 = distinct !DILocation(line: 998, column: 2, scope: !19031)
!19036 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !19037)
!19037 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !19035)
!19038 = !DILocation(line: 0, scope: !17574, inlinedAt: !19037)
!19039 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !19035)
!19040 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !19035)
!19041 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !19035)
!19042 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !19035)
!19043 = !DILocation(line: 999, column: 3, scope: !19044)
!19044 = distinct !DILexicalBlock(scope: !19045, file: !3336, line: 999, column: 3)
!19045 = distinct !DILexicalBlock(scope: !19046, file: !3336, line: 999, column: 3)
!19046 = distinct !DILexicalBlock(scope: !19047, file: !3336, line: 998, column: 26)
!19047 = distinct !DILexicalBlock(scope: !19031, file: !3336, line: 998, column: 2)
!19048 = !DILocation(line: 999, column: 3, scope: !19045)
!19049 = !DILocation(line: 999, column: 3, scope: !19050)
!19050 = distinct !DILexicalBlock(scope: !19044, file: !3336, line: 999, column: 3)
!19051 = !DILocation(line: 1031, column: 3, scope: !18290, inlinedAt: !19052)
!19052 = distinct !DILocation(line: 48, column: 10, scope: !18294, inlinedAt: !19053)
!19053 = distinct !DILocation(line: 1000, column: 3, scope: !19054)
!19054 = distinct !DILexicalBlock(scope: !19055, file: !3336, line: 1000, column: 3)
!19055 = distinct !DILexicalBlock(scope: !19046, file: !3336, line: 1000, column: 3)
!19056 = !DILocation(line: 0, scope: !18290, inlinedAt: !19052)
!19057 = !DILocation(line: 48, column: 9, scope: !18294, inlinedAt: !19053)
!19058 = !DILocation(line: 1000, column: 3, scope: !19055)
!19059 = !DILocation(line: 1000, column: 3, scope: !19060)
!19060 = distinct !DILexicalBlock(scope: !19054, file: !3336, line: 1000, column: 3)
!19061 = !DILocation(line: 1002, column: 5, scope: !19046)
!19062 = !DILocation(line: 1002, column: 20, scope: !19046)
!19063 = !DILocation(line: 1002, column: 3, scope: !19046)
!19064 = !DILocation(line: 1003, column: 3, scope: !19046)
!19065 = !DILocation(line: 0, scope: !17599, inlinedAt: !19066)
!19066 = distinct !DILocation(line: 998, column: 2, scope: !19047)
!19067 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !19066)
!19068 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !19066)
!19069 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !19066)
!19070 = !DILocation(line: 0, scope: !17613, inlinedAt: !19071)
!19071 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !19066)
!19072 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !19071)
!19073 = !DILocation(line: 1011, column: 2, scope: !19028)
!19074 = !DILocation(line: 1012, column: 1, scope: !19028)
!19075 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !3336, file: !3336, line: 1014, type: !17914, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !2894)
!19076 = !DILocation(line: 1028, column: 25, scope: !19075)
!19077 = !DILocation(line: 1028, column: 2, scope: !19075)
!19078 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !3336, file: !3336, line: 1155, type: !19079, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19081)
!19079 = !DISubroutineType(types: !19080)
!19080 = !{!119, !3258, !3258}
!19081 = !{!19082, !19083, !19084, !19085, !19086}
!19082 = !DILocalVariable(name: "a", arg: 1, scope: !19078, file: !3336, line: 1155, type: !3258)
!19083 = !DILocalVariable(name: "b", arg: 2, scope: !19078, file: !3336, line: 1155, type: !3258)
!19084 = !DILocalVariable(name: "thread_a", scope: !19078, file: !3336, line: 1157, type: !3229)
!19085 = !DILocalVariable(name: "thread_b", scope: !19078, file: !3336, line: 1157, type: !3229)
!19086 = !DILocalVariable(name: "cmp", scope: !19078, file: !3336, line: 1158, type: !330)
!19087 = !DILocation(line: 0, scope: !19078)
!19088 = !DILocation(line: 1160, column: 13, scope: !19078)
!19089 = !DILocation(line: 1161, column: 13, scope: !19078)
!19090 = !DILocation(line: 1163, column: 8, scope: !19078)
!19091 = !DILocation(line: 1165, column: 10, scope: !19092)
!19092 = distinct !DILexicalBlock(scope: !19078, file: !3336, line: 1165, column: 6)
!19093 = !DILocation(line: 1165, column: 6, scope: !19078)
!19094 = !DILocation(line: 1167, column: 17, scope: !19095)
!19095 = distinct !DILexicalBlock(scope: !19092, file: !3336, line: 1167, column: 13)
!19096 = !DILocation(line: 1167, column: 13, scope: !19092)
!19097 = !DILocation(line: 1170, column: 25, scope: !19098)
!19098 = distinct !DILexicalBlock(scope: !19095, file: !3336, line: 1169, column: 9)
!19099 = !DILocation(line: 1170, column: 52, scope: !19098)
!19100 = !DILocation(line: 1170, column: 35, scope: !19098)
!19101 = !DILocation(line: 1170, column: 3, scope: !19098)
!19102 = !DILocation(line: 0, scope: !19092)
!19103 = !DILocation(line: 1173, column: 1, scope: !19078)
!19104 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !3336, file: !3336, line: 1175, type: !19105, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19120)
!19105 = !DISubroutineType(types: !19106)
!19106 = !{null, !19107, !3229}
!19107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19108, size: 32)
!19108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !19109, line: 37, size: 128, elements: !19110)
!19109 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19110 = !{!19111, !19119}
!19111 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !19108, file: !19109, line: 38, baseType: !19112, size: 96)
!19112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !207, line: 83, size: 96, elements: !19113)
!19113 = !{!19114, !19115, !19118}
!19114 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !19112, file: !207, line: 84, baseType: !3258, size: 32)
!19115 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !19112, file: !207, line: 85, baseType: !19116, size: 32, offset: 32)
!19116 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !207, line: 81, baseType: !19117)
!19117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19079, size: 32)
!19118 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !19112, file: !207, line: 86, baseType: !103, size: 32, offset: 64)
!19119 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !19108, file: !19109, line: 39, baseType: !103, size: 32, offset: 96)
!19120 = !{!19121, !19122, !19123, !19124, !19133}
!19121 = !DILocalVariable(name: "pq", arg: 1, scope: !19104, file: !3336, line: 1175, type: !19107)
!19122 = !DILocalVariable(name: "thread", arg: 2, scope: !19104, file: !3336, line: 1175, type: !3229)
!19123 = !DILocalVariable(name: "t", scope: !19104, file: !3336, line: 1177, type: !3229)
!19124 = !DILocalVariable(name: "__f", scope: !19125, file: !3336, line: 1190, type: !19128)
!19125 = distinct !DILexicalBlock(scope: !19126, file: !3336, line: 1190, column: 3)
!19126 = distinct !DILexicalBlock(scope: !19127, file: !3336, line: 1189, column: 27)
!19127 = distinct !DILexicalBlock(scope: !19104, file: !3336, line: 1189, column: 6)
!19128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !207, line: 155, size: 96, elements: !19129)
!19129 = !{!19130, !19131, !19132}
!19130 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !19128, file: !207, line: 156, baseType: !3331, size: 32)
!19131 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !19128, file: !207, line: 157, baseType: !783, size: 32, offset: 32)
!19132 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !19128, file: !207, line: 158, baseType: !330, size: 32, offset: 64)
!19133 = !DILocalVariable(name: "n", scope: !19134, file: !3336, line: 1190, type: !3258)
!19134 = distinct !DILexicalBlock(scope: !19135, file: !3336, line: 1190, column: 3)
!19135 = distinct !DILexicalBlock(scope: !19125, file: !3336, line: 1190, column: 3)
!19136 = !DILocation(line: 0, scope: !19104)
!19137 = !DILocation(line: 1179, column: 2, scope: !19138)
!19138 = distinct !DILexicalBlock(scope: !19139, file: !3336, line: 1179, column: 2)
!19139 = distinct !DILexicalBlock(scope: !19104, file: !3336, line: 1179, column: 2)
!19140 = !DILocation(line: 1179, column: 2, scope: !19139)
!19141 = !DILocation(line: 1179, column: 2, scope: !19142)
!19142 = distinct !DILexicalBlock(scope: !19138, file: !3336, line: 1179, column: 2)
!19143 = !DILocation(line: 1181, column: 31, scope: !19104)
!19144 = !DILocation(line: 1181, column: 45, scope: !19104)
!19145 = !DILocation(line: 1181, column: 15, scope: !19104)
!19146 = !DILocation(line: 1181, column: 25, scope: !19104)
!19147 = !DILocation(line: 1189, column: 11, scope: !19127)
!19148 = !DILocation(line: 1189, column: 7, scope: !19127)
!19149 = !DILocation(line: 1189, column: 6, scope: !19104)
!19150 = !DILocation(line: 1190, column: 3, scope: !19125)
!19151 = !DILocation(line: 1190, column: 3, scope: !19134)
!19152 = !DILocation(line: 0, scope: !19134)
!19153 = !DILocation(line: 1190, column: 3, scope: !19135)
!19154 = !DILocation(line: 1193, column: 2, scope: !19126)
!19155 = !DILocation(line: 1191, column: 42, scope: !19156)
!19156 = distinct !DILexicalBlock(scope: !19135, file: !3336, line: 1190, column: 54)
!19157 = !DILocation(line: 1191, column: 12, scope: !19156)
!19158 = !DILocation(line: 1191, column: 22, scope: !19156)
!19159 = distinct !{!19159, !19150, !19160}
!19160 = !DILocation(line: 1192, column: 3, scope: !19125)
!19161 = !DILocation(line: 1195, column: 17, scope: !19104)
!19162 = !DILocation(line: 1195, column: 37, scope: !19104)
!19163 = !DILocation(line: 1195, column: 2, scope: !19104)
!19164 = !DILocation(line: 1196, column: 1, scope: !19104)
!19165 = !DISubprogram(name: "z_rb_foreach_next", scope: !207, file: !207, line: 176, type: !19166, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2894)
!19166 = !DISubroutineType(types: !19167)
!19167 = !{!3258, !19168, !19169}
!19168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19112, size: 32)
!19169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19128, size: 32)
!19170 = !DISubprogram(name: "rb_insert", scope: !207, file: !207, line: 105, type: !19171, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2894)
!19171 = !DISubroutineType(types: !19172)
!19172 = !{null, !19168, !3258}
!19173 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !3336, file: !3336, line: 1198, type: !19105, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19174)
!19174 = !{!19175, !19176}
!19175 = !DILocalVariable(name: "pq", arg: 1, scope: !19173, file: !3336, line: 1198, type: !19107)
!19176 = !DILocalVariable(name: "thread", arg: 2, scope: !19173, file: !3336, line: 1198, type: !3229)
!19177 = !DILocation(line: 0, scope: !19173)
!19178 = !DILocation(line: 1200, column: 2, scope: !19179)
!19179 = distinct !DILexicalBlock(scope: !19180, file: !3336, line: 1200, column: 2)
!19180 = distinct !DILexicalBlock(scope: !19173, file: !3336, line: 1200, column: 2)
!19181 = !DILocation(line: 1200, column: 2, scope: !19180)
!19182 = !DILocation(line: 1200, column: 2, scope: !19183)
!19183 = distinct !DILexicalBlock(scope: !19179, file: !3336, line: 1200, column: 2)
!19184 = !DILocation(line: 1202, column: 17, scope: !19173)
!19185 = !DILocation(line: 1202, column: 37, scope: !19173)
!19186 = !DILocation(line: 1202, column: 2, scope: !19173)
!19187 = !DILocation(line: 1204, column: 16, scope: !19188)
!19188 = distinct !DILexicalBlock(scope: !19173, file: !3336, line: 1204, column: 6)
!19189 = !DILocation(line: 1204, column: 7, scope: !19188)
!19190 = !DILocation(line: 1204, column: 6, scope: !19173)
!19191 = !DILocation(line: 1205, column: 7, scope: !19192)
!19192 = distinct !DILexicalBlock(scope: !19188, file: !3336, line: 1204, column: 22)
!19193 = !DILocation(line: 1205, column: 22, scope: !19192)
!19194 = !DILocation(line: 1206, column: 2, scope: !19192)
!19195 = !DILocation(line: 1207, column: 1, scope: !19173)
!19196 = !DISubprogram(name: "rb_remove", scope: !207, file: !207, line: 110, type: !19171, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2894)
!19197 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !3336, file: !3336, line: 1209, type: !19198, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19200)
!19198 = !DISubroutineType(types: !19199)
!19199 = !{!3229, !19107}
!19200 = !{!19201, !19202, !19203}
!19201 = !DILocalVariable(name: "pq", arg: 1, scope: !19197, file: !3336, line: 1209, type: !19107)
!19202 = !DILocalVariable(name: "thread", scope: !19197, file: !3336, line: 1211, type: !3229)
!19203 = !DILocalVariable(name: "n", scope: !19197, file: !3336, line: 1212, type: !3258)
!19204 = !DILocation(line: 0, scope: !19197)
!19205 = !DILocation(line: 1212, column: 37, scope: !19197)
!19206 = !DILocation(line: 1212, column: 21, scope: !19197)
!19207 = !DILocation(line: 1217, column: 2, scope: !19197)
!19208 = distinct !DISubprogram(name: "rb_get_min", scope: !207, file: !207, line: 115, type: !19209, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19211)
!19209 = !DISubroutineType(types: !19210)
!19210 = !{!3258, !19168}
!19211 = !{!19212}
!19212 = !DILocalVariable(name: "tree", arg: 1, scope: !19208, file: !207, line: 115, type: !19168)
!19213 = !DILocation(line: 0, scope: !19208)
!19214 = !DILocation(line: 117, column: 9, scope: !19208)
!19215 = !DILocation(line: 117, column: 2, scope: !19208)
!19216 = !DISubprogram(name: "z_rb_get_minmax", scope: !207, file: !207, line: 100, type: !19217, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2894)
!19217 = !DISubroutineType(types: !19218)
!19218 = !{!3258, !19168, !164}
!19219 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !3336, file: !3336, line: 1246, type: !19220, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19228)
!19220 = !DISubroutineType(types: !19221)
!19221 = !{!3229, !19222}
!19222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19223, size: 32)
!19223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !19109, line: 53, size: 2080, elements: !19224)
!19224 = !{!19225, !19227}
!19225 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !19223, file: !19109, line: 54, baseType: !19226, size: 2048)
!19226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3265, size: 2048, elements: !1799)
!19227 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !19223, file: !19109, line: 55, baseType: !32, size: 32, offset: 2048)
!19228 = !{!19229, !19230, !19231, !19232}
!19229 = !DILocalVariable(name: "pq", arg: 1, scope: !19219, file: !3336, line: 1246, type: !19222)
!19230 = !DILocalVariable(name: "thread", scope: !19219, file: !3336, line: 1252, type: !3229)
!19231 = !DILocalVariable(name: "l", scope: !19219, file: !3336, line: 1253, type: !17791)
!19232 = !DILocalVariable(name: "n", scope: !19219, file: !3336, line: 1254, type: !3332)
!19233 = !DILocation(line: 0, scope: !19219)
!19234 = !DILocation(line: 1248, column: 11, scope: !19235)
!19235 = distinct !DILexicalBlock(scope: !19219, file: !3336, line: 1248, column: 6)
!19236 = !DILocation(line: 1248, column: 7, scope: !19235)
!19237 = !DILocation(line: 1248, column: 6, scope: !19219)
!19238 = !DILocation(line: 1253, column: 31, scope: !19219)
!19239 = !DILocation(line: 1253, column: 20, scope: !19219)
!19240 = !DILocation(line: 1254, column: 19, scope: !19219)
!19241 = !DILocation(line: 1260, column: 1, scope: !19219)
!19242 = distinct !DISubprogram(name: "z_unpend_all", scope: !3336, file: !3336, line: 1262, type: !19243, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19245)
!19243 = !DISubroutineType(types: !19244)
!19244 = !{!103, !3260}
!19245 = !{!19246, !19247, !19248}
!19246 = !DILocalVariable(name: "wait_q", arg: 1, scope: !19242, file: !3336, line: 1262, type: !3260)
!19247 = !DILocalVariable(name: "need_sched", scope: !19242, file: !3336, line: 1264, type: !103)
!19248 = !DILocalVariable(name: "thread", scope: !19242, file: !3336, line: 1265, type: !3229)
!19249 = !DILocation(line: 0, scope: !19242)
!19250 = !DILocation(line: 1267, column: 19, scope: !19242)
!19251 = !DILocation(line: 1267, column: 41, scope: !19242)
!19252 = !DILocation(line: 1267, column: 2, scope: !19242)
!19253 = !DILocation(line: 1268, column: 3, scope: !19254)
!19254 = distinct !DILexicalBlock(scope: !19242, file: !3336, line: 1267, column: 50)
!19255 = !DILocation(line: 1269, column: 3, scope: !19254)
!19256 = distinct !{!19256, !19252, !19257}
!19257 = !DILocation(line: 1271, column: 2, scope: !19242)
!19258 = !DILocation(line: 1273, column: 2, scope: !19242)
!19259 = distinct !DISubprogram(name: "z_waitq_head", scope: !15721, file: !15721, line: 52, type: !18790, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19260)
!19260 = !{!19261}
!19261 = !DILocalVariable(name: "w", arg: 1, scope: !19259, file: !15721, line: 52, type: !3260)
!19262 = !DILocation(line: 0, scope: !19259)
!19263 = !DILocation(line: 54, column: 52, scope: !19259)
!19264 = !DILocation(line: 54, column: 28, scope: !19259)
!19265 = !DILocation(line: 54, column: 9, scope: !19259)
!19266 = !DILocation(line: 54, column: 2, scope: !19259)
!19267 = distinct !DISubprogram(name: "init_ready_q", scope: !3336, file: !3336, line: 1276, type: !19268, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19275)
!19268 = !DISubroutineType(types: !19269)
!19269 = !{null, !19270}
!19270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19271, size: 32)
!19271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !128, line: 83, size: 96, elements: !19272)
!19272 = !{!19273, !19274}
!19273 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !19271, file: !128, line: 86, baseType: !3229, size: 32)
!19274 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !19271, file: !128, line: 90, baseType: !3265, size: 64, offset: 32)
!19275 = !{!19276}
!19276 = !DILocalVariable(name: "rq", arg: 1, scope: !19267, file: !3336, line: 1276, type: !19270)
!19277 = !DILocation(line: 0, scope: !19267)
!19278 = !DILocation(line: 1289, column: 22, scope: !19267)
!19279 = !DILocation(line: 1289, column: 2, scope: !19267)
!19280 = !DILocation(line: 1291, column: 1, scope: !19267)
!19281 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !19282, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19284)
!19282 = !DISubroutineType(types: !19283)
!19283 = !{null, !17791}
!19284 = !{!19285}
!19285 = !DILocalVariable(name: "list", arg: 1, scope: !19281, file: !133, line: 197, type: !17791)
!19286 = !DILocation(line: 0, scope: !19281)
!19287 = !DILocation(line: 199, column: 8, scope: !19281)
!19288 = !DILocation(line: 199, column: 13, scope: !19281)
!19289 = !DILocation(line: 200, column: 8, scope: !19281)
!19290 = !DILocation(line: 200, column: 13, scope: !19281)
!19291 = !DILocation(line: 201, column: 1, scope: !19281)
!19292 = distinct !DISubprogram(name: "z_sched_init", scope: !3336, file: !3336, line: 1293, type: !333, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !2894)
!19293 = !DILocation(line: 1302, column: 2, scope: !19292)
!19294 = !DILocation(line: 1306, column: 2, scope: !19292)
!19295 = !DILocation(line: 1309, column: 1, scope: !19292)
!19296 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !3336, file: !3336, line: 1311, type: !19297, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19300)
!19297 = !DISubroutineType(types: !19298)
!19298 = !{!103, !19299}
!19299 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !3229)
!19300 = !{!19301}
!19301 = !DILocalVariable(name: "thread", arg: 1, scope: !19296, file: !3336, line: 1311, type: !19299)
!19302 = !DILocation(line: 0, scope: !19296)
!19303 = !DILocation(line: 1313, column: 22, scope: !19296)
!19304 = !DILocation(line: 1313, column: 9, scope: !19296)
!19305 = !DILocation(line: 1313, column: 2, scope: !19296)
!19306 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !3336, file: !3336, line: 1325, type: !19307, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19309)
!19307 = !DISubroutineType(types: !19308)
!19308 = !{null, !19299, !103}
!19309 = !{!19310, !19311, !19312}
!19310 = !DILocalVariable(name: "thread", arg: 1, scope: !19306, file: !3336, line: 1325, type: !19299)
!19311 = !DILocalVariable(name: "prio", arg: 2, scope: !19306, file: !3336, line: 1325, type: !103)
!19312 = !DILocalVariable(name: "th", scope: !19306, file: !3336, line: 1334, type: !3229)
!19313 = !DILocation(line: 0, scope: !19306)
!19314 = !DILocation(line: 1331, column: 2, scope: !19315)
!19315 = distinct !DILexicalBlock(scope: !19316, file: !3336, line: 1331, column: 2)
!19316 = distinct !DILexicalBlock(scope: !19317, file: !3336, line: 1331, column: 2)
!19317 = distinct !DILexicalBlock(scope: !19306, file: !3336, line: 1331, column: 2)
!19318 = !DILocation(line: 1331, column: 2, scope: !19319)
!19319 = distinct !DILexicalBlock(scope: !19315, file: !3336, line: 1331, column: 2)
!19320 = !DILocation(line: 1031, column: 3, scope: !18290, inlinedAt: !19321)
!19321 = distinct !DILocation(line: 48, column: 10, scope: !18294, inlinedAt: !19322)
!19322 = distinct !DILocation(line: 1332, column: 2, scope: !19323)
!19323 = distinct !DILexicalBlock(scope: !19324, file: !3336, line: 1332, column: 2)
!19324 = distinct !DILexicalBlock(scope: !19306, file: !3336, line: 1332, column: 2)
!19325 = !DILocation(line: 0, scope: !18290, inlinedAt: !19321)
!19326 = !DILocation(line: 48, column: 9, scope: !18294, inlinedAt: !19322)
!19327 = !DILocation(line: 1332, column: 2, scope: !19324)
!19328 = !DILocation(line: 1332, column: 2, scope: !19329)
!19329 = distinct !DILexicalBlock(scope: !19323, file: !3336, line: 1332, column: 2)
!19330 = !DILocation(line: 1336, column: 2, scope: !19306)
!19331 = !DILocation(line: 1337, column: 1, scope: !19306)
!19332 = distinct !DISubprogram(name: "k_can_yield", scope: !3336, file: !3336, line: 1384, type: !9220, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !2894)
!19333 = !DILocation(line: 1386, column: 11, scope: !19332)
!19334 = !DILocation(line: 1386, column: 29, scope: !19332)
!19335 = !DILocation(line: 1386, column: 32, scope: !19332)
!19336 = !DILocation(line: 1386, column: 46, scope: !19332)
!19337 = !DILocation(line: 1387, column: 28, scope: !19332)
!19338 = !DILocation(line: 1387, column: 4, scope: !19332)
!19339 = !DILocation(line: 1386, column: 2, scope: !19332)
!19340 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !124, file: !124, line: 989, type: !9220, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !2894)
!19341 = !DILocation(line: 993, column: 10, scope: !19340)
!19342 = !DILocation(line: 993, column: 2, scope: !19340)
!19343 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !3336, file: !3336, line: 1390, type: !333, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19344)
!19344 = !{!19345}
!19345 = !DILocalVariable(name: "key", scope: !19343, file: !3336, line: 1396, type: !17557)
!19346 = !DILocation(line: 1031, column: 3, scope: !18290, inlinedAt: !19347)
!19347 = distinct !DILocation(line: 48, column: 10, scope: !18294, inlinedAt: !19348)
!19348 = distinct !DILocation(line: 1392, column: 2, scope: !19349)
!19349 = distinct !DILexicalBlock(scope: !19350, file: !3336, line: 1392, column: 2)
!19350 = distinct !DILexicalBlock(scope: !19343, file: !3336, line: 1392, column: 2)
!19351 = !DILocation(line: 0, scope: !18290, inlinedAt: !19347)
!19352 = !DILocation(line: 48, column: 9, scope: !18294, inlinedAt: !19348)
!19353 = !DILocation(line: 1392, column: 2, scope: !19350)
!19354 = !DILocation(line: 1392, column: 2, scope: !19355)
!19355 = distinct !DILexicalBlock(scope: !19349, file: !3336, line: 1392, column: 2)
!19356 = !DILocation(line: 0, scope: !17565, inlinedAt: !19357)
!19357 = distinct !DILocation(line: 1396, column: 25, scope: !19343)
!19358 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !19359)
!19359 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !19357)
!19360 = !DILocation(line: 0, scope: !17574, inlinedAt: !19359)
!19361 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !19357)
!19362 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !19357)
!19363 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !19357)
!19364 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !19357)
!19365 = !DILocation(line: 0, scope: !19343)
!19366 = !DILocation(line: 1400, column: 18, scope: !19367)
!19367 = distinct !DILexicalBlock(scope: !19368, file: !3336, line: 1399, column: 36)
!19368 = distinct !DILexicalBlock(scope: !19343, file: !3336, line: 1398, column: 6)
!19369 = !DILocation(line: 0, scope: !17757, inlinedAt: !19370)
!19370 = distinct !DILocation(line: 1400, column: 3, scope: !19367)
!19371 = !DILocation(line: 266, column: 15, scope: !17757, inlinedAt: !19370)
!19372 = !DILocation(line: 266, column: 28, scope: !17757, inlinedAt: !19370)
!19373 = !DILocation(line: 0, scope: !17765, inlinedAt: !19374)
!19374 = distinct !DILocation(line: 268, column: 3, scope: !17769, inlinedAt: !19370)
!19375 = !DILocation(line: 234, column: 2, scope: !17765, inlinedAt: !19374)
!19376 = !DILocation(line: 1402, column: 15, scope: !19343)
!19377 = !DILocation(line: 0, scope: !17774, inlinedAt: !19378)
!19378 = distinct !DILocation(line: 1402, column: 2, scope: !19343)
!19379 = !DILocation(line: 252, column: 15, scope: !17774, inlinedAt: !19378)
!19380 = !DILocation(line: 252, column: 28, scope: !17774, inlinedAt: !19378)
!19381 = !DILocation(line: 0, scope: !17781, inlinedAt: !19382)
!19382 = distinct !DILocation(line: 254, column: 3, scope: !17785, inlinedAt: !19378)
!19383 = !DILocation(line: 0, scope: !17788, inlinedAt: !19384)
!19384 = distinct !DILocation(line: 229, column: 2, scope: !17781, inlinedAt: !19382)
!19385 = !DILocation(line: 186, column: 2, scope: !17798, inlinedAt: !19384)
!19386 = !DILocation(line: 186, column: 2, scope: !17799, inlinedAt: !19384)
!19387 = !DILocation(line: 186, column: 2, scope: !17802, inlinedAt: !19384)
!19388 = !DILocation(line: 188, column: 2, scope: !17804, inlinedAt: !19384)
!19389 = !DILocation(line: 188, column: 2, scope: !17806, inlinedAt: !19384)
!19390 = !DILocation(line: 0, scope: !17804, inlinedAt: !19384)
!19391 = !DILocation(line: 189, column: 7, scope: !17809, inlinedAt: !19384)
!19392 = !DILocation(line: 189, column: 35, scope: !17809, inlinedAt: !19384)
!19393 = !DILocation(line: 189, column: 7, scope: !17810, inlinedAt: !19384)
!19394 = !DILocation(line: 191, column: 21, scope: !17814, inlinedAt: !19384)
!19395 = !DILocation(line: 190, column: 4, scope: !17814, inlinedAt: !19384)
!19396 = !DILocation(line: 192, column: 4, scope: !17814, inlinedAt: !19384)
!19397 = distinct !{!19397, !19388, !19398}
!19398 = !DILocation(line: 194, column: 2, scope: !17804, inlinedAt: !19384)
!19399 = !DILocation(line: 196, column: 37, scope: !17788, inlinedAt: !19384)
!19400 = !DILocation(line: 196, column: 2, scope: !17788, inlinedAt: !19384)
!19401 = !DILocation(line: 197, column: 1, scope: !17788, inlinedAt: !19384)
!19402 = !DILocation(line: 1403, column: 2, scope: !19343)
!19403 = !DILocation(line: 0, scope: !18241, inlinedAt: !19404)
!19404 = distinct !DILocation(line: 1404, column: 2, scope: !19343)
!19405 = !DILocation(line: 0, scope: !18250, inlinedAt: !19406)
!19406 = distinct !DILocation(line: 195, column: 2, scope: !18241, inlinedAt: !19404)
!19407 = !DILocation(line: 225, column: 2, scope: !18257, inlinedAt: !19406)
!19408 = !DILocation(line: 225, column: 2, scope: !18258, inlinedAt: !19406)
!19409 = !DILocation(line: 225, column: 2, scope: !18261, inlinedAt: !19406)
!19410 = !DILocation(line: 196, column: 9, scope: !18241, inlinedAt: !19404)
!19411 = !DILocation(line: 1405, column: 1, scope: !19343)
!19412 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !3336, file: !3336, line: 1459, type: !19413, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19415)
!19413 = !DISubroutineType(types: !19414)
!19414 = !{!330, !18451}
!19415 = !{!19416, !19417, !19418}
!19416 = !DILocalVariable(name: "timeout", arg: 1, scope: !19412, file: !3336, line: 1459, type: !18451)
!19417 = !DILocalVariable(name: "ticks", scope: !19412, file: !3336, line: 1461, type: !104)
!19418 = !DILocalVariable(name: "ret", scope: !19412, file: !3336, line: 1480, type: !330)
!19419 = !DILocation(line: 0, scope: !19412)
!19420 = !DILocation(line: 1031, column: 3, scope: !18290, inlinedAt: !19421)
!19421 = distinct !DILocation(line: 48, column: 10, scope: !18294, inlinedAt: !19422)
!19422 = distinct !DILocation(line: 1463, column: 2, scope: !19423)
!19423 = distinct !DILexicalBlock(scope: !19424, file: !3336, line: 1463, column: 2)
!19424 = distinct !DILexicalBlock(scope: !19412, file: !3336, line: 1463, column: 2)
!19425 = !DILocation(line: 0, scope: !18290, inlinedAt: !19421)
!19426 = !DILocation(line: 48, column: 9, scope: !18294, inlinedAt: !19422)
!19427 = !DILocation(line: 1463, column: 2, scope: !19424)
!19428 = !DILocation(line: 1463, column: 2, scope: !19429)
!19429 = distinct !DILexicalBlock(scope: !19423, file: !3336, line: 1463, column: 2)
!19430 = !DILocation(line: 1468, column: 6, scope: !19431)
!19431 = distinct !DILexicalBlock(scope: !19412, file: !3336, line: 1468, column: 6)
!19432 = !DILocation(line: 1468, column: 6, scope: !19412)
!19433 = !DILocation(line: 1469, column: 20, scope: !19434)
!19434 = distinct !DILexicalBlock(scope: !19431, file: !3336, line: 1468, column: 40)
!19435 = !DILocation(line: 1469, column: 3, scope: !19434)
!19436 = !DILocation(line: 1473, column: 3, scope: !19434)
!19437 = !DILocation(line: 1478, column: 10, scope: !19412)
!19438 = !DILocation(line: 1480, column: 16, scope: !19412)
!19439 = !DILocation(line: 1485, column: 1, scope: !19412)
!19440 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4394, file: !4394, line: 310, type: !19441, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19443)
!19441 = !DISubroutineType(types: !19442)
!19442 = !{null, !19299}
!19443 = !{!19444}
!19444 = !DILocalVariable(name: "thread", arg: 1, scope: !19440, file: !4394, line: 310, type: !19299)
!19445 = !DILocation(line: 0, scope: !19440)
!19446 = !DILocation(line: 319, column: 2, scope: !19447)
!19447 = distinct !DILexicalBlock(scope: !19440, file: !4394, line: 319, column: 2)
!19448 = !{i64 2152267227}
!19449 = !DILocation(line: 320, column: 2, scope: !19440)
!19450 = !DILocation(line: 321, column: 1, scope: !19440)
!19451 = distinct !DISubprogram(name: "z_tick_sleep", scope: !3336, file: !3336, line: 1415, type: !19452, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19454)
!19452 = !DISubroutineType(types: !19453)
!19453 = !{!330, !104}
!19454 = !{!19455, !19456, !19457, !19458}
!19455 = !DILocalVariable(name: "ticks", arg: 1, scope: !19451, file: !3336, line: 1415, type: !104)
!19456 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !19451, file: !3336, line: 1418, type: !108)
!19457 = !DILocalVariable(name: "timeout", scope: !19451, file: !3336, line: 1430, type: !18451)
!19458 = !DILocalVariable(name: "key", scope: !19451, file: !3336, line: 1437, type: !17557)
!19459 = !DILocation(line: 0, scope: !19451)
!19460 = !DILocation(line: 1031, column: 3, scope: !18290, inlinedAt: !19461)
!19461 = distinct !DILocation(line: 48, column: 10, scope: !18294, inlinedAt: !19462)
!19462 = distinct !DILocation(line: 1420, column: 2, scope: !19463)
!19463 = distinct !DILexicalBlock(scope: !19464, file: !3336, line: 1420, column: 2)
!19464 = distinct !DILexicalBlock(scope: !19451, file: !3336, line: 1420, column: 2)
!19465 = !DILocation(line: 0, scope: !18290, inlinedAt: !19461)
!19466 = !DILocation(line: 48, column: 9, scope: !18294, inlinedAt: !19462)
!19467 = !DILocation(line: 1420, column: 2, scope: !19464)
!19468 = !DILocation(line: 1420, column: 2, scope: !19469)
!19469 = distinct !DILexicalBlock(scope: !19463, file: !3336, line: 1420, column: 2)
!19470 = !DILocation(line: 1425, column: 12, scope: !19471)
!19471 = distinct !DILexicalBlock(scope: !19451, file: !3336, line: 1425, column: 6)
!19472 = !DILocation(line: 1425, column: 6, scope: !19451)
!19473 = !DILocation(line: 1426, column: 3, scope: !19474)
!19474 = distinct !DILexicalBlock(scope: !19471, file: !3336, line: 1425, column: 18)
!19475 = !DILocation(line: 1427, column: 3, scope: !19474)
!19476 = !DILocation(line: 1431, column: 24, scope: !19477)
!19477 = distinct !DILexicalBlock(scope: !19451, file: !3336, line: 1431, column: 6)
!19478 = !DILocation(line: 1431, column: 6, scope: !19451)
!19479 = !DILocation(line: 1432, column: 35, scope: !19480)
!19480 = distinct !DILexicalBlock(scope: !19477, file: !3336, line: 1431, column: 30)
!19481 = !DILocation(line: 1432, column: 27, scope: !19480)
!19482 = !DILocation(line: 1433, column: 2, scope: !19480)
!19483 = !DILocation(line: 1434, column: 27, scope: !19484)
!19484 = distinct !DILexicalBlock(scope: !19477, file: !3336, line: 1433, column: 9)
!19485 = !DILocation(line: 0, scope: !19477)
!19486 = !DILocation(line: 0, scope: !17565, inlinedAt: !19487)
!19487 = distinct !DILocation(line: 1437, column: 25, scope: !19451)
!19488 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !19489)
!19489 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !19487)
!19490 = !DILocation(line: 0, scope: !17574, inlinedAt: !19489)
!19491 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !19487)
!19492 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !19487)
!19493 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !19487)
!19494 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !19487)
!19495 = !DILocation(line: 1440, column: 20, scope: !19451)
!19496 = !DILocation(line: 1440, column: 18, scope: !19451)
!19497 = !DILocation(line: 1442, column: 2, scope: !19451)
!19498 = !DILocation(line: 1443, column: 23, scope: !19451)
!19499 = !DILocation(line: 1443, column: 2, scope: !19451)
!19500 = !DILocation(line: 1444, column: 29, scope: !19451)
!19501 = !DILocation(line: 1444, column: 2, scope: !19451)
!19502 = !DILocation(line: 0, scope: !18241, inlinedAt: !19503)
!19503 = distinct !DILocation(line: 1446, column: 8, scope: !19451)
!19504 = !DILocation(line: 0, scope: !18250, inlinedAt: !19505)
!19505 = distinct !DILocation(line: 195, column: 2, scope: !18241, inlinedAt: !19503)
!19506 = !DILocation(line: 225, column: 2, scope: !18257, inlinedAt: !19505)
!19507 = !DILocation(line: 225, column: 2, scope: !18258, inlinedAt: !19505)
!19508 = !DILocation(line: 225, column: 2, scope: !18261, inlinedAt: !19505)
!19509 = !DILocation(line: 196, column: 9, scope: !18241, inlinedAt: !19503)
!19510 = !DILocation(line: 1448, column: 2, scope: !19511)
!19511 = distinct !DILexicalBlock(scope: !19512, file: !3336, line: 1448, column: 2)
!19512 = distinct !DILexicalBlock(scope: !19451, file: !3336, line: 1448, column: 2)
!19513 = !DILocation(line: 1448, column: 2, scope: !19512)
!19514 = !DILocation(line: 1448, column: 2, scope: !19515)
!19515 = distinct !DILexicalBlock(scope: !19511, file: !3336, line: 1448, column: 2)
!19516 = !DILocation(line: 1450, column: 10, scope: !19451)
!19517 = !DILocation(line: 1450, column: 45, scope: !19451)
!19518 = !DILocation(line: 1450, column: 43, scope: !19451)
!19519 = !DILocation(line: 1451, column: 6, scope: !19451)
!19520 = !DILocation(line: 1457, column: 1, scope: !19451)
!19521 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !4352, file: !4352, line: 1103, type: !4353, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19522)
!19522 = !{!19523}
!19523 = !DILocalVariable(name: "t", arg: 1, scope: !19521, file: !4352, line: 1103, type: !109)
!19524 = !DILocation(line: 0, scope: !19521)
!19525 = !DILocation(line: 0, scope: !17625, inlinedAt: !19526)
!19526 = distinct !DILocation(line: 1106, column: 9, scope: !19521)
!19527 = !DILocation(line: 139, column: 13, scope: !19528, inlinedAt: !19526)
!19528 = distinct !DILexicalBlock(scope: !19529, file: !4352, line: 138, column: 10)
!19529 = distinct !DILexicalBlock(scope: !19530, file: !4352, line: 136, column: 7)
!19530 = distinct !DILexicalBlock(scope: !17646, file: !4352, line: 134, column: 17)
!19531 = !DILocation(line: 1106, column: 2, scope: !19521)
!19532 = distinct !DISubprogram(name: "k_yield", scope: !4394, file: !4394, line: 140, type: !333, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !2894)
!19533 = !DILocation(line: 148, column: 2, scope: !19534)
!19534 = distinct !DILexicalBlock(scope: !19532, file: !4394, line: 148, column: 2)
!19535 = !{i64 2152266547}
!19536 = !DILocation(line: 149, column: 2, scope: !19532)
!19537 = !DILocation(line: 150, column: 1, scope: !19532)
!19538 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !3336, file: !3336, line: 1495, type: !19539, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19541)
!19539 = !DISubroutineType(types: !19540)
!19540 = !{!330, !103}
!19541 = !{!19542, !19543}
!19542 = !DILocalVariable(name: "us", arg: 1, scope: !19538, file: !3336, line: 1495, type: !103)
!19543 = !DILocalVariable(name: "ticks", scope: !19538, file: !3336, line: 1497, type: !330)
!19544 = !DILocation(line: 0, scope: !19538)
!19545 = !DILocation(line: 1501, column: 31, scope: !19538)
!19546 = !DILocation(line: 1501, column: 10, scope: !19538)
!19547 = !DILocation(line: 1502, column: 23, scope: !19538)
!19548 = !DILocation(line: 1502, column: 10, scope: !19538)
!19549 = !DILocation(line: 1506, column: 31, scope: !19538)
!19550 = !DILocation(line: 1506, column: 9, scope: !19538)
!19551 = !DILocation(line: 1506, column: 2, scope: !19538)
!19552 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !4352, file: !4352, line: 571, type: !4353, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19553)
!19553 = !{!19554}
!19554 = !DILocalVariable(name: "t", arg: 1, scope: !19552, file: !4352, line: 571, type: !109)
!19555 = !DILocation(line: 0, scope: !19552)
!19556 = !DILocation(line: 0, scope: !17625, inlinedAt: !19557)
!19557 = distinct !DILocation(line: 574, column: 9, scope: !19552)
!19558 = !DILocation(line: 135, column: 5, scope: !19530, inlinedAt: !19557)
!19559 = !DILocation(line: 139, column: 13, scope: !19528, inlinedAt: !19557)
!19560 = !DILocation(line: 574, column: 2, scope: !19552)
!19561 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !4352, file: !4352, line: 1187, type: !4353, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19562)
!19562 = !{!19563}
!19563 = !DILocalVariable(name: "t", arg: 1, scope: !19561, file: !4352, line: 1187, type: !109)
!19564 = !DILocation(line: 0, scope: !19561)
!19565 = !DILocation(line: 0, scope: !17625, inlinedAt: !19566)
!19566 = distinct !DILocation(line: 1190, column: 9, scope: !19561)
!19567 = !DILocation(line: 145, column: 13, scope: !19568, inlinedAt: !19566)
!19568 = distinct !DILexicalBlock(scope: !17643, file: !4352, line: 144, column: 10)
!19569 = !DILocation(line: 1190, column: 2, scope: !19561)
!19570 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !3336, file: !3336, line: 1517, type: !19441, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19571)
!19571 = !{!19572}
!19572 = !DILocalVariable(name: "thread", arg: 1, scope: !19570, file: !3336, line: 1517, type: !19299)
!19573 = !DILocation(line: 0, scope: !19570)
!19574 = !DILocation(line: 1521, column: 6, scope: !19575)
!19575 = distinct !DILexicalBlock(scope: !19570, file: !3336, line: 1521, column: 6)
!19576 = !DILocation(line: 1521, column: 6, scope: !19570)
!19577 = !DILocation(line: 1525, column: 6, scope: !19578)
!19578 = distinct !DILexicalBlock(scope: !19570, file: !3336, line: 1525, column: 6)
!19579 = !DILocation(line: 1525, column: 37, scope: !19578)
!19580 = !DILocation(line: 1525, column: 6, scope: !19570)
!19581 = !DILocation(line: 1527, column: 20, scope: !19582)
!19582 = distinct !DILexicalBlock(scope: !19583, file: !3336, line: 1527, column: 7)
!19583 = distinct !DILexicalBlock(scope: !19578, file: !3336, line: 1525, column: 42)
!19584 = !DILocation(line: 1527, column: 33, scope: !19582)
!19585 = !DILocation(line: 1527, column: 7, scope: !19583)
!19586 = !DILocation(line: 1532, column: 2, scope: !19570)
!19587 = !DILocation(line: 1533, column: 2, scope: !19570)
!19588 = !DILocation(line: 1031, column: 3, scope: !18290, inlinedAt: !19589)
!19589 = distinct !DILocation(line: 48, column: 10, scope: !18294, inlinedAt: !19590)
!19590 = distinct !DILocation(line: 1537, column: 7, scope: !19591)
!19591 = distinct !DILexicalBlock(scope: !19570, file: !3336, line: 1537, column: 6)
!19592 = !DILocation(line: 0, scope: !18290, inlinedAt: !19589)
!19593 = !DILocation(line: 48, column: 9, scope: !18294, inlinedAt: !19590)
!19594 = !DILocation(line: 1537, column: 6, scope: !19570)
!19595 = !DILocation(line: 1538, column: 3, scope: !19596)
!19596 = distinct !DILexicalBlock(scope: !19591, file: !3336, line: 1537, column: 25)
!19597 = !DILocation(line: 1539, column: 2, scope: !19596)
!19598 = !DILocation(line: 1540, column: 1, scope: !19570)
!19599 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !15461, file: !15461, line: 101, type: !17706, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19600)
!19600 = !{!19601}
!19601 = !DILocalVariable(name: "thread", arg: 1, scope: !19599, file: !15461, line: 101, type: !3229)
!19602 = !DILocation(line: 0, scope: !19599)
!19603 = !DILocation(line: 103, column: 23, scope: !19599)
!19604 = !DILocation(line: 103, column: 36, scope: !19599)
!19605 = !DILocation(line: 103, column: 55, scope: !19599)
!19606 = !DILocation(line: 103, column: 2, scope: !19599)
!19607 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !3336, file: !3336, line: 1567, type: !19608, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19610)
!19608 = !DISubroutineType(types: !19609)
!19609 = !{!19299}
!19610 = !{!19611}
!19611 = !DILocalVariable(name: "ret", scope: !19607, file: !3336, line: 1577, type: !19299)
!19612 = !DILocation(line: 1577, column: 30, scope: !19607)
!19613 = !DILocation(line: 0, scope: !19607)
!19614 = !DILocation(line: 1582, column: 2, scope: !19607)
!19615 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !3336, file: !3336, line: 1593, type: !9522, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !2894)
!19616 = !DILocation(line: 1031, column: 3, scope: !18290, inlinedAt: !19617)
!19617 = distinct !DILocation(line: 48, column: 10, scope: !18294, inlinedAt: !19618)
!19618 = distinct !DILocation(line: 1595, column: 10, scope: !19615)
!19619 = !DILocation(line: 0, scope: !18290, inlinedAt: !19617)
!19620 = !DILocation(line: 48, column: 9, scope: !18294, inlinedAt: !19618)
!19621 = !DILocation(line: 1595, column: 27, scope: !19615)
!19622 = !DILocation(line: 1595, column: 41, scope: !19615)
!19623 = !DILocation(line: 1595, column: 30, scope: !19615)
!19624 = !DILocation(line: 1595, column: 2, scope: !19615)
!19625 = distinct !DISubprogram(name: "z_thread_abort", scope: !3336, file: !3336, line: 1725, type: !17523, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19626)
!19626 = !{!19627, !19628}
!19627 = !DILocalVariable(name: "thread", arg: 1, scope: !19625, file: !3336, line: 1725, type: !3229)
!19628 = !DILocalVariable(name: "key", scope: !19625, file: !3336, line: 1727, type: !17557)
!19629 = !DILocation(line: 0, scope: !19625)
!19630 = !DILocation(line: 0, scope: !17565, inlinedAt: !19631)
!19631 = distinct !DILocation(line: 1727, column: 25, scope: !19625)
!19632 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !19633)
!19633 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !19631)
!19634 = !DILocation(line: 0, scope: !17574, inlinedAt: !19633)
!19635 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !19631)
!19636 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !19631)
!19637 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !19631)
!19638 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !19631)
!19639 = !DILocation(line: 1729, column: 20, scope: !19640)
!19640 = distinct !DILexicalBlock(scope: !19625, file: !3336, line: 1729, column: 6)
!19641 = !DILocation(line: 1729, column: 33, scope: !19640)
!19642 = !DILocation(line: 1729, column: 48, scope: !19640)
!19643 = !DILocation(line: 1729, column: 6, scope: !19625)
!19644 = !DILocation(line: 0, scope: !17599, inlinedAt: !19645)
!19645 = distinct !DILocation(line: 1730, column: 3, scope: !19646)
!19646 = distinct !DILexicalBlock(scope: !19640, file: !3336, line: 1729, column: 54)
!19647 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !19645)
!19648 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !19645)
!19649 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !19645)
!19650 = !DILocation(line: 0, scope: !17613, inlinedAt: !19651)
!19651 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !19645)
!19652 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !19651)
!19653 = !DILocation(line: 1731, column: 3, scope: !19654)
!19654 = distinct !DILexicalBlock(scope: !19655, file: !3336, line: 1731, column: 3)
!19655 = distinct !DILexicalBlock(scope: !19656, file: !3336, line: 1731, column: 3)
!19656 = distinct !DILexicalBlock(scope: !19646, file: !3336, line: 1731, column: 3)
!19657 = !DILocation(line: 1736, column: 20, scope: !19658)
!19658 = distinct !DILexicalBlock(scope: !19625, file: !3336, line: 1736, column: 6)
!19659 = !DILocation(line: 1736, column: 33, scope: !19658)
!19660 = !DILocation(line: 1736, column: 49, scope: !19658)
!19661 = !DILocation(line: 1736, column: 6, scope: !19625)
!19662 = !DILocation(line: 0, scope: !17599, inlinedAt: !19663)
!19663 = distinct !DILocation(line: 1737, column: 3, scope: !19664)
!19664 = distinct !DILexicalBlock(scope: !19658, file: !3336, line: 1736, column: 56)
!19665 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !19663)
!19666 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !19663)
!19667 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !19663)
!19668 = !DILocation(line: 0, scope: !17613, inlinedAt: !19669)
!19669 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !19663)
!19670 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !19669)
!19671 = !DILocation(line: 1738, column: 3, scope: !19664)
!19672 = !DILocation(line: 1775, column: 2, scope: !19625)
!19673 = !DILocation(line: 1776, column: 16, scope: !19674)
!19674 = distinct !DILexicalBlock(scope: !19625, file: !3336, line: 1776, column: 6)
!19675 = !DILocation(line: 1776, column: 13, scope: !19674)
!19676 = !DILocation(line: 1776, column: 25, scope: !19674)
!19677 = !DILocation(line: 1031, column: 3, scope: !18290, inlinedAt: !19678)
!19678 = distinct !DILocation(line: 48, column: 10, scope: !18294, inlinedAt: !19679)
!19679 = distinct !DILocation(line: 1776, column: 29, scope: !19674)
!19680 = !DILocation(line: 0, scope: !18290, inlinedAt: !19678)
!19681 = !DILocation(line: 48, column: 9, scope: !18294, inlinedAt: !19679)
!19682 = !DILocation(line: 1776, column: 6, scope: !19625)
!19683 = !DILocation(line: 0, scope: !18241, inlinedAt: !19684)
!19684 = distinct !DILocation(line: 1777, column: 3, scope: !19685)
!19685 = distinct !DILexicalBlock(scope: !19674, file: !3336, line: 1776, column: 47)
!19686 = !DILocation(line: 0, scope: !18250, inlinedAt: !19687)
!19687 = distinct !DILocation(line: 195, column: 2, scope: !18241, inlinedAt: !19684)
!19688 = !DILocation(line: 225, column: 2, scope: !18257, inlinedAt: !19687)
!19689 = !DILocation(line: 225, column: 2, scope: !18258, inlinedAt: !19687)
!19690 = !DILocation(line: 225, column: 2, scope: !18261, inlinedAt: !19687)
!19691 = !DILocation(line: 196, column: 9, scope: !18241, inlinedAt: !19684)
!19692 = !DILocation(line: 1778, column: 3, scope: !19693)
!19693 = distinct !DILexicalBlock(scope: !19694, file: !3336, line: 1778, column: 3)
!19694 = distinct !DILexicalBlock(scope: !19695, file: !3336, line: 1778, column: 3)
!19695 = distinct !DILexicalBlock(scope: !19685, file: !3336, line: 1778, column: 3)
!19696 = !DILocation(line: 0, scope: !17599, inlinedAt: !19697)
!19697 = distinct !DILocation(line: 1780, column: 2, scope: !19625)
!19698 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !19697)
!19699 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !19697)
!19700 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !19697)
!19701 = !DILocation(line: 0, scope: !17613, inlinedAt: !19702)
!19702 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !19697)
!19703 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !19702)
!19704 = !DILocation(line: 1781, column: 1, scope: !19625)
!19705 = distinct !DISubprogram(name: "end_thread", scope: !3336, file: !3336, line: 1690, type: !17523, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19706)
!19706 = !{!19707}
!19707 = !DILocalVariable(name: "thread", arg: 1, scope: !19705, file: !3336, line: 1690, type: !3229)
!19708 = !DILocation(line: 0, scope: !19705)
!19709 = !DILocation(line: 1695, column: 20, scope: !19710)
!19710 = distinct !DILexicalBlock(scope: !19705, file: !3336, line: 1695, column: 6)
!19711 = !DILocation(line: 1695, column: 33, scope: !19710)
!19712 = !DILocation(line: 1695, column: 49, scope: !19710)
!19713 = !DILocation(line: 1695, column: 6, scope: !19705)
!19714 = !DILocation(line: 1697, column: 29, scope: !19715)
!19715 = distinct !DILexicalBlock(scope: !19710, file: !3336, line: 1695, column: 56)
!19716 = !DILocation(line: 1698, column: 7, scope: !19717)
!19717 = distinct !DILexicalBlock(scope: !19715, file: !3336, line: 1698, column: 7)
!19718 = !DILocation(line: 1698, column: 7, scope: !19715)
!19719 = !DILocation(line: 0, scope: !17757, inlinedAt: !19720)
!19720 = distinct !DILocation(line: 1699, column: 4, scope: !19721)
!19721 = distinct !DILexicalBlock(scope: !19717, file: !3336, line: 1698, column: 35)
!19722 = !DILocation(line: 266, column: 28, scope: !17757, inlinedAt: !19720)
!19723 = !DILocation(line: 0, scope: !17765, inlinedAt: !19724)
!19724 = distinct !DILocation(line: 268, column: 3, scope: !17769, inlinedAt: !19720)
!19725 = !DILocation(line: 234, column: 2, scope: !17765, inlinedAt: !19724)
!19726 = !DILocation(line: 1700, column: 3, scope: !19721)
!19727 = !DILocation(line: 1701, column: 20, scope: !19728)
!19728 = distinct !DILexicalBlock(scope: !19715, file: !3336, line: 1701, column: 7)
!19729 = !DILocation(line: 1701, column: 30, scope: !19728)
!19730 = !DILocation(line: 1701, column: 7, scope: !19715)
!19731 = !DILocation(line: 1702, column: 4, scope: !19732)
!19732 = distinct !DILexicalBlock(scope: !19728, file: !3336, line: 1701, column: 39)
!19733 = !DILocation(line: 1703, column: 3, scope: !19732)
!19734 = !DILocation(line: 1704, column: 9, scope: !19715)
!19735 = !DILocation(line: 1705, column: 23, scope: !19715)
!19736 = !DILocation(line: 1705, column: 3, scope: !19715)
!19737 = !DILocation(line: 1706, column: 3, scope: !19715)
!19738 = !DILocation(line: 1722, column: 2, scope: !19715)
!19739 = !DILocation(line: 1723, column: 1, scope: !19705)
!19740 = distinct !DISubprogram(name: "unpend_all", scope: !3336, file: !3336, line: 1674, type: !19741, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19743)
!19741 = !DISubroutineType(types: !19742)
!19742 = !{null, !3260}
!19743 = !{!19744, !19745}
!19744 = !DILocalVariable(name: "wait_q", arg: 1, scope: !19740, file: !3336, line: 1674, type: !3260)
!19745 = !DILocalVariable(name: "thread", scope: !19740, file: !3336, line: 1676, type: !3229)
!19746 = !DILocation(line: 0, scope: !19740)
!19747 = !DILocation(line: 1678, column: 19, scope: !19740)
!19748 = !DILocation(line: 1678, column: 41, scope: !19740)
!19749 = !DILocation(line: 1678, column: 2, scope: !19740)
!19750 = !DILocation(line: 1679, column: 3, scope: !19751)
!19751 = distinct !DILexicalBlock(scope: !19740, file: !3336, line: 1678, column: 50)
!19752 = !DILocation(line: 1680, column: 9, scope: !19751)
!19753 = !DILocalVariable(name: "thread", arg: 1, scope: !19754, file: !15481, line: 65, type: !3229)
!19754 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !15481, file: !15481, line: 65, type: !19755, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19757)
!19755 = !DISubroutineType(types: !19756)
!19756 = !{null, !3229, !32}
!19757 = !{!19753, !19758}
!19758 = !DILocalVariable(name: "value", arg: 2, scope: !19754, file: !15481, line: 65, type: !32)
!19759 = !DILocation(line: 0, scope: !19754, inlinedAt: !19760)
!19760 = distinct !DILocation(line: 1681, column: 3, scope: !19751)
!19761 = !DILocation(line: 67, column: 15, scope: !19754, inlinedAt: !19760)
!19762 = !DILocation(line: 67, column: 33, scope: !19754, inlinedAt: !19760)
!19763 = !DILocation(line: 1682, column: 3, scope: !19751)
!19764 = distinct !{!19764, !19749, !19765}
!19765 = !DILocation(line: 1683, column: 2, scope: !19740)
!19766 = !DILocation(line: 1684, column: 1, scope: !19740)
!19767 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !3336, file: !3336, line: 1794, type: !19768, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19770)
!19768 = !DISubroutineType(types: !19769)
!19769 = !{!103, !3229, !18451}
!19770 = !{!19771, !19772, !19773, !19774}
!19771 = !DILocalVariable(name: "thread", arg: 1, scope: !19767, file: !3336, line: 1794, type: !3229)
!19772 = !DILocalVariable(name: "timeout", arg: 2, scope: !19767, file: !3336, line: 1794, type: !18451)
!19773 = !DILocalVariable(name: "key", scope: !19767, file: !3336, line: 1796, type: !17557)
!19774 = !DILocalVariable(name: "ret", scope: !19767, file: !3336, line: 1797, type: !103)
!19775 = !DILocation(line: 0, scope: !19767)
!19776 = !DILocation(line: 0, scope: !17565, inlinedAt: !19777)
!19777 = distinct !DILocation(line: 1796, column: 25, scope: !19767)
!19778 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !19779)
!19779 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !19777)
!19780 = !DILocation(line: 0, scope: !17574, inlinedAt: !19779)
!19781 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !19777)
!19782 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !19777)
!19783 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !19777)
!19784 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !19777)
!19785 = !DILocation(line: 1801, column: 20, scope: !19786)
!19786 = distinct !DILexicalBlock(scope: !19767, file: !3336, line: 1801, column: 6)
!19787 = !DILocation(line: 1801, column: 33, scope: !19786)
!19788 = !DILocation(line: 1801, column: 49, scope: !19786)
!19789 = !DILocation(line: 1801, column: 6, scope: !19767)
!19790 = !DILocation(line: 1803, column: 13, scope: !19791)
!19791 = distinct !DILexicalBlock(scope: !19786, file: !3336, line: 1803, column: 13)
!19792 = !DILocation(line: 1803, column: 13, scope: !19786)
!19793 = !DILocation(line: 1805, column: 24, scope: !19794)
!19794 = distinct !DILexicalBlock(scope: !19791, file: !3336, line: 1805, column: 13)
!19795 = !DILocation(line: 1805, column: 21, scope: !19794)
!19796 = !DILocation(line: 1805, column: 34, scope: !19794)
!19797 = !DILocation(line: 1806, column: 20, scope: !19794)
!19798 = !DILocation(line: 1806, column: 44, scope: !19794)
!19799 = !DILocation(line: 1806, column: 30, scope: !19794)
!19800 = !DILocation(line: 1805, column: 13, scope: !19791)
!19801 = !DILocation(line: 1031, column: 3, scope: !18290, inlinedAt: !19802)
!19802 = distinct !DILocation(line: 48, column: 10, scope: !18294, inlinedAt: !19803)
!19803 = distinct !DILocation(line: 1809, column: 3, scope: !19804)
!19804 = distinct !DILexicalBlock(scope: !19805, file: !3336, line: 1809, column: 3)
!19805 = distinct !DILexicalBlock(scope: !19806, file: !3336, line: 1809, column: 3)
!19806 = distinct !DILexicalBlock(scope: !19794, file: !3336, line: 1808, column: 9)
!19807 = !DILocation(line: 0, scope: !18290, inlinedAt: !19802)
!19808 = !DILocation(line: 48, column: 9, scope: !18294, inlinedAt: !19803)
!19809 = !DILocation(line: 1809, column: 3, scope: !19805)
!19810 = !DILocation(line: 1809, column: 3, scope: !19811)
!19811 = distinct !DILexicalBlock(scope: !19804, file: !3336, line: 1809, column: 3)
!19812 = !DILocation(line: 1810, column: 23, scope: !19806)
!19813 = !DILocation(line: 1810, column: 42, scope: !19806)
!19814 = !DILocation(line: 1810, column: 3, scope: !19806)
!19815 = !DILocation(line: 1811, column: 22, scope: !19806)
!19816 = !DILocation(line: 1811, column: 3, scope: !19806)
!19817 = !DILocation(line: 0, scope: !18241, inlinedAt: !19818)
!19818 = distinct !DILocation(line: 1814, column: 9, scope: !19806)
!19819 = !DILocation(line: 0, scope: !18250, inlinedAt: !19820)
!19820 = distinct !DILocation(line: 195, column: 2, scope: !18241, inlinedAt: !19818)
!19821 = !DILocation(line: 225, column: 2, scope: !18257, inlinedAt: !19820)
!19822 = !DILocation(line: 225, column: 2, scope: !18258, inlinedAt: !19820)
!19823 = !DILocation(line: 225, column: 2, scope: !18261, inlinedAt: !19820)
!19824 = !DILocation(line: 196, column: 9, scope: !18241, inlinedAt: !19818)
!19825 = !DILocation(line: 1817, column: 3, scope: !19806)
!19826 = !DILocation(line: 0, scope: !19786)
!19827 = !DILocation(line: 0, scope: !17599, inlinedAt: !19828)
!19828 = distinct !DILocation(line: 1822, column: 2, scope: !19767)
!19829 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !19828)
!19830 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !19828)
!19831 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !19828)
!19832 = !DILocation(line: 0, scope: !17613, inlinedAt: !19833)
!19833 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !19828)
!19834 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !19833)
!19835 = !DILocation(line: 1823, column: 2, scope: !19767)
!19836 = !DILocation(line: 1824, column: 1, scope: !19767)
!19837 = distinct !DISubprogram(name: "z_sched_wake", scope: !3336, file: !3336, line: 1882, type: !19838, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19840)
!19838 = !DISubroutineType(types: !19839)
!19839 = !{!119, !3260, !103, !102}
!19840 = !{!19841, !19842, !19843, !19844, !19845, !19846, !19848}
!19841 = !DILocalVariable(name: "wait_q", arg: 1, scope: !19837, file: !3336, line: 1882, type: !3260)
!19842 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !19837, file: !3336, line: 1882, type: !103)
!19843 = !DILocalVariable(name: "swap_data", arg: 3, scope: !19837, file: !3336, line: 1882, type: !102)
!19844 = !DILocalVariable(name: "thread", scope: !19837, file: !3336, line: 1884, type: !3229)
!19845 = !DILocalVariable(name: "ret", scope: !19837, file: !3336, line: 1885, type: !119)
!19846 = !DILocalVariable(name: "__i", scope: !19847, file: !3336, line: 1887, type: !17557)
!19847 = distinct !DILexicalBlock(scope: !19837, file: !3336, line: 1887, column: 2)
!19848 = !DILocalVariable(name: "__key", scope: !19847, file: !3336, line: 1887, type: !17557)
!19849 = !DILocation(line: 0, scope: !19837)
!19850 = !DILocation(line: 0, scope: !19847)
!19851 = !DILocation(line: 0, scope: !17565, inlinedAt: !19852)
!19852 = distinct !DILocation(line: 1887, column: 2, scope: !19847)
!19853 = !DILocation(line: 55, column: 2, scope: !17574, inlinedAt: !19854)
!19854 = distinct !DILocation(line: 145, column: 10, scope: !17565, inlinedAt: !19852)
!19855 = !DILocation(line: 0, scope: !17574, inlinedAt: !19854)
!19856 = !DILocation(line: 148, column: 2, scope: !17582, inlinedAt: !19852)
!19857 = !DILocation(line: 148, column: 2, scope: !17583, inlinedAt: !19852)
!19858 = !DILocation(line: 148, column: 2, scope: !17586, inlinedAt: !19852)
!19859 = !DILocation(line: 160, column: 2, scope: !17565, inlinedAt: !19852)
!19860 = !DILocation(line: 1888, column: 12, scope: !19861)
!19861 = distinct !DILexicalBlock(scope: !19862, file: !3336, line: 1887, column: 26)
!19862 = distinct !DILexicalBlock(scope: !19847, file: !3336, line: 1887, column: 2)
!19863 = !DILocation(line: 1890, column: 14, scope: !19864)
!19864 = distinct !DILexicalBlock(scope: !19861, file: !3336, line: 1890, column: 7)
!19865 = !DILocation(line: 1890, column: 7, scope: !19861)
!19866 = !DILocalVariable(name: "thread", arg: 1, scope: !19867, file: !15952, line: 134, type: !3229)
!19867 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15952, file: !15952, line: 134, type: !19868, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19870)
!19868 = !DISubroutineType(types: !19869)
!19869 = !{null, !3229, !32, !102}
!19870 = !{!19866, !19871, !19872}
!19871 = !DILocalVariable(name: "value", arg: 2, scope: !19867, file: !15952, line: 135, type: !32)
!19872 = !DILocalVariable(name: "data", arg: 3, scope: !19867, file: !15952, line: 136, type: !102)
!19873 = !DILocation(line: 0, scope: !19867, inlinedAt: !19874)
!19874 = distinct !DILocation(line: 1891, column: 4, scope: !19875)
!19875 = distinct !DILexicalBlock(scope: !19864, file: !3336, line: 1890, column: 23)
!19876 = !DILocation(line: 0, scope: !19754, inlinedAt: !19877)
!19877 = distinct !DILocation(line: 138, column: 2, scope: !19867, inlinedAt: !19874)
!19878 = !DILocation(line: 67, column: 15, scope: !19754, inlinedAt: !19877)
!19879 = !DILocation(line: 67, column: 33, scope: !19754, inlinedAt: !19877)
!19880 = !DILocation(line: 139, column: 15, scope: !19867, inlinedAt: !19874)
!19881 = !DILocation(line: 139, column: 25, scope: !19867, inlinedAt: !19874)
!19882 = !DILocation(line: 1894, column: 4, scope: !19875)
!19883 = !DILocation(line: 1895, column: 10, scope: !19875)
!19884 = !DILocation(line: 1896, column: 4, scope: !19875)
!19885 = !DILocation(line: 1898, column: 3, scope: !19875)
!19886 = !DILocation(line: 0, scope: !17599, inlinedAt: !19887)
!19887 = distinct !DILocation(line: 1887, column: 2, scope: !19862)
!19888 = !DILocation(line: 194, column: 2, scope: !17607, inlinedAt: !19887)
!19889 = !DILocation(line: 194, column: 2, scope: !17608, inlinedAt: !19887)
!19890 = !DILocation(line: 194, column: 2, scope: !17611, inlinedAt: !19887)
!19891 = !DILocation(line: 0, scope: !17613, inlinedAt: !19892)
!19892 = distinct !DILocation(line: 215, column: 2, scope: !17599, inlinedAt: !19887)
!19893 = !DILocation(line: 95, column: 2, scope: !17613, inlinedAt: !19892)
!19894 = !DILocation(line: 1901, column: 2, scope: !19837)
!19895 = distinct !DISubprogram(name: "z_sched_wait", scope: !3336, file: !3336, line: 1904, type: !19896, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !19898)
!19896 = !DISubroutineType(types: !19897)
!19897 = !{!103, !17568, !17557, !3260, !18451, !1557}
!19898 = !{!19899, !19900, !19901, !19902, !19903, !19904}
!19899 = !DILocalVariable(name: "lock", arg: 1, scope: !19895, file: !3336, line: 1904, type: !17568)
!19900 = !DILocalVariable(name: "key", arg: 2, scope: !19895, file: !3336, line: 1904, type: !17557)
!19901 = !DILocalVariable(name: "wait_q", arg: 3, scope: !19895, file: !3336, line: 1905, type: !3260)
!19902 = !DILocalVariable(name: "timeout", arg: 4, scope: !19895, file: !3336, line: 1905, type: !18451)
!19903 = !DILocalVariable(name: "data", arg: 5, scope: !19895, file: !3336, line: 1905, type: !1557)
!19904 = !DILocalVariable(name: "ret", scope: !19895, file: !3336, line: 1907, type: !103)
!19905 = !DILocation(line: 0, scope: !19895)
!19906 = !DILocation(line: 1907, column: 12, scope: !19895)
!19907 = !DILocation(line: 1909, column: 11, scope: !19908)
!19908 = distinct !DILexicalBlock(scope: !19895, file: !3336, line: 1909, column: 6)
!19909 = !DILocation(line: 1909, column: 6, scope: !19895)
!19910 = !DILocation(line: 1910, column: 11, scope: !19911)
!19911 = distinct !DILexicalBlock(scope: !19908, file: !3336, line: 1909, column: 20)
!19912 = !DILocation(line: 1910, column: 26, scope: !19911)
!19913 = !DILocation(line: 1910, column: 9, scope: !19911)
!19914 = !DILocation(line: 1911, column: 2, scope: !19911)
!19915 = !DILocation(line: 1912, column: 2, scope: !19895)
!19916 = distinct !DISubprogram(name: "z_data_copy", scope: !19917, file: !19917, line: 22, type: !333, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4066, retainedNodes: !2894)
!19917 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19918 = !DILocation(line: 24, column: 2, scope: !19916)
!19919 = !DILocation(line: 27, column: 2, scope: !19916)
!19920 = !DILocation(line: 71, column: 1, scope: !19916)
!19921 = distinct !DISubprogram(name: "z_add_timeout", scope: !3373, file: !3373, line: 88, type: !19922, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !19928)
!19922 = !DISubroutineType(types: !19923)
!19923 = !{null, !3346, !3365, !19924}
!19924 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !19925)
!19925 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !19926)
!19926 = !{!19927}
!19927 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !19925, file: !105, line: 66, baseType: !104, size: 64)
!19928 = !{!19929, !19930, !19931, !19932, !19938, !19939, !19942, !19945}
!19929 = !DILocalVariable(name: "to", arg: 1, scope: !19921, file: !3373, line: 88, type: !3346)
!19930 = !DILocalVariable(name: "fn", arg: 2, scope: !19921, file: !3373, line: 88, type: !3365)
!19931 = !DILocalVariable(name: "timeout", arg: 3, scope: !19921, file: !3373, line: 89, type: !19924)
!19932 = !DILocalVariable(name: "__i", scope: !19933, file: !3373, line: 102, type: !19934)
!19933 = distinct !DILexicalBlock(scope: !19921, file: !3373, line: 102, column: 2)
!19934 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !19935)
!19935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !19936)
!19936 = !{!19937}
!19937 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !19935, file: !149, line: 33, baseType: !103, size: 32)
!19938 = !DILocalVariable(name: "__key", scope: !19933, file: !3373, line: 102, type: !19934)
!19939 = !DILocalVariable(name: "t", scope: !19940, file: !3373, line: 103, type: !3346)
!19940 = distinct !DILexicalBlock(scope: !19941, file: !3373, line: 102, column: 24)
!19941 = distinct !DILexicalBlock(scope: !19933, file: !3373, line: 102, column: 2)
!19942 = !DILocalVariable(name: "ticks", scope: !19943, file: !3373, line: 107, type: !104)
!19943 = distinct !DILexicalBlock(scope: !19944, file: !3373, line: 106, column: 39)
!19944 = distinct !DILexicalBlock(scope: !19940, file: !3373, line: 105, column: 7)
!19945 = !DILocalVariable(name: "next_time", scope: !19946, file: !3373, line: 137, type: !330)
!19946 = distinct !DILexicalBlock(scope: !19947, file: !3373, line: 127, column: 22)
!19947 = distinct !DILexicalBlock(scope: !19940, file: !3373, line: 127, column: 7)
!19948 = !DILocation(line: 0, scope: !19921)
!19949 = !DILocation(line: 91, column: 6, scope: !19950)
!19950 = distinct !DILexicalBlock(scope: !19921, file: !3373, line: 91, column: 6)
!19951 = !DILocation(line: 91, column: 6, scope: !19921)
!19952 = !DILocation(line: 99, column: 2, scope: !19953)
!19953 = distinct !DILexicalBlock(scope: !19954, file: !3373, line: 99, column: 2)
!19954 = distinct !DILexicalBlock(scope: !19921, file: !3373, line: 99, column: 2)
!19955 = !DILocation(line: 99, column: 2, scope: !19954)
!19956 = !DILocation(line: 99, column: 2, scope: !19957)
!19957 = distinct !DILexicalBlock(scope: !19953, file: !3373, line: 99, column: 2)
!19958 = !DILocation(line: 100, column: 6, scope: !19921)
!19959 = !DILocation(line: 100, column: 9, scope: !19921)
!19960 = !DILocation(line: 0, scope: !19933)
!19961 = !DILocalVariable(name: "l", arg: 1, scope: !19962, file: !149, line: 136, type: !19965)
!19962 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !19963, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !19966)
!19963 = !DISubroutineType(types: !19964)
!19964 = !{!19934, !19965}
!19965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3379, size: 32)
!19966 = !{!19961, !19967}
!19967 = !DILocalVariable(name: "k", scope: !19962, file: !149, line: 139, type: !19934)
!19968 = !DILocation(line: 0, scope: !19962, inlinedAt: !19969)
!19969 = distinct !DILocation(line: 102, column: 2, scope: !19933)
!19970 = !DILocation(line: 55, column: 2, scope: !19971, inlinedAt: !19975)
!19971 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7872, file: !7872, line: 42, type: !7873, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !19972)
!19972 = !{!19973, !19974}
!19973 = !DILocalVariable(name: "key", scope: !19971, file: !7872, line: 44, type: !32)
!19974 = !DILocalVariable(name: "tmp", scope: !19971, file: !7872, line: 53, type: !32)
!19975 = distinct !DILocation(line: 145, column: 10, scope: !19962, inlinedAt: !19969)
!19976 = !{i64 1658045}
!19977 = !DILocation(line: 0, scope: !19971, inlinedAt: !19975)
!19978 = !DILocation(line: 148, column: 2, scope: !19979, inlinedAt: !19969)
!19979 = distinct !DILexicalBlock(scope: !19980, file: !149, line: 148, column: 2)
!19980 = distinct !DILexicalBlock(scope: !19962, file: !149, line: 148, column: 2)
!19981 = !DILocation(line: 148, column: 2, scope: !19980, inlinedAt: !19969)
!19982 = !DILocation(line: 148, column: 2, scope: !19983, inlinedAt: !19969)
!19983 = distinct !DILexicalBlock(scope: !19979, file: !149, line: 148, column: 2)
!19984 = !DILocation(line: 160, column: 2, scope: !19962, inlinedAt: !19969)
!19985 = !DILocation(line: 106, column: 33, scope: !19944)
!19986 = !DILocation(line: 105, column: 7, scope: !19940)
!19987 = !DILocation(line: 107, column: 50, scope: !19943)
!19988 = !DILocation(line: 107, column: 48, scope: !19943)
!19989 = !DILocation(line: 0, scope: !19943)
!19990 = !DILocation(line: 109, column: 17, scope: !19943)
!19991 = !DILocation(line: 110, column: 3, scope: !19943)
!19992 = !DILocation(line: 111, column: 31, scope: !19993)
!19993 = distinct !DILexicalBlock(scope: !19944, file: !3373, line: 110, column: 10)
!19994 = !DILocation(line: 111, column: 37, scope: !19993)
!19995 = !DILocation(line: 111, column: 35, scope: !19993)
!19996 = !DILocation(line: 0, scope: !19944)
!19997 = !DILocation(line: 109, column: 8, scope: !19943)
!19998 = !DILocation(line: 109, column: 15, scope: !19943)
!19999 = !DILocation(line: 114, column: 12, scope: !20000)
!20000 = distinct !DILexicalBlock(scope: !19940, file: !3373, line: 114, column: 3)
!20001 = !DILocation(line: 0, scope: !19940)
!20002 = !DILocation(line: 114, column: 3, scope: !20000)
!20003 = !DILocation(line: 115, column: 24, scope: !20004)
!20004 = distinct !DILexicalBlock(scope: !20005, file: !3373, line: 115, column: 8)
!20005 = distinct !DILexicalBlock(scope: !20006, file: !3373, line: 114, column: 45)
!20006 = distinct !DILexicalBlock(scope: !20000, file: !3373, line: 114, column: 3)
!20007 = !DILocation(line: 115, column: 11, scope: !20004)
!20008 = !DILocation(line: 115, column: 18, scope: !20004)
!20009 = !DILocation(line: 115, column: 8, scope: !20005)
!20010 = !DILocation(line: 116, column: 15, scope: !20011)
!20011 = distinct !DILexicalBlock(scope: !20004, file: !3373, line: 115, column: 32)
!20012 = !DILocation(line: 117, column: 26, scope: !20011)
!20013 = !DILocation(line: 117, column: 5, scope: !20011)
!20014 = !DILocation(line: 123, column: 7, scope: !19940)
!20015 = !DILocation(line: 120, column: 15, scope: !20005)
!20016 = !DILocation(line: 114, column: 36, scope: !20006)
!20017 = distinct !{!20017, !20002, !20018}
!20018 = !DILocation(line: 121, column: 3, scope: !20000)
!20019 = !DILocation(line: 124, column: 4, scope: !20020)
!20020 = distinct !DILexicalBlock(scope: !20021, file: !3373, line: 123, column: 18)
!20021 = distinct !DILexicalBlock(scope: !19940, file: !3373, line: 123, column: 7)
!20022 = !DILocation(line: 125, column: 3, scope: !20020)
!20023 = !DILocation(line: 127, column: 13, scope: !19947)
!20024 = !DILocation(line: 127, column: 10, scope: !19947)
!20025 = !DILocation(line: 127, column: 7, scope: !19940)
!20026 = !DILocation(line: 137, column: 24, scope: !19946)
!20027 = !DILocation(line: 0, scope: !19946)
!20028 = !DILocation(line: 139, column: 18, scope: !20029)
!20029 = distinct !DILexicalBlock(scope: !19946, file: !3373, line: 139, column: 8)
!20030 = !DILocation(line: 139, column: 23, scope: !20029)
!20031 = !DILocation(line: 141, column: 5, scope: !20032)
!20032 = distinct !DILexicalBlock(scope: !20029, file: !3373, line: 140, column: 48)
!20033 = !DILocation(line: 142, column: 4, scope: !20032)
!20034 = !DILocalVariable(name: "key", arg: 2, scope: !20035, file: !149, line: 190, type: !19934)
!20035 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !20036, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20038)
!20036 = !DISubroutineType(types: !20037)
!20037 = !{null, !19965, !19934}
!20038 = !{!20039, !20034}
!20039 = !DILocalVariable(name: "l", arg: 1, scope: !20035, file: !149, line: 189, type: !19965)
!20040 = !DILocation(line: 0, scope: !20035, inlinedAt: !20041)
!20041 = distinct !DILocation(line: 102, column: 2, scope: !19941)
!20042 = !DILocation(line: 194, column: 2, scope: !20043, inlinedAt: !20041)
!20043 = distinct !DILexicalBlock(scope: !20044, file: !149, line: 194, column: 2)
!20044 = distinct !DILexicalBlock(scope: !20035, file: !149, line: 194, column: 2)
!20045 = !DILocation(line: 194, column: 2, scope: !20044, inlinedAt: !20041)
!20046 = !DILocation(line: 194, column: 2, scope: !20047, inlinedAt: !20041)
!20047 = distinct !DILexicalBlock(scope: !20043, file: !149, line: 194, column: 2)
!20048 = !DILocalVariable(name: "key", arg: 1, scope: !20049, file: !7872, line: 84, type: !32)
!20049 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7872, file: !7872, line: 84, type: !7883, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20050)
!20050 = !{!20048}
!20051 = !DILocation(line: 0, scope: !20049, inlinedAt: !20052)
!20052 = distinct !DILocation(line: 215, column: 2, scope: !20035, inlinedAt: !20041)
!20053 = !DILocation(line: 95, column: 2, scope: !20049, inlinedAt: !20052)
!20054 = !{i64 1658862}
!20055 = !DILocation(line: 148, column: 1, scope: !19921)
!20056 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !133, file: !133, line: 225, type: !20057, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20061)
!20057 = !DISubroutineType(types: !20058)
!20058 = !{!119, !20059}
!20059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20060, size: 32)
!20060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3350)
!20061 = !{!20062}
!20062 = !DILocalVariable(name: "node", arg: 1, scope: !20056, file: !133, line: 225, type: !20059)
!20063 = !DILocation(line: 0, scope: !20056)
!20064 = !DILocation(line: 227, column: 15, scope: !20056)
!20065 = !DILocation(line: 227, column: 20, scope: !20056)
!20066 = !DILocation(line: 227, column: 2, scope: !20056)
!20067 = distinct !DISubprogram(name: "elapsed", scope: !3373, file: !3373, line: 62, type: !20068, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !2894)
!20068 = !DISubroutineType(types: !20069)
!20069 = !{!330}
!20070 = !DILocation(line: 64, column: 9, scope: !20067)
!20071 = !DILocation(line: 64, column: 28, scope: !20067)
!20072 = !DILocation(line: 64, column: 35, scope: !20067)
!20073 = !DILocation(line: 64, column: 2, scope: !20067)
!20074 = distinct !DISubprogram(name: "first", scope: !3373, file: !3373, line: 39, type: !20075, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20077)
!20075 = !DISubroutineType(types: !20076)
!20076 = !{!3346}
!20077 = !{!20078}
!20078 = !DILocalVariable(name: "t", scope: !20074, file: !3373, line: 41, type: !20079)
!20079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3350, size: 32)
!20080 = !DILocation(line: 41, column: 19, scope: !20074)
!20081 = !DILocation(line: 0, scope: !20074)
!20082 = !DILocation(line: 43, column: 9, scope: !20074)
!20083 = !DILocation(line: 43, column: 2, scope: !20074)
!20084 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !133, file: !133, line: 443, type: !20085, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20087)
!20085 = !DISubroutineType(types: !20086)
!20086 = !{null, !20079, !20079}
!20087 = !{!20088, !20089, !20090}
!20088 = !DILocalVariable(name: "successor", arg: 1, scope: !20084, file: !133, line: 443, type: !20079)
!20089 = !DILocalVariable(name: "node", arg: 2, scope: !20084, file: !133, line: 443, type: !20079)
!20090 = !DILocalVariable(name: "prev", scope: !20084, file: !133, line: 445, type: !20091)
!20091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !20079)
!20092 = !DILocation(line: 0, scope: !20084)
!20093 = !DILocation(line: 445, column: 39, scope: !20084)
!20094 = !DILocation(line: 447, column: 8, scope: !20084)
!20095 = !DILocation(line: 447, column: 13, scope: !20084)
!20096 = !DILocation(line: 448, column: 8, scope: !20084)
!20097 = !DILocation(line: 448, column: 13, scope: !20084)
!20098 = !DILocation(line: 449, column: 8, scope: !20084)
!20099 = !DILocation(line: 449, column: 13, scope: !20084)
!20100 = !DILocation(line: 450, column: 18, scope: !20084)
!20101 = !DILocation(line: 451, column: 1, scope: !20084)
!20102 = distinct !DISubprogram(name: "next", scope: !3373, file: !3373, line: 46, type: !20103, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20105)
!20103 = !DISubroutineType(types: !20104)
!20104 = !{!3346, !3346}
!20105 = !{!20106, !20107}
!20106 = !DILocalVariable(name: "t", arg: 1, scope: !20102, file: !3373, line: 46, type: !3346)
!20107 = !DILocalVariable(name: "n", scope: !20102, file: !3373, line: 48, type: !20079)
!20108 = !DILocation(line: 0, scope: !20102)
!20109 = !DILocation(line: 48, column: 58, scope: !20102)
!20110 = !DILocation(line: 48, column: 19, scope: !20102)
!20111 = !DILocation(line: 50, column: 9, scope: !20102)
!20112 = !DILocation(line: 50, column: 2, scope: !20102)
!20113 = distinct !DISubprogram(name: "sys_dlist_append", scope: !133, file: !133, line: 404, type: !20114, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20117)
!20114 = !DISubroutineType(types: !20115)
!20115 = !{null, !20116, !20079}
!20116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3378, size: 32)
!20117 = !{!20118, !20119, !20120}
!20118 = !DILocalVariable(name: "list", arg: 1, scope: !20113, file: !133, line: 404, type: !20116)
!20119 = !DILocalVariable(name: "node", arg: 2, scope: !20113, file: !133, line: 404, type: !20079)
!20120 = !DILocalVariable(name: "tail", scope: !20113, file: !133, line: 406, type: !20091)
!20121 = !DILocation(line: 0, scope: !20113)
!20122 = !DILocation(line: 406, column: 34, scope: !20113)
!20123 = !DILocation(line: 408, column: 8, scope: !20113)
!20124 = !DILocation(line: 408, column: 13, scope: !20113)
!20125 = !DILocation(line: 409, column: 8, scope: !20113)
!20126 = !DILocation(line: 409, column: 13, scope: !20113)
!20127 = !DILocation(line: 411, column: 8, scope: !20113)
!20128 = !DILocation(line: 411, column: 13, scope: !20113)
!20129 = !DILocation(line: 412, column: 13, scope: !20113)
!20130 = !DILocation(line: 413, column: 1, scope: !20113)
!20131 = distinct !DISubprogram(name: "next_timeout", scope: !3373, file: !3373, line: 67, type: !20068, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20132)
!20132 = !{!20133, !20134, !20135}
!20133 = !DILocalVariable(name: "to", scope: !20131, file: !3373, line: 69, type: !3346)
!20134 = !DILocalVariable(name: "ticks_elapsed", scope: !20131, file: !3373, line: 70, type: !330)
!20135 = !DILocalVariable(name: "ret", scope: !20131, file: !3373, line: 71, type: !330)
!20136 = !DILocation(line: 69, column: 24, scope: !20131)
!20137 = !DILocation(line: 0, scope: !20131)
!20138 = !DILocation(line: 70, column: 26, scope: !20131)
!20139 = !DILocation(line: 73, column: 10, scope: !20140)
!20140 = distinct !DILexicalBlock(scope: !20131, file: !3373, line: 73, column: 6)
!20141 = !DILocation(line: 73, column: 19, scope: !20140)
!20142 = !DILocation(line: 74, column: 21, scope: !20140)
!20143 = !DILocation(line: 74, column: 30, scope: !20140)
!20144 = !DILocation(line: 74, column: 28, scope: !20140)
!20145 = !DILocation(line: 74, column: 45, scope: !20140)
!20146 = !DILocation(line: 73, column: 6, scope: !20131)
!20147 = !DILocation(line: 77, column: 9, scope: !20148)
!20148 = distinct !DILexicalBlock(scope: !20140, file: !3373, line: 76, column: 9)
!20149 = !DILocation(line: 0, scope: !20140)
!20150 = !DILocation(line: 81, column: 20, scope: !20151)
!20151 = distinct !DILexicalBlock(scope: !20131, file: !3373, line: 81, column: 6)
!20152 = !DILocation(line: 81, column: 6, scope: !20151)
!20153 = !DILocation(line: 81, column: 32, scope: !20151)
!20154 = !DILocation(line: 85, column: 2, scope: !20131)
!20155 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !133, file: !133, line: 341, type: !20156, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20158)
!20156 = !DISubroutineType(types: !20157)
!20157 = !{!20079, !20116, !20079}
!20158 = !{!20159, !20160}
!20159 = !DILocalVariable(name: "list", arg: 1, scope: !20155, file: !133, line: 341, type: !20116)
!20160 = !DILocalVariable(name: "node", arg: 2, scope: !20155, file: !133, line: 342, type: !20079)
!20161 = !DILocation(line: 0, scope: !20155)
!20162 = !DILocation(line: 344, column: 15, scope: !20155)
!20163 = !DILocation(line: 344, column: 9, scope: !20155)
!20164 = !DILocation(line: 344, column: 26, scope: !20155)
!20165 = !DILocation(line: 344, column: 2, scope: !20155)
!20166 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !133, file: !133, line: 325, type: !20156, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20167)
!20167 = !{!20168, !20169}
!20168 = !DILocalVariable(name: "list", arg: 1, scope: !20166, file: !133, line: 325, type: !20116)
!20169 = !DILocalVariable(name: "node", arg: 2, scope: !20166, file: !133, line: 326, type: !20079)
!20170 = !DILocation(line: 0, scope: !20166)
!20171 = !DILocation(line: 328, column: 24, scope: !20166)
!20172 = !DILocation(line: 328, column: 15, scope: !20166)
!20173 = !DILocation(line: 328, column: 9, scope: !20166)
!20174 = !DILocation(line: 328, column: 45, scope: !20166)
!20175 = !DILocation(line: 328, column: 2, scope: !20166)
!20176 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !133, file: !133, line: 294, type: !20177, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20179)
!20177 = !DISubroutineType(types: !20178)
!20178 = !{!20079, !20116}
!20179 = !{!20180}
!20180 = !DILocalVariable(name: "list", arg: 1, scope: !20176, file: !133, line: 294, type: !20116)
!20181 = !DILocation(line: 0, scope: !20176)
!20182 = !DILocation(line: 296, column: 9, scope: !20176)
!20183 = !DILocation(line: 296, column: 2, scope: !20176)
!20184 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !133, file: !133, line: 266, type: !20185, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20187)
!20185 = !DISubroutineType(types: !20186)
!20186 = !{!119, !20116}
!20187 = !{!20188}
!20188 = !DILocalVariable(name: "list", arg: 1, scope: !20184, file: !133, line: 266, type: !20116)
!20189 = !DILocation(line: 0, scope: !20184)
!20190 = !DILocation(line: 268, column: 15, scope: !20184)
!20191 = !DILocation(line: 268, column: 20, scope: !20184)
!20192 = !DILocation(line: 268, column: 2, scope: !20184)
!20193 = distinct !DISubprogram(name: "z_abort_timeout", scope: !3373, file: !3373, line: 150, type: !20194, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20196)
!20194 = !DISubroutineType(types: !20195)
!20195 = !{!103, !3346}
!20196 = !{!20197, !20198, !20199, !20201}
!20197 = !DILocalVariable(name: "to", arg: 1, scope: !20193, file: !3373, line: 150, type: !3346)
!20198 = !DILocalVariable(name: "ret", scope: !20193, file: !3373, line: 152, type: !103)
!20199 = !DILocalVariable(name: "__i", scope: !20200, file: !3373, line: 154, type: !19934)
!20200 = distinct !DILexicalBlock(scope: !20193, file: !3373, line: 154, column: 2)
!20201 = !DILocalVariable(name: "__key", scope: !20200, file: !3373, line: 154, type: !19934)
!20202 = !DILocation(line: 0, scope: !20193)
!20203 = !DILocation(line: 0, scope: !20200)
!20204 = !DILocation(line: 0, scope: !19962, inlinedAt: !20205)
!20205 = distinct !DILocation(line: 154, column: 2, scope: !20200)
!20206 = !DILocation(line: 55, column: 2, scope: !19971, inlinedAt: !20207)
!20207 = distinct !DILocation(line: 145, column: 10, scope: !19962, inlinedAt: !20205)
!20208 = !DILocation(line: 0, scope: !19971, inlinedAt: !20207)
!20209 = !DILocation(line: 148, column: 2, scope: !19979, inlinedAt: !20205)
!20210 = !DILocation(line: 148, column: 2, scope: !19980, inlinedAt: !20205)
!20211 = !DILocation(line: 148, column: 2, scope: !19983, inlinedAt: !20205)
!20212 = !DILocation(line: 160, column: 2, scope: !19962, inlinedAt: !20205)
!20213 = !DILocation(line: 155, column: 7, scope: !20214)
!20214 = distinct !DILexicalBlock(scope: !20215, file: !3373, line: 155, column: 7)
!20215 = distinct !DILexicalBlock(scope: !20216, file: !3373, line: 154, column: 24)
!20216 = distinct !DILexicalBlock(scope: !20200, file: !3373, line: 154, column: 2)
!20217 = !DILocation(line: 155, column: 7, scope: !20215)
!20218 = !DILocation(line: 156, column: 4, scope: !20219)
!20219 = distinct !DILexicalBlock(scope: !20214, file: !3373, line: 155, column: 39)
!20220 = !DILocation(line: 158, column: 3, scope: !20219)
!20221 = !DILocation(line: 0, scope: !20035, inlinedAt: !20222)
!20222 = distinct !DILocation(line: 154, column: 2, scope: !20216)
!20223 = !DILocation(line: 194, column: 2, scope: !20043, inlinedAt: !20222)
!20224 = !DILocation(line: 194, column: 2, scope: !20044, inlinedAt: !20222)
!20225 = !DILocation(line: 194, column: 2, scope: !20047, inlinedAt: !20222)
!20226 = !DILocation(line: 0, scope: !20049, inlinedAt: !20227)
!20227 = distinct !DILocation(line: 215, column: 2, scope: !20035, inlinedAt: !20222)
!20228 = !DILocation(line: 95, column: 2, scope: !20049, inlinedAt: !20227)
!20229 = !DILocation(line: 161, column: 2, scope: !20193)
!20230 = distinct !DISubprogram(name: "remove_timeout", scope: !3373, file: !3373, line: 53, type: !3367, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20231)
!20231 = !{!20232}
!20232 = !DILocalVariable(name: "t", arg: 1, scope: !20230, file: !3373, line: 53, type: !3346)
!20233 = !DILocation(line: 0, scope: !20230)
!20234 = !DILocation(line: 55, column: 6, scope: !20235)
!20235 = distinct !DILexicalBlock(scope: !20230, file: !3373, line: 55, column: 6)
!20236 = !DILocation(line: 55, column: 14, scope: !20235)
!20237 = !DILocation(line: 55, column: 6, scope: !20230)
!20238 = !DILocation(line: 56, column: 25, scope: !20239)
!20239 = distinct !DILexicalBlock(scope: !20235, file: !3373, line: 55, column: 23)
!20240 = !DILocation(line: 56, column: 12, scope: !20239)
!20241 = !DILocation(line: 56, column: 19, scope: !20239)
!20242 = !DILocation(line: 57, column: 2, scope: !20239)
!20243 = !DILocation(line: 59, column: 23, scope: !20230)
!20244 = !DILocation(line: 59, column: 2, scope: !20230)
!20245 = !DILocation(line: 60, column: 1, scope: !20230)
!20246 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !133, file: !133, line: 496, type: !20247, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20249)
!20247 = !DISubroutineType(types: !20248)
!20248 = !{null, !20079}
!20249 = !{!20250, !20251, !20252}
!20250 = !DILocalVariable(name: "node", arg: 1, scope: !20246, file: !133, line: 496, type: !20079)
!20251 = !DILocalVariable(name: "prev", scope: !20246, file: !133, line: 498, type: !20091)
!20252 = !DILocalVariable(name: "next", scope: !20246, file: !133, line: 499, type: !20091)
!20253 = !DILocation(line: 0, scope: !20246)
!20254 = !DILocation(line: 498, column: 34, scope: !20246)
!20255 = !DILocation(line: 499, column: 34, scope: !20246)
!20256 = !DILocation(line: 501, column: 8, scope: !20246)
!20257 = !DILocation(line: 501, column: 13, scope: !20246)
!20258 = !DILocation(line: 502, column: 8, scope: !20246)
!20259 = !DILocation(line: 502, column: 13, scope: !20246)
!20260 = !DILocation(line: 503, column: 2, scope: !20246)
!20261 = !DILocation(line: 504, column: 1, scope: !20246)
!20262 = distinct !DISubprogram(name: "sys_dnode_init", scope: !133, file: !133, line: 211, type: !20247, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20263)
!20263 = !{!20264}
!20264 = !DILocalVariable(name: "node", arg: 1, scope: !20262, file: !133, line: 211, type: !20079)
!20265 = !DILocation(line: 0, scope: !20262)
!20266 = !DILocation(line: 213, column: 8, scope: !20262)
!20267 = !DILocation(line: 213, column: 13, scope: !20262)
!20268 = !DILocation(line: 214, column: 8, scope: !20262)
!20269 = !DILocation(line: 214, column: 13, scope: !20262)
!20270 = !DILocation(line: 215, column: 1, scope: !20262)
!20271 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !3373, file: !3373, line: 183, type: !20272, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20276)
!20272 = !DISubroutineType(types: !20273)
!20273 = !{!104, !20274}
!20274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20275, size: 32)
!20275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3347)
!20276 = !{!20277, !20278, !20279, !20281}
!20277 = !DILocalVariable(name: "timeout", arg: 1, scope: !20271, file: !3373, line: 183, type: !20274)
!20278 = !DILocalVariable(name: "ticks", scope: !20271, file: !3373, line: 185, type: !104)
!20279 = !DILocalVariable(name: "__i", scope: !20280, file: !3373, line: 187, type: !19934)
!20280 = distinct !DILexicalBlock(scope: !20271, file: !3373, line: 187, column: 2)
!20281 = !DILocalVariable(name: "__key", scope: !20280, file: !3373, line: 187, type: !19934)
!20282 = !DILocation(line: 0, scope: !20271)
!20283 = !DILocation(line: 0, scope: !20280)
!20284 = !DILocation(line: 0, scope: !19962, inlinedAt: !20285)
!20285 = distinct !DILocation(line: 187, column: 2, scope: !20280)
!20286 = !DILocation(line: 55, column: 2, scope: !19971, inlinedAt: !20287)
!20287 = distinct !DILocation(line: 145, column: 10, scope: !19962, inlinedAt: !20285)
!20288 = !DILocation(line: 0, scope: !19971, inlinedAt: !20287)
!20289 = !DILocation(line: 148, column: 2, scope: !19979, inlinedAt: !20285)
!20290 = !DILocation(line: 148, column: 2, scope: !19980, inlinedAt: !20285)
!20291 = !DILocation(line: 148, column: 2, scope: !19983, inlinedAt: !20285)
!20292 = !DILocation(line: 160, column: 2, scope: !19962, inlinedAt: !20285)
!20293 = !DILocation(line: 188, column: 11, scope: !20294)
!20294 = distinct !DILexicalBlock(scope: !20295, file: !3373, line: 187, column: 24)
!20295 = distinct !DILexicalBlock(scope: !20280, file: !3373, line: 187, column: 2)
!20296 = !DILocation(line: 0, scope: !20035, inlinedAt: !20297)
!20297 = distinct !DILocation(line: 187, column: 2, scope: !20295)
!20298 = !DILocation(line: 194, column: 2, scope: !20043, inlinedAt: !20297)
!20299 = !DILocation(line: 194, column: 2, scope: !20044, inlinedAt: !20297)
!20300 = !DILocation(line: 194, column: 2, scope: !20047, inlinedAt: !20297)
!20301 = !DILocation(line: 0, scope: !20049, inlinedAt: !20302)
!20302 = distinct !DILocation(line: 215, column: 2, scope: !20035, inlinedAt: !20297)
!20303 = !DILocation(line: 95, column: 2, scope: !20049, inlinedAt: !20302)
!20304 = !DILocation(line: 191, column: 2, scope: !20271)
!20305 = distinct !DISubprogram(name: "timeout_rem", scope: !3373, file: !3373, line: 165, type: !20272, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20306)
!20306 = !{!20307, !20308, !20309}
!20307 = !DILocalVariable(name: "timeout", arg: 1, scope: !20305, file: !3373, line: 165, type: !20274)
!20308 = !DILocalVariable(name: "ticks", scope: !20305, file: !3373, line: 167, type: !104)
!20309 = !DILocalVariable(name: "t", scope: !20310, file: !3373, line: 173, type: !3346)
!20310 = distinct !DILexicalBlock(scope: !20305, file: !3373, line: 173, column: 2)
!20311 = !DILocation(line: 0, scope: !20305)
!20312 = !DILocation(line: 169, column: 6, scope: !20313)
!20313 = distinct !DILexicalBlock(scope: !20305, file: !3373, line: 169, column: 6)
!20314 = !DILocation(line: 169, column: 6, scope: !20305)
!20315 = !DILocation(line: 173, column: 28, scope: !20310)
!20316 = !DILocation(line: 0, scope: !20310)
!20317 = !DILocation(line: 173, column: 39, scope: !20318)
!20318 = distinct !DILexicalBlock(scope: !20310, file: !3373, line: 173, column: 2)
!20319 = !DILocation(line: 173, column: 2, scope: !20310)
!20320 = !DILocation(line: 174, column: 15, scope: !20321)
!20321 = distinct !DILexicalBlock(scope: !20318, file: !3373, line: 173, column: 61)
!20322 = !DILocation(line: 174, column: 9, scope: !20321)
!20323 = !DILocation(line: 175, column: 15, scope: !20324)
!20324 = distinct !DILexicalBlock(scope: !20321, file: !3373, line: 175, column: 7)
!20325 = !DILocation(line: 175, column: 7, scope: !20321)
!20326 = !DILocation(line: 173, column: 52, scope: !20318)
!20327 = distinct !{!20327, !20319, !20328}
!20328 = !DILocation(line: 178, column: 2, scope: !20310)
!20329 = !DILocation(line: 180, column: 17, scope: !20305)
!20330 = !DILocation(line: 180, column: 15, scope: !20305)
!20331 = !DILocation(line: 180, column: 2, scope: !20305)
!20332 = !DILocation(line: 181, column: 1, scope: !20305)
!20333 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !16292, file: !16292, line: 35, type: !20334, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20336)
!20334 = !DISubroutineType(types: !20335)
!20335 = !{!119, !20274}
!20336 = !{!20337}
!20337 = !DILocalVariable(name: "to", arg: 1, scope: !20333, file: !16292, line: 35, type: !20274)
!20338 = !DILocation(line: 0, scope: !20333)
!20339 = !DILocation(line: 37, column: 35, scope: !20333)
!20340 = !DILocation(line: 37, column: 10, scope: !20333)
!20341 = !DILocation(line: 37, column: 9, scope: !20333)
!20342 = !DILocation(line: 37, column: 2, scope: !20333)
!20343 = distinct !DISubprogram(name: "z_timeout_expires", scope: !3373, file: !3373, line: 194, type: !20272, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20344)
!20344 = !{!20345, !20346, !20347, !20349}
!20345 = !DILocalVariable(name: "timeout", arg: 1, scope: !20343, file: !3373, line: 194, type: !20274)
!20346 = !DILocalVariable(name: "ticks", scope: !20343, file: !3373, line: 196, type: !104)
!20347 = !DILocalVariable(name: "__i", scope: !20348, file: !3373, line: 198, type: !19934)
!20348 = distinct !DILexicalBlock(scope: !20343, file: !3373, line: 198, column: 2)
!20349 = !DILocalVariable(name: "__key", scope: !20348, file: !3373, line: 198, type: !19934)
!20350 = !DILocation(line: 0, scope: !20343)
!20351 = !DILocation(line: 0, scope: !20348)
!20352 = !DILocation(line: 0, scope: !19962, inlinedAt: !20353)
!20353 = distinct !DILocation(line: 198, column: 2, scope: !20348)
!20354 = !DILocation(line: 55, column: 2, scope: !19971, inlinedAt: !20355)
!20355 = distinct !DILocation(line: 145, column: 10, scope: !19962, inlinedAt: !20353)
!20356 = !DILocation(line: 0, scope: !19971, inlinedAt: !20355)
!20357 = !DILocation(line: 148, column: 2, scope: !19979, inlinedAt: !20353)
!20358 = !DILocation(line: 148, column: 2, scope: !19980, inlinedAt: !20353)
!20359 = !DILocation(line: 148, column: 2, scope: !19983, inlinedAt: !20353)
!20360 = !DILocation(line: 160, column: 2, scope: !19962, inlinedAt: !20353)
!20361 = !DILocation(line: 199, column: 11, scope: !20362)
!20362 = distinct !DILexicalBlock(scope: !20363, file: !3373, line: 198, column: 24)
!20363 = distinct !DILexicalBlock(scope: !20348, file: !3373, line: 198, column: 2)
!20364 = !DILocation(line: 199, column: 23, scope: !20362)
!20365 = !DILocation(line: 0, scope: !20035, inlinedAt: !20366)
!20366 = distinct !DILocation(line: 198, column: 2, scope: !20363)
!20367 = !DILocation(line: 194, column: 2, scope: !20043, inlinedAt: !20366)
!20368 = !DILocation(line: 194, column: 2, scope: !20044, inlinedAt: !20366)
!20369 = !DILocation(line: 194, column: 2, scope: !20047, inlinedAt: !20366)
!20370 = !DILocation(line: 0, scope: !20049, inlinedAt: !20371)
!20371 = distinct !DILocation(line: 215, column: 2, scope: !20035, inlinedAt: !20366)
!20372 = !DILocation(line: 95, column: 2, scope: !20049, inlinedAt: !20371)
!20373 = !DILocation(line: 199, column: 21, scope: !20362)
!20374 = !DILocation(line: 202, column: 2, scope: !20343)
!20375 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !3373, file: !3373, line: 205, type: !20068, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20376)
!20376 = !{!20377, !20378, !20380}
!20377 = !DILocalVariable(name: "ret", scope: !20375, file: !3373, line: 207, type: !330)
!20378 = !DILocalVariable(name: "__i", scope: !20379, file: !3373, line: 209, type: !19934)
!20379 = distinct !DILexicalBlock(scope: !20375, file: !3373, line: 209, column: 2)
!20380 = !DILocalVariable(name: "__key", scope: !20379, file: !3373, line: 209, type: !19934)
!20381 = !DILocation(line: 0, scope: !20375)
!20382 = !DILocation(line: 0, scope: !20379)
!20383 = !DILocation(line: 0, scope: !19962, inlinedAt: !20384)
!20384 = distinct !DILocation(line: 209, column: 2, scope: !20379)
!20385 = !DILocation(line: 55, column: 2, scope: !19971, inlinedAt: !20386)
!20386 = distinct !DILocation(line: 145, column: 10, scope: !19962, inlinedAt: !20384)
!20387 = !DILocation(line: 0, scope: !19971, inlinedAt: !20386)
!20388 = !DILocation(line: 148, column: 2, scope: !19979, inlinedAt: !20384)
!20389 = !DILocation(line: 148, column: 2, scope: !19980, inlinedAt: !20384)
!20390 = !DILocation(line: 148, column: 2, scope: !19983, inlinedAt: !20384)
!20391 = !DILocation(line: 160, column: 2, scope: !19962, inlinedAt: !20384)
!20392 = !DILocation(line: 210, column: 9, scope: !20393)
!20393 = distinct !DILexicalBlock(scope: !20394, file: !3373, line: 209, column: 24)
!20394 = distinct !DILexicalBlock(scope: !20379, file: !3373, line: 209, column: 2)
!20395 = !DILocation(line: 0, scope: !20035, inlinedAt: !20396)
!20396 = distinct !DILocation(line: 209, column: 2, scope: !20394)
!20397 = !DILocation(line: 194, column: 2, scope: !20043, inlinedAt: !20396)
!20398 = !DILocation(line: 194, column: 2, scope: !20044, inlinedAt: !20396)
!20399 = !DILocation(line: 194, column: 2, scope: !20047, inlinedAt: !20396)
!20400 = !DILocation(line: 0, scope: !20049, inlinedAt: !20401)
!20401 = distinct !DILocation(line: 215, column: 2, scope: !20035, inlinedAt: !20396)
!20402 = !DILocation(line: 95, column: 2, scope: !20049, inlinedAt: !20401)
!20403 = !DILocation(line: 212, column: 2, scope: !20375)
!20404 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !3373, file: !3373, line: 215, type: !13208, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20405)
!20405 = !{!20406, !20407, !20408, !20410, !20411, !20414, !20415}
!20406 = !DILocalVariable(name: "ticks", arg: 1, scope: !20404, file: !3373, line: 215, type: !330)
!20407 = !DILocalVariable(name: "is_idle", arg: 2, scope: !20404, file: !3373, line: 215, type: !119)
!20408 = !DILocalVariable(name: "__i", scope: !20409, file: !3373, line: 217, type: !19934)
!20409 = distinct !DILexicalBlock(scope: !20404, file: !3373, line: 217, column: 2)
!20410 = !DILocalVariable(name: "__key", scope: !20409, file: !3373, line: 217, type: !19934)
!20411 = !DILocalVariable(name: "next_to", scope: !20412, file: !3373, line: 218, type: !103)
!20412 = distinct !DILexicalBlock(scope: !20413, file: !3373, line: 217, column: 24)
!20413 = distinct !DILexicalBlock(scope: !20409, file: !3373, line: 217, column: 2)
!20414 = !DILocalVariable(name: "sooner", scope: !20412, file: !3373, line: 219, type: !119)
!20415 = !DILocalVariable(name: "imminent", scope: !20412, file: !3373, line: 221, type: !119)
!20416 = !DILocation(line: 0, scope: !20404)
!20417 = !DILocation(line: 0, scope: !20409)
!20418 = !DILocation(line: 0, scope: !19962, inlinedAt: !20419)
!20419 = distinct !DILocation(line: 217, column: 2, scope: !20409)
!20420 = !DILocation(line: 55, column: 2, scope: !19971, inlinedAt: !20421)
!20421 = distinct !DILocation(line: 145, column: 10, scope: !19962, inlinedAt: !20419)
!20422 = !DILocation(line: 0, scope: !19971, inlinedAt: !20421)
!20423 = !DILocation(line: 148, column: 2, scope: !19979, inlinedAt: !20419)
!20424 = !DILocation(line: 148, column: 2, scope: !19980, inlinedAt: !20419)
!20425 = !DILocation(line: 148, column: 2, scope: !19983, inlinedAt: !20419)
!20426 = !DILocation(line: 160, column: 2, scope: !19962, inlinedAt: !20419)
!20427 = !DILocation(line: 218, column: 17, scope: !20412)
!20428 = !DILocation(line: 0, scope: !20412)
!20429 = !DILocation(line: 221, column: 27, scope: !20412)
!20430 = !DILocation(line: 233, column: 17, scope: !20431)
!20431 = distinct !DILexicalBlock(scope: !20412, file: !3373, line: 233, column: 7)
!20432 = !DILocation(line: 234, column: 26, scope: !20433)
!20433 = distinct !DILexicalBlock(scope: !20431, file: !3373, line: 233, column: 56)
!20434 = !DILocation(line: 234, column: 4, scope: !20433)
!20435 = !DILocation(line: 235, column: 3, scope: !20433)
!20436 = !DILocation(line: 0, scope: !20035, inlinedAt: !20437)
!20437 = distinct !DILocation(line: 217, column: 2, scope: !20413)
!20438 = !DILocation(line: 194, column: 2, scope: !20043, inlinedAt: !20437)
!20439 = !DILocation(line: 194, column: 2, scope: !20044, inlinedAt: !20437)
!20440 = !DILocation(line: 194, column: 2, scope: !20047, inlinedAt: !20437)
!20441 = !DILocation(line: 0, scope: !20049, inlinedAt: !20442)
!20442 = distinct !DILocation(line: 215, column: 2, scope: !20035, inlinedAt: !20437)
!20443 = !DILocation(line: 95, column: 2, scope: !20049, inlinedAt: !20442)
!20444 = !DILocation(line: 237, column: 1, scope: !20404)
!20445 = distinct !DISubprogram(name: "sys_clock_announce", scope: !3373, file: !3373, line: 239, type: !20446, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20448)
!20446 = !DISubroutineType(types: !20447)
!20447 = !{null, !330}
!20448 = !{!20449, !20450, !20451, !20453}
!20449 = !DILocalVariable(name: "ticks", arg: 1, scope: !20445, file: !3373, line: 239, type: !330)
!20450 = !DILocalVariable(name: "key", scope: !20445, file: !3373, line: 245, type: !19934)
!20451 = !DILocalVariable(name: "t", scope: !20452, file: !3373, line: 262, type: !3346)
!20452 = distinct !DILexicalBlock(scope: !20445, file: !3373, line: 261, column: 67)
!20453 = !DILocalVariable(name: "dt", scope: !20452, file: !3373, line: 263, type: !103)
!20454 = !DILocation(line: 0, scope: !20445)
!20455 = !DILocation(line: 242, column: 2, scope: !20445)
!20456 = !DILocation(line: 0, scope: !19962, inlinedAt: !20457)
!20457 = distinct !DILocation(line: 245, column: 25, scope: !20445)
!20458 = !DILocation(line: 55, column: 2, scope: !19971, inlinedAt: !20459)
!20459 = distinct !DILocation(line: 145, column: 10, scope: !19962, inlinedAt: !20457)
!20460 = !DILocation(line: 0, scope: !19971, inlinedAt: !20459)
!20461 = !DILocation(line: 148, column: 2, scope: !19979, inlinedAt: !20457)
!20462 = !DILocation(line: 148, column: 2, scope: !19980, inlinedAt: !20457)
!20463 = !DILocation(line: 148, column: 2, scope: !19983, inlinedAt: !20457)
!20464 = !DILocation(line: 160, column: 2, scope: !19962, inlinedAt: !20457)
!20465 = !DILocation(line: 261, column: 9, scope: !20445)
!20466 = !DILocation(line: 261, column: 17, scope: !20445)
!20467 = !DILocation(line: 261, column: 25, scope: !20445)
!20468 = !DILocation(line: 261, column: 37, scope: !20445)
!20469 = !DILocation(line: 261, column: 47, scope: !20445)
!20470 = !DILocation(line: 261, column: 44, scope: !20445)
!20471 = !DILocation(line: 261, column: 2, scope: !20445)
!20472 = !DILocation(line: 0, scope: !20452)
!20473 = !DILocation(line: 263, column: 12, scope: !20452)
!20474 = !DILocation(line: 265, column: 16, scope: !20452)
!20475 = !DILocation(line: 265, column: 13, scope: !20452)
!20476 = !DILocation(line: 266, column: 13, scope: !20452)
!20477 = !DILocation(line: 267, column: 3, scope: !20452)
!20478 = !DILocation(line: 0, scope: !20035, inlinedAt: !20479)
!20479 = distinct !DILocation(line: 269, column: 3, scope: !20452)
!20480 = !DILocation(line: 194, column: 2, scope: !20043, inlinedAt: !20479)
!20481 = !DILocation(line: 194, column: 2, scope: !20044, inlinedAt: !20479)
!20482 = !DILocation(line: 194, column: 2, scope: !20047, inlinedAt: !20479)
!20483 = !DILocation(line: 0, scope: !20049, inlinedAt: !20484)
!20484 = distinct !DILocation(line: 215, column: 2, scope: !20035, inlinedAt: !20479)
!20485 = !DILocation(line: 95, column: 2, scope: !20049, inlinedAt: !20484)
!20486 = !DILocation(line: 270, column: 6, scope: !20452)
!20487 = !DILocation(line: 270, column: 3, scope: !20452)
!20488 = !DILocation(line: 0, scope: !19962, inlinedAt: !20489)
!20489 = distinct !DILocation(line: 271, column: 9, scope: !20452)
!20490 = !DILocation(line: 55, column: 2, scope: !19971, inlinedAt: !20491)
!20491 = distinct !DILocation(line: 145, column: 10, scope: !19962, inlinedAt: !20489)
!20492 = !DILocation(line: 0, scope: !19971, inlinedAt: !20491)
!20493 = !DILocation(line: 148, column: 2, scope: !19979, inlinedAt: !20489)
!20494 = !DILocation(line: 148, column: 2, scope: !19980, inlinedAt: !20489)
!20495 = !DILocation(line: 148, column: 2, scope: !19983, inlinedAt: !20489)
!20496 = !DILocation(line: 160, column: 2, scope: !19962, inlinedAt: !20489)
!20497 = !DILocation(line: 272, column: 22, scope: !20452)
!20498 = distinct !{!20498, !20471, !20499}
!20499 = !DILocation(line: 273, column: 2, scope: !20445)
!20500 = !DILocation(line: 276, column: 19, scope: !20501)
!20501 = distinct !DILexicalBlock(scope: !20502, file: !3373, line: 275, column: 23)
!20502 = distinct !DILexicalBlock(scope: !20445, file: !3373, line: 275, column: 6)
!20503 = !DILocation(line: 277, column: 2, scope: !20501)
!20504 = !DILocation(line: 279, column: 15, scope: !20445)
!20505 = !DILocation(line: 279, column: 12, scope: !20445)
!20506 = !DILocation(line: 280, column: 21, scope: !20445)
!20507 = !DILocation(line: 282, column: 24, scope: !20445)
!20508 = !DILocation(line: 282, column: 2, scope: !20445)
!20509 = !DILocation(line: 0, scope: !20035, inlinedAt: !20510)
!20510 = distinct !DILocation(line: 284, column: 2, scope: !20445)
!20511 = !DILocation(line: 194, column: 2, scope: !20043, inlinedAt: !20510)
!20512 = !DILocation(line: 194, column: 2, scope: !20044, inlinedAt: !20510)
!20513 = !DILocation(line: 194, column: 2, scope: !20047, inlinedAt: !20510)
!20514 = !DILocation(line: 0, scope: !20049, inlinedAt: !20515)
!20515 = distinct !DILocation(line: 215, column: 2, scope: !20035, inlinedAt: !20510)
!20516 = !DILocation(line: 95, column: 2, scope: !20049, inlinedAt: !20515)
!20517 = !DILocation(line: 285, column: 1, scope: !20445)
!20518 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !3373, file: !3373, line: 287, type: !20519, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20521)
!20519 = !DISubroutineType(types: !20520)
!20520 = !{!106}
!20521 = !{!20522, !20523, !20525}
!20522 = !DILocalVariable(name: "t", scope: !20518, file: !3373, line: 289, type: !109)
!20523 = !DILocalVariable(name: "__i", scope: !20524, file: !3373, line: 291, type: !19934)
!20524 = distinct !DILexicalBlock(scope: !20518, file: !3373, line: 291, column: 2)
!20525 = !DILocalVariable(name: "__key", scope: !20524, file: !3373, line: 291, type: !19934)
!20526 = !DILocation(line: 0, scope: !20518)
!20527 = !DILocation(line: 0, scope: !20524)
!20528 = !DILocation(line: 0, scope: !19962, inlinedAt: !20529)
!20529 = distinct !DILocation(line: 291, column: 2, scope: !20524)
!20530 = !DILocation(line: 55, column: 2, scope: !19971, inlinedAt: !20531)
!20531 = distinct !DILocation(line: 145, column: 10, scope: !19962, inlinedAt: !20529)
!20532 = !DILocation(line: 0, scope: !19971, inlinedAt: !20531)
!20533 = !DILocation(line: 148, column: 2, scope: !19979, inlinedAt: !20529)
!20534 = !DILocation(line: 148, column: 2, scope: !19980, inlinedAt: !20529)
!20535 = !DILocation(line: 148, column: 2, scope: !19983, inlinedAt: !20529)
!20536 = !DILocation(line: 160, column: 2, scope: !19962, inlinedAt: !20529)
!20537 = !DILocation(line: 292, column: 7, scope: !20538)
!20538 = distinct !DILexicalBlock(scope: !20539, file: !3373, line: 291, column: 24)
!20539 = distinct !DILexicalBlock(scope: !20524, file: !3373, line: 291, column: 2)
!20540 = !DILocation(line: 292, column: 19, scope: !20538)
!20541 = !DILocation(line: 0, scope: !20035, inlinedAt: !20542)
!20542 = distinct !DILocation(line: 291, column: 2, scope: !20539)
!20543 = !DILocation(line: 194, column: 2, scope: !20043, inlinedAt: !20542)
!20544 = !DILocation(line: 194, column: 2, scope: !20044, inlinedAt: !20542)
!20545 = !DILocation(line: 194, column: 2, scope: !20047, inlinedAt: !20542)
!20546 = !DILocation(line: 0, scope: !20049, inlinedAt: !20547)
!20547 = distinct !DILocation(line: 215, column: 2, scope: !20035, inlinedAt: !20542)
!20548 = !DILocation(line: 95, column: 2, scope: !20049, inlinedAt: !20547)
!20549 = !DILocation(line: 292, column: 17, scope: !20538)
!20550 = !DILocation(line: 294, column: 2, scope: !20518)
!20551 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !3373, file: !3373, line: 297, type: !9213, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !2894)
!20552 = !DILocation(line: 300, column: 19, scope: !20551)
!20553 = !DILocation(line: 300, column: 9, scope: !20551)
!20554 = !DILocation(line: 300, column: 2, scope: !20551)
!20555 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !3373, file: !3373, line: 306, type: !20519, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !2894)
!20556 = !DILocation(line: 308, column: 9, scope: !20555)
!20557 = !DILocation(line: 308, column: 2, scope: !20555)
!20558 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !3373, file: !3373, line: 319, type: !7896, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20559)
!20559 = !{!20560, !20561, !20562, !20563}
!20560 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !20558, file: !3373, line: 319, type: !108)
!20561 = !DILocalVariable(name: "start_cycles", scope: !20558, file: !3373, line: 328, type: !108)
!20562 = !DILocalVariable(name: "cycles_to_wait", scope: !20558, file: !3373, line: 331, type: !108)
!20563 = !DILocalVariable(name: "current_cycles", scope: !20564, file: !3373, line: 338, type: !108)
!20564 = distinct !DILexicalBlock(scope: !20565, file: !3373, line: 337, column: 11)
!20565 = distinct !DILexicalBlock(scope: !20566, file: !3373, line: 337, column: 2)
!20566 = distinct !DILexicalBlock(scope: !20558, file: !3373, line: 337, column: 2)
!20567 = !DILocation(line: 0, scope: !20558)
!20568 = !DILocation(line: 322, column: 19, scope: !20569)
!20569 = distinct !DILexicalBlock(scope: !20558, file: !3373, line: 322, column: 6)
!20570 = !DILocation(line: 322, column: 6, scope: !20558)
!20571 = !DILocation(line: 328, column: 26, scope: !20558)
!20572 = !DILocation(line: 333, column: 43, scope: !20558)
!20573 = !DILocation(line: 337, column: 2, scope: !20558)
!20574 = !DILocation(line: 338, column: 29, scope: !20564)
!20575 = !DILocation(line: 0, scope: !20564)
!20576 = !DILocation(line: 341, column: 23, scope: !20577)
!20577 = distinct !DILexicalBlock(scope: !20564, file: !3373, line: 341, column: 7)
!20578 = !DILocation(line: 341, column: 39, scope: !20577)
!20579 = !DILocation(line: 349, column: 1, scope: !20558)
!20580 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !124, file: !124, line: 1675, type: !9213, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !2894)
!20581 = !DILocation(line: 1677, column: 9, scope: !20580)
!20582 = !DILocation(line: 1677, column: 2, scope: !20580)
!20583 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !20584, file: !20584, line: 24, type: !9213, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !2894)
!20584 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!20585 = !DILocation(line: 26, column: 9, scope: !20583)
!20586 = !DILocation(line: 26, column: 2, scope: !20583)
!20587 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !3373, file: !3373, line: 364, type: !20588, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !20590)
!20588 = !DISubroutineType(types: !20589)
!20589 = !{!109, !19924}
!20590 = !{!20591, !20592}
!20591 = !DILocalVariable(name: "timeout", arg: 1, scope: !20587, file: !3373, line: 364, type: !19924)
!20592 = !DILocalVariable(name: "dt", scope: !20587, file: !3373, line: 366, type: !104)
!20593 = !DILocation(line: 0, scope: !20587)
!20594 = !DILocation(line: 368, column: 6, scope: !20587)
!20595 = !DILocation(line: 371, column: 10, scope: !20596)
!20596 = distinct !DILexicalBlock(scope: !20597, file: !3373, line: 370, column: 47)
!20597 = distinct !DILexicalBlock(scope: !20598, file: !3373, line: 370, column: 13)
!20598 = distinct !DILexicalBlock(scope: !20587, file: !3373, line: 368, column: 6)
!20599 = !DILocation(line: 371, column: 3, scope: !20596)
!20600 = !DILocation(line: 376, column: 58, scope: !20601)
!20601 = distinct !DILexicalBlock(scope: !20602, file: !3373, line: 376, column: 7)
!20602 = distinct !DILexicalBlock(scope: !20597, file: !3373, line: 372, column: 9)
!20603 = !DILocation(line: 376, column: 7, scope: !20602)
!20604 = !DILocation(line: 376, column: 43, scope: !20601)
!20605 = !DILocation(line: 377, column: 4, scope: !20606)
!20606 = distinct !DILexicalBlock(scope: !20601, file: !3373, line: 376, column: 64)
!20607 = !DILocation(line: 379, column: 10, scope: !20602)
!20608 = !DILocation(line: 379, column: 33, scope: !20602)
!20609 = !DILocation(line: 379, column: 31, scope: !20602)
!20610 = !DILocation(line: 379, column: 3, scope: !20602)
!20611 = !DILocation(line: 0, scope: !20598)
!20612 = !DILocation(line: 381, column: 1, scope: !20587)
!20613 = distinct !DISubprogram(name: "boot_banner", scope: !20614, file: !20614, line: 26, type: !333, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4069, retainedNodes: !2894)
!20614 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!20615 = !DILocation(line: 36, column: 1, scope: !20613)
!20616 = distinct !DISubprogram(name: "statics_init", scope: !3403, file: !3403, line: 21, type: !2981, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3384, retainedNodes: !20617)
!20617 = !{!20618, !20619}
!20618 = !DILocalVariable(name: "unused", arg: 1, scope: !20616, file: !3403, line: 21, type: !2983)
!20619 = !DILocalVariable(name: "h", scope: !20620, file: !3403, line: 24, type: !20621)
!20620 = distinct !DILexicalBlock(scope: !20616, file: !3403, line: 24, column: 2)
!20621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20622, size: 32)
!20622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !20623)
!20623 = !{!20624, !20630, !20636}
!20624 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !20622, file: !124, line: 5074, baseType: !20625, size: 96)
!20625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !20626)
!20626 = !{!20627, !20628, !20629}
!20627 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !20625, file: !270, line: 57, baseType: !273, size: 32)
!20628 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !20625, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!20629 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !20625, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!20630 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !20622, file: !124, line: 5075, baseType: !20631, size: 64, offset: 96)
!20631 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !20632)
!20632 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !20633)
!20633 = !{!20634}
!20634 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !20632, file: !128, line: 232, baseType: !20635, size: 64)
!20635 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3389)
!20636 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !20622, file: !124, line: 5076, baseType: !20637, size: 32, offset: 160)
!20637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !20638)
!20638 = !{!20639}
!20639 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !20637, file: !149, line: 52, baseType: !22, size: 32)
!20640 = !DILocation(line: 0, scope: !20616)
!20641 = !DILocation(line: 0, scope: !20620)
!20642 = !DILocation(line: 24, column: 2, scope: !20643)
!20643 = distinct !DILexicalBlock(scope: !20644, file: !3403, line: 24, column: 2)
!20644 = distinct !DILexicalBlock(scope: !20645, file: !3403, line: 24, column: 2)
!20645 = distinct !DILexicalBlock(scope: !20620, file: !3403, line: 24, column: 2)
!20646 = !DILocation(line: 24, column: 2, scope: !20647)
!20647 = distinct !DILexicalBlock(scope: !20648, file: !3403, line: 24, column: 2)
!20648 = distinct !DILexicalBlock(scope: !20643, file: !3403, line: 24, column: 2)
!20649 = !DILocation(line: 24, column: 2, scope: !20644)
!20650 = !DILocation(line: 24, column: 2, scope: !20620)
!20651 = !DILocation(line: 52, column: 2, scope: !20616)
!20652 = !DILocation(line: 49, column: 27, scope: !20653)
!20653 = distinct !DILexicalBlock(scope: !20654, file: !3403, line: 48, column: 3)
!20654 = distinct !DILexicalBlock(scope: !20645, file: !3403, line: 24, column: 36)
!20655 = !DILocation(line: 49, column: 45, scope: !20653)
!20656 = !DILocation(line: 49, column: 4, scope: !20653)
!20657 = !DILocation(line: 24, column: 2, scope: !20645)
!20658 = !DILocation(line: 24, column: 2, scope: !20648)
!20659 = distinct !{!20659, !20650, !20660}
!20660 = !DILocation(line: 51, column: 2, scope: !20620)
!20661 = distinct !DISubprogram(name: "k_heap_init", scope: !3403, file: !3403, line: 13, type: !20662, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3384, retainedNodes: !20664)
!20662 = !DISubroutineType(types: !20663)
!20663 = !{null, !20621, !102, !153}
!20664 = !{!20665, !20666, !20667}
!20665 = !DILocalVariable(name: "h", arg: 1, scope: !20661, file: !3403, line: 13, type: !20621)
!20666 = !DILocalVariable(name: "mem", arg: 2, scope: !20661, file: !3403, line: 13, type: !102)
!20667 = !DILocalVariable(name: "bytes", arg: 3, scope: !20661, file: !3403, line: 13, type: !153)
!20668 = !DILocation(line: 0, scope: !20661)
!20669 = !DILocation(line: 15, column: 19, scope: !20661)
!20670 = !DILocation(line: 15, column: 2, scope: !20661)
!20671 = !DILocation(line: 16, column: 20, scope: !20661)
!20672 = !DILocation(line: 16, column: 2, scope: !20661)
!20673 = !DILocation(line: 19, column: 1, scope: !20661)
!20674 = distinct !DISubprogram(name: "z_waitq_init", scope: !15721, file: !15721, line: 47, type: !20675, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3384, retainedNodes: !20678)
!20675 = !DISubroutineType(types: !20676)
!20676 = !{null, !20677}
!20677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20631, size: 32)
!20678 = !{!20679}
!20679 = !DILocalVariable(name: "w", arg: 1, scope: !20674, file: !15721, line: 47, type: !20677)
!20680 = !DILocation(line: 0, scope: !20674)
!20681 = !DILocation(line: 49, column: 21, scope: !20674)
!20682 = !DILocation(line: 49, column: 2, scope: !20674)
!20683 = !DILocation(line: 50, column: 1, scope: !20674)
!20684 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !20685, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3384, retainedNodes: !20688)
!20685 = !DISubroutineType(types: !20686)
!20686 = !{null, !20687}
!20687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20635, size: 32)
!20688 = !{!20689}
!20689 = !DILocalVariable(name: "list", arg: 1, scope: !20684, file: !133, line: 197, type: !20687)
!20690 = !DILocation(line: 0, scope: !20684)
!20691 = !DILocation(line: 199, column: 8, scope: !20684)
!20692 = !DILocation(line: 199, column: 13, scope: !20684)
!20693 = !DILocation(line: 200, column: 8, scope: !20684)
!20694 = !DILocation(line: 200, column: 13, scope: !20684)
!20695 = !DILocation(line: 201, column: 1, scope: !20684)
!20696 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !3403, file: !3403, line: 64, type: !20697, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3384, retainedNodes: !20703)
!20697 = !DISubroutineType(types: !20698)
!20698 = !{!102, !20621, !153, !153, !20699}
!20699 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !20700)
!20700 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !20701)
!20701 = !{!20702}
!20702 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !20700, file: !105, line: 66, baseType: !104, size: 64)
!20703 = !{!20704, !20705, !20706, !20707, !20708, !20709, !20710, !20711, !20716}
!20704 = !DILocalVariable(name: "h", arg: 1, scope: !20696, file: !3403, line: 64, type: !20621)
!20705 = !DILocalVariable(name: "align", arg: 2, scope: !20696, file: !3403, line: 64, type: !153)
!20706 = !DILocalVariable(name: "bytes", arg: 3, scope: !20696, file: !3403, line: 64, type: !153)
!20707 = !DILocalVariable(name: "timeout", arg: 4, scope: !20696, file: !3403, line: 65, type: !20699)
!20708 = !DILocalVariable(name: "now", scope: !20696, file: !3403, line: 67, type: !106)
!20709 = !DILocalVariable(name: "end", scope: !20696, file: !3403, line: 67, type: !106)
!20710 = !DILocalVariable(name: "ret", scope: !20696, file: !3403, line: 68, type: !102)
!20711 = !DILocalVariable(name: "key", scope: !20696, file: !3403, line: 72, type: !20712)
!20712 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !20713)
!20713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !20714)
!20714 = !{!20715}
!20715 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !20713, file: !149, line: 33, baseType: !103, size: 32)
!20716 = !DILocalVariable(name: "blocked_alloc", scope: !20696, file: !3403, line: 78, type: !119)
!20717 = !DILocation(line: 0, scope: !20696)
!20718 = !DILocation(line: 67, column: 21, scope: !20696)
!20719 = !DILocation(line: 70, column: 8, scope: !20696)
!20720 = !DILocation(line: 72, column: 41, scope: !20696)
!20721 = !DILocalVariable(name: "l", arg: 1, scope: !20722, file: !149, line: 136, type: !20725)
!20722 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !20723, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3384, retainedNodes: !20726)
!20723 = !DISubroutineType(types: !20724)
!20724 = !{!20712, !20725}
!20725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20637, size: 32)
!20726 = !{!20721, !20727}
!20727 = !DILocalVariable(name: "k", scope: !20722, file: !149, line: 139, type: !20712)
!20728 = !DILocation(line: 0, scope: !20722, inlinedAt: !20729)
!20729 = distinct !DILocation(line: 72, column: 25, scope: !20696)
!20730 = !DILocation(line: 55, column: 2, scope: !20731, inlinedAt: !20735)
!20731 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7872, file: !7872, line: 42, type: !7873, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3384, retainedNodes: !20732)
!20732 = !{!20733, !20734}
!20733 = !DILocalVariable(name: "key", scope: !20731, file: !7872, line: 44, type: !32)
!20734 = !DILocalVariable(name: "tmp", scope: !20731, file: !7872, line: 53, type: !32)
!20735 = distinct !DILocation(line: 145, column: 10, scope: !20722, inlinedAt: !20729)
!20736 = !{i64 1653099}
!20737 = !DILocation(line: 0, scope: !20731, inlinedAt: !20735)
!20738 = !DILocation(line: 148, column: 2, scope: !20739, inlinedAt: !20729)
!20739 = distinct !DILexicalBlock(scope: !20740, file: !149, line: 148, column: 2)
!20740 = distinct !DILexicalBlock(scope: !20722, file: !149, line: 148, column: 2)
!20741 = !DILocation(line: 148, column: 2, scope: !20740, inlinedAt: !20729)
!20742 = !DILocation(line: 148, column: 2, scope: !20743, inlinedAt: !20729)
!20743 = distinct !DILexicalBlock(scope: !20739, file: !149, line: 148, column: 2)
!20744 = !DILocation(line: 160, column: 2, scope: !20722, inlinedAt: !20729)
!20745 = !DILocation(line: 1031, column: 3, scope: !20746, inlinedAt: !20749)
!20746 = distinct !DISubprogram(name: "__get_IPSR", scope: !8210, file: !8210, line: 1027, type: !9213, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3384, retainedNodes: !20747)
!20747 = !{!20748}
!20748 = !DILocalVariable(name: "result", scope: !20746, file: !8210, line: 1029, type: !108)
!20749 = distinct !DILocation(line: 48, column: 10, scope: !20750, inlinedAt: !20751)
!20750 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9219, file: !9219, line: 46, type: !9220, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3384, retainedNodes: !2894)
!20751 = distinct !DILocation(line: 76, column: 2, scope: !20752)
!20752 = distinct !DILexicalBlock(scope: !20753, file: !3403, line: 76, column: 2)
!20753 = distinct !DILexicalBlock(scope: !20696, file: !3403, line: 76, column: 2)
!20754 = !{i64 2447034}
!20755 = !DILocation(line: 0, scope: !20746, inlinedAt: !20749)
!20756 = !DILocation(line: 48, column: 9, scope: !20750, inlinedAt: !20751)
!20757 = !DILocation(line: 76, column: 2, scope: !20752)
!20758 = !DILocation(line: 81, column: 9, scope: !20759)
!20759 = distinct !DILexicalBlock(scope: !20696, file: !3403, line: 80, column: 22)
!20760 = !DILocation(line: 83, column: 9, scope: !20759)
!20761 = !DILocation(line: 85, column: 12, scope: !20762)
!20762 = distinct !DILexicalBlock(scope: !20759, file: !3403, line: 84, column: 7)
!20763 = !DILocation(line: 85, column: 21, scope: !20762)
!20764 = !DILocation(line: 76, column: 2, scope: !20765)
!20765 = distinct !DILexicalBlock(scope: !20752, file: !3403, line: 76, column: 2)
!20766 = !DILocation(line: 85, column: 30, scope: !20762)
!20767 = !DILocation(line: 85, column: 37, scope: !20762)
!20768 = !DILocation(line: 84, column: 7, scope: !20759)
!20769 = !DILocation(line: 99, column: 10, scope: !20759)
!20770 = !DILocation(line: 0, scope: !20722, inlinedAt: !20771)
!20771 = distinct !DILocation(line: 101, column: 9, scope: !20759)
!20772 = !DILocation(line: 55, column: 2, scope: !20731, inlinedAt: !20773)
!20773 = distinct !DILocation(line: 145, column: 10, scope: !20722, inlinedAt: !20771)
!20774 = !DILocation(line: 0, scope: !20731, inlinedAt: !20773)
!20775 = !DILocation(line: 148, column: 2, scope: !20739, inlinedAt: !20771)
!20776 = !DILocation(line: 148, column: 2, scope: !20740, inlinedAt: !20771)
!20777 = !DILocation(line: 148, column: 2, scope: !20743, inlinedAt: !20771)
!20778 = !DILocation(line: 160, column: 2, scope: !20722, inlinedAt: !20771)
!20779 = distinct !{!20779, !20780, !20781}
!20780 = !DILocation(line: 80, column: 2, scope: !20696)
!20781 = !DILocation(line: 102, column: 2, scope: !20696)
!20782 = !DILocalVariable(name: "key", arg: 2, scope: !20783, file: !149, line: 190, type: !20712)
!20783 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !20784, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3384, retainedNodes: !20786)
!20784 = !DISubroutineType(types: !20785)
!20785 = !{null, !20725, !20712}
!20786 = !{!20787, !20782}
!20787 = !DILocalVariable(name: "l", arg: 1, scope: !20783, file: !149, line: 189, type: !20725)
!20788 = !DILocation(line: 0, scope: !20783, inlinedAt: !20789)
!20789 = distinct !DILocation(line: 106, column: 2, scope: !20696)
!20790 = !DILocation(line: 194, column: 2, scope: !20791, inlinedAt: !20789)
!20791 = distinct !DILexicalBlock(scope: !20792, file: !149, line: 194, column: 2)
!20792 = distinct !DILexicalBlock(scope: !20783, file: !149, line: 194, column: 2)
!20793 = !DILocation(line: 194, column: 2, scope: !20792, inlinedAt: !20789)
!20794 = !DILocation(line: 194, column: 2, scope: !20795, inlinedAt: !20789)
!20795 = distinct !DILexicalBlock(scope: !20791, file: !149, line: 194, column: 2)
!20796 = !DILocalVariable(name: "key", arg: 1, scope: !20797, file: !7872, line: 84, type: !32)
!20797 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7872, file: !7872, line: 84, type: !7883, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3384, retainedNodes: !20798)
!20798 = !{!20796}
!20799 = !DILocation(line: 0, scope: !20797, inlinedAt: !20800)
!20800 = distinct !DILocation(line: 215, column: 2, scope: !20783, inlinedAt: !20789)
!20801 = !DILocation(line: 95, column: 2, scope: !20797, inlinedAt: !20800)
!20802 = !{i64 1653916}
!20803 = !DILocation(line: 107, column: 2, scope: !20696)
!20804 = distinct !DISubprogram(name: "k_heap_alloc", scope: !3403, file: !3403, line: 110, type: !20805, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3384, retainedNodes: !20807)
!20805 = !DISubroutineType(types: !20806)
!20806 = !{!102, !20621, !153, !20699}
!20807 = !{!20808, !20809, !20810, !20811}
!20808 = !DILocalVariable(name: "h", arg: 1, scope: !20804, file: !3403, line: 110, type: !20621)
!20809 = !DILocalVariable(name: "bytes", arg: 2, scope: !20804, file: !3403, line: 110, type: !153)
!20810 = !DILocalVariable(name: "timeout", arg: 3, scope: !20804, file: !3403, line: 110, type: !20699)
!20811 = !DILocalVariable(name: "ret", scope: !20804, file: !3403, line: 114, type: !102)
!20812 = !DILocation(line: 0, scope: !20804)
!20813 = !DILocation(line: 114, column: 14, scope: !20804)
!20814 = !DILocation(line: 118, column: 2, scope: !20804)
!20815 = distinct !DISubprogram(name: "k_heap_free", scope: !3403, file: !3403, line: 121, type: !20816, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3384, retainedNodes: !20818)
!20816 = !DISubroutineType(types: !20817)
!20817 = !{null, !20621, !102}
!20818 = !{!20819, !20820, !20821}
!20819 = !DILocalVariable(name: "h", arg: 1, scope: !20815, file: !3403, line: 121, type: !20621)
!20820 = !DILocalVariable(name: "mem", arg: 2, scope: !20815, file: !3403, line: 121, type: !102)
!20821 = !DILocalVariable(name: "key", scope: !20815, file: !3403, line: 123, type: !20712)
!20822 = !DILocation(line: 0, scope: !20815)
!20823 = !DILocation(line: 123, column: 41, scope: !20815)
!20824 = !DILocation(line: 0, scope: !20722, inlinedAt: !20825)
!20825 = distinct !DILocation(line: 123, column: 25, scope: !20815)
!20826 = !DILocation(line: 55, column: 2, scope: !20731, inlinedAt: !20827)
!20827 = distinct !DILocation(line: 145, column: 10, scope: !20722, inlinedAt: !20825)
!20828 = !DILocation(line: 0, scope: !20731, inlinedAt: !20827)
!20829 = !DILocation(line: 148, column: 2, scope: !20739, inlinedAt: !20825)
!20830 = !DILocation(line: 148, column: 2, scope: !20740, inlinedAt: !20825)
!20831 = !DILocation(line: 148, column: 2, scope: !20743, inlinedAt: !20825)
!20832 = !DILocation(line: 160, column: 2, scope: !20722, inlinedAt: !20825)
!20833 = !DILocation(line: 125, column: 20, scope: !20815)
!20834 = !DILocation(line: 125, column: 2, scope: !20815)
!20835 = !DILocation(line: 128, column: 60, scope: !20836)
!20836 = distinct !DILexicalBlock(scope: !20815, file: !3403, line: 128, column: 6)
!20837 = !DILocation(line: 128, column: 43, scope: !20836)
!20838 = !DILocation(line: 128, column: 68, scope: !20836)
!20839 = !DILocation(line: 128, column: 6, scope: !20815)
!20840 = !DILocation(line: 129, column: 3, scope: !20841)
!20841 = distinct !DILexicalBlock(scope: !20836, file: !3403, line: 128, column: 74)
!20842 = !DILocation(line: 130, column: 2, scope: !20841)
!20843 = !DILocation(line: 0, scope: !20783, inlinedAt: !20844)
!20844 = distinct !DILocation(line: 131, column: 3, scope: !20845)
!20845 = distinct !DILexicalBlock(scope: !20836, file: !3403, line: 130, column: 9)
!20846 = !DILocation(line: 194, column: 2, scope: !20791, inlinedAt: !20844)
!20847 = !DILocation(line: 194, column: 2, scope: !20792, inlinedAt: !20844)
!20848 = !DILocation(line: 194, column: 2, scope: !20795, inlinedAt: !20844)
!20849 = !DILocation(line: 0, scope: !20797, inlinedAt: !20850)
!20850 = distinct !DILocation(line: 215, column: 2, scope: !20783, inlinedAt: !20844)
!20851 = !DILocation(line: 95, column: 2, scope: !20797, inlinedAt: !20850)
!20852 = !DILocation(line: 133, column: 1, scope: !20815)
