; ModuleID = 'build/96b_wistrio/simple/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.k_condvar = type { %struct._wait_q_t }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237096 to i8*), void (i8*)* inttoptr (i32 134235827 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237096 to i8*), void (i8*)* inttoptr (i32 134235817 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237096 to i8*), void (i8*)* inttoptr (i32 134235807 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237096 to i8*), void (i8*)* inttoptr (i32 134235797 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237096 to i8*), void (i8*)* inttoptr (i32 134235787 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237096 to i8*), void (i8*)* inttoptr (i32 134235777 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237096 to i8*), void (i8*)* inttoptr (i32 134235767 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [38 x i8*] [i8* bitcast (%struct.k_condvar* @condvar to i8*), i8* bitcast (%struct.k_mutex* @mutex to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@mutex = dso_local global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @mutex, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @mutex, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static.mutex", align 4, !dbg !25
@condvar = dso_local global %struct.k_condvar { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @condvar, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @condvar, i32 0, i32 0, i32 0) } } } }, section "._k_condvar.static.condvar", align 4, !dbg !114
@.str = private unnamed_addr constant [29 x i8] c"[thread %d] working (%d/%d)\0A\00", align 1
@done = internal unnamed_addr global i32 0, align 4, !dbg !260
@.str.1 = private unnamed_addr constant [46 x i8] c"[thread %d] done is now %d. Signalling cond.\0A\00", align 1
@t = internal global [20 x %struct.k_thread] zeroinitializer, align 8, !dbg !152
@tstacks = dso_local global [20 x [1088 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !141
@.str.2 = private unnamed_addr constant [57 x i8] c"[thread %s] done is %d which is < %d so waiting on cond\0A\00", align 1
@__func__.main = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"[thread %s] wake - cond was signalled.\0A\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"[thread %s] done == %d so everyone is done\0A\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !269
@.str.1.7 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.8 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.9 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.10 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.11 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !295
@.str.16 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !305
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !369
@.str.25 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.27 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.28 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.26 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.30 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.31 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.33 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.34 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.35 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.36 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.37 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.38 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.39 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.42 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.43 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.44 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.45 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.58 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.50 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.51 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.52 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.53 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.54 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.55 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.56 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.57 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16.49 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.25.48 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.26 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.29 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.31 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.32.47 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.33 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.34 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.36.46 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.37 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !398
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !532
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !404
@.str.70 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.71 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.72 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.73 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.78 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.79 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !541
@.str.6.80 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.81 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.74 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.75 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !577
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), %struct.k_spinlock { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.91, i32 0, i32 0), %struct.k_spinlock { i32 285933596 } }], align 4, !dbg !587
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !592
@.str.90 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.91 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !612
@.str.93 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.95 = private unnamed_addr constant [42 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio.h\00", align 1
@.str.10.106 = private unnamed_addr constant [62 x i8] c"(cfg->port_pin_mask & (gpio_port_pins_t)(1UL << (pin))) != 0U\00", align 1
@.str.11.107 = private unnamed_addr constant [18 x i8] c"\09Unsupported pin\0A\00", align 1
@.str.12.94 = private unnamed_addr constant [93 x i8] c"(flags & ((1U << 21) | (1U << 22) | (1U << 23) | (1U << 24) | (1U << 25) | (1U << 26))) == 0\00", align 1
@.str.13.96 = private unnamed_addr constant [36 x i8] c"\09Interrupt flags are not supported\0A\00", align 1
@.str.14.97 = private unnamed_addr constant [57 x i8] c"(flags & ((1 << 4) | (1 << 5))) != ((1 << 4) | (1 << 5))\00", align 1
@.str.15.98 = private unnamed_addr constant [61 x i8] c"\09Pull Up and Pull Down should not be enabled simultaneously\0A\00", align 1
@.str.16.99 = private unnamed_addr constant [53 x i8] c"(flags & (1U << 17)) != 0 || (flags & (1 << 1)) == 0\00", align 1
@.str.17.100 = private unnamed_addr constant [82 x i8] c"\09Output needs to be enabled for 'Open Drain', 'Open Source' mode to be supported\0A\00", align 1
@.str.18.101 = private unnamed_addr constant [51 x i8] c"(flags & (1 << 1)) != 0 || (flags & (1 << 2)) == 0\00", align 1
@.str.19.102 = private unnamed_addr constant [70 x i8] c"(flags & ((1U << 18) | (1U << 19))) == 0 || (flags & (1U << 17)) != 0\00", align 1
@.str.20.103 = private unnamed_addr constant [59 x i8] c"\09Output needs to be enabled to be initialized low or high\0A\00", align 1
@.str.21.104 = private unnamed_addr constant [65 x i8] c"(flags & ((1U << 18) | (1U << 19))) != ((1U << 18) | (1U << 19))\00", align 1
@.str.22.105 = private unnamed_addr constant [44 x i8] c"\09Output cannot be initialized low and high\0A\00", align 1
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !720
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !873
@.str.4.108 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !842
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !825
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.108, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !798
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !814
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !844
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !858
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !860
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !862
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !864
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !866
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !868
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !878
@.str.110 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !903
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !978
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !967
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1019
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !894
@.str.121 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !1085
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1331
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1309
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1295
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1243
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !892
@.str.1.131 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1333
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1313
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1311
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1260
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !890
@.str.2.132 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1346
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1317
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1315
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1269
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !888
@.str.3.133 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1348
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1321
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1319
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1278
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !886
@.str.4.134 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1350
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1325
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1323
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1284
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !884
@.str.5.135 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1352
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1329
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1327
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1293
@.str.6.122 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.29.128 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.30.124 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.31.127 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.32.123 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.33.125 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.34.126 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.139 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.139, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1354
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !898
@.str.1.140 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !1514
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1569
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1510
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1571
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.140, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1495
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1497
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !896
@.str.2.149 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1577
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1512
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1587
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.149, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1506
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1508
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !1558
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1561
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1563
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1566
@.str.3.142 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.4.143 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.144 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.6.145 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.7.146 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.8.152 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.9.154 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.10.155 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.110, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !951
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !1579
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1581
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1583
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1585
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.11 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1594
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1705
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1707
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1703
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1698
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1672
@.str.159 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.160 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.161 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.162 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.163 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.164 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1709
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1241
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.131, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1258
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.132, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1267
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.133, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1276
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.134, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1282
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.135, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1291
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1796
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !1820
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !1823
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1827
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1831
@.str.195 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.199 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.200 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.201 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.205 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.206 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.207 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.208 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.209 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.204 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.203 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.205, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.206, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.207, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.208, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.209, i32 0, i32 0)], align 4
@.str.211 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.211, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1838
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2063
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2051
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2058
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2070
@.str.5.217 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2075
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.221 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.227, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.228, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.229, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.230, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.231, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.225, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.232, i32 0, i32 0)], align 4, !dbg !2103
@.str.226 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.227 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.228 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.229 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.230 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.231 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.225 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.232 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2218
@.str.8.224 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.235 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.236 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.237 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.238 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.242 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.243 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.246 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.247 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.257 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.258 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.259 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.264 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.265 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.266 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.267 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.268 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2231
@.str.4.276 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.269 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.270 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.271 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.272 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.273 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2342
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2453
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2456
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2458
@.str.277 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.299 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.284 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.306 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.318 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.287 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.313 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.283 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.323 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.324 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.332 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.333 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.334 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.335 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.278 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.279 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.280 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.281 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.282 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.286 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.303 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.314 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.315 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2060
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2068
@.str.23.327 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@lock.340 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2460
@.str.341 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.342 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.343 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.344 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.345 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.346 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.356 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.357 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.358 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.359 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2485
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2515
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2520
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1925
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2518
@.str.4.360 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.361 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.362 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.366 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.367 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.385 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3060 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3064, !srcloc !3065
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3066, !srcloc !3067
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3068, !srcloc !3069
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3070, !srcloc !3071
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3072, !srcloc !3073
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3074, !srcloc !3075
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3076, !srcloc !3077
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3078, !srcloc !3079
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3080, !srcloc !3081
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3082, !srcloc !3083
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3084, !srcloc !3085
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3086, !srcloc !3087
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3088, !srcloc !3089
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3090, !srcloc !3091
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3092, !srcloc !3093
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3094, !srcloc !3095
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3096, !srcloc !3097
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3098, !srcloc !3099
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3100, !srcloc !3101
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3102, !srcloc !3103
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3104, !srcloc !3105
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3106, !srcloc !3107
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3108, !srcloc !3109
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3110, !srcloc !3111
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3112, !srcloc !3113
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3114, !srcloc !3115
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3116, !srcloc !3117
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3118, !srcloc !3121
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3122, !srcloc !3123
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3124, !srcloc !3125
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3126, !srcloc !3127
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3128, !srcloc !3129
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3130, !srcloc !3131
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3132, !srcloc !3133
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3134, !srcloc !3135
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3136, !srcloc !3137
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3138, !srcloc !3139
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3140, !srcloc !3141
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3142, !srcloc !3143
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3144, !srcloc !3145
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3146, !srcloc !3147
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3148, !srcloc !3149
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3152, !srcloc !3153
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3154, !srcloc !3155
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3168, !srcloc !3169
  ret void, !dbg !3170
}

; Function Attrs: noinline nounwind optsize
define dso_local void @worker_thread(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3173 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3177, metadata !DIExpression()), !dbg !3184
  call void @llvm.dbg.value(metadata i8* undef, metadata !3178, metadata !DIExpression()), !dbg !3184
  call void @llvm.dbg.value(metadata i8* undef, metadata !3179, metadata !DIExpression()), !dbg !3184
  %4 = ptrtoint i8* %0 to i32, !dbg !3185
  call void @llvm.dbg.value(metadata i32 %4, metadata !3180, metadata !DIExpression()), !dbg !3184
  call void @llvm.dbg.value(metadata i32 5, metadata !3181, metadata !DIExpression()), !dbg !3184
  call void @llvm.dbg.value(metadata i32 0, metadata !3182, metadata !DIExpression()), !dbg !3186
  br label %8, !dbg !3187

5:                                                ; preds = %8
  tail call fastcc void @k_mutex_lock() #24, !dbg !3188
  %6 = load i32, i32* @done, align 4, !dbg !3189
  %7 = add nsw i32 %6, 1, !dbg !3189
  store i32 %7, i32* @done, align 4, !dbg !3189
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i32 0, i32 0), i32 noundef %4, i32 noundef %7) #25, !dbg !3190
  tail call fastcc void @k_condvar_signal() #24, !dbg !3191
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3192
  ret void, !dbg !3193

8:                                                ; preds = %3, %8
  %9 = phi i32 [ 0, %3 ], [ %12, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3182, metadata !DIExpression()), !dbg !3186
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i32 0, i32 0), i32 noundef %4, i32 noundef %9, i32 noundef 5) #25, !dbg !3194
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 500) #24, !dbg !3197
  %11 = insertvalue [1 x i64] poison, i64 %10, 0, !dbg !3198
  tail call fastcc void @k_sleep([1 x i64] %11) #24, !dbg !3198
  %12 = add nuw nsw i32 %9, 1, !dbg !3199
  call void @llvm.dbg.value(metadata i32 %12, metadata !3182, metadata !DIExpression()), !dbg !3186
  %13 = icmp eq i32 %12, 5, !dbg !3200
  br i1 %13, label %5, label %8, !dbg !3187, !llvm.loop !3201
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock() unnamed_addr #1 !dbg !3203 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3214, metadata !DIExpression()), !dbg !3215
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3213, metadata !DIExpression()), !dbg !3215
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3216, !srcloc !3218
  %1 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef nonnull @mutex, [1 x i64] [i64 -1]) #25, !dbg !3219
  ret void, !dbg !3220
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_signal() unnamed_addr #1 !dbg !3221 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* @condvar, metadata !3226, metadata !DIExpression()), !dbg !3227
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3228, !srcloc !3230
  %1 = tail call i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef nonnull @condvar) #25, !dbg !3231
  ret void, !dbg !3232
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock() unnamed_addr #1 !dbg !3233 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3237, metadata !DIExpression()), !dbg !3238
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3239, !srcloc !3241
  %1 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef nonnull @mutex) #25, !dbg !3242
  ret void, !dbg !3243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !3244 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3249, metadata !DIExpression()), !dbg !3250
  call void @llvm.dbg.value(metadata i64 %0, metadata !3251, metadata !DIExpression()), !dbg !3268
  call void @llvm.dbg.value(metadata i32 1000, metadata !3256, metadata !DIExpression()), !dbg !3268
  call void @llvm.dbg.value(metadata i32 10000, metadata !3257, metadata !DIExpression()), !dbg !3268
  call void @llvm.dbg.value(metadata i8 1, metadata !3258, metadata !DIExpression()), !dbg !3268
  call void @llvm.dbg.value(metadata i8 0, metadata !3259, metadata !DIExpression()), !dbg !3268
  call void @llvm.dbg.value(metadata i8 1, metadata !3260, metadata !DIExpression()), !dbg !3268
  call void @llvm.dbg.value(metadata i8 0, metadata !3261, metadata !DIExpression()), !dbg !3268
  call void @llvm.dbg.value(metadata i8 1, metadata !3262, metadata !DIExpression()), !dbg !3268
  call void @llvm.dbg.value(metadata i8 0, metadata !3263, metadata !DIExpression()), !dbg !3268
  call void @llvm.dbg.value(metadata i64 0, metadata !3264, metadata !DIExpression()), !dbg !3268
  call void @llvm.dbg.value(metadata i64 0, metadata !3264, metadata !DIExpression()), !dbg !3268
  %2 = mul i64 %0, 10, !dbg !3270
  ret i64 %2, !dbg !3276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3277 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3281, metadata !DIExpression()), !dbg !3282
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3283, !srcloc !3285
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3286
  ret void, !dbg !3287
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3288 {
  store i32 0, i32* @done, align 4, !dbg !3295
  call void @llvm.dbg.value(metadata i32 0, metadata !3293, metadata !DIExpression()), !dbg !3296
  br label %6, !dbg !3297

1:                                                ; preds = %6
  %2 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1000) #24, !dbg !3298
  %3 = insertvalue [1 x i64] poison, i64 %2, 0, !dbg !3299
  tail call fastcc void @k_sleep([1 x i64] %3) #24, !dbg !3299
  tail call fastcc void @k_mutex_lock() #24, !dbg !3300
  %4 = load i32, i32* @done, align 4, !dbg !3301
  %5 = icmp slt i32 %4, 20, !dbg !3302
  br i1 %5, label %14, label %18, !dbg !3303

6:                                                ; preds = %0, %6
  %7 = phi i32 [ 0, %0 ], [ %12, %6 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3293, metadata !DIExpression()), !dbg !3296
  %8 = getelementptr inbounds [20 x %struct.k_thread], [20 x %struct.k_thread]* @t, i32 0, i32 %7, !dbg !3304
  %9 = getelementptr inbounds [20 x [1088 x %struct.z_thread_stack_element]], [20 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 %7, i32 0, !dbg !3307
  %10 = inttoptr i32 %7 to i8*, !dbg !3308
  %11 = tail call fastcc %struct.k_thread* @k_thread_create(%struct.k_thread* noundef nonnull %8, %struct.z_thread_stack_element* noundef nonnull %9, i8* noundef %10) #24, !dbg !3309
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !3290, metadata !DIExpression()), !dbg !3310
  %12 = add nuw nsw i32 %7, 1, !dbg !3311
  call void @llvm.dbg.value(metadata i32 %12, metadata !3293, metadata !DIExpression()), !dbg !3296
  %13 = icmp eq i32 %12, 20, !dbg !3312
  br i1 %13, label %1, label %6, !dbg !3297, !llvm.loop !3313

14:                                               ; preds = %1, %14
  %15 = phi i32 [ %16, %14 ], [ %4, %1 ]
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0), i32 noundef %15, i32 noundef 20) #25, !dbg !3315
  tail call fastcc void @k_condvar_wait() #24, !dbg !3317
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0)) #25, !dbg !3318
  %16 = load i32, i32* @done, align 4, !dbg !3301
  %17 = icmp slt i32 %16, 20, !dbg !3302
  br i1 %17, label %14, label %18, !dbg !3303, !llvm.loop !3319

18:                                               ; preds = %14, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0), i32 noundef 20) #25, !dbg !3321
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3322
  ret void, !dbg !3323
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.k_thread* @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3324 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3342, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3333, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3334, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 1024, metadata !3335, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @worker_thread, metadata !3336, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %2, metadata !3337, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* null, metadata !3338, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* null, metadata !3339, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 10, metadata !3340, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 0, metadata !3341, metadata !DIExpression()), !dbg !3343
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3344, !srcloc !3346
  %4 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @worker_thread, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef 10, i32 noundef 0, [1 x i64] zeroinitializer) #25, !dbg !3347
  ret %struct.k_thread* %4, !dbg !3348
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_wait() unnamed_addr #1 !dbg !3349 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3355, metadata !DIExpression()), !dbg !3356
  call void @llvm.dbg.value(metadata %struct.k_condvar* @condvar, metadata !3353, metadata !DIExpression()), !dbg !3356
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3354, metadata !DIExpression()), !dbg !3356
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3357, !srcloc !3359
  %1 = tail call i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef nonnull @condvar, %struct.k_mutex* noundef nonnull @mutex, [1 x i64] [i64 -1]) #25, !dbg !3360
  ret void, !dbg !3361
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3362 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3377, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %0, metadata !3373, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %1, metadata !3374, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %2, metadata !3375, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %3, metadata !3376, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %0, metadata !3378, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %0, metadata !3379, metadata !DIExpression()), !dbg !3440
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3441
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3441
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3382, metadata !DIExpression()), !dbg !3442
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3443
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3443
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3384, metadata !DIExpression()), !dbg !3444
  call void @llvm.dbg.value(metadata i32 0, metadata !3385, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 0, metadata !3386, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 0, metadata !3387, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 -1, metadata !3388, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 0, metadata !3391, metadata !DIExpression()), !dbg !3440
  %12 = and i32 %2, 4, !dbg !3445
  %13 = icmp eq i32 %12, 0, !dbg !3446
  call void @llvm.dbg.value(metadata i1 %13, metadata !3392, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3440
  %14 = lshr i32 %2, 3, !dbg !3447
  %15 = and i32 %14, 7, !dbg !3447
  %16 = add nuw nsw i32 %15, 1, !dbg !3448
  call void @llvm.dbg.value(metadata i32 %16, metadata !3393, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 0, metadata !3394, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %0, metadata !3395, metadata !DIExpression()), !dbg !3440
  %17 = ptrtoint i8* %0 to i32, !dbg !3449
  %18 = and i32 %17, 3, !dbg !3451
  %19 = icmp eq i32 %18, 0, !dbg !3451
  br i1 %19, label %20, label %320, !dbg !3452

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3453
  call void @llvm.dbg.value(metadata i8* %21, metadata !3379, metadata !DIExpression()), !dbg !3440
  %22 = icmp eq i8* %0, null, !dbg !3454
  %23 = and i32 %1, 7, !dbg !3456
  %24 = sub nuw nsw i32 8, %23, !dbg !3456
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3456
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3456
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3456
  call void @llvm.dbg.value(metadata i32 %27, metadata !3374, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %26, metadata !3379, metadata !DIExpression()), !dbg !3440
  br i1 %22, label %33, label %28, !dbg !3457

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3459
  %30 = sub i32 4, %17, !dbg !3459
  %31 = add i32 %30, %29, !dbg !3460
  %32 = icmp ugt i32 %31, %27, !dbg !3461
  br i1 %32, label %320, label %33, !dbg !3462

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3463
  call void @llvm.dbg.value(metadata i8* %34, metadata !3376, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %3, metadata !3390, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 4, metadata !3381, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 4, metadata !3380, metadata !DIExpression()), !dbg !3440
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3464

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3377, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %42, metadata !3376, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %43, metadata !3379, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %44, metadata !3380, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %45, metadata !3381, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %72, metadata !3388, metadata !DIExpression()), !dbg !3440
  br i1 %46, label %73, label %47, !dbg !3465

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3466
  %49 = zext i1 %48 to i32, !dbg !3470
  %50 = add nsw i32 %72, %49, !dbg !3470
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3470
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3470
  call void @llvm.dbg.value(metadata i32 %52, metadata !3380, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %51, metadata !3381, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 poison, metadata !3391, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %50, metadata !3388, metadata !DIExpression()), !dbg !3440
  br label %53, !dbg !3471

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3377, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %40, metadata !3376, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %58, metadata !3379, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %57, metadata !3380, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %56, metadata !3381, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 poison, metadata !3391, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %54, metadata !3388, metadata !DIExpression()), !dbg !3440
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3472
  call void @llvm.dbg.value(metadata i8* %60, metadata !3376, metadata !DIExpression()), !dbg !3440
  %61 = load i8, i8* %60, align 1, !dbg !3474
  %62 = icmp eq i8 %61, 0, !dbg !3475
  br i1 %62, label %226, label %63, !dbg !3476, !llvm.loop !3477

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3465

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3480

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3391, metadata !DIExpression()), !dbg !3440
  %75 = add nsw i32 %72, -1, !dbg !3481
  call void @llvm.dbg.value(metadata i32 %75, metadata !3388, metadata !DIExpression()), !dbg !3440
  br label %53, !dbg !3482

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3483

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3381, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 4, metadata !3380, metadata !DIExpression()), !dbg !3440
  br label %53, !dbg !3484

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3381, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 4, metadata !3380, metadata !DIExpression()), !dbg !3440
  br label %53, !dbg !3485

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3486
  %81 = icmp eq i8 %80, 108, !dbg !3488
  br i1 %81, label %82, label %109, !dbg !3489

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3490
  %84 = load i8, i8* %83, align 1, !dbg !3490
  %85 = icmp eq i8 %84, 108, !dbg !3493
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3494
  %89 = add i32 %88, 7, !dbg !3494
  %90 = and i32 %89, -8, !dbg !3494
  %91 = inttoptr i32 %90 to i8*, !dbg !3494
  %92 = inttoptr i32 %90 to double*, !dbg !3494
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3494
  %94 = load double, double* %92, align 8, !dbg !3494
  call void @llvm.dbg.value(metadata i8* %93, metadata !3377, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 8, metadata !3380, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 8, metadata !3381, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata double %94, metadata !3408, metadata !DIExpression()), !dbg !3496
  %95 = ptrtoint i8* %43 to i32, !dbg !3497
  %96 = add i32 %95, 7, !dbg !3497
  %97 = and i32 %96, -8, !dbg !3497
  %98 = inttoptr i32 %97 to i8*, !dbg !3498
  call void @llvm.dbg.value(metadata i8* %98, metadata !3379, metadata !DIExpression()), !dbg !3440
  br i1 %22, label %104, label %99, !dbg !3499

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3500
  %101 = icmp ugt i32 %100, %196, !dbg !3504
  br i1 %101, label %320, label %102, !dbg !3505

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3506
  store double %94, double* %103, align 8, !dbg !3506
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3509
  call void @llvm.dbg.value(metadata i8* %105, metadata !3379, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 poison, metadata !3391, metadata !DIExpression()), !dbg !3440
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3391, metadata !DIExpression()), !dbg !3440
  br label %53, !dbg !3510

107:                                              ; preds = %73, %73
  br label %109, !dbg !3511

108:                                              ; preds = %73
  br label %109, !dbg !3511

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3440
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3440
  call void @llvm.dbg.value(metadata i32 %113, metadata !3380, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %112, metadata !3381, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 poison, metadata !3394, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 poison, metadata !3391, metadata !DIExpression()), !dbg !3440
  %114 = ptrtoint i8* %43 to i32, !dbg !3511
  %115 = add i32 %114, -1, !dbg !3511
  %116 = add i32 %115, %112, !dbg !3511
  %117 = sub i32 0, %112, !dbg !3511
  %118 = and i32 %116, %117, !dbg !3511
  %119 = inttoptr i32 %118 to i8*, !dbg !3512
  call void @llvm.dbg.value(metadata i8* %119, metadata !3379, metadata !DIExpression()), !dbg !3440
  br i1 %22, label %124, label %120, !dbg !3513

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3515
  %122 = add i32 %121, %118, !dbg !3516
  %123 = icmp ugt i32 %122, %196, !dbg !3517
  br i1 %123, label %320, label %124, !dbg !3518

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3519

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3512
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3520
  call void @llvm.dbg.value(metadata i8* %127, metadata !3377, metadata !DIExpression()), !dbg !3440
  %128 = bitcast i8* %41 to i8**, !dbg !3520
  %129 = load i8*, i8** %128, align 4, !dbg !3520
  call void @llvm.dbg.value(metadata i8* %129, metadata !3390, metadata !DIExpression()), !dbg !3440
  br label %130, !dbg !3521

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3440
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3522
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3440
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3523
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3440
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3440
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3440
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3440
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3440
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3440
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3524
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3377, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %142, metadata !3374, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %141, metadata !3376, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %140, metadata !3379, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %139, metadata !3380, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %138, metadata !3381, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %137, metadata !3385, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %136, metadata !3393, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %135, metadata !3386, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 poison, metadata !3391, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %133, metadata !3390, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %132, metadata !3388, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %131, metadata !3387, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.label(metadata !3439), !dbg !3526
  br i1 %22, label %146, label %144, !dbg !3527

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3528
  store i8* %133, i8** %145, align 4, !dbg !3531
  br label %146, !dbg !3532

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3533
  call void @llvm.dbg.value(metadata i32 %147, metadata !3393, metadata !DIExpression()), !dbg !3440
  %148 = icmp sgt i32 %136, 0, !dbg !3534
  br i1 %148, label %152, label %149, !dbg !3535

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3536
  %151 = zext i1 %150 to i32, !dbg !3536
  br label %152, !dbg !3535

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3535
  %154 = icmp eq i32 %153, 0, !dbg !3535
  call void @llvm.dbg.value(metadata i1 %154, metadata !3417, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3537
  call void @llvm.dbg.value(metadata i1 %36, metadata !3420, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3537
  %155 = or i1 %36, %154, !dbg !3538
  br i1 %155, label %156, label %192, !dbg !3538

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3539
  %158 = sub i32 %157, %17, !dbg !3539
  %159 = lshr i32 %158, 2, !dbg !3540
  call void @llvm.dbg.value(metadata i32 %159, metadata !3421, metadata !DIExpression()), !dbg !3541
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3542
  br i1 %161, label %162, label %163, !dbg !3542

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 635) #25, !dbg !3544
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.10, i32 0, i32 0)) #25, !dbg !3544
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 635) #25, !dbg !3544
  unreachable, !dbg !3544

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3549
  br i1 %164, label %165, label %166, !dbg !3551

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 640) #25, !dbg !3552
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.11, i32 0, i32 0)) #25, !dbg !3552
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 640) #25, !dbg !3552
  unreachable, !dbg !3552

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3557

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3558
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3561
  store i8 %168, i8* %169, align 1, !dbg !3562
  %170 = trunc i32 %132 to i8, !dbg !3563
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3564
  store i8 %170, i8* %171, align 1, !dbg !3565
  br i1 %154, label %175, label %172, !dbg !3566

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3567
  store i8 %173, i8* %169, align 1, !dbg !3567
  %174 = add i32 %131, 1, !dbg !3570
  call void @llvm.dbg.value(metadata i32 %174, metadata !3387, metadata !DIExpression()), !dbg !3440
  br label %187, !dbg !3571

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3572
  call void @llvm.dbg.value(metadata i32 %176, metadata !3386, metadata !DIExpression()), !dbg !3440
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3574

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3575
  call void @llvm.dbg.value(metadata i32 %179, metadata !3374, metadata !DIExpression()), !dbg !3440
  br label %187, !dbg !3578

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3579

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3580
  call void @llvm.dbg.value(metadata i32 %182, metadata !3374, metadata !DIExpression()), !dbg !3440
  br label %187, !dbg !3583

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3584
  %185 = add i32 %142, 2, !dbg !3586
  %186 = add i32 %185, %184, !dbg !3587
  call void @llvm.dbg.value(metadata i32 %186, metadata !3374, metadata !DIExpression()), !dbg !3440
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3440
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3440
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3440
  call void @llvm.dbg.value(metadata i32 %190, metadata !3374, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %189, metadata !3386, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %188, metadata !3387, metadata !DIExpression()), !dbg !3440
  %191 = add nuw nsw i32 %137, 1, !dbg !3588
  call void @llvm.dbg.value(metadata i32 %191, metadata !3385, metadata !DIExpression()), !dbg !3440
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3440
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3523
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3440
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3524
  call void @llvm.dbg.value(metadata i32 %196, metadata !3374, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %195, metadata !3385, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %194, metadata !3386, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %193, metadata !3387, metadata !DIExpression()), !dbg !3440
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3589
  call void @llvm.dbg.value(metadata i8* %197, metadata !3379, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %143, metadata !3377, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %141, metadata !3376, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %139, metadata !3380, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %138, metadata !3381, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 poison, metadata !3394, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 poison, metadata !3391, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %132, metadata !3388, metadata !DIExpression()), !dbg !3440
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3472
  call void @llvm.dbg.value(metadata i8* %198, metadata !3376, metadata !DIExpression()), !dbg !3440
  %199 = load i8, i8* %198, align 1, !dbg !3474
  %200 = icmp eq i8 %199, 0, !dbg !3475
  br i1 %200, label %226, label %63, !dbg !3476

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3590

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3591
  call void @llvm.dbg.value(metadata i8* %203, metadata !3377, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 undef, metadata !3424, metadata !DIExpression()), !dbg !3592
  br i1 %22, label %219, label %204, !dbg !3593

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3591
  %206 = load i32, i32* %205, align 4, !dbg !3591
  call void @llvm.dbg.value(metadata i32 %206, metadata !3424, metadata !DIExpression()), !dbg !3592
  %207 = inttoptr i32 %118 to i32*, !dbg !3594
  store i32 %206, i32* %207, align 4, !dbg !3597
  br label %219, !dbg !3598

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3599
  %210 = add i32 %209, 7, !dbg !3599
  %211 = and i32 %210, -8, !dbg !3599
  %212 = inttoptr i32 %211 to i8*, !dbg !3599
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3599
  call void @llvm.dbg.value(metadata i8* %213, metadata !3377, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i64 undef, metadata !3430, metadata !DIExpression()), !dbg !3600
  br i1 %22, label %219, label %214, !dbg !3601

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3599
  %216 = load i64, i64* %215, align 8, !dbg !3599
  call void @llvm.dbg.value(metadata i64 %216, metadata !3430, metadata !DIExpression()), !dbg !3600
  %217 = inttoptr i32 %118 to i64*, !dbg !3602
  store i64 %216, i64* %217, align 8, !dbg !3607
  br label %219, !dbg !3608

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 709) #25, !dbg !3609
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3609
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 709) #25, !dbg !3609
  unreachable, !dbg !3609

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3614
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3614
  call void @llvm.dbg.value(metadata i8* %221, metadata !3377, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %40, metadata !3376, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %222, metadata !3379, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %113, metadata !3380, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %112, metadata !3381, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 poison, metadata !3394, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 poison, metadata !3391, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %72, metadata !3388, metadata !DIExpression()), !dbg !3440
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3472
  call void @llvm.dbg.value(metadata i8* %223, metadata !3376, metadata !DIExpression()), !dbg !3440
  %224 = load i8, i8* %223, align 1, !dbg !3474
  %225 = icmp eq i8 %224, 0, !dbg !3475
  br i1 %225, label %226, label %38, !dbg !3476

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3615
  %228 = ptrtoint i8* %227 to i32, !dbg !3616
  %229 = sub i32 %228, %17, !dbg !3616
  %230 = lshr i32 %229, 2, !dbg !3618
  %231 = icmp ugt i32 %229, 1023, !dbg !3619
  br i1 %231, label %232, label %233, !dbg !3620

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 721) #25, !dbg !3621
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3621
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 721) #25, !dbg !3621
  unreachable, !dbg !3621

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3626

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3627
  %236 = add i32 %235, %229, !dbg !3630
  br label %320, !dbg !3631

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3632
  store i8 %238, i8* %0, align 1, !dbg !3633
  %239 = trunc i32 %194 to i8, !dbg !3634
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3636
  store i8 %240, i8* %242, align 1, !dbg !3638
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3639
  store i8 %241, i8* %243, align 1, !dbg !3640
  %244 = trunc i32 %193 to i8, !dbg !3641
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3642
  store i8 %244, i8* %245, align 1, !dbg !3643
  %246 = icmp eq i32 %193, 0, !dbg !3644
  %247 = xor i1 %246, true, !dbg !3645
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3645
  call void @llvm.dbg.value(metadata i8* %227, metadata !3379, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 0, metadata !3389, metadata !DIExpression()), !dbg !3440
  br i1 %249, label %250, label %269, !dbg !3645

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3646

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3379, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %254, metadata !3389, metadata !DIExpression()), !dbg !3440
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3647
  %256 = load i8, i8* %255, align 1, !dbg !3647
  %257 = icmp sgt i8 %256, -1, !dbg !3649
  br i1 %257, label %265, label %258, !dbg !3650

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3433, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3651
  %259 = ptrtoint i8* %253 to i32, !dbg !3652
  %260 = add i32 %251, %259, !dbg !3654
  %261 = icmp ugt i32 %260, %196, !dbg !3655
  br i1 %261, label %320, label %262, !dbg !3656

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3657
  call void @llvm.dbg.value(metadata i8 %263, metadata !3433, metadata !DIExpression()), !dbg !3651
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3658
  call void @llvm.dbg.value(metadata i8* %264, metadata !3379, metadata !DIExpression()), !dbg !3440
  store i8 %263, i8* %253, align 1, !dbg !3659
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3589
  call void @llvm.dbg.value(metadata i8* %266, metadata !3379, metadata !DIExpression()), !dbg !3440
  %267 = add nuw i32 %254, 1, !dbg !3660
  call void @llvm.dbg.value(metadata i32 %267, metadata !3389, metadata !DIExpression()), !dbg !3440
  %268 = icmp eq i32 %267, %195, !dbg !3661
  br i1 %268, label %269, label %252, !dbg !3646, !llvm.loop !3662

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3589
  call void @llvm.dbg.value(metadata i8* %270, metadata !3379, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 0, metadata !3389, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %133, metadata !3390, metadata !DIExpression()), !dbg !3440
  %271 = icmp eq i32 %195, 0, !dbg !3664
  br i1 %271, label %316, label %272, !dbg !3667

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3667

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3379, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %276, metadata !3390, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %277, metadata !3389, metadata !DIExpression()), !dbg !3440
  br i1 %246, label %282, label %278, !dbg !3668

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3671
  %280 = load i8, i8* %279, align 1, !dbg !3671
  %281 = icmp sgt i8 %280, -1, !dbg !3672
  br i1 %281, label %282, label %311, !dbg !3673

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3674

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3380, metadata !DIExpression()), !dbg !3440
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3675
  %285 = load i8, i8* %284, align 1, !dbg !3675
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3678
  call void @llvm.dbg.value(metadata i8* %286, metadata !3379, metadata !DIExpression()), !dbg !3440
  store i8 %285, i8* %275, align 1, !dbg !3679
  br label %297, !dbg !3680

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3681
  %289 = load i8, i8* %288, align 1, !dbg !3681
  %290 = zext i8 %289 to i32, !dbg !3681
  %291 = shl nuw nsw i32 %290, 2, !dbg !3683
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3684
  %293 = bitcast i8* %292 to i8**, !dbg !3685
  %294 = load i8*, i8** %293, align 4, !dbg !3685
  call void @llvm.dbg.value(metadata i8* %294, metadata !3390, metadata !DIExpression()), !dbg !3440
  store i8* null, i8** %293, align 4, !dbg !3686
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3687
  %296 = add i32 %295, 1, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %296, metadata !3380, metadata !DIExpression()), !dbg !3440
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3440
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3689
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3440
  call void @llvm.dbg.value(metadata i8* %300, metadata !3379, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %299, metadata !3380, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %298, metadata !3390, metadata !DIExpression()), !dbg !3440
  %301 = ptrtoint i8* %300 to i32, !dbg !3690
  %302 = add i32 %273, %299, !dbg !3692
  %303 = add i32 %302, %301, !dbg !3693
  %304 = icmp ugt i32 %303, %196, !dbg !3694
  br i1 %304, label %320, label %305, !dbg !3695

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3696
  %307 = load i8, i8* %306, align 1, !dbg !3696
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3697
  call void @llvm.dbg.value(metadata i8* %308, metadata !3379, metadata !DIExpression()), !dbg !3440
  store i8 %307, i8* %300, align 1, !dbg !3698
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3699
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3700
  call void @llvm.dbg.value(metadata i8* %310, metadata !3379, metadata !DIExpression()), !dbg !3440
  br label %311, !dbg !3701

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3702
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3440
  call void @llvm.dbg.value(metadata i8* %313, metadata !3379, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8* %312, metadata !3390, metadata !DIExpression()), !dbg !3440
  %314 = add nuw i32 %277, 1, !dbg !3703
  call void @llvm.dbg.value(metadata i32 %314, metadata !3389, metadata !DIExpression()), !dbg !3440
  %315 = icmp eq i32 %314, %195, !dbg !3664
  br i1 %315, label %316, label %274, !dbg !3667, !llvm.loop !3704

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3589
  %318 = ptrtoint i8* %317 to i32, !dbg !3706
  %319 = sub i32 %318, %17, !dbg !3706
  br label %320, !dbg !3707

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3708
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3708
  ret i32 %321, !dbg !3708
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !3709 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3713, metadata !DIExpression()), !dbg !3714
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3715
  ret i1 %2, !dbg !3716
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !3717 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3722, metadata !DIExpression()), !dbg !3723
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3724
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3725
  %4 = and i1 %2, %3, !dbg !3725
  ret i1 %4, !dbg !3726
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3727 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3731, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata i32 %1, metadata !3732, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata i32 %2, metadata !3733, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata i8* %3, metadata !3734, metadata !DIExpression()), !dbg !3737
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3738
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3738
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3735, metadata !DIExpression()), !dbg !3739
  call void @llvm.va_start(i8* nonnull %6), !dbg !3740
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3741
  %8 = load i32, i32* %7, align 4, !dbg !3741
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3741
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3741
  call void @llvm.dbg.value(metadata i32 %10, metadata !3736, metadata !DIExpression()), !dbg !3737
  call void @llvm.va_end(i8* nonnull %6), !dbg !3742
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3743
  ret i32 %10, !dbg !3744
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3745 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3757, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3758, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i8* %2, metadata !3759, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i8* %3, metadata !3760, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i8* %3, metadata !3761, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i8* %3, metadata !3762, metadata !DIExpression()), !dbg !3776
  %5 = icmp eq i8* %3, null, !dbg !3777
  br i1 %5, label %45, label %6, !dbg !3779

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3771, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3776
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3780
  %8 = load i8, i8* %7, align 1, !dbg !3780
  %9 = zext i8 %8 to i32, !dbg !3781
  call void @llvm.dbg.value(metadata i32 %9, metadata !3772, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i8 undef, metadata !3773, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3776
  call void @llvm.dbg.value(metadata i8 undef, metadata !3774, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3776
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3768, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3776
  call void @llvm.dbg.value(metadata i32 0, metadata !3770, metadata !DIExpression()), !dbg !3776
  %10 = icmp eq i8 %8, 0, !dbg !3782
  br i1 %10, label %39, label %11, !dbg !3785

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3786
  call void @llvm.dbg.value(metadata i8 %12, metadata !3771, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3776
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3768, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3776
  %13 = zext i8 %12 to i32, !dbg !3787
  call void @llvm.dbg.value(metadata i32 %13, metadata !3771, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3776
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3768, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3776
  %14 = shl nuw nsw i32 %13, 2, !dbg !3788
  call void @llvm.dbg.value(metadata i32 %14, metadata !3771, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3768, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3776
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3789
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3768, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3776
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3790
  %17 = load i8, i8* %16, align 1, !dbg !3790
  call void @llvm.dbg.value(metadata i8 %17, metadata !3773, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3776
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3768, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3776
  %18 = zext i8 %17 to i32, !dbg !3791
  call void @llvm.dbg.value(metadata i32 %18, metadata !3773, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3768, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3776
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3792
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3768, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3776
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3793
  %21 = load i8, i8* %20, align 1, !dbg !3793
  call void @llvm.dbg.value(metadata i8 %21, metadata !3774, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3776
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3768, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3776
  %22 = zext i8 %21 to i32, !dbg !3794
  call void @llvm.dbg.value(metadata i32 %22, metadata !3774, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3768, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3776
  %23 = shl nuw nsw i32 %22, 1, !dbg !3795
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3768, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3776
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3796
  call void @llvm.dbg.value(metadata i8* %24, metadata !3768, metadata !DIExpression()), !dbg !3776
  br label %25, !dbg !3785

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3768, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i32 %27, metadata !3770, metadata !DIExpression()), !dbg !3776
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3797
  call void @llvm.dbg.value(metadata i8* %28, metadata !3768, metadata !DIExpression()), !dbg !3776
  %29 = load i8, i8* %26, align 1, !dbg !3799
  %30 = zext i8 %29 to i32, !dbg !3799
  call void @llvm.dbg.value(metadata i32 %30, metadata !3775, metadata !DIExpression()), !dbg !3776
  %31 = shl nuw nsw i32 %30, 2, !dbg !3800
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3801
  %33 = bitcast i8* %32 to i8**, !dbg !3802
  call void @llvm.dbg.value(metadata i8** %33, metadata !3769, metadata !DIExpression()), !dbg !3776
  store i8* %28, i8** %33, align 4, !dbg !3803
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3804
  %35 = add i32 %34, 1, !dbg !3805
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3806
  call void @llvm.dbg.value(metadata i8* %36, metadata !3768, metadata !DIExpression()), !dbg !3776
  %37 = add nuw nsw i32 %27, 1, !dbg !3807
  call void @llvm.dbg.value(metadata i32 %37, metadata !3770, metadata !DIExpression()), !dbg !3776
  %38 = icmp eq i32 %37, %9, !dbg !3782
  br i1 %38, label %39, label %25, !dbg !3785, !llvm.loop !3808

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3810
  call void @llvm.dbg.value(metadata i8* %40, metadata !3761, metadata !DIExpression()), !dbg !3776
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3811
  %42 = bitcast i8* %41 to i8**, !dbg !3811
  %43 = load i8*, i8** %42, align 1, !dbg !3811
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3812
  br label %45, !dbg !3813

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3776
  ret i32 %46, !dbg !3814
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3815 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3819, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3820, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i8* %2, metadata !3821, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i8* %3, metadata !3822, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i8* %4, metadata !3823, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i8* %4, metadata !3824, metadata !DIExpression()), !dbg !3829
  %6 = ptrtoint i8* %4 to i32, !dbg !3830
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3830
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3830
  ret i32 %8, !dbg !3831
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3832 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3836, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i32 %1, metadata !3837, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8 0, metadata !3839, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i32 0, metadata !3840, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8 poison, metadata !3839, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %0, metadata !3836, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3841
  %3 = load i8, i8* %0, align 1, !dbg !3842
  call void @llvm.dbg.value(metadata i8 %3, metadata !3838, metadata !DIExpression()), !dbg !3841
  %4 = icmp eq i8 %3, 0, !dbg !3843
  br i1 %4, label %29, label %5, !dbg !3844

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3845
  call void @llvm.dbg.value(metadata i32 %8, metadata !3840, metadata !DIExpression()), !dbg !3841
  br i1 %9, label %11, label %22, !dbg !3846

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3848
  br i1 %12, label %13, label %17, !dbg !3852

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3853
  br i1 %14, label %29, label %15, !dbg !3856

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3857
  br i1 %16, label %29, label %22, !dbg !3859

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3860
  %19 = xor i1 %18, true, !dbg !3862
  %20 = zext i1 %18 to i32, !dbg !3862
  %21 = add nsw i32 %8, %20, !dbg !3862
  br label %22, !dbg !3862

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3841
  call void @llvm.dbg.value(metadata i32 %24, metadata !3840, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8 poison, metadata !3839, metadata !DIExpression()), !dbg !3841
  %25 = icmp eq i8 %6, 37, !dbg !3863
  %26 = xor i1 %25, %23, !dbg !3865
  call void @llvm.dbg.value(metadata i8* %10, metadata !3836, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %10, metadata !3836, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3841
  %27 = load i8, i8* %10, align 1, !dbg !3842
  call void @llvm.dbg.value(metadata i8 %27, metadata !3838, metadata !DIExpression()), !dbg !3841
  %28 = icmp eq i8 %27, 0, !dbg !3843
  br i1 %28, label %29, label %5, !dbg !3844, !llvm.loop !3866

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3841
  ret i1 %30, !dbg !3868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #3 !dbg !3869 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3873, metadata !DIExpression()), !dbg !3874
  %2 = add i8 %0, -64, !dbg !3875
  %3 = icmp ult i8 %2, 59, !dbg !3875
  ret i1 %3, !dbg !3876
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3877 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3885, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 %1, metadata !3886, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3887, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8* %3, metadata !3888, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 %4, metadata !3889, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i16* %5, metadata !3890, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 %6, metadata !3891, metadata !DIExpression()), !dbg !3954
  %11 = icmp eq i8* %0, null, !dbg !3955
  br i1 %11, label %12, label %13, !dbg !3958

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 916) #25, !dbg !3959
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 916) #25, !dbg !3959
  unreachable, !dbg !3959

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3892, metadata !DIExpression()), !dbg !3954
  %14 = bitcast i8* %0 to i32*, !dbg !3961
  call void @llvm.dbg.value(metadata i32* %14, metadata !3893, metadata !DIExpression()), !dbg !3954
  %15 = and i32 %4, 8, !dbg !3962
  %16 = icmp eq i32 %15, 0, !dbg !3963
  call void @llvm.dbg.value(metadata i1 %16, metadata !3897, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3954
  call void @llvm.dbg.value(metadata i8* %0, metadata !3900, metadata !DIExpression()), !dbg !3954
  %17 = icmp eq i32 %1, 0, !dbg !3964
  br i1 %17, label %18, label %20, !dbg !3965

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3966
  br label %20, !dbg !3965

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3965
  call void @llvm.dbg.value(metadata i32 %21, metadata !3886, metadata !DIExpression()), !dbg !3954
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3967
  %23 = load i8, i8* %22, align 1, !dbg !3967
  %24 = zext i8 %23 to i32, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %24, metadata !3895, metadata !DIExpression()), !dbg !3954
  %25 = icmp ne i8 %23, 0, !dbg !3969
  %26 = and i32 %4, 1, !dbg !3970
  %27 = icmp ne i32 %26, 0, !dbg !3970
  %28 = and i1 %27, %25, !dbg !3970
  call void @llvm.dbg.value(metadata i1 %28, metadata !3899, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3954
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3971
  %30 = load i8, i8* %29, align 1, !dbg !3971
  %31 = zext i8 %30 to i32, !dbg !3972
  call void @llvm.dbg.value(metadata i32 %31, metadata !3896, metadata !DIExpression()), !dbg !3954
  %32 = icmp ne i8 %30, 0, !dbg !3973
  %33 = and i32 %4, 2, !dbg !3974
  %34 = icmp ne i32 %33, 0, !dbg !3974
  %35 = and i1 %34, %32, !dbg !3974
  call void @llvm.dbg.value(metadata i1 %35, metadata !3898, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3954
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3975
  br i1 %36, label %41, label %37, !dbg !3975

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3977
  br i1 %38, label %287, label %39, !dbg !3980

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3981
  br label %287, !dbg !3983

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3984
  %43 = zext i8 %42 to i32, !dbg !3985
  %44 = shl nuw nsw i32 %43, 2, !dbg !3986
  call void @llvm.dbg.value(metadata i32 %44, metadata !3894, metadata !DIExpression()), !dbg !3954
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3987
  %46 = bitcast i8* %45 to i8**, !dbg !3988
  %47 = load i8*, i8** %46, align 4, !dbg !3988
  call void @llvm.dbg.value(metadata i8* %47, metadata !3903, metadata !DIExpression()), !dbg !3954
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3989
  call void @llvm.dbg.value(metadata i8* %48, metadata !3904, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 0, metadata !3905, metadata !DIExpression()), !dbg !3954
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3990
  br i1 %49, label %50, label %135, !dbg !3991

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3902, metadata !DIExpression()), !dbg !3954
  br i1 %28, label %51, label %76, !dbg !3992

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3902, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8* %48, metadata !3904, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 0, metadata !3905, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 0, metadata !3906, metadata !DIExpression()), !dbg !3993
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3994

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3902, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8* %55, metadata !3904, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 %56, metadata !3905, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 %57, metadata !3906, metadata !DIExpression()), !dbg !3993
  %58 = load i8, i8* %55, align 1, !dbg !3995
  %59 = zext i8 %58 to i32, !dbg !3996
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3996
  %61 = bitcast i32* %60 to i8**, !dbg !3997
  %62 = load i8*, i8** %61, align 4, !dbg !3997
  call void @llvm.dbg.value(metadata i8* %62, metadata !3912, metadata !DIExpression()), !dbg !3998
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3999
  call void @llvm.dbg.value(metadata i32 %63, metadata !3915, metadata !DIExpression()), !dbg !3998
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4000
  br i1 %65, label %66, label %70, !dbg !4000

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4002
  %68 = add nuw i32 %56, 1, !dbg !4004
  call void @llvm.dbg.value(metadata i32 %68, metadata !3905, metadata !DIExpression()), !dbg !3954
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4005
  store i16 %67, i16* %69, align 2, !dbg !4006
  br label %70, !dbg !4007

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3954
  call void @llvm.dbg.value(metadata i32 %71, metadata !3905, metadata !DIExpression()), !dbg !3954
  %72 = add nsw i32 %63, %54, !dbg !4008
  call void @llvm.dbg.value(metadata i32 %72, metadata !3902, metadata !DIExpression()), !dbg !3954
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4009
  call void @llvm.dbg.value(metadata i8* %73, metadata !3904, metadata !DIExpression()), !dbg !3954
  %74 = add nuw nsw i32 %57, 1, !dbg !4010
  call void @llvm.dbg.value(metadata i32 %74, metadata !3906, metadata !DIExpression()), !dbg !3993
  %75 = icmp eq i32 %74, %24, !dbg !4011
  br i1 %75, label %82, label %53, !dbg !3994, !llvm.loop !4012

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4014
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4014
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4014
  br label %82, !dbg !4014

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4017
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3954
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4018
  call void @llvm.dbg.value(metadata i1 undef, metadata !3916, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4019
  call void @llvm.dbg.value(metadata i32 0, metadata !3917, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata i32 %85, metadata !3902, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8* %84, metadata !3904, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 %83, metadata !3905, metadata !DIExpression()), !dbg !3954
  %86 = icmp eq i8 %30, 0, !dbg !4021
  br i1 %86, label %287, label %87, !dbg !4022

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4023
  %89 = icmp eq i32 %88, 0, !dbg !4024
  call void @llvm.dbg.value(metadata i1 %89, metadata !3916, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4019
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4022

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3902, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8* %96, metadata !3904, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 %97, metadata !3905, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 %98, metadata !3917, metadata !DIExpression()), !dbg !4020
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4025
  call void @llvm.dbg.value(metadata i8* %99, metadata !3904, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8 undef, metadata !3919, metadata !DIExpression()), !dbg !4026
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4027
  call void @llvm.dbg.value(metadata i8* %100, metadata !3904, metadata !DIExpression()), !dbg !3954
  %101 = load i8, i8* %99, align 1, !dbg !4028
  call void @llvm.dbg.value(metadata i8 %101, metadata !3922, metadata !DIExpression()), !dbg !4026
  %102 = zext i8 %101 to i32, !dbg !4029
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4029
  %104 = bitcast i32* %103 to i8**, !dbg !4030
  %105 = load i8*, i8** %104, align 4, !dbg !4030
  call void @llvm.dbg.value(metadata i8* %105, metadata !3923, metadata !DIExpression()), !dbg !4026
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !4031
  call void @llvm.dbg.value(metadata i1 %106, metadata !3924, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4026
  br i1 %16, label %113, label %107, !dbg !4032

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4034
  call void @llvm.dbg.value(metadata i8 %108, metadata !3919, metadata !DIExpression()), !dbg !4026
  %109 = zext i8 %108 to i32, !dbg !4035
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !4036
  br i1 %110, label %111, label %113, !dbg !4037

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !4038
  %112 = add nsw i32 %95, -2, !dbg !4044
  call void @llvm.dbg.value(metadata i32 %112, metadata !3902, metadata !DIExpression()), !dbg !3954
  br label %130, !dbg !4045

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4046

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4047

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4049
  call void @llvm.dbg.value(metadata i32 %116, metadata !3902, metadata !DIExpression()), !dbg !3954
  br label %130, !dbg !4052

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4053

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3950), !dbg !4054
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !4055
  call void @llvm.dbg.value(metadata i32 %119, metadata !3925, metadata !DIExpression()), !dbg !4026
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4056
  br i1 %121, label %122, label %126, !dbg !4056

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4058
  %124 = add nuw i32 %97, 1, !dbg !4060
  call void @llvm.dbg.value(metadata i32 %124, metadata !3905, metadata !DIExpression()), !dbg !3954
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4061
  store i16 %123, i16* %125, align 2, !dbg !4062
  br label %126, !dbg !4063

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3954
  call void @llvm.dbg.value(metadata i32 %127, metadata !3905, metadata !DIExpression()), !dbg !3954
  %128 = add i32 %95, -1, !dbg !4064
  %129 = add i32 %128, %119, !dbg !4065
  call void @llvm.dbg.value(metadata i32 %129, metadata !3902, metadata !DIExpression()), !dbg !3954
  br label %130, !dbg !4066

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3954
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4026
  call void @llvm.dbg.value(metadata i32 %132, metadata !3902, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 %131, metadata !3905, metadata !DIExpression()), !dbg !3954
  %133 = add nuw nsw i32 %98, 1, !dbg !4067
  call void @llvm.dbg.value(metadata i8* %100, metadata !3904, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 %133, metadata !3917, metadata !DIExpression()), !dbg !4020
  %134 = icmp eq i32 %133, %31, !dbg !4021
  br i1 %134, label %287, label %94, !dbg !4022, !llvm.loop !4068

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3927, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3928, metadata !DIExpression()), !dbg !4071
  br i1 %28, label %136, label %138, !dbg !4072

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3929, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8 0, metadata !3930, metadata !DIExpression()), !dbg !3954
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4073
  call void @llvm.dbg.value(metadata i8* %137, metadata !3931, metadata !DIExpression()), !dbg !3954
  br label %143, !dbg !4076

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4077
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4077

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3931, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8 undef, metadata !3930, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8 0, metadata !3929, metadata !DIExpression()), !dbg !3954
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !4079
  br label %148, !dbg !4082

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4083
  call void @llvm.dbg.value(metadata i8* %151, metadata !3904, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 0, metadata !3933, metadata !DIExpression()), !dbg !4084
  call void @llvm.dbg.value(metadata i8 %149, metadata !3930, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8 %150, metadata !3929, metadata !DIExpression()), !dbg !3954
  %152 = icmp eq i8 %30, 0, !dbg !4085
  br i1 %152, label %153, label %155, !dbg !4086

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4087
  br label %160, !dbg !4086

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4086

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4087
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4088
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4089
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3954
  call void @llvm.dbg.value(metadata i8 undef, metadata !3926, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3954
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4090
  %166 = load i8, i8* %165, align 1, !dbg !4090
  %167 = zext i8 %162 to i32, !dbg !4091
  %168 = add i8 %166, %162, !dbg !4092
  call void @llvm.dbg.value(metadata i8 %168, metadata !3926, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3954
  %169 = icmp eq i32 %33, 0, !dbg !4093
  %170 = lshr i8 %163, 1, !dbg !4094
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4094
  call void @llvm.dbg.value(metadata i8 %171, metadata !3926, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3954
  %172 = icmp eq i32 %26, 0, !dbg !4095
  %173 = icmp eq i32 %161, 0, !dbg !4087
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4087
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4087
  call void @llvm.dbg.value(metadata i8 %175, metadata !3926, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3954
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3941, metadata !DIExpression()), !dbg !4096
  %176 = load i32, i32* %14, align 1, !dbg !4097
  store i8 %168, i8* %165, align 1, !dbg !4098
  store i8 %175, i8* %22, align 1, !dbg !4098
  store i8 %171, i8* %29, align 1, !dbg !4098
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !4099
  call void @llvm.dbg.value(metadata i32 %177, metadata !3932, metadata !DIExpression()), !dbg !3954
  %178 = icmp slt i32 %177, 0, !dbg !4100
  br i1 %178, label %287, label %240, !dbg !4102

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3904, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 %181, metadata !3933, metadata !DIExpression()), !dbg !4084
  call void @llvm.dbg.value(metadata i8 %182, metadata !3930, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8 %183, metadata !3929, metadata !DIExpression()), !dbg !3954
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4103
  call void @llvm.dbg.value(metadata i8* %184, metadata !3904, metadata !DIExpression()), !dbg !3954
  %185 = load i8, i8* %180, align 1, !dbg !4104
  call void @llvm.dbg.value(metadata i8 %185, metadata !3935, metadata !DIExpression()), !dbg !4105
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4106
  call void @llvm.dbg.value(metadata i8* %186, metadata !3904, metadata !DIExpression()), !dbg !3954
  %187 = load i8, i8* %184, align 1, !dbg !4107
  call void @llvm.dbg.value(metadata i8 %187, metadata !3938, metadata !DIExpression()), !dbg !4105
  %188 = zext i8 %187 to i32, !dbg !4108
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4108
  %190 = bitcast i32* %189 to i8**, !dbg !4109
  %191 = load i8*, i8** %190, align 4, !dbg !4109
  call void @llvm.dbg.value(metadata i8* %191, metadata !3939, metadata !DIExpression()), !dbg !4105
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !4110
  call void @llvm.dbg.value(metadata i1 %192, metadata !3940, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4105
  br i1 %16, label %196, label %193, !dbg !4111

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4113
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !4114
  br i1 %195, label %235, label %196, !dbg !4115

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4116

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4117

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4120
  br i1 %199, label %201, label %200, !dbg !4125

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4126
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4126
  unreachable, !dbg !4126

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4120
  %203 = add nuw nsw i8 %183, 1, !dbg !4128
  call void @llvm.dbg.value(metadata i8 %203, metadata !3929, metadata !DIExpression()), !dbg !3954
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4129
  br label %231, !dbg !4130

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4131

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4132
  br i1 %207, label %209, label %208, !dbg !4137

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4138
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4138
  unreachable, !dbg !4138

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4132
  %211 = add nuw nsw i8 %182, 1, !dbg !4140
  call void @llvm.dbg.value(metadata i8 %211, metadata !3930, metadata !DIExpression()), !dbg !3954
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4141
  br label %231, !dbg !4142

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4143

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4145
  br i1 %215, label %217, label %216, !dbg !4150

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4151
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4151
  unreachable, !dbg !4151

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4145
  %219 = add nuw nsw i8 %183, 1, !dbg !4153
  call void @llvm.dbg.value(metadata i8 %219, metadata !3929, metadata !DIExpression()), !dbg !3954
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4154
  br label %231, !dbg !4155

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4156
  br i1 %222, label %224, label %223, !dbg !4160

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4161
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4161
  unreachable, !dbg !4161

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4156
  %226 = add nuw nsw i8 %182, 1, !dbg !4163
  call void @llvm.dbg.value(metadata i8 %226, metadata !3930, metadata !DIExpression()), !dbg !3954
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4164
  store i8 %185, i8* %227, align 1, !dbg !4165
  %228 = add nuw nsw i8 %182, 2, !dbg !4166
  call void @llvm.dbg.value(metadata i8 %228, metadata !3930, metadata !DIExpression()), !dbg !3954
  %229 = zext i8 %226 to i32, !dbg !4167
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4167
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4168
  br label %235, !dbg !4169

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3954
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4089
  call void @llvm.dbg.value(metadata i8 %237, metadata !3930, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i8 %236, metadata !3929, metadata !DIExpression()), !dbg !3954
  %238 = add nuw nsw i32 %181, 1, !dbg !4169
  call void @llvm.dbg.value(metadata i8* %186, metadata !3904, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 %238, metadata !3933, metadata !DIExpression()), !dbg !4084
  %239 = icmp eq i32 %238, %31, !dbg !4085
  br i1 %239, label %160, label %179, !dbg !4086, !llvm.loop !4170

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4094
  call void @llvm.dbg.value(metadata i32 %177, metadata !3902, metadata !DIExpression()), !dbg !3954
  store i32 %176, i32* %14, align 1, !dbg !4172
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4173
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %243, metadata !3932, metadata !DIExpression()), !dbg !3954
  %244 = icmp slt i32 %243, 0, !dbg !4175
  br i1 %244, label %287, label %245, !dbg !4177

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3902, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3954
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4178
  %248 = add nuw nsw i32 %44, %24, !dbg !4178
  %249 = sub i32 %247, %248, !dbg !4178
  call void @llvm.dbg.value(metadata i32 %249, metadata !3942, metadata !DIExpression()), !dbg !3954
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4179
  call void @llvm.dbg.value(metadata i32 %250, metadata !3932, metadata !DIExpression()), !dbg !3954
  %251 = icmp slt i32 %250, 0, !dbg !4180
  br i1 %251, label %287, label %252, !dbg !4182

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4183
  call void @llvm.dbg.value(metadata i32 %253, metadata !3902, metadata !DIExpression()), !dbg !3954
  %254 = add nuw nsw i32 %253, %250, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %254, metadata !3902, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 0, metadata !3943, metadata !DIExpression()), !dbg !4185
  %255 = icmp eq i8 %162, 0, !dbg !4186
  br i1 %255, label %284, label %256, !dbg !4187

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4187

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3943, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i32 %260, metadata !3902, metadata !DIExpression()), !dbg !3954
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4188
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4189
  %262 = load i8, i8* %261, align 1, !dbg !4189
  call void @llvm.dbg.value(metadata i8 %262, metadata !3945, metadata !DIExpression()), !dbg !4190
  store i8 %262, i8* %10, align 1, !dbg !4191
  %263 = zext i8 %262 to i32, !dbg !4192
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4192
  %265 = bitcast i32* %264 to i8**, !dbg !4193
  %266 = load i8*, i8** %265, align 4, !dbg !4193
  call void @llvm.dbg.value(metadata i8* %266, metadata !3948, metadata !DIExpression()), !dbg !4190
  br i1 %257, label %270, label %267, !dbg !4194

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4195
  %269 = load i16, i16* %268, align 2, !dbg !4195
  br label %270, !dbg !4194

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4194
  call void @llvm.dbg.value(metadata i32 undef, metadata !3949, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %10, metadata !3945, metadata !DIExpression(DW_OP_deref)), !dbg !4190
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4196
  call void @llvm.dbg.value(metadata i32 %272, metadata !3932, metadata !DIExpression()), !dbg !3954
  %273 = icmp slt i32 %272, 0, !dbg !4197
  br i1 %273, label %277, label %274, !dbg !4199

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3949, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3902, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3954
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4200
  call void @llvm.dbg.value(metadata i32 %275, metadata !3932, metadata !DIExpression()), !dbg !3954
  %276 = icmp slt i32 %275, 0, !dbg !4201
  br i1 %276, label %277, label %279, !dbg !4203

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3902, metadata !DIExpression()), !dbg !3954
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4204
  call void @llvm.dbg.value(metadata i32 undef, metadata !3902, metadata !DIExpression()), !dbg !3954
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4205
  call void @llvm.dbg.value(metadata i32 %280, metadata !3902, metadata !DIExpression()), !dbg !3954
  %281 = add nsw i32 %280, %275, !dbg !4206
  call void @llvm.dbg.value(metadata i32 %281, metadata !3902, metadata !DIExpression()), !dbg !3954
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4204
  %282 = add nuw nsw i32 %259, 1, !dbg !4207
  call void @llvm.dbg.value(metadata i32 %282, metadata !3943, metadata !DIExpression()), !dbg !4185
  %283 = icmp eq i32 %282, %167, !dbg !4186
  br i1 %283, label %284, label %258, !dbg !4187, !llvm.loop !4208

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4184
  call void @llvm.dbg.value(metadata i32 %285, metadata !3902, metadata !DIExpression()), !dbg !3954
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4210
  br label %287, !dbg !4211

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3954
  ret i32 %288, !dbg !4212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4213 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4217, metadata !DIExpression()), !dbg !4225
  %2 = icmp eq i8* %0, null, !dbg !4226
  br i1 %2, label %3, label %4, !dbg !4229

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 198) #25, !dbg !4230
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 198) #25, !dbg !4230
  unreachable, !dbg !4230

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4218, metadata !DIExpression()), !dbg !4225
  call void @llvm.dbg.value(metadata i8* %0, metadata !4219, metadata !DIExpression()), !dbg !4225
  %5 = load i8, i8* %0, align 1, !dbg !4232
  %6 = zext i8 %5 to i32, !dbg !4232
  %7 = shl nuw nsw i32 %6, 2, !dbg !4233
  call void @llvm.dbg.value(metadata i32 %7, metadata !4220, metadata !DIExpression()), !dbg !4225
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4234
  %9 = load i8, i8* %8, align 1, !dbg !4234
  %10 = zext i8 %9 to i32, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %10, metadata !4221, metadata !DIExpression()), !dbg !4225
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4235
  %12 = load i8, i8* %11, align 1, !dbg !4235
  %13 = zext i8 %12 to i32, !dbg !4235
  call void @llvm.dbg.value(metadata i32 %13, metadata !4222, metadata !DIExpression()), !dbg !4225
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4236
  call void @llvm.dbg.value(metadata i8* %14, metadata !4218, metadata !DIExpression()), !dbg !4225
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4237
  call void @llvm.dbg.value(metadata i8* %15, metadata !4218, metadata !DIExpression()), !dbg !4225
  call void @llvm.dbg.value(metadata i32 0, metadata !4223, metadata !DIExpression()), !dbg !4238
  %16 = icmp eq i8 %9, 0, !dbg !4239
  br i1 %16, label %17, label %22, !dbg !4241

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4225
  %19 = ptrtoint i8* %18 to i32, !dbg !4242
  %20 = ptrtoint i8* %0 to i32, !dbg !4242
  %21 = sub i32 %19, %20, !dbg !4242
  ret i32 %21, !dbg !4243

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4223, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i8* %24, metadata !4218, metadata !DIExpression()), !dbg !4225
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4244
  call void @llvm.dbg.value(metadata i8* %25, metadata !4218, metadata !DIExpression()), !dbg !4225
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4246
  %27 = add i32 %26, 1, !dbg !4247
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4248
  call void @llvm.dbg.value(metadata i8* %28, metadata !4218, metadata !DIExpression()), !dbg !4225
  %29 = add nuw nsw i32 %23, 1, !dbg !4249
  call void @llvm.dbg.value(metadata i32 %29, metadata !4223, metadata !DIExpression()), !dbg !4238
  %30 = icmp eq i32 %29, %10, !dbg !4239
  br i1 %30, label %17, label %22, !dbg !4241, !llvm.loop !4250
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4252 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4256, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.value(metadata i8* %1, metadata !4257, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.value(metadata i8* %2, metadata !4258, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.value(metadata i16 %3, metadata !4259, metadata !DIExpression()), !dbg !4260
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4261
  br i1 %5, label %6, label %9, !dbg !4263

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4264
  %8 = add i32 %7, 1, !dbg !4266
  br label %20, !dbg !4267

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4268
  br i1 %10, label %13, label %11, !dbg !4269

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4269
  br label %16, !dbg !4269

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4270
  %15 = add i32 %14, 1, !dbg !4271
  br label %16, !dbg !4269

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4269
  %18 = and i32 %17, 65535, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %17, metadata !4259, metadata !DIExpression()), !dbg !4260
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4273
  br label %20, !dbg !4274

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4260
  ret i32 %21, !dbg !4275
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4278, metadata !DIExpression()), !dbg !4279
  ret i32 0, !dbg !4280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4281 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4285, metadata !DIExpression()), !dbg !4286
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4287
  ret void, !dbg !4288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4289 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4292
  ret i8* %1, !dbg !4293
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4294 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4305, metadata !DIExpression()), !dbg !4316
  call void @llvm.dbg.value(metadata i8* %0, metadata !4304, metadata !DIExpression()), !dbg !4316
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4317
  ret void, !dbg !4319
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4324, metadata !DIExpression()), !dbg !4326
  call void @llvm.dbg.value(metadata i8* %1, metadata !4325, metadata !DIExpression()), !dbg !4326
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4327
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4327
  ret i32 %4, !dbg !4328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4329 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4336, metadata !DIExpression()), !dbg !4337
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4333, metadata !DIExpression()), !dbg !4337
  call void @llvm.dbg.value(metadata i8* %1, metadata !4334, metadata !DIExpression()), !dbg !4337
  call void @llvm.dbg.value(metadata i8* %2, metadata !4335, metadata !DIExpression()), !dbg !4337
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4338
  ret void, !dbg !4339
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4340 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4344, metadata !DIExpression()), !dbg !4347
  call void @llvm.dbg.value(metadata i32 %1, metadata !4345, metadata !DIExpression()), !dbg !4347
  call void @llvm.dbg.value(metadata i32 0, metadata !4346, metadata !DIExpression()), !dbg !4347
  %3 = icmp eq i32 %1, 0, !dbg !4348
  br i1 %3, label %13, label %4, !dbg !4351

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4346, metadata !DIExpression()), !dbg !4347
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4352
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4354
  %8 = load i8, i8* %7, align 1, !dbg !4354
  %9 = zext i8 %8 to i32, !dbg !4354
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4352
  %11 = add nuw i32 %5, 1, !dbg !4355
  call void @llvm.dbg.value(metadata i32 %11, metadata !4346, metadata !DIExpression()), !dbg !4347
  %12 = icmp eq i32 %11, %1, !dbg !4348
  br i1 %12, label %13, label %4, !dbg !4351, !llvm.loop !4356

13:                                               ; preds = %4, %2
  ret void, !dbg !4358
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4359 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4363, metadata !DIExpression()), !dbg !4365
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4366
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4366
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4364, metadata !DIExpression()), !dbg !4367
  call void @llvm.va_start(i8* nonnull %3), !dbg !4368
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4369
  %5 = load i32, i32* %4, align 4, !dbg !4369
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4369
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4369
  call void @llvm.va_end(i8* nonnull %3), !dbg !4370
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4371
  ret void, !dbg !4371
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4372 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4376, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %1, metadata !4377, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8* %2, metadata !4378, metadata !DIExpression()), !dbg !4381
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4382
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4382
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4379, metadata !DIExpression()), !dbg !4383
  call void @llvm.va_start(i8* nonnull %5), !dbg !4384
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4385
  %7 = load i32, i32* %6, align 4, !dbg !4385
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4385
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4385
  call void @llvm.dbg.value(metadata i32 %9, metadata !4380, metadata !DIExpression()), !dbg !4381
  call void @llvm.va_end(i8* nonnull %5), !dbg !4386
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4387
  ret i32 %9, !dbg !4388
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4389 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4396, metadata !DIExpression()), !dbg !4403
  call void @llvm.dbg.value(metadata i8* %0, metadata !4393, metadata !DIExpression()), !dbg !4403
  call void @llvm.dbg.value(metadata i32 %1, metadata !4394, metadata !DIExpression()), !dbg !4403
  call void @llvm.dbg.value(metadata i8* %2, metadata !4395, metadata !DIExpression()), !dbg !4403
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4404
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4404
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4397, metadata !DIExpression()), !dbg !4405
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4406
  store i8* %0, i8** %7, align 4, !dbg !4406
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4406
  store i32 %1, i32* %8, align 4, !dbg !4406
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4406
  store i32 0, i32* %9, align 4, !dbg !4406
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4407
  %10 = load i32, i32* %9, align 4, !dbg !4408
  %11 = load i32, i32* %8, align 4, !dbg !4410
  %12 = icmp slt i32 %10, %11, !dbg !4411
  br i1 %12, label %13, label %15, !dbg !4412

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4413
  store i8 0, i8* %14, align 1, !dbg !4415
  br label %15, !dbg !4416

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4417
  ret i32 %10, !dbg !4418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4424, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4425, metadata !DIExpression()), !dbg !4426
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4427
  %4 = load i8*, i8** %3, align 4, !dbg !4427
  %5 = icmp eq i8* %4, null, !dbg !4429
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4430
  br i1 %5, label %12, label %8, !dbg !4431

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4432
  %10 = load i32, i32* %9, align 4, !dbg !4432
  %11 = icmp slt i32 %7, %10, !dbg !4433
  br i1 %11, label %15, label %12, !dbg !4434

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4435
  %14 = add nsw i32 %7, 1, !dbg !4437
  store i32 %14, i32* %13, align 4, !dbg !4437
  br label %25, !dbg !4438

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4439
  %17 = icmp eq i32 %7, %16, !dbg !4441
  br i1 %17, label %18, label %21, !dbg !4442

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4443
  store i32 %19, i32* %6, align 4, !dbg !4443
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4445
  store i8 0, i8* %20, align 1, !dbg !4446
  br label %25, !dbg !4447

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4448
  %23 = add nsw i32 %7, 1, !dbg !4450
  store i32 %23, i32* %6, align 4, !dbg !4450
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4451
  store i8 %22, i8* %24, align 1, !dbg !4452
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4453
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4454 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4459, metadata !DIExpression()), !dbg !4463
  call void @llvm.dbg.value(metadata i8* %1, metadata !4460, metadata !DIExpression()), !dbg !4463
  call void @llvm.dbg.value(metadata i8* %2, metadata !4461, metadata !DIExpression()), !dbg !4463
  call void @llvm.dbg.value(metadata i8* %3, metadata !4462, metadata !DIExpression()), !dbg !4463
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4464
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4465
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4466
  unreachable, !dbg !4467
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4468 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4575
  ret %struct.k_thread* %1, !dbg !4576
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4577 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4581, metadata !DIExpression()), !dbg !4582
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4583, !srcloc !4585
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4586
  ret void, !dbg !4587
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4588 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4589, !srcloc !4591
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4592
  ret %struct.k_thread* %1, !dbg !4593
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4594 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4607, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4604, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8* %1, metadata !4605, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8* %2, metadata !4606, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 %4, metadata !4608, metadata !DIExpression()), !dbg !4733
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4734
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4734
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4609, metadata !DIExpression()), !dbg !4735
  call void @llvm.dbg.value(metadata i32 0, metadata !4613, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i1 undef, metadata !4615, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4733
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4736

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4736

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4737
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4607, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8* %30, metadata !4606, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 %29, metadata !4613, metadata !DIExpression()), !dbg !4733
  %31 = load i8, i8* %30, align 1, !dbg !4738
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4736

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4738
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4739
  call void @llvm.dbg.value(metadata i8* %34, metadata !4606, metadata !DIExpression()), !dbg !4733
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4739
  call void @llvm.dbg.value(metadata i32 %35, metadata !4617, metadata !DIExpression()), !dbg !4740
  %36 = icmp slt i32 %35, 0, !dbg !4741
  %37 = add i32 %29, 1, !dbg !4739
  call void @llvm.dbg.value(metadata i32 undef, metadata !4613, metadata !DIExpression()), !dbg !4733
  br i1 %36, label %365, label %28, !llvm.loop !4743

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4745
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4622, metadata !DIExpression()), !dbg !4746
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4746
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4665, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4668, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i8* %30, metadata !4671, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i32 -1, metadata !4672, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i32 -1, metadata !4673, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i8* null, metadata !4674, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i8* %14, metadata !4675, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i8 0, metadata !4676, metadata !DIExpression()), !dbg !4747
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4748
  call void @llvm.dbg.value(metadata i8* %39, metadata !4606, metadata !DIExpression()), !dbg !4733
  %40 = load i24, i24* %15, align 8, !dbg !4749
  %41 = and i24 %40, 256, !dbg !4749
  %42 = icmp eq i24 %41, 0, !dbg !4749
  br i1 %42, label %51, label %43, !dbg !4751

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4752
  call void @llvm.dbg.value(metadata i8* %44, metadata !4607, metadata !DIExpression()), !dbg !4733
  %45 = bitcast i8* %27 to i32*, !dbg !4752
  %46 = load i32, i32* %45, align 4, !dbg !4752
  call void @llvm.dbg.value(metadata i32 %46, metadata !4672, metadata !DIExpression()), !dbg !4747
  %47 = icmp slt i32 %46, 0, !dbg !4754
  br i1 %47, label %48, label %56, !dbg !4756

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4757
  store i24 %49, i24* %15, align 8, !dbg !4757
  %50 = sub nsw i32 0, %46, !dbg !4759
  call void @llvm.dbg.value(metadata i32 %50, metadata !4672, metadata !DIExpression()), !dbg !4747
  br label %56, !dbg !4760

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4761
  %53 = icmp eq i24 %52, 0, !dbg !4761
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4763
  br label %56, !dbg !4763

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4764
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4747
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4607, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 %58, metadata !4672, metadata !DIExpression()), !dbg !4747
  %60 = and i24 %57, 1024, !dbg !4764
  %61 = icmp eq i24 %60, 0, !dbg !4764
  br i1 %61, label %69, label %62, !dbg !4765

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4766
  call void @llvm.dbg.value(metadata i8* %63, metadata !4607, metadata !DIExpression()), !dbg !4733
  %64 = bitcast i8* %59 to i32*, !dbg !4766
  %65 = load i32, i32* %64, align 4, !dbg !4766
  call void @llvm.dbg.value(metadata i32 %65, metadata !4677, metadata !DIExpression()), !dbg !4767
  %66 = icmp slt i32 %65, 0, !dbg !4768
  br i1 %66, label %67, label %74, !dbg !4770

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4771
  store i24 %68, i24* %15, align 8, !dbg !4771
  br label %74, !dbg !4773

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4774
  %71 = icmp eq i24 %70, 0, !dbg !4774
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4776
  br label %74, !dbg !4776

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4777
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4747
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4747
  call void @llvm.dbg.value(metadata i8* %77, metadata !4607, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 %76, metadata !4673, metadata !DIExpression()), !dbg !4747
  store i32 0, i32* %16, align 4, !dbg !4778
  store i32 0, i32* %17, align 8, !dbg !4779
  %78 = lshr i24 %75, 16, !dbg !4777
  call void @llvm.dbg.value(metadata i24 %78, metadata !4680, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4747
  %79 = lshr i24 %75, 11, !dbg !4780
  %80 = and i24 %79, 15, !dbg !4780
  %81 = zext i24 %80 to i32, !dbg !4780
  call void @llvm.dbg.value(metadata i32 %81, metadata !4681, metadata !DIExpression()), !dbg !4747
  %82 = trunc i24 %78 to i3, !dbg !4781
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4781

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4782

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4785
  call void @llvm.dbg.value(metadata i8* %85, metadata !4607, metadata !DIExpression()), !dbg !4733
  %86 = bitcast i8* %77 to i32*, !dbg !4785
  %87 = load i32, i32* %86, align 4, !dbg !4785
  %88 = sext i32 %87 to i64, !dbg !4785
  store i64 %88, i64* %20, align 8, !dbg !4787
  br label %115, !dbg !4788

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4789
  call void @llvm.dbg.value(metadata i8* %90, metadata !4607, metadata !DIExpression()), !dbg !4733
  %91 = bitcast i8* %77 to i32*, !dbg !4789
  %92 = load i32, i32* %91, align 4, !dbg !4789
  %93 = sext i32 %92 to i64, !dbg !4789
  store i64 %93, i64* %20, align 8, !dbg !4792
  br label %115, !dbg !4793

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4794
  %96 = add i32 %95, 7, !dbg !4794
  %97 = and i32 %96, -8, !dbg !4794
  %98 = inttoptr i32 %97 to i8*, !dbg !4794
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4794
  call void @llvm.dbg.value(metadata i8* %99, metadata !4607, metadata !DIExpression()), !dbg !4733
  %100 = inttoptr i32 %97 to i64*, !dbg !4794
  %101 = load i64, i64* %100, align 8, !dbg !4794
  store i64 %101, i64* %20, align 8, !dbg !4795
  br label %115, !dbg !4796

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4797
  %104 = add i32 %103, 7, !dbg !4797
  %105 = and i32 %104, -8, !dbg !4797
  %106 = inttoptr i32 %105 to i8*, !dbg !4797
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4797
  call void @llvm.dbg.value(metadata i8* %107, metadata !4607, metadata !DIExpression()), !dbg !4733
  %108 = inttoptr i32 %105 to i64*, !dbg !4797
  %109 = load i64, i64* %108, align 8, !dbg !4797
  store i64 %109, i64* %20, align 8, !dbg !4798
  br label %115, !dbg !4799

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4800
  call void @llvm.dbg.value(metadata i8* %111, metadata !4607, metadata !DIExpression()), !dbg !4733
  %112 = bitcast i8* %77 to i32*, !dbg !4800
  %113 = load i32, i32* %112, align 4, !dbg !4800
  %114 = sext i32 %113 to i64, !dbg !4801
  store i64 %114, i64* %20, align 8, !dbg !4802
  br label %115, !dbg !4803

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4804
  call void @llvm.dbg.value(metadata i8* %117, metadata !4607, metadata !DIExpression()), !dbg !4733
  %118 = trunc i24 %79 to i4, !dbg !4805
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4805

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4806
  %121 = ashr exact i64 %120, 56, !dbg !4806
  store i64 %121, i64* %20, align 8, !dbg !4809
  br label %177, !dbg !4810

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4811
  %124 = ashr exact i64 %123, 48, !dbg !4811
  store i64 %124, i64* %20, align 8, !dbg !4814
  br label %177, !dbg !4815

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4816

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4819
  call void @llvm.dbg.value(metadata i8* %127, metadata !4607, metadata !DIExpression()), !dbg !4733
  %128 = bitcast i8* %77 to i32*, !dbg !4819
  %129 = load i32, i32* %128, align 4, !dbg !4819
  %130 = zext i32 %129 to i64, !dbg !4819
  store i64 %130, i64* %20, align 8, !dbg !4821
  br label %157, !dbg !4822

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4823
  call void @llvm.dbg.value(metadata i8* %132, metadata !4607, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8* %132, metadata !4607, metadata !DIExpression()), !dbg !4733
  %133 = bitcast i8* %77 to i32*, !dbg !4823
  %134 = load i32, i32* %133, align 4, !dbg !4823
  %135 = zext i32 %134 to i64, !dbg !4823
  store i64 %135, i64* %20, align 8, !dbg !4823
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4825
  %138 = add i32 %137, 7, !dbg !4825
  %139 = and i32 %138, -8, !dbg !4825
  %140 = inttoptr i32 %139 to i8*, !dbg !4825
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4825
  call void @llvm.dbg.value(metadata i8* %141, metadata !4607, metadata !DIExpression()), !dbg !4733
  %142 = inttoptr i32 %139 to i64*, !dbg !4825
  %143 = load i64, i64* %142, align 8, !dbg !4825
  store i64 %143, i64* %20, align 8, !dbg !4826
  br label %157, !dbg !4827

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4828
  %146 = add i32 %145, 7, !dbg !4828
  %147 = and i32 %146, -8, !dbg !4828
  %148 = inttoptr i32 %147 to i8*, !dbg !4828
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4828
  call void @llvm.dbg.value(metadata i8* %149, metadata !4607, metadata !DIExpression()), !dbg !4733
  %150 = inttoptr i32 %147 to i64*, !dbg !4828
  %151 = load i64, i64* %150, align 8, !dbg !4828
  store i64 %151, i64* %20, align 8, !dbg !4829
  br label %157, !dbg !4830

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4831
  call void @llvm.dbg.value(metadata i8* %153, metadata !4607, metadata !DIExpression()), !dbg !4733
  %154 = bitcast i8* %77 to i32*, !dbg !4831
  %155 = load i32, i32* %154, align 4, !dbg !4831
  %156 = zext i32 %155 to i64, !dbg !4832
  store i64 %156, i64* %20, align 8, !dbg !4833
  br label %157, !dbg !4834

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4835
  call void @llvm.dbg.value(metadata i8* %159, metadata !4607, metadata !DIExpression()), !dbg !4733
  %160 = trunc i24 %79 to i4, !dbg !4836
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4836

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4837
  store i64 %162, i64* %20, align 8, !dbg !4840
  br label %177, !dbg !4841

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4842
  store i64 %164, i64* %20, align 8, !dbg !4845
  br label %177, !dbg !4846

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4847
  %167 = add i32 %166, 7, !dbg !4847
  %168 = and i32 %167, -8, !dbg !4847
  %169 = inttoptr i32 %168 to i8*, !dbg !4847
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4847
  call void @llvm.dbg.value(metadata i8* %170, metadata !4607, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8* %170, metadata !4607, metadata !DIExpression()), !dbg !4733
  %171 = inttoptr i32 %168 to double*, !dbg !4847
  %172 = load double, double* %171, align 8, !dbg !4847
  store double %172, double* %19, align 8, !dbg !4847
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4851
  call void @llvm.dbg.value(metadata i8* %174, metadata !4607, metadata !DIExpression()), !dbg !4733
  %175 = bitcast i8* %77 to i8**, !dbg !4851
  %176 = load i8*, i8** %175, align 4, !dbg !4851
  store i8* %176, i8** %18, align 8, !dbg !4854
  br label %177, !dbg !4855

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4747
  call void @llvm.dbg.value(metadata i8* %178, metadata !4607, metadata !DIExpression()), !dbg !4733
  %179 = and i24 %75, 3, !dbg !4856
  %180 = icmp eq i24 %179, 0, !dbg !4856
  br i1 %180, label %185, label %181, !dbg !4856

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4857
  call void @llvm.dbg.value(metadata i32 %182, metadata !4682, metadata !DIExpression()), !dbg !4858
  %183 = icmp slt i32 %182, 0, !dbg !4859
  %184 = add i32 %182, %29, !dbg !4857
  call void @llvm.dbg.value(metadata i32 undef, metadata !4613, metadata !DIExpression()), !dbg !4733
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4861
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4862

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4863
  call void @llvm.dbg.value(metadata i32 %188, metadata !4686, metadata !DIExpression()), !dbg !4864
  %189 = icmp slt i32 %188, 0, !dbg !4865
  %190 = add i32 %29, 1, !dbg !4863
  call void @llvm.dbg.value(metadata i32 undef, metadata !4613, metadata !DIExpression()), !dbg !4733
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4867
  call void @llvm.dbg.value(metadata i8* %192, metadata !4674, metadata !DIExpression()), !dbg !4747
  %193 = icmp sgt i32 %76, -1, !dbg !4868
  br i1 %193, label %194, label %196, !dbg !4870

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4871
  call void @llvm.dbg.value(metadata i32 %195, metadata !4689, metadata !DIExpression()), !dbg !4873
  br label %241, !dbg !4874

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4875
  call void @llvm.dbg.value(metadata i32 %197, metadata !4689, metadata !DIExpression()), !dbg !4873
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4674, metadata !DIExpression()), !dbg !4747
  %199 = load i64, i64* %20, align 8, !dbg !4877
  %200 = trunc i64 %199 to i8, !dbg !4878
  store i8 %200, i8* %10, align 1, !dbg !4879
  call void @llvm.dbg.value(metadata i8* %23, metadata !4675, metadata !DIExpression()), !dbg !4747
  br label %245, !dbg !4880

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4881
  %203 = icmp eq i24 %202, 0, !dbg !4881
  %204 = trunc i24 %75 to i8, !dbg !4883
  %205 = shl i8 %204, 1, !dbg !4883
  %206 = and i8 %205, 32, !dbg !4883
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4883
  call void @llvm.dbg.value(metadata i8 %207, metadata !4676, metadata !DIExpression()), !dbg !4747
  %208 = load i64, i64* %20, align 8, !dbg !4884
  call void @llvm.dbg.value(metadata i64 %208, metadata !4614, metadata !DIExpression()), !dbg !4733
  %209 = icmp slt i64 %208, 0, !dbg !4885
  br i1 %209, label %210, label %212, !dbg !4887

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4676, metadata !DIExpression()), !dbg !4747
  %211 = sub nsw i64 0, %208, !dbg !4888
  store i64 %211, i64* %20, align 8, !dbg !4890
  br label %212, !dbg !4891

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4747
  call void @llvm.dbg.value(metadata i8 %213, metadata !4676, metadata !DIExpression()), !dbg !4747
  %214 = load i64, i64* %20, align 8, !dbg !4892
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4893
  call void @llvm.dbg.value(metadata i8* %215, metadata !4674, metadata !DIExpression()), !dbg !4747
  br label %216, !dbg !4894

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4895
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4896
  call void @llvm.dbg.value(metadata i8* %218, metadata !4674, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i8 %217, metadata !4676, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.label(metadata !4732), !dbg !4897
  %219 = icmp sgt i32 %76, -1, !dbg !4898
  br i1 %219, label %222, label %220, !dbg !4899

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4900
  br label %245, !dbg !4899

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4902
  %224 = sub i32 %22, %223, !dbg !4902
  call void @llvm.dbg.value(metadata i32 %224, metadata !4691, metadata !DIExpression()), !dbg !4903
  %225 = load i24, i24* %15, align 8, !dbg !4904
  %226 = and i24 %225, -65, !dbg !4904
  store i24 %226, i24* %15, align 8, !dbg !4904
  %227 = icmp ugt i32 %76, %224, !dbg !4905
  br i1 %227, label %228, label %245, !dbg !4907

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4908
  store i32 %229, i32* %16, align 4, !dbg !4910
  br label %245, !dbg !4911

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4912
  %232 = icmp eq i8* %231, null, !dbg !4914
  br i1 %232, label %245, label %233, !dbg !4915

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4916
  %235 = zext i32 %234 to i64, !dbg !4916
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4918
  call void @llvm.dbg.value(metadata i8* %236, metadata !4674, metadata !DIExpression()), !dbg !4747
  %237 = load i24, i24* %15, align 8, !dbg !4919
  %238 = or i24 %237, 1048576, !dbg !4919
  store i24 %238, i24* %15, align 8, !dbg !4919
  store i8 120, i8* %21, align 1, !dbg !4920
  br label %216, !dbg !4921

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4922
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4925
  br label %363, !dbg !4926

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4927
  call void @llvm.dbg.value(metadata i32 %242, metadata !4689, metadata !DIExpression()), !dbg !4873
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4928
  call void @llvm.dbg.value(metadata i32 -1, metadata !4673, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i32 %29, metadata !4613, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8* %192, metadata !4674, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i8* %243, metadata !4675, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i8 0, metadata !4676, metadata !DIExpression()), !dbg !4747
  %244 = icmp eq i8* %192, null, !dbg !4929
  br i1 %244, label %363, label %245, !dbg !4931, !llvm.loop !4743

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4900
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4694, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4747
  call void @llvm.dbg.value(metadata i32 0, metadata !4695, metadata !DIExpression()), !dbg !4747
  %250 = zext i8 %249 to i32, !dbg !4932
  %251 = icmp eq i8 %249, 0, !dbg !4934
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4694, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4747
  call void @llvm.dbg.value(metadata i32 undef, metadata !4694, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4694, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4747
  call void @llvm.dbg.value(metadata i32 undef, metadata !4694, metadata !DIExpression()), !dbg !4747
  %252 = icmp sgt i32 %58, 0, !dbg !4935
  br i1 %252, label %253, label %302, !dbg !4936

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4900
  %255 = icmp eq i24 %254, 0, !dbg !4900
  %256 = ptrtoint i8* %248 to i32, !dbg !4937
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4694, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4747
  %257 = ptrtoint i8* %247 to i32, !dbg !4937
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4694, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4747
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4694, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4747
  %258 = xor i1 %251, true, !dbg !4938
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4694, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4747
  %259 = sext i1 %258 to i32, !dbg !4938
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4694, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4747
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4694, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4747
  %260 = lshr i24 %246, 19, !dbg !4939
  %261 = and i24 %260, 1, !dbg !4939
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4939
  %263 = zext i24 %262 to i32, !dbg !4939
  %264 = add i32 %257, %259, !dbg !4939
  %265 = add i32 %256, %263, !dbg !4939
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4694, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4747
  %266 = and i24 %246, 4194304, !dbg !4940
  %267 = icmp eq i24 %266, 0, !dbg !4940
  %268 = load i32, i32* %16, align 4, !dbg !4942
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4694, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4747
  call void @llvm.dbg.value(metadata i32 undef, metadata !4694, metadata !DIExpression()), !dbg !4747
  %269 = load i32, i32* %17, align 8, !dbg !4943
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4943
  call void @llvm.dbg.value(metadata i32 undef, metadata !4694, metadata !DIExpression()), !dbg !4747
  %271 = add i32 %264, %58, !dbg !4943
  %272 = add i32 %265, %268, !dbg !4943
  %273 = add i32 %272, %270, !dbg !4944
  %274 = sub i32 %271, %273, !dbg !4944
  call void @llvm.dbg.value(metadata i32 %274, metadata !4672, metadata !DIExpression()), !dbg !4747
  %275 = and i24 %246, 4, !dbg !4945
  %276 = icmp eq i24 %275, 0, !dbg !4945
  br i1 %276, label %277, label %302, !dbg !4946

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4696, metadata !DIExpression()), !dbg !4947
  %278 = and i24 %246, 64, !dbg !4948
  %279 = icmp eq i24 %278, 0, !dbg !4948
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4949
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4949
  %282 = select i1 %279, i32 32, i32 48, !dbg !4949
  br i1 %280, label %287, label %283, !dbg !4949

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4950
  call void @llvm.dbg.value(metadata i32 %284, metadata !4701, metadata !DIExpression()), !dbg !4951
  %285 = icmp slt i32 %284, 0, !dbg !4952
  %286 = add i32 %29, 1, !dbg !4950
  call void @llvm.dbg.value(metadata i32 undef, metadata !4613, metadata !DIExpression()), !dbg !4733
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4747
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4737
  call void @llvm.dbg.value(metadata i32 %290, metadata !4613, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8 undef, metadata !4696, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i8 %288, metadata !4676, metadata !DIExpression()), !dbg !4747
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4954
  %292 = add i32 %291, -1, !dbg !4954
  br label %293, !dbg !4954

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4955
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4737
  call void @llvm.dbg.value(metadata i32 %295, metadata !4613, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 %294, metadata !4672, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i32 %294, metadata !4672, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4747
  %296 = icmp sgt i32 %294, 0, !dbg !4956
  br i1 %296, label %297, label %302, !dbg !4954

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4957
  call void @llvm.dbg.value(metadata i32 %298, metadata !4672, metadata !DIExpression()), !dbg !4747
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4958
  call void @llvm.dbg.value(metadata i32 %299, metadata !4707, metadata !DIExpression()), !dbg !4959
  %300 = icmp slt i32 %299, 0, !dbg !4960
  %301 = add i32 %295, 1, !dbg !4958
  call void @llvm.dbg.value(metadata i32 undef, metadata !4613, metadata !DIExpression()), !dbg !4733
  br i1 %300, label %361, label %293, !llvm.loop !4962

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4747
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4747
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4737
  call void @llvm.dbg.value(metadata i32 %305, metadata !4613, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 %304, metadata !4672, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i8 %303, metadata !4676, metadata !DIExpression()), !dbg !4747
  %306 = icmp eq i8 %303, 0, !dbg !4964
  br i1 %306, label %312, label %307, !dbg !4965

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4966
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4967
  call void @llvm.dbg.value(metadata i32 %309, metadata !4710, metadata !DIExpression()), !dbg !4968
  %310 = icmp slt i32 %309, 0, !dbg !4969
  %311 = add i32 %305, 1, !dbg !4967
  call void @llvm.dbg.value(metadata i32 undef, metadata !4613, metadata !DIExpression()), !dbg !4733
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4737
  call void @llvm.dbg.value(metadata i32 %313, metadata !4613, metadata !DIExpression()), !dbg !4733
  %314 = lshr i24 %246, 20, !dbg !4971
  %315 = lshr i24 %246, 19, !dbg !4972
  %316 = or i24 %314, %315, !dbg !4973
  %317 = and i24 %316, 1, !dbg !4973
  %318 = icmp eq i24 %317, 0, !dbg !4973
  br i1 %318, label %323, label %319, !dbg !4974

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4975
  call void @llvm.dbg.value(metadata i32 %320, metadata !4714, metadata !DIExpression()), !dbg !4976
  %321 = icmp slt i32 %320, 0, !dbg !4977
  %322 = add i32 %313, 1, !dbg !4975
  call void @llvm.dbg.value(metadata i32 undef, metadata !4613, metadata !DIExpression()), !dbg !4733
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4737
  call void @llvm.dbg.value(metadata i32 %324, metadata !4613, metadata !DIExpression()), !dbg !4733
  %325 = and i24 %246, 1048576, !dbg !4979
  %326 = icmp eq i24 %325, 0, !dbg !4979
  br i1 %326, label %333, label %327, !dbg !4980

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4981
  %329 = zext i8 %328 to i32, !dbg !4981
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4981
  call void @llvm.dbg.value(metadata i32 %330, metadata !4720, metadata !DIExpression()), !dbg !4982
  %331 = icmp slt i32 %330, 0, !dbg !4983
  %332 = add i32 %324, 1, !dbg !4981
  call void @llvm.dbg.value(metadata i32 undef, metadata !4613, metadata !DIExpression()), !dbg !4733
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4737
  call void @llvm.dbg.value(metadata i32 %334, metadata !4613, metadata !DIExpression()), !dbg !4733
  %335 = load i32, i32* %16, align 4, !dbg !4985
  call void @llvm.dbg.value(metadata i32 %335, metadata !4695, metadata !DIExpression()), !dbg !4747
  br label %336, !dbg !4986

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4987
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4737
  call void @llvm.dbg.value(metadata i32 %338, metadata !4613, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 %337, metadata !4695, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4747
  %339 = icmp sgt i32 %337, 0, !dbg !4988
  br i1 %339, label %340, label %345, !dbg !4986

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4989
  call void @llvm.dbg.value(metadata i32 %341, metadata !4695, metadata !DIExpression()), !dbg !4747
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4990
  call void @llvm.dbg.value(metadata i32 %342, metadata !4724, metadata !DIExpression()), !dbg !4991
  %343 = icmp slt i32 %342, 0, !dbg !4992
  %344 = add i32 %338, 1, !dbg !4990
  call void @llvm.dbg.value(metadata i32 undef, metadata !4613, metadata !DIExpression()), !dbg !4733
  br i1 %343, label %361, label %336, !llvm.loop !4994

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4996
  call void @llvm.dbg.value(metadata i32 %346, metadata !4727, metadata !DIExpression()), !dbg !4997
  %347 = icmp slt i32 %346, 0, !dbg !4998
  call void @llvm.dbg.value(metadata i32 undef, metadata !4613, metadata !DIExpression()), !dbg !4733
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4996
  call void @llvm.dbg.value(metadata i32 %349, metadata !4613, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 %304, metadata !4672, metadata !DIExpression()), !dbg !4747
  %350 = icmp sgt i32 %304, 0, !dbg !5000
  br i1 %350, label %351, label %363, !dbg !5001

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5001
  %353 = add i32 %352, %338, !dbg !5001
  br label %354, !dbg !5001

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4613, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 %355, metadata !4672, metadata !DIExpression()), !dbg !4747
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %356, metadata !4729, metadata !DIExpression()), !dbg !5003
  %357 = icmp slt i32 %356, 0, !dbg !5004
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5006
  call void @llvm.dbg.value(metadata i32 undef, metadata !4613, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4733
  call void @llvm.dbg.value(metadata i32 %359, metadata !4672, metadata !DIExpression()), !dbg !4747
  %360 = icmp sgt i32 %355, 1, !dbg !5000
  br i1 %360, label %354, label %363, !dbg !5001, !llvm.loop !5007

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4613, metadata !DIExpression()), !dbg !4733
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4744
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4737
  call void @llvm.dbg.value(metadata i32 %364, metadata !4613, metadata !DIExpression()), !dbg !4733
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4744
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4733
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5009
  ret i32 %366, !dbg !5009
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5010 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5014, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.value(metadata i8* %1, metadata !5015, metadata !DIExpression()), !dbg !5016
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5017
  store i24 0, i24* %3, align 4, !dbg !5017
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5017
  store i8 0, i8* %4, align 1, !dbg !5017
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5017
  store i32 0, i32* %5, align 4, !dbg !5017
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5017
  store i32 0, i32* %6, align 4, !dbg !5017
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5018
  call void @llvm.dbg.value(metadata i8* %7, metadata !5015, metadata !DIExpression()), !dbg !5016
  %8 = load i8, i8* %7, align 1, !dbg !5019
  %9 = icmp eq i8 %8, 37, !dbg !5021
  br i1 %9, label %10, label %12, !dbg !5022

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5023
  call void @llvm.dbg.value(metadata i8* %11, metadata !5015, metadata !DIExpression()), !dbg !5016
  store i8 37, i8* %4, align 1, !dbg !5025
  br label %18, !dbg !5026

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5027
  call void @llvm.dbg.value(metadata i8* %13, metadata !5015, metadata !DIExpression()), !dbg !5016
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5028
  call void @llvm.dbg.value(metadata i8* %14, metadata !5015, metadata !DIExpression()), !dbg !5016
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5029
  call void @llvm.dbg.value(metadata i8* %15, metadata !5015, metadata !DIExpression()), !dbg !5016
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5030
  call void @llvm.dbg.value(metadata i8* %16, metadata !5015, metadata !DIExpression()), !dbg !5016
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5031
  call void @llvm.dbg.value(metadata i8* %17, metadata !5015, metadata !DIExpression()), !dbg !5016
  br label %18, !dbg !5032

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5016
  ret i8* %19, !dbg !5033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5034 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5038, metadata !DIExpression()), !dbg !5045
  call void @llvm.dbg.value(metadata i8* %1, metadata !5039, metadata !DIExpression()), !dbg !5045
  call void @llvm.dbg.value(metadata i8* %2, metadata !5040, metadata !DIExpression()), !dbg !5045
  call void @llvm.dbg.value(metadata i8* %3, metadata !5041, metadata !DIExpression()), !dbg !5045
  call void @llvm.dbg.value(metadata i32 0, metadata !5042, metadata !DIExpression()), !dbg !5045
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5046

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5047
  call void @llvm.dbg.value(metadata i32 %9, metadata !5042, metadata !DIExpression()), !dbg !5045
  call void @llvm.dbg.value(metadata i8* %8, metadata !5040, metadata !DIExpression()), !dbg !5045
  %10 = icmp ult i8* %8, %3, !dbg !5048
  br i1 %10, label %11, label %13, !dbg !5049

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5050
  br label %17, !dbg !5049

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5051

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5052
  %16 = icmp eq i8 %15, 0, !dbg !5051
  br i1 %16, label %24, label %17, !dbg !5046

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5050
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5053
  call void @llvm.dbg.value(metadata i8* %19, metadata !5040, metadata !DIExpression()), !dbg !5045
  %20 = zext i8 %18 to i32, !dbg !5054
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5055
  call void @llvm.dbg.value(metadata i32 %21, metadata !5043, metadata !DIExpression()), !dbg !5056
  %22 = icmp slt i32 %21, 0, !dbg !5057
  %23 = add i32 %9, 1, !dbg !5059
  call void @llvm.dbg.value(metadata i32 undef, metadata !5042, metadata !DIExpression()), !dbg !5045
  br i1 %22, label %24, label %7, !llvm.loop !5060

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5045
  ret i32 %25, !dbg !5062
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5063 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5067, metadata !DIExpression()), !dbg !5077
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5068, metadata !DIExpression()), !dbg !5077
  call void @llvm.dbg.value(metadata i8* %2, metadata !5069, metadata !DIExpression()), !dbg !5077
  call void @llvm.dbg.value(metadata i8* %3, metadata !5070, metadata !DIExpression()), !dbg !5077
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5078
  %6 = load i8, i8* %5, align 1, !dbg !5078
  %7 = zext i8 %6 to i32, !dbg !5079
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5080
  %9 = icmp eq i32 %8, 0, !dbg !5080
  call void @llvm.dbg.value(metadata i1 %9, metadata !5071, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5077
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5081
  call void @llvm.dbg.value(metadata i32 %10, metadata !5072, metadata !DIExpression()), !dbg !5077
  %11 = ptrtoint i8* %3 to i32, !dbg !5082
  %12 = ptrtoint i8* %2 to i32, !dbg !5082
  %13 = sub i32 %11, %12, !dbg !5082
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5083
  call void @llvm.dbg.value(metadata i8* %14, metadata !5074, metadata !DIExpression()), !dbg !5077
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5084

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5077
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5067, metadata !DIExpression()), !dbg !5077
  call void @llvm.dbg.value(metadata i8* %18, metadata !5074, metadata !DIExpression()), !dbg !5077
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5085
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5086
  call void @llvm.dbg.value(metadata i32 %25, metadata !5075, metadata !DIExpression()), !dbg !5087
  %26 = icmp ult i32 %25, 10, !dbg !5088
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5089
  %28 = add i32 %27, %25, !dbg !5087
  %29 = trunc i32 %28 to i8, !dbg !5089
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5090
  call void @llvm.dbg.value(metadata i8* %30, metadata !5074, metadata !DIExpression()), !dbg !5077
  store i8 %29, i8* %30, align 1, !dbg !5091
  call void @llvm.dbg.value(metadata i64 %22, metadata !5067, metadata !DIExpression()), !dbg !5077
  %31 = icmp uge i64 %19, %15, !dbg !5092
  %32 = icmp ugt i8* %30, %2, !dbg !5093
  %33 = and i1 %31, %32, !dbg !5093
  br i1 %33, label %17, label %34, !dbg !5094, !llvm.loop !5095

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5097
  %36 = load i24, i24* %35, align 4, !dbg !5097
  %37 = and i24 %36, 32, !dbg !5097
  %38 = icmp eq i24 %37, 0, !dbg !5097
  br i1 %38, label %44, label %39, !dbg !5099

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5100

40:                                               ; preds = %39
  br label %41, !dbg !5102

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5106
  store i24 %43, i24* %35, align 4, !dbg !5106
  br label %44, !dbg !5107

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5108 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5114, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.value(metadata i8* %1, metadata !5115, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.value(metadata i32 %2, metadata !5116, metadata !DIExpression()), !dbg !5117
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5118
  %5 = load i24, i24* %4, align 4, !dbg !5118
  %6 = lshr i24 %5, 11, !dbg !5118
  %7 = and i24 %6, 15, !dbg !5118
  %8 = zext i24 %7 to i32, !dbg !5118
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5119

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5120
  store i32 %2, i32* %10, align 4, !dbg !5122
  br label %28, !dbg !5123

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5124
  store i8 %12, i8* %1, align 1, !dbg !5125
  br label %28, !dbg !5126

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5127
  %15 = bitcast i8* %1 to i16*, !dbg !5128
  store i16 %14, i16* %15, align 2, !dbg !5129
  br label %28, !dbg !5130

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5131
  store i32 %2, i32* %17, align 4, !dbg !5132
  br label %28, !dbg !5133

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5134
  %20 = bitcast i8* %1 to i64*, !dbg !5135
  store i64 %19, i64* %20, align 8, !dbg !5136
  br label %28, !dbg !5137

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5138
  %23 = bitcast i8* %1 to i64*, !dbg !5139
  store i64 %22, i64* %23, align 8, !dbg !5140
  br label %28, !dbg !5141

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5142
  store i32 %2, i32* %25, align 4, !dbg !5143
  br label %28, !dbg !5144

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5145
  store i32 %2, i32* %27, align 4, !dbg !5146
  br label %28, !dbg !5147

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5148
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #3 !dbg !5149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5152, metadata !DIExpression()), !dbg !5153
  %2 = add i32 %0, -65, !dbg !5154
  %3 = icmp ult i32 %2, 26, !dbg !5155
  %4 = zext i1 %3 to i32, !dbg !5155
  ret i32 %4, !dbg !5156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #3 !dbg !5157 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5161, metadata !DIExpression()), !dbg !5162
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5163

2:                                                ; preds = %1
  br label %4, !dbg !5164

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5166

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5167
  ret i32 %5, !dbg !5168
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5169 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5171, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.value(metadata i8* %1, metadata !5172, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.value(metadata i8 1, metadata !5173, metadata !DIExpression()), !dbg !5174
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5175

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5173, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.value(metadata i8* %5, metadata !5172, metadata !DIExpression()), !dbg !5174
  %6 = load i8, i8* %5, align 1, !dbg !5176
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5178

7:                                                ; preds = %4
  br label %11, !dbg !5179

8:                                                ; preds = %4
  br label %11, !dbg !5181

9:                                                ; preds = %4
  br label %11, !dbg !5182

10:                                               ; preds = %4
  br label %11, !dbg !5183

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5184
  %14 = or i24 %13, %12, !dbg !5184
  store i24 %14, i24* %3, align 4, !dbg !5184
  call void @llvm.dbg.value(metadata i8 poison, metadata !5173, metadata !DIExpression()), !dbg !5174
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5172, metadata !DIExpression()), !dbg !5174
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5173, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.value(metadata i8* %15, metadata !5172, metadata !DIExpression()), !dbg !5174
  %17 = load i24, i24* %3, align 4, !dbg !5185
  %18 = and i24 %17, 68, !dbg !5187
  %19 = icmp eq i24 %18, 68, !dbg !5187
  br i1 %19, label %20, label %22, !dbg !5187

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5188
  store i24 %21, i24* %3, align 4, !dbg !5188
  br label %22, !dbg !5190

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5191
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5192 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5194, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata i8* %1, metadata !5195, metadata !DIExpression()), !dbg !5198
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5199
  %5 = load i24, i24* %4, align 4, !dbg !5200
  %6 = or i24 %5, 128, !dbg !5200
  store i24 %6, i24* %4, align 4, !dbg !5200
  call void @llvm.dbg.value(metadata i8* %1, metadata !5195, metadata !DIExpression()), !dbg !5198
  %7 = load i8, i8* %1, align 1, !dbg !5201
  %8 = icmp eq i8 %7, 42, !dbg !5203
  br i1 %8, label %9, label %12, !dbg !5204

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5205
  store i24 %10, i24* %4, align 4, !dbg !5205
  call void @llvm.dbg.value(metadata i8* %1, metadata !5195, metadata !DIExpression()), !dbg !5198
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5207
  call void @llvm.dbg.value(metadata i8* %11, metadata !5195, metadata !DIExpression()), !dbg !5198
  store i8* %11, i8** %3, align 4, !dbg !5207
  br label %29, !dbg !5208

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5196, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata i8** %3, metadata !5195, metadata !DIExpression(DW_OP_deref)), !dbg !5198
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5209
  call void @llvm.dbg.value(metadata i32 %13, metadata !5197, metadata !DIExpression()), !dbg !5198
  %14 = load i8*, i8** %3, align 4, !dbg !5210
  call void @llvm.dbg.value(metadata i8* %14, metadata !5195, metadata !DIExpression()), !dbg !5198
  %15 = icmp eq i8* %14, %1, !dbg !5212
  br i1 %15, label %29, label %16, !dbg !5213

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5214
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5216
  store i32 %13, i32* %18, align 4, !dbg !5217
  %19 = lshr i32 %13, 31, !dbg !5218
  %20 = lshr i24 %17, 1, !dbg !5219
  %21 = and i24 %20, 1, !dbg !5219
  %22 = zext i24 %21 to i32, !dbg !5219
  %23 = or i32 %19, %22, !dbg !5219
  %24 = trunc i32 %23 to i24, !dbg !5219
  %25 = shl nuw nsw i24 %24, 1, !dbg !5219
  %26 = and i24 %17, -131, !dbg !5219
  %27 = or i24 %26, 128, !dbg !5219
  %28 = or i24 %25, %27, !dbg !5219
  store i24 %28, i24* %4, align 4, !dbg !5219
  br label %29, !dbg !5220

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5198
  ret i8* %30, !dbg !5221
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5222 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5224, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i8* %1, metadata !5225, metadata !DIExpression()), !dbg !5227
  %4 = load i8, i8* %1, align 1, !dbg !5228
  %5 = icmp eq i8 %4, 46, !dbg !5229
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5230
  %7 = load i24, i24* %6, align 4, !dbg !5231
  %8 = select i1 %5, i24 512, i24 0, !dbg !5231
  %9 = and i24 %7, -513, !dbg !5231
  %10 = or i24 %9, %8, !dbg !5231
  store i24 %10, i24* %6, align 4, !dbg !5231
  br i1 %5, label %11, label %32, !dbg !5232

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5225, metadata !DIExpression()), !dbg !5227
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5233
  call void @llvm.dbg.value(metadata i8* %12, metadata !5225, metadata !DIExpression()), !dbg !5227
  store i8* %12, i8** %3, align 4, !dbg !5233
  %13 = load i8, i8* %12, align 1, !dbg !5234
  %14 = icmp eq i8 %13, 42, !dbg !5236
  br i1 %14, label %15, label %18, !dbg !5237

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5238
  store i24 %16, i24* %6, align 4, !dbg !5238
  call void @llvm.dbg.value(metadata i8* %12, metadata !5225, metadata !DIExpression()), !dbg !5227
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5240
  call void @llvm.dbg.value(metadata i8* %17, metadata !5225, metadata !DIExpression()), !dbg !5227
  store i8* %17, i8** %3, align 4, !dbg !5240
  br label %32, !dbg !5241

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5225, metadata !DIExpression(DW_OP_deref)), !dbg !5227
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5242
  call void @llvm.dbg.value(metadata i32 %19, metadata !5226, metadata !DIExpression()), !dbg !5227
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5243
  store i32 %19, i32* %20, align 4, !dbg !5244
  %21 = lshr i32 %19, 31, !dbg !5245
  %22 = load i24, i24* %6, align 4, !dbg !5246
  %23 = lshr i24 %22, 1, !dbg !5246
  %24 = and i24 %23, 1, !dbg !5246
  %25 = zext i24 %24 to i32, !dbg !5246
  %26 = or i32 %21, %25, !dbg !5246
  %27 = trunc i32 %26 to i24, !dbg !5246
  %28 = shl nuw nsw i24 %27, 1, !dbg !5246
  %29 = and i24 %22, -3, !dbg !5246
  %30 = or i24 %28, %29, !dbg !5246
  store i24 %30, i24* %6, align 4, !dbg !5246
  %31 = load i8*, i8** %3, align 4, !dbg !5247
  call void @llvm.dbg.value(metadata i8* %31, metadata !5225, metadata !DIExpression()), !dbg !5227
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5227
  ret i8* %33, !dbg !5248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5249 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5251, metadata !DIExpression()), !dbg !5253
  call void @llvm.dbg.value(metadata i8* %1, metadata !5252, metadata !DIExpression()), !dbg !5253
  %3 = load i8, i8* %1, align 1, !dbg !5254
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5255

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5256
  call void @llvm.dbg.value(metadata i8* %5, metadata !5252, metadata !DIExpression()), !dbg !5253
  %6 = load i8, i8* %5, align 1, !dbg !5259
  %7 = icmp eq i8 %6, 104, !dbg !5260
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5261
  %9 = load i24, i24* %8, align 4, !dbg !5261
  %10 = and i24 %9, -30721, !dbg !5261
  br i1 %7, label %11, label %14, !dbg !5262

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5263
  store i24 %12, i24* %8, align 4, !dbg !5263
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5265
  call void @llvm.dbg.value(metadata i8* %13, metadata !5252, metadata !DIExpression()), !dbg !5253
  br label %56, !dbg !5266

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5267
  store i24 %15, i24* %8, align 4, !dbg !5267
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5269
  call void @llvm.dbg.value(metadata i8* %17, metadata !5252, metadata !DIExpression()), !dbg !5253
  %18 = load i8, i8* %17, align 1, !dbg !5271
  %19 = icmp eq i8 %18, 108, !dbg !5272
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5273
  %21 = load i24, i24* %20, align 4, !dbg !5273
  %22 = and i24 %21, -30721, !dbg !5273
  br i1 %19, label %23, label %26, !dbg !5274

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5275
  store i24 %24, i24* %20, align 4, !dbg !5275
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5277
  call void @llvm.dbg.value(metadata i8* %25, metadata !5252, metadata !DIExpression()), !dbg !5253
  br label %56, !dbg !5278

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5279
  store i24 %27, i24* %20, align 4, !dbg !5279
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5281
  %30 = load i24, i24* %29, align 4, !dbg !5282
  %31 = and i24 %30, -30721, !dbg !5282
  %32 = or i24 %31, 10240, !dbg !5282
  store i24 %32, i24* %29, align 4, !dbg !5282
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5283
  call void @llvm.dbg.value(metadata i8* %33, metadata !5252, metadata !DIExpression()), !dbg !5253
  br label %56, !dbg !5284

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5285
  %36 = load i24, i24* %35, align 4, !dbg !5286
  %37 = and i24 %36, -30721, !dbg !5286
  %38 = or i24 %37, 12288, !dbg !5286
  store i24 %38, i24* %35, align 4, !dbg !5286
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5287
  call void @llvm.dbg.value(metadata i8* %39, metadata !5252, metadata !DIExpression()), !dbg !5253
  br label %56, !dbg !5288

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5289
  %42 = load i24, i24* %41, align 4, !dbg !5290
  %43 = and i24 %42, -30721, !dbg !5290
  %44 = or i24 %43, 14336, !dbg !5290
  store i24 %44, i24* %41, align 4, !dbg !5290
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5291
  call void @llvm.dbg.value(metadata i8* %45, metadata !5252, metadata !DIExpression()), !dbg !5253
  br label %56, !dbg !5292

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5293
  %48 = load i24, i24* %47, align 4, !dbg !5294
  %49 = and i24 %48, -30723, !dbg !5294
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5295
  call void @llvm.dbg.value(metadata i8* %50, metadata !5252, metadata !DIExpression()), !dbg !5253
  %51 = or i24 %49, 16386, !dbg !5296
  store i24 %51, i24* %47, align 4, !dbg !5296
  br label %56, !dbg !5297

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5298
  %54 = load i24, i24* %53, align 4, !dbg !5299
  %55 = and i24 %54, -30721, !dbg !5299
  store i24 %55, i24* %53, align 4, !dbg !5299
  br label %56, !dbg !5300

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5252, metadata !DIExpression()), !dbg !5253
  ret i8* %57, !dbg !5301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5302 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5304, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.value(metadata i8* %1, metadata !5305, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.value(metadata i8 0, metadata !5306, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.value(metadata i8* %1, metadata !5305, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5309
  %3 = load i8, i8* %1, align 1, !dbg !5310
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5311
  store i8 %3, i8* %4, align 1, !dbg !5312
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5313

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5314

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5315
  %9 = load i24, i24* %8, align 4, !dbg !5315
  %10 = and i24 %9, -458753, !dbg !5315
  %11 = or i24 %10, %7, !dbg !5315
  call void @llvm.dbg.label(metadata !5307), !dbg !5316
  %12 = and i24 %9, 30720, !dbg !5317
  %13 = icmp eq i24 %12, 16384, !dbg !5317
  %14 = zext i1 %13 to i24, !dbg !5319
  %15 = or i24 %11, %14, !dbg !5319
  %16 = icmp eq i8 %3, 99, !dbg !5320
  br i1 %16, label %17, label %43, !dbg !5322

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5323
  %19 = icmp ne i24 %18, 0, !dbg !5323
  call void @llvm.dbg.value(metadata i1 %19, metadata !5306, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5309
  br label %43, !dbg !5325

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5326
  %22 = load i24, i24* %21, align 4, !dbg !5327
  %23 = and i24 %22, -458753, !dbg !5327
  %24 = or i24 %23, 262144, !dbg !5327
  call void @llvm.dbg.value(metadata i8 1, metadata !5306, metadata !DIExpression()), !dbg !5309
  br label %43, !dbg !5328

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5331
  %27 = load i24, i24* %26, align 4, !dbg !5332
  %28 = and i24 %27, -458753, !dbg !5332
  %29 = or i24 %28, 196608, !dbg !5332
  %30 = and i24 %27, 30720, !dbg !5333
  %31 = icmp eq i24 %30, 16384, !dbg !5333
  br label %43, !dbg !5335

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5336
  %34 = load i24, i24* %33, align 4, !dbg !5337
  %35 = and i24 %34, -458753, !dbg !5337
  %36 = or i24 %35, 196608, !dbg !5337
  %37 = and i24 %34, 30720, !dbg !5338
  %38 = icmp ne i24 %37, 0, !dbg !5338
  br label %43, !dbg !5340

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5341
  %41 = load i24, i24* %40, align 4, !dbg !5342
  %42 = or i24 %41, 1, !dbg !5342
  br label %43, !dbg !5343

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5344
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5345
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5346
  call void @llvm.dbg.value(metadata i8* %48, metadata !5305, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.value(metadata i8 poison, metadata !5306, metadata !DIExpression()), !dbg !5309
  %49 = lshr i24 %44, 1, !dbg !5344
  %50 = and i24 %49, 1, !dbg !5344
  %51 = zext i24 %50 to i32, !dbg !5344
  %52 = or i32 %51, %47, !dbg !5344
  %53 = trunc i32 %52 to i24, !dbg !5344
  %54 = shl nuw nsw i24 %53, 1, !dbg !5344
  %55 = and i24 %44, -3, !dbg !5344
  %56 = or i24 %54, %55, !dbg !5344
  store i24 %56, i24* %46, align 4, !dbg !5344
  ret i8* %48, !dbg !5347
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5348 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5352, metadata !DIExpression()), !dbg !5355
  %2 = load i8*, i8** %0, align 4, !dbg !5356
  call void @llvm.dbg.value(metadata i8* %2, metadata !5353, metadata !DIExpression()), !dbg !5355
  call void @llvm.dbg.value(metadata i32 0, metadata !5354, metadata !DIExpression()), !dbg !5355
  %3 = load i8, i8* %2, align 1, !dbg !5357
  %4 = zext i8 %3 to i32, !dbg !5358
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5359
  %6 = icmp eq i32 %5, 0, !dbg !5360
  br i1 %6, label %19, label %7, !dbg !5360

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5354, metadata !DIExpression()), !dbg !5355
  call void @llvm.dbg.value(metadata i8* %10, metadata !5353, metadata !DIExpression()), !dbg !5355
  %11 = mul i32 %9, 10, !dbg !5361
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5363
  call void @llvm.dbg.value(metadata i8* %12, metadata !5353, metadata !DIExpression()), !dbg !5355
  %13 = add i32 %11, -48, !dbg !5364
  %14 = add i32 %13, %8, !dbg !5365
  call void @llvm.dbg.value(metadata i32 %14, metadata !5354, metadata !DIExpression()), !dbg !5355
  %15 = load i8, i8* %12, align 1, !dbg !5357
  %16 = zext i8 %15 to i32, !dbg !5358
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5359
  %18 = icmp eq i32 %17, 0, !dbg !5360
  br i1 %18, label %19, label %7, !dbg !5360, !llvm.loop !5366

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5355
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5355
  store i8* %20, i8** %0, align 4, !dbg !5368
  ret i32 %21, !dbg !5369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #3 !dbg !5370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5372, metadata !DIExpression()), !dbg !5373
  %2 = add i32 %0, -48, !dbg !5374
  %3 = icmp ult i32 %2, 10, !dbg !5375
  %4 = zext i1 %3 to i32, !dbg !5375
  ret i32 %4, !dbg !5376
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5377 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5382, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.value(metadata i32 %1, metadata !5383, metadata !DIExpression()), !dbg !5384
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5385, !srcloc !5387
  ret void, !dbg !5388
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5389 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5391, metadata !DIExpression()), !dbg !5399
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5400
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5400
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5392, metadata !DIExpression()), !dbg !5401
  call void @llvm.va_start(i8* nonnull %3), !dbg !5402
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5403
  %5 = load i32, i32* %4, align 4, !dbg !5403
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5403
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5403
  call void @llvm.va_end(i8* nonnull %3), !dbg !5404
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5405
  ret void, !dbg !5405
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5406 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6040, !srcloc !6041
  ret void, !dbg !6042
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6043 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6045, metadata !DIExpression()), !dbg !6047
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6048, !srcloc !6057
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6048
  call void @llvm.dbg.value(metadata i32 %3, metadata !6054, metadata !DIExpression()) #23, !dbg !6058
  call void @llvm.dbg.value(metadata i32 undef, metadata !6055, metadata !DIExpression()) #23, !dbg !6058
  call void @llvm.dbg.value(metadata i32 %3, metadata !6046, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i32 %3, metadata !6059, metadata !DIExpression()) #23, !dbg !6064
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6066, !srcloc !6067
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !6068
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !6069
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #24, !dbg !6070
  ret i32 0, !dbg !6071
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #14 !dbg !6072 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !6077, metadata !DIExpression()), !dbg !6079
  %2 = bitcast i32* %1 to i8*, !dbg !6080
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6080
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6078, metadata !DIExpression()), !dbg !6081
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6082
  %4 = or i32 %3, 268435456, !dbg !6082
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6082
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6083
  %6 = and i32 %5, 268435456, !dbg !6083
  store volatile i32 %6, i32* %1, align 4, !dbg !6084
  %7 = load volatile i32, i32* %1, align 4, !dbg !6085
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6086
  ret void, !dbg !6086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #15 !dbg !6087 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !6090, metadata !DIExpression()), !dbg !6091
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !6092
  %2 = and i32 %1, -6145, !dbg !6092
  %3 = or i32 %2, 2048, !dbg !6092
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !6092
  ret void, !dbg !6093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #3 !dbg !6094 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6096, metadata !DIExpression()), !dbg !6097
  ret i32 0, !dbg !6098
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6099 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6102, metadata !DIExpression()), !dbg !6110
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6111
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6111
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6103, metadata !DIExpression()), !dbg !6112
  call void @llvm.va_start(i8* nonnull %3), !dbg !6113
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6114
  %5 = load i32, i32* %4, align 4, !dbg !6114
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6114
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6114
  call void @llvm.va_end(i8* nonnull %3), !dbg !6115
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6116
  ret void, !dbg !6116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6117 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6122, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i8* %0, metadata !6121, metadata !DIExpression()), !dbg !6123
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6124
  ret void, !dbg !6125
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6130, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8* %1, metadata !6131, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 %2, metadata !6132, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8* %1, metadata !6133, metadata !DIExpression()), !dbg !6134
  %4 = icmp eq i32 %2, 0, !dbg !6135
  br i1 %4, label %14, label %5, !dbg !6136

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6134
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6136

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6133, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 %10, metadata !6132, metadata !DIExpression()), !dbg !6134
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0), i32 noundef %7) #25, !dbg !6137
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6139
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6140
  call void @llvm.dbg.value(metadata i32 %11, metadata !6132, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8* %12, metadata !6133, metadata !DIExpression()), !dbg !6134
  br i1 %13, label %14, label %8, !dbg !6140, !llvm.loop !6141

14:                                               ; preds = %8, %3
  ret void, !dbg !6143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #3 !dbg !6144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6149, metadata !DIExpression()), !dbg !6150
  %2 = add i32 %0, -1, !dbg !6151
  %3 = icmp ult i32 %2, 4, !dbg !6151
  %4 = shl i32 %2, 3, !dbg !6151
  %5 = lshr i32 1145657157, %4, !dbg !6151
  %6 = trunc i32 %5 to i8, !dbg !6151
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6151
  ret i8 %7, !dbg !6152
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6153 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6157, metadata !DIExpression()), !dbg !6168
  call void @llvm.dbg.value(metadata i32 %1, metadata !6158, metadata !DIExpression()), !dbg !6168
  call void @llvm.dbg.value(metadata i32 0, metadata !6159, metadata !DIExpression()), !dbg !6169
  br label %4, !dbg !6170

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.26, i32 0, i32 0)) #25, !dbg !6171
  call void @llvm.dbg.value(metadata i32 0, metadata !6161, metadata !DIExpression()), !dbg !6172
  br label %16, !dbg !6173

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6159, metadata !DIExpression()), !dbg !6169
  %6 = icmp ult i32 %5, %1, !dbg !6174
  br i1 %6, label %7, label %11, !dbg !6178

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6179
  %9 = load i8, i8* %8, align 1, !dbg !6179
  %10 = zext i8 %9 to i32, !dbg !6181
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef %10) #25, !dbg !6182
  br label %12, !dbg !6183

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.28, i32 0, i32 0)) #25, !dbg !6184
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6186
  call void @llvm.dbg.value(metadata i32 %13, metadata !6159, metadata !DIExpression()), !dbg !6169
  %14 = icmp eq i32 %13, 8, !dbg !6187
  br i1 %14, label %3, label %4, !dbg !6170, !llvm.loop !6188

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.29, i32 0, i32 0)) #25, !dbg !6190
  ret void, !dbg !6191

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6161, metadata !DIExpression()), !dbg !6172
  %18 = icmp ult i32 %17, %1, !dbg !6192
  br i1 %18, label %19, label %26, !dbg !6193

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6194
  %21 = load i8, i8* %20, align 1, !dbg !6194
  call void @llvm.dbg.value(metadata i8 %21, metadata !6163, metadata !DIExpression()), !dbg !6195
  %22 = zext i8 %21 to i32, !dbg !6196
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6197
  %24 = icmp eq i32 %23, 0, !dbg !6198
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6197
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.30, i32 0, i32 0), i32 noundef %25) #25, !dbg !6199
  br label %27, !dbg !6200

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.31, i32 0, i32 0)) #25, !dbg !6201
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6203
  call void @llvm.dbg.value(metadata i32 %28, metadata !6161, metadata !DIExpression()), !dbg !6172
  %29 = icmp eq i32 %28, 8, !dbg !6204
  br i1 %29, label %15, label %16, !dbg !6173, !llvm.loop !6205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #3 !dbg !6207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6209, metadata !DIExpression()), !dbg !6210
  %2 = add i32 %0, -32, !dbg !6211
  %3 = icmp ult i32 %2, 95, !dbg !6211
  %4 = zext i1 %3 to i32, !dbg !6211
  ret i32 %4, !dbg !6212
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6262, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6263, metadata !DIExpression()), !dbg !6264
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6265
  br i1 %3, label %5, label %4, !dbg !6267

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6268
  br label %5, !dbg !6270

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6271
  ret void, !dbg !6272
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6273 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6277, metadata !DIExpression()), !dbg !6278
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6279
  %3 = load i32, i32* %2, align 4, !dbg !6279
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6279
  %5 = load i32, i32* %4, align 4, !dbg !6279
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6279
  %7 = load i32, i32* %6, align 4, !dbg !6279
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6279
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6284
  %9 = load i32, i32* %8, align 4, !dbg !6284
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6284
  %11 = load i32, i32* %10, align 4, !dbg !6284
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6284
  %13 = load i32, i32* %12, align 4, !dbg !6284
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.33, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6284
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6289
  %15 = load i32, i32* %14, align 4, !dbg !6289
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.34, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6289
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6294
  %17 = load i32, i32* %16, align 4, !dbg !6294
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.35, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6294
  ret void, !dbg !6299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6300 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6317, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6318, metadata !DIExpression()), !dbg !6320
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6321
  %4 = load i32, i32* %3, align 4, !dbg !6321
  call void @llvm.dbg.value(metadata i32 %4, metadata !6319, metadata !DIExpression()), !dbg !6320
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6322
  ret void, !dbg !6323
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6324 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6328, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.value(metadata i8* %0, metadata !6329, metadata !DIExpression()), !dbg !6331
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6332
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6332
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6330, metadata !DIExpression()), !dbg !6333
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6333
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6334
  %5 = bitcast i8* %4 to i32*, !dbg !6334
  %6 = load i32, i32* %5, align 4, !dbg !6334
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6335
  store i32 %6, i32* %7, align 4, !dbg !6336
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6337
  unreachable, !dbg !6338
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6342, metadata !DIExpression()), !dbg !6343
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6344
  ret void, !dbg !6345
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6350, metadata !DIExpression()), !dbg !6351
  %2 = icmp sgt i32 %0, -1, !dbg !6352
  br i1 %2, label %3, label %8, !dbg !6354

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6355, !srcloc !6357
  %4 = and i32 %0, 31, !dbg !6358
  %5 = shl nuw i32 1, %4, !dbg !6359
  %6 = lshr i32 %0, 5, !dbg !6360
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6361
  store volatile i32 %5, i32* %7, align 4, !dbg !6362
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6363, !srcloc !6364
  br label %8, !dbg !6365

8:                                                ; preds = %3, %1
  ret void, !dbg !6366
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6369, metadata !DIExpression()), !dbg !6370
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6371
  ret void, !dbg !6372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6375, metadata !DIExpression()), !dbg !6376
  %2 = icmp sgt i32 %0, -1, !dbg !6377
  br i1 %2, label %3, label %8, !dbg !6379

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6380
  %5 = shl nuw i32 1, %4, !dbg !6382
  %6 = lshr i32 %0, 5, !dbg !6383
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6384
  store volatile i32 %5, i32* %7, align 4, !dbg !6385
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6386, !srcloc !6390
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6391, !srcloc !6394
  br label %8, !dbg !6395

8:                                                ; preds = %3, %1
  ret void, !dbg !6396
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6401, metadata !DIExpression()), !dbg !6402
  %2 = lshr i32 %0, 5, !dbg !6403
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6404
  %4 = load volatile i32, i32* %3, align 4, !dbg !6404
  %5 = and i32 %0, 31, !dbg !6405
  %6 = shl nuw i32 1, %5, !dbg !6405
  %7 = and i32 %4, %6, !dbg !6406
  ret i32 %7, !dbg !6407
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6412, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i32 %1, metadata !6413, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i32 %2, metadata !6414, metadata !DIExpression()), !dbg !6415
  %4 = add i32 %1, 1, !dbg !6416
  call void @llvm.dbg.value(metadata i32 %4, metadata !6413, metadata !DIExpression()), !dbg !6415
  %5 = icmp ult i32 %4, 16, !dbg !6419
  br i1 %5, label %7, label %6, !dbg !6422

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 94) #25, !dbg !6423
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.39, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6423
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 94) #25, !dbg !6423
  unreachable, !dbg !6423

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6425
  ret void, !dbg !6426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6431, metadata !DIExpression()), !dbg !6433
  call void @llvm.dbg.value(metadata i32 %1, metadata !6432, metadata !DIExpression()), !dbg !6433
  %3 = trunc i32 %1 to i8, !dbg !6434
  %4 = shl i8 %3, 4, !dbg !6434
  %5 = and i32 %0, 15, !dbg !6436
  %6 = add nsw i32 %5, -4, !dbg !6436
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6436
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6436
  %9 = icmp slt i32 %0, 0, !dbg !6436
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6436
  store volatile i8 %4, i8* %10, align 1, !dbg !6434
  ret void, !dbg !6437
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6438 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6440, metadata !DIExpression()), !dbg !6441
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6442
  ret void, !dbg !6443
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6444 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6446
  tail call void @z_arm_int_exit() #25, !dbg !6447
  ret void, !dbg !6448
}

; Function Attrs: optsize
declare !dbg !6449 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6450 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6452 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6454
  tail call void @z_bss_zero() #25, !dbg !6455
  tail call void @z_data_copy() #25, !dbg !6456
  tail call void @z_arm_interrupt_init() #25, !dbg !6457
  tail call void @z_cstart() #27, !dbg !6458
  unreachable, !dbg !6458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6459 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6460
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6461, !srcloc !6464
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6465, !srcloc !6468
  ret void, !dbg !6469
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6470 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6473, metadata !DIExpression()), !dbg !6474
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6475
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6476
  store i32 %0, i32* %3, align 4, !dbg !6477
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6478
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6479
  store i32 %4, i32* %5, align 4, !dbg !6480
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6481
  %7 = or i32 %6, 268435456, !dbg !6481
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6481
  call void @llvm.dbg.value(metadata i32 0, metadata !6482, metadata !DIExpression()) #23, !dbg !6485
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6487, !srcloc !6488
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6489
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6490
  %10 = load i32, i32* %9, align 4, !dbg !6490
  ret i32 %10, !dbg !6491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6492 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6605, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6606, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata i8* %2, metadata !6607, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6608, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata i8* %4, metadata !6609, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata i8* %5, metadata !6610, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata i8* %6, metadata !6611, metadata !DIExpression()), !dbg !6613
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6614
  call void @llvm.dbg.value(metadata i8* %8, metadata !6612, metadata !DIExpression()), !dbg !6613
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6615
  %10 = bitcast i8* %9 to i32*, !dbg !6615
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6616
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6617
  %12 = bitcast i8* %8 to i32*, !dbg !6618
  store i32 %11, i32* %12, align 4, !dbg !6619
  %13 = ptrtoint i8* %4 to i32, !dbg !6620
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6621
  %15 = bitcast i8* %14 to i32*, !dbg !6621
  store i32 %13, i32* %15, align 4, !dbg !6622
  %16 = ptrtoint i8* %5 to i32, !dbg !6623
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6624
  %18 = bitcast i8* %17 to i32*, !dbg !6624
  store i32 %16, i32* %18, align 4, !dbg !6625
  %19 = ptrtoint i8* %6 to i32, !dbg !6626
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6627
  %21 = bitcast i8* %20 to i32*, !dbg !6627
  store i32 %19, i32* %21, align 4, !dbg !6628
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6629
  %23 = bitcast i8* %22 to i32*, !dbg !6629
  store i32 16777216, i32* %23, align 4, !dbg !6630
  %24 = ptrtoint i8* %8 to i32, !dbg !6631
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6632
  store i32 %24, i32* %25, align 8, !dbg !6633
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6634
  store i32 0, i32* %26, align 4, !dbg !6635
  ret void, !dbg !6636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6642, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata i32 %1, metadata !6643, metadata !DIExpression()), !dbg !6648
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6649
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6644, metadata !DIExpression()), !dbg !6648
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6650
  br i1 %4, label %19, label %5, !dbg !6652

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6647, metadata !DIExpression()), !dbg !6648
  %6 = icmp eq i32 %0, -22, !dbg !6653
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6653
  %8 = load i32, i32* %7, align 4, !dbg !6653
  br i1 %6, label %16, label %9, !dbg !6655

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6653
  %11 = icmp ule i32 %10, %0, !dbg !6653
  %12 = icmp ugt i32 %8, %0, !dbg !6653
  %13 = and i1 %12, %11, !dbg !6653
  %14 = icmp ugt i32 %8, %1, !dbg !6653
  %15 = and i1 %14, %13, !dbg !6653
  br i1 %15, label %18, label %19, !dbg !6653

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6653
  br i1 %17, label %18, label %19, !dbg !6655

18:                                               ; preds = %9, %16
  br label %19, !dbg !6656

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6648
  ret i32 %20, !dbg !6658
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6659 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6663, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.value(metadata i8* %1, metadata !6664, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6665, metadata !DIExpression()), !dbg !6666
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6667
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6668
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6669, !srcloc !6670
  unreachable, !dbg !6671
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6672 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6690, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i32 %1, metadata !6691, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i32 %2, metadata !6692, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6693, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i32 0, metadata !6694, metadata !DIExpression()), !dbg !6700
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6701
  call void @llvm.dbg.value(metadata i32 %8, metadata !6695, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6700
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6702
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6702
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6703
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6703
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6699, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.value(metadata i32 0, metadata !6705, metadata !DIExpression()) #23, !dbg !6708
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6710, !srcloc !6711
  call void @llvm.dbg.value(metadata i8* %6, metadata !6697, metadata !DIExpression(DW_OP_deref)), !dbg !6700
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6712
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6698, metadata !DIExpression()), !dbg !6700
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6713
  br i1 %11, label %12, label %13, !dbg !6716

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6717
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.45, i32 0, i32 0)) #25, !dbg !6717
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6717
  unreachable, !dbg !6717

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6719
  call void @llvm.dbg.value(metadata i32 %14, metadata !6695, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i8* %5, metadata !6696, metadata !DIExpression(DW_OP_deref)), !dbg !6700
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6720
  call void @llvm.dbg.value(metadata i32 %15, metadata !6694, metadata !DIExpression()), !dbg !6700
  %16 = load i8, i8* %5, align 1, !dbg !6721, !range !6723
  call void @llvm.dbg.value(metadata i8 %16, metadata !6696, metadata !DIExpression()), !dbg !6700
  %17 = icmp eq i8 %16, 0, !dbg !6721
  br i1 %17, label %18, label %35, !dbg !6724

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6725
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6726
  %21 = load i8, i8* %6, align 1, !dbg !6727, !range !6723
  call void @llvm.dbg.value(metadata i8 %21, metadata !6697, metadata !DIExpression()), !dbg !6700
  %22 = icmp eq i8 %21, 0, !dbg !6727
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6729
  %24 = load i32, i32* %23, align 4, !dbg !6729
  br i1 %22, label %30, label %25, !dbg !6730

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6731
  %27 = icmp eq i32 %26, 0, !dbg !6734
  br i1 %27, label %28, label %34, !dbg !6735

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6736
  br label %32, !dbg !6738

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6739
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6729
  br label %34, !dbg !6741

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6741
  br label %35, !dbg !6742

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6742
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6742
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6742
  ret void, !dbg !6742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6748, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata i32 %1, metadata !6749, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata i32 %2, metadata !6750, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata i8* %3, metadata !6751, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata i8 0, metadata !6752, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6753, metadata !DIExpression()), !dbg !6754
  store i8 0, i8* %3, align 1, !dbg !6755
  %5 = icmp ugt i32 %2, -16777217, !dbg !6756
  br i1 %5, label %6, label %17, !dbg !6758

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6759
  %8 = icmp eq i32 %7, 8, !dbg !6759
  br i1 %8, label %9, label %10, !dbg !6759

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !6761
  br label %17, !dbg !6767

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6768
  %12 = icmp eq i32 %11, 0, !dbg !6768
  br i1 %12, label %13, label %14, !dbg !6769

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6753, metadata !DIExpression()), !dbg !6754
  store i8 1, i8* %3, align 1, !dbg !6772
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6754
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6753, metadata !DIExpression()), !dbg !6754
  br label %17, !dbg !6775

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6754
  ret %struct.__esf* %18, !dbg !6776
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6777 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6781, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i32 %1, metadata !6782, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i8* %2, metadata !6783, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i32 0, metadata !6784, metadata !DIExpression()), !dbg !6785
  store i8 0, i8* %2, align 1, !dbg !6786
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6787

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6788
  call void @llvm.dbg.value(metadata i32 %5, metadata !6784, metadata !DIExpression()), !dbg !6785
  br label %12, !dbg !6790

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6791
  call void @llvm.dbg.value(metadata i32 %7, metadata !6784, metadata !DIExpression()), !dbg !6785
  br label %12, !dbg !6792

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6793
  call void @llvm.dbg.value(metadata i32 0, metadata !6784, metadata !DIExpression()), !dbg !6785
  br label %12, !dbg !6794

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6795
  call void @llvm.dbg.value(metadata i32 0, metadata !6784, metadata !DIExpression()), !dbg !6785
  br label %12, !dbg !6796

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6797
  br label %12, !dbg !6798

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6799
  br label %12, !dbg !6800

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6785
  call void @llvm.dbg.value(metadata i32 %13, metadata !6784, metadata !DIExpression()), !dbg !6785
  ret i32 %13, !dbg !6801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6802 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6806, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.value(metadata i8* %1, metadata !6807, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.value(metadata i32 0, metadata !6808, metadata !DIExpression()), !dbg !6809
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6810
  store i8 0, i8* %1, align 1, !dbg !6815
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6816
  %4 = and i32 %3, 2, !dbg !6818
  %5 = icmp eq i32 %4, 0, !dbg !6819
  br i1 %5, label %7, label %6, !dbg !6820

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !6821
  br label %38, !dbg !6827

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6828
  %9 = icmp sgt i32 %8, -1, !dbg !6830
  br i1 %9, label %11, label %10, !dbg !6831

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.52, i32 0, i32 0), i32 noundef 69) #25, !dbg !6832
  br label %38, !dbg !6838

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6839
  %13 = and i32 %12, 1073741824, !dbg !6841
  %14 = icmp eq i32 %13, 0, !dbg !6842
  br i1 %14, label %37, label %15, !dbg !6843

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.53, i32 0, i32 0), i32 noundef 69) #25, !dbg !6844
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6850
  br i1 %16, label %17, label %21, !dbg !6852

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6853
  %19 = load i32, i32* %18, align 4, !dbg !6853
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.54, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6853
  %20 = load i32, i32* %18, align 4, !dbg !6859
  call void @llvm.dbg.value(metadata i32 %20, metadata !6808, metadata !DIExpression()), !dbg !6809
  br label %38, !dbg !6860

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6861
  %23 = and i32 %22, 255, !dbg !6863
  %24 = icmp eq i32 %23, 0, !dbg !6864
  br i1 %24, label %27, label %25, !dbg !6865

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6866
  call void @llvm.dbg.value(metadata i32 %26, metadata !6808, metadata !DIExpression()), !dbg !6809
  br label %38, !dbg !6868

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6869
  %29 = and i32 %28, 65280, !dbg !6871
  %30 = icmp eq i32 %29, 0, !dbg !6872
  br i1 %30, label %32, label %31, !dbg !6873

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6874
  call void @llvm.dbg.value(metadata i32 0, metadata !6808, metadata !DIExpression()), !dbg !6809
  br label %38, !dbg !6876

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6877
  %34 = icmp ult i32 %33, 65536, !dbg !6879
  br i1 %34, label %36, label %35, !dbg !6880

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6881
  call void @llvm.dbg.value(metadata i32 0, metadata !6808, metadata !DIExpression()), !dbg !6809
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 755) #25, !dbg !6883
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.56, i32 0, i32 0)) #25, !dbg !6883
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 755) #25, !dbg !6883
  unreachable, !dbg !6883

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 760) #25, !dbg !6888
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.57, i32 0, i32 0)) #25, !dbg !6888
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 760) #25, !dbg !6888
  unreachable, !dbg !6888

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6809
  call void @llvm.dbg.value(metadata i32 %39, metadata !6808, metadata !DIExpression()), !dbg !6809
  ret i32 %39, !dbg !6893
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6894 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6896, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 %1, metadata !6897, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i8* %2, metadata !6898, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 0, metadata !6899, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 -22, metadata !6900, metadata !DIExpression()), !dbg !6909
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !6910
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6915
  %5 = and i32 %4, 16, !dbg !6917
  %6 = icmp eq i32 %5, 0, !dbg !6918
  br i1 %6, label %8, label %7, !dbg !6919

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6920
  br label %8, !dbg !6926

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6927
  %10 = and i32 %9, 8, !dbg !6929
  %11 = icmp eq i32 %10, 0, !dbg !6930
  br i1 %11, label %13, label %12, !dbg !6931

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6932
  br label %13, !dbg !6938

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6939
  %15 = and i32 %14, 2, !dbg !6940
  %16 = icmp eq i32 %15, 0, !dbg !6941
  br i1 %16, label %27, label %17, !dbg !6942

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6943
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6948
  call void @llvm.dbg.value(metadata i32 %18, metadata !6901, metadata !DIExpression()), !dbg !6949
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6950
  %20 = and i32 %19, 128, !dbg !6952
  %21 = icmp eq i32 %20, 0, !dbg !6953
  br i1 %21, label %27, label %22, !dbg !6954

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6900, metadata !DIExpression()), !dbg !6909
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6955
  %23 = icmp eq i32 %1, 0, !dbg !6961
  br i1 %23, label %27, label %24, !dbg !6963

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6964
  %26 = and i32 %25, -129, !dbg !6964
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6964
  br label %27, !dbg !6966

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6909
  call void @llvm.dbg.value(metadata i32 %28, metadata !6900, metadata !DIExpression()), !dbg !6909
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6967
  %30 = and i32 %29, 1, !dbg !6969
  %31 = icmp eq i32 %30, 0, !dbg !6970
  br i1 %31, label %33, label %32, !dbg !6971

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6972
  br label %33, !dbg !6978

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6979
  %35 = and i32 %34, 16, !dbg !6980
  %36 = icmp eq i32 %35, 0, !dbg !6980
  br i1 %36, label %37, label %41, !dbg !6981

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6982
  %39 = and i32 %38, 2, !dbg !6983
  %40 = icmp eq i32 %39, 0, !dbg !6983
  br i1 %40, label %55, label %41, !dbg !6984

41:                                               ; preds = %37, %33
  %42 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6985
  %43 = and i32 %42, 2048, !dbg !6986
  %44 = icmp eq i32 %43, 0, !dbg !6986
  br i1 %44, label %55, label %45, !dbg !6987

45:                                               ; preds = %41
  %46 = ptrtoint %struct.__esf* %0 to i32, !dbg !6988
  %47 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %46) #25, !dbg !6989
  call void @llvm.dbg.value(metadata i32 %47, metadata !6904, metadata !DIExpression()), !dbg !6990
  %48 = icmp eq i32 %47, 0, !dbg !6991
  br i1 %48, label %50, label %49, !dbg !6993

49:                                               ; preds = %45
  call void @llvm.dbg.value(metadata i32 %47, metadata !6994, metadata !DIExpression()) #23, !dbg !6997
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %47) #23, !dbg !7000, !srcloc !7001
  call void @llvm.dbg.value(metadata i32 2, metadata !6899, metadata !DIExpression()), !dbg !6909
  br label %55, !dbg !7002

50:                                               ; preds = %45
  %51 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7003
  %52 = and i32 %51, 16, !dbg !7003
  %53 = icmp eq i32 %52, 0, !dbg !7003
  br i1 %53, label %55, label %54, !dbg !7007

54:                                               ; preds = %50
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 343) #25, !dbg !7008
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i32 0, i32 0)) #25, !dbg !7008
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 343) #25, !dbg !7008
  unreachable, !dbg !7008

55:                                               ; preds = %49, %50, %41, %37
  %56 = phi i32 [ 0, %41 ], [ 0, %37 ], [ 2, %49 ], [ 0, %50 ], !dbg !6909
  call void @llvm.dbg.value(metadata i32 %56, metadata !6899, metadata !DIExpression()), !dbg !6909
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7010
  %58 = or i32 %57, 255, !dbg !7010
  store volatile i32 %58, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7010
  store i8 0, i8* %2, align 1, !dbg !7011
  ret i32 %56, !dbg !7012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7013 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7017, metadata !DIExpression()), !dbg !7024
  call void @llvm.dbg.value(metadata i32 %0, metadata !7018, metadata !DIExpression()), !dbg !7024
  call void @llvm.dbg.value(metadata i8* %1, metadata !7019, metadata !DIExpression()), !dbg !7024
  call void @llvm.dbg.value(metadata i32 0, metadata !7020, metadata !DIExpression()), !dbg !7024
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #25, !dbg !7025
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7030
  %4 = and i32 %3, 4096, !dbg !7032
  %5 = icmp eq i32 %4, 0, !dbg !7032
  br i1 %5, label %7, label %6, !dbg !7033

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7034
  br label %7, !dbg !7040

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7041
  %9 = and i32 %8, 2048, !dbg !7043
  %10 = icmp eq i32 %9, 0, !dbg !7043
  br i1 %10, label %12, label %11, !dbg !7044

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7045
  br label %12, !dbg !7051

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7052
  %14 = and i32 %13, 512, !dbg !7053
  %15 = icmp eq i32 %14, 0, !dbg !7053
  br i1 %15, label %26, label %16, !dbg !7054

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7055
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7060
  call void @llvm.dbg.value(metadata i32 %17, metadata !7021, metadata !DIExpression()), !dbg !7061
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7062
  %19 = and i32 %18, 32768, !dbg !7064
  %20 = icmp eq i32 %19, 0, !dbg !7065
  br i1 %20, label %26, label %21, !dbg !7066

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7067
  %22 = icmp eq i32 %0, 0, !dbg !7073
  br i1 %22, label %26, label %23, !dbg !7075

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7076
  %25 = and i32 %24, -32769, !dbg !7076
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7076
  br label %26, !dbg !7078

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7079
  %28 = and i32 %27, 1024, !dbg !7081
  %29 = icmp eq i32 %28, 0, !dbg !7081
  br i1 %29, label %31, label %30, !dbg !7082

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25.48, i32 0, i32 0), i32 noundef 69) #25, !dbg !7083
  br label %31, !dbg !7089

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7090
  %33 = and i32 %32, 256, !dbg !7092
  %34 = icmp eq i32 %33, 0, !dbg !7093
  br i1 %34, label %36, label %35, !dbg !7094

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7095
  br label %36, !dbg !7101

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7102
  %38 = or i32 %37, 65280, !dbg !7102
  store volatile i32 %38, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7102
  store i8 0, i8* %1, align 1, !dbg !7103
  ret void, !dbg !7104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7105 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7111, metadata !DIExpression()), !dbg !7113
  call void @llvm.dbg.value(metadata i32 0, metadata !7112, metadata !DIExpression()), !dbg !7113
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69) #25, !dbg !7114
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7119
  %2 = and i32 %1, 33554432, !dbg !7121
  %3 = icmp eq i32 %2, 0, !dbg !7122
  br i1 %3, label %5, label %4, !dbg !7123

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7124
  br label %5, !dbg !7130

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7131
  %7 = and i32 %6, 16777216, !dbg !7133
  %8 = icmp eq i32 %7, 0, !dbg !7134
  br i1 %8, label %10, label %9, !dbg !7135

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #25, !dbg !7136
  br label %10, !dbg !7142

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7143
  %12 = and i32 %11, 524288, !dbg !7145
  %13 = icmp eq i32 %12, 0, !dbg !7146
  br i1 %13, label %15, label %14, !dbg !7147

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7148
  br label %15, !dbg !7154

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7155
  %17 = and i32 %16, 262144, !dbg !7157
  %18 = icmp eq i32 %17, 0, !dbg !7158
  br i1 %18, label %20, label %19, !dbg !7159

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7160
  br label %20, !dbg !7166

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7167
  %22 = and i32 %21, 131072, !dbg !7169
  %23 = icmp eq i32 %22, 0, !dbg !7170
  br i1 %23, label %25, label %24, !dbg !7171

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !7172
  br label %25, !dbg !7178

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7179
  %27 = and i32 %26, 65536, !dbg !7181
  %28 = icmp eq i32 %27, 0, !dbg !7182
  br i1 %28, label %30, label %29, !dbg !7183

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #25, !dbg !7184
  br label %30, !dbg !7190

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7191
  %32 = or i32 %31, -65536, !dbg !7191
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7191
  ret void, !dbg !7192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7193 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7197, metadata !DIExpression()), !dbg !7199
  call void @llvm.dbg.value(metadata i8* %0, metadata !7198, metadata !DIExpression()), !dbg !7199
  store i8 0, i8* %0, align 1, !dbg !7200
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7201
  ret void, !dbg !7206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7207 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7211, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.value(metadata i32 %0, metadata !7212, metadata !DIExpression()), !dbg !7213
  %2 = icmp slt i32 %0, 16, !dbg !7214
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36.46, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.37, i32 0, i32 0), !dbg !7214
  %4 = add nsw i32 %0, -16, !dbg !7214
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7214
  ret void, !dbg !7219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7220 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7224, metadata !DIExpression()), !dbg !7227
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7228
  %3 = load i32, i32* %2, align 4, !dbg !7228
  %4 = inttoptr i32 %3 to i16*, !dbg !7229
  call void @llvm.dbg.value(metadata i16* %4, metadata !7225, metadata !DIExpression()), !dbg !7227
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7230
  %6 = or i32 %5, 256, !dbg !7230
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7230
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7231, !srcloc !7234
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7235, !srcloc !7238
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7239
  %8 = load i16, i16* %7, align 2, !dbg !7240
  call void @llvm.dbg.value(metadata i16 %8, metadata !7226, metadata !DIExpression()), !dbg !7227
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7241
  %10 = and i32 %9, -257, !dbg !7241
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7241
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7242, !srcloc !7234
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7244, !srcloc !7238
  %11 = icmp eq i16 %8, -8446, !dbg !7246
  ret i1 %11, !dbg !7248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7249 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7250
  %2 = or i32 %1, 16, !dbg !7250
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7250
  ret void, !dbg !7251
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7252 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7255, metadata !DIExpression()), !dbg !7256
  br label %1, !dbg !7257

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7255, metadata !DIExpression()), !dbg !7256
  tail call fastcc void @__NVIC_SetPriority.61(i32 noundef %2) #24, !dbg !7259
  %3 = add nuw nsw i32 %2, 1, !dbg !7262
  call void @llvm.dbg.value(metadata i32 %3, metadata !7255, metadata !DIExpression()), !dbg !7256
  %4 = icmp eq i32 %3, 45, !dbg !7263
  br i1 %4, label %5, label %1, !dbg !7257, !llvm.loop !7264

5:                                                ; preds = %1
  ret void, !dbg !7266
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.61(i32 noundef %0) unnamed_addr #15 !dbg !7267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7269, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.value(metadata i32 1, metadata !7270, metadata !DIExpression()), !dbg !7271
  %2 = and i32 %0, 15, !dbg !7272
  %3 = add nsw i32 %2, -4, !dbg !7272
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7272
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7272
  %6 = icmp slt i32 %0, 0, !dbg !7272
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7272
  store volatile i8 16, i8* %7, align 1, !dbg !7273
  ret void, !dbg !7275
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7276 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7385, metadata !DIExpression()), !dbg !7386
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7387
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7389
  br i1 %3, label %4, label %12, !dbg !7390

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7391, !srcloc !7405
  call void @llvm.dbg.value(metadata i32 %5, metadata !7396, metadata !DIExpression()) #23, !dbg !7406
  %6 = icmp eq i32 %5, 0, !dbg !7407
  br i1 %6, label %12, label %7, !dbg !7408

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7409
  %9 = or i32 %8, 268435456, !dbg !7409
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7409
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7411
  %11 = and i32 %10, -32769, !dbg !7411
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7411
  br label %12, !dbg !7412

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7413
  ret void, !dbg !7414
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7415 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7416
  ret void, !dbg !7417
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !406 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !514, metadata !DIExpression()), !dbg !7418
  call void @llvm.dbg.value(metadata i8 0, metadata !515, metadata !DIExpression()), !dbg !7418
  call void @llvm.dbg.value(metadata i32 64, metadata !517, metadata !DIExpression()), !dbg !7418
  call void @llvm.dbg.value(metadata i32 undef, metadata !516, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7418
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7419
  %3 = load i32, i32* %2, align 4, !dbg !7419
  call void @llvm.dbg.value(metadata i32 %3, metadata !516, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7418
  %4 = add i32 %3, -64, !dbg !7421
  call void @llvm.dbg.value(metadata i32 %4, metadata !516, metadata !DIExpression()), !dbg !7418
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7422
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7423
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7424
  call void @llvm.dbg.value(metadata i8 1, metadata !515, metadata !DIExpression()), !dbg !7418
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7425
  ret void, !dbg !7426
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7427 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7428
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7429, !srcloc !7432
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7433, !srcloc !7436
  ret void, !dbg !7437
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7438 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7439, !srcloc !7442
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7443
  ret void, !dbg !7444
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7445 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7460, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.value(metadata i8 %1, metadata !7461, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.value(metadata i32 %2, metadata !7462, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.value(metadata i32 %3, metadata !7463, metadata !DIExpression()), !dbg !7464
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7465
  %6 = icmp eq i32 %5, -22, !dbg !7467
  br i1 %6, label %7, label %9, !dbg !7468

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 283) #25, !dbg !7469
  %8 = zext i8 %1 to i32, !dbg !7469
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.73, i32 0, i32 0), i32 noundef %8) #25, !dbg !7469
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 283) #25, !dbg !7469
  unreachable, !dbg !7469

9:                                                ; preds = %4
  ret void, !dbg !7474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7475 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7480, metadata !DIExpression()), !dbg !7485
  call void @llvm.dbg.value(metadata i8 %1, metadata !7481, metadata !DIExpression()), !dbg !7485
  call void @llvm.dbg.value(metadata i32 undef, metadata !7482, metadata !DIExpression()), !dbg !7485
  call void @llvm.dbg.value(metadata i32 undef, metadata !7483, metadata !DIExpression()), !dbg !7485
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7486
  call void @llvm.dbg.value(metadata i8 %3, metadata !7484, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7485
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7487
  call void @llvm.dbg.value(metadata i32 %4, metadata !7484, metadata !DIExpression()), !dbg !7485
  %5 = trunc i32 %4 to i8, !dbg !7488
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7489
  ret i32 %4, !dbg !7490
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7491 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7495, metadata !DIExpression()), !dbg !7501
  call void @llvm.dbg.value(metadata i8 %1, metadata !7496, metadata !DIExpression()), !dbg !7501
  call void @llvm.dbg.value(metadata i8 %2, metadata !7497, metadata !DIExpression()), !dbg !7501
  call void @llvm.dbg.value(metadata i1 %3, metadata !7498, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7501
  %5 = zext i8 %2 to i32, !dbg !7502
  call void @llvm.dbg.value(metadata i32 %5, metadata !7500, metadata !DIExpression()), !dbg !7501
  call void @llvm.dbg.value(metadata i32 0, metadata !7499, metadata !DIExpression()), !dbg !7501
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7500, metadata !DIExpression()), !dbg !7501
  call void @llvm.dbg.value(metadata i32 0, metadata !7499, metadata !DIExpression()), !dbg !7501
  %7 = icmp eq i8 %1, 0, !dbg !7503
  br i1 %7, label %30, label %8, !dbg !7506

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7500, metadata !DIExpression()), !dbg !7501
  call void @llvm.dbg.value(metadata i32 %10, metadata !7499, metadata !DIExpression()), !dbg !7501
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7507
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7510
  %13 = load i32, i32* %12, align 4, !dbg !7510
  %14 = icmp eq i32 %13, 0, !dbg !7511
  br i1 %14, label %26, label %15, !dbg !7512

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7513

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7515
  %18 = icmp eq i32 %17, 0, !dbg !7515
  br i1 %18, label %19, label %20, !dbg !7516

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.74, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7517
  br label %30, !dbg !7523

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7524
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7525
  call void @llvm.dbg.value(metadata i32 %22, metadata !7500, metadata !DIExpression()), !dbg !7501
  %23 = icmp eq i32 %22, -22, !dbg !7526
  br i1 %23, label %30, label %24, !dbg !7528

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7529
  call void @llvm.dbg.value(metadata i32 %25, metadata !7500, metadata !DIExpression()), !dbg !7501
  br label %26, !dbg !7530

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7501
  call void @llvm.dbg.value(metadata i32 %27, metadata !7500, metadata !DIExpression()), !dbg !7501
  %28 = add nuw nsw i32 %10, 1, !dbg !7531
  call void @llvm.dbg.value(metadata i32 %28, metadata !7499, metadata !DIExpression()), !dbg !7501
  %29 = icmp eq i32 %28, %6, !dbg !7503
  br i1 %29, label %30, label %8, !dbg !7506, !llvm.loop !7532

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7501
  ret i32 %31, !dbg !7534
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #17 !dbg !7535 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7539, metadata !DIExpression()), !dbg !7541
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7542
  %3 = load i32, i32* %2, align 4, !dbg !7542
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7543, !range !7544
  %5 = icmp ult i32 %4, 2, !dbg !7543
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7545
  br i1 %7, label %8, label %15, !dbg !7545

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7546
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7547
  %11 = load i32, i32* %10, align 4, !dbg !7547
  %12 = and i32 %11, %9, !dbg !7548
  %13 = icmp eq i32 %12, 0, !dbg !7549
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7540, metadata !DIExpression()), !dbg !7541
  ret i32 %16, !dbg !7550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7551 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7555, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7556, metadata !DIExpression()), !dbg !7558
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7559
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7559
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7557, metadata !DIExpression()), !dbg !7560
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7561
  %6 = load i32, i32* %5, align 4, !dbg !7561
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7562
  store i32 %6, i32* %7, align 4, !dbg !7563
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7564
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7565
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7566
  %11 = load i32, i32* %10, align 4, !dbg !7566
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7567
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7568
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7569
  ret i32 %12, !dbg !7570
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #18 !dbg !7571 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7578, metadata !DIExpression()), !dbg !7582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7579, metadata !DIExpression()), !dbg !7582
  call void @llvm.dbg.value(metadata i32 undef, metadata !7580, metadata !DIExpression()), !dbg !7582
  call void @llvm.dbg.value(metadata i32 %2, metadata !7581, metadata !DIExpression()), !dbg !7582
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7583
  %5 = load i32, i32* %4, align 4, !dbg !7583
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7584
  %7 = or i32 %6, %5, !dbg !7585
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7586
  store i32 %7, i32* %8, align 4, !dbg !7587
  ret void, !dbg !7588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7589 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7593, metadata !DIExpression()), !dbg !7595
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7594, metadata !DIExpression()), !dbg !7595
  %3 = zext i8 %0 to i32, !dbg !7596
  %4 = icmp ugt i8 %0, 7, !dbg !7598
  br i1 %4, label %5, label %6, !dbg !7599

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.75, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7600
  br label %7, !dbg !7606

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7607
  br label %7, !dbg !7608

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7595
  ret i32 %8, !dbg !7609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7614, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7615, metadata !DIExpression()), !dbg !7616
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7617
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7618
  %4 = load i32, i32* %3, align 4, !dbg !7618
  %5 = and i32 %4, -32, !dbg !7619
  %6 = or i32 %5, %0, !dbg !7620
  %7 = or i32 %6, 16, !dbg !7620
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7621
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7622
  %9 = load i32, i32* %8, align 4, !dbg !7622
  %10 = or i32 %9, 1, !dbg !7623
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7624
  ret void, !dbg !7625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7629, metadata !DIExpression()), !dbg !7630
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7631
  ret void, !dbg !7632
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7637, metadata !DIExpression()), !dbg !7638
  %2 = icmp ult i32 %0, 33, !dbg !7639
  br i1 %2, label %11, label %3, !dbg !7641

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7642
  br i1 %4, label %11, label %5, !dbg !7644

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7645
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7646, !range !7544
  %8 = mul nsw i32 %7, -2, !dbg !7647
  %9 = add nsw i32 %8, 62, !dbg !7647
  %10 = and i32 %9, 62, !dbg !7648
  br label %11, !dbg !7649

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7638
  ret i32 %12, !dbg !7650
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7651 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7655, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i8 %1, metadata !7656, metadata !DIExpression()), !dbg !7657
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7658
  %4 = icmp eq i32 %3, -22, !dbg !7660
  br i1 %4, label %5, label %7, !dbg !7661

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 314) #25, !dbg !7662
  %6 = zext i8 %1 to i32, !dbg !7662
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.78, i32 0, i32 0), i32 noundef %6) #25, !dbg !7662
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 314) #25, !dbg !7662
  unreachable, !dbg !7662

7:                                                ; preds = %2
  ret void, !dbg !7667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7668 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7672, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i8 %1, metadata !7673, metadata !DIExpression()), !dbg !7679
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7680
  call void @llvm.dbg.value(metadata i8 %3, metadata !7674, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7679
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7681
  call void @llvm.dbg.value(metadata i32 %4, metadata !7674, metadata !DIExpression()), !dbg !7679
  %5 = icmp ne i32 %4, -22, !dbg !7682
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7683
  call void @llvm.dbg.value(metadata i32 %4, metadata !7675, metadata !DIExpression()), !dbg !7684
  br i1 %7, label %8, label %12, !dbg !7683

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7675, metadata !DIExpression()), !dbg !7684
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7685
  %10 = add i32 %9, 1, !dbg !7688
  call void @llvm.dbg.value(metadata i32 %10, metadata !7675, metadata !DIExpression()), !dbg !7684
  %11 = icmp eq i32 %10, 8, !dbg !7689
  br i1 %11, label %12, label %8, !dbg !7690, !llvm.loop !7691

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7693
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7697, metadata !DIExpression()), !dbg !7698
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7699
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7700
  ret void, !dbg !7701
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7702 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7707
  %2 = icmp ugt i32 %1, 8, !dbg !7709
  br i1 %2, label %3, label %4, !dbg !7710

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 341) #25, !dbg !7711
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.79, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7711
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 341) #25, !dbg !7711
  unreachable, !dbg !7711

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7716
  call void @llvm.dbg.value(metadata i32 0, metadata !7706, metadata !DIExpression()), !dbg !7717
  %5 = icmp eq i32 %1, 0, !dbg !7718
  br i1 %5, label %13, label %6, !dbg !7721

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7721

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7706, metadata !DIExpression()), !dbg !7717
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7722
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7724
  %11 = add nuw i32 %9, 1, !dbg !7725
  call void @llvm.dbg.value(metadata i32 %11, metadata !7706, metadata !DIExpression()), !dbg !7717
  %12 = icmp eq i32 %11, %1, !dbg !7718
  br i1 %12, label %13, label %8, !dbg !7721, !llvm.loop !7726

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7728
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7729
  tail call void @arm_core_mpu_enable() #24, !dbg !7730
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7731
  %16 = and i32 %15, 65280, !dbg !7731
  %17 = icmp eq i32 %16, 2048, !dbg !7731
  br i1 %17, label %19, label %18, !dbg !7734

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 435) #25, !dbg !7735
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.81, i32 0, i32 0)) #25, !dbg !7735
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 435) #25, !dbg !7735
  unreachable, !dbg !7735

19:                                               ; preds = %13
  ret i32 0, !dbg !7737
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7738 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7745, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i8* %1, metadata !7746, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i8* %0, metadata !7747, metadata !DIExpression()), !dbg !7748
  %3 = load i8, i8* %1, align 1, !dbg !7749
  %4 = icmp eq i8 %3, 0, !dbg !7750
  br i1 %4, label %13, label %5, !dbg !7751

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7745, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i8* %8, metadata !7746, metadata !DIExpression()), !dbg !7748
  store i8 %6, i8* %7, align 1, !dbg !7752
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7754
  call void @llvm.dbg.value(metadata i8* %9, metadata !7745, metadata !DIExpression()), !dbg !7748
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7755
  call void @llvm.dbg.value(metadata i8* %10, metadata !7746, metadata !DIExpression()), !dbg !7748
  %11 = load i8, i8* %10, align 1, !dbg !7749
  %12 = icmp eq i8 %11, 0, !dbg !7750
  br i1 %12, label %13, label %5, !dbg !7751, !llvm.loop !7756

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7758
  ret i8* %0, !dbg !7759
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7760 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7764, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i8* %1, metadata !7765, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %2, metadata !7766, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i8* %0, metadata !7767, metadata !DIExpression()), !dbg !7768
  %4 = icmp eq i32 %2, 0, !dbg !7769
  br i1 %4, label %22, label %5, !dbg !7770

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7764, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %7, metadata !7766, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i8* %8, metadata !7765, metadata !DIExpression()), !dbg !7768
  %9 = load i8, i8* %8, align 1, !dbg !7771
  %10 = icmp eq i8 %9, 0, !dbg !7772
  br i1 %10, label %16, label %11, !dbg !7773

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7774
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7776
  call void @llvm.dbg.value(metadata i8* %12, metadata !7765, metadata !DIExpression()), !dbg !7768
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7777
  call void @llvm.dbg.value(metadata i8* %13, metadata !7764, metadata !DIExpression()), !dbg !7768
  %14 = add i32 %7, -1, !dbg !7778
  call void @llvm.dbg.value(metadata i32 %14, metadata !7766, metadata !DIExpression()), !dbg !7768
  %15 = icmp eq i32 %14, 0, !dbg !7769
  br i1 %15, label %22, label %5, !dbg !7770, !llvm.loop !7779

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7764, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %18, metadata !7766, metadata !DIExpression()), !dbg !7768
  store i8 0, i8* %17, align 1, !dbg !7781
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7783
  call void @llvm.dbg.value(metadata i8* %19, metadata !7764, metadata !DIExpression()), !dbg !7768
  %20 = add i32 %18, -1, !dbg !7784
  call void @llvm.dbg.value(metadata i32 %20, metadata !7766, metadata !DIExpression()), !dbg !7768
  %21 = icmp eq i32 %20, 0, !dbg !7785
  br i1 %21, label %22, label %16, !dbg !7786, !llvm.loop !7787

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7789
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7790 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7794, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i32 %1, metadata !7795, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i32 %1, metadata !7796, metadata !DIExpression()), !dbg !7797
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7798

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7794, metadata !DIExpression()), !dbg !7797
  %6 = load i8, i8* %5, align 1, !dbg !7799
  %7 = icmp eq i8 %6, %3, !dbg !7800
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7801
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7802
  call void @llvm.dbg.value(metadata i8* %10, metadata !7794, metadata !DIExpression()), !dbg !7797
  br i1 %9, label %11, label %4, !dbg !7801, !llvm.loop !7804

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7806
  ret i8* %12, !dbg !7807
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7808 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7810, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i32 %1, metadata !7811, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i8* null, metadata !7812, metadata !DIExpression()), !dbg !7813
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7814

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7813
  call void @llvm.dbg.value(metadata i8* %6, metadata !7812, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i8* %5, metadata !7810, metadata !DIExpression()), !dbg !7813
  %7 = load i8, i8* %5, align 1, !dbg !7815
  %8 = icmp eq i8 %7, %3, !dbg !7818
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7819
  call void @llvm.dbg.value(metadata i8* %9, metadata !7812, metadata !DIExpression()), !dbg !7813
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7820
  call void @llvm.dbg.value(metadata i8* %10, metadata !7810, metadata !DIExpression()), !dbg !7813
  %11 = icmp eq i8 %7, 0, !dbg !7821
  br i1 %11, label %12, label %4, !dbg !7821, !llvm.loop !7822

12:                                               ; preds = %4
  ret i8* %9, !dbg !7824
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7825 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7829, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i32 0, metadata !7830, metadata !DIExpression()), !dbg !7831
  %2 = load i8, i8* %0, align 1, !dbg !7832
  %3 = icmp eq i8 %2, 0, !dbg !7833
  br i1 %3, label %11, label %4, !dbg !7834

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7830, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i8* %6, metadata !7829, metadata !DIExpression()), !dbg !7831
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7835
  call void @llvm.dbg.value(metadata i8* %7, metadata !7829, metadata !DIExpression()), !dbg !7831
  %8 = add i32 %5, 1, !dbg !7837
  call void @llvm.dbg.value(metadata i32 %8, metadata !7830, metadata !DIExpression()), !dbg !7831
  %9 = load i8, i8* %7, align 1, !dbg !7832
  %10 = icmp eq i8 %9, 0, !dbg !7833
  br i1 %10, label %11, label %4, !dbg !7834, !llvm.loop !7838

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7831
  ret i32 %12, !dbg !7840
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7841 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7845, metadata !DIExpression()), !dbg !7848
  call void @llvm.dbg.value(metadata i32 %1, metadata !7846, metadata !DIExpression()), !dbg !7848
  call void @llvm.dbg.value(metadata i32 0, metadata !7847, metadata !DIExpression()), !dbg !7848
  %3 = load i8, i8* %0, align 1, !dbg !7849
  %4 = icmp ne i8 %3, 0, !dbg !7850
  %5 = icmp ne i32 %1, 0, !dbg !7851
  %6 = and i1 %4, %5, !dbg !7851
  br i1 %6, label %7, label %16, !dbg !7852

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7847, metadata !DIExpression()), !dbg !7848
  call void @llvm.dbg.value(metadata i8* %9, metadata !7845, metadata !DIExpression()), !dbg !7848
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7853
  call void @llvm.dbg.value(metadata i8* %10, metadata !7845, metadata !DIExpression()), !dbg !7848
  %11 = add nuw i32 %8, 1, !dbg !7855
  call void @llvm.dbg.value(metadata i32 %11, metadata !7847, metadata !DIExpression()), !dbg !7848
  %12 = load i8, i8* %10, align 1, !dbg !7849
  %13 = icmp ne i8 %12, 0, !dbg !7850
  %14 = icmp ult i32 %11, %1, !dbg !7851
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7851
  br i1 %15, label %7, label %16, !dbg !7852, !llvm.loop !7856

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7848
  ret i32 %17, !dbg !7858
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7859 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7863, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.value(metadata i8* %1, metadata !7864, metadata !DIExpression()), !dbg !7865
  %3 = load i8, i8* %0, align 1, !dbg !7866
  %4 = load i8, i8* %1, align 1, !dbg !7867
  %5 = icmp ne i8 %3, %4, !dbg !7868
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7869
  br i1 %7, label %18, label %8, !dbg !7869

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7864, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.value(metadata i8* %10, metadata !7863, metadata !DIExpression()), !dbg !7865
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7870
  call void @llvm.dbg.value(metadata i8* %11, metadata !7863, metadata !DIExpression()), !dbg !7865
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7872
  call void @llvm.dbg.value(metadata i8* %12, metadata !7864, metadata !DIExpression()), !dbg !7865
  %13 = load i8, i8* %11, align 1, !dbg !7866
  %14 = load i8, i8* %12, align 1, !dbg !7867
  %15 = icmp ne i8 %13, %14, !dbg !7868
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7869
  br i1 %17, label %18, label %8, !dbg !7869, !llvm.loop !7873

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7866
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7867
  %21 = zext i8 %19 to i32, !dbg !7876
  %22 = zext i8 %20 to i32, !dbg !7877
  %23 = sub nsw i32 %21, %22, !dbg !7878
  ret i32 %23, !dbg !7879
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7880 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7884, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %1, metadata !7885, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %2, metadata !7886, metadata !DIExpression()), !dbg !7887
  %4 = icmp eq i32 %2, 0, !dbg !7888
  br i1 %4, label %23, label %5, !dbg !7888

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7886, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %7, metadata !7885, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %8, metadata !7884, metadata !DIExpression()), !dbg !7887
  %9 = load i8, i8* %8, align 1, !dbg !7889
  %10 = load i8, i8* %7, align 1, !dbg !7890
  %11 = icmp ne i8 %9, %10, !dbg !7891
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7892
  br i1 %13, label %19, label %14, !dbg !7892

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7893
  call void @llvm.dbg.value(metadata i8* %15, metadata !7884, metadata !DIExpression()), !dbg !7887
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7895
  call void @llvm.dbg.value(metadata i8* %16, metadata !7885, metadata !DIExpression()), !dbg !7887
  %17 = add i32 %6, -1, !dbg !7896
  call void @llvm.dbg.value(metadata i32 %17, metadata !7886, metadata !DIExpression()), !dbg !7887
  %18 = icmp eq i32 %17, 0, !dbg !7888
  br i1 %18, label %23, label %5, !dbg !7888, !llvm.loop !7897

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7900
  %21 = zext i8 %10 to i32, !dbg !7901
  %22 = sub nsw i32 %20, %21, !dbg !7902
  br label %23, !dbg !7903

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7903
  ret i32 %24, !dbg !7904
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7905 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7909, metadata !DIExpression()), !dbg !7914
  call void @llvm.dbg.value(metadata i8* %1, metadata !7910, metadata !DIExpression()), !dbg !7914
  call void @llvm.dbg.value(metadata i8** %2, metadata !7911, metadata !DIExpression()), !dbg !7914
  %4 = icmp eq i8* %0, null, !dbg !7915
  br i1 %4, label %5, label %7, !dbg !7915

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7916
  br label %7, !dbg !7915

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7915
  call void @llvm.dbg.value(metadata i8* %8, metadata !7912, metadata !DIExpression()), !dbg !7914
  %9 = load i8, i8* %8, align 1, !dbg !7917
  %10 = icmp eq i8 %9, 0, !dbg !7917
  br i1 %10, label %33, label %11, !dbg !7918

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7912, metadata !DIExpression()), !dbg !7914
  %14 = zext i8 %12 to i32, !dbg !7917
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7919
  %16 = icmp eq i8* %15, null, !dbg !7918
  br i1 %16, label %21, label %17, !dbg !7920

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7921
  call void @llvm.dbg.value(metadata i8* %18, metadata !7912, metadata !DIExpression()), !dbg !7914
  %19 = load i8, i8* %18, align 1, !dbg !7917
  %20 = icmp eq i8 %19, 0, !dbg !7917
  br i1 %20, label %33, label %11, !dbg !7918, !llvm.loop !7923

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7913, metadata !DIExpression()), !dbg !7914
  %24 = zext i8 %22 to i32, !dbg !7925
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7926
  %26 = icmp eq i8* %25, null, !dbg !7927
  br i1 %26, label %27, label %31, !dbg !7928

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7929
  call void @llvm.dbg.value(metadata i8* %28, metadata !7913, metadata !DIExpression()), !dbg !7914
  %29 = load i8, i8* %28, align 1, !dbg !7925
  %30 = icmp eq i8 %29, 0, !dbg !7925
  br i1 %30, label %33, label %21, !dbg !7931, !llvm.loop !7932

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7934
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7937
  br label %33, !dbg !7938

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7914
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7914
  store i8* %34, i8** %2, align 4, !dbg !7914
  ret i8* %35, !dbg !7939
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7940 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7942, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i8* %1, metadata !7943, metadata !DIExpression()), !dbg !7944
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7945
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7946
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7947
  ret i8* %0, !dbg !7948
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7949 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7951, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %1, metadata !7952, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 %2, metadata !7953, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %0, metadata !7954, metadata !DIExpression()), !dbg !7956
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7957
  call void @llvm.dbg.value(metadata i32 %4, metadata !7955, metadata !DIExpression()), !dbg !7956
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7958
  call void @llvm.dbg.value(metadata i8* %5, metadata !7951, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %1, metadata !7952, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 %2, metadata !7953, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 %2, metadata !7953, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7956
  %6 = icmp eq i32 %2, 0, !dbg !7959
  br i1 %6, label %18, label %7, !dbg !7960

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7961
  call void @llvm.dbg.value(metadata i8* %9, metadata !7951, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %10, metadata !7952, metadata !DIExpression()), !dbg !7956
  %12 = load i8, i8* %10, align 1, !dbg !7962
  %13 = icmp eq i8 %12, 0, !dbg !7963
  br i1 %13, label %18, label %14, !dbg !7964

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7965
  call void @llvm.dbg.value(metadata i8* %15, metadata !7952, metadata !DIExpression()), !dbg !7956
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7967
  call void @llvm.dbg.value(metadata i8* %16, metadata !7951, metadata !DIExpression()), !dbg !7956
  store i8 %12, i8* %9, align 1, !dbg !7968
  call void @llvm.dbg.value(metadata i32 %11, metadata !7953, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 %11, metadata !7953, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7956
  %17 = icmp eq i32 %11, 0, !dbg !7959
  br i1 %17, label %18, label %7, !dbg !7960, !llvm.loop !7969

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7956
  store i8 0, i8* %19, align 1, !dbg !7971
  ret i8* %0, !dbg !7972
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7973 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7977, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.value(metadata i8* %1, metadata !7978, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.value(metadata i32 %2, metadata !7979, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.value(metadata i8* %0, metadata !7980, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.value(metadata i8* %1, metadata !7981, metadata !DIExpression()), !dbg !7982
  %4 = icmp eq i32 %2, 0, !dbg !7983
  br i1 %4, label %31, label %5, !dbg !7985

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7981, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.value(metadata i8* %0, metadata !7980, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.value(metadata i32 %2, metadata !7979, metadata !DIExpression()), !dbg !7982
  %6 = add i32 %2, -1, !dbg !7986
  call void @llvm.dbg.value(metadata i32 %6, metadata !7979, metadata !DIExpression()), !dbg !7982
  %7 = icmp eq i32 %6, 0, !dbg !7987
  br i1 %7, label %23, label %8, !dbg !7988

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7989
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7989
  br label %11, !dbg !7989

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7981, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.value(metadata i8* %14, metadata !7980, metadata !DIExpression()), !dbg !7982
  %15 = load i8, i8* %14, align 1, !dbg !7990
  %16 = load i8, i8* %13, align 1, !dbg !7991
  %17 = icmp eq i8 %15, %16, !dbg !7992
  br i1 %17, label %18, label %23, !dbg !7989

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7993
  call void @llvm.dbg.value(metadata i8* %19, metadata !7980, metadata !DIExpression()), !dbg !7982
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7995
  call void @llvm.dbg.value(metadata i8* %20, metadata !7981, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.value(metadata i32 %12, metadata !7979, metadata !DIExpression()), !dbg !7982
  %21 = add i32 %12, -1, !dbg !7986
  call void @llvm.dbg.value(metadata i32 %21, metadata !7979, metadata !DIExpression()), !dbg !7982
  %22 = icmp eq i32 %21, 0, !dbg !7987
  br i1 %22, label %23, label %11, !dbg !7988, !llvm.loop !7996

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7982
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7982
  %26 = load i8, i8* %24, align 1, !dbg !7998
  %27 = zext i8 %26 to i32, !dbg !7998
  %28 = load i8, i8* %25, align 1, !dbg !7999
  %29 = zext i8 %28 to i32, !dbg !7999
  %30 = sub nsw i32 %27, %29, !dbg !8000
  br label %31, !dbg !8001

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7982
  ret i32 %32, !dbg !8002
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8003 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8007, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8* %1, metadata !8008, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 %2, metadata !8009, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8* %0, metadata !8010, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8* %1, metadata !8011, metadata !DIExpression()), !dbg !8012
  %4 = ptrtoint i8* %0 to i32, !dbg !8013
  %5 = ptrtoint i8* %1 to i32, !dbg !8013
  %6 = sub i32 %4, %5, !dbg !8013
  %7 = icmp ult i32 %6, %2, !dbg !8015
  br i1 %7, label %10, label %8, !dbg !8016

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8011, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8* %0, metadata !8010, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 %2, metadata !8009, metadata !DIExpression()), !dbg !8012
  %9 = icmp eq i32 %2, 0, !dbg !8017
  br i1 %9, label %26, label %17, !dbg !8019

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8009, metadata !DIExpression()), !dbg !8012
  %12 = add i32 %11, -1, !dbg !8020
  call void @llvm.dbg.value(metadata i32 %12, metadata !8009, metadata !DIExpression()), !dbg !8012
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8023
  %14 = load i8, i8* %13, align 1, !dbg !8023
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8024
  store i8 %14, i8* %15, align 1, !dbg !8025
  %16 = icmp eq i32 %12, 0, !dbg !8026
  br i1 %16, label %26, label %10, !dbg !8027, !llvm.loop !8028

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8011, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8* %19, metadata !8010, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 %20, metadata !8009, metadata !DIExpression()), !dbg !8012
  %21 = load i8, i8* %18, align 1, !dbg !8030
  store i8 %21, i8* %19, align 1, !dbg !8032
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8033
  call void @llvm.dbg.value(metadata i8* %22, metadata !8010, metadata !DIExpression()), !dbg !8012
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8034
  call void @llvm.dbg.value(metadata i8* %23, metadata !8011, metadata !DIExpression()), !dbg !8012
  %24 = add i32 %20, -1, !dbg !8035
  call void @llvm.dbg.value(metadata i32 %24, metadata !8009, metadata !DIExpression()), !dbg !8012
  %25 = icmp eq i32 %24, 0, !dbg !8017
  br i1 %25, label %26, label %17, !dbg !8019, !llvm.loop !8036

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8038
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8039 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8045, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i8* %1, metadata !8046, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i32 %2, metadata !8047, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i8* %0, metadata !8048, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i8* %1, metadata !8049, metadata !DIExpression()), !dbg !8050
  %4 = icmp eq i32 %2, 0, !dbg !8051
  br i1 %4, label %14, label %5, !dbg !8052

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8049, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i8* %7, metadata !8048, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i32 %8, metadata !8047, metadata !DIExpression()), !dbg !8050
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8053
  call void @llvm.dbg.value(metadata i8* %9, metadata !8049, metadata !DIExpression()), !dbg !8050
  %10 = load i8, i8* %6, align 1, !dbg !8055
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8056
  call void @llvm.dbg.value(metadata i8* %11, metadata !8048, metadata !DIExpression()), !dbg !8050
  store i8 %10, i8* %7, align 1, !dbg !8057
  %12 = add i32 %8, -1, !dbg !8058
  call void @llvm.dbg.value(metadata i32 %12, metadata !8047, metadata !DIExpression()), !dbg !8050
  %13 = icmp eq i32 %12, 0, !dbg !8051
  br i1 %13, label %14, label %5, !dbg !8052, !llvm.loop !8059

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8061
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8062 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8066, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i32 %1, metadata !8067, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i32 %2, metadata !8068, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i8* %0, metadata !8069, metadata !DIExpression()), !dbg !8071
  %4 = trunc i32 %1 to i8, !dbg !8072
  call void @llvm.dbg.value(metadata i8 %4, metadata !8070, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i32 %2, metadata !8068, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i8* %0, metadata !8069, metadata !DIExpression()), !dbg !8071
  %5 = icmp eq i32 %2, 0, !dbg !8073
  br i1 %5, label %12, label %6, !dbg !8074

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8068, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i8* %8, metadata !8069, metadata !DIExpression()), !dbg !8071
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8075
  call void @llvm.dbg.value(metadata i8* %9, metadata !8069, metadata !DIExpression()), !dbg !8071
  store i8 %4, i8* %8, align 1, !dbg !8077
  %10 = add i32 %7, -1, !dbg !8078
  call void @llvm.dbg.value(metadata i32 %10, metadata !8068, metadata !DIExpression()), !dbg !8071
  %11 = icmp eq i32 %10, 0, !dbg !8073
  br i1 %11, label %12, label %6, !dbg !8074, !llvm.loop !8079

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8081
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8082 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8086, metadata !DIExpression()), !dbg !8092
  call void @llvm.dbg.value(metadata i32 %1, metadata !8087, metadata !DIExpression()), !dbg !8092
  call void @llvm.dbg.value(metadata i32 %2, metadata !8088, metadata !DIExpression()), !dbg !8092
  %4 = icmp eq i32 %2, 0, !dbg !8093
  br i1 %4, label %17, label %5, !dbg !8094

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8095

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8096
  call void @llvm.dbg.value(metadata i8* %9, metadata !8089, metadata !DIExpression()), !dbg !8096
  call void @llvm.dbg.value(metadata i32 %8, metadata !8088, metadata !DIExpression()), !dbg !8092
  call void @llvm.dbg.value(metadata i8* %9, metadata !8089, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8096
  %10 = load i8, i8* %9, align 1, !dbg !8097
  %11 = icmp eq i8 %10, %6, !dbg !8100
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8101
  call void @llvm.dbg.value(metadata i8* %12, metadata !8089, metadata !DIExpression()), !dbg !8096
  call void @llvm.dbg.value(metadata i32 %13, metadata !8088, metadata !DIExpression()), !dbg !8092
  br i1 %15, label %16, label %7, !dbg !8101, !llvm.loop !8102

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8104

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8092
  ret i8* %19, !dbg !8105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8106 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8108, metadata !DIExpression()), !dbg !8109
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8110
  ret void, !dbg !8111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #3 !dbg !8112 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8114, metadata !DIExpression()), !dbg !8115
  ret i32 -1, !dbg !8116
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8121, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i32* %1, metadata !8122, metadata !DIExpression()), !dbg !8123
  %3 = ptrtoint i32* %1 to i32, !dbg !8124
  %4 = and i32 %3, -2, !dbg !8124
  %5 = icmp eq i32 %4, 2, !dbg !8124
  br i1 %5, label %6, label %9, !dbg !8124

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8125
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8125
  br label %9, !dbg !8126

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8126
  ret i32 %10, !dbg !8127
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8130, metadata !DIExpression()), !dbg !8132
  call void @llvm.dbg.value(metadata i32* %1, metadata !8131, metadata !DIExpression()), !dbg !8132
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8133
  ret i32 %3, !dbg !8134
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8135 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8138, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i32* %1, metadata !8139, metadata !DIExpression()), !dbg !8140
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8141, !srcloc !8143
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8144
  ret i32 %3, !dbg !8145
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8146 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8151, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.value(metadata i32* %1, metadata !8152, metadata !DIExpression()), !dbg !8155
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8156
  call void @llvm.dbg.value(metadata i32 %3, metadata !8153, metadata !DIExpression()), !dbg !8155
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8157
  call void @llvm.dbg.value(metadata i32 %4, metadata !8154, metadata !DIExpression()), !dbg !8155
  %5 = icmp ne i32 %3, %4, !dbg !8158
  %6 = sext i1 %5 to i32, !dbg !8159
  ret i32 %6, !dbg !8160
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8161 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8165, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i32 %1, metadata !8166, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i32 %2, metadata !8167, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i32* %3, metadata !8168, metadata !DIExpression()), !dbg !8169
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8170
  ret i32 %5, !dbg !8171
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8172 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8174, metadata !DIExpression()), !dbg !8178
  call void @llvm.dbg.value(metadata i32 %1, metadata !8175, metadata !DIExpression()), !dbg !8178
  call void @llvm.dbg.value(metadata i32 %2, metadata !8176, metadata !DIExpression()), !dbg !8178
  call void @llvm.dbg.value(metadata i32* %3, metadata !8177, metadata !DIExpression()), !dbg !8178
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8179, !srcloc !8181
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8182
  ret i32 %5, !dbg !8183
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8184 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8186, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata i32 %1, metadata !8187, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata i32 %2, metadata !8188, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata i32* %3, metadata !8189, metadata !DIExpression()), !dbg !8194
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8195
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8197
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8197
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8197
  br i1 %11, label %33, label %12, !dbg !8197

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8194
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8194
  call void @llvm.dbg.value(metadata i8* %14, metadata !8192, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata i32 %13, metadata !8190, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata i32 %1, metadata !8191, metadata !DIExpression()), !dbg !8194
  br label %15, !dbg !8198

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8200
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8194
  call void @llvm.dbg.value(metadata i8* %17, metadata !8192, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata i32 %16, metadata !8191, metadata !DIExpression()), !dbg !8194
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8201
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8204
  call void @llvm.dbg.value(metadata i8* %19, metadata !8192, metadata !DIExpression()), !dbg !8194
  %20 = load i8, i8* %17, align 1, !dbg !8205
  %21 = zext i8 %20 to i32, !dbg !8206
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8201
  %23 = icmp eq i32 %22, -1, !dbg !8207
  br i1 %23, label %30, label %24, !dbg !8208

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8209
  call void @llvm.dbg.value(metadata i32 %25, metadata !8191, metadata !DIExpression()), !dbg !8194
  %26 = icmp eq i32 %25, 0, !dbg !8210
  br i1 %26, label %27, label %15, !dbg !8211, !llvm.loop !8212

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8214
  call void @llvm.dbg.value(metadata i32 %28, metadata !8190, metadata !DIExpression()), !dbg !8194
  %29 = icmp eq i32 %28, 0, !dbg !8215
  br i1 %29, label %30, label %12, !dbg !8216, !llvm.loop !8217

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8194
  call void @llvm.dbg.value(metadata i32 %31, metadata !8190, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.label(metadata !8193), !dbg !8220
  %32 = sub i32 %2, %31, !dbg !8221
  br label %33, !dbg !8222

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8194
  ret i32 %34, !dbg !8223
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8224 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8228, metadata !DIExpression()), !dbg !8229
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8230
  %3 = icmp eq i32 %2, -1, !dbg !8232
  br i1 %3, label %8, label %4, !dbg !8233

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8234
  %6 = icmp eq i32 %5, -1, !dbg !8235
  %7 = sext i1 %6 to i32, !dbg !8234
  br label %8, !dbg !8236

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8229
  ret i32 %9, !dbg !8237
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8238 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8240, metadata !DIExpression()), !dbg !8251
  %8 = bitcast i64* %2 to i8*, !dbg !8252
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8252
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !8241, metadata !DIExpression()), !dbg !8253
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !8253
  store i64 %9, i64* %2, align 8, !dbg !8253
  %10 = bitcast i64* %4 to i8*, !dbg !8254
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #23, !dbg !8254
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !8249, metadata !DIExpression()), !dbg !8255
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !8255
  store i64 %11, i64* %4, align 8, !dbg !8255
  %12 = bitcast i64* %6 to i8*, !dbg !8256
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #23, !dbg !8256
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !8250, metadata !DIExpression()), !dbg !8257
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !8257
  store i64 %13, i64* %6, align 8, !dbg !8257
  %14 = trunc i64 %9 to i32, !dbg !8258
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !8258
  %16 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %15) #24, !dbg !8260
  %17 = trunc i64 %13 to i32, !dbg !8261
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !8261
  br i1 %16, label %19, label %26, !dbg !8261

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !8261
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !8261
  %22 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %21) #24, !dbg !8262
  br i1 %22, label %23, label %26, !dbg !8263

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %18) #24, !dbg !8264
  br i1 %24, label %25, label %26, !dbg !8265

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #24, !dbg !8266
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #24, !dbg !8267
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #24, !dbg !8268
  br label %26, !dbg !8269

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !8251
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #23, !dbg !8270
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #23, !dbg !8270
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8270
  ret i32 %27, !dbg !8270
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !8271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8276, metadata !DIExpression()), !dbg !8277
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8278, !srcloc !8280
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #24, !dbg !8281
  ret i1 %2, !dbg !8282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8283 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !8288, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata i32 %1, metadata !8289, metadata !DIExpression()), !dbg !8290
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !8291
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !8291
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !8292
  %6 = load i8, i8* %5, align 4, !dbg !8292
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !8293
  %8 = load i16, i16* %7, align 2, !dbg !8293
  %9 = zext i16 %8 to i32, !dbg !8294
  %10 = or i32 %9, %1, !dbg !8295
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #24, !dbg !8296
  ret void, !dbg !8297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !8298 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8301, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i8 %1, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %2, metadata !8303, metadata !DIExpression()), !dbg !8304
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8305, !srcloc !8307
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #24, !dbg !8308
  ret void, !dbg !8309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !8310 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8312, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.value(metadata i8 %1, metadata !8313, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.value(metadata i32 %2, metadata !8314, metadata !DIExpression()), !dbg !8319
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8320
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !8320
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !8320
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !8315, metadata !DIExpression()), !dbg !8319
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8321
  %8 = bitcast i8** %7 to %struct.k_spinlock**, !dbg !8321
  %9 = load %struct.k_spinlock*, %struct.k_spinlock** %8, align 4, !dbg !8321
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !8316, metadata !DIExpression()), !dbg !8319
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8322
  %11 = bitcast i8** %10 to %struct.k_spinlock**, !dbg !8322
  %12 = load %struct.k_spinlock*, %struct.k_spinlock** %11, align 4, !dbg !8322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %12, metadata !8318, metadata !DIExpression()), !dbg !8319
  %13 = and i32 %2, 132120576, !dbg !8323
  %14 = icmp eq i32 %13, 0, !dbg !8323
  br i1 %14, label %16, label %15, !dbg !8326

15:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 679) #25, !dbg !8327
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13.96, i32 0, i32 0)) #25, !dbg !8327
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 679) #25, !dbg !8327
  unreachable, !dbg !8327

16:                                               ; preds = %3
  %17 = and i32 %2, 48, !dbg !8329
  %18 = icmp eq i32 %17, 48, !dbg !8329
  br i1 %18, label %19, label %20, !dbg !8332

19:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.14.97, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 683) #25, !dbg !8333
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.15.98, i32 0, i32 0)) #25, !dbg !8333
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 683) #25, !dbg !8333
  unreachable, !dbg !8333

20:                                               ; preds = %16
  %21 = and i32 %2, 131072, !dbg !8335
  %22 = icmp ne i32 %21, 0, !dbg !8335
  %23 = and i32 %2, 131074, !dbg !8335
  %24 = icmp eq i32 %23, 2, !dbg !8335
  br i1 %24, label %25, label %26, !dbg !8335

25:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 687) #25, !dbg !8338
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.17.100, i32 0, i32 0)) #25, !dbg !8338
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 687) #25, !dbg !8338
  unreachable, !dbg !8338

26:                                               ; preds = %20
  %27 = and i32 %2, 6, !dbg !8340
  %28 = icmp eq i32 %27, 4, !dbg !8340
  br i1 %28, label %29, label %30, !dbg !8340

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18.101, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 690) #25, !dbg !8343
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 690) #25, !dbg !8343
  unreachable, !dbg !8343

30:                                               ; preds = %26
  %31 = and i32 %2, 786432, !dbg !8345
  %32 = icmp eq i32 %31, 0, !dbg !8345
  %33 = or i1 %32, %22, !dbg !8345
  br i1 %33, label %35, label %34, !dbg !8345

34:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19.102, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 694) #25, !dbg !8348
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20.103, i32 0, i32 0)) #25, !dbg !8348
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 694) #25, !dbg !8348
  unreachable, !dbg !8348

35:                                               ; preds = %30
  %36 = icmp eq i32 %31, 786432, !dbg !8350
  br i1 %36, label %37, label %38, !dbg !8353

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.21.104, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 698) #25, !dbg !8354
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22.105, i32 0, i32 0)) #25, !dbg !8354
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 698) #25, !dbg !8354
  unreachable, !dbg !8354

38:                                               ; preds = %35
  %39 = and i32 %2, 1048577, !dbg !8356
  %40 = icmp ne i32 %39, 1048577, !dbg !8356
  %41 = or i1 %40, %32, !dbg !8356
  %42 = xor i32 %2, 786432, !dbg !8356
  %43 = select i1 %41, i32 %2, i32 %42, !dbg !8356
  call void @llvm.dbg.value(metadata i32 %43, metadata !8314, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.value(metadata i32 %43, metadata !8314, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !8319
  %44 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %9, i32 0, i32 0, !dbg !8358
  %45 = load i32, i32* %44, align 4, !dbg !8358
  %46 = zext i8 %1 to i32, !dbg !8358
  %47 = shl nuw i32 1, %46, !dbg !8358
  %48 = and i32 %45, %47, !dbg !8358
  %49 = icmp eq i32 %48, 0, !dbg !8358
  br i1 %49, label %50, label %51, !dbg !8361

50:                                               ; preds = %38
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10.106, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 709) #25, !dbg !8362
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.107, i32 0, i32 0)) #25, !dbg !8362
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 709) #25, !dbg !8362
  unreachable, !dbg !8362

51:                                               ; preds = %38
  %52 = and i32 %43, 1, !dbg !8364
  %53 = icmp eq i32 %52, 0, !dbg !8366
  br i1 %53, label %58, label %54, !dbg !8367

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !8368
  %56 = load i32, i32* %55, align 4, !dbg !8370
  %57 = or i32 %56, %47, !dbg !8370
  store i32 %57, i32* %55, align 4, !dbg !8370
  br label %63, !dbg !8371

58:                                               ; preds = %51
  %59 = xor i32 %47, -1, !dbg !8372
  %60 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !8374
  %61 = load i32, i32* %60, align 4, !dbg !8375
  %62 = and i32 %61, %59, !dbg !8375
  store i32 %62, i32* %60, align 4, !dbg !8375
  br label %63

63:                                               ; preds = %58, %54
  %64 = and i32 %43, -1048577, !dbg !8376
  call void @llvm.dbg.value(metadata i32 %64, metadata !8314, metadata !DIExpression()), !dbg !8319
  %65 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !8377
  %66 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %65, align 4, !dbg !8377
  %67 = tail call i32 %66(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %64) #25, !dbg !8378
  ret void, !dbg !8379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !8380 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8382, metadata !DIExpression()), !dbg !8383
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !8384
  ret i1 %2, !dbg !8385
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8386 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8388, metadata !DIExpression()), !dbg !8389
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !8390
  ret void, !dbg !8391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8392 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8396, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.value(metadata i32 %1, metadata !8397, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8398, metadata !DIExpression()), !dbg !8402
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8403
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8403
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8403
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8399, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.value(metadata i32 %0, metadata !8401, metadata !DIExpression()), !dbg !8402
  %7 = icmp slt i32 %0, %1, !dbg !8404
  br i1 %7, label %8, label %22, !dbg !8407

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8401, metadata !DIExpression()), !dbg !8402
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !8408
  %11 = icmp eq i32 %10, 0, !dbg !8408
  br i1 %11, label %19, label %12, !dbg !8411

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !8412
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8414
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8414
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8416
  br i1 %15, label %19, label %16, !dbg !8417

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8418
  %18 = load i8*, i8** %17, align 4, !dbg !8418
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8419
  br label %19, !dbg !8420

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8421
  call void @llvm.dbg.value(metadata i32 %20, metadata !8401, metadata !DIExpression()), !dbg !8402
  %21 = icmp eq i32 %20, %1, !dbg !8404
  br i1 %21, label %22, label %8, !dbg !8407, !llvm.loop !8422

22:                                               ; preds = %19, %3
  ret void, !dbg !8424
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8427, metadata !DIExpression()), !dbg !8428
  %2 = shl nuw i32 1, %0, !dbg !8429
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !8432
  ret i32 %3, !dbg !8433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8438, metadata !DIExpression()), !dbg !8439
  %2 = shl nuw i32 1, %0, !dbg !8440
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !8443
  ret void, !dbg !8444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8448, metadata !DIExpression()), !dbg !8449
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !8450
  ret void, !dbg !8451
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8454, metadata !DIExpression()), !dbg !8455
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !8456
  %3 = and i32 %2, %0, !dbg !8456
  %4 = icmp eq i32 %3, %0, !dbg !8457
  %5 = zext i1 %4 to i32, !dbg !8457
  ret i32 %5, !dbg !8458
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8459 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8461, metadata !DIExpression()), !dbg !8462
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !8463
  ret void, !dbg !8464
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8465 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8467, metadata !DIExpression()), !dbg !8468
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !8469
  ret void, !dbg !8470
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8471 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8473, metadata !DIExpression()), !dbg !8474
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !8475
  ret void, !dbg !8476
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8477 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8479, metadata !DIExpression()), !dbg !8480
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !8481
  ret void, !dbg !8482
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8483 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8485, metadata !DIExpression()), !dbg !8486
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !8487
  ret void, !dbg !8488
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8489 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8491, metadata !DIExpression()), !dbg !8492
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !8493
  ret void, !dbg !8494
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8495 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8497, metadata !DIExpression()), !dbg !8498
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !8499
  ret i32 0, !dbg !8500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !846 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !850, metadata !DIExpression()), !dbg !8501
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8502
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8504
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8506
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8508
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8510
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8512
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8514
  ret void, !dbg !8516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8519, metadata !DIExpression()), !dbg !8521
  call void @llvm.dbg.value(metadata i32 0, metadata !8520, metadata !DIExpression()), !dbg !8521
  call void @llvm.dbg.value(metadata i32 undef, metadata !8520, metadata !DIExpression()), !dbg !8521
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8522
  %3 = load i32, i32* %2, align 4, !dbg !8522
  call void @llvm.dbg.value(metadata i32 %3, metadata !8520, metadata !DIExpression()), !dbg !8521
  %4 = shl nuw i32 1, %0, !dbg !8523
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !8524
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8525
  ret void, !dbg !8526
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8529, metadata !DIExpression()), !dbg !8530
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8531
  %3 = or i32 %2, %0, !dbg !8531
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8531
  ret void, !dbg !8532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8535, metadata !DIExpression()), !dbg !8536
  %2 = icmp slt i32 %0, 32, !dbg !8537
  br i1 %2, label %3, label %5, !dbg !8539

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8540
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !8542
  br label %5, !dbg !8543

5:                                                ; preds = %1, %3
  ret void, !dbg !8544
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8547, metadata !DIExpression()), !dbg !8548
  %2 = xor i32 %0, -1, !dbg !8549
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8549
  %4 = and i32 %3, %2, !dbg !8549
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8549
  ret void, !dbg !8550
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8551 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8555, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.value(metadata i32 %1, metadata !8556, metadata !DIExpression()), !dbg !8557
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8558

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8559
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !8561
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !8562
  br label %11, !dbg !8563

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8564
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !8565
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !8566
  br label %11, !dbg !8567

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8568
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !8569
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !8570
  br label %11, !dbg !8571

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8572
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !8573
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !8574
  br label %11, !dbg !8575

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8579, metadata !DIExpression()), !dbg !8580
  %2 = xor i32 %0, -1, !dbg !8581
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8581
  %4 = and i32 %3, %2, !dbg !8581
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8581
  ret void, !dbg !8582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8585, metadata !DIExpression()), !dbg !8586
  %2 = xor i32 %0, -1, !dbg !8587
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8587
  %4 = and i32 %3, %2, !dbg !8587
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8587
  ret void, !dbg !8588
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8591, metadata !DIExpression()), !dbg !8592
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8593
  %3 = or i32 %2, %0, !dbg !8593
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8593
  ret void, !dbg !8594
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8597, metadata !DIExpression()), !dbg !8598
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8599
  %3 = or i32 %2, %0, !dbg !8599
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8599
  ret void, !dbg !8600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8601 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8605, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8606, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata i8* %2, metadata !8607, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !8608, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8610, metadata !DIExpression()), !dbg !8611
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8612
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8612
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8614
  br i1 %6, label %7, label %9, !dbg !8615

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8616
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8617
  store i8* %2, i8** %8, align 4, !dbg !8618
  br label %9, !dbg !8619

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8611
  ret i32 %10, !dbg !8620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !8621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8623, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !8624, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8625, metadata !DIExpression()), !dbg !8626
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8627
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8628
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8629
  store i8* null, i8** %3, align 4, !dbg !8630
  ret void, !dbg !8631
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8632 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8634, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i8* %1, metadata !8635, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i8* %1, metadata !8636, metadata !DIExpression()), !dbg !8639
  %3 = bitcast i8* %1 to i32*, !dbg !8640
  %4 = load i32, i32* %3, align 4, !dbg !8640
  %5 = add i32 %4, -37, !dbg !8640
  %6 = icmp ult i32 %5, -9, !dbg !8640
  br i1 %6, label %15, label %7, !dbg !8642

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8643
  %9 = inttoptr i32 %8 to i32*, !dbg !8644
  call void @llvm.dbg.value(metadata i32* %9, metadata !8637, metadata !DIExpression()), !dbg !8639
  %10 = load volatile i32, i32* %9, align 4, !dbg !8645
  call void @llvm.dbg.value(metadata i32 %10, metadata !8638, metadata !DIExpression()), !dbg !8639
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8646
  %12 = bitcast i8* %11 to i32*, !dbg !8646
  %13 = load i32, i32* %12, align 4, !dbg !8646
  %14 = or i32 %13, %10, !dbg !8647
  call void @llvm.dbg.value(metadata i32 %14, metadata !8638, metadata !DIExpression()), !dbg !8639
  store volatile i32 %14, i32* %9, align 4, !dbg !8648
  br label %15, !dbg !8649

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8639
  ret i32 %16, !dbg !8650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8651 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8653, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i8* %1, metadata !8654, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i8* %1, metadata !8655, metadata !DIExpression()), !dbg !8658
  %3 = bitcast i8* %1 to i32*, !dbg !8659
  %4 = load i32, i32* %3, align 4, !dbg !8659
  %5 = add i32 %4, -37, !dbg !8659
  %6 = icmp ult i32 %5, -9, !dbg !8659
  br i1 %6, label %16, label %7, !dbg !8661

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8662
  %9 = inttoptr i32 %8 to i32*, !dbg !8663
  call void @llvm.dbg.value(metadata i32* %9, metadata !8656, metadata !DIExpression()), !dbg !8658
  %10 = load volatile i32, i32* %9, align 4, !dbg !8664
  call void @llvm.dbg.value(metadata i32 %10, metadata !8657, metadata !DIExpression()), !dbg !8658
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8665
  %12 = bitcast i8* %11 to i32*, !dbg !8665
  %13 = load i32, i32* %12, align 4, !dbg !8665
  %14 = xor i32 %13, -1, !dbg !8666
  %15 = and i32 %10, %14, !dbg !8667
  call void @llvm.dbg.value(metadata i32 %15, metadata !8657, metadata !DIExpression()), !dbg !8658
  store volatile i32 %15, i32* %9, align 4, !dbg !8668
  br label %16, !dbg !8669

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8658
  ret i32 %17, !dbg !8670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #9 !dbg !8671 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8673, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata i8* %1, metadata !8674, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata i32* %2, metadata !8675, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata i8* %1, metadata !8676, metadata !DIExpression()), !dbg !8680
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8681
  call void @llvm.dbg.value(metadata i32 %4, metadata !8677, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata i32 %4, metadata !8678, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata i32 %4, metadata !8679, metadata !DIExpression()), !dbg !8680
  %5 = bitcast i8* %1 to i32*, !dbg !8682
  %6 = load i32, i32* %5, align 4, !dbg !8682
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !8683

7:                                                ; preds = %3
  br label %10, !dbg !8684

8:                                                ; preds = %3
  br label %10, !dbg !8686

9:                                                ; preds = %3
  br label %10, !dbg !8687

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !8688
  br label %12, !dbg !8689

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !8680
  ret i32 %13, !dbg !8689
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8690 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8692, metadata !DIExpression()), !dbg !8700
  call void @llvm.dbg.value(metadata i8* %1, metadata !8693, metadata !DIExpression()), !dbg !8700
  call void @llvm.dbg.value(metadata i8* %2, metadata !8694, metadata !DIExpression()), !dbg !8700
  call void @llvm.dbg.value(metadata i8* %1, metadata !8695, metadata !DIExpression()), !dbg !8700
  %4 = bitcast i8* %1 to i32*, !dbg !8701
  %5 = load i32, i32* %4, align 4, !dbg !8701
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8702
  call void @llvm.dbg.value(metadata i32 %6, metadata !8699, metadata !DIExpression()), !dbg !8700
  %7 = icmp slt i32 %6, 0, !dbg !8703
  br i1 %7, label %22, label %8, !dbg !8705

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8695, metadata !DIExpression()), !dbg !8700
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8706
  %10 = bitcast i8* %9 to i32*, !dbg !8706
  %11 = load i32, i32* %10, align 4, !dbg !8706
  %12 = lshr i32 %11, 16, !dbg !8706
  %13 = and i32 %12, 7, !dbg !8706
  %14 = lshr i32 %11, 8, !dbg !8707
  %15 = and i32 %14, 31, !dbg !8707
  %16 = shl i32 %13, %15, !dbg !8708
  call void @llvm.dbg.value(metadata i32 %16, metadata !8698, metadata !DIExpression()), !dbg !8700
  %17 = and i32 %11, 255, !dbg !8709
  %18 = or i32 %17, 1073887232, !dbg !8710
  %19 = inttoptr i32 %18 to i32*, !dbg !8711
  call void @llvm.dbg.value(metadata i32* %19, metadata !8696, metadata !DIExpression()), !dbg !8700
  %20 = load volatile i32, i32* %19, align 4, !dbg !8712
  call void @llvm.dbg.value(metadata i32 %20, metadata !8697, metadata !DIExpression()), !dbg !8700
  %21 = or i32 %16, %20, !dbg !8713
  call void @llvm.dbg.value(metadata i32 %21, metadata !8697, metadata !DIExpression()), !dbg !8700
  store volatile i32 %21, i32* %19, align 4, !dbg !8714
  br label %22, !dbg !8715

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8700
  ret i32 %23, !dbg !8716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #3 !dbg !8717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8721, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i32 0, metadata !8722, metadata !DIExpression()), !dbg !8723
  %2 = add i32 %0, -1, !dbg !8724
  %3 = icmp ult i32 %2, 4, !dbg !8724
  br i1 %3, label %4, label %7, !dbg !8724

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8724
  %6 = load i32, i32* %5, align 4, !dbg !8724
  call void @llvm.dbg.value(metadata i32 %6, metadata !8722, metadata !DIExpression()), !dbg !8723
  br label %7, !dbg !8725

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8723
  ret i32 %8, !dbg !8726
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8727 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8729, metadata !DIExpression()), !dbg !8732
  tail call void @config_enable_default_clocks() #25, !dbg !8733
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8734
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8734
  %4 = lshr i32 %3, 4, !dbg !8734
  %5 = and i32 %4, 15, !dbg !8734
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8734
  %7 = load i8, i8* %6, align 1, !dbg !8734
  %8 = zext i8 %7 to i32, !dbg !8734
  %9 = lshr i32 %2, %8, !dbg !8734
  call void @llvm.dbg.value(metadata i32 %9, metadata !8730, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !8731, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8732
  %10 = icmp ult i32 %9, 32000000, !dbg !8735
  br i1 %10, label %11, label %13, !dbg !8737

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !8738
  br label %13, !dbg !8740

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8741
  tail call fastcc void @set_up_plls() #24, !dbg !8742
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8743
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #24, !dbg !8746
  br label %14, !dbg !8747

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8748
  %16 = icmp eq i32 %15, 12, !dbg !8749
  br i1 %16, label %17, label %14, !dbg !8747, !llvm.loop !8750

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !8752
  br i1 %18, label %19, label %21, !dbg !8754

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !8755
  br label %21, !dbg !8757

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !8758
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8759
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8760
  ret i32 0, !dbg !8761
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8762 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8764
  %2 = and i32 %1, 240, !dbg !8764
  ret i32 %2, !dbg !8765
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8766 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8767
  %2 = icmp eq i32 %1, 1, !dbg !8771
  br i1 %2, label %7, label %3, !dbg !8772

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8773
  br label %4, !dbg !8775

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8776
  %6 = icmp eq i32 %5, 1, !dbg !8777
  br i1 %6, label %7, label %4, !dbg !8775, !llvm.loop !8778

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8780
  br label %8, !dbg !8783

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8784
  %10 = icmp eq i32 %9, 1, !dbg !8785
  br i1 %10, label %11, label %8, !dbg !8783, !llvm.loop !8786

11:                                               ; preds = %8
  ret void, !dbg !8788
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8789 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8790
  %2 = icmp eq i32 %1, 12, !dbg !8792
  br i1 %2, label %3, label %4, !dbg !8793

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8794
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8796
  br label %4, !dbg !8797

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8798
  tail call void @config_pll_sysclock() #25, !dbg !8799
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8800
  br label %5, !dbg !8801

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8802
  %7 = icmp eq i32 %6, 1, !dbg !8803
  br i1 %7, label %8, label %5, !dbg !8801, !llvm.loop !8804

8:                                                ; preds = %5
  ret void, !dbg !8806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8807 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8809, metadata !DIExpression()), !dbg !8810
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8811
  %2 = and i32 %1, -241, !dbg !8811
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8811
  ret void, !dbg !8812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8815, metadata !DIExpression()), !dbg !8816
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8817
  %3 = and i32 %2, -4, !dbg !8817
  %4 = or i32 %3, %0, !dbg !8817
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8817
  ret void, !dbg !8818
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8819 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8820
  %2 = and i32 %1, 12, !dbg !8820
  ret i32 %2, !dbg !8821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8822 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8824, metadata !DIExpression()), !dbg !8825
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8826
  %2 = and i32 %1, -1793, !dbg !8826
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8826
  ret void, !dbg !8827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8828 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8830, metadata !DIExpression()), !dbg !8831
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8832
  %2 = and i32 %1, -14337, !dbg !8832
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8832
  ret void, !dbg !8833
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8834 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8835
  %2 = icmp eq i32 %1, 1, !dbg !8837
  br i1 %2, label %7, label %3, !dbg !8838

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8839
  br label %4, !dbg !8841

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8842
  %6 = icmp eq i32 %5, 1, !dbg !8843
  br i1 %6, label %7, label %4, !dbg !8841, !llvm.loop !8844

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #24, !dbg !8846
  br label %8, !dbg !8847

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8848
  %10 = icmp eq i32 %9, 4, !dbg !8849
  br i1 %10, label %11, label %8, !dbg !8847, !llvm.loop !8850

11:                                               ; preds = %8
  ret void, !dbg !8852
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8853 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8854
  %2 = and i32 %1, -16777217, !dbg !8854
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8854
  ret void, !dbg !8855
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8856 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8857
  %2 = or i32 %1, 16777216, !dbg !8857
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8857
  ret void, !dbg !8858
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8859 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8860
  %2 = lshr i32 %1, 25, !dbg !8861
  %3 = and i32 %2, 1, !dbg !8861
  ret i32 %3, !dbg !8862
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8863 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8864
  %2 = lshr i32 %1, 1, !dbg !8865
  %3 = and i32 %2, 1, !dbg !8865
  ret i32 %3, !dbg !8866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8867 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8868
  %2 = or i32 %1, 1, !dbg !8868
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8868
  ret void, !dbg !8869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8870 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8871
  %2 = or i32 %1, 1, !dbg !8871
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8871
  ret void, !dbg !8872
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8873 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8874
  %2 = lshr i32 %1, 1, !dbg !8875
  %3 = and i32 %2, 1, !dbg !8875
  ret i32 %3, !dbg !8876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #3 !dbg !8877 {
  ret i32 16000000, !dbg !8879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8882 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8883
  ret void, !dbg !8884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8885 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8889, metadata !DIExpression()), !dbg !8892
  call void @llvm.dbg.value(metadata i32 262144, metadata !8890, metadata !DIExpression()), !dbg !8892
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8891, metadata !DIExpression()), !dbg !8892
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8893
  %2 = and i32 %1, -16580609, !dbg !8893
  %3 = or i32 %2, 4456448, !dbg !8893
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8893
  ret void, !dbg !8894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #3 !dbg !8895 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !8896
  %2 = zext i8 %1 to i32, !dbg !8896
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !8896
  ret i32 %3, !dbg !8897
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #14 !dbg !8898 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #24, !dbg !8899
  ret void, !dbg !8900
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #14 !dbg !8901 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8903, metadata !DIExpression()), !dbg !8905
  %2 = bitcast i32* %1 to i8*, !dbg !8906
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8906
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8904, metadata !DIExpression()), !dbg !8907
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8908
  %4 = or i32 %3, 1, !dbg !8908
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8908
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8909
  %6 = and i32 %5, 1, !dbg !8909
  store volatile i32 %6, i32* %1, align 4, !dbg !8910
  %7 = load volatile i32, i32* %1, align 4, !dbg !8911
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8912
  ret void, !dbg !8912
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8913 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8915, metadata !DIExpression()), !dbg !8916
  %2 = tail call fastcc zeroext i1 @device_is_ready.117() #24, !dbg !8917
  br i1 %2, label %3, label %4, !dbg !8919

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8920
  br label %4, !dbg !8921

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8916
  ret i32 %5, !dbg !8922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.117() unnamed_addr #1 !dbg !8923 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8927, metadata !DIExpression()), !dbg !8928
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8929, !srcloc !8931
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.118() #24, !dbg !8932
  ret i1 %1, !dbg !8933
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8934 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8935
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8936
  ret void, !dbg !8937
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8940, metadata !DIExpression()), !dbg !8941
  %2 = icmp eq i32 %0, 10, !dbg !8942
  br i1 %2, label %3, label %4, !dbg !8944

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !8945
  br label %4, !dbg !8947

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8948
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !8949
  ret i32 %0, !dbg !8950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8951 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8954, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata i8 %0, metadata !8955, metadata !DIExpression()), !dbg !8956
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8957, !srcloc !8959
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !8960
  ret void, !dbg !8961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8962 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8964, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata i8 %0, metadata !8965, metadata !DIExpression()), !dbg !8967
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8968
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8966, metadata !DIExpression()), !dbg !8967
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8969
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8969
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #25, !dbg !8970
  ret void, !dbg !8971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.118() unnamed_addr #1 !dbg !8972 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8974, metadata !DIExpression()), !dbg !8975
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !8976
  ret i1 %1, !dbg !8977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #3 !dbg !8978 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9027, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9028, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9029, metadata !DIExpression()), !dbg !9030
  ret void, !dbg !9031
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9032 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9034, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.value(metadata i8 %1, metadata !9035, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.value(metadata i32 %2, metadata !9036, metadata !DIExpression()), !dbg !9039
  %5 = bitcast i32* %4 to i8*, !dbg !9040
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9040
  call void @llvm.dbg.value(metadata i32* %4, metadata !9038, metadata !DIExpression(DW_OP_deref)), !dbg !9039
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9041
  call void @llvm.dbg.value(metadata i32 %6, metadata !9037, metadata !DIExpression()), !dbg !9039
  %7 = icmp eq i32 %6, 0, !dbg !9042
  br i1 %7, label %8, label %31, !dbg !9044

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9037, metadata !DIExpression()), !dbg !9039
  %9 = and i32 %2, 131072, !dbg !9045
  %10 = icmp eq i32 %9, 0, !dbg !9047
  br i1 %10, label %28, label %11, !dbg !9048

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9049
  %13 = icmp eq i32 %12, 0, !dbg !9052
  br i1 %13, label %18, label %14, !dbg !9053

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9054
  %16 = shl nuw i32 1, %15, !dbg !9054
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9056
  br label %25, !dbg !9057

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9058
  %20 = icmp eq i32 %19, 0, !dbg !9060
  %21 = zext i8 %1 to i32, !dbg !9039
  br i1 %20, label %25, label %22, !dbg !9061

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9062
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9064
  br label %25, !dbg !9065

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9066
  %27 = load i32, i32* %4, align 4, !dbg !9067
  call void @llvm.dbg.value(metadata i32 %30, metadata !9038, metadata !DIExpression()), !dbg !9039
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9068
  br label %31, !dbg !9069

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9066
  %30 = load i32, i32* %4, align 4, !dbg !9067
  call void @llvm.dbg.value(metadata i32 %30, metadata !9038, metadata !DIExpression()), !dbg !9039
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9068
  call void @llvm.dbg.value(metadata i32 0, metadata !9037, metadata !DIExpression()), !dbg !9039
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9070
  ret i32 %6, !dbg !9070
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !9071 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9075, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i32* %1, metadata !9076, metadata !DIExpression()), !dbg !9080
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9081
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9081
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9081
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9077, metadata !DIExpression()), !dbg !9080
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9082
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9082
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9082
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9079, metadata !DIExpression()), !dbg !9080
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9083
  store i32 %9, i32* %1, align 4, !dbg !9084
  ret i32 0, !dbg !9085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9086 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9088, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.value(metadata i32 %1, metadata !9089, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.value(metadata i32 %2, metadata !9090, metadata !DIExpression()), !dbg !9094
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9095
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9095
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9095
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9091, metadata !DIExpression()), !dbg !9094
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9096
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9096
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9096
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9092, metadata !DIExpression()), !dbg !9094
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9097
  call void @llvm.dbg.value(metadata i32 %10, metadata !9093, metadata !DIExpression()), !dbg !9094
  %11 = xor i32 %1, -1, !dbg !9098
  %12 = and i32 %10, %11, !dbg !9099
  %13 = and i32 %2, %1, !dbg !9100
  %14 = or i32 %12, %13, !dbg !9101
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9102
  ret i32 0, !dbg !9103
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9104 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9106, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.value(metadata i32 %1, metadata !9107, metadata !DIExpression()), !dbg !9110
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9111
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9111
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9111
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9108, metadata !DIExpression()), !dbg !9110
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9112
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9112
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9112
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9109, metadata !DIExpression()), !dbg !9110
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9113
  store volatile i32 %1, i32* %9, align 4, !dbg !9113
  ret i32 0, !dbg !9114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9115 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9117, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata i32 %1, metadata !9118, metadata !DIExpression()), !dbg !9121
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9122
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9122
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9122
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9119, metadata !DIExpression()), !dbg !9121
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9123
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9123
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9123
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9120, metadata !DIExpression()), !dbg !9121
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9124
  ret i32 0, !dbg !9125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9126 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9128, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 %1, metadata !9129, metadata !DIExpression()), !dbg !9132
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9133
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9133
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9133
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9130, metadata !DIExpression()), !dbg !9132
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9134
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9134
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9134
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9131, metadata !DIExpression()), !dbg !9132
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9135
  %10 = load volatile i32, i32* %9, align 4, !dbg !9135
  %11 = xor i32 %10, %1, !dbg !9135
  store volatile i32 %11, i32* %9, align 4, !dbg !9135
  ret i32 0, !dbg !9136
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9137 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9139, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.value(metadata i8 %1, metadata !9140, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.value(metadata i32 %2, metadata !9141, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.value(metadata i32 %3, metadata !9142, metadata !DIExpression()), !dbg !9149
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9150
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9150
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9150
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9143, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.value(metadata i8* undef, metadata !9144, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.value(metadata i32 0, metadata !9146, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.value(metadata i32 0, metadata !9147, metadata !DIExpression()), !dbg !9149
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9151

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9152
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9156
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9157
  %12 = load i32, i32* %11, align 4, !dbg !9157
  %13 = icmp eq i32 %10, %12, !dbg !9158
  br i1 %13, label %14, label %29, !dbg !9159

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9160
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9162
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9163
  br label %29, !dbg !9164

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9165
  %17 = load i8*, i8** %16, align 4, !dbg !9165
  call void @llvm.dbg.value(metadata i8* %17, metadata !9144, metadata !DIExpression()), !dbg !9149
  %18 = zext i8 %1 to i32, !dbg !9166
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9168
  %20 = icmp eq i32 %19, 0, !dbg !9169
  br i1 %20, label %21, label %29, !dbg !9170

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9171
  %23 = load i32, i32* %22, align 4, !dbg !9171
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9172
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9173

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9146, metadata !DIExpression()), !dbg !9149
  br label %27, !dbg !9174

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9146, metadata !DIExpression()), !dbg !9149
  br label %27, !dbg !9176

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9146, metadata !DIExpression()), !dbg !9149
  br label %27, !dbg !9177

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9149
  call void @llvm.dbg.value(metadata i32 %28, metadata !9146, metadata !DIExpression()), !dbg !9149
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9178
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9179
  br label %29, !dbg !9179

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9149
  call void @llvm.dbg.value(metadata i32 %30, metadata !9147, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.label(metadata !9148), !dbg !9180
  ret i32 %30, !dbg !9181
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9182 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9184, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9185, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.value(metadata i1 %2, metadata !9186, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9188
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9189
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9189
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9189
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9187, metadata !DIExpression()), !dbg !9188
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9190
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9191
  ret i32 %8, !dbg !9192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9193 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9199, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9200, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.value(metadata i1 %2, metadata !9201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9202
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9203
  br i1 %4, label %5, label %6, !dbg !9206

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.124, i32 0, i32 0), i32 noundef 42) #25, !dbg !9207
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33.125, i32 0, i32 0)) #25, !dbg !9207
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.124, i32 0, i32 0), i32 noundef 42) #25, !dbg !9207
  unreachable, !dbg !9207

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9209
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9209
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9209
  br i1 %9, label %10, label %11, !dbg !9212

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34.126, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.124, i32 0, i32 0), i32 noundef 43) #25, !dbg !9213
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.127, i32 0, i32 0)) #25, !dbg !9213
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.124, i32 0, i32 0), i32 noundef 43) #25, !dbg !9213
  unreachable, !dbg !9213

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !9215
  br i1 %12, label %18, label %13, !dbg !9217

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9218
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !9221
  %16 = or i1 %15, %2, !dbg !9222
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9222
  br i1 %2, label %19, label %21, !dbg !9222

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9223

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9224
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !9227
  br label %21, !dbg !9228

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9202
  ret i32 %22, !dbg !9229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9230 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9234, metadata !DIExpression()), !dbg !9235
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9236
  %3 = icmp eq %struct._snode* %2, null, !dbg !9236
  ret i1 %3, !dbg !9236
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !9237 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9241, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9242, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9243, metadata !DIExpression()), !dbg !9245
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9246
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9244, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9243, metadata !DIExpression()), !dbg !9245
  %4 = icmp eq %struct._snode* %3, null, !dbg !9248
  br i1 %4, label %15, label %5, !dbg !9246

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9244, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9243, metadata !DIExpression()), !dbg !9245
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9250
  br i1 %6, label %9, label %11, !dbg !9253

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9244, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9243, metadata !DIExpression()), !dbg !9245
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9250
  br i1 %8, label %9, label %11, !dbg !9253, !llvm.loop !9254

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !9255
  br label %15, !dbg !9255

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9244, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9243, metadata !DIExpression()), !dbg !9245
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !9248
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9244, metadata !DIExpression()), !dbg !9245
  %14 = icmp eq %struct._snode* %13, null, !dbg !9248
  br i1 %14, label %15, label %7, !dbg !9246, !llvm.loop !9254

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9258 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9262, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9263, metadata !DIExpression()), !dbg !9264
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9265
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !9265
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !9265
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9266
  %5 = icmp eq %struct._snode* %4, null, !dbg !9266
  br i1 %5, label %6, label %8, !dbg !9265

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9268
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !9268
  br label %8, !dbg !9268

8:                                                ; preds = %6, %2
  ret void, !dbg !9265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9270 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9274, metadata !DIExpression()), !dbg !9275
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9276
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9276
  ret %struct._snode* %3, !dbg !9277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9278 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9282, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9283, metadata !DIExpression()), !dbg !9284
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9285
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9286
  ret void, !dbg !9287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9288 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9290, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9291, metadata !DIExpression()), !dbg !9292
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9293
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9294
  ret void, !dbg !9295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9296 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9298, metadata !DIExpression()), !dbg !9299
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9300
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9300
  ret %struct._snode* %3, !dbg !9301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9302 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9304, metadata !DIExpression()), !dbg !9306
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9305, metadata !DIExpression()), !dbg !9306
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9307
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9308
  ret void, !dbg !9309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9310 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9314, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9315, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9316, metadata !DIExpression()), !dbg !9317
  %4 = icmp eq %struct._snode* %1, null, !dbg !9318
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !9320
  br i1 %4, label %6, label %11, !dbg !9321

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !9322
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9324
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9324
  br i1 %8, label %9, label %15, !dbg !9322

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9326
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !9326
  br label %15, !dbg !9326

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !9328
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9330
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9330
  br i1 %13, label %14, label %15, !dbg !9328

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !9332
  br label %15, !dbg !9332

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !9321
  ret void, !dbg !9321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !9334 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9338, metadata !DIExpression()), !dbg !9339
  %2 = icmp eq %struct._snode* %0, null, !dbg !9340
  br i1 %2, label %5, label %3, !dbg !9340

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !9340
  br label %5, !dbg !9340

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9340
  ret %struct._snode* %6, !dbg !9340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9341 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9343, metadata !DIExpression()), !dbg !9344
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !9345
  ret %struct._snode* %2, !dbg !9345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9346 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9348, metadata !DIExpression()), !dbg !9349
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9350
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9350
  ret %struct._snode* %3, !dbg !9351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9354, metadata !DIExpression()), !dbg !9357
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !9358, !range !9359
  call void @llvm.dbg.value(metadata i32 %2, metadata !9355, metadata !DIExpression()), !dbg !9357
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !9360
  call void @llvm.dbg.value(metadata i32 %3, metadata !9356, metadata !DIExpression()), !dbg !9357
  ret i32 %3, !dbg !9361
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9364, metadata !DIExpression()), !dbg !9367
  call void @llvm.dbg.value(metadata i8* %1, metadata !9365, metadata !DIExpression()), !dbg !9367
  call void @llvm.dbg.value(metadata i8* %1, metadata !9366, metadata !DIExpression()), !dbg !9367
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9368
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9368
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9369
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9369
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9369
  %8 = shl nuw i32 1, %0, !dbg !9370
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !9371
  ret void, !dbg !9372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9373 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9377, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.value(metadata i32 %1, metadata !9378, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9379, metadata !DIExpression()), !dbg !9383
  %4 = bitcast i64* %3 to i8*, !dbg !9384
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9384
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !9381, metadata !DIExpression()), !dbg !9383
  store i64 4294967328, i64* %3, align 8, !dbg !9385
  call void @llvm.dbg.value(metadata i64* %3, metadata !9381, metadata !DIExpression(DW_OP_deref)), !dbg !9383
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !9386
  call void @llvm.dbg.value(metadata i32 %5, metadata !9382, metadata !DIExpression()), !dbg !9383
  %6 = icmp eq i32 %5, 0, !dbg !9387
  br i1 %6, label %7, label %8, !dbg !9389

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !9390
  br label %8, !dbg !9391

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9392
  ret void, !dbg !9392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9393 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9395, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i8* %0, metadata !9396, metadata !DIExpression()), !dbg !9398
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9399
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9397, metadata !DIExpression()), !dbg !9398
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9400
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9400
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !9401
  ret i32 %5, !dbg !9402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9405, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i32 %1, metadata !9406, metadata !DIExpression()), !dbg !9408
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !9409
  call void @llvm.dbg.value(metadata i32 %3, metadata !9407, metadata !DIExpression()), !dbg !9408
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !9410
  ret void, !dbg !9411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #3 !dbg !9412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9416, metadata !DIExpression()), !dbg !9417
  %2 = sdiv i32 %0, 4, !dbg !9418
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9419
  %6 = add nsw i32 %5, 16, !dbg !9420
  %7 = shl i32 15, %6, !dbg !9421
  %8 = or i32 %7, %2, !dbg !9422
  ret i32 %8, !dbg !9423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9429, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i32 %1, metadata !9430, metadata !DIExpression()), !dbg !9431
  %3 = and i32 %1, 3, !dbg !9432
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !9432
  %5 = load volatile i32, i32* %4, align 4, !dbg !9432
  %6 = lshr i32 %1, 16, !dbg !9432
  %7 = xor i32 %6, -1, !dbg !9432
  %8 = and i32 %5, %7, !dbg !9432
  call void @llvm.dbg.value(metadata i32 %6, metadata !9433, metadata !DIExpression()) #23, !dbg !9437
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9439, !srcloc !9440
  call void @llvm.dbg.value(metadata i32 %9, metadata !9436, metadata !DIExpression()) #23, !dbg !9437
  call void @llvm.dbg.value(metadata i32 %9, metadata !9441, metadata !DIExpression()) #23, !dbg !9446
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9448, !range !7544
  %11 = shl i32 %0, %10, !dbg !9432
  %12 = or i32 %11, %8, !dbg !9432
  store volatile i32 %12, i32* %4, align 4, !dbg !9432
  ret void, !dbg !9449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9450 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9454, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9455, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata i32 %2, metadata !9456, metadata !DIExpression()), !dbg !9459
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9460
  %5 = icmp eq %struct._snode* %4, null, !dbg !9460
  br i1 %5, label %24, label %6, !dbg !9460

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !9462
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9458, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9457, metadata !DIExpression()), !dbg !9459
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9463
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9463
  %12 = load i32, i32* %11, align 4, !dbg !9463
  %13 = and i32 %12, %2, !dbg !9467
  %14 = icmp eq i32 %13, 0, !dbg !9467
  br i1 %14, label %22, label %15, !dbg !9468

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9469
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9469
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9469
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9469
  br i1 %19, label %20, label %21, !dbg !9473

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.124, i32 0, i32 0), i32 noundef 77) #25, !dbg !9474
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.127, i32 0, i32 0)) #25, !dbg !9474
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.124, i32 0, i32 0), i32 noundef 77) #25, !dbg !9474
  unreachable, !dbg !9474

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !9476
  br label %22, !dbg !9477

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9457, metadata !DIExpression()), !dbg !9459
  %23 = icmp eq %struct._snode* %8, null, !dbg !9478
  br i1 %23, label %24, label %6, !dbg !9478

24:                                               ; preds = %22, %3
  ret void, !dbg !9479
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9480 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9482, metadata !DIExpression()), !dbg !9483
  %2 = and i32 %0, 3, !dbg !9484
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !9484
  %4 = load volatile i32, i32* %3, align 4, !dbg !9484
  %5 = lshr i32 %0, 16, !dbg !9484
  %6 = and i32 %4, %5, !dbg !9484
  call void @llvm.dbg.value(metadata i32 %5, metadata !9433, metadata !DIExpression()) #23, !dbg !9485
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9487, !srcloc !9440
  call void @llvm.dbg.value(metadata i32 %7, metadata !9436, metadata !DIExpression()) #23, !dbg !9485
  call void @llvm.dbg.value(metadata i32 %7, metadata !9441, metadata !DIExpression()) #23, !dbg !9488
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9490, !range !7544
  %9 = lshr i32 %6, %8, !dbg !9491
  ret i32 %9, !dbg !9492
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9493 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9498, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32 %1, metadata !9499, metadata !DIExpression()), !dbg !9500
  %3 = shl i32 %1, 16, !dbg !9501
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9501
  store volatile i32 %3, i32* %4, align 4, !dbg !9501
  ret void, !dbg !9502
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9503 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9507, metadata !DIExpression()), !dbg !9508
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9509
  %3 = load volatile i32, i32* %2, align 4, !dbg !9509
  ret i32 %3, !dbg !9510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9511 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9513, metadata !DIExpression()), !dbg !9515
  call void @llvm.dbg.value(metadata i32 %1, metadata !9514, metadata !DIExpression()), !dbg !9515
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9516
  store volatile i32 %1, i32* %3, align 4, !dbg !9516
  ret void, !dbg !9517
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9518 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9520, metadata !DIExpression()), !dbg !9521
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9522
  %3 = load volatile i32, i32* %2, align 4, !dbg !9522
  ret i32 %3, !dbg !9523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9528, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i32* %1, metadata !9529, metadata !DIExpression()), !dbg !9530
  %3 = and i32 %0, 131072, !dbg !9531
  %4 = icmp eq i32 %3, 0, !dbg !9533
  br i1 %4, label %22, label %5, !dbg !9534

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9535
  %6 = and i32 %0, 2, !dbg !9537
  %7 = icmp eq i32 %6, 0, !dbg !9539
  br i1 %7, label %11, label %8, !dbg !9540

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9541
  %10 = icmp eq i32 %9, 0, !dbg !9541
  br i1 %10, label %33, label %11, !dbg !9544

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9545
  store i32 %12, i32* %1, align 4, !dbg !9545
  %13 = and i32 %0, 16, !dbg !9546
  %14 = icmp eq i32 %13, 0, !dbg !9548
  br i1 %14, label %17, label %15, !dbg !9549

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9550
  br label %31, !dbg !9552

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9553
  %19 = icmp eq i32 %18, 0, !dbg !9555
  br i1 %19, label %33, label %20, !dbg !9556

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9557
  br label %31, !dbg !9559

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9560
  %24 = icmp eq i32 %23, 0, !dbg !9562
  br i1 %24, label %31, label %25, !dbg !9563

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9564
  %27 = icmp eq i32 %26, 0, !dbg !9567
  br i1 %27, label %28, label %31, !dbg !9568

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9569
  br label %33, !dbg !9570

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9530
  ret i32 %34, !dbg !9570
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9571 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9575, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i32 %1, metadata !9576, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i32 %2, metadata !9577, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i32 %3, metadata !9578, metadata !DIExpression()), !dbg !9586
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9587
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9587
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9587
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9579, metadata !DIExpression()), !dbg !9586
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9588
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9588
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9588
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9580, metadata !DIExpression()), !dbg !9586
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !9589
  call void @llvm.dbg.value(metadata i32 %11, metadata !9581, metadata !DIExpression()), !dbg !9586
  %12 = and i32 %2, 48, !dbg !9590
  call void @llvm.dbg.value(metadata i32 %12, metadata !9582, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i32 %2, metadata !9583, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9586
  call void @llvm.dbg.value(metadata i32 %2, metadata !9584, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9586
  call void @llvm.dbg.value(metadata i32 %2, metadata !9585, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9586
  %13 = lshr i32 %2, 6, !dbg !9591
  %14 = and i32 %13, 1, !dbg !9591
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !9592
  %15 = lshr i32 %2, 7, !dbg !9593
  %16 = and i32 %15, 3, !dbg !9593
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !9594
  %17 = lshr i32 %2, 9, !dbg !9595
  %18 = and i32 %17, 3, !dbg !9595
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !9596
  %19 = icmp eq i32 %12, 32, !dbg !9597
  br i1 %19, label %20, label %24, !dbg !9599

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9600
  br i1 %21, label %22, label %23, !dbg !9603

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9604
  br label %24, !dbg !9606

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9607
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9609
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !9610
  ret void, !dbg !9611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #3 !dbg !9612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9614, metadata !DIExpression()), !dbg !9616
  %2 = shl nuw i32 1, %0, !dbg !9617
  call void @llvm.dbg.value(metadata i32 %2, metadata !9615, metadata !DIExpression()), !dbg !9616
  ret i32 %2, !dbg !9618
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9619 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9623, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i32 %1, metadata !9624, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i32 %2, metadata !9625, metadata !DIExpression()), !dbg !9626
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9627
  %5 = load volatile i32, i32* %4, align 4, !dbg !9627
  %6 = xor i32 %1, -1, !dbg !9627
  %7 = and i32 %5, %6, !dbg !9627
  %8 = mul i32 %2, %1, !dbg !9627
  %9 = or i32 %7, %8, !dbg !9627
  store volatile i32 %9, i32* %4, align 4, !dbg !9627
  ret void, !dbg !9628
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9629 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9631, metadata !DIExpression()), !dbg !9634
  call void @llvm.dbg.value(metadata i32 %1, metadata !9632, metadata !DIExpression()), !dbg !9634
  call void @llvm.dbg.value(metadata i32 %2, metadata !9633, metadata !DIExpression()), !dbg !9634
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9635
  %5 = load volatile i32, i32* %4, align 4, !dbg !9635
  call void @llvm.dbg.value(metadata i32 %1, metadata !9433, metadata !DIExpression()) #23, !dbg !9636
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9638, !srcloc !9440
  call void @llvm.dbg.value(metadata i32 %6, metadata !9436, metadata !DIExpression()) #23, !dbg !9636
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9639
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9641, !range !7544
  %8 = shl nuw nsw i32 %7, 1, !dbg !9635
  %9 = shl i32 3, %8, !dbg !9635
  %10 = xor i32 %9, -1, !dbg !9635
  %11 = and i32 %5, %10, !dbg !9635
  call void @llvm.dbg.value(metadata i32 %1, metadata !9433, metadata !DIExpression()) #23, !dbg !9642
  call void @llvm.dbg.value(metadata i32 %6, metadata !9436, metadata !DIExpression()) #23, !dbg !9642
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9644
  %12 = shl i32 %2, %8, !dbg !9635
  %13 = or i32 %11, %12, !dbg !9635
  store volatile i32 %13, i32* %4, align 4, !dbg !9635
  ret void, !dbg !9646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9647 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9649, metadata !DIExpression()), !dbg !9652
  call void @llvm.dbg.value(metadata i32 %1, metadata !9650, metadata !DIExpression()), !dbg !9652
  call void @llvm.dbg.value(metadata i32 %2, metadata !9651, metadata !DIExpression()), !dbg !9652
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9653
  %5 = load volatile i32, i32* %4, align 4, !dbg !9653
  call void @llvm.dbg.value(metadata i32 %1, metadata !9433, metadata !DIExpression()) #23, !dbg !9654
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9656, !srcloc !9440
  call void @llvm.dbg.value(metadata i32 %6, metadata !9436, metadata !DIExpression()) #23, !dbg !9654
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9657
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9659, !range !7544
  %8 = shl nuw nsw i32 %7, 1, !dbg !9653
  %9 = shl i32 3, %8, !dbg !9653
  %10 = xor i32 %9, -1, !dbg !9653
  %11 = and i32 %5, %10, !dbg !9653
  call void @llvm.dbg.value(metadata i32 %1, metadata !9433, metadata !DIExpression()) #23, !dbg !9660
  call void @llvm.dbg.value(metadata i32 %6, metadata !9436, metadata !DIExpression()) #23, !dbg !9660
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9662
  %12 = shl i32 %2, %8, !dbg !9653
  %13 = or i32 %11, %12, !dbg !9653
  store volatile i32 %13, i32* %4, align 4, !dbg !9653
  ret void, !dbg !9664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9665 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9667, metadata !DIExpression()), !dbg !9670
  call void @llvm.dbg.value(metadata i32 %1, metadata !9668, metadata !DIExpression()), !dbg !9670
  call void @llvm.dbg.value(metadata i32 %2, metadata !9669, metadata !DIExpression()), !dbg !9670
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9671
  %5 = load volatile i32, i32* %4, align 4, !dbg !9671
  call void @llvm.dbg.value(metadata i32 %1, metadata !9433, metadata !DIExpression()) #23, !dbg !9672
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9674, !srcloc !9440
  call void @llvm.dbg.value(metadata i32 %6, metadata !9436, metadata !DIExpression()) #23, !dbg !9672
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9675
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9677, !range !7544
  %8 = shl nuw nsw i32 %7, 2, !dbg !9671
  %9 = shl i32 15, %8, !dbg !9671
  %10 = xor i32 %9, -1, !dbg !9671
  %11 = and i32 %5, %10, !dbg !9671
  call void @llvm.dbg.value(metadata i32 %1, metadata !9433, metadata !DIExpression()) #23, !dbg !9678
  call void @llvm.dbg.value(metadata i32 %6, metadata !9436, metadata !DIExpression()) #23, !dbg !9678
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9680
  %12 = shl i32 %2, %8, !dbg !9671
  %13 = or i32 %11, %12, !dbg !9671
  store volatile i32 %13, i32* %4, align 4, !dbg !9671
  ret void, !dbg !9682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9683 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9685, metadata !DIExpression()), !dbg !9688
  call void @llvm.dbg.value(metadata i32 %1, metadata !9686, metadata !DIExpression()), !dbg !9688
  call void @llvm.dbg.value(metadata i32 %2, metadata !9687, metadata !DIExpression()), !dbg !9688
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9689
  %5 = load volatile i32, i32* %4, align 4, !dbg !9689
  %6 = lshr i32 %1, 8, !dbg !9689
  call void @llvm.dbg.value(metadata i32 %6, metadata !9433, metadata !DIExpression()) #23, !dbg !9690
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9692, !srcloc !9440
  call void @llvm.dbg.value(metadata i32 %7, metadata !9436, metadata !DIExpression()) #23, !dbg !9690
  call void @llvm.dbg.value(metadata i32 %7, metadata !9441, metadata !DIExpression()) #23, !dbg !9693
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9695, !range !7544
  %9 = shl nuw nsw i32 %8, 2, !dbg !9689
  %10 = shl i32 15, %9, !dbg !9689
  %11 = xor i32 %10, -1, !dbg !9689
  %12 = and i32 %5, %11, !dbg !9689
  call void @llvm.dbg.value(metadata i32 %6, metadata !9433, metadata !DIExpression()) #23, !dbg !9696
  call void @llvm.dbg.value(metadata i32 %7, metadata !9436, metadata !DIExpression()) #23, !dbg !9696
  call void @llvm.dbg.value(metadata i32 %7, metadata !9441, metadata !DIExpression()) #23, !dbg !9698
  %13 = shl i32 %2, %9, !dbg !9689
  %14 = or i32 %12, %13, !dbg !9689
  store volatile i32 %14, i32* %4, align 4, !dbg !9689
  ret void, !dbg !9700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9701 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9703, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i32 %1, metadata !9704, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i32 %2, metadata !9705, metadata !DIExpression()), !dbg !9706
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9707
  %5 = load volatile i32, i32* %4, align 4, !dbg !9707
  call void @llvm.dbg.value(metadata i32 %1, metadata !9433, metadata !DIExpression()) #23, !dbg !9708
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9710, !srcloc !9440
  call void @llvm.dbg.value(metadata i32 %6, metadata !9436, metadata !DIExpression()) #23, !dbg !9708
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9711
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9713, !range !7544
  %8 = shl nuw nsw i32 %7, 1, !dbg !9707
  %9 = shl i32 3, %8, !dbg !9707
  %10 = xor i32 %9, -1, !dbg !9707
  %11 = and i32 %5, %10, !dbg !9707
  call void @llvm.dbg.value(metadata i32 %1, metadata !9433, metadata !DIExpression()) #23, !dbg !9714
  call void @llvm.dbg.value(metadata i32 %6, metadata !9436, metadata !DIExpression()) #23, !dbg !9714
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9716
  %12 = shl i32 %2, %8, !dbg !9707
  %13 = or i32 %11, %12, !dbg !9707
  store volatile i32 %13, i32* %4, align 4, !dbg !9707
  ret void, !dbg !9718
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9719 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9721, metadata !DIExpression()), !dbg !9724
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9725
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9725
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9725
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9722, metadata !DIExpression()), !dbg !9724
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9726
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9727
  %6 = tail call fastcc zeroext i1 @device_is_ready.137() #24, !dbg !9728
  br i1 %6, label %7, label %11, !dbg !9730

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9731
  call void @llvm.dbg.value(metadata i32 %8, metadata !9723, metadata !DIExpression()), !dbg !9724
  %9 = icmp slt i32 %8, 0, !dbg !9732
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9734
  br label %11, !dbg !9734

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9724
  ret i32 %12, !dbg !9735
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.137() unnamed_addr #1 !dbg !9736 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9740, metadata !DIExpression()), !dbg !9741
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9742, !srcloc !9744
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.138() #24, !dbg !9745
  ret i1 %1, !dbg !9746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9747 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9751, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.value(metadata i8 1, metadata !9752, metadata !DIExpression()), !dbg !9756
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9757
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9757
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9757
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9753, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.value(metadata i32 0, metadata !9754, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9755, metadata !DIExpression()), !dbg !9756
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9758
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9761
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9762
  call void @llvm.dbg.value(metadata i32 %7, metadata !9754, metadata !DIExpression()), !dbg !9756
  ret i32 %7, !dbg !9763
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.138() unnamed_addr #1 !dbg !9764 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9766, metadata !DIExpression()), !dbg !9767
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !9768
  ret i1 %1, !dbg !9769
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9770 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9774, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i32 %1, metadata !9775, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i32 %2, metadata !9776, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i32 %3, metadata !9777, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i32 0, metadata !9778, metadata !DIExpression()), !dbg !9782
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9783
  %5 = icmp eq i32 %3, 17, !dbg !9784
  br i1 %5, label %6, label %14, !dbg !9785

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9786
  call void @llvm.dbg.value(metadata i32 %7, metadata !9779, metadata !DIExpression()), !dbg !9787
  %8 = icmp eq i32 %7, 0, !dbg !9788
  %9 = shl nuw i32 1, %1, !dbg !9790
  br i1 %8, label %12, label %10, !dbg !9791

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9792
  br label %14, !dbg !9794

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9795
  br label %14, !dbg !9798

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9799
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #14 !dbg !9800 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9802, metadata !DIExpression()), !dbg !9806
  call void @llvm.dbg.value(metadata i8* %1, metadata !9803, metadata !DIExpression()), !dbg !9806
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9807
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9807
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9807
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9804, metadata !DIExpression()), !dbg !9806
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9808
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9808
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9810
  %9 = icmp eq i32 %8, 0, !dbg !9810
  br i1 %9, label %12, label %10, !dbg !9811

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9812
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9814
  br label %12, !dbg !9815

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9816
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9818
  %15 = icmp eq i32 %14, 0, !dbg !9818
  br i1 %15, label %19, label %16, !dbg !9819

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9820
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9821
  store i8 %18, i8* %1, align 1, !dbg !9822
  br label %19, !dbg !9823

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9806
  ret i32 %20, !dbg !9824
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9825 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9827, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i8 %1, metadata !9828, metadata !DIExpression()), !dbg !9831
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9832
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9832
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9832
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9829, metadata !DIExpression()), !dbg !9831
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9833

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9834
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9837
  %10 = icmp eq i32 %9, 0, !dbg !9837
  br i1 %10, label %18, label %11, !dbg !9838

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9839, !srcloc !9846
  call void @llvm.dbg.value(metadata i32 undef, metadata !9842, metadata !DIExpression()) #23, !dbg !9847
  call void @llvm.dbg.value(metadata i32 undef, metadata !9843, metadata !DIExpression()) #23, !dbg !9847
  call void @llvm.dbg.value(metadata i32 undef, metadata !9830, metadata !DIExpression()), !dbg !9831
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9848
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9850
  %15 = icmp eq i32 %14, 0, !dbg !9850
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9839
  br i1 %15, label %17, label %19, !dbg !9851

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9842, metadata !DIExpression()) #23, !dbg !9847
  call void @llvm.dbg.value(metadata i32 %16, metadata !9830, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i32 undef, metadata !9852, metadata !DIExpression()) #23, !dbg !9855
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9857, !srcloc !9858
  br label %18, !dbg !9859

18:                                               ; preds = %17, %7
  br label %7, !dbg !9834, !llvm.loop !9860

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9839
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9862
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9863
  call void @llvm.dbg.value(metadata i32 %20, metadata !9852, metadata !DIExpression()) #23, !dbg !9864
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9866, !srcloc !9858
  ret void, !dbg !9867
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #14 !dbg !9868 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9870, metadata !DIExpression()), !dbg !9873
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9874
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9874
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9874
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9871, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.value(metadata i32 0, metadata !9872, metadata !DIExpression()), !dbg !9873
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9875
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9875
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9877
  %8 = icmp ne i32 %7, 0, !dbg !9877
  %9 = zext i1 %8 to i32, !dbg !9878
  call void @llvm.dbg.value(metadata i32 %9, metadata !9872, metadata !DIExpression()), !dbg !9873
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9879
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9881
  %12 = icmp eq i32 %11, 0, !dbg !9881
  %13 = or i32 %9, 2, !dbg !9882
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9882
  call void @llvm.dbg.value(metadata i32 %14, metadata !9872, metadata !DIExpression()), !dbg !9873
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9883
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9885
  %17 = icmp eq i32 %16, 0, !dbg !9885
  %18 = or i32 %14, 4, !dbg !9886
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9886
  call void @llvm.dbg.value(metadata i32 %19, metadata !9872, metadata !DIExpression()), !dbg !9873
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9887
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9889
  %22 = icmp eq i32 %21, 0, !dbg !9889
  %23 = or i32 %19, 8, !dbg !9890
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9890
  call void @llvm.dbg.value(metadata i32 %24, metadata !9872, metadata !DIExpression()), !dbg !9873
  %25 = and i32 %24, 8, !dbg !9891
  %26 = icmp eq i32 %25, 0, !dbg !9891
  br i1 %26, label %29, label %27, !dbg !9893

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9894
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9896
  br label %29, !dbg !9897

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9898
  %31 = icmp eq i32 %30, 0, !dbg !9898
  br i1 %31, label %34, label %32, !dbg !9900

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9901
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9903
  br label %34, !dbg !9904

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9905
  %36 = icmp eq i32 %35, 0, !dbg !9905
  br i1 %36, label %39, label %37, !dbg !9907

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9908
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9910
  br label %39, !dbg !9911

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9912
  %41 = icmp eq i32 %40, 0, !dbg !9912
  br i1 %41, label %44, label %42, !dbg !9914

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9915
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9917
  br label %44, !dbg !9918

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9919
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9920
  ret i32 %24, !dbg !9921
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9922 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9924, metadata !DIExpression()), !dbg !9933
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9925, metadata !DIExpression()), !dbg !9933
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9934
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9934
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9934
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9926, metadata !DIExpression()), !dbg !9933
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9935
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9935
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9935
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9927, metadata !DIExpression()), !dbg !9933
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9936
  %10 = load i8, i8* %9, align 4, !dbg !9936
  %11 = zext i8 %10 to i32, !dbg !9937
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !9938
  call void @llvm.dbg.value(metadata i32 %12, metadata !9929, metadata !DIExpression()), !dbg !9933
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9939
  %14 = load i8, i8* %13, align 1, !dbg !9939
  %15 = zext i8 %14 to i32, !dbg !9940
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !9941
  call void @llvm.dbg.value(metadata i32 %16, metadata !9930, metadata !DIExpression()), !dbg !9933
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9942
  %18 = load i8, i8* %17, align 2, !dbg !9942
  %19 = zext i8 %18 to i32, !dbg !9943
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !9944
  call void @llvm.dbg.value(metadata i32 %20, metadata !9931, metadata !DIExpression()), !dbg !9933
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9945
  %22 = load i8, i8* %21, align 1, !dbg !9945
  %23 = zext i8 %22 to i32, !dbg !9946
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !9947
  call void @llvm.dbg.value(metadata i32 %24, metadata !9932, metadata !DIExpression()), !dbg !9933
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9948

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9950
  br i1 %26, label %69, label %27, !dbg !9952

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9953

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9954
  br i1 %29, label %65, label %30, !dbg !9954

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9956
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9933
  br i1 %31, label %38, label %34, !dbg !9958

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9959
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !9959

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9962
  br i1 %37, label %38, label %69, !dbg !9963

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9964
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !9965
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !9966
  %41 = icmp eq i32 %12, %40, !dbg !9968
  br i1 %41, label %43, label %42, !dbg !9969

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !9970
  br label %43, !dbg !9972

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !9973
  %45 = icmp eq i32 %16, %44, !dbg !9975
  br i1 %45, label %47, label %46, !dbg !9976

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !9977
  br label %47, !dbg !9979

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !9980
  %49 = icmp eq i32 %20, %48, !dbg !9982
  br i1 %49, label %51, label %50, !dbg !9983

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !9984
  br label %51, !dbg !9986

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !9987
  %53 = icmp eq i32 %24, %52, !dbg !9989
  br i1 %53, label %55, label %54, !dbg !9990

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !9991
  br label %55, !dbg !9993

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9994
  %57 = load i32, i32* %56, align 4, !dbg !9994
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9996
  %59 = load i32, i32* %58, align 4, !dbg !9996
  %60 = icmp eq i32 %57, %59, !dbg !9997
  br i1 %60, label %63, label %61, !dbg !9998

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !9999
  %62 = load i32, i32* %56, align 4, !dbg !10001
  store i32 %62, i32* %58, align 4, !dbg !10002
  br label %63, !dbg !10003

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10004
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10005
  br label %69, !dbg !10006

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9954
  %67 = and i8 %66, 1, !dbg !9954
  %68 = icmp eq i8 %67, 0, !dbg !9954
  br i1 %68, label %30, label %69, !dbg !9954

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9933
  ret i32 %70, !dbg !10007
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10008 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10010, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10011, metadata !DIExpression()), !dbg !10013
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10014
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10014
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10014
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10012, metadata !DIExpression()), !dbg !10013
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10015
  %7 = load i32, i32* %6, align 4, !dbg !10015
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10016
  store i32 %7, i32* %8, align 4, !dbg !10017
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10018, !range !10019
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10020
  %11 = trunc i32 %10 to i8, !dbg !10020
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10021
  store i8 %11, i8* %12, align 4, !dbg !10022
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10023, !range !10024
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10025
  %15 = trunc i32 %14 to i8, !dbg !10025
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10026
  store i8 %15, i8* %16, align 1, !dbg !10027
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10028
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10029, !range !10019
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10030
  %20 = trunc i32 %19 to i8, !dbg !10030
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10031
  store i8 %20, i8* %21, align 2, !dbg !10032
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10033, !range !10034
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10035
  %24 = trunc i32 %23 to i8, !dbg !10035
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10036
  store i8 %24, i8* %25, align 1, !dbg !10037
  ret i32 0, !dbg !10038
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10039 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10043, metadata !DIExpression()), !dbg !10045
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10046
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10046
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10046
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10044, metadata !DIExpression()), !dbg !10045
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10047
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10047
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10048
  ret i32 %7, !dbg !10049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #3 !dbg !10050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10054, metadata !DIExpression()), !dbg !10055
  %2 = icmp eq i32 %0, 1024, !dbg !10056
  %3 = select i1 %2, i32 2, i32 0, !dbg !10056
  %4 = icmp eq i32 %0, 1536, !dbg !10056
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10056
  ret i32 %5, !dbg !10057
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10058 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10060, metadata !DIExpression()), !dbg !10062
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10063
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10063
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10063
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10061, metadata !DIExpression()), !dbg !10062
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10064
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10064
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10065
  ret i32 %7, !dbg !10066
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10071, metadata !DIExpression()), !dbg !10072
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10073
  %3 = icmp ult i32 %2, 4, !dbg !10073
  br i1 %3, label %4, label %7, !dbg !10073

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10073
  %6 = load i32, i32* %5, align 4, !dbg !10073
  br label %7, !dbg !10073

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10074
  ret i32 %8, !dbg !10076
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10077 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10079, metadata !DIExpression()), !dbg !10081
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10082
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10082
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10082
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10080, metadata !DIExpression()), !dbg !10081
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10083
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10083
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10084
  ret i32 %7, !dbg !10085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10090, metadata !DIExpression()), !dbg !10092
  call void @llvm.dbg.value(metadata i32 %1, metadata !10091, metadata !DIExpression()), !dbg !10092
  %3 = icmp eq i32 %0, 4096, !dbg !10093
  %4 = icmp eq i32 %1, 0, !dbg !10093
  %5 = select i1 %4, i32 4, i32 3, !dbg !10093
  %6 = select i1 %4, i32 3, i32 2, !dbg !10093
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10093
  ret i32 %7, !dbg !10094
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10097, metadata !DIExpression()), !dbg !10099
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10100
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10100
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10100
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10098, metadata !DIExpression()), !dbg !10099
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10101
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10101
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10102
  ret i32 %7, !dbg !10103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !10104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10108, metadata !DIExpression()), !dbg !10109
  %2 = icmp eq i32 %0, 768, !dbg !10110
  %3 = zext i1 %2 to i32, !dbg !10109
  ret i32 %3, !dbg !10112
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10113 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10118, metadata !DIExpression()), !dbg !10119
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10120
  %3 = load volatile i32, i32* %2, align 4, !dbg !10120
  %4 = and i32 %3, 768, !dbg !10120
  ret i32 %4, !dbg !10121
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10122 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10124, metadata !DIExpression()), !dbg !10125
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10126
  %3 = load volatile i32, i32* %2, align 4, !dbg !10126
  %4 = and i32 %3, 4096, !dbg !10126
  ret i32 %4, !dbg !10127
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10128 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10130, metadata !DIExpression()), !dbg !10131
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10132
  %3 = load volatile i32, i32* %2, align 4, !dbg !10132
  %4 = and i32 %3, 12288, !dbg !10132
  ret i32 %4, !dbg !10133
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10134 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10136, metadata !DIExpression()), !dbg !10137
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10138
  %3 = load volatile i32, i32* %2, align 4, !dbg !10138
  %4 = and i32 %3, 1536, !dbg !10138
  ret i32 %4, !dbg !10139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #3 !dbg !10140 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10144, metadata !DIExpression()), !dbg !10145
  %2 = icmp eq i32 %0, 2, !dbg !10146
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10146
  %4 = icmp eq i32 %0, 1, !dbg !10146
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10146
  ret i32 %5, !dbg !10147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #3 !dbg !10148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10152, metadata !DIExpression()), !dbg !10153
  %2 = icmp ult i32 %0, 3, !dbg !10154
  br i1 %2, label %3, label %6, !dbg !10154

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10154
  %5 = load i32, i32* %4, align 4, !dbg !10154
  br label %6, !dbg !10154

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10155
  ret i32 %7, !dbg !10157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10162, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 %1, metadata !10163, metadata !DIExpression()), !dbg !10164
  %3 = icmp eq i32 %0, 4, !dbg !10165
  %4 = icmp eq i32 %1, 0, !dbg !10165
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10165
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10165
  ret i32 %6, !dbg !10166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !10167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10171, metadata !DIExpression()), !dbg !10172
  %2 = icmp eq i32 %0, 1, !dbg !10173
  %3 = select i1 %2, i32 768, i32 0, !dbg !10172
  ret i32 %3, !dbg !10175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10176 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10180, metadata !DIExpression()), !dbg !10181
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10182
  %3 = load volatile i32, i32* %2, align 4, !dbg !10182
  %4 = and i32 %3, -8193, !dbg !10182
  store volatile i32 %4, i32* %2, align 4, !dbg !10182
  ret void, !dbg !10183
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10184 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10188, metadata !DIExpression()), !dbg !10191
  call void @llvm.dbg.value(metadata i32 %1, metadata !10189, metadata !DIExpression()), !dbg !10191
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10192
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10192
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10192
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10190, metadata !DIExpression()), !dbg !10191
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10193
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10193
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10194
  ret void, !dbg !10195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10196 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10198, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i32 %1, metadata !10199, metadata !DIExpression()), !dbg !10201
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10202
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10202
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10202
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10200, metadata !DIExpression()), !dbg !10201
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10203
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10203
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10204
  ret void, !dbg !10205
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10206 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10208, metadata !DIExpression()), !dbg !10211
  call void @llvm.dbg.value(metadata i32 %1, metadata !10209, metadata !DIExpression()), !dbg !10211
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10212
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10212
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10212
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10210, metadata !DIExpression()), !dbg !10211
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10213
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10213
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10214
  ret void, !dbg !10215
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10216 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10218, metadata !DIExpression()), !dbg !10221
  call void @llvm.dbg.value(metadata i32 %1, metadata !10219, metadata !DIExpression()), !dbg !10221
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10222
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10222
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10222
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10220, metadata !DIExpression()), !dbg !10221
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10223
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10223
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10224
  ret void, !dbg !10225
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10226 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10228, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.value(metadata i32 %1, metadata !10229, metadata !DIExpression()), !dbg !10233
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10234
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10234
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10234
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10230, metadata !DIExpression()), !dbg !10233
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10235
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10235
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10235
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10231, metadata !DIExpression()), !dbg !10233
  %10 = bitcast i32* %3 to i8*, !dbg !10236
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10236
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10237
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10237
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10241
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10241
  %15 = load i8*, i8** %14, align 4, !dbg !10241
  call void @llvm.dbg.value(metadata i32* %3, metadata !10232, metadata !DIExpression(DW_OP_deref)), !dbg !10233
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !10242
  %17 = icmp slt i32 %16, 0, !dbg !10243
  br i1 %17, label %18, label %21, !dbg !10244

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.141(i32 noundef 1) #24, !dbg !10245
  %20 = zext i8 %19 to i32, !dbg !10245
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.142, i32 0, i32 0), i32 noundef %20) #25, !dbg !10245
  br label %31, !dbg !10251

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10252
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10252
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !10253
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10254
  %25 = load i32, i32* %3, align 4, !dbg !10255
  call void @llvm.dbg.value(metadata i32 %25, metadata !10232, metadata !DIExpression()), !dbg !10233
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !10256
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10257
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10257
  %28 = load volatile i32, i32* %27, align 4, !dbg !10257
  %29 = icmp ugt i32 %28, 16, !dbg !10257
  br i1 %29, label %31, label %30, !dbg !10260

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.145, i32 0, i32 0), i32 noundef 190) #25, !dbg !10261
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.146, i32 0, i32 0)) #25, !dbg !10261
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.145, i32 0, i32 0), i32 noundef 190) #25, !dbg !10261
  unreachable, !dbg !10261

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10263
  ret void, !dbg !10263
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10264 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10266, metadata !DIExpression()), !dbg !10267
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10268
  %3 = load volatile i32, i32* %2, align 4, !dbg !10268
  %4 = or i32 %3, 8192, !dbg !10268
  store volatile i32 %4, i32* %2, align 4, !dbg !10268
  ret void, !dbg !10269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10270 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10272, metadata !DIExpression()), !dbg !10276
  call void @llvm.dbg.value(metadata i8* %1, metadata !10273, metadata !DIExpression()), !dbg !10276
  call void @llvm.dbg.value(metadata i32* %2, metadata !10274, metadata !DIExpression()), !dbg !10276
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10277
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10277
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10277
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10275, metadata !DIExpression()), !dbg !10276
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10278
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10278
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10280
  br i1 %9, label %12, label %10, !dbg !10281

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !10282
  br label %12, !dbg !10283

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10276
  ret i32 %13, !dbg !10284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.141(i32 noundef %0) unnamed_addr #3 !dbg !10285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10287, metadata !DIExpression()), !dbg !10288
  %2 = icmp eq i32 %0, 2, !dbg !10289
  %3 = select i1 %2, i8 87, i8 63, !dbg !10289
  %4 = icmp eq i32 %0, 1, !dbg !10289
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10289
  ret i8 %5, !dbg !10290
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10291 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10295, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata i32 0, metadata !10296, metadata !DIExpression()), !dbg !10297
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10298
  %3 = load volatile i32, i32* %2, align 4, !dbg !10298
  %4 = and i32 %3, -32769, !dbg !10298
  store volatile i32 %4, i32* %2, align 4, !dbg !10298
  ret void, !dbg !10299
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10300 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10304, metadata !DIExpression()), !dbg !10308
  call void @llvm.dbg.value(metadata i32 %1, metadata !10305, metadata !DIExpression()), !dbg !10308
  call void @llvm.dbg.value(metadata i32 0, metadata !10306, metadata !DIExpression()), !dbg !10308
  call void @llvm.dbg.value(metadata i32 %2, metadata !10307, metadata !DIExpression()), !dbg !10308
  %4 = mul i32 %1, 25, !dbg !10309
  %5 = shl i32 %2, 2, !dbg !10309
  %6 = udiv i32 %4, %5, !dbg !10309
  %7 = udiv i32 %6, 100, !dbg !10309
  %8 = shl nuw nsw i32 %7, 4, !dbg !10309
  %9 = mul i32 %7, -100, !dbg !10309
  %10 = add i32 %9, %6, !dbg !10309
  %11 = shl i32 %10, 4, !dbg !10309
  %12 = add i32 %11, 50, !dbg !10309
  %13 = udiv i32 %12, 100, !dbg !10309
  %14 = and i32 %13, 240, !dbg !10309
  %15 = add nuw nsw i32 %14, %8, !dbg !10309
  %16 = and i32 %13, 15, !dbg !10309
  %17 = and i32 %15, 65520, !dbg !10312
  %18 = or i32 %17, %16, !dbg !10312
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10313
  store volatile i32 %18, i32* %19, align 4, !dbg !10314
  ret void, !dbg !10315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10316 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10318, metadata !DIExpression()), !dbg !10320
  call void @llvm.dbg.value(metadata i32 %1, metadata !10319, metadata !DIExpression()), !dbg !10320
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10321
  %4 = load volatile i32, i32* %3, align 4, !dbg !10321
  %5 = and i32 %4, -769, !dbg !10321
  %6 = or i32 %5, %1, !dbg !10321
  store volatile i32 %6, i32* %3, align 4, !dbg !10321
  ret void, !dbg !10322
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10323 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10325, metadata !DIExpression()), !dbg !10327
  call void @llvm.dbg.value(metadata i32 %1, metadata !10326, metadata !DIExpression()), !dbg !10327
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10328
  %4 = load volatile i32, i32* %3, align 4, !dbg !10328
  %5 = and i32 %4, -4097, !dbg !10328
  %6 = or i32 %5, %1, !dbg !10328
  store volatile i32 %6, i32* %3, align 4, !dbg !10328
  ret void, !dbg !10329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10330 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10332, metadata !DIExpression()), !dbg !10334
  call void @llvm.dbg.value(metadata i32 %1, metadata !10333, metadata !DIExpression()), !dbg !10334
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10335
  %4 = load volatile i32, i32* %3, align 4, !dbg !10335
  %5 = and i32 %4, -12289, !dbg !10335
  %6 = or i32 %5, %1, !dbg !10335
  store volatile i32 %6, i32* %3, align 4, !dbg !10335
  ret void, !dbg !10336
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10337 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10339, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.value(metadata i32 %1, metadata !10340, metadata !DIExpression()), !dbg !10341
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10342
  %4 = load volatile i32, i32* %3, align 4, !dbg !10342
  %5 = and i32 %4, -1537, !dbg !10342
  %6 = or i32 %5, %1, !dbg !10342
  store volatile i32 %6, i32* %3, align 4, !dbg !10342
  ret void, !dbg !10343
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10344 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10346, metadata !DIExpression()), !dbg !10347
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10348
  %3 = load volatile i32, i32* %2, align 4, !dbg !10348
  %4 = lshr i32 %3, 3, !dbg !10349
  %5 = and i32 %4, 1, !dbg !10349
  ret i32 %5, !dbg !10350
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10351 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10353, metadata !DIExpression()), !dbg !10354
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10355
  %3 = load volatile i32, i32* %2, align 4, !dbg !10355
  %4 = and i32 %3, 1, !dbg !10355
  ret i32 %4, !dbg !10356
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10357 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10359, metadata !DIExpression()), !dbg !10360
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10361
  %3 = load volatile i32, i32* %2, align 4, !dbg !10361
  %4 = lshr i32 %3, 1, !dbg !10362
  %5 = and i32 %4, 1, !dbg !10362
  ret i32 %5, !dbg !10363
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10364 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10366, metadata !DIExpression()), !dbg !10367
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10368
  %3 = load volatile i32, i32* %2, align 4, !dbg !10368
  %4 = lshr i32 %3, 8, !dbg !10369
  %5 = and i32 %4, 1, !dbg !10369
  ret i32 %5, !dbg !10370
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10371 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10373, metadata !DIExpression()), !dbg !10374
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10375
  store volatile i32 -257, i32* %2, align 4, !dbg !10375
  ret void, !dbg !10376
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10377 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10379, metadata !DIExpression()), !dbg !10381
  %3 = bitcast i32* %2 to i8*, !dbg !10382
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10382
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10380, metadata !DIExpression()), !dbg !10383
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10384
  %5 = load volatile i32, i32* %4, align 4, !dbg !10384
  store volatile i32 %5, i32* %2, align 4, !dbg !10385
  %6 = load volatile i32, i32* %2, align 4, !dbg !10386
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10387
  %8 = load volatile i32, i32* %7, align 4, !dbg !10387
  store volatile i32 %8, i32* %2, align 4, !dbg !10388
  %9 = load volatile i32, i32* %2, align 4, !dbg !10389
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10390
  ret void, !dbg !10390
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10391 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10393, metadata !DIExpression()), !dbg !10395
  %3 = bitcast i32* %2 to i8*, !dbg !10396
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10396
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10394, metadata !DIExpression()), !dbg !10397
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10398
  %5 = load volatile i32, i32* %4, align 4, !dbg !10398
  store volatile i32 %5, i32* %2, align 4, !dbg !10399
  %6 = load volatile i32, i32* %2, align 4, !dbg !10400
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10401
  %8 = load volatile i32, i32* %7, align 4, !dbg !10401
  store volatile i32 %8, i32* %2, align 4, !dbg !10402
  %9 = load volatile i32, i32* %2, align 4, !dbg !10403
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10404
  ret void, !dbg !10404
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10405 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10407, metadata !DIExpression()), !dbg !10409
  %3 = bitcast i32* %2 to i8*, !dbg !10410
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10410
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10408, metadata !DIExpression()), !dbg !10411
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10412
  %5 = load volatile i32, i32* %4, align 4, !dbg !10412
  store volatile i32 %5, i32* %2, align 4, !dbg !10413
  %6 = load volatile i32, i32* %2, align 4, !dbg !10414
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10415
  %8 = load volatile i32, i32* %7, align 4, !dbg !10415
  store volatile i32 %8, i32* %2, align 4, !dbg !10416
  %9 = load volatile i32, i32* %2, align 4, !dbg !10417
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10418
  ret void, !dbg !10418
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10419 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10421, metadata !DIExpression()), !dbg !10423
  %3 = bitcast i32* %2 to i8*, !dbg !10424
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10424
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10422, metadata !DIExpression()), !dbg !10425
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10426
  %5 = load volatile i32, i32* %4, align 4, !dbg !10426
  store volatile i32 %5, i32* %2, align 4, !dbg !10427
  %6 = load volatile i32, i32* %2, align 4, !dbg !10428
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10429
  %8 = load volatile i32, i32* %7, align 4, !dbg !10429
  store volatile i32 %8, i32* %2, align 4, !dbg !10430
  %9 = load volatile i32, i32* %2, align 4, !dbg !10431
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10432
  ret void, !dbg !10432
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10433 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10435, metadata !DIExpression()), !dbg !10436
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10437
  %3 = load volatile i32, i32* %2, align 4, !dbg !10437
  %4 = lshr i32 %3, 7, !dbg !10438
  %5 = and i32 %4, 1, !dbg !10438
  ret i32 %5, !dbg !10439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10440 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10444, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata i8 %1, metadata !10445, metadata !DIExpression()), !dbg !10446
  %3 = zext i8 %1 to i32, !dbg !10447
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10448
  store volatile i32 %3, i32* %4, align 4, !dbg !10449
  ret void, !dbg !10450
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10451 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10453, metadata !DIExpression()), !dbg !10454
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10455
  %3 = load volatile i32, i32* %2, align 4, !dbg !10455
  %4 = lshr i32 %3, 5, !dbg !10456
  %5 = and i32 %4, 1, !dbg !10456
  ret i32 %5, !dbg !10457
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10458 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10462, metadata !DIExpression()), !dbg !10463
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10464
  %3 = load volatile i32, i32* %2, align 4, !dbg !10464
  %4 = trunc i32 %3 to i8, !dbg !10465
  ret i8 %4, !dbg !10466
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10467 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10469, metadata !DIExpression()), !dbg !10475
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10476
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10476
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10476
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10470, metadata !DIExpression()), !dbg !10475
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10477
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10477
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10477
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10471, metadata !DIExpression()), !dbg !10475
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !10478
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10479
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10479
  %10 = tail call fastcc zeroext i1 @device_is_ready.151(%struct.device* noundef %9) #24, !dbg !10481
  br i1 %10, label %14, label %11, !dbg !10482

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.141(i32 noundef 1) #24, !dbg !10483
  %13 = zext i8 %12 to i32, !dbg !10483
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.152, i32 0, i32 0), i32 noundef %13) #25, !dbg !10483
  br label %62, !dbg !10489

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10490
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10491
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10491
  %18 = load i8*, i8** %17, align 4, !dbg !10491
  %19 = tail call fastcc i32 @clock_control_on.153(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !10492
  call void @llvm.dbg.value(metadata i32 %19, metadata !10474, metadata !DIExpression()), !dbg !10475
  %20 = icmp eq i32 %19, 0, !dbg !10493
  br i1 %20, label %24, label %21, !dbg !10495

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.141(i32 noundef 1) #24, !dbg !10496
  %23 = zext i8 %22 to i32, !dbg !10496
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9.154, i32 0, i32 0), i32 noundef %23) #25, !dbg !10496
  br label %62, !dbg !10502

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10503
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10503
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !10504
  call void @llvm.dbg.value(metadata i32 %27, metadata !10474, metadata !DIExpression()), !dbg !10475
  %28 = icmp slt i32 %27, 0, !dbg !10505
  br i1 %28, label %62, label %29, !dbg !10507

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10508
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10508
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !10509
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10510
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !10511
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10512
  %34 = load i32, i32* %33, align 4, !dbg !10512
  %35 = icmp ult i32 %34, 3, !dbg !10514
  br i1 %35, label %39, label %36, !dbg !10514

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.141(i32 noundef 2) #24, !dbg !10515
  %38 = zext i8 %37 to i32, !dbg !10515
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10.155, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !10515
  call void @llvm.dbg.value(metadata i32 0, metadata !10472, metadata !DIExpression()), !dbg !10475
  call void @llvm.dbg.value(metadata i32 0, metadata !10473, metadata !DIExpression()), !dbg !10475
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10514
  %41 = load i32, i32* %40, align 4, !dbg !10514
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.11, i32 0, i32 %34, !dbg !10514
  %43 = load i32, i32* %42, align 4, !dbg !10514
  br label %44, !dbg !10514

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10524
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10524
  call void @llvm.dbg.value(metadata i32 %46, metadata !10473, metadata !DIExpression()), !dbg !10475
  call void @llvm.dbg.value(metadata i32 %45, metadata !10472, metadata !DIExpression()), !dbg !10475
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10525
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !10526
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10527
  %49 = load i8, i8* %48, align 4, !dbg !10527, !range !6723
  %50 = icmp eq i8 %49, 0, !dbg !10527
  br i1 %50, label %52, label %51, !dbg !10529

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !10530
  br label %52, !dbg !10532

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10533
  %54 = load i32, i32* %53, align 4, !dbg !10533
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !10534
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10535
  %56 = load i8, i8* %55, align 4, !dbg !10535, !range !6723
  %57 = icmp eq i8 %56, 0, !dbg !10535
  br i1 %57, label %60, label %58, !dbg !10537

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10538
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !10540
  br label %60, !dbg !10541

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10542
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !10543
  br label %62, !dbg !10544

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10475
  ret i32 %63, !dbg !10545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10546 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10550, metadata !DIExpression()), !dbg !10554
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10555
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10555
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10555
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10551, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10552, metadata !DIExpression()), !dbg !10554
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10556
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10557
  ret void, !dbg !10558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.151(%struct.device* noundef %0) unnamed_addr #1 !dbg !10559 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10563, metadata !DIExpression()), !dbg !10564
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10565, !srcloc !10567
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.156(%struct.device* noundef %0) #24, !dbg !10568
  ret i1 %2, !dbg !10569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.153(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10570 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10572, metadata !DIExpression()), !dbg !10575
  call void @llvm.dbg.value(metadata i8* %1, metadata !10573, metadata !DIExpression()), !dbg !10575
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10576
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10576
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10576
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10574, metadata !DIExpression()), !dbg !10575
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10577
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10577
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10578
  ret i32 %8, !dbg !10579
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10580 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10584, metadata !DIExpression()), !dbg !10588
  call void @llvm.dbg.value(metadata i8 0, metadata !10585, metadata !DIExpression()), !dbg !10588
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10589
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10589
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10587, metadata !DIExpression(DW_OP_deref)), !dbg !10588
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10590
  call void @llvm.dbg.value(metadata i32 %4, metadata !10586, metadata !DIExpression()), !dbg !10588
  %5 = icmp slt i32 %4, 0, !dbg !10591
  br i1 %5, label %9, label %6, !dbg !10593

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10594
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10587, metadata !DIExpression()), !dbg !10588
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !10595
  br label %9, !dbg !10596

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10588
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10597
  ret i32 %10, !dbg !10597
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10598 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10600, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata i32 12, metadata !10601, metadata !DIExpression()), !dbg !10602
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10603
  %3 = load volatile i32, i32* %2, align 4, !dbg !10603
  %4 = or i32 %3, 12, !dbg !10603
  store volatile i32 %4, i32* %2, align 4, !dbg !10603
  ret void, !dbg !10604
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10605 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10607, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.value(metadata i32 %1, metadata !10608, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.value(metadata i32 %2, metadata !10609, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.value(metadata i32 0, metadata !10610, metadata !DIExpression()), !dbg !10611
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10612
  %5 = load volatile i32, i32* %4, align 4, !dbg !10612
  %6 = and i32 %5, -5633, !dbg !10612
  %7 = or i32 %2, %1, !dbg !10612
  %8 = or i32 %7, %6, !dbg !10612
  store volatile i32 %8, i32* %4, align 4, !dbg !10612
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10613
  %10 = load volatile i32, i32* %9, align 4, !dbg !10613
  %11 = and i32 %10, -12289, !dbg !10613
  store volatile i32 %11, i32* %9, align 4, !dbg !10613
  ret void, !dbg !10614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10615 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10617, metadata !DIExpression()), !dbg !10618
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10619
  %3 = load volatile i32, i32* %2, align 4, !dbg !10619
  %4 = or i32 %3, 8, !dbg !10619
  store volatile i32 %4, i32* %2, align 4, !dbg !10619
  ret void, !dbg !10620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10621 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10625, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10626, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i32 0, metadata !10627, metadata !DIExpression()), !dbg !10628
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10629
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10629
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10630
  %5 = load i8, i8* %4, align 4, !dbg !10630
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10631
  ret i32 %6, !dbg !10632
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.156(%struct.device* noundef %0) unnamed_addr #1 !dbg !10633 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10635, metadata !DIExpression()), !dbg !10636
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10637
  ret i1 %2, !dbg !10638
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10639 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10641, metadata !DIExpression()), !dbg !10642
  tail call fastcc void @__NVIC_SetPriority.158() #24, !dbg !10643
  store i32 3199, i32* @last_load, align 4, !dbg !10644
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10645
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10646
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10647
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10648
  %3 = or i32 %2, 7, !dbg !10648
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10648
  ret i32 0, !dbg !10649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.158() unnamed_addr #15 !dbg !10650 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10652, metadata !DIExpression()), !dbg !10654
  call void @llvm.dbg.value(metadata i32 1, metadata !10653, metadata !DIExpression()), !dbg !10654
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10655
  ret void, !dbg !10658
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10659 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10661, metadata !DIExpression()), !dbg !10663
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10664
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10665
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10666
  %5 = add i32 %4, %3, !dbg !10666
  store i32 %5, i32* @cycle_count, align 4, !dbg !10666
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10667
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10668
  %7 = sub i32 %5, %6, !dbg !10671
  %8 = udiv i32 %7, 3200, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %8, metadata !10662, metadata !DIExpression()), !dbg !10663
  %9 = mul nuw i32 %8, 3200, !dbg !10673
  %10 = add i32 %9, %6, !dbg !10674
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10674
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10675
  tail call void @z_arm_int_exit() #25, !dbg !10676
  ret void, !dbg !10677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10678 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10683
  call void @llvm.dbg.value(metadata i32 %1, metadata !10680, metadata !DIExpression()), !dbg !10684
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10685
  call void @llvm.dbg.value(metadata i32 %2, metadata !10681, metadata !DIExpression()), !dbg !10684
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10686
  call void @llvm.dbg.value(metadata i32 %3, metadata !10682, metadata !DIExpression()), !dbg !10684
  %4 = and i32 %2, 65536, !dbg !10687
  %5 = icmp ne i32 %4, 0, !dbg !10687
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10689
  %8 = load i32, i32* @last_load, align 4, !dbg !10684
  br i1 %7, label %9, label %13, !dbg !10689

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10690
  %11 = add i32 %10, %8, !dbg !10690
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10690
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10692
  br label %13, !dbg !10693

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10694
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10695
  %16 = add i32 %14, %15, !dbg !10696
  ret i32 %16, !dbg !10697
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10702, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i1 %1, metadata !10703, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10715
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10716
  br i1 %4, label %5, label %8, !dbg !10716

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10718
  %7 = and i32 %6, -2, !dbg !10718
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10718
  store i32 -16777216, i32* @last_load, align 4, !dbg !10720
  br label %60, !dbg !10721

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10722
  call void @llvm.dbg.value(metadata i32 %9, metadata !10707, metadata !DIExpression()), !dbg !10715
  br i1 %3, label %18, label %10, !dbg !10723

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10723
  call void @llvm.dbg.value(metadata i32 undef, metadata !10702, metadata !DIExpression()), !dbg !10715
  %12 = icmp slt i32 %11, 1, !dbg !10724
  br i1 %12, label %18, label %13, !dbg !10724

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !10724
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !10724
  %16 = mul nuw nsw i32 %15, 3200, !dbg !10724
  %17 = add nuw nsw i32 %16, 3199, !dbg !10724
  br label %18, !dbg !10724

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10702, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10725, metadata !DIExpression()) #23, !dbg !10732
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10734, !srcloc !10740
  call void @llvm.dbg.value(metadata i32 undef, metadata !10737, metadata !DIExpression()) #23, !dbg !10741
  call void @llvm.dbg.value(metadata i32 undef, metadata !10738, metadata !DIExpression()) #23, !dbg !10741
  call void @llvm.dbg.value(metadata i32 undef, metadata !10731, metadata !DIExpression()) #23, !dbg !10732
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10742
  br i1 %21, label %23, label %22, !dbg !10745

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.160, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef 148) #25, !dbg !10746
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.162, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10746
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef 148) #25, !dbg !10746
  unreachable, !dbg !10746

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10734
  call void @llvm.dbg.value(metadata i32 %24, metadata !10737, metadata !DIExpression()) #23, !dbg !10741
  call void @llvm.dbg.value(metadata i32 %24, metadata !10731, metadata !DIExpression()) #23, !dbg !10732
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10748
  call void @llvm.dbg.value(metadata i32 %24, metadata !10708, metadata !DIExpression()), !dbg !10715
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10749
  call void @llvm.dbg.value(metadata i32 %25, metadata !10713, metadata !DIExpression()), !dbg !10715
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10750
  call void @llvm.dbg.value(metadata i32 %26, metadata !10705, metadata !DIExpression()), !dbg !10715
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10751
  %28 = add i32 %27, %25, !dbg !10751
  store i32 %28, i32* @cycle_count, align 4, !dbg !10751
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10752
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10753
  %30 = sub i32 %28, %29, !dbg !10754
  call void @llvm.dbg.value(metadata i32 %30, metadata !10714, metadata !DIExpression()), !dbg !10715
  %31 = icmp slt i32 %30, 0, !dbg !10755
  br i1 %31, label %41, label %32, !dbg !10757

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10704, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i32 undef, metadata !10704, metadata !DIExpression()), !dbg !10715
  %33 = add nuw i32 %19, %30, !dbg !10758
  %34 = urem i32 %33, 3200, !dbg !10760
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10715
  %35 = sub nuw nsw i32 %19, %34, !dbg !10761
  call void @llvm.dbg.value(metadata i32 %35, metadata !10704, metadata !DIExpression()), !dbg !10715
  %36 = icmp ugt i32 %35, 1024, !dbg !10762
  br i1 %36, label %37, label %39, !dbg !10762

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10704, metadata !DIExpression()), !dbg !10715
  %38 = icmp ugt i32 %35, 16771200, !dbg !10763
  br i1 %38, label %41, label %39, !dbg !10765

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16771200, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10766
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10767
  call void @llvm.dbg.value(metadata i32 %43, metadata !10706, metadata !DIExpression()), !dbg !10715
  %44 = add nsw i32 %42, -1, !dbg !10768
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10769
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10770
  %45 = icmp ult i32 %26, %43, !dbg !10771
  br i1 %45, label %46, label %51, !dbg !10773

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10774
  %48 = add i32 %26, %9, !dbg !10776
  %49 = sub i32 %48, %43, !dbg !10777
  %50 = add i32 %49, %47, !dbg !10774
  br label %55, !dbg !10778

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10779
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10781
  %54 = add i32 %52, %53, !dbg !10781
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10782
  store i32 %56, i32* @cycle_count, align 4, !dbg !10782
  call void @llvm.dbg.value(metadata i32 undef, metadata !10783, metadata !DIExpression()) #23, !dbg !10789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10788, metadata !DIExpression()) #23, !dbg !10789
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10791
  br i1 %57, label %59, label %58, !dbg !10794

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef 194) #25, !dbg !10795
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.164, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10795
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef 194) #25, !dbg !10795
  unreachable, !dbg !10795

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10783, metadata !DIExpression()) #23, !dbg !10789
  call void @llvm.dbg.value(metadata i32 %24, metadata !10797, metadata !DIExpression()) #23, !dbg !10800
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10802, !srcloc !10803
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10804
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10805 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10725, metadata !DIExpression()) #23, !dbg !10809
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10811, !srcloc !10740
  call void @llvm.dbg.value(metadata i32 undef, metadata !10737, metadata !DIExpression()) #23, !dbg !10813
  call void @llvm.dbg.value(metadata i32 undef, metadata !10738, metadata !DIExpression()) #23, !dbg !10813
  call void @llvm.dbg.value(metadata i32 undef, metadata !10731, metadata !DIExpression()) #23, !dbg !10809
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10814
  br i1 %2, label %4, label %3, !dbg !10815

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.160, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef 148) #25, !dbg !10816
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.162, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10816
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef 148) #25, !dbg !10816
  unreachable, !dbg !10816

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10737, metadata !DIExpression()) #23, !dbg !10813
  call void @llvm.dbg.value(metadata i32 undef, metadata !10731, metadata !DIExpression()) #23, !dbg !10809
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10817
  call void @llvm.dbg.value(metadata i32 undef, metadata !10807, metadata !DIExpression()), !dbg !10818
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10819
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10820
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10821
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10808, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10818
  call void @llvm.dbg.value(metadata i32 undef, metadata !10783, metadata !DIExpression()) #23, !dbg !10822
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10788, metadata !DIExpression()) #23, !dbg !10822
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10824
  br i1 %8, label %10, label %9, !dbg !10825

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef 194) #25, !dbg !10826
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.164, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10826
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef 194) #25, !dbg !10826
  unreachable, !dbg !10826

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10827
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10808, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10818
  %12 = sub i32 %11, %7, !dbg !10828
  call void @llvm.dbg.value(metadata i32 %12, metadata !10808, metadata !DIExpression()), !dbg !10818
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10811
  call void @llvm.dbg.value(metadata i32 %13, metadata !10737, metadata !DIExpression()) #23, !dbg !10813
  call void @llvm.dbg.value(metadata i32 %13, metadata !10731, metadata !DIExpression()) #23, !dbg !10809
  call void @llvm.dbg.value(metadata i32 %13, metadata !10807, metadata !DIExpression()), !dbg !10818
  call void @llvm.dbg.value(metadata i32 undef, metadata !10783, metadata !DIExpression()) #23, !dbg !10822
  call void @llvm.dbg.value(metadata i32 undef, metadata !10797, metadata !DIExpression()) #23, !dbg !10829
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10831, !srcloc !10803
  %14 = udiv i32 %12, 3200, !dbg !10832
  ret i32 %14, !dbg !10833
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10834 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10725, metadata !DIExpression()) #23, !dbg !10838
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10840, !srcloc !10740
  call void @llvm.dbg.value(metadata i32 undef, metadata !10737, metadata !DIExpression()) #23, !dbg !10842
  call void @llvm.dbg.value(metadata i32 undef, metadata !10738, metadata !DIExpression()) #23, !dbg !10842
  call void @llvm.dbg.value(metadata i32 undef, metadata !10731, metadata !DIExpression()) #23, !dbg !10838
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10843
  br i1 %2, label %4, label %3, !dbg !10844

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.160, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef 148) #25, !dbg !10845
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.162, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10845
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef 148) #25, !dbg !10845
  unreachable, !dbg !10845

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10737, metadata !DIExpression()) #23, !dbg !10842
  call void @llvm.dbg.value(metadata i32 undef, metadata !10731, metadata !DIExpression()) #23, !dbg !10838
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10846
  call void @llvm.dbg.value(metadata i32 undef, metadata !10836, metadata !DIExpression()), !dbg !10847
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10848
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10849
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10837, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10847
  call void @llvm.dbg.value(metadata i32 undef, metadata !10783, metadata !DIExpression()) #23, !dbg !10850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10788, metadata !DIExpression()) #23, !dbg !10850
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10852
  br i1 %7, label %9, label %8, !dbg !10853

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef 194) #25, !dbg !10854
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.164, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10854
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef 194) #25, !dbg !10854
  unreachable, !dbg !10854

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10855
  call void @llvm.dbg.value(metadata i32 %10, metadata !10837, metadata !DIExpression()), !dbg !10847
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10840
  call void @llvm.dbg.value(metadata i32 %11, metadata !10737, metadata !DIExpression()) #23, !dbg !10842
  call void @llvm.dbg.value(metadata i32 %11, metadata !10731, metadata !DIExpression()) #23, !dbg !10838
  call void @llvm.dbg.value(metadata i32 %11, metadata !10836, metadata !DIExpression()), !dbg !10847
  call void @llvm.dbg.value(metadata i32 undef, metadata !10783, metadata !DIExpression()) #23, !dbg !10850
  call void @llvm.dbg.value(metadata i32 undef, metadata !10797, metadata !DIExpression()) #23, !dbg !10856
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10858, !srcloc !10803
  ret i32 %10, !dbg !10859
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10860 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10861
  %2 = icmp eq i32 %1, -16777216, !dbg !10863
  br i1 %2, label %3, label %6, !dbg !10864

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10865
  %5 = or i32 %4, 1, !dbg !10865
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10865
  br label %6, !dbg !10867

6:                                                ; preds = %3, %0
  ret void, !dbg !10868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10869 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10870
  %2 = and i32 %1, -2, !dbg !10870
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10870
  ret void, !dbg !10871
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10872 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10898, metadata !DIExpression()), !dbg !10901
  call void @llvm.dbg.value(metadata i8 %1, metadata !10899, metadata !DIExpression()), !dbg !10901
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10900, metadata !DIExpression()), !dbg !10901
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10902
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10902
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10901
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10903
  %8 = load i8, i8* %6, align 4, !dbg !10904
  %9 = zext i8 %8 to i32, !dbg !10905
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10905
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10906
  br i1 %11, label %18, label %24, !dbg !10907

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10901
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10903
  %14 = load i8, i8* %6, align 4, !dbg !10904
  %15 = zext i8 %14 to i32, !dbg !10905
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10905
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10906
  br i1 %17, label %18, label %24, !dbg !10907, !llvm.loop !10908

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10910
  %21 = load i8, i8* %20, align 1, !dbg !10910
  %22 = icmp eq i8 %21, %1, !dbg !10913
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10914
  br i1 %22, label %24, label %12, !dbg !10915

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10901
  ret i32 %25, !dbg !10916
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10917 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10928, metadata !DIExpression()), !dbg !10944
  call void @llvm.dbg.value(metadata i8 %1, metadata !10929, metadata !DIExpression()), !dbg !10944
  call void @llvm.dbg.value(metadata i32 %2, metadata !10930, metadata !DIExpression()), !dbg !10944
  call void @llvm.dbg.value(metadata i32 0, metadata !10933, metadata !DIExpression()), !dbg !10944
  call void @llvm.dbg.value(metadata i32 0, metadata !10934, metadata !DIExpression()), !dbg !10944
  call void @llvm.dbg.value(metadata i8 0, metadata !10935, metadata !DIExpression()), !dbg !10945
  %4 = icmp eq i8 %1, 0, !dbg !10946
  br i1 %4, label %35, label %5, !dbg !10947

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10946
  br label %9, !dbg !10947

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10935, metadata !DIExpression()), !dbg !10945
  call void @llvm.dbg.value(metadata i32 %29, metadata !10933, metadata !DIExpression()), !dbg !10944
  %8 = icmp eq i32 %34, %6, !dbg !10946
  br i1 %8, label %35, label %9, !dbg !10947, !llvm.loop !10948

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10935, metadata !DIExpression()), !dbg !10945
  call void @llvm.dbg.value(metadata i32 %11, metadata !10933, metadata !DIExpression()), !dbg !10944
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10950
  %13 = load i32, i32* %12, align 4, !dbg !10950
  call void @llvm.dbg.value(metadata i32 %13, metadata !10932, metadata !DIExpression()), !dbg !10944
  %14 = and i32 %13, 31, !dbg !10951
  %15 = icmp ult i32 %14, 16, !dbg !10952
  br i1 %15, label %16, label %20, !dbg !10953

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10954
  %18 = load i32, i32* %17, align 4, !dbg !10954
  %19 = or i32 %18, 32, !dbg !10956
  call void @llvm.dbg.value(metadata i32 %19, metadata !10933, metadata !DIExpression()), !dbg !10944
  br label %28, !dbg !10957

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10958

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10959
  %23 = load i32, i32* %22, align 4, !dbg !10959
  call void @llvm.dbg.value(metadata i32 %23, metadata !10937, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10960
  %24 = lshr i32 %23, 7, !dbg !10961
  %25 = and i32 %24, 16, !dbg !10961
  %26 = or i32 %25, %23, !dbg !10961
  call void @llvm.dbg.value(metadata i32 %26, metadata !10933, metadata !DIExpression()), !dbg !10944
  br label %28, !dbg !10962

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10944
  call void @llvm.dbg.value(metadata i32 %29, metadata !10933, metadata !DIExpression()), !dbg !10944
  %30 = lshr i32 %13, 5, !dbg !10963
  %31 = and i32 %30, 255, !dbg !10963
  call void @llvm.dbg.value(metadata i32 %31, metadata !10931, metadata !DIExpression()), !dbg !10944
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !10964
  call void @llvm.dbg.value(metadata i32 %32, metadata !10934, metadata !DIExpression()), !dbg !10944
  %33 = icmp slt i32 %32, 0, !dbg !10965
  %34 = add nuw nsw i32 %10, 1, !dbg !10967
  call void @llvm.dbg.value(metadata i32 %34, metadata !10935, metadata !DIExpression()), !dbg !10945
  br i1 %33, label %35, label %7, !dbg !10968

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10969
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10974, metadata !DIExpression()), !dbg !10978
  call void @llvm.dbg.value(metadata i32 %1, metadata !10975, metadata !DIExpression()), !dbg !10978
  call void @llvm.dbg.value(metadata i32 %2, metadata !10976, metadata !DIExpression()), !dbg !10978
  %4 = icmp ugt i32 %0, 175, !dbg !10979
  br i1 %4, label %17, label %5, !dbg !10981

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10982
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10983
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10983
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10977, metadata !DIExpression()), !dbg !10978
  %9 = lshr i32 1888, %6, !dbg !10984
  %10 = and i32 %9, 1, !dbg !10984
  %11 = icmp eq i32 %10, 0, !dbg !10984
  br i1 %11, label %12, label %17, !dbg !10986

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.169(%struct.device* noundef %8) #24, !dbg !10987
  br i1 %13, label %14, label %17, !dbg !10988

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !10989
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #25, !dbg !10990
  br label %17, !dbg !10991

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !10978
  ret i32 %18, !dbg !10992
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.169(%struct.device* noundef %0) unnamed_addr #1 !dbg !10993 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10997, metadata !DIExpression()), !dbg !10998
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10999, !srcloc !11001
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.170(%struct.device* noundef %0) #24, !dbg !11002
  ret i1 %2, !dbg !11003
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.170(%struct.device* noundef %0) unnamed_addr #1 !dbg !11004 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11006, metadata !DIExpression()), !dbg !11007
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11008
  ret i1 %2, !dbg !11009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #3 !dbg !11010 {
  ret void, !dbg !11011
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !11012 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11014, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 0, metadata !11015, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 0, metadata !11016, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 0, metadata !11017, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 0, metadata !11018, metadata !DIExpression()), !dbg !11019
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11020
  call void @llvm.dbg.value(metadata i32 %1, metadata !11014, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !11019
  %2 = lshr i32 %1, 2, !dbg !11021
  %3 = and i32 %2, 3, !dbg !11021
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !11021

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11022
  %6 = lshr i32 %5, 13, !dbg !11024
  %7 = and i32 %6, 7, !dbg !11024
  call void @llvm.dbg.value(metadata i32 %7, metadata !11018, metadata !DIExpression()), !dbg !11019
  %8 = shl nuw nsw i32 65536, %7, !dbg !11025
  br label %31, !dbg !11026

9:                                                ; preds = %0
  br label %31, !dbg !11027

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11028
  call void @llvm.dbg.value(metadata i32 %11, metadata !11015, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !11019
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11029
  call void @llvm.dbg.value(metadata i32 %12, metadata !11016, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !11019
  %13 = lshr i32 %11, 18, !dbg !11030
  %14 = and i32 %13, 15, !dbg !11030
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !11031
  %16 = load i8, i8* %15, align 1, !dbg !11031
  %17 = zext i8 %16 to i32, !dbg !11031
  call void @llvm.dbg.value(metadata i32 %17, metadata !11015, metadata !DIExpression()), !dbg !11019
  %18 = lshr i32 %12, 22, !dbg !11032
  %19 = and i32 %18, 3, !dbg !11032
  %20 = add nuw nsw i32 %19, 1, !dbg !11033
  call void @llvm.dbg.value(metadata i32 %20, metadata !11016, metadata !DIExpression()), !dbg !11019
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11034
  %22 = and i32 %21, 65536, !dbg !11035
  call void @llvm.dbg.value(metadata i32 %22, metadata !11017, metadata !DIExpression()), !dbg !11019
  %23 = icmp eq i32 %22, 0, !dbg !11036
  br i1 %23, label %24, label %27, !dbg !11038

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !11039
  %26 = udiv i32 %25, %20, !dbg !11041
  br label %31, !dbg !11042

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !11043
  %29 = udiv i32 %28, %20, !dbg !11045
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !11046
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11047
  %34 = lshr i32 %33, 4, !dbg !11048
  %35 = and i32 %34, 15, !dbg !11048
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !11049
  %37 = load i8, i8* %36, align 1, !dbg !11049
  %38 = zext i8 %37 to i32, !dbg !11049
  call void @llvm.dbg.value(metadata i32 %38, metadata !11014, metadata !DIExpression()), !dbg !11019
  %39 = lshr i32 %32, %38, !dbg !11050
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !11050
  ret void, !dbg !11051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11052 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11060
  %2 = and i32 %1, 16711935, !dbg !11060
  %3 = or i32 %2, 45056, !dbg !11060
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11060
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11061
  %5 = or i32 %4, 256, !dbg !11061
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11061
  %6 = tail call i32 @HAL_GetTick() #25, !dbg !11062
  call void @llvm.dbg.value(metadata i32 %6, metadata !11058, metadata !DIExpression()), !dbg !11063
  br label %7, !dbg !11064

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11065
  %9 = and i32 %8, 512, !dbg !11065
  %10 = icmp eq i32 %9, 0, !dbg !11066
  br i1 %10, label %11, label %15, !dbg !11064

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #25, !dbg !11067
  %13 = sub i32 %12, %6, !dbg !11070
  %14 = icmp ugt i32 %13, 2, !dbg !11071
  br i1 %14, label %47, label %7, !dbg !11072, !llvm.loop !11073

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11075
  %17 = and i32 %16, -4, !dbg !11075
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11075
  br label %18, !dbg !11076

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11077
  %20 = and i32 %19, 12, !dbg !11077
  %21 = icmp eq i32 %20, 0, !dbg !11078
  br i1 %21, label %26, label %22, !dbg !11076

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #25, !dbg !11079
  %24 = sub i32 %23, %6, !dbg !11082
  %25 = icmp ugt i32 %24, 5000, !dbg !11083
  br i1 %25, label %47, label %18, !dbg !11084, !llvm.loop !11085

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !11087
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !11088
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #25, !dbg !11089
  call void @llvm.dbg.value(metadata i32 %28, metadata !11059, metadata !DIExpression()), !dbg !11063
  %29 = icmp eq i32 %28, 0, !dbg !11090
  br i1 %29, label %30, label %47, !dbg !11092

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11093
  %32 = and i32 %31, -285278210, !dbg !11093
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11093
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11094
  %34 = and i32 %33, -262145, !dbg !11094
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11094
  %35 = tail call i32 @HAL_GetTick() #25, !dbg !11095
  call void @llvm.dbg.value(metadata i32 %35, metadata !11058, metadata !DIExpression()), !dbg !11063
  br label %36, !dbg !11096

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11097
  %38 = and i32 %37, 33554432, !dbg !11097
  %39 = icmp eq i32 %38, 0, !dbg !11098
  br i1 %39, label %44, label %40, !dbg !11096

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #25, !dbg !11099
  %42 = sub i32 %41, %35, !dbg !11102
  %43 = icmp ugt i32 %42, 2, !dbg !11103
  br i1 %43, label %47, label %36, !dbg !11104, !llvm.loop !11105

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11107
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11108
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11109
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11110
  %46 = or i32 %45, 16777216, !dbg !11110
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11110
  br label %47, !dbg !11111

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !11063
  ret i32 %48, !dbg !11112
}

; Function Attrs: optsize
declare !dbg !11113 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !11115 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11118 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11144, metadata !DIExpression()), !dbg !11157
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11158
  br i1 %3, label %385, label %4, !dbg !11160

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11161
  %6 = and i32 %5, 12, !dbg !11161
  call void @llvm.dbg.value(metadata i32 %6, metadata !11147, metadata !DIExpression()), !dbg !11157
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11162
  %8 = and i32 %7, 65536, !dbg !11162
  call void @llvm.dbg.value(metadata i32 %8, metadata !11148, metadata !DIExpression()), !dbg !11157
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11163
  %10 = load i32, i32* %9, align 4, !dbg !11163
  %11 = and i32 %10, 1, !dbg !11165
  %12 = icmp eq i32 %11, 0, !dbg !11166
  br i1 %12, label %69, label %13, !dbg !11167

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !11168
  br i1 %14, label %19, label %15, !dbg !11171

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !11172
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !11173
  br i1 %18, label %19, label %27, !dbg !11173

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11174
  %21 = and i32 %20, 131072, !dbg !11174
  %22 = icmp eq i32 %21, 0, !dbg !11177
  br i1 %22, label %69, label %23, !dbg !11178

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11179
  %25 = load i32, i32* %24, align 4, !dbg !11179
  %26 = icmp eq i32 %25, 0, !dbg !11180
  br i1 %26, label %385, label %69, !dbg !11181

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11182
  %29 = load i32, i32* %28, align 4, !dbg !11182
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !11186

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11187
  %32 = or i32 %31, 65536, !dbg !11187
  br label %48, !dbg !11187

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11189
  %35 = and i32 %34, -65537, !dbg !11189
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11189
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11189
  %37 = and i32 %36, -262145, !dbg !11189
  br label %48, !dbg !11189

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11192
  %40 = or i32 %39, 262144, !dbg !11192
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11192
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11192
  %42 = or i32 %41, 65536, !dbg !11192
  br label %48, !dbg !11192

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11195
  %45 = and i32 %44, -65537, !dbg !11195
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11195
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11195
  %47 = and i32 %46, -262145, !dbg !11195
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11197
  %50 = load i32, i32* %28, align 4, !dbg !11198
  %51 = icmp eq i32 %50, 0, !dbg !11200
  %52 = tail call i32 @HAL_GetTick() #25, !dbg !11201
  call void @llvm.dbg.value(metadata i32 %52, metadata !11145, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 %52, metadata !11145, metadata !DIExpression()), !dbg !11157
  br i1 %51, label %61, label %53, !dbg !11202

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11203
  %55 = and i32 %54, 131072, !dbg !11203
  %56 = icmp eq i32 %55, 0, !dbg !11205
  br i1 %56, label %57, label %69, !dbg !11206

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #25, !dbg !11207
  %59 = sub i32 %58, %52, !dbg !11210
  %60 = icmp ugt i32 %59, 100, !dbg !11211
  br i1 %60, label %385, label %53, !dbg !11212, !llvm.loop !11213

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11215
  %63 = and i32 %62, 131072, !dbg !11215
  %64 = icmp eq i32 %63, 0, !dbg !11217
  br i1 %64, label %69, label %65, !dbg !11218

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !11219
  %67 = sub i32 %66, %52, !dbg !11222
  %68 = icmp ugt i32 %67, 100, !dbg !11223
  br i1 %68, label %385, label %61, !dbg !11224, !llvm.loop !11225

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !11227
  %71 = and i32 %70, 2, !dbg !11229
  %72 = icmp eq i32 %71, 0, !dbg !11230
  br i1 %72, label %118, label %73, !dbg !11231

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !11232
  br i1 %74, label %79, label %75, !dbg !11235

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !11236
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !11237
  br i1 %78, label %79, label %87, !dbg !11237

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11238
  %81 = and i32 %80, 2, !dbg !11238
  %82 = icmp eq i32 %81, 0, !dbg !11241
  br i1 %82, label %111, label %83, !dbg !11242

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11243
  %85 = load i32, i32* %84, align 4, !dbg !11243
  %86 = icmp eq i32 %85, 1, !dbg !11244
  br i1 %86, label %111, label %385, !dbg !11245

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11246
  %89 = load i32, i32* %88, align 4, !dbg !11246
  %90 = icmp eq i32 %89, 0, !dbg !11249
  br i1 %90, label %101, label %91, !dbg !11250

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11251
  %92 = tail call i32 @HAL_GetTick() #25, !dbg !11253
  call void @llvm.dbg.value(metadata i32 %92, metadata !11145, metadata !DIExpression()), !dbg !11157
  br label %93, !dbg !11254

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11255
  %95 = and i32 %94, 2, !dbg !11255
  %96 = icmp eq i32 %95, 0, !dbg !11256
  br i1 %96, label %97, label %111, !dbg !11254

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #25, !dbg !11257
  %99 = sub i32 %98, %92, !dbg !11260
  %100 = icmp ugt i32 %99, 2, !dbg !11261
  br i1 %100, label %385, label %93, !dbg !11262, !llvm.loop !11263

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11265
  %102 = tail call i32 @HAL_GetTick() #25, !dbg !11267
  call void @llvm.dbg.value(metadata i32 %102, metadata !11145, metadata !DIExpression()), !dbg !11157
  br label %103, !dbg !11268

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11269
  %105 = and i32 %104, 2, !dbg !11269
  %106 = icmp eq i32 %105, 0, !dbg !11270
  br i1 %106, label %118, label %107, !dbg !11268

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #25, !dbg !11271
  %109 = sub i32 %108, %102, !dbg !11274
  %110 = icmp ugt i32 %109, 2, !dbg !11275
  br i1 %110, label %385, label %103, !dbg !11276, !llvm.loop !11277

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11279
  %113 = and i32 %112, -7937, !dbg !11279
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11279
  %115 = load i32, i32* %114, align 4, !dbg !11279
  %116 = shl i32 %115, 8, !dbg !11279
  %117 = or i32 %116, %113, !dbg !11279
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11279
  br label %118, !dbg !11280

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !11280
  %120 = and i32 %119, 16, !dbg !11282
  %121 = icmp eq i32 %120, 0, !dbg !11283
  br i1 %121, label %215, label %122, !dbg !11284

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !11285
  br i1 %123, label %124, label %179, !dbg !11288

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11289
  %126 = and i32 %125, 512, !dbg !11289
  %127 = icmp eq i32 %126, 0, !dbg !11292
  br i1 %127, label %132, label %128, !dbg !11293

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !11294
  %130 = load i32, i32* %129, align 4, !dbg !11294
  %131 = icmp eq i32 %130, 0, !dbg !11295
  br i1 %131, label %385, label %132, !dbg !11296

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !11297
  %134 = load i32, i32* %133, align 4, !dbg !11297
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11300
  %136 = and i32 %135, 57344, !dbg !11300
  %137 = icmp ugt i32 %134, %136, !dbg !11301
  br i1 %137, label %138, label %152, !dbg !11302

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #24, !dbg !11303
  %140 = icmp eq i32 %139, 0, !dbg !11306
  br i1 %140, label %141, label %385, !dbg !11307

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11308
  %143 = and i32 %142, -57345, !dbg !11308
  %144 = load i32, i32* %133, align 4, !dbg !11308
  %145 = or i32 %143, %144, !dbg !11308
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11308
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11309
  %147 = and i32 %146, 16777215, !dbg !11309
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11309
  %149 = load i32, i32* %148, align 4, !dbg !11309
  %150 = shl i32 %149, 24, !dbg !11309
  %151 = or i32 %150, %147, !dbg !11309
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11309
  br label %165, !dbg !11310

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11311
  %154 = and i32 %153, -57345, !dbg !11311
  %155 = or i32 %154, %134, !dbg !11311
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11311
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11313
  %157 = and i32 %156, 16777215, !dbg !11313
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11313
  %159 = load i32, i32* %158, align 4, !dbg !11313
  %160 = shl i32 %159, 24, !dbg !11313
  %161 = or i32 %160, %157, !dbg !11313
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11313
  %162 = load i32, i32* %133, align 4, !dbg !11314
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #24, !dbg !11316
  %164 = icmp eq i32 %163, 0, !dbg !11317
  br i1 %164, label %165, label %385, !dbg !11318

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !11319
  %167 = lshr i32 %166, 13, !dbg !11320
  %168 = shl i32 65536, %167, !dbg !11321
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11322
  %170 = lshr i32 %169, 4, !dbg !11323
  %171 = and i32 %170, 15, !dbg !11323
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !11324
  %173 = load i8, i8* %172, align 1, !dbg !11324
  %174 = zext i8 %173 to i32, !dbg !11324
  %175 = lshr i32 %168, %174, !dbg !11325
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !11326
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !11327
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #25, !dbg !11328
  call void @llvm.dbg.value(metadata i32 %177, metadata !11146, metadata !DIExpression()), !dbg !11157
  %178 = icmp eq i32 %177, 0, !dbg !11329
  br i1 %178, label %215, label %385, !dbg !11331

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !11332
  %181 = load i32, i32* %180, align 4, !dbg !11332
  %182 = icmp eq i32 %181, 0, !dbg !11335
  br i1 %182, label %205, label %183, !dbg !11336

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !11337
  %184 = tail call i32 @HAL_GetTick() #25, !dbg !11339
  call void @llvm.dbg.value(metadata i32 %184, metadata !11145, metadata !DIExpression()), !dbg !11157
  br label %185, !dbg !11340

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11341
  %187 = and i32 %186, 512, !dbg !11341
  %188 = icmp eq i32 %187, 0, !dbg !11342
  br i1 %188, label %189, label %193, !dbg !11340

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #25, !dbg !11343
  %191 = sub i32 %190, %184, !dbg !11346
  %192 = icmp ugt i32 %191, 2, !dbg !11347
  br i1 %192, label %385, label %185, !dbg !11348, !llvm.loop !11349

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11351
  %195 = and i32 %194, -57345, !dbg !11351
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !11351
  %197 = load i32, i32* %196, align 4, !dbg !11351
  %198 = or i32 %195, %197, !dbg !11351
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11351
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11352
  %200 = and i32 %199, 16777215, !dbg !11352
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11352
  %202 = load i32, i32* %201, align 4, !dbg !11352
  %203 = shl i32 %202, 24, !dbg !11352
  %204 = or i32 %203, %200, !dbg !11352
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11352
  br label %215, !dbg !11353

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !11354
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !11356
  call void @llvm.dbg.value(metadata i32 %206, metadata !11145, metadata !DIExpression()), !dbg !11157
  br label %207, !dbg !11357

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11358
  %209 = and i32 %208, 512, !dbg !11358
  %210 = icmp eq i32 %209, 0, !dbg !11359
  br i1 %210, label %215, label %211, !dbg !11357

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #25, !dbg !11360
  %213 = sub i32 %212, %206, !dbg !11363
  %214 = icmp ugt i32 %213, 2, !dbg !11364
  br i1 %214, label %385, label %207, !dbg !11365, !llvm.loop !11366

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !11368
  %217 = and i32 %216, 8, !dbg !11370
  %218 = icmp eq i32 %217, 0, !dbg !11371
  br i1 %218, label %243, label %219, !dbg !11372

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11373
  %221 = load i32, i32* %220, align 4, !dbg !11373
  %222 = icmp eq i32 %221, 0, !dbg !11376
  br i1 %222, label %233, label %223, !dbg !11377

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !11378
  %224 = tail call i32 @HAL_GetTick() #25, !dbg !11380
  call void @llvm.dbg.value(metadata i32 %224, metadata !11145, metadata !DIExpression()), !dbg !11157
  br label %225, !dbg !11381

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11382
  %227 = and i32 %226, 2, !dbg !11382
  %228 = icmp eq i32 %227, 0, !dbg !11383
  br i1 %228, label %229, label %243, !dbg !11381

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !11384
  %231 = sub i32 %230, %224, !dbg !11387
  %232 = icmp ugt i32 %231, 2, !dbg !11388
  br i1 %232, label %385, label %225, !dbg !11389, !llvm.loop !11390

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !11392
  %234 = tail call i32 @HAL_GetTick() #25, !dbg !11394
  call void @llvm.dbg.value(metadata i32 %234, metadata !11145, metadata !DIExpression()), !dbg !11157
  br label %235, !dbg !11395

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11396
  %237 = and i32 %236, 2, !dbg !11396
  %238 = icmp eq i32 %237, 0, !dbg !11397
  br i1 %238, label %243, label %239, !dbg !11395

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #25, !dbg !11398
  %241 = sub i32 %240, %234, !dbg !11401
  %242 = icmp ugt i32 %241, 2, !dbg !11402
  br i1 %242, label %385, label %235, !dbg !11403, !llvm.loop !11404

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !11406
  %245 = and i32 %244, 4, !dbg !11407
  %246 = icmp eq i32 %245, 0, !dbg !11408
  br i1 %246, label %320, label %247, !dbg !11409

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !11149, metadata !DIExpression()), !dbg !11410
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11411
  %249 = and i32 %248, 268435456, !dbg !11411
  %250 = icmp eq i32 %249, 0, !dbg !11411
  br i1 %250, label %251, label %258, !dbg !11412

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !11413
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !11413
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11153, metadata !DIExpression()), !dbg !11413
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11413
  %254 = or i32 %253, 268435456, !dbg !11413
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11413
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11413
  %256 = and i32 %255, 268435456, !dbg !11413
  store volatile i32 %256, i32* %2, align 4, !dbg !11413
  %257 = load volatile i32, i32* %2, align 4, !dbg !11413
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !11414
  call void @llvm.dbg.value(metadata i32 1, metadata !11149, metadata !DIExpression()), !dbg !11410
  br label %258, !dbg !11415

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !11149, metadata !DIExpression()), !dbg !11410
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11416
  %260 = and i32 %259, 256, !dbg !11416
  %261 = icmp eq i32 %260, 0, !dbg !11416
  br i1 %261, label %262, label %274, !dbg !11418

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11419
  %264 = or i32 %263, 256, !dbg !11419
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11419
  %265 = tail call i32 @HAL_GetTick() #25, !dbg !11421
  call void @llvm.dbg.value(metadata i32 %265, metadata !11145, metadata !DIExpression()), !dbg !11157
  br label %266, !dbg !11422

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11423
  %268 = and i32 %267, 256, !dbg !11423
  %269 = icmp eq i32 %268, 0, !dbg !11423
  br i1 %269, label %270, label %274, !dbg !11422

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #25, !dbg !11424
  %272 = sub i32 %271, %265, !dbg !11427
  %273 = icmp ugt i32 %272, 100, !dbg !11428
  br i1 %273, label %385, label %266, !dbg !11429, !llvm.loop !11430

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11432
  %276 = load i32, i32* %275, align 4, !dbg !11432
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !11435

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11436
  %279 = or i32 %278, 256, !dbg !11436
  br label %295, !dbg !11436

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11438
  %282 = and i32 %281, -257, !dbg !11438
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11438
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11438
  %284 = and i32 %283, -1025, !dbg !11438
  br label %295, !dbg !11438

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11441
  %287 = or i32 %286, 1024, !dbg !11441
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11441
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11441
  %289 = or i32 %288, 256, !dbg !11441
  br label %295, !dbg !11441

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11444
  %292 = and i32 %291, -257, !dbg !11444
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11444
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11444
  %294 = and i32 %293, -1025, !dbg !11444
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11446
  %297 = load i32, i32* %275, align 4, !dbg !11447
  %298 = icmp eq i32 %297, 0, !dbg !11449
  %299 = tail call i32 @HAL_GetTick() #25, !dbg !11450
  call void @llvm.dbg.value(metadata i32 %299, metadata !11145, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 %299, metadata !11145, metadata !DIExpression()), !dbg !11157
  br i1 %298, label %308, label %300, !dbg !11451

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11452
  %302 = and i32 %301, 512, !dbg !11452
  %303 = icmp eq i32 %302, 0, !dbg !11454
  br i1 %303, label %304, label %316, !dbg !11455

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #25, !dbg !11456
  %306 = sub i32 %305, %299, !dbg !11459
  %307 = icmp ugt i32 %306, 5000, !dbg !11460
  br i1 %307, label %385, label %300, !dbg !11461, !llvm.loop !11462

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11464
  %310 = and i32 %309, 512, !dbg !11464
  %311 = icmp eq i32 %310, 0, !dbg !11466
  br i1 %311, label %316, label %312, !dbg !11467

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #25, !dbg !11468
  %314 = sub i32 %313, %299, !dbg !11471
  %315 = icmp ugt i32 %314, 5000, !dbg !11472
  br i1 %315, label %385, label %308, !dbg !11473, !llvm.loop !11474

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !11476

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11477
  %319 = and i32 %318, -268435457, !dbg !11477
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11477
  br label %320, !dbg !11480

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !11481
  %322 = load i32, i32* %321, align 4, !dbg !11481
  %323 = icmp eq i32 %322, 0, !dbg !11483
  br i1 %323, label %384, label %324, !dbg !11484

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !11485
  br i1 %325, label %366, label %326, !dbg !11488

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !11489
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11492
  %328 = tail call i32 @HAL_GetTick() #25, !dbg !11492
  call void @llvm.dbg.value(metadata i32 %328, metadata !11145, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 %328, metadata !11145, metadata !DIExpression()), !dbg !11157
  br i1 %327, label %329, label %358, !dbg !11493

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11494
  %331 = and i32 %330, 33554432, !dbg !11494
  %332 = icmp eq i32 %331, 0, !dbg !11496
  br i1 %332, label %337, label %333, !dbg !11497

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #25, !dbg !11498
  %335 = sub i32 %334, %328, !dbg !11501
  %336 = icmp ugt i32 %335, 2, !dbg !11502
  br i1 %336, label %385, label %329, !dbg !11503, !llvm.loop !11504

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11506
  %339 = and i32 %338, -16580609, !dbg !11506
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11506
  %341 = load i32, i32* %340, align 4, !dbg !11506
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11506
  %343 = load i32, i32* %342, align 4, !dbg !11506
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11506
  %345 = load i32, i32* %344, align 4, !dbg !11506
  %346 = or i32 %339, %341, !dbg !11506
  %347 = or i32 %346, %343, !dbg !11506
  %348 = or i32 %347, %345, !dbg !11506
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11506
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11507
  %349 = tail call i32 @HAL_GetTick() #25, !dbg !11508
  call void @llvm.dbg.value(metadata i32 %349, metadata !11145, metadata !DIExpression()), !dbg !11157
  br label %350, !dbg !11509

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11510
  %352 = and i32 %351, 33554432, !dbg !11510
  %353 = icmp eq i32 %352, 0, !dbg !11511
  br i1 %353, label %354, label %384, !dbg !11509

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #25, !dbg !11512
  %356 = sub i32 %355, %349, !dbg !11515
  %357 = icmp ugt i32 %356, 2, !dbg !11516
  br i1 %357, label %385, label %350, !dbg !11517, !llvm.loop !11518

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11520
  %360 = and i32 %359, 33554432, !dbg !11520
  %361 = icmp eq i32 %360, 0, !dbg !11522
  br i1 %361, label %384, label %362, !dbg !11523

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #25, !dbg !11524
  %364 = sub i32 %363, %328, !dbg !11527
  %365 = icmp ugt i32 %364, 2, !dbg !11528
  br i1 %365, label %385, label %358, !dbg !11529, !llvm.loop !11530

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !11532
  br i1 %367, label %385, label %368, !dbg !11535

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11536
  call void @llvm.dbg.value(metadata i32 %369, metadata !11148, metadata !DIExpression()), !dbg !11157
  %370 = and i32 %369, 65536, !dbg !11538
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11540
  %372 = load i32, i32* %371, align 4, !dbg !11540
  %373 = icmp eq i32 %370, %372, !dbg !11541
  br i1 %373, label %374, label %385, !dbg !11542

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !11543
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11544
  %377 = load i32, i32* %376, align 4, !dbg !11544
  %378 = icmp eq i32 %375, %377, !dbg !11545
  br i1 %378, label %379, label %385, !dbg !11546

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !11547
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11548
  %382 = load i32, i32* %381, align 4, !dbg !11548
  %383 = icmp eq i32 %380, %382, !dbg !11549
  br i1 %383, label %384, label %385, !dbg !11550

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !11551

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !11157
  ret i32 %386, !dbg !11552
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #14 !dbg !11553 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11555, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.value(metadata i32 0, metadata !11557, metadata !DIExpression()), !dbg !11564
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11565
  %4 = and i32 %3, 240, !dbg !11565
  %5 = icmp eq i32 %4, 0, !dbg !11566
  br i1 %5, label %6, label %31, !dbg !11567

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11568
  %8 = and i32 %7, 268435456, !dbg !11568
  %9 = icmp eq i32 %8, 0, !dbg !11568
  br i1 %9, label %12, label %10, !dbg !11569

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11570
  call void @llvm.dbg.value(metadata i32 %11, metadata !11556, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !11564
  br label %22, !dbg !11572

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !11573
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !11573
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11558, metadata !DIExpression()), !dbg !11573
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11573
  %15 = or i32 %14, 268435456, !dbg !11573
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11573
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11573
  %17 = and i32 %16, 268435456, !dbg !11573
  store volatile i32 %17, i32* %2, align 4, !dbg !11573
  %18 = load volatile i32, i32* %2, align 4, !dbg !11573
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !11574
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11575
  call void @llvm.dbg.value(metadata i32 %19, metadata !11556, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !11564
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11576
  %21 = and i32 %20, -268435457, !dbg !11576
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11576
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !11577
  call void @llvm.dbg.value(metadata i32 %24, metadata !11556, metadata !DIExpression()), !dbg !11564
  %25 = icmp eq i32 %24, 6144, !dbg !11578
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !11580
  call void @llvm.dbg.value(metadata i32 undef, metadata !11557, metadata !DIExpression()), !dbg !11564
  br i1 %27, label %28, label %31, !dbg !11581

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11583
  %30 = or i32 %29, 4, !dbg !11583
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11583
  br label %31, !dbg !11583

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11581
  %34 = and i32 %33, -2, !dbg !11581
  %35 = or i32 %34, %32, !dbg !11581
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11581
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11586
  %37 = and i32 %36, 1, !dbg !11586
  %38 = xor i32 %37, %32, !dbg !11564
  ret i32 %38, !dbg !11588
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11589 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11602, metadata !DIExpression()), !dbg !11606
  call void @llvm.dbg.value(metadata i32 %1, metadata !11603, metadata !DIExpression()), !dbg !11606
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11607
  br i1 %3, label %136, label %4, !dbg !11609

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11610
  %6 = and i32 %5, 1, !dbg !11610
  %7 = icmp ult i32 %6, %1, !dbg !11612
  br i1 %7, label %8, label %20, !dbg !11613

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !11614
  br i1 %9, label %10, label %13, !dbg !11618

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11619
  %12 = or i32 %11, 4, !dbg !11619
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11619
  br label %13, !dbg !11619

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11618
  %15 = and i32 %14, -2, !dbg !11618
  %16 = or i32 %15, %1, !dbg !11618
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11618
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11621
  %18 = and i32 %17, 1, !dbg !11621
  %19 = icmp eq i32 %18, %1, !dbg !11623
  br i1 %19, label %20, label %136, !dbg !11624

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11625
  %22 = load i32, i32* %21, align 4, !dbg !11625
  %23 = and i32 %22, 2, !dbg !11627
  %24 = icmp eq i32 %23, 0, !dbg !11628
  br i1 %24, label %32, label %25, !dbg !11629

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11630
  %27 = and i32 %26, -241, !dbg !11630
  %28 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11630
  %29 = load i32, i32* %28, align 4, !dbg !11630
  %30 = or i32 %27, %29, !dbg !11630
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11630
  %31 = load i32, i32* %21, align 4, !dbg !11632
  br label %32, !dbg !11634

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !11632
  %34 = and i32 %33, 1, !dbg !11635
  %35 = icmp eq i32 %34, 0, !dbg !11636
  br i1 %35, label %93, label %36, !dbg !11637

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11638
  %38 = load i32, i32* %37, align 4, !dbg !11638
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !11641

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11642
  %41 = and i32 %40, 131072, !dbg !11642
  %42 = icmp eq i32 %41, 0, !dbg !11645
  br i1 %42, label %136, label %55, !dbg !11646

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11647
  %45 = and i32 %44, 33554432, !dbg !11647
  %46 = icmp eq i32 %45, 0, !dbg !11651
  br i1 %46, label %136, label %55, !dbg !11652

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11653
  %49 = and i32 %48, 2, !dbg !11653
  %50 = icmp eq i32 %49, 0, !dbg !11657
  br i1 %50, label %136, label %55, !dbg !11658

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11659
  %53 = and i32 %52, 512, !dbg !11659
  %54 = icmp eq i32 %53, 0, !dbg !11662
  br i1 %54, label %136, label %55, !dbg !11663

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11664
  %57 = and i32 %56, -4, !dbg !11664
  %58 = or i32 %57, %38, !dbg !11664
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11664
  %59 = tail call i32 @HAL_GetTick() #25, !dbg !11665
  call void @llvm.dbg.value(metadata i32 %59, metadata !11604, metadata !DIExpression()), !dbg !11606
  %60 = load i32, i32* %37, align 4, !dbg !11666
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !11668

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11669
  %63 = and i32 %62, 12, !dbg !11669
  %64 = icmp eq i32 %63, 8, !dbg !11671
  br i1 %64, label %93, label %65, !dbg !11672

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !11673
  %67 = sub i32 %66, %59, !dbg !11676
  %68 = icmp ugt i32 %67, 5000, !dbg !11677
  br i1 %68, label %136, label %61, !dbg !11678, !llvm.loop !11679

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11681
  %71 = and i32 %70, 12, !dbg !11681
  %72 = icmp eq i32 %71, 12, !dbg !11684
  br i1 %72, label %93, label %73, !dbg !11685

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #25, !dbg !11686
  %75 = sub i32 %74, %59, !dbg !11689
  %76 = icmp ugt i32 %75, 5000, !dbg !11690
  br i1 %76, label %136, label %69, !dbg !11691, !llvm.loop !11692

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11694
  %79 = and i32 %78, 12, !dbg !11694
  %80 = icmp eq i32 %79, 4, !dbg !11697
  br i1 %80, label %93, label %81, !dbg !11698

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !11699
  %83 = sub i32 %82, %59, !dbg !11702
  %84 = icmp ugt i32 %83, 5000, !dbg !11703
  br i1 %84, label %136, label %77, !dbg !11704, !llvm.loop !11705

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11707
  %87 = and i32 %86, 12, !dbg !11707
  %88 = icmp eq i32 %87, 0, !dbg !11709
  br i1 %88, label %93, label %89, !dbg !11710

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #25, !dbg !11711
  %91 = sub i32 %90, %59, !dbg !11714
  %92 = icmp ugt i32 %91, 5000, !dbg !11715
  br i1 %92, label %136, label %85, !dbg !11716, !llvm.loop !11717

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11719
  %95 = and i32 %94, 1, !dbg !11719
  %96 = icmp ugt i32 %95, %1, !dbg !11721
  br i1 %96, label %97, label %103, !dbg !11722

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11723
  %99 = and i32 %98, -2, !dbg !11723
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11723
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11726
  %101 = and i32 %100, 1, !dbg !11726
  %102 = icmp eq i32 %101, 0, !dbg !11728
  br i1 %102, label %103, label %136, !dbg !11729

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !11730
  %105 = and i32 %104, 4, !dbg !11732
  %106 = icmp eq i32 %105, 0, !dbg !11733
  br i1 %106, label %114, label %107, !dbg !11734

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11735
  %109 = and i32 %108, -1793, !dbg !11735
  %110 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11735
  %111 = load i32, i32* %110, align 4, !dbg !11735
  %112 = or i32 %109, %111, !dbg !11735
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11735
  %113 = load i32, i32* %21, align 4, !dbg !11737
  br label %114, !dbg !11739

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !11737
  %116 = and i32 %115, 8, !dbg !11740
  %117 = icmp eq i32 %116, 0, !dbg !11741
  br i1 %117, label %125, label %118, !dbg !11742

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11743
  %120 = and i32 %119, -14337, !dbg !11743
  %121 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11743
  %122 = load i32, i32* %121, align 4, !dbg !11743
  %123 = shl i32 %122, 3, !dbg !11743
  %124 = or i32 %123, %120, !dbg !11743
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11743
  br label %125, !dbg !11745

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !11746
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11747
  %128 = lshr i32 %127, 4, !dbg !11748
  %129 = and i32 %128, 15, !dbg !11748
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !11749
  %131 = load i8, i8* %130, align 1, !dbg !11749
  %132 = zext i8 %131 to i32, !dbg !11749
  %133 = lshr i32 %126, %132, !dbg !11750
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !11751
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !11752
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #25, !dbg !11753
  call void @llvm.dbg.value(metadata i32 %135, metadata !11605, metadata !DIExpression()), !dbg !11606
  br label %136, !dbg !11754

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !11606
  ret i32 %137, !dbg !11755
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #16 !dbg !11756 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11764
  call void @llvm.dbg.value(metadata i32 %1, metadata !11758, metadata !DIExpression()), !dbg !11765
  %2 = lshr i32 %1, 2, !dbg !11766
  %3 = and i32 %2, 3, !dbg !11766
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !11766

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !11763, metadata !DIExpression()), !dbg !11765
  br label %26, !dbg !11767

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !11770
  %7 = and i32 %6, 15, !dbg !11770
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !11772
  %9 = load i8, i8* %8, align 1, !dbg !11772
  call void @llvm.dbg.value(metadata i8 %9, metadata !11759, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11765
  %10 = lshr i32 %1, 22, !dbg !11773
  %11 = and i32 %10, 3, !dbg !11773
  %12 = add nuw nsw i32 %11, 1, !dbg !11774
  call void @llvm.dbg.value(metadata i32 %12, metadata !11760, metadata !DIExpression()), !dbg !11765
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11775
  %14 = and i32 %13, 65536, !dbg !11775
  %15 = icmp eq i32 %14, 0, !dbg !11777
  %16 = zext i8 %9 to i32, !dbg !11778
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !11778
  %18 = mul nuw i32 %17, %16, !dbg !11778
  %19 = udiv i32 %18, %12, !dbg !11779
  call void @llvm.dbg.value(metadata i32 %19, metadata !11761, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i32 %19, metadata !11763, metadata !DIExpression()), !dbg !11765
  br label %26, !dbg !11780

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11781
  %23 = lshr i32 %22, 13, !dbg !11783
  %24 = and i32 %23, 7, !dbg !11783
  call void @llvm.dbg.value(metadata i32 %24, metadata !11762, metadata !DIExpression()), !dbg !11765
  %25 = shl nuw nsw i32 65536, %24, !dbg !11784
  call void @llvm.dbg.value(metadata i32 %25, metadata !11763, metadata !DIExpression()), !dbg !11765
  br label %26, !dbg !11785

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !11786
  call void @llvm.dbg.value(metadata i32 %27, metadata !11763, metadata !DIExpression()), !dbg !11765
  ret i32 %27, !dbg !11787
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11788 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11790, metadata !DIExpression()), !dbg !11805
  call void @llvm.dbg.value(metadata i32 %1, metadata !11791, metadata !DIExpression()), !dbg !11805
  call void @llvm.dbg.value(metadata i32 %2, metadata !11792, metadata !DIExpression()), !dbg !11805
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11806
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !11806
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11793, metadata !DIExpression()), !dbg !11807
  %7 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11808
  store i32 2, i32* %7, align 4, !dbg !11809
  %8 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11810
  store i32 2, i32* %8, align 4, !dbg !11811
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11812
  store i32 0, i32* %9, align 4, !dbg !11813
  %10 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11814
  store i32 256, i32* %10, align 4, !dbg !11815
  %11 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11816
  store i32 0, i32* %11, align 4, !dbg !11817
  %12 = bitcast i32* %5 to i8*, !dbg !11818
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !11818
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11803, metadata !DIExpression()), !dbg !11818
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11818
  %14 = or i32 %13, 1, !dbg !11818
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11818
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11818
  %16 = and i32 %15, 1, !dbg !11818
  store volatile i32 %16, i32* %5, align 4, !dbg !11818
  %17 = load volatile i32, i32* %5, align 4, !dbg !11818
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !11819
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11820
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11821
  %19 = and i32 %18, -1996488705, !dbg !11821
  %20 = or i32 %2, %1, !dbg !11821
  %21 = or i32 %20, %19, !dbg !11821
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11821
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !11822
  ret void, !dbg !11822
}

; Function Attrs: optsize
declare !dbg !11823 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11827 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11828
  ret void, !dbg !11829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11830 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11831
  ret void, !dbg !11832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !11833 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11834
  ret i32 %1, !dbg !11835
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11836 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11837
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11838
  %3 = lshr i32 %2, 8, !dbg !11839
  %4 = and i32 %3, 7, !dbg !11839
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11840
  %6 = load i8, i8* %5, align 1, !dbg !11840
  %7 = zext i8 %6 to i32, !dbg !11840
  %8 = lshr i32 %1, %7, !dbg !11841
  ret i32 %8, !dbg !11842
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11843 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11844
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11845
  %3 = lshr i32 %2, 11, !dbg !11846
  %4 = and i32 %3, 7, !dbg !11846
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11847
  %6 = load i8, i8* %5, align 1, !dbg !11847
  %7 = zext i8 %6 to i32, !dbg !11847
  %8 = lshr i32 %1, %7, !dbg !11848
  ret i32 %8, !dbg !11849
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #16 !dbg !11850 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11854, metadata !DIExpression()), !dbg !11855
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11856
  store i32 31, i32* %2, align 4, !dbg !11857
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11858
  %4 = and i32 %3, 262144, !dbg !11860
  %5 = icmp eq i32 %4, 0, !dbg !11861
  br i1 %5, label %8, label %6, !dbg !11862

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11863
  store i32 5, i32* %7, align 4, !dbg !11865
  br label %15, !dbg !11866

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11867
  %10 = and i32 %9, 65536, !dbg !11869
  %11 = icmp eq i32 %10, 0, !dbg !11870
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11871
  br i1 %11, label %14, label %13, !dbg !11872

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !11873
  br label %15, !dbg !11875

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11876
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11878
  %17 = and i32 %16, 1, !dbg !11880
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11881
  store i32 %17, i32* %18, align 4, !dbg !11883
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11884
  %20 = lshr i32 %19, 8, !dbg !11885
  %21 = and i32 %20, 31, !dbg !11885
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11886
  store i32 %21, i32* %22, align 4, !dbg !11887
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11888
  %24 = lshr i32 %23, 8, !dbg !11890
  %25 = and i32 %24, 1, !dbg !11890
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !11891
  store i32 %25, i32* %26, align 4, !dbg !11893
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11894
  %28 = lshr i32 %27, 24, !dbg !11895
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11896
  store i32 %28, i32* %29, align 4, !dbg !11897
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11898
  %31 = and i32 %30, 57344, !dbg !11899
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !11900
  store i32 %31, i32* %32, align 4, !dbg !11901
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11902
  %34 = and i32 %33, 1024, !dbg !11904
  %35 = icmp eq i32 %34, 0, !dbg !11905
  br i1 %35, label %38, label %36, !dbg !11906

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11907
  store i32 5, i32* %37, align 4, !dbg !11909
  br label %45, !dbg !11910

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11911
  %40 = and i32 %39, 256, !dbg !11913
  %41 = icmp eq i32 %40, 0, !dbg !11914
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11915
  br i1 %41, label %44, label %43, !dbg !11916

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !11917
  br label %45, !dbg !11919

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !11920
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11922
  %47 = and i32 %46, 1, !dbg !11924
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11925
  store i32 %47, i32* %48, align 4, !dbg !11927
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11928
  %50 = and i32 %49, 16777216, !dbg !11930
  %51 = icmp eq i32 %50, 0, !dbg !11931
  %52 = select i1 %51, i32 1, i32 2, !dbg !11932
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !11933
  store i32 %52, i32* %53, align 4, !dbg !11935
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11936
  %55 = and i32 %54, 65536, !dbg !11937
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11938
  store i32 %55, i32* %56, align 4, !dbg !11939
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11940
  %58 = and i32 %57, 3932160, !dbg !11941
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11942
  store i32 %58, i32* %59, align 4, !dbg !11943
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11944
  %61 = and i32 %60, 12582912, !dbg !11945
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11946
  store i32 %61, i32* %62, align 4, !dbg !11947
  ret void, !dbg !11948
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11949 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11953, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata i32* %1, metadata !11954, metadata !DIExpression()), !dbg !11955
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11956
  store i32 15, i32* %3, align 4, !dbg !11957
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11958
  %5 = and i32 %4, 3, !dbg !11959
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11960
  store i32 %5, i32* %6, align 4, !dbg !11961
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11962
  %8 = and i32 %7, 240, !dbg !11963
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11964
  store i32 %8, i32* %9, align 4, !dbg !11965
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11966
  %11 = and i32 %10, 1792, !dbg !11967
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11968
  store i32 %11, i32* %12, align 4, !dbg !11969
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11970
  %14 = lshr i32 %13, 3, !dbg !11971
  %15 = and i32 %14, 1792, !dbg !11971
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11972
  store i32 %15, i32* %16, align 4, !dbg !11973
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11974
  %18 = and i32 %17, 1, !dbg !11974
  store i32 %18, i32* %1, align 4, !dbg !11975
  ret void, !dbg !11976
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11977 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11978
  %2 = and i32 %1, 128, !dbg !11978
  %3 = icmp eq i32 %2, 0, !dbg !11978
  br i1 %3, label %5, label %4, !dbg !11980

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !11981
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11983
  br label %5, !dbg !11984

5:                                                ; preds = %4, %0
  ret void, !dbg !11985
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11986 {
  ret void, !dbg !11987
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11988 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11991, metadata !DIExpression()), !dbg !11992
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !11993
  ret void, !dbg !11994
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11998, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i32 1000, metadata !11999, metadata !DIExpression()), !dbg !12000
  %2 = udiv i32 %0, 1000, !dbg !12001
  %3 = add nsw i32 %2, -1, !dbg !12002
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12003
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12004
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12005
  ret void, !dbg !12006
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #14 !dbg !12007 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12009, metadata !DIExpression()), !dbg !12012
  %3 = bitcast i32* %2 to i8*, !dbg !12013
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12013
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12010, metadata !DIExpression()), !dbg !12014
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12015
  store volatile i32 %4, i32* %2, align 4, !dbg !12014
  call void @llvm.dbg.value(metadata i32 %0, metadata !12011, metadata !DIExpression()), !dbg !12012
  %5 = load volatile i32, i32* %2, align 4, !dbg !12016
  %6 = icmp eq i32 %0, -1, !dbg !12017
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12011, metadata !DIExpression()), !dbg !12012
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12012
  call void @llvm.dbg.value(metadata i32 %8, metadata !12011, metadata !DIExpression()), !dbg !12012
  br label %9, !dbg !12019

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12011, metadata !DIExpression()), !dbg !12012
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12020
  call void @llvm.dbg.value(metadata i32 undef, metadata !12011, metadata !DIExpression()), !dbg !12012
  %12 = shl i32 %11, 15, !dbg !12012
  %13 = ashr i32 %12, 31, !dbg !12012
  %14 = add i32 %13, %10, !dbg !12012
  call void @llvm.dbg.value(metadata i32 %14, metadata !12011, metadata !DIExpression()), !dbg !12012
  %15 = icmp eq i32 %14, 0, !dbg !12023
  br i1 %15, label %16, label %9, !dbg !12019

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12024
  ret void, !dbg !12024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12027, metadata !DIExpression()), !dbg !12028
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12029
  ret void, !dbg !12030
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12036, metadata !DIExpression()), !dbg !12039
  call void @llvm.dbg.value(metadata i32 0, metadata !12037, metadata !DIExpression()), !dbg !12039
  call void @llvm.dbg.value(metadata i32 0, metadata !12038, metadata !DIExpression()), !dbg !12039
  %2 = add i32 %0, -32000001, !dbg !12040
  %3 = icmp ult i32 %2, -32000000, !dbg !12040
  br i1 %3, label %22, label %4, !dbg !12040

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12042
  %6 = icmp eq i32 %5, 2048, !dbg !12045
  br i1 %6, label %7, label %9, !dbg !12046

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !12047
  call void @llvm.dbg.value(metadata i32 undef, metadata !12038, metadata !DIExpression()), !dbg !12039
  br i1 %8, label %16, label %17, !dbg !12050

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12051
  %11 = icmp eq i32 %10, 4096, !dbg !12053
  br i1 %11, label %12, label %14, !dbg !12054

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !12055
  call void @llvm.dbg.value(metadata i32 undef, metadata !12038, metadata !DIExpression()), !dbg !12039
  br i1 %13, label %16, label %17, !dbg !12050

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !12058
  call void @llvm.dbg.value(metadata i32 undef, metadata !12038, metadata !DIExpression()), !dbg !12039
  br i1 %15, label %16, label %17, !dbg !12050

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #24, !dbg !12061
  br label %17, !dbg !12064

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #24, !dbg !12065
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12066
  %20 = icmp ne i32 %19, %18, !dbg !12068
  %21 = zext i1 %20 to i32, !dbg !12069
  br label %22, !dbg !12069

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !12039
  call void @llvm.dbg.value(metadata i32 %23, metadata !12037, metadata !DIExpression()), !dbg !12039
  ret i32 %23, !dbg !12070
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12071 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12072
  %2 = and i32 %1, 6144, !dbg !12072
  ret i32 %2, !dbg !12073
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #15 !dbg !12074 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12075
  %2 = or i32 %1, 4, !dbg !12075
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12075
  ret void, !dbg !12076
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12079, metadata !DIExpression()), !dbg !12080
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12081
  %3 = and i32 %2, -2, !dbg !12081
  %4 = or i32 %3, %0, !dbg !12081
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12081
  ret void, !dbg !12082
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12083 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12084
  %2 = and i32 %1, 1, !dbg !12084
  ret i32 %2, !dbg !12085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12086 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12103, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12104, metadata !DIExpression()), !dbg !12107
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12108
  %4 = icmp eq i32 %3, 0, !dbg !12110
  br i1 %4, label %5, label %19, !dbg !12111

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #24, !dbg !12112
  call void @llvm.dbg.value(metadata i32 %6, metadata !12106, metadata !DIExpression()), !dbg !12107
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.181() #24, !dbg !12114
  %8 = icmp eq i32 %7, 1, !dbg !12116
  br i1 %8, label %13, label %9, !dbg !12117

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.182() #24, !dbg !12118
  br label %10, !dbg !12120

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.181() #24, !dbg !12121
  %12 = icmp eq i32 %11, 1, !dbg !12122
  br i1 %12, label %13, label %10, !dbg !12120, !llvm.loop !12123

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !12125
  %15 = load i32, i32* %14, align 4, !dbg !12125
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !12126
  %17 = load i32, i32* %16, align 4, !dbg !12126
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.183(i32 noundef 0, i32 noundef %15, i32 noundef %17) #24, !dbg !12127
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !12128
  call void @llvm.dbg.value(metadata i32 %18, metadata !12105, metadata !DIExpression()), !dbg !12107
  br label %19, !dbg !12129

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !12130
  call void @llvm.dbg.value(metadata i32 %20, metadata !12105, metadata !DIExpression()), !dbg !12107
  ret i32 %20, !dbg !12131
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12132 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12136, metadata !DIExpression()), !dbg !12137
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.185() #24, !dbg !12138
  %2 = icmp ne i32 %1, 0, !dbg !12140
  %3 = zext i1 %2 to i32, !dbg !12141
  call void @llvm.dbg.value(metadata i32 %3, metadata !12136, metadata !DIExpression()), !dbg !12137
  ret i32 %3, !dbg !12142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12147, metadata !DIExpression()), !dbg !12150
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !12148, metadata !DIExpression()), !dbg !12150
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !12151
  %4 = load i32, i32* %3, align 4, !dbg !12151
  %5 = lshr i32 %4, 18, !dbg !12152
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !12153
  %7 = load i8, i8* %6, align 1, !dbg !12153
  %8 = zext i8 %7 to i32, !dbg !12154
  %9 = mul i32 %8, %0, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %9, metadata !12149, metadata !DIExpression()), !dbg !12150
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !12156
  %11 = load i32, i32* %10, align 4, !dbg !12156
  %12 = lshr i32 %11, 22, !dbg !12157
  %13 = add nuw nsw i32 %12, 1, !dbg !12158
  %14 = udiv i32 %9, %13, !dbg !12159
  call void @llvm.dbg.value(metadata i32 %14, metadata !12149, metadata !DIExpression()), !dbg !12150
  ret i32 %14, !dbg !12160
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.181() unnamed_addr #16 !dbg !12161 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12162
  %2 = lshr i32 %1, 1, !dbg !12163
  %3 = and i32 %2, 1, !dbg !12163
  ret i32 %3, !dbg !12164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.182() unnamed_addr #15 !dbg !12165 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12166
  %2 = or i32 %1, 1, !dbg !12166
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12166
  ret void, !dbg !12167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.183(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12170, metadata !DIExpression()), !dbg !12173
  call void @llvm.dbg.value(metadata i32 %1, metadata !12171, metadata !DIExpression()), !dbg !12173
  call void @llvm.dbg.value(metadata i32 %2, metadata !12172, metadata !DIExpression()), !dbg !12173
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12174
  %5 = and i32 %4, -16580609, !dbg !12174
  %6 = or i32 %1, %0, !dbg !12174
  %7 = or i32 %6, %2, !dbg !12174
  %8 = or i32 %7, %5, !dbg !12174
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12174
  ret void, !dbg !12175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12180, metadata !DIExpression()), !dbg !12184
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12181, metadata !DIExpression()), !dbg !12184
  call void @llvm.dbg.value(metadata i32 0, metadata !12182, metadata !DIExpression()), !dbg !12184
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12185
  %4 = load i32, i32* %3, align 4, !dbg !12185
  %5 = lshr i32 %4, 4, !dbg !12185
  %6 = and i32 %5, 15, !dbg !12185
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12185
  %8 = load i8, i8* %7, align 1, !dbg !12185
  %9 = zext i8 %8 to i32, !dbg !12185
  %10 = lshr i32 %0, %9, !dbg !12185
  call void @llvm.dbg.value(metadata i32 %10, metadata !12183, metadata !DIExpression()), !dbg !12184
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12186
  %12 = icmp ult i32 %11, %10, !dbg !12188
  br i1 %12, label %13, label %16, !dbg !12189

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12190
  call void @llvm.dbg.value(metadata i32 %14, metadata !12182, metadata !DIExpression()), !dbg !12184
  %15 = icmp eq i32 %14, 0, !dbg !12192
  br i1 %15, label %16, label %30, !dbg !12194

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.184() #24, !dbg !12195
  br label %17, !dbg !12197

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.185() #24, !dbg !12198
  %19 = icmp eq i32 %18, 1, !dbg !12199
  br i1 %19, label %20, label %17, !dbg !12197, !llvm.loop !12200

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12202
  tail call fastcc void @LL_RCC_SetAHBPrescaler.186(i32 noundef %21) #24, !dbg !12203
  tail call fastcc void @LL_RCC_SetSysClkSource.187() #24, !dbg !12204
  br label %22, !dbg !12205

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.188() #24, !dbg !12206
  %24 = icmp eq i32 %23, 12, !dbg !12207
  br i1 %24, label %25, label %22, !dbg !12205, !llvm.loop !12208

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12210
  %27 = load i32, i32* %26, align 4, !dbg !12210
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.189(i32 noundef %27) #24, !dbg !12211
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12212
  %29 = load i32, i32* %28, align 4, !dbg !12212
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.190(i32 noundef %29) #24, !dbg !12213
  br label %30, !dbg !12214

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12215
  %33 = icmp ugt i32 %32, %10, !dbg !12217
  br i1 %33, label %34, label %36, !dbg !12218

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12219
  call void @llvm.dbg.value(metadata i32 %35, metadata !12182, metadata !DIExpression()), !dbg !12184
  br label %36, !dbg !12221

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12184
  call void @llvm.dbg.value(metadata i32 %37, metadata !12182, metadata !DIExpression()), !dbg !12184
  %38 = icmp eq i32 %37, 0, !dbg !12222
  br i1 %38, label %39, label %40, !dbg !12224

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12225
  br label %40, !dbg !12227

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.184() unnamed_addr #15 !dbg !12229 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12230
  %2 = or i32 %1, 16777216, !dbg !12230
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12230
  ret void, !dbg !12231
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.185() unnamed_addr #16 !dbg !12232 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12233
  %2 = lshr i32 %1, 25, !dbg !12234
  %3 = and i32 %2, 1, !dbg !12234
  ret i32 %3, !dbg !12235
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.186(i32 noundef %0) unnamed_addr #15 !dbg !12236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12238, metadata !DIExpression()), !dbg !12239
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12240
  %3 = and i32 %2, -241, !dbg !12240
  %4 = or i32 %3, %0, !dbg !12240
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12240
  ret void, !dbg !12241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.187() unnamed_addr #15 !dbg !12242 {
  call void @llvm.dbg.value(metadata i32 3, metadata !12244, metadata !DIExpression()), !dbg !12245
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12246
  %2 = or i32 %1, 3, !dbg !12246
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12246
  ret void, !dbg !12247
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.188() unnamed_addr #16 !dbg !12248 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12249
  %2 = and i32 %1, 12, !dbg !12249
  ret i32 %2, !dbg !12250
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.189(i32 noundef %0) unnamed_addr #15 !dbg !12251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12253, metadata !DIExpression()), !dbg !12254
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12255
  %3 = and i32 %2, -1793, !dbg !12255
  %4 = or i32 %3, %0, !dbg !12255
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12255
  ret void, !dbg !12256
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.190(i32 noundef %0) unnamed_addr #15 !dbg !12257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12259, metadata !DIExpression()), !dbg !12260
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12261
  %3 = and i32 %2, -14337, !dbg !12261
  %4 = or i32 %3, %0, !dbg !12261
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12261
  ret void, !dbg !12262
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12267, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.value(metadata i32 %1, metadata !12268, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !12269, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12270, metadata !DIExpression()), !dbg !12273
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12274
  %6 = icmp eq i32 %5, 0, !dbg !12276
  br i1 %6, label %7, label %25, !dbg !12277

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #24, !dbg !12278
  call void @llvm.dbg.value(metadata i32 %8, metadata !12272, metadata !DIExpression()), !dbg !12273
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !12280
  %10 = icmp eq i32 %9, 1, !dbg !12282
  br i1 %10, label %19, label %11, !dbg !12283

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12284
  br i1 %12, label %13, label %14, !dbg !12287

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12288
  br label %15, !dbg !12290

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !12291
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !12293
  br label %16, !dbg !12294

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !12295
  %18 = icmp eq i32 %17, 1, !dbg !12296
  br i1 %18, label %19, label %16, !dbg !12294, !llvm.loop !12297

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !12299
  %21 = load i32, i32* %20, align 4, !dbg !12299
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !12300
  %23 = load i32, i32* %22, align 4, !dbg !12300
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.183(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #24, !dbg !12301
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !12302
  call void @llvm.dbg.value(metadata i32 %24, metadata !12271, metadata !DIExpression()), !dbg !12273
  br label %25, !dbg !12303

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !12304
  call void @llvm.dbg.value(metadata i32 %26, metadata !12271, metadata !DIExpression()), !dbg !12273
  ret i32 %26, !dbg !12305
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !12306 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12307
  %2 = lshr i32 %1, 17, !dbg !12308
  %3 = and i32 %2, 1, !dbg !12308
  ret i32 %3, !dbg !12309
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12310 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12311
  %2 = or i32 %1, 262144, !dbg !12311
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12311
  ret void, !dbg !12312
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !12313 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12314
  %2 = and i32 %1, -262145, !dbg !12314
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12314
  ret void, !dbg !12315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !12316 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12317
  %2 = or i32 %1, 65536, !dbg !12317
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12317
  ret void, !dbg !12318
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12319 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12322, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i32 undef, metadata !12322, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i32 undef, metadata !12322, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12338
  ret void, !dbg !12339
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12340 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12344, metadata !DIExpression()), !dbg !12346
  %2 = icmp eq i8* %0, null, !dbg !12347
  br i1 %2, label %29, label %3, !dbg !12349

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12350
  %5 = icmp eq i8 %4, 0, !dbg !12351
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12352
  br i1 %6, label %29, label %8, !dbg !12352

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12345, metadata !DIExpression()), !dbg !12346
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12353

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12345, metadata !DIExpression()), !dbg !12346
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !12355
  br i1 %10, label %11, label %15, !dbg !12360

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12361
  %13 = load i8*, i8** %12, align 4, !dbg !12361
  %14 = icmp eq i8* %13, %0, !dbg !12362
  br i1 %14, label %29, label %15, !dbg !12363

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12364
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12345, metadata !DIExpression()), !dbg !12346
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12365
  br i1 %17, label %7, label %8, !dbg !12366, !llvm.loop !12367

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12345, metadata !DIExpression()), !dbg !12346
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !12369
  br i1 %20, label %21, label %26, !dbg !12373

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12374
  %23 = load i8*, i8** %22, align 4, !dbg !12374
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !12375
  %25 = icmp eq i32 %24, 0, !dbg !12376
  br i1 %25, label %29, label %26, !dbg !12377

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12378
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12345, metadata !DIExpression()), !dbg !12346
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12379
  br i1 %28, label %29, label %18, !dbg !12353, !llvm.loop !12380

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12346
  ret %struct.device* %30, !dbg !12382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !12383 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12387, metadata !DIExpression()), !dbg !12388
  %2 = icmp eq %struct.device* %0, null, !dbg !12389
  br i1 %2, label %14, label %3, !dbg !12391

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12392
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12392
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12393
  %7 = load i8, i8* %6, align 1, !dbg !12393
  %8 = and i8 %7, 1, !dbg !12393
  %9 = icmp eq i8 %8, 0, !dbg !12393
  br i1 %9, label %14, label %10, !dbg !12394

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12395
  %12 = load i8, i8* %11, align 1, !dbg !12395
  %13 = icmp eq i8 %12, 0, !dbg !12396
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12388
  ret i1 %15, !dbg !12397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !12398 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12403, metadata !DIExpression()), !dbg !12404
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12405
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12406
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12407 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12415, metadata !DIExpression()), !dbg !12420
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12416, metadata !DIExpression()), !dbg !12420
  call void @llvm.dbg.value(metadata i8* %2, metadata !12417, metadata !DIExpression()), !dbg !12420
  %5 = bitcast i32* %4 to i8*, !dbg !12421
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12421
  call void @llvm.dbg.value(metadata i32 0, metadata !12418, metadata !DIExpression()), !dbg !12420
  store i32 0, i32* %4, align 4, !dbg !12422
  call void @llvm.dbg.value(metadata i32* %4, metadata !12418, metadata !DIExpression(DW_OP_deref)), !dbg !12420
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12423
  call void @llvm.dbg.value(metadata i16* %6, metadata !12419, metadata !DIExpression()), !dbg !12420
  %7 = load i32, i32* %4, align 4, !dbg !12424
  call void @llvm.dbg.value(metadata i32 %7, metadata !12418, metadata !DIExpression()), !dbg !12420
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12425
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12426
  ret i32 %8, !dbg !12427
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12428 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12432, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32* %1, metadata !12433, metadata !DIExpression()), !dbg !12438
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12439
  %4 = load i16*, i16** %3, align 4, !dbg !12439
  call void @llvm.dbg.value(metadata i16* %4, metadata !12434, metadata !DIExpression()), !dbg !12438
  %5 = icmp eq i16* %4, null, !dbg !12440
  br i1 %5, label %14, label %6, !dbg !12441

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12442
  call void @llvm.dbg.value(metadata i32 %7, metadata !12435, metadata !DIExpression()), !dbg !12442
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12443
  %9 = load i16, i16* %8, align 2, !dbg !12443
  %10 = add i16 %9, -32767, !dbg !12444
  %11 = icmp ult i16 %10, 2, !dbg !12444
  %12 = add i32 %7, 1, !dbg !12445
  call void @llvm.dbg.value(metadata i32 %12, metadata !12435, metadata !DIExpression()), !dbg !12442
  br i1 %11, label %13, label %6, !dbg !12444, !llvm.loop !12447

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12450
  br label %14, !dbg !12451

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12453 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12457, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 %1, metadata !12458, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12459, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i8* %3, metadata !12460, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 0, metadata !12461, metadata !DIExpression()), !dbg !12469
  %5 = icmp eq i32 %1, 0, !dbg !12470
  br i1 %5, label %16, label %8, !dbg !12471

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12461, metadata !DIExpression()), !dbg !12469
  %7 = icmp eq i32 %15, %1, !dbg !12470
  br i1 %7, label %16, label %8, !dbg !12471, !llvm.loop !12472

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12461, metadata !DIExpression()), !dbg !12469
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12474
  %11 = load i16, i16* %10, align 2, !dbg !12474
  call void @llvm.dbg.value(metadata i16 %11, metadata !12463, metadata !DIExpression()), !dbg !12475
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !12476
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12466, metadata !DIExpression()), !dbg !12475
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !12477
  call void @llvm.dbg.value(metadata i32 %13, metadata !12467, metadata !DIExpression()), !dbg !12475
  %14 = icmp slt i32 %13, 0, !dbg !12478
  %15 = add nuw i32 %9, 1, !dbg !12480
  call void @llvm.dbg.value(metadata i32 %15, metadata !12461, metadata !DIExpression()), !dbg !12469
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #3 !dbg !12482 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12486, metadata !DIExpression()), !dbg !12489
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12487, metadata !DIExpression()), !dbg !12489
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12488, metadata !DIExpression()), !dbg !12489
  %2 = sext i16 %0 to i32, !dbg !12490
  %3 = icmp slt i16 %0, 1, !dbg !12492
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12493
  %6 = add nsw i32 %2, -1, !dbg !12493
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12493
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12493
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12487, metadata !DIExpression()), !dbg !12489
  ret %struct.device* %8, !dbg !12494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12495 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12497, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12498, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.value(metadata i8* %2, metadata !12499, metadata !DIExpression()), !dbg !12502
  %5 = bitcast i32* %4 to i8*, !dbg !12503
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12503
  call void @llvm.dbg.value(metadata i32 0, metadata !12500, metadata !DIExpression()), !dbg !12502
  store i32 0, i32* %4, align 4, !dbg !12504
  call void @llvm.dbg.value(metadata i32* %4, metadata !12500, metadata !DIExpression(DW_OP_deref)), !dbg !12502
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12505
  call void @llvm.dbg.value(metadata i16* %6, metadata !12501, metadata !DIExpression()), !dbg !12502
  %7 = load i32, i32* %4, align 4, !dbg !12506
  call void @llvm.dbg.value(metadata i32 %7, metadata !12500, metadata !DIExpression()), !dbg !12502
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12507
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12508
  ret i32 %8, !dbg !12509
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12510 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12512, metadata !DIExpression()), !dbg !12517
  call void @llvm.dbg.value(metadata i32* %1, metadata !12513, metadata !DIExpression()), !dbg !12517
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12518
  %4 = load i16*, i16** %3, align 4, !dbg !12518
  call void @llvm.dbg.value(metadata i16* %4, metadata !12514, metadata !DIExpression()), !dbg !12517
  call void @llvm.dbg.value(metadata i32 0, metadata !12515, metadata !DIExpression()), !dbg !12517
  call void @llvm.dbg.value(metadata i32 0, metadata !12516, metadata !DIExpression()), !dbg !12517
  %5 = icmp eq i16* %4, null, !dbg !12519
  br i1 %5, label %22, label %6, !dbg !12521

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12515, metadata !DIExpression()), !dbg !12517
  call void @llvm.dbg.value(metadata i16* %8, metadata !12514, metadata !DIExpression()), !dbg !12517
  %9 = load i16, i16* %8, align 2, !dbg !12522
  %10 = icmp eq i16 %9, -32768, !dbg !12526
  call void @llvm.dbg.value(metadata i32 undef, metadata !12515, metadata !DIExpression()), !dbg !12517
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12527
  call void @llvm.dbg.value(metadata i16* %11, metadata !12514, metadata !DIExpression()), !dbg !12517
  %12 = zext i1 %10 to i32, !dbg !12528
  %13 = add i32 %7, %12, !dbg !12528
  call void @llvm.dbg.value(metadata i32 %13, metadata !12515, metadata !DIExpression()), !dbg !12517
  %14 = icmp eq i32 %13, 2, !dbg !12529
  br i1 %14, label %15, label %6, !dbg !12530

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12517
  call void @llvm.dbg.value(metadata i32 %16, metadata !12516, metadata !DIExpression()), !dbg !12517
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12531
  %18 = load i16, i16* %17, align 2, !dbg !12531
  %19 = icmp eq i16 %18, 32767, !dbg !12532
  %20 = add i32 %16, 1, !dbg !12533
  call void @llvm.dbg.value(metadata i32 %20, metadata !12516, metadata !DIExpression()), !dbg !12517
  br i1 %19, label %21, label %15, !dbg !12535, !llvm.loop !12536

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12538
  br label %22, !dbg !12539

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12540
  call void @llvm.dbg.value(metadata i16* %23, metadata !12514, metadata !DIExpression()), !dbg !12517
  ret i16* %23, !dbg !12541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !12542 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12545
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12546
  ret i32* %2, !dbg !12547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #3 !dbg !12548 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12699, metadata !DIExpression()), !dbg !12702
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12700, metadata !DIExpression()), !dbg !12702
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12701, metadata !DIExpression()), !dbg !12702
  ret void, !dbg !12703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !12704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12708, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.value(metadata i32 %1, metadata !12709, metadata !DIExpression()), !dbg !12710
  ret void, !dbg !12711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !12712 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12716, metadata !DIExpression()), !dbg !12718
  call void @llvm.dbg.value(metadata i32 %1, metadata !12717, metadata !DIExpression()), !dbg !12718
  ret void, !dbg !12719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !12720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12724, metadata !DIExpression()), !dbg !12726
  call void @llvm.dbg.value(metadata i8* %1, metadata !12725, metadata !DIExpression()), !dbg !12726
  ret i32 -134, !dbg !12727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !12728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12732, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.value(metadata i8* %1, metadata !12733, metadata !DIExpression()), !dbg !12734
  ret i32 -134, !dbg !12735
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12739, metadata !DIExpression()), !dbg !12740
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12741, !srcloc !12747
  call void @llvm.dbg.value(metadata i32 undef, metadata !12744, metadata !DIExpression()) #23, !dbg !12748
  call void @llvm.dbg.value(metadata i32 undef, metadata !12745, metadata !DIExpression()) #23, !dbg !12748
  br label %3, !dbg !12749

3:                                                ; preds = %3, %1
  br label %3, !dbg !12750, !llvm.loop !12753
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12760, metadata !DIExpression()), !dbg !12762
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12761, metadata !DIExpression()), !dbg !12762
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.195, i32 0, i32 0), i32 noundef 69) #25, !dbg !12763
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12768
  unreachable, !dbg !12768
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12771, metadata !DIExpression()), !dbg !12772
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12773
  unreachable, !dbg !12773
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12776, metadata !DIExpression()), !dbg !12780
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12777, metadata !DIExpression()), !dbg !12780
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12781, !srcloc !12747
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12781
  call void @llvm.dbg.value(metadata i32 %4, metadata !12744, metadata !DIExpression()) #23, !dbg !12783
  call void @llvm.dbg.value(metadata i32 undef, metadata !12745, metadata !DIExpression()) #23, !dbg !12783
  call void @llvm.dbg.value(metadata i32 %4, metadata !12778, metadata !DIExpression()), !dbg !12780
  %5 = tail call fastcc %struct.k_thread* @k_current_get.198() #26, !dbg !12784
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12779, metadata !DIExpression()), !dbg !12780
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !12785
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.199, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !12785
  %7 = icmp eq %struct.__esf* %1, null, !dbg !12790
  br i1 %7, label %20, label %8, !dbg !12792

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12793, metadata !DIExpression()), !dbg !12798
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12800
  %10 = load i32, i32* %9, align 4, !dbg !12800
  %11 = and i32 %10, 511, !dbg !12801
  %12 = icmp eq i32 %11, 0, !dbg !12802
  br i1 %12, label %14, label %13, !dbg !12803

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.200, i32 0, i32 0), i32 noundef 69) #25, !dbg !12804
  br label %14, !dbg !12810

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12811
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.201, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !12811
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !12816
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12793, metadata !DIExpression()), !dbg !12817
  %16 = load i32, i32* %9, align 4, !dbg !12822
  %17 = and i32 %16, 511, !dbg !12823
  %18 = icmp eq i32 %17, 0, !dbg !12824
  br i1 %18, label %22, label %19, !dbg !12825

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !12826, metadata !DIExpression()) #23, !dbg !12829
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12832, !srcloc !12833
  br label %25, !dbg !12834

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12811
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.201, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !12811
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !12816
  br label %22, !dbg !12835

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !12836
  call void @llvm.dbg.value(metadata i32 %4, metadata !12826, metadata !DIExpression()) #23, !dbg !12839
  call void @llvm.dbg.value(metadata i32 %4, metadata !12826, metadata !DIExpression()) #23, !dbg !12842
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12780
  br i1 %23, label %25, label %24, !dbg !12844

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.202(%struct.k_thread* noundef %5) #24, !dbg !12845
  br label %25, !dbg !12848

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !12848
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.198() unnamed_addr #11 !dbg !12849 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.210() #26, !dbg !12853
  ret %struct.k_thread* %1, !dbg !12854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #3 !dbg !12855 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12859, metadata !DIExpression()), !dbg !12860
  %2 = icmp ult i32 %0, 5, !dbg !12861
  br i1 %2, label %3, label %6, !dbg !12861

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12861
  %5 = load i8*, i8** %4, align 4, !dbg !12861
  br label %6, !dbg !12861

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.204, i32 0, i32 0), %1 ], !dbg !12862
  ret i8* %7, !dbg !12864
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12865 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12869, metadata !DIExpression()), !dbg !12871
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12872
  br i1 %2, label %9, label %3, !dbg !12873

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !12874
  call void @llvm.dbg.value(metadata i8* %4, metadata !12870, metadata !DIExpression()), !dbg !12871
  %5 = icmp eq i8* %4, null, !dbg !12875
  br i1 %5, label %9, label %6, !dbg !12877

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12878
  %8 = icmp eq i8 %7, 0, !dbg !12879
  br i1 %8, label %9, label %10, !dbg !12880

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.203, i32 0, i32 0), metadata !12870, metadata !DIExpression()), !dbg !12871
  br label %10, !dbg !12881

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.203, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12871
  call void @llvm.dbg.value(metadata i8* %11, metadata !12870, metadata !DIExpression()), !dbg !12871
  ret i8* %11, !dbg !12883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.202(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12884 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12888, metadata !DIExpression()), !dbg !12889
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12890, !srcloc !12892
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12893
  ret void, !dbg !12894
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.210() unnamed_addr #11 !dbg !12895 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12896, !srcloc !12898
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12899
  ret %struct.k_thread* %1, !dbg !12900
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12901 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12905, metadata !DIExpression()), !dbg !12908
  call void @llvm.dbg.value(metadata i32 %1, metadata !12906, metadata !DIExpression()), !dbg !12908
  call void @llvm.dbg.value(metadata i32 %2, metadata !12907, metadata !DIExpression()), !dbg !12908
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12909
  ret void, !dbg !12910
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12911 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12915, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.value(metadata i8* %1, metadata !12916, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.value(metadata i32 %2, metadata !12917, metadata !DIExpression()), !dbg !12918
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12919
  ret void, !dbg !12920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12921 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !12922
  ret void, !dbg !12923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12926, metadata !DIExpression()), !dbg !12927
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !12928
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12929
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12930
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12931
  %4 = trunc i32 %0 to i8, !dbg !12932
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12933
  store i8 %4, i8* %5, align 4, !dbg !12934
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12935
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !12936
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12937
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12938
  store i8* %8, i8** %9, align 4, !dbg !12939
  ret void, !dbg !12940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12943, metadata !DIExpression()), !dbg !12949
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12950
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12944, metadata !DIExpression()), !dbg !12949
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12951
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12945, metadata !DIExpression()), !dbg !12949
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.217, i32 0, i32 0), metadata !12948, metadata !DIExpression()), !dbg !12949
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12952
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12953
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.217, i32 0, i32 0)) #25, !dbg !12954
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !12955
  ret void, !dbg !12956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !12957 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12961, metadata !DIExpression()), !dbg !12962
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12963
  ret i8* %2, !dbg !12964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12965 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12970, metadata !DIExpression()), !dbg !12971
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12972
  %3 = load i8, i8* %2, align 1, !dbg !12973
  %4 = and i8 %3, -5, !dbg !12973
  store i8 %4, i8* %2, align 1, !dbg !12973
  ret void, !dbg !12974
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !12975 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !12978
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12979
  %3 = ptrtoint i8* %2 to i32, !dbg !12988
  %4 = add i32 %3, 2048, !dbg !12989
  call void @llvm.dbg.value(metadata i32 %4, metadata !12983, metadata !DIExpression()) #23, !dbg !12990
  call void @llvm.dbg.value(metadata i32 %4, metadata !12991, metadata !DIExpression()) #23, !dbg !12994
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12996, !srcloc !12997
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12998
  %6 = or i32 %5, 512, !dbg !12998
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12998
  tail call fastcc void @__NVIC_SetPriority.220(i32 noundef -2, i32 noundef 255) #25, !dbg !12999
  tail call fastcc void @__NVIC_SetPriority.220(i32 noundef -5, i32 noundef 0) #25, !dbg !13002
  tail call fastcc void @__NVIC_SetPriority.220(i32 noundef -12, i32 noundef 0) #25, !dbg !13003
  tail call fastcc void @__NVIC_SetPriority.220(i32 noundef -11, i32 noundef 0) #25, !dbg !13004
  tail call fastcc void @__NVIC_SetPriority.220(i32 noundef -10, i32 noundef 0) #25, !dbg !13005
  tail call fastcc void @__NVIC_SetPriority.220(i32 noundef -4, i32 noundef 0) #25, !dbg !13006
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13007
  %8 = or i32 %7, 458752, !dbg !13007
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13007
  tail call void @z_arm_fault_init() #25, !dbg !13008
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13009
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13010
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13013
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13014
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13015
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13016
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13016
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12977, metadata !DIExpression()), !dbg !13017
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13018
  call void @z_device_state_init() #25, !dbg !13019
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13020
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13021
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13022
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13023
  unreachable, !dbg !13023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2081, metadata !DIExpression()), !dbg !13024
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13025
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13025
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2082, metadata !DIExpression()), !dbg !13024
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2082, metadata !DIExpression()), !dbg !13024
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13026
  br i1 %7, label %8, label %35, !dbg !13027

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2082, metadata !DIExpression()), !dbg !13024
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13028
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13028
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2092, metadata !DIExpression()), !dbg !13029
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13030
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13030
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13031
  call void @llvm.dbg.value(metadata i32 %14, metadata !2096, metadata !DIExpression()), !dbg !13029
  %15 = icmp eq %struct.device* %11, null, !dbg !13032
  br i1 %15, label %32, label %16, !dbg !13034

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13035
  br i1 %17, label %26, label %18, !dbg !13038

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13039
  call void @llvm.dbg.value(metadata i32 %19, metadata !2096, metadata !DIExpression()), !dbg !13029
  %20 = icmp ult i32 %19, 255, !dbg !13041
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13041
  call void @llvm.dbg.value(metadata i32 %21, metadata !2096, metadata !DIExpression()), !dbg !13029
  %22 = trunc i32 %21 to i8, !dbg !13042
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13043
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13043
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13044
  store i8 %22, i8* %25, align 1, !dbg !13045
  br label %26, !dbg !13046

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13047
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13047
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13048
  %30 = load i8, i8* %29, align 1, !dbg !13049
  %31 = or i8 %30, 1, !dbg !13049
  store i8 %31, i8* %29, align 1, !dbg !13049
  br label %32, !dbg !13050

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13051
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2082, metadata !DIExpression()), !dbg !13024
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13026
  br i1 %34, label %8, label %35, !dbg !13027, !llvm.loop !13052

35:                                               ; preds = %32, %1
  ret void, !dbg !13054
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.220(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13057, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata i32 %1, metadata !13058, metadata !DIExpression()), !dbg !13059
  %3 = trunc i32 %1 to i8, !dbg !13060
  %4 = shl i8 %3, 4, !dbg !13060
  %5 = and i32 %0, 15, !dbg !13063
  %6 = add nsw i32 %5, -4, !dbg !13064
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13065
  store volatile i8 %4, i8* %7, align 1, !dbg !13066
  ret void, !dbg !13067
}

; Function Attrs: optsize
declare !dbg !13068 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13069 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13072, metadata !DIExpression()), !dbg !13073
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13074
  store i8 1, i8* %2, align 1, !dbg !13075
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13076
  store i8 1, i8* %3, align 4, !dbg !13077
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13078
  store i32 0, i32* %4, align 4, !dbg !13079
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13080
  store i32 0, i32* %5, align 4, !dbg !13081
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13082
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13083
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13084
  ret void, !dbg !13085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13086 {
  tail call void @z_sched_init() #25, !dbg !13091
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13092
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.221, i32 0, i32 0)) #25, !dbg !13093
  call void @llvm.dbg.value(metadata i8* %1, metadata !13090, metadata !DIExpression()), !dbg !13094
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13095
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13096
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13097
  ret i8* %1, !dbg !13098
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13099 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13103, metadata !DIExpression()), !dbg !13104
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13105
  unreachable, !dbg !13106
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13107 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13109, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.value(metadata i8* %1, metadata !13110, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.value(metadata i8* %2, metadata !13111, metadata !DIExpression()), !dbg !13112
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13113
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13114
  tail call void @boot_banner() #25, !dbg !13115
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13116
  tail call void @z_init_static_threads() #25, !dbg !13117
  tail call void @main() #25, !dbg !13118
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13119
  %5 = and i8 %4, -2, !dbg !13119
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13119
  ret void, !dbg !13120
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !13121 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13131, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata i8* %1, metadata !13132, metadata !DIExpression()), !dbg !13133
  ret void, !dbg !13134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !13135 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13137, metadata !DIExpression()), !dbg !13139
  call void @llvm.dbg.value(metadata i8* %1, metadata !13138, metadata !DIExpression()), !dbg !13139
  ret void, !dbg !13140
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13141 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13142, !srcloc !13149
  call void @llvm.dbg.value(metadata i32 %1, metadata !13145, metadata !DIExpression()) #23, !dbg !13150
  %2 = icmp ne i32 %1, 0, !dbg !13151
  ret i1 %2, !dbg !13152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13153 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13154
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13155
  %3 = load i8, i8* %2, align 4, !dbg !13156
  %4 = or i8 %3, 1, !dbg !13156
  store i8 %4, i8* %2, align 4, !dbg !13156
  ret void, !dbg !13157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13158 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13159
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13160
  %3 = load i8, i8* %2, align 4, !dbg !13161
  %4 = and i8 %3, -2, !dbg !13161
  store i8 %4, i8* %2, align 4, !dbg !13161
  ret void, !dbg !13162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13163 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13164
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13165
  %3 = load i8, i8* %2, align 4, !dbg !13165
  %4 = and i8 %3, 1, !dbg !13166
  %5 = icmp ne i8 %4, 0, !dbg !13167
  ret i1 %5, !dbg !13168
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13169 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13173, metadata !DIExpression()), !dbg !13175
  call void @llvm.dbg.value(metadata i8* %1, metadata !13174, metadata !DIExpression()), !dbg !13175
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13176
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13178
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13173, metadata !DIExpression()), !dbg !13175
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13179
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13180
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13181
  store i8 0, i8* %8, align 1, !dbg !13182
  ret i32 0, !dbg !13183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #3 !dbg !13184 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13188, metadata !DIExpression()), !dbg !13189
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13190
  ret i8* %2, !dbg !13191
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13192 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13196, metadata !DIExpression()), !dbg !13199
  call void @llvm.dbg.value(metadata i8* %1, metadata !13197, metadata !DIExpression()), !dbg !13199
  call void @llvm.dbg.value(metadata i32 %2, metadata !13198, metadata !DIExpression()), !dbg !13199
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13200
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13201
  ret i32 0, !dbg !13202
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2105 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2222, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i8* %1, metadata !2223, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i32 %2, metadata !2224, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i32 0, metadata !2225, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i8 undef, metadata !2227, metadata !DIExpression()), !dbg !13203
  %4 = icmp eq i8* %1, null, !dbg !13204
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13206
  br i1 %6, label %46, label %7, !dbg !13206

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13207
  %9 = load i8, i8* %8, align 1, !dbg !13207
  call void @llvm.dbg.value(metadata i8 %9, metadata !2227, metadata !DIExpression()), !dbg !13203
  %10 = add i32 %2, -1, !dbg !13208
  call void @llvm.dbg.value(metadata i32 %10, metadata !2224, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i8 0, metadata !2228, metadata !DIExpression()), !dbg !13209
  call void @llvm.dbg.value(metadata i8 %9, metadata !2227, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i32 0, metadata !2225, metadata !DIExpression()), !dbg !13203
  %11 = icmp eq i8 %9, 0, !dbg !13210
  br i1 %11, label %12, label %15, !dbg !13212

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13213
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13214
  store i8 0, i8* %14, align 1, !dbg !13215
  br label %46, !dbg !13216

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2228, metadata !DIExpression()), !dbg !13209
  call void @llvm.dbg.value(metadata i8 %17, metadata !2227, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i32 %18, metadata !2225, metadata !DIExpression()), !dbg !13203
  %19 = zext i8 %17 to i32, !dbg !13217
  %20 = zext i8 %16 to i32, !dbg !13218
  %21 = shl nuw i32 1, %20, !dbg !13218
  call void @llvm.dbg.value(metadata i32 %21, metadata !2226, metadata !DIExpression()), !dbg !13203
  %22 = and i32 %21, %19, !dbg !13220
  %23 = icmp eq i32 %22, 0, !dbg !13222
  br i1 %23, label %42, label %24, !dbg !13223

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13224
  %26 = sub i32 %10, %18, !dbg !13225
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13226
  %28 = load i8*, i8** %27, align 4, !dbg !13226
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13227
  %30 = load i32, i32* %29, align 4, !dbg !13227
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13228
  %32 = add i32 %31, %18, !dbg !13229
  call void @llvm.dbg.value(metadata i32 %32, metadata !2225, metadata !DIExpression()), !dbg !13203
  %33 = trunc i32 %21 to i8, !dbg !13230
  %34 = xor i8 %33, -1, !dbg !13230
  %35 = and i8 %17, %34, !dbg !13230
  call void @llvm.dbg.value(metadata i8 %35, metadata !2227, metadata !DIExpression()), !dbg !13203
  %36 = icmp eq i8 %35, 0, !dbg !13231
  br i1 %36, label %12, label %37, !dbg !13233

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13234
  %39 = sub i32 %10, %32, !dbg !13236
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.224, i32 0, i32 0), i32 noundef 1) #24, !dbg !13237
  %41 = add i32 %40, %32, !dbg !13238
  call void @llvm.dbg.value(metadata i32 %41, metadata !2225, metadata !DIExpression()), !dbg !13203
  br label %42, !dbg !13239

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13203
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13203
  call void @llvm.dbg.value(metadata i8 %44, metadata !2227, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i32 %43, metadata !2225, metadata !DIExpression()), !dbg !13203
  %45 = add i8 %16, 1, !dbg !13240
  call void @llvm.dbg.value(metadata i8 %45, metadata !2228, metadata !DIExpression()), !dbg !13209
  br label %15, !dbg !13212

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.225, i32 0, i32 0), %3 ], !dbg !13203
  ret i8* %47, !dbg !13241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13242 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13246, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i32 %1, metadata !13247, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i8* %2, metadata !13248, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i32 %3, metadata !13249, metadata !DIExpression()), !dbg !13251
  %5 = icmp ult i32 %1, %3, !dbg !13252
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13252
  call void @llvm.dbg.value(metadata i32 %6, metadata !13250, metadata !DIExpression()), !dbg !13251
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13253
  ret i32 %6, !dbg !13254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13255 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13259, metadata !DIExpression()), !dbg !13260
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13261
  ret void, !dbg !13262
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13263 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13272, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13273, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.value(metadata i32 %2, metadata !13274, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13275, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.value(metadata i8* %4, metadata !13276, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.value(metadata i8* %5, metadata !13277, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.value(metadata i8* %6, metadata !13278, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.value(metadata i32 %7, metadata !13279, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.value(metadata i32 %8, metadata !13280, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.value(metadata i8* %9, metadata !13281, metadata !DIExpression()), !dbg !13283
  %11 = icmp eq i32 %7, 15, !dbg !13284
  br i1 %11, label %12, label %15, !dbg !13284

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13284
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13284
  br i1 %14, label %19, label %18, !dbg !13284

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13284
  %17 = icmp ult i32 %16, 31, !dbg !13284
  br i1 %17, label %19, label %18, !dbg !13284

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 536) #25, !dbg !13288
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.238, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13288
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 536) #25, !dbg !13288
  unreachable, !dbg !13288

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13290
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !13291
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13292
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13293
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13294
  call void @llvm.dbg.value(metadata i8* %22, metadata !13282, metadata !DIExpression()), !dbg !13283
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13295
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13296
  store i8* null, i8** %23, align 4, !dbg !13297
  %24 = icmp eq i8* %9, null, !dbg !13298
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13300
  br i1 %24, label %29, label %26, !dbg !13301

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13302
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13304
  store i8 0, i8* %28, align 1, !dbg !13305
  br label %30, !dbg !13306

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13307
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13309
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13309
  br i1 %32, label %36, label %33, !dbg !13311

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13312
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13312
  br label %36, !dbg !13313

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13283
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13314
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13316
  ret i8* %22, !dbg !13317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #3 !dbg !13318 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13322, metadata !DIExpression()), !dbg !13323
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13324
  ret i1 %2, !dbg !13325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13326 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13331, metadata !DIExpression()), !dbg !13332
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13333
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13334
  ret void, !dbg !13335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13336 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13341, metadata !DIExpression()), !dbg !13345
  call void @llvm.dbg.value(metadata i32 %1, metadata !13342, metadata !DIExpression()), !dbg !13345
  call void @llvm.dbg.value(metadata i32 %2, metadata !13343, metadata !DIExpression()), !dbg !13345
  call void @llvm.dbg.value(metadata i32 %3, metadata !13344, metadata !DIExpression()), !dbg !13345
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13346
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13347
  %6 = trunc i32 %3 to i8, !dbg !13348
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13349
  store i8 %6, i8* %7, align 4, !dbg !13350
  %8 = trunc i32 %2 to i8, !dbg !13351
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13352
  store i8 %8, i8* %9, align 1, !dbg !13353
  %10 = trunc i32 %1 to i8, !dbg !13354
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13355
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13355
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13355
  store i8 %10, i8* %13, align 2, !dbg !13356
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13357
  store i8 0, i8* %14, align 1, !dbg !13358
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !13359
  ret void, !dbg !13360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !13361 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13365, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13366, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata i32 %2, metadata !13367, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata i32 0, metadata !13372, metadata !DIExpression()), !dbg !13373
  %4 = add i32 %2, 7, !dbg !13374
  %5 = and i32 %4, -8, !dbg !13374
  %6 = add i32 %5, 64, !dbg !13374
  call void @llvm.dbg.value(metadata i32 %6, metadata !13368, metadata !DIExpression()), !dbg !13373
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.239(%struct.z_thread_stack_element* noundef %1) #24, !dbg !13376
  call void @llvm.dbg.value(metadata i8* %7, metadata !13371, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata i32 %5, metadata !13369, metadata !DIExpression()), !dbg !13373
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13377
  call void @llvm.dbg.value(metadata i8* %8, metadata !13370, metadata !DIExpression()), !dbg !13373
  call void @llvm.dbg.value(metadata i32 0, metadata !13372, metadata !DIExpression()), !dbg !13373
  %9 = ptrtoint i8* %7 to i32, !dbg !13378
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13379
  store i32 %9, i32* %10, align 4, !dbg !13380
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13381
  store i32 %5, i32* %11, align 4, !dbg !13382
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13383
  store i32 0, i32* %12, align 4, !dbg !13384
  call void @llvm.dbg.value(metadata i8* %8, metadata !13370, metadata !DIExpression()), !dbg !13373
  ret i8* %8, !dbg !13385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.239(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !13386 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13390, metadata !DIExpression()), !dbg !13391
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13392
  ret i8* %2, !dbg !13393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13394 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13399, metadata !DIExpression()), !dbg !13400
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13401
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13402
  ret void, !dbg !13403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13404 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13406, metadata !DIExpression()), !dbg !13407
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13408
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !13409
  ret void, !dbg !13410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13411 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13415, metadata !DIExpression()), !dbg !13416
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13417
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13418
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13419
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13420
  ret void, !dbg !13421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13422 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13427, metadata !DIExpression()), !dbg !13428
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13429
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13430
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13431
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13432
  ret void, !dbg !13433
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13434 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13451, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13442, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13443, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.value(metadata i32 %2, metadata !13444, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13445, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.value(metadata i8* %4, metadata !13446, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.value(metadata i8* %5, metadata !13447, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.value(metadata i8* %6, metadata !13448, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.value(metadata i32 %7, metadata !13449, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.value(metadata i32 %8, metadata !13450, metadata !DIExpression()), !dbg !13452
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13453, !srcloc !13149
  call void @llvm.dbg.value(metadata i32 %11, metadata !13145, metadata !DIExpression()) #23, !dbg !13458
  %12 = icmp eq i32 %11, 0, !dbg !13459
  br i1 %12, label %14, label %13, !dbg !13460

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 647) #25, !dbg !13461
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.243, i32 0, i32 0)) #25, !dbg !13461
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 647) #25, !dbg !13461
  unreachable, !dbg !13461

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13451, metadata !DIExpression()), !dbg !13452
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !13463
  %17 = icmp eq i64 %15, -1, !dbg !13464
  br i1 %17, label %19, label %18, !dbg !13466

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !13467
  br label %19, !dbg !13469

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13471 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13476, metadata !DIExpression()), !dbg !13477
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13475, metadata !DIExpression()), !dbg !13477
  %4 = icmp eq i64 %3, 0, !dbg !13478
  br i1 %4, label %5, label %6, !dbg !13480

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13481
  br label %7, !dbg !13483

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13484
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13486
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13487 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13491, metadata !DIExpression()), !dbg !13492
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13493, !srcloc !13495
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13496
  ret void, !dbg !13497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13498 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13501, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13500, metadata !DIExpression()), !dbg !13502
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13503
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13504
  ret void, !dbg !13505
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13506 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13508, metadata !DIExpression()), !dbg !13528
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13529

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 750) #25, !dbg !13533
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.247, i32 0, i32 0)) #25, !dbg !13533
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 750) #25, !dbg !13533
  unreachable, !dbg !13533

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13508, metadata !DIExpression()), !dbg !13528
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13536
  br i1 %4, label %6, label %5, !dbg !13537

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !13538
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13526, metadata !DIExpression()), !dbg !13539
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13540

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13544
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13544
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13546
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13546
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13547
  %12 = load i32, i32* %11, align 4, !dbg !13547
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13548
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13548
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13549
  %16 = load i8*, i8** %15, align 4, !dbg !13549
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13550
  %18 = load i8*, i8** %17, align 4, !dbg !13550
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13551
  %20 = load i8*, i8** %19, align 4, !dbg !13551
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13552
  %22 = load i32, i32* %21, align 4, !dbg !13552
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13553
  %24 = load i32, i32* %23, align 4, !dbg !13553
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13554
  %26 = load i8*, i8** %25, align 4, !dbg !13554
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !13555
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13556
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13557
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13558
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13558
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13559
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13508, metadata !DIExpression()), !dbg !13528
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13560
  br i1 %32, label %1, label %2, !dbg !13529, !llvm.loop !13561

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 781) #25, !dbg !13563
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.247, i32 0, i32 0)) #25, !dbg !13563
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.237, i32 0, i32 0), i32 noundef 781) #25, !dbg !13563
  unreachable, !dbg !13563

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13526, metadata !DIExpression()), !dbg !13539
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13566
  br i1 %36, label %38, label %37, !dbg !13567

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !13568
  ret void, !dbg !13569

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13570
  %40 = load i32, i32* %39, align 4, !dbg !13570
  %41 = icmp eq i32 %40, -1, !dbg !13573
  br i1 %41, label %50, label %42, !dbg !13574

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13575
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13575
  %45 = icmp sgt i32 %40, 0, !dbg !13577
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13577
  %47 = zext i32 %46 to i64, !dbg !13577
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.248(i64 noundef %47) #24, !dbg !13577
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13578
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !13578
  br label %50, !dbg !13579

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13580
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13526, metadata !DIExpression()), !dbg !13539
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13581
  br i1 %52, label %33, label %34, !dbg !13540, !llvm.loop !13582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.248(i64 noundef %0) unnamed_addr #3 !dbg !13584 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13586, metadata !DIExpression()), !dbg !13587
  call void @llvm.dbg.value(metadata i64 %0, metadata !13588, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.value(metadata i32 1000, metadata !13591, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.value(metadata i32 10000, metadata !13592, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.value(metadata i8 1, metadata !13593, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.value(metadata i8 0, metadata !13594, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.value(metadata i8 1, metadata !13595, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.value(metadata i8 0, metadata !13596, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.value(metadata i8 1, metadata !13597, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.value(metadata i8 0, metadata !13598, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.value(metadata i64 0, metadata !13599, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.value(metadata i64 0, metadata !13599, metadata !DIExpression()), !dbg !13603
  %2 = mul i64 %0, 10, !dbg !13605
  ret i64 %2, !dbg !13611
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !13612 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13614, metadata !DIExpression()), !dbg !13618
  call void @llvm.dbg.value(metadata i8* %1, metadata !13615, metadata !DIExpression()), !dbg !13618
  call void @llvm.dbg.value(metadata i8* %2, metadata !13616, metadata !DIExpression()), !dbg !13618
  call void @llvm.dbg.value(metadata i8* %3, metadata !13617, metadata !DIExpression()), !dbg !13618
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13619
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13620
  %7 = load i8, i8* %6, align 4, !dbg !13621
  %8 = or i8 %7, 4, !dbg !13621
  store i8 %8, i8* %6, align 4, !dbg !13621
  tail call void @z_thread_essential_clear() #24, !dbg !13622
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13623
  unreachable, !dbg !13623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !13624 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13629, metadata !DIExpression()), !dbg !13631
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13632
  %3 = load i32, i32* %2, align 4, !dbg !13632
  call void @llvm.dbg.value(metadata i32 %3, metadata !13630, metadata !DIExpression()), !dbg !13631
  %4 = icmp eq i32 %3, 0, !dbg !13633
  br i1 %4, label %10, label %5, !dbg !13635

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13636
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13639
  %8 = zext i8 %7 to i32, !dbg !13640
  %9 = icmp eq i32 %6, %8, !dbg !13641
  br i1 %9, label %11, label %10, !dbg !13642

10:                                               ; preds = %5, %1
  br label %11, !dbg !13643

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13631
  ret i1 %12, !dbg !13644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !13645 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13647, metadata !DIExpression()), !dbg !13648
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13649
  %3 = load i32, i32* %2, align 4, !dbg !13649
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13651
  %5 = zext i8 %4 to i32, !dbg !13652
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13653
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13654
  %8 = or i32 %7, %5, !dbg !13655
  %9 = icmp eq i32 %3, %8, !dbg !13656
  br i1 %9, label %10, label %11, !dbg !13657

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13658
  br label %11, !dbg !13659

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13661 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13665, metadata !DIExpression()), !dbg !13666
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13667
  %3 = zext i8 %2 to i32, !dbg !13668
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13669
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13670
  %6 = or i32 %5, %3, !dbg !13671
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13672
  store i32 %6, i32* %7, align 4, !dbg !13673
  ret void, !dbg !13674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !13675 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13679, metadata !DIExpression()), !dbg !13680
  ret i32 -134, !dbg !13681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !13682 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13686, metadata !DIExpression()), !dbg !13688
  call void @llvm.dbg.value(metadata i32 %1, metadata !13687, metadata !DIExpression()), !dbg !13688
  ret i32 -134, !dbg !13689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #3 !dbg !13690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13697, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13698, metadata !DIExpression()), !dbg !13699
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13700
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13702
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13699
  ret i32 %6, !dbg !13703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #3 !dbg !13704 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13708, metadata !DIExpression()), !dbg !13709
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13710
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13709
  ret i32 %3, !dbg !13712
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13713 {
  tail call void @sys_clock_idle_exit() #25, !dbg !13715
  ret void, !dbg !13716
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !13717 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13719, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata i8* %1, metadata !13720, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata i8* %2, metadata !13721, metadata !DIExpression()), !dbg !13722
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13723
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13723
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13723
  %7 = load i8, i8* %6, align 2, !dbg !13723
  %8 = icmp sgt i8 %7, -1, !dbg !13723
  br i1 %8, label %10, label %9, !dbg !13726

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.259, i32 0, i32 0), i32 noundef 39) #25, !dbg !13727
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.259, i32 0, i32 0), i32 noundef 39) #25, !dbg !13727
  unreachable, !dbg !13727

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13729, !srcloc !13736
  call void @llvm.dbg.value(metadata i32 undef, metadata !13732, metadata !DIExpression()) #23, !dbg !13737
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !13737
  tail call fastcc void @k_cpu_idle() #24, !dbg !13738
  br label %10, !dbg !13739, !llvm.loop !13740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13742 {
  tail call void @arch_cpu_idle() #25, !dbg !13743
  ret void, !dbg !13744
}

; Function Attrs: optsize
declare !dbg !13745 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !13746 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13757, metadata !DIExpression()), !dbg !13758
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13759
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13760
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13761
  store i32 0, i32* %3, align 4, !dbg !13762
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13763
  tail call fastcc void @z_waitq_init.260(%struct._wait_q_t* noundef %4) #24, !dbg !13764
  ret i32 0, !dbg !13765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.260(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13766 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13770, metadata !DIExpression()), !dbg !13771
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13772
  tail call fastcc void @sys_dlist_init.261(%struct._dnode* noundef %2) #24, !dbg !13773
  ret void, !dbg !13774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.261(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13775 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13780, metadata !DIExpression()), !dbg !13781
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13782
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13783
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13784
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13785
  ret void, !dbg !13786
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13787 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13796, metadata !DIExpression()), !dbg !13808
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13795, metadata !DIExpression()), !dbg !13808
  call void @llvm.dbg.value(metadata i8 0, metadata !13803, metadata !DIExpression()), !dbg !13808
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13809, !srcloc !13818
  call void @llvm.dbg.value(metadata i32 %4, metadata !13812, metadata !DIExpression()) #23, !dbg !13819
  %5 = icmp eq i32 %4, 0, !dbg !13820
  br i1 %5, label %7, label %6, !dbg !13821

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 101) #25, !dbg !13822
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.267, i32 0, i32 0)) #25, !dbg !13822
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 101) #25, !dbg !13822
  unreachable, !dbg !13822

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !13824, metadata !DIExpression()) #23, !dbg !13831
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13833, !srcloc !13839
  call void @llvm.dbg.value(metadata i32 undef, metadata !13836, metadata !DIExpression()) #23, !dbg !13840
  call void @llvm.dbg.value(metadata i32 undef, metadata !13837, metadata !DIExpression()) #23, !dbg !13840
  call void @llvm.dbg.value(metadata i32 undef, metadata !13830, metadata !DIExpression()) #23, !dbg !13831
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13841
  br i1 %9, label %11, label %10, !dbg !13844

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.270, i32 0, i32 0), i32 noundef 148) #25, !dbg !13845
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13845
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.270, i32 0, i32 0), i32 noundef 148) #25, !dbg !13845
  unreachable, !dbg !13845

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !13833
  call void @llvm.dbg.value(metadata i32 %12, metadata !13836, metadata !DIExpression()) #23, !dbg !13840
  call void @llvm.dbg.value(metadata i32 %12, metadata !13830, metadata !DIExpression()) #23, !dbg !13831
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13847
  call void @llvm.dbg.value(metadata i32 %12, metadata !13798, metadata !DIExpression()), !dbg !13808
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13848
  %14 = load i32, i32* %13, align 4, !dbg !13848
  %15 = icmp eq i32 %14, 0, !dbg !13848
  br i1 %15, label %21, label %16, !dbg !13848

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13848
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13848
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13848
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !13848
  br i1 %20, label %27, label %39, !dbg !13850, !prof !13851

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13852
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !13854
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !13854
  %25 = load i8, i8* %24, align 2, !dbg !13854
  %26 = sext i8 %25 to i32, !dbg !13852
  br label %30, !dbg !13855

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13856
  %29 = load i32, i32* %28, align 4, !dbg !13856
  br label %30, !dbg !13855

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !13857
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !13855
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13858
  store i32 %32, i32* %33, align 4, !dbg !13859
  %34 = add i32 %14, 1, !dbg !13860
  store i32 %34, i32* %13, align 4, !dbg !13860
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13861
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !13862
  call void @llvm.dbg.value(metadata i32 undef, metadata !13863, metadata !DIExpression()) #23, !dbg !13869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !13868, metadata !DIExpression()) #23, !dbg !13869
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13871
  br i1 %36, label %38, label %37, !dbg !13874

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.270, i32 0, i32 0), i32 noundef 194) #25, !dbg !13875
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13875
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.270, i32 0, i32 0), i32 noundef 194) #25, !dbg !13875
  unreachable, !dbg !13875

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !13863, metadata !DIExpression()) #23, !dbg !13869
  call void @llvm.dbg.value(metadata i32 %12, metadata !13877, metadata !DIExpression()) #23, !dbg !13880
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13882, !srcloc !13883
  br label %97, !dbg !13884

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !13885
  br i1 %40, label %41, label %45, !dbg !13887, !prof !13888

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !13863, metadata !DIExpression()) #23, !dbg !13889
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !13868, metadata !DIExpression()) #23, !dbg !13889
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13892
  br i1 %42, label %44, label %43, !dbg !13893

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.270, i32 0, i32 0), i32 noundef 194) #25, !dbg !13894
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13894
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.270, i32 0, i32 0), i32 noundef 194) #25, !dbg !13894
  unreachable, !dbg !13894

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !13863, metadata !DIExpression()) #23, !dbg !13889
  call void @llvm.dbg.value(metadata i32 %12, metadata !13877, metadata !DIExpression()) #23, !dbg !13895
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13897, !srcloc !13883
  br label %97, !dbg !13898

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !13899
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !13899
  %48 = load i8, i8* %47, align 2, !dbg !13899
  %49 = sext i8 %48 to i32, !dbg !13900
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !13901
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !13901
  %52 = load i8, i8* %51, align 2, !dbg !13901
  %53 = sext i8 %52 to i32, !dbg !13902
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !13903
  call void @llvm.dbg.value(metadata i32 %54, metadata !13797, metadata !DIExpression()), !dbg !13808
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !13904
  br i1 %55, label %56, label %58, !dbg !13906

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !13907
  call void @llvm.dbg.value(metadata i1 %57, metadata !13803, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13808
  br label %58, !dbg !13909

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13803, metadata !DIExpression()), !dbg !13808
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13910
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13911
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.268, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #25, !dbg !13911
  call void @llvm.dbg.value(metadata i32 %62, metadata !13804, metadata !DIExpression()), !dbg !13808
  %63 = icmp eq i32 %62, 0, !dbg !13912
  br i1 %63, label %97, label %64, !dbg !13914

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !13824, metadata !DIExpression()) #23, !dbg !13915
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13917, !srcloc !13839
  call void @llvm.dbg.value(metadata i32 undef, metadata !13836, metadata !DIExpression()) #23, !dbg !13919
  call void @llvm.dbg.value(metadata i32 undef, metadata !13837, metadata !DIExpression()) #23, !dbg !13919
  call void @llvm.dbg.value(metadata i32 undef, metadata !13830, metadata !DIExpression()) #23, !dbg !13915
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13920
  br i1 %66, label %68, label %67, !dbg !13921

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.270, i32 0, i32 0), i32 noundef 148) #25, !dbg !13922
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13922
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.270, i32 0, i32 0), i32 noundef 148) #25, !dbg !13922
  unreachable, !dbg !13922

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !13917
  call void @llvm.dbg.value(metadata i32 %69, metadata !13836, metadata !DIExpression()) #23, !dbg !13919
  call void @llvm.dbg.value(metadata i32 %69, metadata !13830, metadata !DIExpression()) #23, !dbg !13915
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13923
  call void @llvm.dbg.value(metadata i32 %69, metadata !13798, metadata !DIExpression()), !dbg !13808
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13924
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !13924
  br i1 %71, label %90, label %72, !dbg !13925, !prof !13888

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !13926
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !13805, metadata !DIExpression()), !dbg !13927
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !13928
  br i1 %74, label %83, label %75, !dbg !13929

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !13930
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !13930
  %78 = load i8, i8* %77, align 2, !dbg !13930
  %79 = sext i8 %78 to i32, !dbg !13931
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13932
  %81 = load i32, i32* %80, align 4, !dbg !13932
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !13933
  br label %86, !dbg !13929

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13934
  %85 = load i32, i32* %84, align 4, !dbg !13934
  br label %86, !dbg !13929

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !13929
  call void @llvm.dbg.value(metadata i32 %87, metadata !13797, metadata !DIExpression()), !dbg !13808
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !13935
  %89 = select i1 %88, i1 true, i1 %59, !dbg !13936
  call void @llvm.dbg.value(metadata i1 %89, metadata !13803, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13808
  call void @llvm.dbg.value(metadata i8 poison, metadata !13803, metadata !DIExpression()), !dbg !13808
  br i1 %89, label %91, label %93, !dbg !13937

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !13803, metadata !DIExpression()), !dbg !13808
  br i1 %59, label %91, label %93, !dbg !13937

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !13938
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.268, [1 x i32] %92) #25, !dbg !13938
  br label %97, !dbg !13941

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !13863, metadata !DIExpression()) #23, !dbg !13942
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !13868, metadata !DIExpression()) #23, !dbg !13942
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13945
  br i1 %94, label %96, label %95, !dbg !13946

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.270, i32 0, i32 0), i32 noundef 194) #25, !dbg !13947
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13947
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.270, i32 0, i32 0), i32 noundef 194) #25, !dbg !13947
  unreachable, !dbg !13947

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !13863, metadata !DIExpression()) #23, !dbg !13942
  call void @llvm.dbg.value(metadata i32 %69, metadata !13877, metadata !DIExpression()) #23, !dbg !13948
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !13950, !srcloc !13883
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !13808
  ret i32 %98, !dbg !13951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !13952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13956, metadata !DIExpression()), !dbg !13959
  call void @llvm.dbg.value(metadata i32 %1, metadata !13957, metadata !DIExpression()), !dbg !13959
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13960
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13960
  call void @llvm.dbg.value(metadata i32 %4, metadata !13958, metadata !DIExpression()), !dbg !13959
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13961
  call void @llvm.dbg.value(metadata i32 %5, metadata !13958, metadata !DIExpression()), !dbg !13959
  ret i32 %5, !dbg !13962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !13963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13967, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata i32 %1, metadata !13968, metadata !DIExpression()), !dbg !13969
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13970
  ret i1 %3, !dbg !13971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13972 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13976, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata i32 %1, metadata !13977, metadata !DIExpression()), !dbg !13978
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13979
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13979
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13981
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13981
  %7 = load i8, i8* %6, align 2, !dbg !13981
  %8 = sext i8 %7 to i32, !dbg !13982
  %9 = icmp eq i32 %8, %1, !dbg !13983
  br i1 %9, label %12, label %10, !dbg !13984

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #25, !dbg !13985
  br label %12, !dbg !13987

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13978
  ret i1 %13, !dbg !13988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !13989 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13993, metadata !DIExpression()), !dbg !13994
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13995
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13996
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13997
  ret %struct.k_thread* %4, !dbg !13998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13999 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14003, metadata !DIExpression()), !dbg !14004
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14005
  br i1 %2, label %6, label %3, !dbg !14005

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14006
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14006
  br label %6, !dbg !14005

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14005
  ret %struct._dnode* %7, !dbg !14007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14008 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14012, metadata !DIExpression()), !dbg !14013
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14014
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14014
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14015
  ret i1 %4, !dbg !14016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14019, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 %1, metadata !14020, metadata !DIExpression()), !dbg !14021
  %3 = icmp slt i32 %0, %1, !dbg !14022
  ret i1 %3, !dbg !14023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #3 !dbg !14024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14026, metadata !DIExpression()), !dbg !14027
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !14028
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !14028
  ret i32 %3, !dbg !14029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #3 !dbg !14030 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14034, metadata !DIExpression()), !dbg !14035
  %2 = icmp sgt i32 %0, -128, !dbg !14036
  ret i1 %2, !dbg !14037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !14038 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14040, metadata !DIExpression()), !dbg !14044
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14045, !srcloc !13818
  call void @llvm.dbg.value(metadata i32 %2, metadata !13812, metadata !DIExpression()) #23, !dbg !14050
  %3 = icmp eq i32 %2, 0, !dbg !14051
  br i1 %3, label %5, label %4, !dbg !14052

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 205) #25, !dbg !14053
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.267, i32 0, i32 0)) #25, !dbg !14053
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 205) #25, !dbg !14053
  unreachable, !dbg !14053

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14055
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !14055
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14055
  br i1 %8, label %41, label %9, !dbg !14057

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14058
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !14058
  br i1 %11, label %12, label %41, !dbg !14060

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14061
  %14 = load i32, i32* %13, align 4, !dbg !14061
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !14064

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 229) #25, !dbg !14065
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 229) #25, !dbg !14065
  unreachable, !dbg !14065

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !14067
  store i32 %17, i32* %13, align 4, !dbg !14067
  br label %41, !dbg !14070

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !13824, metadata !DIExpression()) #23, !dbg !14071
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14073, !srcloc !13839
  call void @llvm.dbg.value(metadata i32 undef, metadata !13836, metadata !DIExpression()) #23, !dbg !14075
  call void @llvm.dbg.value(metadata i32 undef, metadata !13837, metadata !DIExpression()) #23, !dbg !14075
  call void @llvm.dbg.value(metadata i32 undef, metadata !13830, metadata !DIExpression()) #23, !dbg !14071
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !14076
  br i1 %20, label %22, label %21, !dbg !14077

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.270, i32 0, i32 0), i32 noundef 148) #25, !dbg !14078
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !14078
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.270, i32 0, i32 0), i32 noundef 148) #25, !dbg !14078
  unreachable, !dbg !14078

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !14073
  call void @llvm.dbg.value(metadata i32 %23, metadata !13836, metadata !DIExpression()) #23, !dbg !14075
  call void @llvm.dbg.value(metadata i32 %23, metadata !13830, metadata !DIExpression()) #23, !dbg !14071
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !14079
  call void @llvm.dbg.value(metadata i32 %23, metadata !14042, metadata !DIExpression()), !dbg !14044
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14080
  %25 = load i32, i32* %24, align 4, !dbg !14080
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !14081
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14082
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #25, !dbg !14083
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !14041, metadata !DIExpression()), !dbg !14044
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !14084
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !14085
  br i1 %29, label %37, label %30, !dbg !14087

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !14088
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !14088
  %33 = load i8, i8* %32, align 2, !dbg !14088
  %34 = sext i8 %33 to i32, !dbg !14090
  store i32 %34, i32* %24, align 4, !dbg !14091
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !14092, metadata !DIExpression()), !dbg !14098
  call void @llvm.dbg.value(metadata i32 0, metadata !14097, metadata !DIExpression()), !dbg !14098
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 8, i32 1, !dbg !14100
  store i32 0, i32* %35, align 4, !dbg !14101
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #25, !dbg !14102
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !14103
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.268, [1 x i32] %36) #25, !dbg !14103
  br label %41, !dbg !14104

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !14105
  call void @llvm.dbg.value(metadata i32 undef, metadata !13863, metadata !DIExpression()) #23, !dbg !14107
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !13868, metadata !DIExpression()) #23, !dbg !14107
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !14109
  br i1 %38, label %40, label %39, !dbg !14110

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.270, i32 0, i32 0), i32 noundef 194) #25, !dbg !14111
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !14111
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.270, i32 0, i32 0), i32 noundef 194) #25, !dbg !14111
  unreachable, !dbg !14111

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !13863, metadata !DIExpression()) #23, !dbg !14107
  call void @llvm.dbg.value(metadata i32 %23, metadata !13877, metadata !DIExpression()) #23, !dbg !14112
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !14114, !srcloc !13883
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !14044
  ret i32 %42, !dbg !14115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14116 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14120, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14121, metadata !DIExpression()), !dbg !14124
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14125
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14125
  %5 = load i8, i8* %4, align 2, !dbg !14125
  call void @llvm.dbg.value(metadata i8 %5, metadata !14122, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14124
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14126
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14126
  %8 = load i8, i8* %7, align 2, !dbg !14126
  call void @llvm.dbg.value(metadata i8 %8, metadata !14123, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14124
  %9 = icmp eq i8 %8, %5, !dbg !14127
  %10 = sext i8 %5 to i32, !dbg !14129
  %11 = sext i8 %8 to i32, !dbg !14129
  %12 = sub nsw i32 %11, %10, !dbg !14129
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14129
  ret i32 %13, !dbg !14130
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14131 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14135, metadata !DIExpression()), !dbg !14136
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14137
  %3 = icmp eq i32 %2, 0, !dbg !14139
  br i1 %3, label %8, label %4, !dbg !14140

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14141
  %6 = add i32 %5, %2, !dbg !14143
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14144
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14145
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14146
  br label %8, !dbg !14147

8:                                                ; preds = %4, %1
  ret void, !dbg !14148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14149 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14153, metadata !DIExpression()), !dbg !14155
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14156
  call void @llvm.dbg.value(metadata i32 %1, metadata !14154, metadata !DIExpression()), !dbg !14155
  ret i32 %1, !dbg !14157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14162, metadata !DIExpression()), !dbg !14171
  call void @llvm.dbg.value(metadata i32 %1, metadata !14163, metadata !DIExpression()), !dbg !14171
  call void @llvm.dbg.value(metadata i32 0, metadata !14164, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !14180
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14182, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !14180
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14190
  br i1 %4, label %6, label %5, !dbg !14193

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !14194
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14194
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !14194
  unreachable, !dbg !14194

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !14180
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14196
  call void @llvm.dbg.value(metadata i32 undef, metadata !14170, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i32 undef, metadata !14164, metadata !DIExpression()), !dbg !14172
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14197
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14200
  %8 = icmp sgt i32 %0, 0, !dbg !14201
  %9 = icmp sgt i32 %7, 2, !dbg !14203
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14203
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14203
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14204
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14205
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14206
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14213
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !14213
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14215
  br i1 %12, label %14, label %13, !dbg !14218

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14219
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14219
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14219
  unreachable, !dbg !14219

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14182
  call void @llvm.dbg.value(metadata i32 %15, metadata !14185, metadata !DIExpression()) #23, !dbg !14189
  call void @llvm.dbg.value(metadata i32 %15, metadata !14179, metadata !DIExpression()) #23, !dbg !14180
  call void @llvm.dbg.value(metadata i32 %15, metadata !14170, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14213
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()) #23, !dbg !14224
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14226, !srcloc !14227
  call void @llvm.dbg.value(metadata i32 1, metadata !14164, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i32 undef, metadata !14164, metadata !DIExpression()), !dbg !14172
  ret void, !dbg !14228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #3 !dbg !14229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14231, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.value(metadata i32 %0, metadata !14233, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14248
  call void @llvm.dbg.value(metadata i32 1000, metadata !14236, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i32 10000, metadata !14237, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i8 1, metadata !14238, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i1 true, metadata !14239, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14248
  call void @llvm.dbg.value(metadata i1 true, metadata !14240, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14248
  call void @llvm.dbg.value(metadata i8 0, metadata !14241, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i1 true, metadata !14242, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14248
  call void @llvm.dbg.value(metadata i1 false, metadata !14243, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14248
  call void @llvm.dbg.value(metadata i64 0, metadata !14244, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i64 0, metadata !14244, metadata !DIExpression()), !dbg !14248
  %2 = mul i32 %0, 10, !dbg !14250
  ret i32 %2, !dbg !14256
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14259, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !14262
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14264, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !14266
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14266
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !14262
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14267
  br i1 %3, label %5, label %4, !dbg !14268

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !14269
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14269
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !14269
  unreachable, !dbg !14269

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14264
  call void @llvm.dbg.value(metadata i32 %6, metadata !14185, metadata !DIExpression()) #23, !dbg !14266
  call void @llvm.dbg.value(metadata i32 %6, metadata !14179, metadata !DIExpression()) #23, !dbg !14262
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14270
  call void @llvm.dbg.value(metadata i32 %6, metadata !14260, metadata !DIExpression()), !dbg !14261
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14271
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14273
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14274
  br i1 %9, label %10, label %14, !dbg !14275

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14276
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !14278
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14280
  br i1 %11, label %13, label %12, !dbg !14281

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14282
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14282
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14282
  unreachable, !dbg !14282

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14207, metadata !DIExpression()) #23, !dbg !14278
  call void @llvm.dbg.value(metadata i32 %6, metadata !14221, metadata !DIExpression()) #23, !dbg !14283
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14285, !srcloc !14227
  br label %33, !dbg !14286

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14287
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14288
  %16 = icmp eq i32 %15, 0, !dbg !14288
  br i1 %16, label %27, label %17, !dbg !14290

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14291
  br i1 %18, label %19, label %27, !dbg !14292

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14293
  %21 = icmp sgt i32 %20, %0, !dbg !14296
  br i1 %21, label %25, label %22, !dbg !14297

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14298
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14298
  call void @llvm.dbg.value(metadata i32 %24, metadata !14260, metadata !DIExpression()), !dbg !14261
  br label %28, !dbg !14300

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14301
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14301
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14303
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14261
  call void @llvm.dbg.value(metadata i32 %29, metadata !14260, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14305
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !14305
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14307
  br i1 %30, label %32, label %31, !dbg !14308

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14309
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14309
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14309
  unreachable, !dbg !14309

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14207, metadata !DIExpression()) #23, !dbg !14305
  call void @llvm.dbg.value(metadata i32 %29, metadata !14221, metadata !DIExpression()) #23, !dbg !14310
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14312, !srcloc !14227
  br label %33, !dbg !14313

33:                                               ; preds = %32, %13
  ret void, !dbg !14313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14314 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14318, metadata !DIExpression()), !dbg !14320
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14321
  %3 = icmp eq i32 %2, 0, !dbg !14321
  br i1 %3, label %16, label %4, !dbg !14322

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14323
  br i1 %5, label %16, label %6, !dbg !14324

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14325
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14325
  %9 = load i8, i8* %8, align 2, !dbg !14325
  %10 = sext i8 %9 to i32, !dbg !14326
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14327
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.290(i32 noundef %10, i32 noundef %11) #24, !dbg !14328
  br i1 %12, label %16, label %13, !dbg !14329

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14330
  %15 = xor i1 %14, true, !dbg !14331
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14320
  call void @llvm.dbg.value(metadata i1 %17, metadata !14319, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14320
  ret i1 %17, !dbg !14332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14333 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14337, metadata !DIExpression()), !dbg !14339
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14340
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14338, metadata !DIExpression()), !dbg !14339
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14341
  br i1 %3, label %5, label %4, !dbg !14343

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14344
  br label %5, !dbg !14346

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14337, metadata !DIExpression()), !dbg !14339
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14347
  ret i32 %6, !dbg !14348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14351, metadata !DIExpression()), !dbg !14353
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14354
  %3 = load i8, i8* %2, align 1, !dbg !14354
  call void @llvm.dbg.value(metadata i8 %3, metadata !14352, metadata !DIExpression()), !dbg !14353
  %4 = and i8 %3, 31, !dbg !14355
  %5 = icmp ne i8 %4, 0, !dbg !14356
  ret i1 %5, !dbg !14357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14358 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14360, metadata !DIExpression()), !dbg !14361
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14362
  br i1 %2, label %3, label %7, !dbg !14364

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14365, metadata !DIExpression()) #23, !dbg !14368
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14371
  %5 = load i8, i8* %4, align 1, !dbg !14372
  %6 = and i8 %5, 127, !dbg !14372
  store i8 %6, i8* %4, align 1, !dbg !14372
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14373, metadata !DIExpression()) #23, !dbg !14376
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14380
  br label %7, !dbg !14381

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14382, metadata !DIExpression()) #23, !dbg !14385
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14387
  %9 = load i8, i8* %8, align 1, !dbg !14388
  %10 = or i8 %9, -128, !dbg !14388
  store i8 %10, i8* %8, align 1, !dbg !14388
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14389, metadata !DIExpression()) #23, !dbg !14392
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14396, metadata !DIExpression()) #23, !dbg !14404
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14402, metadata !DIExpression()) #23, !dbg !14404
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14406
  br i1 %11, label %12, label %13, !dbg !14409

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 186) #25, !dbg !14410
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 186) #25, !dbg !14410
  unreachable, !dbg !14410

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.285(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14412
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14403, metadata !DIExpression()) #23, !dbg !14404
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14414
  br i1 %15, label %26, label %16, !dbg !14412

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14403, metadata !DIExpression()) #23, !dbg !14404
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14416
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14403, metadata !DIExpression()) #23, !dbg !14404
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14417
  %20 = icmp sgt i32 %19, 0, !dbg !14420
  br i1 %20, label %21, label %23, !dbg !14421

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14422
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14424
  br label %28, !dbg !14425

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14414
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14403, metadata !DIExpression()) #23, !dbg !14404
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14414
  br i1 %25, label %26, label %16, !dbg !14412, !llvm.loop !14426

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14428
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14429
  br label %28, !dbg !14430

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14431
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14432
  %31 = zext i1 %30 to i32, !dbg !14432
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14433
  ret void, !dbg !14434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14437, metadata !DIExpression()), !dbg !14438
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14439
  ret i1 %2, !dbg !14440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14441 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14443, metadata !DIExpression()), !dbg !14445
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14444, metadata !DIExpression()), !dbg !14445
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14446
  br i1 %3, label %4, label %5, !dbg !14449

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14450
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14450
  unreachable, !dbg !14450

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14452
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14453
  ret void, !dbg !14454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #3 !dbg !14455 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14457, metadata !DIExpression()), !dbg !14458
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14459
  ret i1 %2, !dbg !14460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.285(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14461 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14465, metadata !DIExpression()), !dbg !14466
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.288(%struct._dnode* noundef %0) #24, !dbg !14467
  br i1 %2, label %6, label %3, !dbg !14467

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14468
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14468
  br label %6, !dbg !14467

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14467
  ret %struct._dnode* %7, !dbg !14469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14470 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14474, metadata !DIExpression()), !dbg !14478
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14475, metadata !DIExpression()), !dbg !14478
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14479
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14479
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14476, metadata !DIExpression()), !dbg !14478
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14480
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14481
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14482
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14483
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14484
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14485
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14486
  ret void, !dbg !14487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14488 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14492, metadata !DIExpression()), !dbg !14494
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14493, metadata !DIExpression()), !dbg !14494
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14495
  br i1 %3, label %6, label %4, !dbg !14496

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14497
  br label %6, !dbg !14496

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14496
  ret %struct._dnode* %7, !dbg !14498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14499 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14503, metadata !DIExpression()), !dbg !14506
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14504, metadata !DIExpression()), !dbg !14506
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14507
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14507
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14505, metadata !DIExpression()), !dbg !14506
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14508
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14509
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14510
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14511
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14512
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14513
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14514
  ret void, !dbg !14515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14518, metadata !DIExpression()), !dbg !14520
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14521
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14528, metadata !DIExpression()) #23, !dbg !14530
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14531
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14532
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14532
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14519, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14533, metadata !DIExpression()) #23, !dbg !14539
  call void @llvm.dbg.value(metadata i32 %0, metadata !14538, metadata !DIExpression()) #23, !dbg !14539
  %6 = icmp eq i32 %0, 0, !dbg !14542
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14544
  br i1 %6, label %8, label %18, !dbg !14545

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14546
  br i1 %9, label %10, label %11, !dbg !14549

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 137) #25, !dbg !14550
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.287, i32 0, i32 0)) #25, !dbg !14550
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 137) #25, !dbg !14550
  unreachable, !dbg !14550

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14552
  br i1 %12, label %18, label %13, !dbg !14554

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14555
  br i1 %14, label %18, label %15, !dbg !14557

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14558
  %17 = icmp eq i32 %16, 0, !dbg !14558
  br i1 %17, label %21, label %18, !dbg !14560

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14561
  br i1 %19, label %21, label %20, !dbg !14564

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14565
  br label %21, !dbg !14567

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14544
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14544
  ret void, !dbg !14568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14569 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14573, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14574, metadata !DIExpression()), !dbg !14576
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.285(%struct._dnode* noundef %0) #24, !dbg !14577
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14575, metadata !DIExpression()), !dbg !14576
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14574, metadata !DIExpression()), !dbg !14576
  ret %struct.k_thread* %3, !dbg !14578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14579 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14581, metadata !DIExpression()), !dbg !14582
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14583
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14584
  %4 = xor i1 %3, true, !dbg !14585
  ret i1 %4, !dbg !14586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14587 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14589, metadata !DIExpression()), !dbg !14590
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14591
  %3 = load i16, i16* %2, align 2, !dbg !14591
  %4 = icmp ult i16 %3, 128, !dbg !14592
  %5 = zext i1 %4 to i32, !dbg !14592
  ret i32 %5, !dbg !14593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14594 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14600, metadata !DIExpression()), !dbg !14601
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14602
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14603
  %4 = xor i1 %3, true, !dbg !14604
  ret i1 %4, !dbg !14605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14606 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14612, metadata !DIExpression()), !dbg !14613
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14614
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14614
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14615
  ret i1 %4, !dbg !14616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14617 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14619, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14620, metadata !DIExpression()), !dbg !14621
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14622
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14622
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14623
  br i1 %5, label %9, label %6, !dbg !14624

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14625
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14625
  br label %9, !dbg !14624

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14624
  ret %struct._dnode* %10, !dbg !14626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.288(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14627 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14631, metadata !DIExpression()), !dbg !14632
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14633
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14633
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14634
  ret i1 %4, !dbg !14635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14636 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14640, metadata !DIExpression()), !dbg !14643
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14644
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14644
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14641, metadata !DIExpression()), !dbg !14643
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14645
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14645
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14642, metadata !DIExpression()), !dbg !14643
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14646
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14647
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14648
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14649
  tail call fastcc void @sys_dnode_init.289(%struct._dnode* noundef %0) #24, !dbg !14650
  ret void, !dbg !14651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.289(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14652 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14654, metadata !DIExpression()), !dbg !14655
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14656
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14657
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14658
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14659
  ret void, !dbg !14660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14661 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14665, metadata !DIExpression()), !dbg !14667
  call void @llvm.dbg.value(metadata i32 %1, metadata !14666, metadata !DIExpression()), !dbg !14667
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14668
  %4 = load i8, i8* %3, align 1, !dbg !14668
  %5 = zext i8 %4 to i32, !dbg !14669
  %6 = and i32 %5, %1, !dbg !14670
  %7 = icmp ne i32 %6, 0, !dbg !14671
  ret i1 %7, !dbg !14672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.290(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14675, metadata !DIExpression()), !dbg !14677
  call void @llvm.dbg.value(metadata i32 %1, metadata !14676, metadata !DIExpression()), !dbg !14677
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.291(i32 noundef %0, i32 noundef %1) #24, !dbg !14678
  ret i1 %3, !dbg !14679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.291(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14682, metadata !DIExpression()), !dbg !14684
  call void @llvm.dbg.value(metadata i32 %1, metadata !14683, metadata !DIExpression()), !dbg !14684
  %3 = icmp slt i32 %0, %1, !dbg !14685
  ret i1 %3, !dbg !14686
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14687 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()), !dbg !14693
  call void @llvm.dbg.value(metadata i32 0, metadata !14690, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !14695
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14697, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !14699
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14699
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !14695
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14700
  br i1 %3, label %5, label %4, !dbg !14701

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !14702
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14702
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !14702
  unreachable, !dbg !14702

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !14699
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !14695
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14703
  call void @llvm.dbg.value(metadata i32 undef, metadata !14692, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()), !dbg !14694
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14704
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !14709
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14711
  br i1 %6, label %8, label %7, !dbg !14712

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14713
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14713
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14713
  unreachable, !dbg !14713

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14697
  call void @llvm.dbg.value(metadata i32 %9, metadata !14185, metadata !DIExpression()) #23, !dbg !14699
  call void @llvm.dbg.value(metadata i32 %9, metadata !14179, metadata !DIExpression()) #23, !dbg !14695
  call void @llvm.dbg.value(metadata i32 %9, metadata !14692, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()) #23, !dbg !14714
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14716, !srcloc !14227
  call void @llvm.dbg.value(metadata i32 1, metadata !14690, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()), !dbg !14694
  ret void, !dbg !14717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14720, metadata !DIExpression()), !dbg !14721
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14722
  br i1 %2, label %27, label %3, !dbg !14724

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14725
  br i1 %4, label %5, label %27, !dbg !14726

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14382, metadata !DIExpression()) #23, !dbg !14727
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14730
  %7 = load i8, i8* %6, align 1, !dbg !14731
  %8 = or i8 %7, -128, !dbg !14731
  store i8 %8, i8* %6, align 1, !dbg !14731
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14389, metadata !DIExpression()) #23, !dbg !14732
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14396, metadata !DIExpression()) #23, !dbg !14734
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14402, metadata !DIExpression()) #23, !dbg !14734
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14736
  br i1 %9, label %10, label %11, !dbg !14737

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 186) #25, !dbg !14738
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 186) #25, !dbg !14738
  unreachable, !dbg !14738

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.285(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14739
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14403, metadata !DIExpression()) #23, !dbg !14734
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14740
  br i1 %13, label %24, label %14, !dbg !14739

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14403, metadata !DIExpression()) #23, !dbg !14734
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14741
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14403, metadata !DIExpression()) #23, !dbg !14734
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !14742
  %18 = icmp sgt i32 %17, 0, !dbg !14743
  br i1 %18, label %19, label %21, !dbg !14744

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14745
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !14746
  br label %26, !dbg !14747

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !14740
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14403, metadata !DIExpression()) #23, !dbg !14734
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14740
  br i1 %23, label %24, label %14, !dbg !14739, !llvm.loop !14748

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14750
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !14751
  br label %26, !dbg !14752

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14753
  br label %27, !dbg !14754

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14756 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14758, metadata !DIExpression()), !dbg !14759
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14760
  br i1 %2, label %6, label %3, !dbg !14761

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !14762
  %5 = xor i1 %4, true, !dbg !14761
  br label %6, !dbg !14761

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14764 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14766, metadata !DIExpression()), !dbg !14770
  call void @llvm.dbg.value(metadata i32 0, metadata !14767, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !14772
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14774, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !14776
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14776
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !14772
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14777
  br i1 %3, label %5, label %4, !dbg !14778

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !14779
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14779
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !14779
  unreachable, !dbg !14779

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !14776
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !14772
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14780
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14767, metadata !DIExpression()), !dbg !14771
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !14781
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14784
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !14784
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14786
  br i1 %6, label %8, label %7, !dbg !14787

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14788
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14788
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14788
  unreachable, !dbg !14788

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14774
  call void @llvm.dbg.value(metadata i32 %9, metadata !14185, metadata !DIExpression()) #23, !dbg !14776
  call void @llvm.dbg.value(metadata i32 %9, metadata !14179, metadata !DIExpression()) #23, !dbg !14772
  call void @llvm.dbg.value(metadata i32 %9, metadata !14769, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14784
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()) #23, !dbg !14789
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14791, !srcloc !14227
  call void @llvm.dbg.value(metadata i32 1, metadata !14767, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14767, metadata !DIExpression()), !dbg !14771
  ret void, !dbg !14792
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14793 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14795, metadata !DIExpression()), !dbg !14797
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !14798
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14800, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !14802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !14798
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14803
  br i1 %3, label %5, label %4, !dbg !14804

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !14805
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14805
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !14805
  unreachable, !dbg !14805

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14800
  call void @llvm.dbg.value(metadata i32 %6, metadata !14185, metadata !DIExpression()) #23, !dbg !14802
  call void @llvm.dbg.value(metadata i32 %6, metadata !14179, metadata !DIExpression()) #23, !dbg !14798
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14806
  call void @llvm.dbg.value(metadata i32 %6, metadata !14796, metadata !DIExpression()), !dbg !14797
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !14807
  br i1 %7, label %8, label %12, !dbg !14809

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14810
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !14810
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14813
  br i1 %9, label %11, label %10, !dbg !14814

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14815
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14815
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14815
  unreachable, !dbg !14815

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14207, metadata !DIExpression()) #23, !dbg !14810
  call void @llvm.dbg.value(metadata i32 %6, metadata !14221, metadata !DIExpression()) #23, !dbg !14816
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14818, !srcloc !14227
  br label %14, !dbg !14819

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.296(%struct.k_thread* noundef %0) #24, !dbg !14820
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14821
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14822
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14822
  br label %14, !dbg !14823

14:                                               ; preds = %12, %11
  ret void, !dbg !14823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14824 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14826, metadata !DIExpression()), !dbg !14827
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14828
  %3 = load i8, i8* %2, align 1, !dbg !14828
  %4 = and i8 %3, 4, !dbg !14829
  %5 = icmp eq i8 %4, 0, !dbg !14830
  ret i1 %5, !dbg !14831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.296(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14832 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14834, metadata !DIExpression()), !dbg !14835
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14836
  %3 = load i8, i8* %2, align 1, !dbg !14837
  %4 = and i8 %3, -5, !dbg !14837
  store i8 %4, i8* %2, align 1, !dbg !14837
  ret void, !dbg !14838
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14839 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14842, metadata !DIExpression()), !dbg !14843
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14841, metadata !DIExpression()), !dbg !14843
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !14844
  br i1 %4, label %5, label %12, !dbg !14846

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !14847
  br i1 %6, label %7, label %12, !dbg !14848

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14849, metadata !DIExpression()) #23, !dbg !14855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14854, metadata !DIExpression()) #23, !dbg !14855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14858, metadata !DIExpression()) #23, !dbg !14863
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14865
  br i1 %8, label %10, label %9, !dbg !14868

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 225) #25, !dbg !14869
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14869
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 225) #25, !dbg !14869
  unreachable, !dbg !14869

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14849, metadata !DIExpression()) #23, !dbg !14855
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14871
  br label %16, !dbg !14872

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14873
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14212, metadata !DIExpression()) #23, !dbg !14873
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14876
  br i1 %13, label %15, label %14, !dbg !14877

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14878
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14878
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14878
  unreachable, !dbg !14878

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14207, metadata !DIExpression()) #23, !dbg !14873
  call void @llvm.dbg.value(metadata i32 %3, metadata !14221, metadata !DIExpression()) #23, !dbg !14879
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14881, !srcloc !14227
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14887, metadata !DIExpression()), !dbg !14888
  call void @llvm.dbg.value(metadata i32 %0, metadata !14889, metadata !DIExpression()), !dbg !14894
  %2 = icmp eq i32 %0, 0, !dbg !14896
  br i1 %2, label %3, label %6, !dbg !14897

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14898, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 %4, metadata !14901, metadata !DIExpression()) #23, !dbg !14906
  %5 = icmp eq i32 %4, 0, !dbg !14907
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14888
  ret i1 %7, !dbg !14908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !14909 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14912
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14911, metadata !DIExpression()), !dbg !14913
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14914
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14915
  ret i1 %3, !dbg !14916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14919, metadata !DIExpression()), !dbg !14921
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !14922
  call void @llvm.dbg.value(metadata i32 %2, metadata !14920, metadata !DIExpression()), !dbg !14921
  ret i32 %2, !dbg !14923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14924 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14926, metadata !DIExpression()), !dbg !14930
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14931
  call void @llvm.dbg.value(metadata i32 0, metadata !14927, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !14933
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14935, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !14937
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14937
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !14933
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14938
  br i1 %4, label %6, label %5, !dbg !14939

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !14940
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14940
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !14940
  unreachable, !dbg !14940

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14935
  call void @llvm.dbg.value(metadata i32 %7, metadata !14185, metadata !DIExpression()) #23, !dbg !14937
  call void @llvm.dbg.value(metadata i32 %7, metadata !14179, metadata !DIExpression()) #23, !dbg !14933
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14941
  call void @llvm.dbg.value(metadata i32 %7, metadata !14929, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i32 undef, metadata !14927, metadata !DIExpression()), !dbg !14932
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14942
  br i1 %8, label %9, label %13, !dbg !14946

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14365, metadata !DIExpression()) #23, !dbg !14947
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14950
  %11 = load i8, i8* %10, align 1, !dbg !14951
  %12 = and i8 %11, 127, !dbg !14951
  store i8 %12, i8* %10, align 1, !dbg !14951
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14373, metadata !DIExpression()) #23, !dbg !14952
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14954
  br label %13, !dbg !14955

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14956
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14957
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14958
  %16 = zext i1 %15 to i32, !dbg !14958
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !14959
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !14960
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14962
  br i1 %17, label %19, label %18, !dbg !14963

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14964
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14964
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !14964
  unreachable, !dbg !14964

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14207, metadata !DIExpression()) #23, !dbg !14960
  call void @llvm.dbg.value(metadata i32 %7, metadata !14221, metadata !DIExpression()) #23, !dbg !14965
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14967, !srcloc !14227
  call void @llvm.dbg.value(metadata i32 1, metadata !14927, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i32 undef, metadata !14927, metadata !DIExpression()), !dbg !14932
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14968
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14970
  br i1 %21, label %22, label %23, !dbg !14971

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14972
  br label %23, !dbg !14974

23:                                               ; preds = %22, %19
  ret void, !dbg !14975
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14976 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14978, metadata !DIExpression()), !dbg !14979
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14980
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14981
  ret i32 %3, !dbg !14982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14983 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14985, metadata !DIExpression()), !dbg !14986
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14987
  %3 = load i8, i8* %2, align 1, !dbg !14988
  %4 = or i8 %3, 16, !dbg !14988
  store i8 %4, i8* %2, align 1, !dbg !14988
  ret void, !dbg !14989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14990 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14991, !srcloc !14188
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14991
  call void @llvm.dbg.value(metadata i32 %2, metadata !14185, metadata !DIExpression()) #23, !dbg !14993
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14993
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14994
  ret void, !dbg !14995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14998, metadata !DIExpression()), !dbg !14999
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15000
  br i1 %2, label %3, label %5, !dbg !15002

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15003
  br label %6, !dbg !15005

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14221, metadata !DIExpression()) #23, !dbg !15006
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15009, !srcloc !14227
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15010
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15011 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15013, metadata !DIExpression()), !dbg !15015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !15016
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15018, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15020
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15020
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15016
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15021
  br i1 %3, label %5, label %4, !dbg !15022

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15023
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15023
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15023
  unreachable, !dbg !15023

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15018
  call void @llvm.dbg.value(metadata i32 %6, metadata !14185, metadata !DIExpression()) #23, !dbg !15020
  call void @llvm.dbg.value(metadata i32 %6, metadata !14179, metadata !DIExpression()) #23, !dbg !15016
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15024
  call void @llvm.dbg.value(metadata i32 %6, metadata !15014, metadata !DIExpression()), !dbg !15015
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15025
  br i1 %7, label %12, label %8, !dbg !15027

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15028
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !15028
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15031
  br i1 %9, label %11, label %10, !dbg !15032

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15033
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15033
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15033
  unreachable, !dbg !15033

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14207, metadata !DIExpression()) #23, !dbg !15028
  call void @llvm.dbg.value(metadata i32 %6, metadata !14221, metadata !DIExpression()) #23, !dbg !15034
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15036, !srcloc !14227
  br label %14, !dbg !15037

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15038
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15039
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15040
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15040
  br label %14, !dbg !15041

14:                                               ; preds = %12, %11
  ret void, !dbg !15041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15042 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15044, metadata !DIExpression()), !dbg !15045
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15046
  %3 = load i8, i8* %2, align 1, !dbg !15046
  %4 = and i8 %3, 16, !dbg !15047
  %5 = icmp ne i8 %4, 0, !dbg !15048
  ret i1 %5, !dbg !15049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15050 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15052, metadata !DIExpression()), !dbg !15053
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15054
  %3 = load i8, i8* %2, align 1, !dbg !15055
  %4 = and i8 %3, -17, !dbg !15055
  store i8 %4, i8* %2, align 1, !dbg !15055
  ret void, !dbg !15056
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15057 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15067, metadata !DIExpression()), !dbg !15071
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15065, metadata !DIExpression()), !dbg !15071
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15066, metadata !DIExpression()), !dbg !15071
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15072
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15072
  br i1 %5, label %9, label %6, !dbg !15072

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15072
  br i1 %7, label %9, label %8, !dbg !15075

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 773) #25, !dbg !15076
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 773) #25, !dbg !15076
  unreachable, !dbg !15076

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15068, metadata !DIExpression()), !dbg !15078
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !15079
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15081, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15083
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15083
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15079
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15084
  br i1 %11, label %13, label %12, !dbg !15085

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15086
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15086
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15086
  unreachable, !dbg !15086

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15083
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15079
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15087
  call void @llvm.dbg.value(metadata i32 undef, metadata !15070, metadata !DIExpression()), !dbg !15078
  call void @llvm.dbg.value(metadata i32 undef, metadata !15068, metadata !DIExpression()), !dbg !15078
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15088
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15091
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !15091
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15093
  br i1 %14, label %16, label %15, !dbg !15094

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15095
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15095
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15095
  unreachable, !dbg !15095

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15081
  call void @llvm.dbg.value(metadata i32 %17, metadata !14185, metadata !DIExpression()) #23, !dbg !15083
  call void @llvm.dbg.value(metadata i32 %17, metadata !14179, metadata !DIExpression()) #23, !dbg !15079
  call void @llvm.dbg.value(metadata i32 %17, metadata !15070, metadata !DIExpression()), !dbg !15078
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15091
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()) #23, !dbg !15096
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15098, !srcloc !14227
  call void @llvm.dbg.value(metadata i32 1, metadata !15068, metadata !DIExpression()), !dbg !15078
  call void @llvm.dbg.value(metadata i32 undef, metadata !15068, metadata !DIExpression()), !dbg !15078
  ret void, !dbg !15099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15100 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15102, metadata !DIExpression()), !dbg !15103
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15104
  %3 = load i8, i8* %2, align 1, !dbg !15104
  %4 = and i8 %3, 1, !dbg !15105
  %5 = icmp ne i8 %4, 0, !dbg !15106
  ret i1 %5, !dbg !15107
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15108 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15112, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15110, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15111, metadata !DIExpression()), !dbg !15113
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !15114
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15115
  ret void, !dbg !15116
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !15117 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15121, metadata !DIExpression()), !dbg !15123
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15122, metadata !DIExpression()), !dbg !15123
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15124
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15125
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !15126
  br i1 %3, label %24, label %4, !dbg !15128

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15129
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !15131
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !15132
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14396, metadata !DIExpression()) #23, !dbg !15133
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14402, metadata !DIExpression()) #23, !dbg !15133
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15135
  br i1 %7, label %8, label %9, !dbg !15136

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 186) #25, !dbg !15137
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 186) #25, !dbg !15137
  unreachable, !dbg !15137

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.285(%struct._dnode* noundef nonnull %6) #25, !dbg !15138
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14403, metadata !DIExpression()) #23, !dbg !15133
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15139
  br i1 %11, label %22, label %12, !dbg !15138

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14403, metadata !DIExpression()) #23, !dbg !15133
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15140
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14403, metadata !DIExpression()) #23, !dbg !15133
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15141
  %16 = icmp sgt i32 %15, 0, !dbg !15142
  br i1 %16, label %17, label %19, !dbg !15143

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15144
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15145
  br label %24, !dbg !15146

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15139
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14403, metadata !DIExpression()) #23, !dbg !15133
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15139
  br i1 %21, label %22, label %12, !dbg !15138, !llvm.loop !15147

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15149
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15150
  br label %24, !dbg !15151

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15152
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15153 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15158, metadata !DIExpression()), !dbg !15159
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15157, metadata !DIExpression()), !dbg !15159
  %4 = icmp eq i64 %3, -1, !dbg !15160
  br i1 %4, label %6, label %5, !dbg !15162

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.300(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15163
  br label %6, !dbg !15165

6:                                                ; preds = %5, %2
  ret void, !dbg !15166
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.300(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15167 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15170, metadata !DIExpression()), !dbg !15171
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15169, metadata !DIExpression()), !dbg !15171
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15172
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15173
  ret void, !dbg !15174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15175 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15177, metadata !DIExpression()), !dbg !15185
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15186
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15186
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15178, metadata !DIExpression()), !dbg !15185
  call void @llvm.dbg.value(metadata i32 0, metadata !15179, metadata !DIExpression()), !dbg !15187
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !15188
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15190, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15192
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15192
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15188
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15193
  br i1 %5, label %7, label %6, !dbg !15194

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15195
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15195
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15195
  unreachable, !dbg !15195

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15192
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15188
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15196
  call void @llvm.dbg.value(metadata i32 undef, metadata !15181, metadata !DIExpression()), !dbg !15187
  call void @llvm.dbg.value(metadata i32 undef, metadata !15179, metadata !DIExpression()), !dbg !15187
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15197
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15198
  %10 = load i8, i8* %9, align 1, !dbg !15198
  %11 = and i8 %10, 40, !dbg !15199
  %12 = icmp eq i8 %11, 0, !dbg !15199
  call void @llvm.dbg.value(metadata i1 %12, metadata !15182, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15200
  br i1 %12, label %13, label %20, !dbg !15201

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15202
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15202
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15202
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15206
  br i1 %17, label %19, label %18, !dbg !15207

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15208
  br label %19, !dbg !15210

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.296(%struct.k_thread* noundef nonnull %3) #24, !dbg !15211
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15212
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15213
  br label %20, !dbg !15214

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15215
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !15215
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15217
  br i1 %21, label %23, label %22, !dbg !15218

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15219
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15219
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15219
  unreachable, !dbg !15219

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15190
  call void @llvm.dbg.value(metadata i32 %24, metadata !14185, metadata !DIExpression()) #23, !dbg !15192
  call void @llvm.dbg.value(metadata i32 %24, metadata !14179, metadata !DIExpression()) #23, !dbg !15188
  call void @llvm.dbg.value(metadata i32 %24, metadata !15181, metadata !DIExpression()), !dbg !15187
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15215
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()) #23, !dbg !15220
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15222, !srcloc !14227
  call void @llvm.dbg.value(metadata i32 1, metadata !15179, metadata !DIExpression()), !dbg !15187
  call void @llvm.dbg.value(metadata i32 undef, metadata !15179, metadata !DIExpression()), !dbg !15187
  ret void, !dbg !15223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15226, metadata !DIExpression()), !dbg !15227
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15228
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15229
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15230
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15231
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15232
  ret void, !dbg !15233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15234 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15238, metadata !DIExpression()), !dbg !15239
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15240
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15240
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15240
  br i1 %4, label %5, label %6, !dbg !15243

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 726) #25, !dbg !15244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 726) #25, !dbg !15244
  unreachable, !dbg !15244

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15247 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15249, metadata !DIExpression()), !dbg !15250
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15251
  %3 = load i8, i8* %2, align 1, !dbg !15252
  %4 = and i8 %3, -3, !dbg !15252
  store i8 %4, i8* %2, align 1, !dbg !15252
  ret void, !dbg !15253
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15254 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15256, metadata !DIExpression()), !dbg !15257
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15258
  br i1 %2, label %3, label %7, !dbg !15260

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14365, metadata !DIExpression()) #23, !dbg !15261
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15264
  %5 = load i8, i8* %4, align 1, !dbg !15265
  %6 = and i8 %5, 127, !dbg !15265
  store i8 %6, i8* %4, align 1, !dbg !15265
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14373, metadata !DIExpression()) #23, !dbg !15266
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15268
  br label %7, !dbg !15269

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15270
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15271
  %10 = zext i1 %9 to i32, !dbg !15271
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15272
  ret void, !dbg !15273
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15274 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15276, metadata !DIExpression()), !dbg !15277
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15278
  %3 = load i8, i8* %2, align 1, !dbg !15279
  %4 = or i8 %3, 2, !dbg !15279
  store i8 %4, i8* %2, align 1, !dbg !15279
  ret void, !dbg !15280
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15281 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15283, metadata !DIExpression()), !dbg !15287
  call void @llvm.dbg.value(metadata i32 0, metadata !15284, metadata !DIExpression()), !dbg !15288
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !15289
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15291, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15293
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15293
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15289
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15294
  br i1 %3, label %5, label %4, !dbg !15295

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15296
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15296
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15296
  unreachable, !dbg !15296

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15293
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15289
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15297
  call void @llvm.dbg.value(metadata i32 undef, metadata !15286, metadata !DIExpression()), !dbg !15288
  call void @llvm.dbg.value(metadata i32 undef, metadata !15284, metadata !DIExpression()), !dbg !15288
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15298
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15301
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !15301
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15303
  br i1 %6, label %8, label %7, !dbg !15304

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15305
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15305
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15305
  unreachable, !dbg !15305

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15291
  call void @llvm.dbg.value(metadata i32 %9, metadata !14185, metadata !DIExpression()) #23, !dbg !15293
  call void @llvm.dbg.value(metadata i32 %9, metadata !14179, metadata !DIExpression()) #23, !dbg !15289
  call void @llvm.dbg.value(metadata i32 %9, metadata !15286, metadata !DIExpression()), !dbg !15288
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15301
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()) #23, !dbg !15306
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15308, !srcloc !14227
  call void @llvm.dbg.value(metadata i32 1, metadata !15284, metadata !DIExpression()), !dbg !15288
  call void @llvm.dbg.value(metadata i32 undef, metadata !15284, metadata !DIExpression()), !dbg !15288
  ret void, !dbg !15309
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15310 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15316, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i32 %0, metadata !15314, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15315, metadata !DIExpression()), !dbg !15321
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15322
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15323
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15324
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15325
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15326
  call void @llvm.dbg.value(metadata i32 %6, metadata !15317, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i32 0, metadata !15318, metadata !DIExpression()), !dbg !15327
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !15328
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15330, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15332
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15332
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15328
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15333
  br i1 %8, label %10, label %9, !dbg !15334

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15335
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15335
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15335
  unreachable, !dbg !15335

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15332
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15328
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15336
  call void @llvm.dbg.value(metadata i32 undef, metadata !15320, metadata !DIExpression()), !dbg !15327
  call void @llvm.dbg.value(metadata i32 undef, metadata !15318, metadata !DIExpression()), !dbg !15327
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15337
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15341
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15342
  br i1 %13, label %14, label %15, !dbg !15343

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15344
  br label %15, !dbg !15346

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15347
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !15347
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15349
  br i1 %16, label %18, label %17, !dbg !15350

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15351
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15351
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15351
  unreachable, !dbg !15351

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15330
  call void @llvm.dbg.value(metadata i32 %19, metadata !14185, metadata !DIExpression()) #23, !dbg !15332
  call void @llvm.dbg.value(metadata i32 %19, metadata !14179, metadata !DIExpression()) #23, !dbg !15328
  call void @llvm.dbg.value(metadata i32 %19, metadata !15320, metadata !DIExpression()), !dbg !15327
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15347
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()) #23, !dbg !15352
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15354, !srcloc !14227
  call void @llvm.dbg.value(metadata i32 1, metadata !15318, metadata !DIExpression()), !dbg !15327
  call void @llvm.dbg.value(metadata i32 undef, metadata !15318, metadata !DIExpression()), !dbg !15327
  ret i32 %6, !dbg !15355
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15356 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15361, metadata !DIExpression()), !dbg !15364
  call void @llvm.dbg.value(metadata i64 undef, metadata !15363, metadata !DIExpression()), !dbg !15364
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15360, metadata !DIExpression()), !dbg !15364
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15362, metadata !DIExpression()), !dbg !15364
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15365
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15366
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15367
  br i1 %6, label %7, label %8, !dbg !15370

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 846) #25, !dbg !15371
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 846) #25, !dbg !15371
  unreachable, !dbg !15371

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !15373
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15375, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15373
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15378
  br i1 %10, label %12, label %11, !dbg !15379

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15380
  unreachable, !dbg !15380

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15373
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15381
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15382
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14858, metadata !DIExpression()) #23, !dbg !15384
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15386
  br i1 %14, label %16, label %15, !dbg !15387

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 225) #25, !dbg !15388
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15388
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 225) #25, !dbg !15388
  unreachable, !dbg !15388

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14849, metadata !DIExpression()) #23, !dbg !15389
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14854, metadata !DIExpression()) #23, !dbg !15389
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14858, metadata !DIExpression()) #23, !dbg !15391
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15393
  br i1 %17, label %19, label %18, !dbg !15394

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 225) #25, !dbg !15395
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15395
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 225) #25, !dbg !15395
  unreachable, !dbg !15395

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14849, metadata !DIExpression()) #23, !dbg !15389
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15396
  ret i32 %21, !dbg !15397
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15398 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15402, metadata !DIExpression()), !dbg !15407
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15403, metadata !DIExpression()), !dbg !15407
  call void @llvm.dbg.value(metadata i32 0, metadata !15404, metadata !DIExpression()), !dbg !15408
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !15409
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15411, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15413
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15413
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15409
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15414
  br i1 %3, label %5, label %4, !dbg !15415

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15416
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15416
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15416
  unreachable, !dbg !15416

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15413
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15409
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15417
  call void @llvm.dbg.value(metadata i32 undef, metadata !15406, metadata !DIExpression()), !dbg !15408
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15403, metadata !DIExpression()), !dbg !15407
  call void @llvm.dbg.value(metadata i32 undef, metadata !15404, metadata !DIExpression()), !dbg !15408
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15418
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15403, metadata !DIExpression()), !dbg !15407
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15421
  br i1 %8, label %10, label %9, !dbg !15423

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15424
  br label %10, !dbg !15426

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15427
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !15427
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15429
  br i1 %11, label %13, label %12, !dbg !15430

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15431
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15431
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15431
  unreachable, !dbg !15431

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15411
  call void @llvm.dbg.value(metadata i32 %14, metadata !14185, metadata !DIExpression()) #23, !dbg !15413
  call void @llvm.dbg.value(metadata i32 %14, metadata !14179, metadata !DIExpression()) #23, !dbg !15409
  call void @llvm.dbg.value(metadata i32 %14, metadata !15406, metadata !DIExpression()), !dbg !15408
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15427
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()) #23, !dbg !15432
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15434, !srcloc !14227
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15403, metadata !DIExpression()), !dbg !15407
  call void @llvm.dbg.value(metadata i32 undef, metadata !15404, metadata !DIExpression()), !dbg !15408
  ret %struct.k_thread* %7, !dbg !15435
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15436 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15438, metadata !DIExpression()), !dbg !15443
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15439, metadata !DIExpression()), !dbg !15443
  call void @llvm.dbg.value(metadata i32 0, metadata !15440, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !15445
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15447, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15449
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15449
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15445
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15450
  br i1 %3, label %5, label %4, !dbg !15451

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15452
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15452
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15452
  unreachable, !dbg !15452

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15449
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15445
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15439, metadata !DIExpression()), !dbg !15443
  call void @llvm.dbg.value(metadata i32 undef, metadata !15440, metadata !DIExpression()), !dbg !15444
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15454
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15439, metadata !DIExpression()), !dbg !15443
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15457
  br i1 %8, label %11, label %9, !dbg !15459

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15460
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15462
  br label %11, !dbg !15463

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15464
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !15464
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15466
  br i1 %12, label %14, label %13, !dbg !15467

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15468
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15468
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15468
  unreachable, !dbg !15468

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15447
  call void @llvm.dbg.value(metadata i32 %15, metadata !14185, metadata !DIExpression()) #23, !dbg !15449
  call void @llvm.dbg.value(metadata i32 %15, metadata !14179, metadata !DIExpression()) #23, !dbg !15445
  call void @llvm.dbg.value(metadata i32 %15, metadata !15442, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15464
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()) #23, !dbg !15469
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15471, !srcloc !14227
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15439, metadata !DIExpression()), !dbg !15443
  call void @llvm.dbg.value(metadata i32 undef, metadata !15440, metadata !DIExpression()), !dbg !15444
  ret %struct.k_thread* %7, !dbg !15472
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15473 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15475, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15283, metadata !DIExpression()) #23, !dbg !15477
  call void @llvm.dbg.value(metadata i32 0, metadata !15284, metadata !DIExpression()) #23, !dbg !15479
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !15480
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15482, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15484
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15484
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15480
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15485
  br i1 %3, label %5, label %4, !dbg !15486

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15487
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15487
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15487
  unreachable, !dbg !15487

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15484
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15480
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15488
  call void @llvm.dbg.value(metadata i32 undef, metadata !15286, metadata !DIExpression()) #23, !dbg !15479
  call void @llvm.dbg.value(metadata i32 undef, metadata !15284, metadata !DIExpression()) #23, !dbg !15479
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !15490
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15492
  br i1 %6, label %8, label %7, !dbg !15493

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15494
  unreachable, !dbg !15494

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15482
  call void @llvm.dbg.value(metadata i32 %9, metadata !14185, metadata !DIExpression()) #23, !dbg !15484
  call void @llvm.dbg.value(metadata i32 %9, metadata !14179, metadata !DIExpression()) #23, !dbg !15480
  call void @llvm.dbg.value(metadata i32 %9, metadata !15286, metadata !DIExpression()) #23, !dbg !15479
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15490
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()) #23, !dbg !15495
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15497, !srcloc !14227
  call void @llvm.dbg.value(metadata i32 1, metadata !15284, metadata !DIExpression()) #23, !dbg !15479
  call void @llvm.dbg.value(metadata i32 undef, metadata !15284, metadata !DIExpression()) #23, !dbg !15479
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15498
  ret void, !dbg !15499
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15500 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15502, metadata !DIExpression()), !dbg !15508
  call void @llvm.dbg.value(metadata i32 %1, metadata !15503, metadata !DIExpression()), !dbg !15508
  call void @llvm.dbg.value(metadata i8 0, metadata !15504, metadata !DIExpression()), !dbg !15508
  call void @llvm.dbg.value(metadata i32 0, metadata !15505, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !15510
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15512, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15510
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15515
  br i1 %4, label %6, label %5, !dbg !15516

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15517
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15517
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15517
  unreachable, !dbg !15517

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15510
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15518
  call void @llvm.dbg.value(metadata i32 undef, metadata !15507, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.value(metadata i8 poison, metadata !15504, metadata !DIExpression()), !dbg !15508
  call void @llvm.dbg.value(metadata i32 undef, metadata !15505, metadata !DIExpression()), !dbg !15509
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15519
  call void @llvm.dbg.value(metadata i1 %9, metadata !15504, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15508
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15522

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14365, metadata !DIExpression()) #23, !dbg !15523
  %14 = load i8, i8* %7, align 1, !dbg !15529
  %15 = and i8 %14, 127, !dbg !15529
  store i8 %15, i8* %7, align 1, !dbg !15529
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14373, metadata !DIExpression()) #23, !dbg !15530
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15532
  store i8 %12, i8* %11, align 2, !dbg !15533
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14382, metadata !DIExpression()) #23, !dbg !15534
  %16 = load i8, i8* %7, align 1, !dbg !15536
  %17 = or i8 %16, -128, !dbg !15536
  store i8 %17, i8* %7, align 1, !dbg !15536
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14389, metadata !DIExpression()) #23, !dbg !15537
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14396, metadata !DIExpression()) #23, !dbg !15539
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14402, metadata !DIExpression()) #23, !dbg !15539
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15541
  br i1 %18, label %19, label %20, !dbg !15542

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 186) #25, !dbg !15543
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 186) #25, !dbg !15543
  unreachable, !dbg !15543

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.285(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15544
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14403, metadata !DIExpression()) #23, !dbg !15539
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15545
  br i1 %22, label %32, label %23, !dbg !15544

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14403, metadata !DIExpression()) #23, !dbg !15539
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15546
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14403, metadata !DIExpression()) #23, !dbg !15539
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15547
  %27 = icmp sgt i32 %26, 0, !dbg !15548
  br i1 %27, label %28, label %29, !dbg !15549

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15550
  br label %33, !dbg !15551

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15545
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14403, metadata !DIExpression()) #23, !dbg !15539
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15545
  br i1 %31, label %32, label %23, !dbg !15544, !llvm.loop !15552

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15554
  br label %33, !dbg !15555

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15556
  br label %35, !dbg !15557

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15558
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15560
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !15560
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15562
  br i1 %36, label %38, label %37, !dbg !15563

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15564
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15564
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15564
  unreachable, !dbg !15564

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15512
  call void @llvm.dbg.value(metadata i32 %39, metadata !14185, metadata !DIExpression()) #23, !dbg !15514
  call void @llvm.dbg.value(metadata i32 %39, metadata !14179, metadata !DIExpression()) #23, !dbg !15510
  call void @llvm.dbg.value(metadata i32 %39, metadata !15507, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15560
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()) #23, !dbg !15565
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15567, !srcloc !14227
  call void @llvm.dbg.value(metadata i8 poison, metadata !15504, metadata !DIExpression()), !dbg !15508
  call void @llvm.dbg.value(metadata i32 undef, metadata !15505, metadata !DIExpression()), !dbg !15509
  ret i1 %9, !dbg !15568
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15569 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15573, metadata !DIExpression()), !dbg !15576
  call void @llvm.dbg.value(metadata i32 %1, metadata !15574, metadata !DIExpression()), !dbg !15576
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15577
  call void @llvm.dbg.value(metadata i1 %3, metadata !15575, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15576
  br i1 %3, label %4, label %12, !dbg !15578

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15580
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15581
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15581
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15581
  %9 = load i8, i8* %8, align 1, !dbg !15581
  %10 = icmp eq i8 %9, 0, !dbg !15582
  br i1 %10, label %11, label %12, !dbg !15583

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15584
  br label %12, !dbg !15586

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15587
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15588 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15590, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !15594
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15596, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15598
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15598
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15594
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15599
  br i1 %2, label %4, label %3, !dbg !15600

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15601
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15601
  unreachable, !dbg !15601

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15598
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15594
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15602
  call void @llvm.dbg.value(metadata i32 undef, metadata !15592, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()), !dbg !15593
  tail call fastcc void @z_sched_lock() #24, !dbg !15603
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15606
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !15606
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15608
  br i1 %5, label %7, label %6, !dbg !15609

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15610
  unreachable, !dbg !15610

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15596
  call void @llvm.dbg.value(metadata i32 %8, metadata !14185, metadata !DIExpression()) #23, !dbg !15598
  call void @llvm.dbg.value(metadata i32 %8, metadata !14179, metadata !DIExpression()) #23, !dbg !15594
  call void @llvm.dbg.value(metadata i32 %8, metadata !15592, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15606
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()) #23, !dbg !15611
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15613, !srcloc !14227
  call void @llvm.dbg.value(metadata i32 1, metadata !15590, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()), !dbg !15593
  ret void, !dbg !15614
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15615 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15616, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 %1, metadata !14901, metadata !DIExpression()) #23, !dbg !15621
  %2 = icmp eq i32 %1, 0, !dbg !15622
  br i1 %2, label %4, label %3, !dbg !15623

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.314, i32 0, i32 0), i32 noundef 253) #25, !dbg !15624
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.287, i32 0, i32 0)) #25, !dbg !15624
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.314, i32 0, i32 0), i32 noundef 253) #25, !dbg !15624
  unreachable, !dbg !15624

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15626
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15626
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15626
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15626
  %9 = load i8, i8* %8, align 1, !dbg !15626
  %10 = icmp eq i8 %9, 1, !dbg !15626
  br i1 %10, label %11, label %12, !dbg !15629

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.314, i32 0, i32 0), i32 noundef 254) #25, !dbg !15630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.287, i32 0, i32 0)) #25, !dbg !15630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.314, i32 0, i32 0), i32 noundef 254) #25, !dbg !15630
  unreachable, !dbg !15630

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15632
  store i8 %13, i8* %8, align 1, !dbg !15632
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15633, !srcloc !15635
  ret void, !dbg !15636
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15637 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15639, metadata !DIExpression()), !dbg !15642
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !15643
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15645, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15647
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15647
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15643
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15648
  br i1 %2, label %4, label %3, !dbg !15649

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15650
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15650
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15650
  unreachable, !dbg !15650

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15647
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15643
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15651
  call void @llvm.dbg.value(metadata i32 undef, metadata !15641, metadata !DIExpression()), !dbg !15642
  call void @llvm.dbg.value(metadata i32 undef, metadata !15639, metadata !DIExpression()), !dbg !15642
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15652
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15652
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15652
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15652
  %9 = load i8, i8* %8, align 1, !dbg !15652
  %10 = icmp eq i8 %9, 0, !dbg !15652
  br i1 %10, label %11, label %12, !dbg !15657

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 999) #25, !dbg !15658
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.287, i32 0, i32 0)) #25, !dbg !15658
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 999) #25, !dbg !15658
  unreachable, !dbg !15658

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15660, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 %13, metadata !14901, metadata !DIExpression()) #23, !dbg !15665
  %14 = icmp eq i32 %13, 0, !dbg !15666
  br i1 %14, label %16, label %15, !dbg !15667

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15668
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.287, i32 0, i32 0)) #25, !dbg !15668
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15668
  unreachable, !dbg !15668

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15670
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15671
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15671
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15671
  %21 = load i8, i8* %20, align 1, !dbg !15672
  %22 = add i8 %21, 1, !dbg !15672
  store i8 %22, i8* %20, align 1, !dbg !15672
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15673
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15674
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !15674
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15676
  br i1 %23, label %25, label %24, !dbg !15677

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15678
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15678
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !15678
  unreachable, !dbg !15678

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15645
  call void @llvm.dbg.value(metadata i32 %26, metadata !14185, metadata !DIExpression()) #23, !dbg !15647
  call void @llvm.dbg.value(metadata i32 %26, metadata !14179, metadata !DIExpression()) #23, !dbg !15643
  call void @llvm.dbg.value(metadata i32 %26, metadata !15641, metadata !DIExpression()), !dbg !15642
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !15674
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()) #23, !dbg !15679
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15681, !srcloc !14227
  call void @llvm.dbg.value(metadata i32 1, metadata !15639, metadata !DIExpression()), !dbg !15642
  call void @llvm.dbg.value(metadata i32 undef, metadata !15639, metadata !DIExpression()), !dbg !15642
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15682
  ret void, !dbg !15683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15684 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15685
  ret %struct.k_thread* %1, !dbg !15686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15687 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15691, metadata !DIExpression()), !dbg !15696
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15692, metadata !DIExpression()), !dbg !15696
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15697
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15693, metadata !DIExpression()), !dbg !15696
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15698
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15694, metadata !DIExpression()), !dbg !15696
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15699
  call void @llvm.dbg.value(metadata i32 %5, metadata !15695, metadata !DIExpression()), !dbg !15696
  %6 = icmp sgt i32 %5, 0, !dbg !15700
  br i1 %6, label %17, label %7, !dbg !15702

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15703
  br i1 %8, label %17, label %9, !dbg !15705

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15706
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15706
  %12 = load i32, i32* %11, align 8, !dbg !15706
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15708
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15708
  %15 = load i32, i32* %14, align 8, !dbg !15708
  %16 = icmp ult i32 %12, %15, !dbg !15709
  br label %17, !dbg !15710

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15711
  ret i1 %18, !dbg !15712
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15713 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15730, metadata !DIExpression()), !dbg !15745
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15731, metadata !DIExpression()), !dbg !15745
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15746
  br i1 %4, label %5, label %6, !dbg !15749

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15750
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15750
  unreachable, !dbg !15750

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15752
  %8 = load i32, i32* %7, align 4, !dbg !15753
  %9 = add nsw i32 %8, 1, !dbg !15753
  store i32 %9, i32* %7, align 4, !dbg !15753
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15754
  store i32 %8, i32* %10, align 8, !dbg !15755
  %11 = load i32, i32* %7, align 4, !dbg !15756
  %12 = icmp eq i32 %11, 0, !dbg !15757
  br i1 %12, label %13, label %35, !dbg !15758

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15759
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15759
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15733, metadata !DIExpression()), !dbg !15759
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15759
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15759
  %17 = load i32, i32* %16, align 4, !dbg !15759
  %18 = shl i32 %17, 2, !dbg !15759
  %19 = alloca i8, i32 %18, align 8, !dbg !15759
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15759
  store i8* %19, i8** %20, align 4, !dbg !15759
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15759
  %22 = alloca i8, i32 %17, align 8, !dbg !15759
  store i8* %22, i8** %21, align 4, !dbg !15759
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15759
  store i32 -1, i32* %23, align 4, !dbg !15759
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15760
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15742, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15732, metadata !DIExpression()), !dbg !15745
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15762
  br i1 %25, label %26, label %27, !dbg !15759

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15762
  br label %35, !dbg !15763

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15732, metadata !DIExpression()), !dbg !15745
  %29 = load i32, i32* %7, align 4, !dbg !15764
  %30 = add nsw i32 %29, 1, !dbg !15764
  store i32 %30, i32* %7, align 4, !dbg !15764
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15766
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15766
  store i32 %29, i32* %32, align 8, !dbg !15767
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15760
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15742, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15732, metadata !DIExpression()), !dbg !15745
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15762
  br i1 %34, label %26, label %27, !dbg !15759, !llvm.loop !15768

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15770
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15771
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !15772
  ret void, !dbg !15773
}

; Function Attrs: optsize
declare !dbg !15774 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15779 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15782 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15784, metadata !DIExpression()), !dbg !15786
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15785, metadata !DIExpression()), !dbg !15786
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15787
  br i1 %3, label %4, label %5, !dbg !15790

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15791
  unreachable, !dbg !15791

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15793
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15794
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !15795
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15796
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15796
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15798
  br i1 %10, label %11, label %13, !dbg !15799

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15800
  store i32 0, i32* %12, align 4, !dbg !15802
  br label %13, !dbg !15803

13:                                               ; preds = %11, %5
  ret void, !dbg !15804
}

; Function Attrs: optsize
declare !dbg !15805 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15806 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15810, metadata !DIExpression()), !dbg !15813
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15811, metadata !DIExpression()), !dbg !15813
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15814
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !15815
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15812, metadata !DIExpression()), !dbg !15813
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15811, metadata !DIExpression()), !dbg !15813
  ret %struct.k_thread* %4, !dbg !15816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15817 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15821, metadata !DIExpression()), !dbg !15822
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !15823
  ret %struct.rbnode* %2, !dbg !15824
}

; Function Attrs: optsize
declare !dbg !15825 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #17 !dbg !15828 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15838, metadata !DIExpression()), !dbg !15842
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15843
  %3 = load i32, i32* %2, align 4, !dbg !15843
  %4 = icmp eq i32 %3, 0, !dbg !15845
  br i1 %4, label %10, label %5, !dbg !15846

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15839, metadata !DIExpression()), !dbg !15842
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15847, !range !7544
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15848
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15840, metadata !DIExpression()), !dbg !15842
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.285(%struct._dnode* noundef %7) #24, !dbg !15849
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15841, metadata !DIExpression()), !dbg !15842
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15839, metadata !DIExpression()), !dbg !15842
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15842
  ret %struct.k_thread* %11, !dbg !15850
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15851 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15855, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 0, metadata !15856, metadata !DIExpression()), !dbg !15858
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.319(%struct._wait_q_t* noundef %0) #24, !dbg !15859
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15857, metadata !DIExpression()), !dbg !15858
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15860
  br i1 %3, label %8, label %4, !dbg !15861

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15862
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15864
  call void @llvm.dbg.value(metadata i32 1, metadata !15856, metadata !DIExpression()), !dbg !15858
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.319(%struct._wait_q_t* noundef %0) #24, !dbg !15859
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15857, metadata !DIExpression()), !dbg !15858
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15860
  br i1 %7, label %8, label %4, !dbg !15861, !llvm.loop !15865

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15858
  ret i32 %9, !dbg !15867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.319(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15868 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15870, metadata !DIExpression()), !dbg !15871
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15872
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.285(%struct._dnode* noundef %2) #24, !dbg !15873
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15874
  ret %struct.k_thread* %4, !dbg !15875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !15876 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15885, metadata !DIExpression()), !dbg !15886
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15887
  tail call fastcc void @sys_dlist_init.320(%struct._dnode* noundef nonnull %2) #24, !dbg !15888
  ret void, !dbg !15889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.320(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15890 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15894, metadata !DIExpression()), !dbg !15895
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15896
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15897
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15898
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15899
  ret void, !dbg !15900
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15901 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !15902
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !15903
  ret void, !dbg !15904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15905 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15910, metadata !DIExpression()), !dbg !15911
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15912
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15912
  %4 = load i8, i8* %3, align 2, !dbg !15912
  %5 = sext i8 %4 to i32, !dbg !15913
  ret i32 %5, !dbg !15914
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15915 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15919, metadata !DIExpression()), !dbg !15922
  call void @llvm.dbg.value(metadata i32 %1, metadata !15920, metadata !DIExpression()), !dbg !15922
  %3 = add i32 %1, 16, !dbg !15923
  %4 = icmp ult i32 %3, 31, !dbg !15923
  br i1 %4, label %6, label %5, !dbg !15923

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15927
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.324, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !15927
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15927
  unreachable, !dbg !15927

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15929, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 %7, metadata !14901, metadata !DIExpression()) #23, !dbg !15934
  %8 = icmp eq i32 %7, 0, !dbg !15935
  br i1 %8, label %10, label %9, !dbg !15936

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15937
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.287, i32 0, i32 0)) #25, !dbg !15937
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15937
  unreachable, !dbg !15937

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15921, metadata !DIExpression()), !dbg !15922
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15939
  ret void, !dbg !15940
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15941 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !15942
  br i1 %1, label %8, label %2, !dbg !15943

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !15944
  br i1 %3, label %8, label %4, !dbg !15945

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15946
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !15947
  %7 = xor i1 %6, true, !dbg !15945
  br label %8, !dbg !15945

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !15949 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15950, !range !6723
  %2 = icmp eq i8 %1, 0, !dbg !15950
  ret i1 %2, !dbg !15951
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15952 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15955, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 %1, metadata !14901, metadata !DIExpression()) #23, !dbg !15960
  %2 = icmp eq i32 %1, 0, !dbg !15961
  br i1 %2, label %4, label %3, !dbg !15962

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15963
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.287, i32 0, i32 0)) #25, !dbg !15963
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15963
  unreachable, !dbg !15963

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !15965
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15967, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15969
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15969
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15965
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15970
  br i1 %6, label %8, label %7, !dbg !15971

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15972
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15972
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !15972
  unreachable, !dbg !15972

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !15969
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !15965
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15973
  call void @llvm.dbg.value(metadata i32 undef, metadata !15954, metadata !DIExpression()), !dbg !15974
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15975
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14365, metadata !DIExpression()) #23, !dbg !15978
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15980
  %11 = load i8, i8* %10, align 1, !dbg !15981
  %12 = and i8 %11, 127, !dbg !15981
  store i8 %12, i8* %10, align 1, !dbg !15981
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14373, metadata !DIExpression()) #23, !dbg !15982
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !15984
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15985
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14382, metadata !DIExpression()) #23, !dbg !15986
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15988
  %15 = load i8, i8* %14, align 1, !dbg !15989
  %16 = or i8 %15, -128, !dbg !15989
  store i8 %16, i8* %14, align 1, !dbg !15989
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14389, metadata !DIExpression()) #23, !dbg !15990
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14396, metadata !DIExpression()) #23, !dbg !15992
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14402, metadata !DIExpression()) #23, !dbg !15992
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !15994
  br i1 %17, label %18, label %19, !dbg !15995

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 186) #25, !dbg !15996
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 186) #25, !dbg !15996
  unreachable, !dbg !15996

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.285(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15997
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14403, metadata !DIExpression()) #23, !dbg !15992
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15998
  br i1 %21, label %32, label %22, !dbg !15997

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14403, metadata !DIExpression()) #23, !dbg !15992
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15999
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14403, metadata !DIExpression()) #23, !dbg !15992
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16000
  %26 = icmp sgt i32 %25, 0, !dbg !16001
  br i1 %26, label %27, label %29, !dbg !16002

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16003
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16004
  br label %34, !dbg !16005

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !15998
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14403, metadata !DIExpression()) #23, !dbg !15992
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15998
  br i1 %31, label %32, label %22, !dbg !15997, !llvm.loop !16006

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16008
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16009
  br label %34, !dbg !16010

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16011
  call void @llvm.dbg.value(metadata i32 undef, metadata !14849, metadata !DIExpression()) #23, !dbg !16012
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14854, metadata !DIExpression()) #23, !dbg !16012
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14858, metadata !DIExpression()) #23, !dbg !16014
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16016
  br i1 %35, label %37, label %36, !dbg !16017

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 225) #25, !dbg !16018
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16018
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 225) #25, !dbg !16018
  unreachable, !dbg !16018

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15967
  call void @llvm.dbg.value(metadata i32 %38, metadata !14185, metadata !DIExpression()) #23, !dbg !15969
  call void @llvm.dbg.value(metadata i32 %38, metadata !14179, metadata !DIExpression()) #23, !dbg !15965
  call void @llvm.dbg.value(metadata i32 %38, metadata !15954, metadata !DIExpression()), !dbg !15974
  call void @llvm.dbg.value(metadata i32 undef, metadata !14849, metadata !DIExpression()) #23, !dbg !16012
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16019
  ret void, !dbg !16020
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16021 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16025, metadata !DIExpression()), !dbg !16028
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16029, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 %3, metadata !14901, metadata !DIExpression()) #23, !dbg !16034
  %4 = icmp eq i32 %3, 0, !dbg !16035
  br i1 %4, label %6, label %5, !dbg !16036

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16037
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.287, i32 0, i32 0)) #25, !dbg !16037
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16037
  unreachable, !dbg !16037

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16039
  br i1 %7, label %8, label %10, !dbg !16041

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16042
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16044
  br label %15, !dbg !16045

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16026, metadata !DIExpression()), !dbg !16028
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16046
  %12 = sext i32 %11 to i64, !dbg !16046
  call void @llvm.dbg.value(metadata i64 %12, metadata !16026, metadata !DIExpression()), !dbg !16028
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16047
  %14 = trunc i64 %13 to i32, !dbg !16047
  call void @llvm.dbg.value(metadata i32 %14, metadata !16027, metadata !DIExpression()), !dbg !16028
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16028
  ret i32 %16, !dbg !16048
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16049 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16053, metadata !DIExpression()), !dbg !16054
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16055, !srcloc !16057
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16058
  ret void, !dbg !16059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16060 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16064, metadata !DIExpression()), !dbg !16068
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16069, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 %2, metadata !14901, metadata !DIExpression()) #23, !dbg !16074
  %3 = icmp eq i32 %2, 0, !dbg !16075
  br i1 %3, label %5, label %4, !dbg !16076

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16077
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.287, i32 0, i32 0)) #25, !dbg !16077
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16077
  unreachable, !dbg !16077

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16079
  br i1 %6, label %7, label %8, !dbg !16081

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16082
  br label %43, !dbg !16084

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16066, metadata !DIExpression()), !dbg !16068
  %9 = icmp sgt i64 %0, -3, !dbg !16085
  br i1 %9, label %10, label %14, !dbg !16087

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16088
  %12 = trunc i64 %0 to i32, !dbg !16090
  %13 = add i32 %11, %12, !dbg !16090
  call void @llvm.dbg.value(metadata i32 %13, metadata !16065, metadata !DIExpression()), !dbg !16068
  br label %17, !dbg !16091

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16092
  %16 = sub i32 -2, %15, !dbg !16092
  call void @llvm.dbg.value(metadata i32 %16, metadata !16065, metadata !DIExpression()), !dbg !16068
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16094
  call void @llvm.dbg.value(metadata i32 %18, metadata !16065, metadata !DIExpression()), !dbg !16068
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !16095
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16097, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !16099
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !16099
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !16095
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16100
  br i1 %20, label %22, label %21, !dbg !16101

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !16102
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16102
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !16102
  unreachable, !dbg !16102

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !16099
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !16095
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16103
  call void @llvm.dbg.value(metadata i32 undef, metadata !16067, metadata !DIExpression()), !dbg !16068
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16104
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16105
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16106
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16107
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16108
  tail call fastcc void @z_add_thread_timeout.300(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16108
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16109
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16110
  call void @llvm.dbg.value(metadata i32 undef, metadata !14849, metadata !DIExpression()) #23, !dbg !16111
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14854, metadata !DIExpression()) #23, !dbg !16111
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14858, metadata !DIExpression()) #23, !dbg !16113
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16115
  br i1 %27, label %29, label %28, !dbg !16116

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 225) #25, !dbg !16117
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16117
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 225) #25, !dbg !16117
  unreachable, !dbg !16117

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16097
  call void @llvm.dbg.value(metadata i32 %30, metadata !14185, metadata !DIExpression()) #23, !dbg !16099
  call void @llvm.dbg.value(metadata i32 %30, metadata !14179, metadata !DIExpression()) #23, !dbg !16095
  call void @llvm.dbg.value(metadata i32 %30, metadata !16067, metadata !DIExpression()), !dbg !16068
  call void @llvm.dbg.value(metadata i32 undef, metadata !14849, metadata !DIExpression()) #23, !dbg !16111
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16118
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16119
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16119
  br i1 %33, label %34, label %35, !dbg !16122

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16123
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.287, i32 0, i32 0)) #25, !dbg !16123
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16123
  unreachable, !dbg !16123

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16125
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16126
  %38 = zext i32 %37 to i64, !dbg !16126
  %39 = sub nsw i64 %36, %38, !dbg !16127
  call void @llvm.dbg.value(metadata i64 %39, metadata !16064, metadata !DIExpression()), !dbg !16068
  %40 = icmp sgt i64 %39, 0, !dbg !16128
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16128
  %42 = trunc i64 %41 to i32, !dbg !16128
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16068
  ret i32 %44, !dbg !16129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #3 !dbg !16130 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16132, metadata !DIExpression()), !dbg !16133
  call void @llvm.dbg.value(metadata i64 %0, metadata !14233, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i32 10000, metadata !14236, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i32 1000, metadata !14237, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i8 1, metadata !14238, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i1 false, metadata !14239, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16134
  call void @llvm.dbg.value(metadata i1 false, metadata !14240, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16134
  call void @llvm.dbg.value(metadata i8 0, metadata !14241, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i1 false, metadata !14242, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16134
  call void @llvm.dbg.value(metadata i1 true, metadata !14243, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16134
  call void @llvm.dbg.value(metadata i64 0, metadata !14244, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i64 0, metadata !14244, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i64 %0, metadata !14233, metadata !DIExpression()), !dbg !16134
  %2 = udiv i64 %0, 10, !dbg !16136
  ret i64 %2, !dbg !16140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16141 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16142, !srcloc !16144
  tail call void @z_impl_k_yield() #24, !dbg !16145
  ret void, !dbg !16146
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16147 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16151, metadata !DIExpression()), !dbg !16153
  %2 = sext i32 %0 to i64, !dbg !16154
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16155
  call void @llvm.dbg.value(metadata i64 %3, metadata !16152, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16153
  %4 = shl i64 %3, 32, !dbg !16156
  %5 = ashr exact i64 %4, 32, !dbg !16156
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16157
  call void @llvm.dbg.value(metadata i32 %6, metadata !16152, metadata !DIExpression()), !dbg !16153
  %7 = sext i32 %6 to i64, !dbg !16158
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16159
  %9 = trunc i64 %8 to i32, !dbg !16159
  ret i32 %9, !dbg !16160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !16161 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16163, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata i64 %0, metadata !14233, metadata !DIExpression()), !dbg !16165
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14236, metadata !DIExpression()), !dbg !16165
  call void @llvm.dbg.value(metadata i32 10000, metadata !14237, metadata !DIExpression()), !dbg !16165
  call void @llvm.dbg.value(metadata i8 1, metadata !14238, metadata !DIExpression()), !dbg !16165
  call void @llvm.dbg.value(metadata i1 false, metadata !14239, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16165
  call void @llvm.dbg.value(metadata i1 true, metadata !14240, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16165
  call void @llvm.dbg.value(metadata i8 0, metadata !14241, metadata !DIExpression()), !dbg !16165
  call void @llvm.dbg.value(metadata i1 false, metadata !14242, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16165
  call void @llvm.dbg.value(metadata i1 true, metadata !14243, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16165
  call void @llvm.dbg.value(metadata i64 0, metadata !14244, metadata !DIExpression()), !dbg !16165
  call void @llvm.dbg.value(metadata i64 0, metadata !14244, metadata !DIExpression()), !dbg !16165
  %2 = add i64 %0, 99, !dbg !16167
  call void @llvm.dbg.value(metadata i64 %2, metadata !14233, metadata !DIExpression()), !dbg !16165
  %3 = udiv i64 %2, 100, !dbg !16168
  ret i64 %3, !dbg !16169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #3 !dbg !16170 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16172, metadata !DIExpression()), !dbg !16173
  call void @llvm.dbg.value(metadata i64 %0, metadata !14233, metadata !DIExpression()), !dbg !16174
  call void @llvm.dbg.value(metadata i32 10000, metadata !14236, metadata !DIExpression()), !dbg !16174
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14237, metadata !DIExpression()), !dbg !16174
  call void @llvm.dbg.value(metadata i8 1, metadata !14238, metadata !DIExpression()), !dbg !16174
  call void @llvm.dbg.value(metadata i1 false, metadata !14239, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16174
  call void @llvm.dbg.value(metadata i1 false, metadata !14240, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16174
  call void @llvm.dbg.value(metadata i8 0, metadata !14241, metadata !DIExpression()), !dbg !16174
  call void @llvm.dbg.value(metadata i1 true, metadata !14242, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16174
  call void @llvm.dbg.value(metadata i1 false, metadata !14243, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16174
  call void @llvm.dbg.value(metadata i64 0, metadata !14244, metadata !DIExpression()), !dbg !16174
  call void @llvm.dbg.value(metadata i64 0, metadata !14244, metadata !DIExpression()), !dbg !16174
  %2 = mul i64 %0, 100, !dbg !16176
  ret i64 %2, !dbg !16178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16179 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16181, metadata !DIExpression()), !dbg !16182
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16183
  br i1 %2, label %14, label %3, !dbg !16185

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16186
  %5 = icmp slt i32 %4, 0, !dbg !16188
  br i1 %5, label %6, label %10, !dbg !16189

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16190
  %8 = load i8, i8* %7, align 1, !dbg !16190
  %9 = icmp eq i8 %8, 16, !dbg !16193
  br i1 %9, label %10, label %14, !dbg !16194

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16195
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16196
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16197, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 %11, metadata !14901, metadata !DIExpression()) #23, !dbg !16201
  %12 = icmp eq i32 %11, 0, !dbg !16202
  br i1 %12, label %13, label %14, !dbg !16203

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16204
  br label %14, !dbg !16206

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16208 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16210, metadata !DIExpression()), !dbg !16211
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16212
  %3 = load i8, i8* %2, align 1, !dbg !16212
  %4 = and i8 %3, 2, !dbg !16213
  %5 = icmp ne i8 %4, 0, !dbg !16214
  ret i1 %5, !dbg !16215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16216 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16221
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16220, metadata !DIExpression()), !dbg !16222
  ret %struct.k_thread* %1, !dbg !16223
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16224 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16225, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 %1, metadata !14901, metadata !DIExpression()) #23, !dbg !16228
  %2 = icmp eq i32 %1, 0, !dbg !16229
  br i1 %2, label %3, label %8, !dbg !16230

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16231
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16232
  %6 = icmp ne i32 %5, 0, !dbg !16230
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16233
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16234 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16236, metadata !DIExpression()), !dbg !16238
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !16239
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16241, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !16243
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !16243
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !16239
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16244
  br i1 %3, label %5, label %4, !dbg !16245

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !16246
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16246
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !16246
  unreachable, !dbg !16246

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16241
  call void @llvm.dbg.value(metadata i32 %6, metadata !14185, metadata !DIExpression()) #23, !dbg !16243
  call void @llvm.dbg.value(metadata i32 %6, metadata !14179, metadata !DIExpression()) #23, !dbg !16239
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16247
  call void @llvm.dbg.value(metadata i32 %6, metadata !16237, metadata !DIExpression()), !dbg !16238
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16248
  %8 = load i8, i8* %7, align 4, !dbg !16248
  %9 = and i8 %8, 1, !dbg !16250
  %10 = icmp eq i8 %9, 0, !dbg !16251
  br i1 %10, label %15, label %11, !dbg !16252

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !16253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !16253
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16256
  br i1 %12, label %14, label %13, !dbg !16257

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !16258
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16258
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !16258
  unreachable, !dbg !16258

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14207, metadata !DIExpression()) #23, !dbg !16253
  call void @llvm.dbg.value(metadata i32 %6, metadata !14221, metadata !DIExpression()) #23, !dbg !16259
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16261, !srcloc !14227
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16262
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.333, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16262
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16262
  unreachable, !dbg !16262

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16266
  %17 = load i8, i8* %16, align 1, !dbg !16266
  %18 = and i8 %17, 8, !dbg !16268
  %19 = icmp eq i8 %18, 0, !dbg !16269
  br i1 %19, label %24, label %20, !dbg !16270

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !16271
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !16271
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16274
  br i1 %21, label %23, label %22, !dbg !16275

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !16276
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16276
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !16276
  unreachable, !dbg !16276

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14207, metadata !DIExpression()) #23, !dbg !16271
  call void @llvm.dbg.value(metadata i32 %6, metadata !14221, metadata !DIExpression()) #23, !dbg !16277
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16279, !srcloc !14227
  br label %39, !dbg !16280

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16281
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16282
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16284
  br i1 %26, label %27, label %35, !dbg !16285

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16286, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 %28, metadata !14901, metadata !DIExpression()) #23, !dbg !16289
  %29 = icmp eq i32 %28, 0, !dbg !16290
  br i1 %29, label %30, label %35, !dbg !16291

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14849, metadata !DIExpression()) #23, !dbg !16292
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14854, metadata !DIExpression()) #23, !dbg !16292
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14858, metadata !DIExpression()) #23, !dbg !16295
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16297
  br i1 %31, label %33, label %32, !dbg !16298

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 225) #25, !dbg !16299
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 225) #25, !dbg !16299
  unreachable, !dbg !16299

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14849, metadata !DIExpression()) #23, !dbg !16292
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16300
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16301
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.334, i32 0, i32 0)) #25, !dbg !16301
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16301
  unreachable, !dbg !16301

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !16305
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !16305
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16307
  br i1 %36, label %38, label %37, !dbg !16308

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !16309
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16309
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !16309
  unreachable, !dbg !16309

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14207, metadata !DIExpression()) #23, !dbg !16305
  call void @llvm.dbg.value(metadata i32 %6, metadata !14221, metadata !DIExpression()) #23, !dbg !16310
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16312, !srcloc !14227
  br label %39, !dbg !16313

39:                                               ; preds = %38, %23
  ret void, !dbg !16313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16314 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16316, metadata !DIExpression()), !dbg !16317
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16318
  %3 = load i8, i8* %2, align 1, !dbg !16318
  %4 = and i8 %3, 8, !dbg !16320
  %5 = icmp eq i8 %4, 0, !dbg !16321
  br i1 %5, label %6, label %20, !dbg !16322

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16323
  %8 = or i8 %7, 8, !dbg !16323
  store i8 %8, i8* %2, align 1, !dbg !16323
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16325
  br i1 %9, label %10, label %12, !dbg !16327

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14365, metadata !DIExpression()) #23, !dbg !16328
  %11 = and i8 %8, 95, !dbg !16331
  store i8 %11, i8* %2, align 1, !dbg !16331
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14373, metadata !DIExpression()) #23, !dbg !16332
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16334
  br label %12, !dbg !16335

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16336
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16336
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16338
  br i1 %15, label %17, label %16, !dbg !16339

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16340
  br label %17, !dbg !16342

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16343
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16344
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16345
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16346
  br label %20, !dbg !16347

20:                                               ; preds = %17, %1
  ret void, !dbg !16348
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16349 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16353, metadata !DIExpression()), !dbg !16355
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.319(%struct._wait_q_t* noundef %0) #24, !dbg !16356
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16354, metadata !DIExpression()), !dbg !16355
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16357
  br i1 %3, label %10, label %4, !dbg !16358

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16359
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16361
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16362, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata i32 0, metadata !16367, metadata !DIExpression()), !dbg !16368
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16370
  store i32 0, i32* %7, align 4, !dbg !16371
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16372
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.319(%struct._wait_q_t* noundef %0) #24, !dbg !16356
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16354, metadata !DIExpression()), !dbg !16355
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16357
  br i1 %9, label %10, label %4, !dbg !16358, !llvm.loop !16373

10:                                               ; preds = %4, %1
  ret void, !dbg !16375
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16376 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16381, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16380, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !16385
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16387, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !16389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !16389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !16385
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16390
  br i1 %4, label %6, label %5, !dbg !16391

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !16392
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16392
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !16392
  unreachable, !dbg !16392

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16387
  call void @llvm.dbg.value(metadata i32 %7, metadata !14185, metadata !DIExpression()) #23, !dbg !16389
  call void @llvm.dbg.value(metadata i32 %7, metadata !14179, metadata !DIExpression()) #23, !dbg !16385
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16393
  call void @llvm.dbg.value(metadata i32 %7, metadata !16382, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i32 0, metadata !16383, metadata !DIExpression()), !dbg !16384
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16394
  %9 = load i8, i8* %8, align 1, !dbg !16394
  %10 = and i8 %9, 8, !dbg !16396
  %11 = icmp eq i8 %10, 0, !dbg !16397
  br i1 %11, label %12, label %35, !dbg !16398

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16381, metadata !DIExpression()), !dbg !16384
  %14 = icmp eq i64 %13, 0, !dbg !16399
  br i1 %14, label %35, label %15, !dbg !16401

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16402
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16404
  br i1 %17, label %35, label %18, !dbg !16405

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16406
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16406
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16407
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16408
  br i1 %22, label %35, label %23, !dbg !16409

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16410, !srcloc !14905
  call void @llvm.dbg.value(metadata i32 %24, metadata !14901, metadata !DIExpression()) #23, !dbg !16416
  %25 = icmp eq i32 %24, 0, !dbg !16417
  br i1 %25, label %27, label %26, !dbg !16418

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16419
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.335, i32 0, i32 0)) #25, !dbg !16419
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16419
  unreachable, !dbg !16419

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16421
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16422
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !16423
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16424
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16425
  call void @llvm.dbg.value(metadata i32 undef, metadata !14849, metadata !DIExpression()) #23, !dbg !16426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14854, metadata !DIExpression()) #23, !dbg !16426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14858, metadata !DIExpression()) #23, !dbg !16428
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16430
  br i1 %31, label %33, label %32, !dbg !16431

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 225) #25, !dbg !16432
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16432
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 225) #25, !dbg !16432
  unreachable, !dbg !16432

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14849, metadata !DIExpression()) #23, !dbg !16426
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16433
  call void @llvm.dbg.value(metadata i32 %34, metadata !16383, metadata !DIExpression()), !dbg !16384
  br label %40, !dbg !16434

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16435
  call void @llvm.dbg.value(metadata i32 %36, metadata !16383, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !16436
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !16436
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16438
  br i1 %37, label %39, label %38, !dbg !16439

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !16440
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16440
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !16440
  unreachable, !dbg !16440

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14207, metadata !DIExpression()) #23, !dbg !16436
  call void @llvm.dbg.value(metadata i32 %7, metadata !14221, metadata !DIExpression()) #23, !dbg !16441
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16443, !srcloc !14227
  br label %40, !dbg !16444

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16384
  ret i32 %41, !dbg !16445
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16446 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16450, metadata !DIExpression()), !dbg !16458
  call void @llvm.dbg.value(metadata i32 %1, metadata !16451, metadata !DIExpression()), !dbg !16458
  call void @llvm.dbg.value(metadata i8* %2, metadata !16452, metadata !DIExpression()), !dbg !16458
  call void @llvm.dbg.value(metadata i8 0, metadata !16454, metadata !DIExpression()), !dbg !16458
  call void @llvm.dbg.value(metadata i32 0, metadata !16455, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14173, metadata !DIExpression()) #23, !dbg !16460
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16462, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !16464
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !16464
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !16460
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16465
  br i1 %5, label %7, label %6, !dbg !16466

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !16467
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16467
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 148) #25, !dbg !16467
  unreachable, !dbg !16467

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #23, !dbg !16464
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #23, !dbg !16460
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16468
  call void @llvm.dbg.value(metadata i32 undef, metadata !16457, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i8 poison, metadata !16454, metadata !DIExpression()), !dbg !16458
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()), !dbg !16459
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16469
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16453, metadata !DIExpression()), !dbg !16458
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16472
  br i1 %10, label %15, label %11, !dbg !16474

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16475, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata i32 %1, metadata !16481, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata i8* %2, metadata !16482, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16362, metadata !DIExpression()), !dbg !16486
  call void @llvm.dbg.value(metadata i32 %1, metadata !16367, metadata !DIExpression()), !dbg !16486
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16488
  store i32 %1, i32* %12, align 4, !dbg !16489
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16490
  store i8* %2, i8** %13, align 4, !dbg !16491
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16492
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16493
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16494
  call void @llvm.dbg.value(metadata i8 1, metadata !16454, metadata !DIExpression()), !dbg !16458
  br label %15, !dbg !16495

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16454, metadata !DIExpression()), !dbg !16458
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !16496
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14212, metadata !DIExpression()) #23, !dbg !16496
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16498
  br i1 %16, label %18, label %17, !dbg !16499

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !16500
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.282, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16500
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.279, i32 0, i32 0), i32 noundef 194) #25, !dbg !16500
  unreachable, !dbg !16500

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16458
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16462
  call void @llvm.dbg.value(metadata i32 %20, metadata !14185, metadata !DIExpression()) #23, !dbg !16464
  call void @llvm.dbg.value(metadata i32 %20, metadata !14179, metadata !DIExpression()) #23, !dbg !16460
  call void @llvm.dbg.value(metadata i32 %20, metadata !16457, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()) #23, !dbg !16496
  call void @llvm.dbg.value(metadata i32 undef, metadata !14221, metadata !DIExpression()) #23, !dbg !16501
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16503, !srcloc !14227
  call void @llvm.dbg.value(metadata i8 poison, metadata !16454, metadata !DIExpression()), !dbg !16458
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()), !dbg !16459
  ret i1 %19, !dbg !16504
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16505 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16511, metadata !DIExpression()), !dbg !16516
  call void @llvm.dbg.value(metadata i64 undef, metadata !16513, metadata !DIExpression()), !dbg !16516
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16510, metadata !DIExpression()), !dbg !16516
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16512, metadata !DIExpression()), !dbg !16516
  call void @llvm.dbg.value(metadata i8** %4, metadata !16514, metadata !DIExpression()), !dbg !16516
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16517
  call void @llvm.dbg.value(metadata i32 %6, metadata !16515, metadata !DIExpression()), !dbg !16516
  %7 = icmp eq i8** %4, null, !dbg !16518
  br i1 %7, label %12, label %8, !dbg !16520

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16521
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16523
  %11 = load i8*, i8** %10, align 4, !dbg !16523
  store i8* %11, i8** %4, align 4, !dbg !16524
  br label %12, !dbg !16525

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_condvar_init(%struct.k_condvar* noundef %0) local_unnamed_addr #7 !dbg !16527 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16540, metadata !DIExpression()), !dbg !16541
  %2 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16542
  tail call fastcc void @z_waitq_init.336(%struct._wait_q_t* noundef %2) #24, !dbg !16543
  ret i32 0, !dbg !16544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.336(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !16545 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16550, metadata !DIExpression()), !dbg !16551
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16552
  tail call fastcc void @sys_dlist_init.337(%struct._dnode* noundef %2) #24, !dbg !16553
  ret void, !dbg !16554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.337(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16555 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16560, metadata !DIExpression()), !dbg !16561
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16562
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16563
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16564
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16565
  ret void, !dbg !16566
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16567 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16569, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.340, metadata !16657, metadata !DIExpression()) #23, !dbg !16664
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16666, !srcloc !16672
  call void @llvm.dbg.value(metadata i32 undef, metadata !16669, metadata !DIExpression()) #23, !dbg !16673
  call void @llvm.dbg.value(metadata i32 undef, metadata !16670, metadata !DIExpression()) #23, !dbg !16673
  call void @llvm.dbg.value(metadata i32 undef, metadata !16663, metadata !DIExpression()) #23, !dbg !16664
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.340) #25, !dbg !16674
  br i1 %3, label %5, label %4, !dbg !16677

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !16678
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.340) #25, !dbg !16678
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !16678
  unreachable, !dbg !16678

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16666
  call void @llvm.dbg.value(metadata i32 %6, metadata !16669, metadata !DIExpression()) #23, !dbg !16673
  call void @llvm.dbg.value(metadata i32 %6, metadata !16663, metadata !DIExpression()) #23, !dbg !16664
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.340) #25, !dbg !16680
  call void @llvm.dbg.value(metadata i32 %6, metadata !16570, metadata !DIExpression()), !dbg !16656
  %7 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16681
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #25, !dbg !16682
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16575, metadata !DIExpression()), !dbg !16656
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16683
  br i1 %9, label %13, label %10, !dbg !16685

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16686, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata i32 0, metadata !16691, metadata !DIExpression()), !dbg !16692
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !16695
  store i32 0, i32* %11, align 4, !dbg !16696
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %8) #25, !dbg !16697
  %12 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16698
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.340, [1 x i32] %12) #25, !dbg !16698
  br label %17, !dbg !16699

13:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16700, metadata !DIExpression()) #23, !dbg !16706
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.340, metadata !16705, metadata !DIExpression()) #23, !dbg !16706
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.340) #25, !dbg !16709
  br i1 %14, label %16, label %15, !dbg !16712

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !16713
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.340) #25, !dbg !16713
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !16713
  unreachable, !dbg !16713

16:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %6, metadata !16700, metadata !DIExpression()) #23, !dbg !16706
  call void @llvm.dbg.value(metadata i32 %6, metadata !16715, metadata !DIExpression()) #23, !dbg !16718
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16720, !srcloc !16721
  br label %17

17:                                               ; preds = %10, %16
  ret i32 0, !dbg !16722
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_broadcast(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16723 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16725, metadata !DIExpression()), !dbg !16729
  call void @llvm.dbg.value(metadata i32 0, metadata !16728, metadata !DIExpression()), !dbg !16729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.340, metadata !16657, metadata !DIExpression()) #23, !dbg !16730
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16732, !srcloc !16672
  call void @llvm.dbg.value(metadata i32 undef, metadata !16669, metadata !DIExpression()) #23, !dbg !16734
  call void @llvm.dbg.value(metadata i32 undef, metadata !16670, metadata !DIExpression()) #23, !dbg !16734
  call void @llvm.dbg.value(metadata i32 undef, metadata !16663, metadata !DIExpression()) #23, !dbg !16730
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.340) #25, !dbg !16735
  br i1 %3, label %5, label %4, !dbg !16736

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !16737
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.340) #25, !dbg !16737
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !16737
  unreachable, !dbg !16737

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16669, metadata !DIExpression()) #23, !dbg !16734
  call void @llvm.dbg.value(metadata i32 undef, metadata !16663, metadata !DIExpression()) #23, !dbg !16730
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.340) #25, !dbg !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()), !dbg !16729
  %6 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !16728, metadata !DIExpression()), !dbg !16729
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16739
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16726, metadata !DIExpression()), !dbg !16729
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16740
  br i1 %8, label %16, label %9, !dbg !16741

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %14, %9 ], [ %7, %5 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !16728, metadata !DIExpression()), !dbg !16729
  %12 = add nuw nsw i32 %11, 1, !dbg !16742
  call void @llvm.dbg.value(metadata i32 %12, metadata !16728, metadata !DIExpression()), !dbg !16729
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !16686, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.value(metadata i32 0, metadata !16691, metadata !DIExpression()), !dbg !16744
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 8, i32 1, !dbg !16746
  store i32 0, i32* %13, align 4, !dbg !16747
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #25, !dbg !16748
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16739
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16726, metadata !DIExpression()), !dbg !16729
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16740
  br i1 %15, label %16, label %9, !dbg !16741, !llvm.loop !16749

16:                                               ; preds = %9, %5
  %17 = phi i32 [ 0, %5 ], [ %12, %9 ], !dbg !16729
  %18 = extractvalue { i32, i32 } %2, 0, !dbg !16732
  call void @llvm.dbg.value(metadata i32 %18, metadata !16669, metadata !DIExpression()) #23, !dbg !16734
  call void @llvm.dbg.value(metadata i32 %18, metadata !16663, metadata !DIExpression()) #23, !dbg !16730
  call void @llvm.dbg.value(metadata i32 %18, metadata !16727, metadata !DIExpression()), !dbg !16729
  %19 = insertvalue [1 x i32] poison, i32 %18, 0, !dbg !16751
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.340, [1 x i32] %19) #25, !dbg !16751
  ret i32 %17, !dbg !16752
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef %0, %struct.k_mutex* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16753 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16770, metadata !DIExpression()), !dbg !16773
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16768, metadata !DIExpression()), !dbg !16773
  call void @llvm.dbg.value(metadata %struct.k_mutex* %1, metadata !16769, metadata !DIExpression()), !dbg !16773
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.340, metadata !16657, metadata !DIExpression()) #23, !dbg !16774
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16776, !srcloc !16672
  call void @llvm.dbg.value(metadata i32 undef, metadata !16669, metadata !DIExpression()) #23, !dbg !16778
  call void @llvm.dbg.value(metadata i32 undef, metadata !16670, metadata !DIExpression()) #23, !dbg !16778
  call void @llvm.dbg.value(metadata i32 undef, metadata !16663, metadata !DIExpression()) #23, !dbg !16774
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.340) #25, !dbg !16779
  br i1 %5, label %7, label %6, !dbg !16780

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !16781
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.340) #25, !dbg !16781
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !16781
  unreachable, !dbg !16781

7:                                                ; preds = %3
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !16776
  call void @llvm.dbg.value(metadata i32 %8, metadata !16669, metadata !DIExpression()) #23, !dbg !16778
  call void @llvm.dbg.value(metadata i32 %8, metadata !16663, metadata !DIExpression()) #23, !dbg !16774
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.340) #25, !dbg !16782
  call void @llvm.dbg.value(metadata i32 %8, metadata !16771, metadata !DIExpression()), !dbg !16773
  tail call fastcc void @k_mutex_unlock.349(%struct.k_mutex* noundef %1) #24, !dbg !16783
  %9 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16784
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !16785
  %11 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.340, [1 x i32] %10, %struct._wait_q_t* noundef %9, [1 x i64] %2) #25, !dbg !16785
  call void @llvm.dbg.value(metadata i32 %11, metadata !16772, metadata !DIExpression()), !dbg !16773
  tail call fastcc void @k_mutex_lock.350(%struct.k_mutex* noundef %1) #24, !dbg !16786
  ret i32 %11, !dbg !16787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock.349(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16788 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16792, metadata !DIExpression()), !dbg !16793
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16794, !srcloc !16796
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #25, !dbg !16797
  ret void, !dbg !16798
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock.350(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16799 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16804, metadata !DIExpression()), !dbg !16805
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16803, metadata !DIExpression()), !dbg !16805
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16806, !srcloc !16808
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !16809
  ret void, !dbg !16810
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16811 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16813
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16814
  ret void, !dbg !16815
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16816 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16826, metadata !DIExpression()), !dbg !16843
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16824, metadata !DIExpression()), !dbg !16843
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16825, metadata !DIExpression()), !dbg !16843
  %5 = icmp eq i64 %4, -1, !dbg !16844
  br i1 %5, label %63, label %6, !dbg !16846

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16847
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.355(%struct._dnode* noundef %7) #24, !dbg !16847
  br i1 %8, label %9, label %10, !dbg !16850

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.358, i32 0, i32 0), i32 noundef 99) #25, !dbg !16851
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.359, i32 0, i32 0)) #25, !dbg !16851
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.358, i32 0, i32 0), i32 noundef 99) #25, !dbg !16851
  unreachable, !dbg !16851

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16853
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16854
  call void @llvm.dbg.value(metadata i32 0, metadata !16827, metadata !DIExpression()), !dbg !16855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16856, metadata !DIExpression()) #23, !dbg !16863
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16865, !srcloc !16871
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !16863
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16873
  br i1 %13, label %15, label %14, !dbg !16876

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !16877
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16877
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !16877
  unreachable, !dbg !16877

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16865
  call void @llvm.dbg.value(metadata i32 %16, metadata !16868, metadata !DIExpression()) #23, !dbg !16872
  call void @llvm.dbg.value(metadata i32 %16, metadata !16862, metadata !DIExpression()) #23, !dbg !16863
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16879
  call void @llvm.dbg.value(metadata i32 %16, metadata !16833, metadata !DIExpression()), !dbg !16855
  call void @llvm.dbg.value(metadata i32 undef, metadata !16827, metadata !DIExpression()), !dbg !16855
  %17 = icmp slt i64 %4, -1, !dbg !16880
  br i1 %17, label %18, label %24, !dbg !16881

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16882
  %20 = add i64 %4, %19, !dbg !16883
  %21 = sub i64 -2, %20, !dbg !16883
  call void @llvm.dbg.value(metadata i64 %21, metadata !16837, metadata !DIExpression()), !dbg !16884
  %22 = icmp sgt i64 %21, 1, !dbg !16885
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16885
  br label %29, !dbg !16886

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16887
  %26 = tail call fastcc i32 @elapsed.363() #24, !dbg !16889
  %27 = sext i32 %26 to i64, !dbg !16889
  %28 = add nsw i64 %25, %27, !dbg !16890
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16891
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16892
  store i64 %30, i64* %31, align 8, !dbg !16893
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16894
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16834, metadata !DIExpression()), !dbg !16896
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16897
  br i1 %33, label %48, label %34, !dbg !16897

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16898
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16834, metadata !DIExpression()), !dbg !16896
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16902
  %38 = load i64, i64* %37, align 8, !dbg !16902
  %39 = icmp slt i64 %35, %38, !dbg !16903
  br i1 %39, label %40, label %44, !dbg !16904

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16902
  %42 = sub nsw i64 %38, %35, !dbg !16905
  store i64 %42, i64* %41, align 8, !dbg !16905
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16907
  tail call fastcc void @sys_dlist_insert.364(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16908
  br label %49, !dbg !16909

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16910
  store i64 %45, i64* %31, align 8, !dbg !16910
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16911
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16834, metadata !DIExpression()), !dbg !16896
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16897
  br i1 %47, label %48, label %34, !dbg !16897, !llvm.loop !16912

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.365(%struct._dnode* noundef nonnull %7) #24, !dbg !16914
  br label %49, !dbg !16917

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16918
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16919
  br i1 %51, label %52, label %59, !dbg !16920

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16921
  call void @llvm.dbg.value(metadata i32 %53, metadata !16840, metadata !DIExpression()), !dbg !16922
  %54 = icmp ne i32 %53, 0, !dbg !16923
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16925
  br i1 %57, label %59, label %58, !dbg !16925

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16926
  br label %59, !dbg !16928

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !16935
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16934, metadata !DIExpression()) #23, !dbg !16935
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16937
  br i1 %60, label %62, label %61, !dbg !16940

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !16941
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !16941
  unreachable, !dbg !16941

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16929, metadata !DIExpression()) #23, !dbg !16935
  call void @llvm.dbg.value(metadata i32 %16, metadata !16943, metadata !DIExpression()) #23, !dbg !16946
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16948, !srcloc !16949
  call void @llvm.dbg.value(metadata i32 undef, metadata !16827, metadata !DIExpression()), !dbg !16855
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.355(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16951 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16957, metadata !DIExpression()), !dbg !16958
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16959
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16959
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16960
  ret i1 %4, !dbg !16961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.363() unnamed_addr #1 !dbg !16962 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16965
  %2 = icmp eq i32 %1, 0, !dbg !16966
  br i1 %2, label %3, label %5, !dbg !16965

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16967
  br label %5, !dbg !16965

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16965
  ret i32 %6, !dbg !16968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16969 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.370() #24, !dbg !16975
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16973, metadata !DIExpression()), !dbg !16976
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16977
  ret %struct._timeout* %2, !dbg !16978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.364(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16979 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16983, metadata !DIExpression()), !dbg !16987
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16984, metadata !DIExpression()), !dbg !16987
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16988
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16988
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16985, metadata !DIExpression()), !dbg !16987
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16989
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16990
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16991
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16992
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16993
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16994
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16995
  ret void, !dbg !16996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16997 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17001, metadata !DIExpression()), !dbg !17003
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17004
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.368(%struct._dnode* noundef %2) #24, !dbg !17005
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17002, metadata !DIExpression()), !dbg !17003
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17006
  ret %struct._timeout* %4, !dbg !17007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.365(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17008 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17013, metadata !DIExpression()), !dbg !17016
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17014, metadata !DIExpression()), !dbg !17016
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17017
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17015, metadata !DIExpression()), !dbg !17016
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17018
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17019
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17020
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17021
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17022
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17023
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17024
  ret void, !dbg !17025
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17026 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17031
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17028, metadata !DIExpression()), !dbg !17032
  %2 = tail call fastcc i32 @elapsed.363() #24, !dbg !17033
  call void @llvm.dbg.value(metadata i32 %2, metadata !17029, metadata !DIExpression()), !dbg !17032
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17034
  br i1 %3, label %14, label %4, !dbg !17036

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17037
  %6 = load i64, i64* %5, align 8, !dbg !17037
  %7 = sext i32 %2 to i64, !dbg !17038
  %8 = sub nsw i64 %6, %7, !dbg !17039
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17040
  br i1 %9, label %14, label %10, !dbg !17041

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17042
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17042
  %13 = trunc i64 %12 to i32, !dbg !17042
  call void @llvm.dbg.value(metadata i32 %13, metadata !17030, metadata !DIExpression()), !dbg !17032
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17044
  call void @llvm.dbg.value(metadata i32 %15, metadata !17030, metadata !DIExpression()), !dbg !17032
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17045
  %17 = icmp ne i32 %16, 0, !dbg !17047
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17048
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17048
  call void @llvm.dbg.value(metadata i32 %20, metadata !17030, metadata !DIExpression()), !dbg !17032
  ret i32 %20, !dbg !17049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.368(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17050 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17054, metadata !DIExpression()), !dbg !17056
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17055, metadata !DIExpression()), !dbg !17056
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17057
  br i1 %2, label %5, label %3, !dbg !17058

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.369(%struct._dnode* noundef nonnull %0) #24, !dbg !17059
  br label %5, !dbg !17058

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17058
  ret %struct._dnode* %6, !dbg !17060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.369(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17061 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17063, metadata !DIExpression()), !dbg !17065
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17064, metadata !DIExpression()), !dbg !17065
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17066
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17067
  br i1 %3, label %7, label %4, !dbg !17068

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17069
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17069
  br label %7, !dbg !17068

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17068
  ret %struct._dnode* %8, !dbg !17070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.370() unnamed_addr #8 !dbg !17071 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17075, metadata !DIExpression()), !dbg !17076
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.371() #24, !dbg !17077
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17077
  ret %struct._dnode* %3, !dbg !17078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.371() unnamed_addr #8 !dbg !17079 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17083, metadata !DIExpression()), !dbg !17084
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17085
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17086
  ret i1 %2, !dbg !17087
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17088 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17092, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i32 -22, metadata !17093, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i32 0, metadata !17094, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16856, metadata !DIExpression()) #23, !dbg !17099
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17101, !srcloc !16871
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17103
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17103
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17099
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17104
  br i1 %3, label %5, label %4, !dbg !17105

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17106
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17106
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17106
  unreachable, !dbg !17106

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17103
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17099
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17107
  call void @llvm.dbg.value(metadata i32 undef, metadata !17096, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 -22, metadata !17093, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i32 undef, metadata !17094, metadata !DIExpression()), !dbg !17098
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17093, metadata !DIExpression()), !dbg !17097
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.355(%struct._dnode* noundef %6) #24, !dbg !17108
  br i1 %7, label %8, label %9, !dbg !17112

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17113
  call void @llvm.dbg.value(metadata i32 0, metadata !17093, metadata !DIExpression()), !dbg !17097
  br label %9, !dbg !17115

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17097
  call void @llvm.dbg.value(metadata i32 %10, metadata !17093, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !17116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16934, metadata !DIExpression()) #23, !dbg !17116
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17118
  br i1 %11, label %13, label %12, !dbg !17119

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17120
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17120
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17120
  unreachable, !dbg !17120

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17101
  call void @llvm.dbg.value(metadata i32 %14, metadata !16868, metadata !DIExpression()) #23, !dbg !17103
  call void @llvm.dbg.value(metadata i32 %14, metadata !16862, metadata !DIExpression()) #23, !dbg !17099
  call void @llvm.dbg.value(metadata i32 %14, metadata !17096, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !17116
  call void @llvm.dbg.value(metadata i32 undef, metadata !16943, metadata !DIExpression()) #23, !dbg !17121
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17123, !srcloc !16949
  call void @llvm.dbg.value(metadata i32 %10, metadata !17093, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i32 undef, metadata !17094, metadata !DIExpression()), !dbg !17098
  ret i32 %10, !dbg !17124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17125 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17127, metadata !DIExpression()), !dbg !17128
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17129
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17131
  br i1 %3, label %10, label %4, !dbg !17132

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17133
  %6 = load i64, i64* %5, align 8, !dbg !17133
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17135
  %8 = load i64, i64* %7, align 8, !dbg !17136
  %9 = add nsw i64 %8, %6, !dbg !17136
  store i64 %9, i64* %7, align 8, !dbg !17136
  br label %10, !dbg !17137

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17138
  tail call fastcc void @sys_dlist_remove.374(%struct._dnode* noundef %11) #24, !dbg !17139
  ret void, !dbg !17140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.374(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17141 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17145, metadata !DIExpression()), !dbg !17148
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17149
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17149
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17146, metadata !DIExpression()), !dbg !17148
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17150
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17150
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17147, metadata !DIExpression()), !dbg !17148
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17151
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17152
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17153
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17154
  tail call fastcc void @sys_dnode_init.375(%struct._dnode* noundef %0) #24, !dbg !17155
  ret void, !dbg !17156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.375(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17157 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17159, metadata !DIExpression()), !dbg !17160
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17161
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17162
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17163
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17164
  ret void, !dbg !17165
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17166 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17172, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata i64 0, metadata !17173, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata i32 0, metadata !17174, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16856, metadata !DIExpression()) #23, !dbg !17179
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17181, !srcloc !16871
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17183
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17183
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17179
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17184
  br i1 %3, label %5, label %4, !dbg !17185

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17186
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17186
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17186
  unreachable, !dbg !17186

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17183
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17179
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17187
  call void @llvm.dbg.value(metadata i32 undef, metadata !17176, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata i64 0, metadata !17173, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata i32 undef, metadata !17174, metadata !DIExpression()), !dbg !17178
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17188
  call void @llvm.dbg.value(metadata i64 %6, metadata !17173, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !17191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16934, metadata !DIExpression()) #23, !dbg !17191
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17193
  br i1 %7, label %9, label %8, !dbg !17194

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17195
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17195
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17195
  unreachable, !dbg !17195

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17181
  call void @llvm.dbg.value(metadata i32 %10, metadata !16868, metadata !DIExpression()) #23, !dbg !17183
  call void @llvm.dbg.value(metadata i32 %10, metadata !16862, metadata !DIExpression()) #23, !dbg !17179
  call void @llvm.dbg.value(metadata i32 %10, metadata !17176, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !17191
  call void @llvm.dbg.value(metadata i32 undef, metadata !16943, metadata !DIExpression()) #23, !dbg !17196
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17198, !srcloc !16949
  call void @llvm.dbg.value(metadata i64 %6, metadata !17173, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata i32 undef, metadata !17174, metadata !DIExpression()), !dbg !17178
  ret i64 %6, !dbg !17199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17200 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17202, metadata !DIExpression()), !dbg !17206
  call void @llvm.dbg.value(metadata i64 0, metadata !17203, metadata !DIExpression()), !dbg !17206
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.376(%struct._timeout* noundef %0) #24, !dbg !17207
  br i1 %2, label %21, label %3, !dbg !17209

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17210
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17204, metadata !DIExpression()), !dbg !17211
  call void @llvm.dbg.value(metadata i64 0, metadata !17203, metadata !DIExpression()), !dbg !17206
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17212
  br i1 %5, label %16, label %6, !dbg !17214

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17204, metadata !DIExpression()), !dbg !17211
  call void @llvm.dbg.value(metadata i64 %8, metadata !17203, metadata !DIExpression()), !dbg !17206
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17215
  %10 = load i64, i64* %9, align 8, !dbg !17215
  %11 = add nsw i64 %10, %8, !dbg !17217
  call void @llvm.dbg.value(metadata i64 %11, metadata !17203, metadata !DIExpression()), !dbg !17206
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17218
  br i1 %12, label %16, label %13, !dbg !17220

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17221
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17204, metadata !DIExpression()), !dbg !17211
  call void @llvm.dbg.value(metadata i64 %11, metadata !17203, metadata !DIExpression()), !dbg !17206
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17212
  br i1 %15, label %16, label %6, !dbg !17214, !llvm.loop !17222

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17206
  call void @llvm.dbg.value(metadata i64 %17, metadata !17203, metadata !DIExpression()), !dbg !17206
  %18 = tail call fastcc i32 @elapsed.363() #24, !dbg !17224
  %19 = sext i32 %18 to i64, !dbg !17224
  %20 = sub nsw i64 %17, %19, !dbg !17225
  br label %21, !dbg !17226

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17206
  ret i64 %22, !dbg !17227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.376(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17228 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17232, metadata !DIExpression()), !dbg !17233
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17234
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.355(%struct._dnode* noundef %2) #24, !dbg !17235
  %4 = xor i1 %3, true, !dbg !17236
  ret i1 %4, !dbg !17237
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17238 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17240, metadata !DIExpression()), !dbg !17245
  call void @llvm.dbg.value(metadata i64 0, metadata !17241, metadata !DIExpression()), !dbg !17245
  call void @llvm.dbg.value(metadata i32 0, metadata !17242, metadata !DIExpression()), !dbg !17246
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16856, metadata !DIExpression()) #23, !dbg !17247
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17249, !srcloc !16871
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17251
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17251
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17247
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17252
  br i1 %3, label %5, label %4, !dbg !17253

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17254
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17254
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17254
  unreachable, !dbg !17254

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17251
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17247
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17255
  call void @llvm.dbg.value(metadata i32 undef, metadata !17244, metadata !DIExpression()), !dbg !17246
  call void @llvm.dbg.value(metadata i64 0, metadata !17241, metadata !DIExpression()), !dbg !17245
  call void @llvm.dbg.value(metadata i32 undef, metadata !17242, metadata !DIExpression()), !dbg !17246
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17256
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17259
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17241, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17245
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !17260
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16934, metadata !DIExpression()) #23, !dbg !17260
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17262
  br i1 %8, label %10, label %9, !dbg !17263

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17264
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17264
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17264
  unreachable, !dbg !17264

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17249
  call void @llvm.dbg.value(metadata i32 %11, metadata !16868, metadata !DIExpression()) #23, !dbg !17251
  call void @llvm.dbg.value(metadata i32 %11, metadata !16862, metadata !DIExpression()) #23, !dbg !17247
  call void @llvm.dbg.value(metadata i32 %11, metadata !17244, metadata !DIExpression()), !dbg !17246
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17241, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17245
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !17260
  call void @llvm.dbg.value(metadata i32 undef, metadata !16943, metadata !DIExpression()) #23, !dbg !17265
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17267, !srcloc !16949
  call void @llvm.dbg.value(metadata i32 undef, metadata !17242, metadata !DIExpression()), !dbg !17246
  %12 = add i64 %7, %6, !dbg !17268
  ret i64 %12, !dbg !17269
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17270 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17272, metadata !DIExpression()), !dbg !17276
  call void @llvm.dbg.value(metadata i32 0, metadata !17273, metadata !DIExpression()), !dbg !17277
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16856, metadata !DIExpression()) #23, !dbg !17278
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17280, !srcloc !16871
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17282
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17282
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17278
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17283
  br i1 %2, label %4, label %3, !dbg !17284

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17285
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17285
  unreachable, !dbg !17285

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17282
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17278
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17286
  call void @llvm.dbg.value(metadata i32 undef, metadata !17275, metadata !DIExpression()), !dbg !17277
  call void @llvm.dbg.value(metadata i32 -1, metadata !17272, metadata !DIExpression()), !dbg !17276
  call void @llvm.dbg.value(metadata i32 undef, metadata !17273, metadata !DIExpression()), !dbg !17277
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17287
  call void @llvm.dbg.value(metadata i32 %5, metadata !17272, metadata !DIExpression()), !dbg !17276
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !17290
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16934, metadata !DIExpression()) #23, !dbg !17290
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17292
  br i1 %6, label %8, label %7, !dbg !17293

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17294
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17294
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17294
  unreachable, !dbg !17294

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17280
  call void @llvm.dbg.value(metadata i32 %9, metadata !16868, metadata !DIExpression()) #23, !dbg !17282
  call void @llvm.dbg.value(metadata i32 %9, metadata !16862, metadata !DIExpression()) #23, !dbg !17278
  call void @llvm.dbg.value(metadata i32 %9, metadata !17275, metadata !DIExpression()), !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !17290
  call void @llvm.dbg.value(metadata i32 undef, metadata !16943, metadata !DIExpression()) #23, !dbg !17295
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17297, !srcloc !16949
  call void @llvm.dbg.value(metadata i32 %5, metadata !17272, metadata !DIExpression()), !dbg !17276
  call void @llvm.dbg.value(metadata i32 undef, metadata !17273, metadata !DIExpression()), !dbg !17277
  ret i32 %5, !dbg !17298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17301, metadata !DIExpression()), !dbg !17311
  call void @llvm.dbg.value(metadata i1 %1, metadata !17302, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17311
  call void @llvm.dbg.value(metadata i32 0, metadata !17303, metadata !DIExpression()), !dbg !17312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16856, metadata !DIExpression()) #23, !dbg !17313
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17315, !srcloc !16871
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17317
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17317
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17313
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17318
  br i1 %4, label %6, label %5, !dbg !17319

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17320
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17320
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17320
  unreachable, !dbg !17320

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17317
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17313
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17321
  call void @llvm.dbg.value(metadata i32 undef, metadata !17305, metadata !DIExpression()), !dbg !17312
  call void @llvm.dbg.value(metadata i32 undef, metadata !17303, metadata !DIExpression()), !dbg !17312
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17322
  call void @llvm.dbg.value(metadata i32 %7, metadata !17306, metadata !DIExpression()), !dbg !17323
  call void @llvm.dbg.value(metadata i1 undef, metadata !17309, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17323
  %8 = icmp slt i32 %7, 2, !dbg !17324
  call void @llvm.dbg.value(metadata i1 %8, metadata !17310, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17323
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17325
  call void @llvm.dbg.value(metadata i1 %9, metadata !17309, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17323
  br i1 %10, label %14, label %11, !dbg !17325

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17327
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17327
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17329
  br label %14, !dbg !17330

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !17331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16934, metadata !DIExpression()) #23, !dbg !17331
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17333
  br i1 %15, label %17, label %16, !dbg !17334

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17335
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17335
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17335
  unreachable, !dbg !17335

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17315
  call void @llvm.dbg.value(metadata i32 %18, metadata !16868, metadata !DIExpression()) #23, !dbg !17317
  call void @llvm.dbg.value(metadata i32 %18, metadata !16862, metadata !DIExpression()) #23, !dbg !17313
  call void @llvm.dbg.value(metadata i32 %18, metadata !17305, metadata !DIExpression()), !dbg !17312
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !17331
  call void @llvm.dbg.value(metadata i32 undef, metadata !16943, metadata !DIExpression()) #23, !dbg !17336
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17338, !srcloc !16949
  call void @llvm.dbg.value(metadata i32 1, metadata !17303, metadata !DIExpression()), !dbg !17312
  call void @llvm.dbg.value(metadata i32 undef, metadata !17303, metadata !DIExpression()), !dbg !17312
  ret void, !dbg !17339
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17344, metadata !DIExpression()), !dbg !17349
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17350
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16856, metadata !DIExpression()) #23, !dbg !17351
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17353, !srcloc !16871
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17355
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17355
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17351
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17356
  br i1 %3, label %5, label %4, !dbg !17357

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17358
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17358
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17358
  unreachable, !dbg !17358

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17355
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17351
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17359
  call void @llvm.dbg.value(metadata i32 undef, metadata !17345, metadata !DIExpression()), !dbg !17349
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17349
  call void @llvm.dbg.value(metadata i32 undef, metadata !17345, metadata !DIExpression()), !dbg !17349
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17360
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17361
  br i1 %7, label %37, label %8, !dbg !17362

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17349
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17363
  %14 = load i64, i64* %13, align 8, !dbg !17363
  %15 = sext i32 %11 to i64, !dbg !17364
  %16 = icmp sgt i64 %14, %15, !dbg !17365
  br i1 %16, label %35, label %17, !dbg !17366

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17346, metadata !DIExpression()), !dbg !17367
  %18 = trunc i64 %14 to i32, !dbg !17368
  call void @llvm.dbg.value(metadata i32 %18, metadata !17348, metadata !DIExpression()), !dbg !17367
  %19 = sext i32 %18 to i64, !dbg !17369
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17370
  %21 = add i64 %20, %19, !dbg !17370
  store i64 %21, i64* @curr_tick, align 8, !dbg !17370
  store i64 0, i64* %13, align 8, !dbg !17371
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17372
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !17373
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16934, metadata !DIExpression()) #23, !dbg !17373
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17375
  br i1 %22, label %24, label %23, !dbg !17376

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17377
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17377
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17377
  unreachable, !dbg !17377

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16929, metadata !DIExpression()) #23, !dbg !17373
  call void @llvm.dbg.value(metadata i32 %12, metadata !16943, metadata !DIExpression()) #23, !dbg !17378
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17380, !srcloc !16949
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17381
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17381
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16856, metadata !DIExpression()) #23, !dbg !17383
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17385, !srcloc !16871
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17387
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17387
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17383
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17388
  br i1 %28, label %30, label %29, !dbg !17389

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17390
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17390
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17390
  unreachable, !dbg !17390

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17387
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17383
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17391
  call void @llvm.dbg.value(metadata i32 undef, metadata !17345, metadata !DIExpression()), !dbg !17349
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17392
  %32 = sub nsw i32 %31, %18, !dbg !17392
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17349
  call void @llvm.dbg.value(metadata i32 undef, metadata !17345, metadata !DIExpression()), !dbg !17349
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17360
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17361
  br i1 %34, label %37, label %8, !dbg !17362, !llvm.loop !17393

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17395
  store i64 %36, i64* %13, align 8, !dbg !17395
  br label %41, !dbg !17398

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17349
  %40 = sext i32 %39 to i64, !dbg !17399
  br label %41, !dbg !17399

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17399
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17400
  %45 = add i64 %44, %42, !dbg !17400
  store i64 %45, i64* @curr_tick, align 8, !dbg !17400
  store i32 0, i32* @announce_remaining, align 4, !dbg !17401
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17402
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17403
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !17404
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16934, metadata !DIExpression()) #23, !dbg !17404
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17406
  br i1 %47, label %49, label %48, !dbg !17407

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17408
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17408
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17408
  unreachable, !dbg !17408

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17349
  call void @llvm.dbg.value(metadata i32 %50, metadata !16929, metadata !DIExpression()) #23, !dbg !17404
  call void @llvm.dbg.value(metadata i32 %50, metadata !16943, metadata !DIExpression()) #23, !dbg !17409
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17411, !srcloc !16949
  ret void, !dbg !17412
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17413 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17417, metadata !DIExpression()), !dbg !17421
  call void @llvm.dbg.value(metadata i32 0, metadata !17418, metadata !DIExpression()), !dbg !17422
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16856, metadata !DIExpression()) #23, !dbg !17423
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17425, !srcloc !16871
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17427
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17427
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17423
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17428
  br i1 %2, label %4, label %3, !dbg !17429

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17430
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17430
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 148) #25, !dbg !17430
  unreachable, !dbg !17430

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()) #23, !dbg !17427
  call void @llvm.dbg.value(metadata i32 undef, metadata !16862, metadata !DIExpression()) #23, !dbg !17423
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17431
  call void @llvm.dbg.value(metadata i32 undef, metadata !17420, metadata !DIExpression()), !dbg !17422
  call void @llvm.dbg.value(metadata i64 0, metadata !17417, metadata !DIExpression()), !dbg !17421
  call void @llvm.dbg.value(metadata i32 undef, metadata !17418, metadata !DIExpression()), !dbg !17422
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17432
  %6 = tail call fastcc i32 @elapsed.363() #24, !dbg !17435
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17421
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !17436
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16934, metadata !DIExpression()) #23, !dbg !17436
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17438
  br i1 %7, label %9, label %8, !dbg !17439

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17440
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17440
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.361, i32 0, i32 0), i32 noundef 194) #25, !dbg !17440
  unreachable, !dbg !17440

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17425
  call void @llvm.dbg.value(metadata i32 %10, metadata !16868, metadata !DIExpression()) #23, !dbg !17427
  call void @llvm.dbg.value(metadata i32 %10, metadata !16862, metadata !DIExpression()) #23, !dbg !17423
  call void @llvm.dbg.value(metadata i32 %10, metadata !17420, metadata !DIExpression()), !dbg !17422
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17421
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17421
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()) #23, !dbg !17436
  call void @llvm.dbg.value(metadata i32 undef, metadata !16943, metadata !DIExpression()) #23, !dbg !17441
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17443, !srcloc !16949
  call void @llvm.dbg.value(metadata i32 undef, metadata !17418, metadata !DIExpression()), !dbg !17422
  %11 = sext i32 %6 to i64, !dbg !17435
  %12 = add i64 %5, %11, !dbg !17444
  ret i64 %12, !dbg !17445
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17446 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17447
  %2 = trunc i64 %1 to i32, !dbg !17448
  ret i32 %2, !dbg !17449
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17450 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17451
  ret i64 %1, !dbg !17452
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17455, metadata !DIExpression()), !dbg !17462
  %2 = icmp eq i32 %0, 0, !dbg !17463
  br i1 %2, label %10, label %3, !dbg !17465

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17466
  call void @llvm.dbg.value(metadata i32 %4, metadata !17456, metadata !DIExpression()), !dbg !17462
  %5 = shl i32 %0, 5, !dbg !17467
  call void @llvm.dbg.value(metadata i32 %5, metadata !17457, metadata !DIExpression()), !dbg !17462
  br label %6, !dbg !17468

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17469
  call void @llvm.dbg.value(metadata i32 %7, metadata !17458, metadata !DIExpression()), !dbg !17470
  %8 = sub i32 %7, %4, !dbg !17471
  %9 = icmp ult i32 %8, %5, !dbg !17473
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17475 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17476
  ret i32 %1, !dbg !17477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17478 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17480
  ret i32 %1, !dbg !17481
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17482 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17486, metadata !DIExpression()), !dbg !17488
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17489

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17490
  br label %14, !dbg !17494

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17487, metadata !DIExpression()), !dbg !17488
  %6 = icmp slt i64 %2, -1, !dbg !17495
  br i1 %6, label %7, label %9, !dbg !17498

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17499
  br label %14, !dbg !17500

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17502
  %11 = icmp ugt i64 %2, 1, !dbg !17503
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17503
  %13 = add nsw i64 %10, %12, !dbg !17504
  br label %14, !dbg !17505

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17506
  ret i64 %15, !dbg !17507
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17508 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.385, i32 0, i32 0)) #25, !dbg !17510
  ret void, !dbg !17511
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!875, !2, !2526, !27, !271, !297, !2528, !2530, !2564, !2566, !307, !371, !2568, !2571, !2582, !2628, !2630, !2658, !2686, !2729, !2801, !2846, !400, !543, !2874, !579, !589, !614, !722, !905, !2879, !1021, !1087, !1356, !1596, !2900, !1711, !1798, !2902, !2973, !3022, !1833, !3025, !1840, !2213, !3043, !2233, !2344, !2462, !3045, !2487, !3048}
!llvm.ident = !{!3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050, !3050}
!llvm.module.flags = !{!3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "mutex", scope: !27, file: !116, line: 18, type: !262, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/condition_variables/simple/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108, !109, !110, !111}
!102 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !102)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!25, !114, !141, !152, !260}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "condvar", scope: !27, file: !116, line: 19, type: !117, isLocal: false, isDefinition: true, align: 32)
!116 = !DIFile(filename: "zephyr/samples/kernel/condition_variables/simple/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !119)
!118 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!119 = !{!120}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !117, file: !118, line: 2829, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !124)
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !123, file: !122, line: 232, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !129)
!129 = !{!130, !136}
!130 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 38, baseType: !131, size: 32)
!131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 38, size: 32, elements: !132)
!132 = !{!133, !135}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !131, file: !127, line: 39, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !131, file: !127, line: 40, baseType: !134, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 42, baseType: !137, size: 32, offset: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 42, size: 32, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !137, file: !127, line: 43, baseType: !134, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !137, file: !127, line: 44, baseType: !134, size: 32)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "tstacks", scope: !27, file: !116, line: 14, type: !143, isLocal: false, isDefinition: true, align: 512)
!143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 174080, elements: !149)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !146)
!145 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!146 = !{!147}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !144, file: !145, line: 48, baseType: !148, size: 8)
!148 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!149 = !{!150, !151}
!150 = !DISubrange(count: 20)
!151 = !DISubrange(count: 1088)
!152 = !DIGlobalVariableExpression(var: !153, expr: !DIExpression())
!153 = distinct !DIGlobalVariable(name: "t", scope: !27, file: !116, line: 16, type: !154, isLocal: true, isDefinition: true)
!154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 25600, elements: !259)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !157)
!156 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!157 = !{!158, !207, !220, !221, !222, !226, !227, !235, !254}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !155, file: !156, line: 247, baseType: !159, size: 384)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !160)
!160 = !{!161, !175, !177, !180, !181, !194, !195, !196}
!161 = !DIDerivedType(tag: DW_TAG_member, scope: !159, file: !156, line: 60, baseType: !162, size: 64)
!162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !159, file: !156, line: 60, size: 64, elements: !163)
!163 = !{!164, !166}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !162, file: !156, line: 61, baseType: !165, size: 64)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !128)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !162, file: !156, line: 62, baseType: !167, size: 64)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !169)
!168 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !167, file: !168, line: 50, baseType: !171, size: 64)
!171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !172, size: 64, elements: !173)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!173 = !{!174}
!174 = !DISubrange(count: 2)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !159, file: !156, line: 68, baseType: !176, size: 32, offset: 64)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !159, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !179)
!179 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !159, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!181 = !DIDerivedType(tag: DW_TAG_member, scope: !159, file: !156, line: 90, baseType: !182, size: 16, offset: 112)
!182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !159, file: !156, line: 90, size: 16, elements: !183)
!183 = !{!184, !191}
!184 = !DIDerivedType(tag: DW_TAG_member, scope: !182, file: !156, line: 91, baseType: !185, size: 16)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !182, file: !156, line: 91, size: 16, elements: !186)
!186 = !{!187, !190}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !185, file: !156, line: 96, baseType: !188, size: 8)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !189)
!189 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !185, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !182, file: !156, line: 100, baseType: !192, size: 16)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !193)
!193 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !159, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !159, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !159, file: !156, line: 131, baseType: !197, size: 192, offset: 192)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !198)
!198 = !{!199, !200, !206}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !197, file: !122, line: 245, baseType: !165, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !197, file: !122, line: 246, baseType: !201, size: 32, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !202)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = !DISubroutineType(types: !204)
!204 = !{null, !205}
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !197, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !155, file: !156, line: 250, baseType: !208, size: 288, offset: 384)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !210)
!209 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !208, file: !209, line: 26, baseType: !110, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !208, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !208, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !208, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !208, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !208, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !208, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !208, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !208, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !155, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !155, file: !156, line: 256, baseType: !121, size: 64, offset: 704)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !155, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 256, elements: !224)
!224 = !{!225}
!225 = !DISubrange(count: 32)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !155, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !155, file: !156, line: 300, baseType: !228, size: 96, offset: 1056)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !229)
!229 = !{!230, !231, !234}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !228, file: !156, line: 153, baseType: !22, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !228, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !233, line: 214, baseType: !32)
!233 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!234 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !228, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !155, file: !156, line: 325, baseType: !236, size: 32, offset: 1152)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !238)
!238 = !{!239, !248, !249}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !237, file: !118, line: 5074, baseType: !240, size: 96)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !242)
!241 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!242 = !{!243, !246, !247}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !240, file: !241, line: 57, baseType: !244, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !241, line: 57, flags: DIFlagFwdDecl)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !240, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !240, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !237, file: !118, line: 5075, baseType: !121, size: 64, offset: 96)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !237, file: !118, line: 5076, baseType: !250, size: 32, offset: 160)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !252)
!251 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!252 = !{!253}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !250, file: !251, line: 52, baseType: !22, size: 32)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !155, file: !156, line: 343, baseType: !255, size: 64, offset: 1184)
!255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !256)
!256 = !{!257, !258}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !255, file: !209, line: 63, baseType: !110, size: 32)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !255, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!259 = !{!150}
!260 = !DIGlobalVariableExpression(var: !261, expr: !DIExpression())
!261 = distinct !DIGlobalVariable(name: "done", scope: !27, file: !116, line: 21, type: !109, isLocal: true, isDefinition: true)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !263)
!263 = !{!264, !265, !267, !268}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !262, file: !118, line: 2722, baseType: !121, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !262, file: !118, line: 2724, baseType: !266, size: 32, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !262, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !262, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !271, file: !288, line: 18, type: !289, isLocal: false, isDefinition: true)
!271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !273, globals: !287, splitDebugInlining: false, nameTableKind: None)
!272 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!273 = !{!22, !107, !24, !274, !276, !278, !232, !109, !281, !282, !283, !284, !285, !286, !192, !279}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!287 = !{!269}
!288 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !292)
!291 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !{!293, !294}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !291, line: 17, baseType: !279, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !290, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_char_out", scope: !297, file: !301, line: 54, type: !302, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!299 = !{!107, !109}
!300 = !{!295}
!301 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = !DISubroutineType(types: !304)
!304 = !{!109, !109}
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !307, file: !337, line: 60, type: !338, isLocal: true, isDefinition: true, align: 32)
!307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !309, globals: !336, splitDebugInlining: false, nameTableKind: None)
!308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!309 = !{!310, !330}
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 386, baseType: !313)
!312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 448, elements: !314)
!314 = !{!315, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !313, file: !312, line: 372, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !313, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !313, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !313, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !313, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !313, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !313, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !313, file: !312, line: 379, baseType: !316, size: 32, offset: 224)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !313, file: !312, line: 380, baseType: !316, size: 32, offset: 256)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !313, file: !312, line: 381, baseType: !316, size: 32, offset: 288)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !313, file: !312, line: 382, baseType: !316, size: 32, offset: 320)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !313, file: !312, line: 383, baseType: !316, size: 32, offset: 352)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !313, file: !312, line: 384, baseType: !316, size: 32, offset: 384)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !313, file: !312, line: 385, baseType: !316, size: 32, offset: 416)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 364, baseType: !332)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 360, size: 64, elements: !333)
!333 = !{!334, !335}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !332, file: !312, line: 362, baseType: !316, size: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !332, file: !312, line: 363, baseType: !316, size: 32, offset: 32)
!336 = !{!305}
!337 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !339)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !341)
!340 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!341 = !{!342, !368}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !339, file: !340, line: 60, baseType: !343, size: 32)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DISubroutineType(types: !345)
!345 = !{!109, !346}
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !348)
!348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !350)
!349 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!350 = !{!351, !352, !353, !354, !361, !362}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !348, file: !349, line: 380, baseType: !279, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !348, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !348, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !348, file: !349, line: 386, baseType: !355, size: 32, offset: 96)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !357)
!357 = !{!358, !359}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !356, file: !349, line: 359, baseType: !178, size: 8)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !356, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!360 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !348, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !348, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 32)
!364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !365)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !349, line: 43, baseType: !366)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !367)
!367 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !339, file: !340, line: 65, baseType: !346, size: 32, offset: 32)
!369 = !DIGlobalVariableExpression(var: !370, expr: !DIExpression())
!370 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !371, file: !374, line: 71, type: !375, isLocal: true, isDefinition: true, align: 32)
!371 = distinct !DICompileUnit(language: DW_LANG_C99, file: !372, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !373, splitDebugInlining: false, nameTableKind: None)
!372 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!373 = !{!369}
!374 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !376)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !377)
!377 = !{!378, !397}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !376, file: !340, line: 60, baseType: !379, size: 32)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 32)
!380 = !DISubroutineType(types: !381)
!381 = !{!109, !382}
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !384)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !385)
!385 = !{!386, !387, !388, !389, !395, !396}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !384, file: !349, line: 380, baseType: !279, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !384, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !384, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !384, file: !349, line: 386, baseType: !390, size: 32, offset: 96)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !392)
!392 = !{!393, !394}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !391, file: !349, line: 359, baseType: !178, size: 8)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !391, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !384, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !384, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !376, file: !340, line: 65, baseType: !382, size: 32, offset: 32)
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !400, file: !407, line: 17, type: !536, isLocal: false, isDefinition: true)
!400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !402, globals: !403, splitDebugInlining: false, nameTableKind: None)
!401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!402 = !{!232, !109, !110, !107}
!403 = !{!398, !404, !532}
!404 = !DIGlobalVariableExpression(var: !405, expr: !DIExpression())
!405 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !406, file: !407, line: 198, type: !518, isLocal: true, isDefinition: true)
!406 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !407, file: !407, line: 175, type: !408, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !513)
!407 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!408 = !DISubroutineType(types: !409)
!409 = !{null, !410}
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !412)
!412 = !{!413, !471, !483, !484, !485, !486, !487, !493, !508}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !411, file: !156, line: 247, baseType: !414, size: 384)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !415)
!415 = !{!416, !440, !447, !448, !449, !458, !459, !460}
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !414, file: !156, line: 60, baseType: !417, size: 64)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !414, file: !156, line: 60, size: 64, elements: !418)
!418 = !{!419, !434}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !417, file: !156, line: 61, baseType: !420, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !421)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !422)
!422 = !{!423, !429}
!423 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !127, line: 38, baseType: !424, size: 32)
!424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !127, line: 38, size: 32, elements: !425)
!425 = !{!426, !428}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !424, file: !127, line: 39, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !424, file: !127, line: 40, baseType: !427, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !127, line: 42, baseType: !430, size: 32, offset: 32)
!430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !127, line: 42, size: 32, elements: !431)
!431 = !{!432, !433}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !430, file: !127, line: 43, baseType: !427, size: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !430, file: !127, line: 44, baseType: !427, size: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !417, file: !156, line: 62, baseType: !435, size: 64)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !436)
!436 = !{!437}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !435, file: !168, line: 50, baseType: !438, size: 64)
!438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !439, size: 64, elements: !173)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !414, file: !156, line: 68, baseType: !441, size: 32, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !443)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !444)
!444 = !{!445}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !443, file: !122, line: 232, baseType: !446, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !421)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !414, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !414, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!449 = !DIDerivedType(tag: DW_TAG_member, scope: !414, file: !156, line: 90, baseType: !450, size: 16, offset: 112)
!450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !414, file: !156, line: 90, size: 16, elements: !451)
!451 = !{!452, !457}
!452 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !156, line: 91, baseType: !453, size: 16)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !450, file: !156, line: 91, size: 16, elements: !454)
!454 = !{!455, !456}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !453, file: !156, line: 96, baseType: !188, size: 8)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !453, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !450, file: !156, line: 100, baseType: !192, size: 16)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !414, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !414, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !414, file: !156, line: 131, baseType: !461, size: 192, offset: 192)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !462)
!462 = !{!463, !464, !470}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !461, file: !122, line: 245, baseType: !420, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !461, file: !122, line: 246, baseType: !465, size: 32, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DISubroutineType(types: !468)
!468 = !{null, !469}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !461, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !411, file: !156, line: 250, baseType: !472, size: 288, offset: 384)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !473)
!473 = !{!474, !475, !476, !477, !478, !479, !480, !481, !482}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !472, file: !209, line: 26, baseType: !110, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !472, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !472, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !472, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !472, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !472, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !472, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !472, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !472, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !411, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !411, file: !156, line: 256, baseType: !442, size: 64, offset: 704)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !411, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !411, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !411, file: !156, line: 300, baseType: !488, size: 96, offset: 1056)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !489)
!489 = !{!490, !491, !492}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !488, file: !156, line: 153, baseType: !22, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !488, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !488, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !411, file: !156, line: 325, baseType: !494, size: 32, offset: 1152)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 32)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !496)
!496 = !{!497, !503, !504}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !495, file: !118, line: 5074, baseType: !498, size: 96)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !499)
!499 = !{!500, !501, !502}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !498, file: !241, line: 57, baseType: !244, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !498, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !498, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !495, file: !118, line: 5075, baseType: !442, size: 64, offset: 96)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !495, file: !118, line: 5076, baseType: !505, size: 32, offset: 160)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !506)
!506 = !{!507}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !505, file: !251, line: 52, baseType: !22, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !411, file: !156, line: 343, baseType: !509, size: 64, offset: 1184)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !510)
!510 = !{!511, !512}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !509, file: !209, line: 63, baseType: !110, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !509, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!513 = !{!514, !515, !516, !517}
!514 = !DILocalVariable(name: "thread", arg: 1, scope: !406, file: !407, line: 175, type: !410)
!515 = !DILocalVariable(name: "region_num", scope: !406, file: !407, line: 200, type: !178)
!516 = !DILocalVariable(name: "guard_start", scope: !406, file: !407, line: 265, type: !22)
!517 = !DILocalVariable(name: "guard_size", scope: !406, file: !407, line: 266, type: !232)
!518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 96, elements: !530)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !520, line: 52, size: 96, elements: !521)
!520 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!521 = !{!522, !523, !524}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !519, file: !520, line: 53, baseType: !22, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !519, file: !520, line: 54, baseType: !232, size: 32, offset: 32)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !519, file: !520, line: 55, baseType: !525, size: 32, offset: 64)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !526, line: 151, baseType: !527)
!526 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !526, line: 149, size: 32, elements: !528)
!528 = !{!529}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !527, file: !526, line: 150, baseType: !110, size: 32)
!530 = !{!531}
!531 = !DISubrange(count: 1)
!532 = !DIGlobalVariableExpression(var: !533, expr: !DIExpression())
!533 = distinct !DIGlobalVariable(name: "static_regions", scope: !400, file: !407, line: 62, type: !534, isLocal: true, isDefinition: true)
!534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !535, size: 96, elements: !530)
!535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !519)
!536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !537)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !538)
!538 = !{!539, !540}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !537, file: !291, line: 17, baseType: !279, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !537, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !543, file: !576, line: 39, type: !178, isLocal: true, isDefinition: true)
!543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !544, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !545, globals: !575, splitDebugInlining: false, nameTableKind: None)
!544 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!545 = !{!546, !107, !109, !563, !178}
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !548, line: 1168, baseType: !549)
!548 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 1155, size: 352, elements: !550)
!550 = !{!551, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !549, file: !548, line: 1157, baseType: !552, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !549, file: !548, line: 1158, baseType: !316, size: 32, offset: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !549, file: !548, line: 1159, baseType: !316, size: 32, offset: 64)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !549, file: !548, line: 1160, baseType: !316, size: 32, offset: 96)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !549, file: !548, line: 1161, baseType: !316, size: 32, offset: 128)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !549, file: !548, line: 1162, baseType: !316, size: 32, offset: 160)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !549, file: !548, line: 1163, baseType: !316, size: 32, offset: 192)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !549, file: !548, line: 1164, baseType: !316, size: 32, offset: 224)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !549, file: !548, line: 1165, baseType: !316, size: 32, offset: 256)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !549, file: !548, line: 1166, baseType: !316, size: 32, offset: 288)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !549, file: !548, line: 1167, baseType: !316, size: 32, offset: 320)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 32)
!564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !565)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !566, line: 27, size: 96, elements: !567)
!566 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!567 = !{!568, !569, !570}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !565, file: !566, line: 29, baseType: !110, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !565, file: !566, line: 31, baseType: !279, size: 32, offset: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !565, file: !566, line: 37, baseType: !571, size: 32, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !526, line: 146, baseType: !572)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !526, line: 141, size: 32, elements: !573)
!573 = !{!574}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !572, file: !526, line: 143, baseType: !110, size: 32)
!575 = !{!541}
!576 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !579, file: !586, line: 21, type: !302, isLocal: true, isDefinition: true)
!579 = distinct !DICompileUnit(language: DW_LANG_C99, file: !580, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !581, globals: !585, splitDebugInlining: false, nameTableKind: None)
!580 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!581 = !{!582, !109, !107}
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !584, line: 22, baseType: !109)
!584 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!585 = !{!577}
!586 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!587 = !DIGlobalVariableExpression(var: !588, expr: !DIExpression())
!588 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !589, file: !594, line: 13, type: !611, isLocal: true, isDefinition: true)
!589 = distinct !DICompileUnit(language: DW_LANG_C99, file: !590, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !591, splitDebugInlining: false, nameTableKind: None)
!590 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!591 = !{!592, !587}
!592 = !DIGlobalVariableExpression(var: !593, expr: !DIExpression())
!593 = distinct !DIGlobalVariable(name: "mpu_config", scope: !589, file: !594, line: 37, type: !595, isLocal: false, isDefinition: true)
!594 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !566, line: 41, size: 64, elements: !597)
!597 = !{!598, !599}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !596, file: !566, line: 43, baseType: !110, size: 32)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !596, file: !566, line: 45, baseType: !600, size: 32, offset: 32)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 32)
!601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !602)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !566, line: 27, size: 96, elements: !603)
!603 = !{!604, !605, !606}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !602, file: !566, line: 29, baseType: !110, size: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !602, file: !566, line: 31, baseType: !279, size: 32, offset: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !602, file: !566, line: 37, baseType: !607, size: 32, offset: 64)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !526, line: 146, baseType: !608)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !526, line: 141, size: 32, elements: !609)
!609 = !{!610}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !608, file: !526, line: 143, baseType: !110, size: 32)
!611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !601, size: 192, elements: !173)
!612 = !DIGlobalVariableExpression(var: !613, expr: !DIExpression())
!613 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !614, file: !711, line: 36, type: !712, isLocal: true, isDefinition: true, align: 32)
!614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !615, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !616, retainedTypes: !628, globals: !710, splitDebugInlining: false, nameTableKind: None)
!615 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!616 = !{!617, !623}
!617 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !618, line: 506, baseType: !32, size: 32, elements: !619)
!618 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!619 = !{!620, !621, !622}
!620 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!621 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!622 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!623 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !618, line: 512, baseType: !32, size: 32, elements: !624)
!624 = !{!625, !626, !627}
!625 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!626 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!627 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!628 = !{!629, !699, !704, !664, !623, !617, !709, !107}
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 32)
!630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !631)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !618, line: 523, size: 288, elements: !632)
!632 = !{!633, !654, !660, !665, !669, !670, !671, !675, !695}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !631, file: !618, line: 524, baseType: !634, size: 32)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 32)
!635 = !DISubroutineType(types: !636)
!636 = !{!109, !637, !652, !653}
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !639)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !640)
!640 = !{!641, !642, !643, !644, !650, !651}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !639, file: !349, line: 380, baseType: !279, size: 32)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !639, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !639, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !639, file: !349, line: 386, baseType: !645, size: 32, offset: 96)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 32)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !647)
!647 = !{!648, !649}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !646, file: !349, line: 359, baseType: !178, size: 8)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !646, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !639, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !639, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !618, line: 237, baseType: !178)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !618, line: 257, baseType: !110)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !631, file: !618, line: 530, baseType: !655, size: 32, offset: 32)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 32)
!656 = !DISubroutineType(types: !657)
!657 = !{!109, !637, !658}
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 32)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !618, line: 229, baseType: !110)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !631, file: !618, line: 532, baseType: !661, size: 32, offset: 64)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 32)
!662 = !DISubroutineType(types: !663)
!663 = !{!109, !637, !664, !659}
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !618, line: 216, baseType: !110)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !631, file: !618, line: 535, baseType: !666, size: 32, offset: 96)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 32)
!667 = !DISubroutineType(types: !668)
!668 = !{!109, !637, !664}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !631, file: !618, line: 537, baseType: !666, size: 32, offset: 128)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !631, file: !618, line: 539, baseType: !666, size: 32, offset: 160)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !631, file: !618, line: 541, baseType: !672, size: 32, offset: 192)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 32)
!673 = !DISubroutineType(types: !674)
!674 = !{!109, !637, !652, !617, !623}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !631, file: !618, line: 544, baseType: !676, size: 32, offset: 224)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 32)
!677 = !DISubroutineType(types: !678)
!678 = !{!109, !637, !679, !360}
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !618, line: 478, size: 96, elements: !681)
!681 = !{!682, !689, !694}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !680, file: !618, line: 482, baseType: !683, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !684, line: 33, baseType: !685)
!684 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !684, line: 29, size: 32, elements: !686)
!686 = !{!687}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !685, file: !684, line: 30, baseType: !688, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 32)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !680, file: !618, line: 485, baseType: !690, size: 32, offset: 32)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !618, line: 464, baseType: !691)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 32)
!692 = !DISubroutineType(types: !693)
!693 = !{null, !637, !679, !664}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !680, file: !618, line: 493, baseType: !664, size: 32, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !631, file: !618, line: 547, baseType: !696, size: 32, offset: 256)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 32)
!697 = !DISubroutineType(types: !698)
!698 = !{!110, !637}
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !618, line: 428, size: 32, elements: !702)
!702 = !{!703}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !701, file: !618, line: 434, baseType: !664, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !706)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !618, line: 441, size: 32, elements: !707)
!707 = !{!708}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !706, file: !618, line: 447, baseType: !664, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!710 = !{!612}
!711 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !713)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !714)
!714 = !{!715, !719}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !713, file: !340, line: 60, baseType: !716, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 32)
!717 = !DISubroutineType(types: !718)
!718 = !{!109, !637}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !713, file: !340, line: 65, baseType: !637, size: 32, offset: 32)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !722, file: !794, line: 48, type: !870, isLocal: true, isDefinition: true)
!722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !724, retainedTypes: !780, globals: !791, splitDebugInlining: false, nameTableKind: None)
!723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!724 = !{!30, !725}
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !312, line: 69, baseType: !109, size: 32, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779}
!727 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!728 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!729 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!730 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!731 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!732 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!733 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!734 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!735 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!736 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!737 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!738 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!739 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!740 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!741 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!742 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!743 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!744 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!745 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!746 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!747 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!748 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!749 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!750 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!751 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!752 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!753 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!754 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!755 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!756 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!757 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!758 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!759 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!760 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!761 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!762 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!763 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!764 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!765 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!766 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!767 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!768 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!769 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!770 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!771 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!772 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!773 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!774 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!775 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!776 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!777 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!778 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!779 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!780 = !{!232, !109, !107, !781}
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !312, line: 270, baseType: !783)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 262, size: 192, elements: !784)
!784 = !{!785, !786, !787, !788, !789, !790}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !783, file: !312, line: 264, baseType: !316, size: 32)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !783, file: !312, line: 265, baseType: !316, size: 32, offset: 32)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !783, file: !312, line: 266, baseType: !316, size: 32, offset: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !783, file: !312, line: 267, baseType: !316, size: 32, offset: 96)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !783, file: !312, line: 268, baseType: !316, size: 32, offset: 128)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !783, file: !312, line: 269, baseType: !316, size: 32, offset: 160)
!791 = !{!792, !798, !814, !825, !842, !720, !844, !858, !860, !862, !864, !866, !868}
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !722, file: !794, line: 424, type: !795, isLocal: false, isDefinition: true, align: 16)
!794 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 64, elements: !796)
!796 = !{!797}
!797 = !DISubrange(count: 4)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !722, file: !794, line: 424, type: !800, isLocal: false, isDefinition: true, align: 32)
!800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !801)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !802)
!802 = !{!803, !804, !805, !806, !812, !813}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !801, file: !349, line: 380, baseType: !279, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !801, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !801, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !801, file: !349, line: 386, baseType: !807, size: 32, offset: 96)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 32)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !809)
!809 = !{!810, !811}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !808, file: !349, line: 359, baseType: !178, size: 8)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !808, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !801, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !801, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !722, file: !794, line: 424, type: !816, isLocal: true, isDefinition: true, align: 32)
!816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !817)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !818)
!818 = !{!819, !824}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !817, file: !340, line: 60, baseType: !820, size: 32)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!821 = !DISubroutineType(types: !822)
!822 = !{!109, !823}
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !817, file: !340, line: 65, baseType: !823, size: 32, offset: 32)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "exti_data", scope: !722, file: !794, line: 423, type: !827, isLocal: true, isDefinition: true)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !794, line: 107, size: 1024, elements: !828)
!828 = !{!829}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !827, file: !794, line: 109, baseType: !830, size: 1024)
!830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !831, size: 1024, elements: !840)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !794, line: 101, size: 64, elements: !832)
!832 = !{!833, !839}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !831, file: !794, line: 102, baseType: !834, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !835, line: 63, baseType: !836)
!835 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 32)
!837 = !DISubroutineType(types: !838)
!838 = !{null, !109, !107}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !831, file: !794, line: 103, baseType: !107, size: 32, offset: 32)
!840 = !{!841}
!841 = !DISubrange(count: 16)
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !722, file: !794, line: 424, type: !808, isLocal: true, isDefinition: true, align: 8)
!844 = !DIGlobalVariableExpression(var: !845, expr: !DIExpression())
!845 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !846, file: !794, line: 493, type: !851, isLocal: true, isDefinition: true, align: 32)
!846 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !794, file: !794, line: 460, type: !847, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !849)
!847 = !DISubroutineType(types: !848)
!848 = !{null, !823}
!849 = !{!850}
!850 = !DILocalVariable(name: "dev", arg: 1, scope: !846, file: !794, line: 460, type: !823)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !852)
!852 = !{!853, !855, !856, !857}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !851, file: !10, line: 55, baseType: !854, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !851, file: !10, line: 57, baseType: !854, size: 32, offset: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !851, file: !10, line: 59, baseType: !107, size: 32, offset: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !851, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !846, file: !794, line: 497, type: !851, isLocal: true, isDefinition: true, align: 32)
!860 = !DIGlobalVariableExpression(var: !861, expr: !DIExpression())
!861 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !846, file: !794, line: 507, type: !851, isLocal: true, isDefinition: true, align: 32)
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !846, file: !794, line: 512, type: !851, isLocal: true, isDefinition: true, align: 32)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !846, file: !794, line: 516, type: !851, isLocal: true, isDefinition: true, align: 32)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !846, file: !794, line: 523, type: !851, isLocal: true, isDefinition: true, align: 32)
!868 = !DIGlobalVariableExpression(var: !869, expr: !DIExpression())
!869 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !846, file: !794, line: 527, type: !851, isLocal: true, isDefinition: true, align: 32)
!870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !871, size: 512, elements: !840)
!871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !872)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !312, line: 127, baseType: !725)
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !875, file: !880, line: 21, type: !900, isLocal: false, isDefinition: true, align: 16)
!875 = distinct !DICompileUnit(language: DW_LANG_C99, file: !876, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !877, splitDebugInlining: false, nameTableKind: None)
!876 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!877 = !{!878, !873, !884, !886, !888, !890, !892, !894, !896, !898}
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !875, file: !880, line: 16, type: !881, isLocal: false, isDefinition: true, align: 16)
!880 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 176, elements: !882)
!882 = !{!883}
!883 = !DISubrange(count: 11)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !875, file: !880, line: 28, type: !795, isLocal: false, isDefinition: true, align: 16)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !875, file: !880, line: 35, type: !795, isLocal: false, isDefinition: true, align: 16)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !875, file: !880, line: 42, type: !795, isLocal: false, isDefinition: true, align: 16)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !875, file: !880, line: 49, type: !795, isLocal: false, isDefinition: true, align: 16)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !875, file: !880, line: 56, type: !795, isLocal: false, isDefinition: true, align: 16)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !875, file: !880, line: 63, type: !795, isLocal: false, isDefinition: true, align: 16)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !875, file: !880, line: 70, type: !795, isLocal: false, isDefinition: true, align: 16)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !875, file: !880, line: 77, type: !795, isLocal: false, isDefinition: true, align: 16)
!900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 48, elements: !901)
!901 = !{!902}
!902 = !DISubrange(count: 3)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !905, file: !949, line: 398, type: !980, isLocal: true, isDefinition: true)
!905 = distinct !DICompileUnit(language: DW_LANG_C99, file: !906, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !907, retainedTypes: !920, globals: !946, splitDebugInlining: false, nameTableKind: None)
!906 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!907 = !{!908, !30, !913}
!908 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !909, line: 190, baseType: !32, size: 32, elements: !910)
!909 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!910 = !{!911, !912}
!911 = !DIEnumerator(name: "SUCCESS", value: 0)
!912 = !DIEnumerator(name: "ERROR", value: 1)
!913 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !914, line: 44, baseType: !32, size: 32, elements: !915)
!914 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!915 = !{!916, !917, !918, !919}
!916 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!917 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!918 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!919 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!920 = !{!107, !109, !110, !921, !939, !945}
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 386, baseType: !923)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 448, elements: !924)
!924 = !{!925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !923, file: !312, line: 372, baseType: !316, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !923, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !923, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !923, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !923, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !923, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !923, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !923, file: !312, line: 379, baseType: !316, size: 32, offset: 224)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !923, file: !312, line: 380, baseType: !316, size: 32, offset: 256)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !923, file: !312, line: 381, baseType: !316, size: 32, offset: 288)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !923, file: !312, line: 382, baseType: !316, size: 32, offset: 320)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !923, file: !312, line: 383, baseType: !316, size: 32, offset: 352)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !923, file: !312, line: 384, baseType: !316, size: 32, offset: 384)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !923, file: !312, line: 385, baseType: !316, size: 32, offset: 416)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 32)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !941, line: 343, size: 64, elements: !942)
!941 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!942 = !{!943, !944}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !940, file: !941, line: 344, baseType: !110, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !940, file: !941, line: 345, baseType: !110, size: 32, offset: 32)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!946 = !{!947, !951, !967, !978, !903}
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !905, file: !949, line: 752, type: !950, isLocal: false, isDefinition: true, align: 16)
!949 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 512, elements: !224)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !905, file: !949, line: 752, type: !953, isLocal: false, isDefinition: true, align: 32)
!953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !954)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !955)
!955 = !{!956, !957, !958, !959, !965, !966}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !954, file: !349, line: 380, baseType: !279, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !954, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !954, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !954, file: !349, line: 386, baseType: !960, size: 32, offset: 96)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 32)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !962)
!962 = !{!963, !964}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !961, file: !349, line: 359, baseType: !178, size: 8)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !961, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !954, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !954, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !905, file: !949, line: 752, type: !969, isLocal: true, isDefinition: true, align: 32)
!969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !971)
!971 = !{!972, !977}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !970, file: !340, line: 60, baseType: !973, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DISubroutineType(types: !975)
!975 = !{!109, !976}
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !970, file: !340, line: 65, baseType: !976, size: 32, offset: 32)
!978 = !DIGlobalVariableExpression(var: !979, expr: !DIExpression())
!979 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !905, file: !949, line: 752, type: !961, isLocal: true, isDefinition: true, align: 8)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !914, line: 100, size: 224, elements: !981)
!981 = !{!982, !988, !989, !998, !1003, !1008, !1014}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !980, file: !914, line: 101, baseType: !983, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !914, line: 76, baseType: !984)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 32)
!985 = !DISubroutineType(types: !986)
!986 = !{!109, !976, !987}
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !914, line: 56, baseType: !107)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !980, file: !914, line: 102, baseType: !983, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !980, file: !914, line: 103, baseType: !990, size: 32, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !914, line: 83, baseType: !991)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = !DISubroutineType(types: !993)
!993 = !{!109, !976, !987, !994, !107}
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !914, line: 72, baseType: !995)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{null, !976, !987, !107}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !980, file: !914, line: 104, baseType: !999, size: 32, offset: 96)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !914, line: 79, baseType: !1000)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!109, !976, !987, !945}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !980, file: !914, line: 105, baseType: !1004, size: 32, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !914, line: 88, baseType: !1005)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 32)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!913, !976, !987}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !980, file: !914, line: 106, baseType: !1009, size: 32, offset: 160)
!1009 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !914, line: 92, baseType: !1010)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!109, !976, !987, !1013}
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !914, line: 64, baseType: !107)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !980, file: !914, line: 107, baseType: !1015, size: 32, offset: 192)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !914, line: 96, baseType: !1016)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!109, !976, !987, !107}
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1021, file: !1078, line: 603, type: !1080, isLocal: true, isDefinition: true, align: 32)
!1021 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1022, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1023, globals: !1075, splitDebugInlining: false, nameTableKind: None)
!1022 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!1023 = !{!107, !109, !1024}
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1026)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1027, line: 336, size: 160, elements: !1028)
!1027 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1028 = !{!1029, !1049, !1053, !1057, !1070}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1026, file: !1027, line: 365, baseType: !1030, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!109, !1033, !1048}
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1035)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !1036)
!1036 = !{!1037, !1038, !1039, !1040, !1046, !1047}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1035, file: !349, line: 380, baseType: !279, size: 32)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1035, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1035, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1035, file: !349, line: 386, baseType: !1041, size: 32, offset: 96)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !1043)
!1043 = !{!1044, !1045}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1042, file: !349, line: 359, baseType: !178, size: 8)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1042, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1035, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1035, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1026, file: !1027, line: 366, baseType: !1050, size: 32, offset: 32)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{null, !1033, !179}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1026, file: !1027, line: 374, baseType: !1054, size: 32, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!109, !1033}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1026, file: !1027, line: 377, baseType: !1058, size: 32, offset: 96)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!109, !1033, !1061}
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1027, line: 122, size: 64, elements: !1064)
!1064 = !{!1065, !1066, !1067, !1068, !1069}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1063, file: !1027, line: 123, baseType: !110, size: 32)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1063, file: !1027, line: 124, baseType: !178, size: 8, offset: 32)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1063, file: !1027, line: 125, baseType: !178, size: 8, offset: 40)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1063, file: !1027, line: 126, baseType: !178, size: 8, offset: 48)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1063, file: !1027, line: 127, baseType: !178, size: 8, offset: 56)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1026, file: !1027, line: 379, baseType: !1071, size: 32, offset: 128)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!109, !1033, !1074}
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1075 = !{!1019, !1076}
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1021, file: !1078, line: 38, type: !1079, isLocal: true, isDefinition: true)
!1078 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1033)
!1080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1081)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !1082)
!1082 = !{!1083, !1084}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1081, file: !340, line: 60, baseType: !1054, size: 32)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1081, file: !340, line: 65, baseType: !1033, size: 32, offset: 32)
!1085 = !DIGlobalVariableExpression(var: !1086, expr: !DIExpression())
!1086 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1087, file: !1237, line: 762, type: !1335, isLocal: true, isDefinition: true)
!1087 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1088, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1089, retainedTypes: !1096, globals: !1234, splitDebugInlining: false, nameTableKind: None)
!1088 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!1089 = !{!30, !617, !623, !1090, !913}
!1090 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !835, line: 43, baseType: !32, size: 32, elements: !1091)
!1091 = !{!1092, !1093, !1094, !1095}
!1092 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1093 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1094 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1095 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1096 = !{!107, !109, !1097, !1161, !1166, !664, !623, !617, !1171, !1172, !110, !1186, !1142, !285, !1194, !1195}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !618, line: 523, size: 288, elements: !1100)
!1100 = !{!1101, !1120, !1124, !1128, !1132, !1133, !1134, !1138, !1157}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1099, file: !618, line: 524, baseType: !1102, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!109, !1105, !652, !653}
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !1108)
!1108 = !{!1109, !1110, !1111, !1112, !1118, !1119}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1107, file: !349, line: 380, baseType: !279, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1107, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1107, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1107, file: !349, line: 386, baseType: !1113, size: 32, offset: 96)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 32)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !1115)
!1115 = !{!1116, !1117}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1114, file: !349, line: 359, baseType: !178, size: 8)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1114, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1107, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1107, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1099, file: !618, line: 530, baseType: !1121, size: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!109, !1105, !658}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1099, file: !618, line: 532, baseType: !1125, size: 32, offset: 64)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!109, !1105, !664, !659}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1099, file: !618, line: 535, baseType: !1129, size: 32, offset: 96)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 32)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!109, !1105, !664}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1099, file: !618, line: 537, baseType: !1129, size: 32, offset: 128)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1099, file: !618, line: 539, baseType: !1129, size: 32, offset: 160)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1099, file: !618, line: 541, baseType: !1135, size: 32, offset: 192)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!109, !1105, !652, !617, !623}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1099, file: !618, line: 544, baseType: !1139, size: 32, offset: 224)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!109, !1105, !1142, !360}
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !618, line: 478, size: 96, elements: !1144)
!1144 = !{!1145, !1151, !1156}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1143, file: !618, line: 482, baseType: !1146, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !684, line: 33, baseType: !1147)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !684, line: 29, size: 32, elements: !1148)
!1148 = !{!1149}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1147, file: !684, line: 30, baseType: !1150, size: 32)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1143, file: !618, line: 485, baseType: !1152, size: 32, offset: 32)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !618, line: 464, baseType: !1153)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 32)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{null, !1105, !1142, !664}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1143, file: !618, line: 493, baseType: !664, size: 32, offset: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1099, file: !618, line: 547, baseType: !1158, size: 32, offset: 256)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!110, !1105}
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !618, line: 428, size: 32, elements: !1164)
!1164 = !{!1165}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1163, file: !618, line: 434, baseType: !664, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1168)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !618, line: 441, size: 32, elements: !1169)
!1169 = !{!1170}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1168, file: !618, line: 447, baseType: !664, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 314, baseType: !1174)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 303, size: 320, elements: !1175)
!1175 = !{!1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1174, file: !312, line: 305, baseType: !316, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1174, file: !312, line: 306, baseType: !316, size: 32, offset: 32)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1174, file: !312, line: 307, baseType: !316, size: 32, offset: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1174, file: !312, line: 308, baseType: !316, size: 32, offset: 96)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1174, file: !312, line: 309, baseType: !316, size: 32, offset: 128)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1174, file: !312, line: 310, baseType: !316, size: 32, offset: 160)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1174, file: !312, line: 311, baseType: !316, size: 32, offset: 192)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1174, file: !312, line: 312, baseType: !316, size: 32, offset: 224)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1174, file: !312, line: 313, baseType: !1185, size: 64, offset: 256)
!1185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 64, elements: !173)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !312, line: 325, baseType: !1188)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 320, size: 192, elements: !1189)
!1189 = !{!1190, !1191, !1192}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1188, file: !312, line: 322, baseType: !316, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1188, file: !312, line: 323, baseType: !316, size: 32, offset: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1188, file: !312, line: 324, baseType: !1193, size: 128, offset: 64)
!1193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 128, elements: !796)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !914, line: 100, size: 224, elements: !1198)
!1198 = !{!1199, !1204, !1205, !1214, !1219, !1224, !1229}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1197, file: !914, line: 101, baseType: !1200, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !914, line: 76, baseType: !1201)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!109, !1105, !987}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1197, file: !914, line: 102, baseType: !1200, size: 32, offset: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1197, file: !914, line: 103, baseType: !1206, size: 32, offset: 64)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !914, line: 83, baseType: !1207)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!109, !1105, !987, !1210, !107}
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !914, line: 72, baseType: !1211)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{null, !1105, !987, !107}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1197, file: !914, line: 104, baseType: !1215, size: 32, offset: 96)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !914, line: 79, baseType: !1216)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!109, !1105, !987, !945}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1197, file: !914, line: 105, baseType: !1220, size: 32, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !914, line: 88, baseType: !1221)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!913, !1105, !987}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1197, file: !914, line: 106, baseType: !1225, size: 32, offset: 160)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !914, line: 92, baseType: !1226)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!109, !1105, !987, !1013}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1197, file: !914, line: 107, baseType: !1230, size: 32, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !914, line: 96, baseType: !1231)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!109, !1105, !987, !107}
!1234 = !{!1235, !1241, !1243, !1253, !1258, !1260, !1262, !1267, !1269, !1271, !1276, !1278, !1280, !1282, !1284, !1286, !1291, !1293, !1295, !1309, !1311, !1313, !1315, !1317, !1319, !1321, !1323, !1325, !1327, !1329, !1085, !1331, !1333, !1346, !1348, !1350, !1352}
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1087, file: !1237, line: 762, type: !1238, isLocal: false, isDefinition: true, align: 16)
!1237 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 128, elements: !1239)
!1239 = !{!1240}
!1240 = !DISubrange(count: 8)
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1087, file: !1237, line: 762, type: !1106, isLocal: false, isDefinition: true, align: 32)
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1087, file: !1237, line: 762, type: !1245, isLocal: true, isDefinition: true, align: 32)
!1245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !1247)
!1247 = !{!1248, !1252}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1246, file: !340, line: 60, baseType: !1249, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 32)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!109, !1105}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1246, file: !340, line: 65, baseType: !1105, size: 32, offset: 32)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1087, file: !1237, line: 766, type: !1255, isLocal: false, isDefinition: true, align: 16)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 144, elements: !1256)
!1256 = !{!1257}
!1257 = !DISubrange(count: 9)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1087, file: !1237, line: 766, type: !1106, isLocal: false, isDefinition: true, align: 32)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1087, file: !1237, line: 766, type: !1245, isLocal: true, isDefinition: true, align: 32)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1087, file: !1237, line: 770, type: !1264, isLocal: false, isDefinition: true, align: 16)
!1264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 96, elements: !1265)
!1265 = !{!1266}
!1266 = !DISubrange(count: 6)
!1267 = !DIGlobalVariableExpression(var: !1268, expr: !DIExpression())
!1268 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !1087, file: !1237, line: 770, type: !1106, isLocal: false, isDefinition: true, align: 32)
!1269 = !DIGlobalVariableExpression(var: !1270, expr: !DIExpression())
!1270 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !1087, file: !1237, line: 770, type: !1245, isLocal: true, isDefinition: true, align: 32)
!1271 = !DIGlobalVariableExpression(var: !1272, expr: !DIExpression())
!1272 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1087, file: !1237, line: 774, type: !1273, isLocal: false, isDefinition: true, align: 16)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 80, elements: !1274)
!1274 = !{!1275}
!1275 = !DISubrange(count: 5)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1087, file: !1237, line: 774, type: !1106, isLocal: false, isDefinition: true, align: 32)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1087, file: !1237, line: 774, type: !1245, isLocal: true, isDefinition: true, align: 32)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1087, file: !1237, line: 778, type: !1273, isLocal: false, isDefinition: true, align: 16)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1087, file: !1237, line: 778, type: !1106, isLocal: false, isDefinition: true, align: 32)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1087, file: !1237, line: 778, type: !1245, isLocal: true, isDefinition: true, align: 32)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1087, file: !1237, line: 790, type: !1288, isLocal: false, isDefinition: true, align: 16)
!1288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 112, elements: !1289)
!1289 = !{!1290}
!1290 = !DISubrange(count: 7)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1087, file: !1237, line: 790, type: !1106, isLocal: false, isDefinition: true, align: 32)
!1293 = !DIGlobalVariableExpression(var: !1294, expr: !DIExpression())
!1294 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1087, file: !1237, line: 790, type: !1245, isLocal: true, isDefinition: true, align: 32)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1087, file: !1237, line: 762, type: !1297, isLocal: true, isDefinition: true)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1298, line: 237, size: 128, elements: !1299)
!1298 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1299 = !{!1300, !1301, !1302}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1297, file: !1298, line: 239, baseType: !1168, size: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1297, file: !1298, line: 241, baseType: !1105, size: 32, offset: 32)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1297, file: !1298, line: 243, baseType: !1303, size: 64, offset: 64)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !684, line: 40, baseType: !1304)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !684, line: 35, size: 64, elements: !1305)
!1305 = !{!1306, !1308}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1304, file: !684, line: 36, baseType: !1307, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1304, file: !684, line: 37, baseType: !1307, size: 32, offset: 32)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1087, file: !1237, line: 762, type: !1114, isLocal: true, isDefinition: true, align: 8)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1087, file: !1237, line: 766, type: !1297, isLocal: true, isDefinition: true)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1087, file: !1237, line: 766, type: !1114, isLocal: true, isDefinition: true, align: 8)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1087, file: !1237, line: 770, type: !1297, isLocal: true, isDefinition: true)
!1317 = !DIGlobalVariableExpression(var: !1318, expr: !DIExpression())
!1318 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !1087, file: !1237, line: 770, type: !1114, isLocal: true, isDefinition: true, align: 8)
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1087, file: !1237, line: 774, type: !1297, isLocal: true, isDefinition: true)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1087, file: !1237, line: 774, type: !1114, isLocal: true, isDefinition: true, align: 8)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1087, file: !1237, line: 778, type: !1297, isLocal: true, isDefinition: true)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1087, file: !1237, line: 778, type: !1114, isLocal: true, isDefinition: true, align: 8)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1087, file: !1237, line: 790, type: !1297, isLocal: true, isDefinition: true)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1087, file: !1237, line: 790, type: !1114, isLocal: true, isDefinition: true, align: 8)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1087, file: !1237, line: 656, type: !1098, isLocal: true, isDefinition: true)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1087, file: !1237, line: 766, type: !1335, isLocal: true, isDefinition: true)
!1335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1336)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1298, line: 224, size: 160, elements: !1337)
!1337 = !{!1338, !1339, !1340, !1341}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1336, file: !1298, line: 226, baseType: !1163, size: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1336, file: !1298, line: 228, baseType: !945, size: 32, offset: 32)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1336, file: !1298, line: 230, baseType: !109, size: 32, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1336, file: !1298, line: 231, baseType: !1342, size: 64, offset: 96)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !941, line: 343, size: 64, elements: !1343)
!1343 = !{!1344, !1345}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1342, file: !941, line: 344, baseType: !110, size: 32)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1342, file: !941, line: 345, baseType: !110, size: 32, offset: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1087, file: !1237, line: 770, type: !1335, isLocal: true, isDefinition: true)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1087, file: !1237, line: 774, type: !1335, isLocal: true, isDefinition: true)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1087, file: !1237, line: 778, type: !1335, isLocal: true, isDefinition: true)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1087, file: !1237, line: 790, type: !1335, isLocal: true, isDefinition: true)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1356, file: !1494, line: 44, type: !1589, isLocal: false, isDefinition: true)
!1356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1358, retainedTypes: !1391, globals: !1491, splitDebugInlining: false, nameTableKind: None)
!1357 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!1358 = !{!30, !1359, !1366, !1373, !1380, !1386, !913}
!1359 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1027, line: 47, baseType: !32, size: 32, elements: !1360)
!1360 = !{!1361, !1362, !1363, !1364, !1365}
!1361 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1362 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1363 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1364 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1365 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1366 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1027, line: 75, baseType: !32, size: 32, elements: !1367)
!1367 = !{!1368, !1369, !1370, !1371, !1372}
!1368 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1369 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1370 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1371 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1372 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1373 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1027, line: 92, baseType: !32, size: 32, elements: !1374)
!1374 = !{!1375, !1376, !1377, !1378, !1379}
!1375 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1376 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1377 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1378 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1379 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1380 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1027, line: 84, baseType: !32, size: 32, elements: !1381)
!1381 = !{!1382, !1383, !1384, !1385}
!1382 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1383 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1384 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1385 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1386 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1027, line: 107, baseType: !32, size: 32, elements: !1387)
!1387 = !{!1388, !1389, !1390}
!1388 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1389 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1390 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1391 = !{!107, !109, !1392, !179, !178, !1441, !110, !987, !1452, !192}
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 32)
!1393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1394)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1027, line: 336, size: 160, elements: !1395)
!1395 = !{!1396, !1415, !1419, !1423, !1436}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1394, file: !1027, line: 365, baseType: !1397, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!1398 = !DISubroutineType(types: !1399)
!1399 = !{!109, !1400, !1048}
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !1403)
!1403 = !{!1404, !1405, !1406, !1407, !1413, !1414}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1402, file: !349, line: 380, baseType: !279, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1402, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1402, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1402, file: !349, line: 386, baseType: !1408, size: 32, offset: 96)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 32)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !1410)
!1410 = !{!1411, !1412}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1409, file: !349, line: 359, baseType: !178, size: 8)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1409, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1402, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1402, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1394, file: !1027, line: 366, baseType: !1416, size: 32, offset: 32)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 32)
!1417 = !DISubroutineType(types: !1418)
!1418 = !{null, !1400, !179}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1394, file: !1027, line: 374, baseType: !1420, size: 32, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 32)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!109, !1400}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1394, file: !1027, line: 377, baseType: !1424, size: 32, offset: 96)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 32)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!109, !1400, !1427}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1429)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1027, line: 122, size: 64, elements: !1430)
!1430 = !{!1431, !1432, !1433, !1434, !1435}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1429, file: !1027, line: 123, baseType: !110, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1429, file: !1027, line: 124, baseType: !178, size: 8, offset: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1429, file: !1027, line: 125, baseType: !178, size: 8, offset: 40)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1429, file: !1027, line: 126, baseType: !178, size: 8, offset: 48)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1429, file: !1027, line: 127, baseType: !178, size: 8, offset: 56)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1394, file: !1027, line: 379, baseType: !1437, size: 32, offset: 128)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 32)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!109, !1400, !1440}
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !312, line: 505, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 496, size: 224, elements: !1444)
!1444 = !{!1445, !1446, !1447, !1448, !1449, !1450, !1451}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1443, file: !312, line: 498, baseType: !316, size: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1443, file: !312, line: 499, baseType: !316, size: 32, offset: 32)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1443, file: !312, line: 500, baseType: !316, size: 32, offset: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1443, file: !312, line: 501, baseType: !316, size: 32, offset: 96)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1443, file: !312, line: 502, baseType: !316, size: 32, offset: 128)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1443, file: !312, line: 503, baseType: !316, size: 32, offset: 160)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1443, file: !312, line: 504, baseType: !316, size: 32, offset: 192)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1454)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !914, line: 100, size: 224, elements: !1455)
!1455 = !{!1456, !1461, !1462, !1471, !1476, !1481, !1486}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1454, file: !914, line: 101, baseType: !1457, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !914, line: 76, baseType: !1458)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!109, !1400, !987}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1454, file: !914, line: 102, baseType: !1457, size: 32, offset: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1454, file: !914, line: 103, baseType: !1463, size: 32, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !914, line: 83, baseType: !1464)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 32)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!109, !1400, !987, !1467, !107}
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !914, line: 72, baseType: !1468)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{null, !1400, !987, !107}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1454, file: !914, line: 104, baseType: !1472, size: 32, offset: 96)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !914, line: 79, baseType: !1473)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!109, !1400, !987, !945}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1454, file: !914, line: 105, baseType: !1477, size: 32, offset: 128)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !914, line: 88, baseType: !1478)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 32)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!913, !1400, !987}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1454, file: !914, line: 106, baseType: !1482, size: 32, offset: 160)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !914, line: 92, baseType: !1483)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 32)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!109, !1400, !987, !1013}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1454, file: !914, line: 107, baseType: !1487, size: 32, offset: 192)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !914, line: 96, baseType: !1488)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!109, !1400, !987, !107}
!1491 = !{!1354, !1492, !1495, !1497, !1504, !1506, !1508, !1510, !1512, !1514, !1558, !1561, !1563, !1566, !1569, !1571, !1577, !1579, !1581, !1583, !1585, !1587}
!1492 = !DIGlobalVariableExpression(var: !1493, expr: !DIExpression())
!1493 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1356, file: !1494, line: 1914, type: !1238, isLocal: false, isDefinition: true, align: 16)
!1494 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1495 = !DIGlobalVariableExpression(var: !1496, expr: !DIExpression())
!1496 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1356, file: !1494, line: 1914, type: !1401, isLocal: false, isDefinition: true, align: 32)
!1497 = !DIGlobalVariableExpression(var: !1498, expr: !DIExpression())
!1498 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1356, file: !1494, line: 1914, type: !1499, isLocal: true, isDefinition: true, align: 32)
!1499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !1501)
!1501 = !{!1502, !1503}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1500, file: !340, line: 60, baseType: !1420, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1500, file: !340, line: 65, baseType: !1400, size: 32, offset: 32)
!1504 = !DIGlobalVariableExpression(var: !1505, expr: !DIExpression())
!1505 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1356, file: !1494, line: 1914, type: !1238, isLocal: false, isDefinition: true, align: 16)
!1506 = !DIGlobalVariableExpression(var: !1507, expr: !DIExpression())
!1507 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1356, file: !1494, line: 1914, type: !1401, isLocal: false, isDefinition: true, align: 32)
!1508 = !DIGlobalVariableExpression(var: !1509, expr: !DIExpression())
!1509 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1356, file: !1494, line: 1914, type: !1499, isLocal: true, isDefinition: true, align: 32)
!1510 = !DIGlobalVariableExpression(var: !1511, expr: !DIExpression())
!1511 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1356, file: !1494, line: 1914, type: !1409, isLocal: true, isDefinition: true, align: 8)
!1512 = !DIGlobalVariableExpression(var: !1513, expr: !DIExpression())
!1513 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1356, file: !1494, line: 1914, type: !1409, isLocal: true, isDefinition: true, align: 8)
!1514 = !DIGlobalVariableExpression(var: !1515, expr: !DIExpression())
!1515 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1356, file: !1494, line: 1914, type: !1516, isLocal: true, isDefinition: true)
!1516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1518, line: 22, size: 224, elements: !1519)
!1518 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1519 = !{!1520, !1521, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1517, file: !1518, line: 24, baseType: !1441, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1517, file: !1518, line: 26, baseType: !1522, size: 32, offset: 32)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1524)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !941, line: 343, size: 64, elements: !1525)
!1525 = !{!1526, !1527}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1524, file: !941, line: 344, baseType: !110, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1524, file: !941, line: 345, baseType: !110, size: 32, offset: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1517, file: !1518, line: 28, baseType: !232, size: 32, offset: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1517, file: !1518, line: 30, baseType: !360, size: 8, offset: 96)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1517, file: !1518, line: 32, baseType: !109, size: 32, offset: 128)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1517, file: !1518, line: 34, baseType: !360, size: 8, offset: 160)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1517, file: !1518, line: 36, baseType: !360, size: 8, offset: 168)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1517, file: !1518, line: 38, baseType: !360, size: 8, offset: 176)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1517, file: !1518, line: 40, baseType: !360, size: 8, offset: 184)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1517, file: !1518, line: 41, baseType: !1536, size: 32, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1538)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1539, line: 60, size: 64, elements: !1540)
!1539 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1540 = !{!1541, !1557}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1538, file: !1539, line: 69, baseType: !1542, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1544)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1539, line: 50, size: 64, elements: !1545)
!1545 = !{!1546, !1555, !1556}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1544, file: !1539, line: 52, baseType: !1547, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1549)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1550, line: 37, baseType: !1551)
!1550 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1550, line: 32, size: 64, elements: !1552)
!1552 = !{!1553, !1554}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1551, file: !1550, line: 34, baseType: !110, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1551, file: !1550, line: 36, baseType: !110, size: 32, offset: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1544, file: !1539, line: 54, baseType: !178, size: 8, offset: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1544, file: !1539, line: 56, baseType: !178, size: 8, offset: 40)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1538, file: !1539, line: 71, baseType: !178, size: 8, offset: 32)
!1558 = !DIGlobalVariableExpression(var: !1559, expr: !DIExpression())
!1559 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1356, file: !1494, line: 1914, type: !1560, isLocal: true, isDefinition: true)
!1560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1523, size: 64, elements: !530)
!1561 = !DIGlobalVariableExpression(var: !1562, expr: !DIExpression())
!1562 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1356, file: !1494, line: 1914, type: !1537, isLocal: true, isDefinition: true)
!1563 = !DIGlobalVariableExpression(var: !1564, expr: !DIExpression())
!1564 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1356, file: !1494, line: 1914, type: !1565, isLocal: true, isDefinition: true)
!1565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1543, size: 64, elements: !530)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1356, file: !1494, line: 1914, type: !1568, isLocal: true, isDefinition: true)
!1568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1548, size: 128, elements: !173)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1356, file: !1494, line: 1539, type: !1393, isLocal: true, isDefinition: true)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1356, file: !1494, line: 1914, type: !1573, isLocal: true, isDefinition: true)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1518, line: 74, size: 64, elements: !1574)
!1574 = !{!1575, !1576}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1573, file: !1518, line: 76, baseType: !110, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1573, file: !1518, line: 78, baseType: !1400, size: 32, offset: 32)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1356, file: !1494, line: 1914, type: !1516, isLocal: true, isDefinition: true)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1356, file: !1494, line: 1914, type: !1560, isLocal: true, isDefinition: true)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1356, file: !1494, line: 1914, type: !1537, isLocal: true, isDefinition: true)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1356, file: !1494, line: 1914, type: !1565, isLocal: true, isDefinition: true)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1356, file: !1494, line: 1914, type: !1568, isLocal: true, isDefinition: true)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1356, file: !1494, line: 1914, type: !1573, isLocal: true, isDefinition: true)
!1589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1590)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !1591)
!1591 = !{!1592, !1593}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1590, file: !291, line: 17, baseType: !279, size: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1590, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1596, file: !1674, line: 65, type: !316, isLocal: true, isDefinition: true)
!1596 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1597, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1598, retainedTypes: !1599, globals: !1671, splitDebugInlining: false, nameTableKind: None)
!1597 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!1598 = !{!725}
!1599 = !{!103, !1600, !854, !178, !110, !1608, !1639}
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !548, line: 712, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 706, size: 128, elements: !1603)
!1603 = !{!1604, !1605, !1606, !1607}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1602, file: !548, line: 708, baseType: !316, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1602, file: !548, line: 709, baseType: !316, size: 32, offset: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1602, file: !548, line: 710, baseType: !316, size: 32, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1602, file: !548, line: 711, baseType: !552, size: 32, offset: 96)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !548, line: 360, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 345, size: 28704, elements: !1611)
!1611 = !{!1612, !1614, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1629, !1634, !1638}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1610, file: !548, line: 347, baseType: !1613, size: 256)
!1613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 256, elements: !1239)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1610, file: !548, line: 348, baseType: !1615, size: 768, offset: 256)
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1616)
!1616 = !{!1617}
!1617 = !DISubrange(count: 24)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1610, file: !548, line: 349, baseType: !1613, size: 256, offset: 1024)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1610, file: !548, line: 350, baseType: !1615, size: 768, offset: 1280)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1610, file: !548, line: 351, baseType: !1613, size: 256, offset: 2048)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1610, file: !548, line: 352, baseType: !1615, size: 768, offset: 2304)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1610, file: !548, line: 353, baseType: !1613, size: 256, offset: 3072)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1610, file: !548, line: 354, baseType: !1615, size: 768, offset: 3328)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1610, file: !548, line: 355, baseType: !1613, size: 256, offset: 4096)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1610, file: !548, line: 356, baseType: !1626, size: 1792, offset: 4352)
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1627)
!1627 = !{!1628}
!1628 = !DISubrange(count: 56)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1610, file: !548, line: 357, baseType: !1630, size: 1920, offset: 6144)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1631, size: 1920, elements: !1632)
!1631 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !178)
!1632 = !{!1633}
!1633 = !DISubrange(count: 240)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1610, file: !548, line: 358, baseType: !1635, size: 20608, offset: 8064)
!1635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1636)
!1636 = !{!1637}
!1637 = !DISubrange(count: 644)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1610, file: !548, line: 359, baseType: !316, size: 32, offset: 28672)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !1642)
!1642 = !{!1643, !1644, !1645, !1646, !1647, !1648, !1649, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1662, !1663, !1664, !1666, !1668, !1670}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1641, file: !548, line: 381, baseType: !552, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1641, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1641, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1641, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1641, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1641, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1641, file: !548, line: 387, baseType: !1650, size: 96, offset: 192)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1631, size: 96, elements: !1651)
!1651 = !{!1652}
!1652 = !DISubrange(count: 12)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1641, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1641, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1641, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1641, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1641, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1641, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1641, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1641, file: !548, line: 395, baseType: !1661, size: 64, offset: 512)
!1661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !552, size: 64, elements: !173)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1641, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1641, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1641, file: !548, line: 398, baseType: !1665, size: 128, offset: 640)
!1665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !552, size: 128, elements: !796)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1641, file: !548, line: 399, baseType: !1667, size: 160, offset: 768)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !552, size: 160, elements: !1274)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1641, file: !548, line: 400, baseType: !1669, size: 160, offset: 928)
!1669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1274)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1641, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!1671 = !{!1672, !1698, !1703, !1705, !1707, !1594}
!1672 = !DIGlobalVariableExpression(var: !1673, expr: !DIExpression())
!1673 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1596, file: !1674, line: 285, type: !1675, isLocal: true, isDefinition: true, align: 32)
!1674 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !1677)
!1677 = !{!1678, !1697}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1676, file: !340, line: 60, baseType: !1679, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 32)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!109, !1682}
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !1685)
!1685 = !{!1686, !1687, !1688, !1689, !1695, !1696}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1684, file: !349, line: 380, baseType: !279, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1684, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1684, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1684, file: !349, line: 386, baseType: !1690, size: 32, offset: 96)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 32)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !1692)
!1692 = !{!1693, !1694}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1691, file: !349, line: 359, baseType: !178, size: 8)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1691, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1684, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1684, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1676, file: !340, line: 65, baseType: !1682, size: 32, offset: 32)
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "lock", scope: !1596, file: !1674, line: 34, type: !1700, isLocal: true, isDefinition: true)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !1701)
!1701 = !{!1702}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1700, file: !251, line: 52, baseType: !22, size: 32)
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "last_load", scope: !1596, file: !1674, line: 36, type: !110, isLocal: true, isDefinition: true)
!1705 = !DIGlobalVariableExpression(var: !1706, expr: !DIExpression())
!1706 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1596, file: !1674, line: 48, type: !110, isLocal: true, isDefinition: true)
!1707 = !DIGlobalVariableExpression(var: !1708, expr: !DIExpression())
!1708 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1596, file: !1674, line: 54, type: !110, isLocal: true, isDefinition: true)
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1711, file: !1792, line: 22, type: !1794, isLocal: true, isDefinition: true)
!1711 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1712, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !616, retainedTypes: !1713, globals: !1789, splitDebugInlining: false, nameTableKind: None)
!1712 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!1713 = !{!1714, !1778, !1783, !664, !623, !617, !1788, !107}
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !618, line: 523, size: 288, elements: !1717)
!1717 = !{!1718, !1737, !1741, !1745, !1749, !1750, !1751, !1755, !1774}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1716, file: !618, line: 524, baseType: !1719, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!109, !1722, !652, !653}
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !1725)
!1725 = !{!1726, !1727, !1728, !1729, !1735, !1736}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1724, file: !349, line: 380, baseType: !279, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1724, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1724, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1724, file: !349, line: 386, baseType: !1730, size: 32, offset: 96)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !1732)
!1732 = !{!1733, !1734}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1731, file: !349, line: 359, baseType: !178, size: 8)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1731, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1724, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1724, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1716, file: !618, line: 530, baseType: !1738, size: 32, offset: 32)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{!109, !1722, !658}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1716, file: !618, line: 532, baseType: !1742, size: 32, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{!109, !1722, !664, !659}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1716, file: !618, line: 535, baseType: !1746, size: 32, offset: 96)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{!109, !1722, !664}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1716, file: !618, line: 537, baseType: !1746, size: 32, offset: 128)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1716, file: !618, line: 539, baseType: !1746, size: 32, offset: 160)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1716, file: !618, line: 541, baseType: !1752, size: 32, offset: 192)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1753 = !DISubroutineType(types: !1754)
!1754 = !{!109, !1722, !652, !617, !623}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1716, file: !618, line: 544, baseType: !1756, size: 32, offset: 224)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{!109, !1722, !1759, !360}
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 32)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !618, line: 478, size: 96, elements: !1761)
!1761 = !{!1762, !1768, !1773}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1760, file: !618, line: 482, baseType: !1763, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !684, line: 33, baseType: !1764)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !684, line: 29, size: 32, elements: !1765)
!1765 = !{!1766}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1764, file: !684, line: 30, baseType: !1767, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1760, file: !618, line: 485, baseType: !1769, size: 32, offset: 32)
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !618, line: 464, baseType: !1770)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = !DISubroutineType(types: !1772)
!1772 = !{null, !1722, !1759, !664}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1760, file: !618, line: 493, baseType: !664, size: 32, offset: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1716, file: !618, line: 547, baseType: !1775, size: 32, offset: 256)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!110, !1722}
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1780)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !618, line: 428, size: 32, elements: !1781)
!1781 = !{!1782}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1780, file: !618, line: 434, baseType: !664, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 32)
!1784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1785)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !618, line: 441, size: 32, elements: !1786)
!1786 = !{!1787}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1785, file: !618, line: 447, baseType: !664, size: 32)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 32)
!1789 = !{!1790, !1709}
!1790 = !DIGlobalVariableExpression(var: !1791, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1791 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1711, file: !1792, line: 37, type: !1793, isLocal: true, isDefinition: true)
!1792 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !232)
!1794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1795, size: 352, elements: !882)
!1795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1722)
!1796 = !DIGlobalVariableExpression(var: !1797, expr: !DIExpression())
!1797 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1798, file: !1822, line: 129, type: !1830, isLocal: false, isDefinition: true)
!1798 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1799, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1800, globals: !1819, splitDebugInlining: false, nameTableKind: None)
!1799 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!1800 = !{!1801}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 386, baseType: !1803)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 448, elements: !1804)
!1804 = !{!1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1803, file: !312, line: 372, baseType: !316, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1803, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1803, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1803, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1803, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1803, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1803, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1803, file: !312, line: 379, baseType: !316, size: 32, offset: 224)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1803, file: !312, line: 380, baseType: !316, size: 32, offset: 256)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1803, file: !312, line: 381, baseType: !316, size: 32, offset: 288)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1803, file: !312, line: 382, baseType: !316, size: 32, offset: 320)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1803, file: !312, line: 383, baseType: !316, size: 32, offset: 352)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1803, file: !312, line: 384, baseType: !316, size: 32, offset: 384)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1803, file: !312, line: 385, baseType: !316, size: 32, offset: 416)
!1819 = !{!1820, !1823, !1827, !1796}
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1798, file: !1822, line: 126, type: !110, isLocal: false, isDefinition: true)
!1822 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1823 = !DIGlobalVariableExpression(var: !1824, expr: !DIExpression())
!1824 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !1798, file: !1822, line: 127, type: !1825, isLocal: false, isDefinition: true)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 72, elements: !1256)
!1826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!1827 = !DIGlobalVariableExpression(var: !1828, expr: !DIExpression())
!1828 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1798, file: !1822, line: 128, type: !1829, isLocal: false, isDefinition: true)
!1829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 128, elements: !840)
!1830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 64, elements: !1239)
!1831 = !DIGlobalVariableExpression(var: !1832, expr: !DIExpression())
!1832 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1833, file: !1836, line: 23, type: !1837, isLocal: false, isDefinition: true)
!1833 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1834, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !1835, splitDebugInlining: false, nameTableKind: None)
!1834 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!1835 = !{!1831}
!1836 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1840, file: !1844, line: 37, type: !2098, isLocal: false, isDefinition: true)
!1840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1841, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1842, retainedTypes: !1851, globals: !1924, splitDebugInlining: false, nameTableKind: None)
!1841 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!1842 = !{!1843, !30, !725}
!1843 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1844, line: 63, baseType: !32, size: 32, elements: !1845)
!1844 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1845 = !{!1846, !1847, !1848, !1849, !1850}
!1846 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1847 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1848 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1849 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1850 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1851 = !{!232, !107, !109, !1852, !285, !110, !1882, !854, !178, !1907}
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1855, line: 51, size: 64, elements: !1856)
!1855 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1856 = !{!1857, !1877}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1854, file: !1855, line: 52, baseType: !1858, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1855, line: 38, baseType: !1859)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!109, !1862, !286, !192}
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !1865)
!1865 = !{!1866, !1867, !1868, !1869, !1875, !1876}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1864, file: !349, line: 380, baseType: !279, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1864, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1864, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1864, file: !349, line: 386, baseType: !1870, size: 32, offset: 96)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !1872)
!1872 = !{!1873, !1874}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1871, file: !349, line: 359, baseType: !178, size: 8)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1871, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1864, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1864, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1854, file: !1855, line: 53, baseType: !1878, size: 32, offset: 32)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1855, line: 47, baseType: !1879)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{!109, !1862, !286, !192, !110}
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !1884)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !1885)
!1885 = !{!1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1884, file: !548, line: 381, baseType: !552, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1884, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1884, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1884, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1884, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1884, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1884, file: !548, line: 387, baseType: !1650, size: 96, offset: 192)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1884, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1884, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1884, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1884, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1884, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1884, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1884, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1884, file: !548, line: 395, baseType: !1661, size: 64, offset: 512)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1884, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1884, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1884, file: !548, line: 398, baseType: !1665, size: 128, offset: 640)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1884, file: !548, line: 399, baseType: !1667, size: 160, offset: 768)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1884, file: !548, line: 400, baseType: !1669, size: 160, offset: 928)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1884, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !548, line: 360, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 345, size: 28704, elements: !1910)
!1910 = !{!1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1909, file: !548, line: 347, baseType: !1613, size: 256)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1909, file: !548, line: 348, baseType: !1615, size: 768, offset: 256)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1909, file: !548, line: 349, baseType: !1613, size: 256, offset: 1024)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1909, file: !548, line: 350, baseType: !1615, size: 768, offset: 1280)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1909, file: !548, line: 351, baseType: !1613, size: 256, offset: 2048)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1909, file: !548, line: 352, baseType: !1615, size: 768, offset: 2304)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1909, file: !548, line: 353, baseType: !1613, size: 256, offset: 3072)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1909, file: !548, line: 354, baseType: !1615, size: 768, offset: 3328)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1909, file: !548, line: 355, baseType: !1613, size: 256, offset: 4096)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1909, file: !548, line: 356, baseType: !1626, size: 1792, offset: 4352)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1909, file: !548, line: 357, baseType: !1630, size: 1920, offset: 6144)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1909, file: !548, line: 358, baseType: !1635, size: 20608, offset: 8064)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1909, file: !548, line: 359, baseType: !316, size: 32, offset: 28672)
!1924 = !{!1838, !1925, !2051, !2058, !2060, !2063, !2068, !2070, !2075}
!1925 = !DIGlobalVariableExpression(var: !1926, expr: !DIExpression())
!1926 = distinct !DIGlobalVariable(name: "_kernel", scope: !1840, file: !1844, line: 40, type: !1927, isLocal: false, isDefinition: true)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !122, line: 158, size: 288, elements: !1928)
!1928 = !{!1929, !2046}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1927, file: !122, line: 159, baseType: !1930, size: 192)
!1930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 192, elements: !530)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !122, line: 100, size: 192, elements: !1932)
!1932 = !{!1933, !1934, !1935, !2039, !2040, !2041, !2042}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1931, file: !122, line: 102, baseType: !110, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1931, file: !122, line: 105, baseType: !285, size: 32, offset: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1931, file: !122, line: 108, baseType: !1936, size: 32, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !1938)
!1938 = !{!1939, !1997, !2009, !2010, !2011, !2012, !2013, !2019, !2034}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1937, file: !156, line: 247, baseType: !1940, size: 384)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !1941)
!1941 = !{!1942, !1966, !1973, !1974, !1975, !1984, !1985, !1986}
!1942 = !DIDerivedType(tag: DW_TAG_member, scope: !1940, file: !156, line: 60, baseType: !1943, size: 64)
!1943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1940, file: !156, line: 60, size: 64, elements: !1944)
!1944 = !{!1945, !1960}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1943, file: !156, line: 61, baseType: !1946, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !1947)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !1948)
!1948 = !{!1949, !1955}
!1949 = !DIDerivedType(tag: DW_TAG_member, scope: !1947, file: !127, line: 38, baseType: !1950, size: 32)
!1950 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1947, file: !127, line: 38, size: 32, elements: !1951)
!1951 = !{!1952, !1954}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1950, file: !127, line: 39, baseType: !1953, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1950, file: !127, line: 40, baseType: !1953, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, scope: !1947, file: !127, line: 42, baseType: !1956, size: 32, offset: 32)
!1956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1947, file: !127, line: 42, size: 32, elements: !1957)
!1957 = !{!1958, !1959}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1956, file: !127, line: 43, baseType: !1953, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1956, file: !127, line: 44, baseType: !1953, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1943, file: !156, line: 62, baseType: !1961, size: 64)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !1962)
!1962 = !{!1963}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1961, file: !168, line: 50, baseType: !1964, size: 64)
!1964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1965, size: 64, elements: !173)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1940, file: !156, line: 68, baseType: !1967, size: 32, offset: 64)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !1969)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !1970)
!1970 = !{!1971}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1969, file: !122, line: 232, baseType: !1972, size: 64)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !1947)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1940, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1940, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!1975 = !DIDerivedType(tag: DW_TAG_member, scope: !1940, file: !156, line: 90, baseType: !1976, size: 16, offset: 112)
!1976 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1940, file: !156, line: 90, size: 16, elements: !1977)
!1977 = !{!1978, !1983}
!1978 = !DIDerivedType(tag: DW_TAG_member, scope: !1976, file: !156, line: 91, baseType: !1979, size: 16)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1976, file: !156, line: 91, size: 16, elements: !1980)
!1980 = !{!1981, !1982}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1979, file: !156, line: 96, baseType: !188, size: 8)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1979, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1976, file: !156, line: 100, baseType: !192, size: 16)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1940, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1940, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1940, file: !156, line: 131, baseType: !1987, size: 192, offset: 192)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !1988)
!1988 = !{!1989, !1990, !1996}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1987, file: !122, line: 245, baseType: !1946, size: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1987, file: !122, line: 246, baseType: !1991, size: 32, offset: 64)
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !1992)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 32)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{null, !1995}
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1987, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1937, file: !156, line: 250, baseType: !1998, size: 288, offset: 384)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1998, file: !209, line: 26, baseType: !110, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1998, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1998, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1998, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1998, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1998, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1998, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1998, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1998, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1937, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1937, file: !156, line: 256, baseType: !1968, size: 64, offset: 704)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1937, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1937, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1937, file: !156, line: 300, baseType: !2014, size: 96, offset: 1056)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2015)
!2015 = !{!2016, !2017, !2018}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2014, file: !156, line: 153, baseType: !22, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2014, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2014, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1937, file: !156, line: 325, baseType: !2020, size: 32, offset: 1152)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 32)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2022)
!2022 = !{!2023, !2029, !2030}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2021, file: !118, line: 5074, baseType: !2024, size: 96)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2025)
!2025 = !{!2026, !2027, !2028}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2024, file: !241, line: 57, baseType: !244, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2024, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2024, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2021, file: !118, line: 5075, baseType: !1968, size: 64, offset: 96)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2021, file: !118, line: 5076, baseType: !2031, size: 32, offset: 160)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2032)
!2032 = !{!2033}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2031, file: !251, line: 52, baseType: !22, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1937, file: !156, line: 343, baseType: !2035, size: 64, offset: 1184)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2036)
!2036 = !{!2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2035, file: !209, line: 63, baseType: !110, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2035, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1931, file: !122, line: 111, baseType: !1936, size: 32, offset: 96)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1931, file: !122, line: 124, baseType: !109, size: 32, offset: 128)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1931, file: !122, line: 127, baseType: !178, size: 8, offset: 160)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1931, file: !122, line: 153, baseType: !2043, offset: 168)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2044, line: 33, elements: !2045)
!2044 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2045 = !{}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1927, file: !122, line: 170, baseType: !2047, size: 96, offset: 192)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !2048)
!2048 = !{!2049, !2050}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2047, file: !122, line: 86, baseType: !1936, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2047, file: !122, line: 90, baseType: !1972, size: 64, offset: 32)
!2051 = !DIGlobalVariableExpression(var: !2052, expr: !DIExpression())
!2052 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1840, file: !1844, line: 43, type: !2053, isLocal: false, isDefinition: true, align: 512)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2054, size: 8704, elements: !2057)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !2055)
!2055 = !{!2056}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2054, file: !145, line: 48, baseType: !148, size: 8)
!2057 = !{!151}
!2058 = !DIGlobalVariableExpression(var: !2059, expr: !DIExpression())
!2059 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1840, file: !1844, line: 44, type: !1937, isLocal: false, isDefinition: true)
!2060 = !DIGlobalVariableExpression(var: !2061, expr: !DIExpression())
!2061 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1840, file: !1844, line: 48, type: !2062, isLocal: false, isDefinition: true)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1937, size: 1280, elements: !530)
!2063 = !DIGlobalVariableExpression(var: !2064, expr: !DIExpression())
!2064 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1840, file: !1844, line: 86, type: !2065, isLocal: false, isDefinition: true, align: 512)
!2065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2054, size: 16896, elements: !2066)
!2066 = !{!531, !2067}
!2067 = !DISubrange(count: 2112)
!2068 = !DIGlobalVariableExpression(var: !2069, expr: !DIExpression())
!2069 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1840, file: !1844, line: 217, type: !360, isLocal: false, isDefinition: true)
!2070 = !DIGlobalVariableExpression(var: !2071, expr: !DIExpression())
!2071 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1840, file: !1844, line: 50, type: !2072, isLocal: true, isDefinition: true, align: 512)
!2072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2054, size: 2560, elements: !2073)
!2073 = !{!531, !2074}
!2074 = !DISubrange(count: 320)
!2075 = !DIGlobalVariableExpression(var: !2076, expr: !DIExpression())
!2076 = distinct !DIGlobalVariable(name: "levels", scope: !2077, file: !1844, line: 232, type: !2097, isLocal: true, isDefinition: true)
!2077 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1844, file: !1844, line: 230, type: !2078, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !2080)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{null, !1843}
!2080 = !{!2081, !2082, !2092, !2096}
!2081 = !DILocalVariable(name: "level", arg: 1, scope: !2077, file: !1844, line: 230, type: !1843)
!2082 = !DILocalVariable(name: "entry", scope: !2077, file: !1844, line: 244, type: !2083)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2085)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !2086)
!2086 = !{!2087, !2091}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2085, file: !340, line: 60, baseType: !2088, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!109, !1862}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2085, file: !340, line: 65, baseType: !1862, size: 32, offset: 32)
!2092 = !DILocalVariable(name: "dev", scope: !2093, file: !1844, line: 247, type: !1862)
!2093 = distinct !DILexicalBlock(scope: !2094, file: !1844, line: 246, column: 64)
!2094 = distinct !DILexicalBlock(scope: !2095, file: !1844, line: 246, column: 2)
!2095 = distinct !DILexicalBlock(scope: !2077, file: !1844, line: 246, column: 2)
!2096 = !DILocalVariable(name: "rc", scope: !2093, file: !1844, line: 248, type: !109)
!2097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2083, size: 192, elements: !1265)
!2098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2099)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !2100)
!2100 = !{!2101, !2102}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2099, file: !291, line: 17, baseType: !279, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2099, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!2103 = !DIGlobalVariableExpression(var: !2104, expr: !DIExpression())
!2104 = distinct !DIGlobalVariable(name: "states_str", scope: !2105, file: !2106, line: 276, type: !2230, isLocal: true, isDefinition: true)
!2105 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2106, file: !2106, line: 271, type: !2107, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !2221)
!2106 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2107 = !DISubroutineType(types: !2108)
!2108 = !{!279, !2109, !285, !232}
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !2110)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 32)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2112)
!2112 = !{!2113, !2171, !2183, !2184, !2185, !2186, !2187, !2193, !2208}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2111, file: !156, line: 247, baseType: !2114, size: 384)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2115)
!2115 = !{!2116, !2140, !2147, !2148, !2149, !2158, !2159, !2160}
!2116 = !DIDerivedType(tag: DW_TAG_member, scope: !2114, file: !156, line: 60, baseType: !2117, size: 64)
!2117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2114, file: !156, line: 60, size: 64, elements: !2118)
!2118 = !{!2119, !2134}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2117, file: !156, line: 61, baseType: !2120, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2121)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2122)
!2122 = !{!2123, !2129}
!2123 = !DIDerivedType(tag: DW_TAG_member, scope: !2121, file: !127, line: 38, baseType: !2124, size: 32)
!2124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2121, file: !127, line: 38, size: 32, elements: !2125)
!2125 = !{!2126, !2128}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2124, file: !127, line: 39, baseType: !2127, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2124, file: !127, line: 40, baseType: !2127, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, scope: !2121, file: !127, line: 42, baseType: !2130, size: 32, offset: 32)
!2130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2121, file: !127, line: 42, size: 32, elements: !2131)
!2131 = !{!2132, !2133}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2130, file: !127, line: 43, baseType: !2127, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2130, file: !127, line: 44, baseType: !2127, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2117, file: !156, line: 62, baseType: !2135, size: 64)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2136)
!2136 = !{!2137}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2135, file: !168, line: 50, baseType: !2138, size: 64)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2139, size: 64, elements: !173)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2114, file: !156, line: 68, baseType: !2141, size: 32, offset: 64)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2143)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2144)
!2144 = !{!2145}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2143, file: !122, line: 232, baseType: !2146, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2121)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2114, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2114, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2149 = !DIDerivedType(tag: DW_TAG_member, scope: !2114, file: !156, line: 90, baseType: !2150, size: 16, offset: 112)
!2150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2114, file: !156, line: 90, size: 16, elements: !2151)
!2151 = !{!2152, !2157}
!2152 = !DIDerivedType(tag: DW_TAG_member, scope: !2150, file: !156, line: 91, baseType: !2153, size: 16)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2150, file: !156, line: 91, size: 16, elements: !2154)
!2154 = !{!2155, !2156}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2153, file: !156, line: 96, baseType: !188, size: 8)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2153, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2150, file: !156, line: 100, baseType: !192, size: 16)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2114, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2114, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2114, file: !156, line: 131, baseType: !2161, size: 192, offset: 192)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2162)
!2162 = !{!2163, !2164, !2170}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2161, file: !122, line: 245, baseType: !2120, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2161, file: !122, line: 246, baseType: !2165, size: 32, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2166)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 32)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{null, !2169}
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2161, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2111, file: !156, line: 250, baseType: !2172, size: 288, offset: 384)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2173)
!2173 = !{!2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2172, file: !209, line: 26, baseType: !110, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2172, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2172, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2172, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2172, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2172, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2172, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2172, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2172, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2111, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2111, file: !156, line: 256, baseType: !2142, size: 64, offset: 704)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2111, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2111, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2111, file: !156, line: 300, baseType: !2188, size: 96, offset: 1056)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2189)
!2189 = !{!2190, !2191, !2192}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2188, file: !156, line: 153, baseType: !22, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2188, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2188, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2111, file: !156, line: 325, baseType: !2194, size: 32, offset: 1152)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2196)
!2196 = !{!2197, !2203, !2204}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2195, file: !118, line: 5074, baseType: !2198, size: 96)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2199)
!2199 = !{!2200, !2201, !2202}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2198, file: !241, line: 57, baseType: !244, size: 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2198, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2198, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2195, file: !118, line: 5075, baseType: !2142, size: 64, offset: 96)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2195, file: !118, line: 5076, baseType: !2205, size: 32, offset: 160)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2206)
!2206 = !{!2207}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2205, file: !251, line: 52, baseType: !22, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2111, file: !156, line: 343, baseType: !2209, size: 64, offset: 1184)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2210)
!2210 = !{!2211, !2212}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2209, file: !209, line: 63, baseType: !110, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2209, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2214, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2215, globals: !2217, splitDebugInlining: false, nameTableKind: None)
!2214 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2215 = !{!107, !279, !103, !178, !22, !109, !2216, !24, !232, !285, !110, !111}
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 32)
!2217 = !{!2103, !2218}
!2218 = !DIGlobalVariableExpression(var: !2219, expr: !DIExpression())
!2219 = distinct !DIGlobalVariable(name: "states_sz", scope: !2105, file: !2106, line: 279, type: !2220, isLocal: true, isDefinition: true)
!2220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1793, size: 256, elements: !1239)
!2221 = !{!2222, !2223, !2224, !2225, !2226, !2227, !2228}
!2222 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2105, file: !2106, line: 271, type: !2109)
!2223 = !DILocalVariable(name: "buf", arg: 2, scope: !2105, file: !2106, line: 271, type: !285)
!2224 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2105, file: !2106, line: 271, type: !232)
!2225 = !DILocalVariable(name: "off", scope: !2105, file: !2106, line: 273, type: !232)
!2226 = !DILocalVariable(name: "bit", scope: !2105, file: !2106, line: 274, type: !178)
!2227 = !DILocalVariable(name: "thread_state", scope: !2105, file: !2106, line: 275, type: !178)
!2228 = !DILocalVariable(name: "index", scope: !2229, file: !2106, line: 293, type: !178)
!2229 = distinct !DILexicalBlock(scope: !2105, file: !2106, line: 293, column: 2)
!2230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !1239)
!2231 = !DIGlobalVariableExpression(var: !2232, expr: !DIExpression())
!2232 = distinct !DIGlobalVariable(name: "lock", scope: !2233, file: !2341, line: 47, type: !2332, isLocal: true, isDefinition: true)
!2233 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2234, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2235, globals: !2340, splitDebugInlining: false, nameTableKind: None)
!2234 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2235 = !{!360, !107, !109, !2236, !2251}
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2238)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2239)
!2239 = !{!2240, !2246}
!2240 = !DIDerivedType(tag: DW_TAG_member, scope: !2238, file: !127, line: 38, baseType: !2241, size: 32)
!2241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2238, file: !127, line: 38, size: 32, elements: !2242)
!2242 = !{!2243, !2245}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2241, file: !127, line: 39, baseType: !2244, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2241, file: !127, line: 40, baseType: !2244, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, scope: !2238, file: !127, line: 42, baseType: !2247, size: 32, offset: 32)
!2247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2238, file: !127, line: 42, size: 32, elements: !2248)
!2248 = !{!2249, !2250}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2247, file: !127, line: 43, baseType: !2244, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2247, file: !127, line: 44, baseType: !2244, size: 32)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 32)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2253)
!2253 = !{!2254, !2298, !2310, !2311, !2312, !2313, !2314, !2320, !2335}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2252, file: !156, line: 247, baseType: !2255, size: 384)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2256)
!2256 = !{!2257, !2267, !2274, !2275, !2276, !2285, !2286, !2287}
!2257 = !DIDerivedType(tag: DW_TAG_member, scope: !2255, file: !156, line: 60, baseType: !2258, size: 64)
!2258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2255, file: !156, line: 60, size: 64, elements: !2259)
!2259 = !{!2260, !2261}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2258, file: !156, line: 61, baseType: !2237, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2258, file: !156, line: 62, baseType: !2262, size: 64)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2263)
!2263 = !{!2264}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2262, file: !168, line: 50, baseType: !2265, size: 64)
!2265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2266, size: 64, elements: !173)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2255, file: !156, line: 68, baseType: !2268, size: 32, offset: 64)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2270)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2271)
!2271 = !{!2272}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2270, file: !122, line: 232, baseType: !2273, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2238)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2255, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2255, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2276 = !DIDerivedType(tag: DW_TAG_member, scope: !2255, file: !156, line: 90, baseType: !2277, size: 16, offset: 112)
!2277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2255, file: !156, line: 90, size: 16, elements: !2278)
!2278 = !{!2279, !2284}
!2279 = !DIDerivedType(tag: DW_TAG_member, scope: !2277, file: !156, line: 91, baseType: !2280, size: 16)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2277, file: !156, line: 91, size: 16, elements: !2281)
!2281 = !{!2282, !2283}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2280, file: !156, line: 96, baseType: !188, size: 8)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2280, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2277, file: !156, line: 100, baseType: !192, size: 16)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2255, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2255, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2255, file: !156, line: 131, baseType: !2288, size: 192, offset: 192)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2289)
!2289 = !{!2290, !2291, !2297}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2288, file: !122, line: 245, baseType: !2237, size: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2288, file: !122, line: 246, baseType: !2292, size: 32, offset: 64)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2293)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{null, !2296}
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2288, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2252, file: !156, line: 250, baseType: !2299, size: 288, offset: 384)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2300)
!2300 = !{!2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2299, file: !209, line: 26, baseType: !110, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2299, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2299, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2299, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2299, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2299, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2299, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2299, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2299, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2252, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2252, file: !156, line: 256, baseType: !2269, size: 64, offset: 704)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2252, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2252, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2252, file: !156, line: 300, baseType: !2315, size: 96, offset: 1056)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2316)
!2316 = !{!2317, !2318, !2319}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2315, file: !156, line: 153, baseType: !22, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2315, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2315, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2252, file: !156, line: 325, baseType: !2321, size: 32, offset: 1152)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 32)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2323)
!2323 = !{!2324, !2330, !2331}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2322, file: !118, line: 5074, baseType: !2325, size: 96)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2326)
!2326 = !{!2327, !2328, !2329}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2325, file: !241, line: 57, baseType: !244, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2325, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2325, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2322, file: !118, line: 5075, baseType: !2269, size: 64, offset: 96)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2322, file: !118, line: 5076, baseType: !2332, size: 32, offset: 160)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2333)
!2333 = !{!2334}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2332, file: !251, line: 52, baseType: !22, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2252, file: !156, line: 343, baseType: !2336, size: 64, offset: 1184)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2337)
!2337 = !{!2338, !2339}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2336, file: !209, line: 63, baseType: !110, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2336, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2340 = !{!2231}
!2341 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2342 = !DIGlobalVariableExpression(var: !2343, expr: !DIExpression())
!2343 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2344, file: !2455, line: 56, type: !2442, isLocal: false, isDefinition: true)
!2344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2345, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2346, globals: !2452, splitDebugInlining: false, nameTableKind: None)
!2345 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2346 = !{!2347, !285, !107, !2450, !286, !103, !854, !109, !110, !111, !2451}
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 32)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2349)
!2349 = !{!2350, !2408, !2420, !2421, !2422, !2423, !2424, !2430, !2445}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2348, file: !156, line: 247, baseType: !2351, size: 384)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2352)
!2352 = !{!2353, !2377, !2384, !2385, !2386, !2395, !2396, !2397}
!2353 = !DIDerivedType(tag: DW_TAG_member, scope: !2351, file: !156, line: 60, baseType: !2354, size: 64)
!2354 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2351, file: !156, line: 60, size: 64, elements: !2355)
!2355 = !{!2356, !2371}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2354, file: !156, line: 61, baseType: !2357, size: 64)
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2358)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2359)
!2359 = !{!2360, !2366}
!2360 = !DIDerivedType(tag: DW_TAG_member, scope: !2358, file: !127, line: 38, baseType: !2361, size: 32)
!2361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2358, file: !127, line: 38, size: 32, elements: !2362)
!2362 = !{!2363, !2365}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2361, file: !127, line: 39, baseType: !2364, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2361, file: !127, line: 40, baseType: !2364, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, scope: !2358, file: !127, line: 42, baseType: !2367, size: 32, offset: 32)
!2367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2358, file: !127, line: 42, size: 32, elements: !2368)
!2368 = !{!2369, !2370}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2367, file: !127, line: 43, baseType: !2364, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2367, file: !127, line: 44, baseType: !2364, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2354, file: !156, line: 62, baseType: !2372, size: 64)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2373)
!2373 = !{!2374}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2372, file: !168, line: 50, baseType: !2375, size: 64)
!2375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2376, size: 64, elements: !173)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2351, file: !156, line: 68, baseType: !2378, size: 32, offset: 64)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2380)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2381)
!2381 = !{!2382}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2380, file: !122, line: 232, baseType: !2383, size: 64)
!2383 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2358)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2351, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2351, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2386 = !DIDerivedType(tag: DW_TAG_member, scope: !2351, file: !156, line: 90, baseType: !2387, size: 16, offset: 112)
!2387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2351, file: !156, line: 90, size: 16, elements: !2388)
!2388 = !{!2389, !2394}
!2389 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !156, line: 91, baseType: !2390, size: 16)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2387, file: !156, line: 91, size: 16, elements: !2391)
!2391 = !{!2392, !2393}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2390, file: !156, line: 96, baseType: !188, size: 8)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2390, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2387, file: !156, line: 100, baseType: !192, size: 16)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2351, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2351, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2351, file: !156, line: 131, baseType: !2398, size: 192, offset: 192)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2399)
!2399 = !{!2400, !2401, !2407}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2398, file: !122, line: 245, baseType: !2357, size: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2398, file: !122, line: 246, baseType: !2402, size: 32, offset: 64)
!2402 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2403)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 32)
!2404 = !DISubroutineType(types: !2405)
!2405 = !{null, !2406}
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2398, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2348, file: !156, line: 250, baseType: !2409, size: 288, offset: 384)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2410)
!2410 = !{!2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2409, file: !209, line: 26, baseType: !110, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2409, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2409, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2409, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2409, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2409, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2409, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2409, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2409, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2348, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2348, file: !156, line: 256, baseType: !2379, size: 64, offset: 704)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2348, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2348, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2348, file: !156, line: 300, baseType: !2425, size: 96, offset: 1056)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2426)
!2426 = !{!2427, !2428, !2429}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2425, file: !156, line: 153, baseType: !22, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2425, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2425, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2348, file: !156, line: 325, baseType: !2431, size: 32, offset: 1152)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 32)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2433)
!2433 = !{!2434, !2440, !2441}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2432, file: !118, line: 5074, baseType: !2435, size: 96)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2436)
!2436 = !{!2437, !2438, !2439}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2435, file: !241, line: 57, baseType: !244, size: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2435, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2435, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2432, file: !118, line: 5075, baseType: !2379, size: 64, offset: 96)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2432, file: !118, line: 5076, baseType: !2442, size: 32, offset: 160)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2443)
!2443 = !{!2444}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2442, file: !251, line: 52, baseType: !22, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2348, file: !156, line: 343, baseType: !2446, size: 64, offset: 1184)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2447)
!2447 = !{!2448, !2449}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2446, file: !209, line: 63, baseType: !110, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2446, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2452 = !{!2342, !2453, !2456, !2458}
!2453 = !DIGlobalVariableExpression(var: !2454, expr: !DIExpression())
!2454 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2344, file: !2455, line: 404, type: !109, isLocal: true, isDefinition: true)
!2455 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2456 = !DIGlobalVariableExpression(var: !2457, expr: !DIExpression())
!2457 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2344, file: !2455, line: 405, type: !109, isLocal: true, isDefinition: true)
!2458 = !DIGlobalVariableExpression(var: !2459, expr: !DIExpression())
!2459 = distinct !DIGlobalVariable(name: "pending_current", scope: !2344, file: !2455, line: 425, type: !2347, isLocal: true, isDefinition: true)
!2460 = !DIGlobalVariableExpression(var: !2461, expr: !DIExpression())
!2461 = distinct !DIGlobalVariable(name: "lock", scope: !2462, file: !2481, line: 14, type: !2482, isLocal: true, isDefinition: true)
!2462 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2463, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2464, globals: !2480, splitDebugInlining: false, nameTableKind: None)
!2463 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2464 = !{!107, !103, !109, !2465}
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2467)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2468)
!2468 = !{!2469, !2475}
!2469 = !DIDerivedType(tag: DW_TAG_member, scope: !2467, file: !127, line: 38, baseType: !2470, size: 32)
!2470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2467, file: !127, line: 38, size: 32, elements: !2471)
!2471 = !{!2472, !2474}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2470, file: !127, line: 39, baseType: !2473, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2470, file: !127, line: 40, baseType: !2473, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, scope: !2467, file: !127, line: 42, baseType: !2476, size: 32, offset: 32)
!2476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2467, file: !127, line: 42, size: 32, elements: !2477)
!2477 = !{!2478, !2479}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2476, file: !127, line: 43, baseType: !2473, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2476, file: !127, line: 44, baseType: !2473, size: 32)
!2480 = !{!2460}
!2481 = !DIFile(filename: "zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2483)
!2483 = !{!2484}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2482, file: !251, line: 52, baseType: !22, size: 32)
!2485 = !DIGlobalVariableExpression(var: !2486, expr: !DIExpression())
!2486 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2487, file: !2517, line: 19, type: !2523, isLocal: true, isDefinition: true)
!2487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2489, globals: !2514, splitDebugInlining: false, nameTableKind: None)
!2488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2489 = !{!103, !107, !854, !110, !111, !109, !2490, !285, !105}
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 32)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2492)
!2492 = !{!2493, !2508, !2513}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2491, file: !122, line: 245, baseType: !2494, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2495)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2496)
!2496 = !{!2497, !2503}
!2497 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !127, line: 38, baseType: !2498, size: 32)
!2498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !127, line: 38, size: 32, elements: !2499)
!2499 = !{!2500, !2502}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2498, file: !127, line: 39, baseType: !2501, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2498, file: !127, line: 40, baseType: !2501, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !127, line: 42, baseType: !2504, size: 32, offset: 32)
!2504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !127, line: 42, size: 32, elements: !2505)
!2505 = !{!2506, !2507}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2504, file: !127, line: 43, baseType: !2501, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2504, file: !127, line: 44, baseType: !2501, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2491, file: !122, line: 246, baseType: !2509, size: 32, offset: 64)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2510)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{null, !2490}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2491, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2514 = !{!2515, !2485, !2518, !2520}
!2515 = !DIGlobalVariableExpression(var: !2516, expr: !DIExpression())
!2516 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2487, file: !2517, line: 15, type: !111, isLocal: true, isDefinition: true)
!2517 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2518 = !DIGlobalVariableExpression(var: !2519, expr: !DIExpression())
!2519 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2487, file: !2517, line: 25, type: !109, isLocal: true, isDefinition: true)
!2520 = !DIGlobalVariableExpression(var: !2521, expr: !DIExpression())
!2521 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2487, file: !2517, line: 17, type: !2522, isLocal: true, isDefinition: true)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2495)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2524)
!2524 = !{!2525}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2523, file: !251, line: 52, baseType: !22, size: 32)
!2526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2527, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2527 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2532, retainedTypes: !2552, splitDebugInlining: false, nameTableKind: None)
!2531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2532 = !{!2533, !2541}
!2533 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2534, line: 69, baseType: !32, size: 32, elements: !2535)
!2534 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2535 = !{!2536, !2537, !2538, !2539, !2540}
!2536 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2537 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2538 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2539 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2540 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2534, line: 56, baseType: !32, size: 32, elements: !2542)
!2542 = !{!2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551}
!2543 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2544 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2545 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2546 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2547 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2548 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2549 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2550 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2551 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2552 = !{!109, !2533, !2541, !2553, !189, !367, !2555, !2556, !179, !193, !279, !232, !107, !22, !32, !281, !2558, !2559, !102, !282, !106, !283, !2554, !2560, !2561, !2562, !2563}
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2534, line: 31, baseType: !2554)
!2554 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !233, line: 329, baseType: !32)
!2556 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2534, line: 32, baseType: !2557)
!2557 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !233, line: 145, baseType: !109)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!2564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2565 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2568 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2569, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2570, splitDebugInlining: false, nameTableKind: None)
!2569 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2570 = !{!279, !179, !109, !32}
!2571 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2572, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2573, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2572 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2573 = !{!2574, !30}
!2574 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2575, line: 27, baseType: !32, size: 32, elements: !2576)
!2575 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2576 = !{!2577, !2578, !2579, !2580, !2581}
!2577 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2578 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2579 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2580 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2581 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2582 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2583, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2584, retainedTypes: !2585, splitDebugInlining: false, nameTableKind: None)
!2583 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2584 = !{!725, !2574, !30}
!2585 = !{!872, !2586, !107, !109, !854, !110, !178, !2603}
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !548, line: 360, baseType: !2588)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 345, size: 28704, elements: !2589)
!2589 = !{!2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2588, file: !548, line: 347, baseType: !1613, size: 256)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2588, file: !548, line: 348, baseType: !1615, size: 768, offset: 256)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2588, file: !548, line: 349, baseType: !1613, size: 256, offset: 1024)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2588, file: !548, line: 350, baseType: !1615, size: 768, offset: 1280)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2588, file: !548, line: 351, baseType: !1613, size: 256, offset: 2048)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2588, file: !548, line: 352, baseType: !1615, size: 768, offset: 2304)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2588, file: !548, line: 353, baseType: !1613, size: 256, offset: 3072)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2588, file: !548, line: 354, baseType: !1615, size: 768, offset: 3328)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2588, file: !548, line: 355, baseType: !1613, size: 256, offset: 4096)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2588, file: !548, line: 356, baseType: !1626, size: 1792, offset: 4352)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2588, file: !548, line: 357, baseType: !1630, size: 1920, offset: 6144)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2588, file: !548, line: 358, baseType: !1635, size: 20608, offset: 8064)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2588, file: !548, line: 359, baseType: !316, size: 32, offset: 28672)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !2605)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !2606)
!2606 = !{!2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2605, file: !548, line: 381, baseType: !552, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2605, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2605, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2605, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2605, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2605, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2605, file: !548, line: 387, baseType: !1650, size: 96, offset: 192)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2605, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2605, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2605, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2605, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2605, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2605, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2605, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2605, file: !548, line: 395, baseType: !1661, size: 64, offset: 512)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2605, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2605, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2605, file: !548, line: 398, baseType: !1665, size: 128, offset: 640)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2605, file: !548, line: 399, baseType: !1667, size: 160, offset: 768)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2605, file: !548, line: 400, baseType: !1669, size: 160, offset: 928)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2605, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!2628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2629 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2630 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2631, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2632, splitDebugInlining: false, nameTableKind: None)
!2631 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2632 = !{!107, !109, !22, !2633}
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !2635)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !2636)
!2636 = !{!2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2635, file: !548, line: 381, baseType: !552, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2635, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2635, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2635, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2635, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2635, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2635, file: !548, line: 387, baseType: !1650, size: 96, offset: 192)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2635, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2635, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2635, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2635, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2635, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2635, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2635, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2635, file: !548, line: 395, baseType: !1661, size: 64, offset: 512)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2635, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2635, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2635, file: !548, line: 398, baseType: !1665, size: 128, offset: 640)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2635, file: !548, line: 399, baseType: !1667, size: 160, offset: 768)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2635, file: !548, line: 400, baseType: !1669, size: 160, offset: 928)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2635, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!2658 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2659, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2660, splitDebugInlining: false, nameTableKind: None)
!2659 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2660 = !{!2661, !107, !109}
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !2663)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !2664)
!2664 = !{!2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2663, file: !548, line: 381, baseType: !552, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2663, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2663, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2663, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2663, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2663, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2663, file: !548, line: 387, baseType: !1650, size: 96, offset: 192)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2663, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2663, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2663, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2663, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2663, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2663, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2663, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2663, file: !548, line: 395, baseType: !1661, size: 64, offset: 512)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2663, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2663, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2663, file: !548, line: 398, baseType: !1665, size: 128, offset: 640)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2663, file: !548, line: 399, baseType: !1667, size: 160, offset: 768)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2663, file: !548, line: 400, baseType: !1669, size: 160, offset: 928)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2663, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!2686 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2687, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2688, splitDebugInlining: false, nameTableKind: None)
!2687 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2688 = !{!2689, !110, !107, !109}
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 32)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2691, line: 98, size: 256, elements: !2692)
!2691 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2692 = !{!2693, !2698, !2703, !2708, !2713, !2718, !2723, !2728}
!2693 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 99, baseType: !2694, size: 32)
!2694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 99, size: 32, elements: !2695)
!2695 = !{!2696, !2697}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2694, file: !2691, line: 99, baseType: !110, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2694, file: !2691, line: 99, baseType: !110, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 100, baseType: !2699, size: 32, offset: 32)
!2699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 100, size: 32, elements: !2700)
!2700 = !{!2701, !2702}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2699, file: !2691, line: 100, baseType: !110, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2699, file: !2691, line: 100, baseType: !110, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 101, baseType: !2704, size: 32, offset: 64)
!2704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 101, size: 32, elements: !2705)
!2705 = !{!2706, !2707}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2704, file: !2691, line: 101, baseType: !110, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2704, file: !2691, line: 101, baseType: !110, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 102, baseType: !2709, size: 32, offset: 96)
!2709 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 102, size: 32, elements: !2710)
!2710 = !{!2711, !2712}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2709, file: !2691, line: 102, baseType: !110, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2709, file: !2691, line: 102, baseType: !110, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 103, baseType: !2714, size: 32, offset: 128)
!2714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 103, size: 32, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2714, file: !2691, line: 103, baseType: !110, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2714, file: !2691, line: 103, baseType: !110, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 104, baseType: !2719, size: 32, offset: 160)
!2719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 104, size: 32, elements: !2720)
!2720 = !{!2721, !2722}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2719, file: !2691, line: 104, baseType: !110, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2719, file: !2691, line: 104, baseType: !110, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 105, baseType: !2724, size: 32, offset: 192)
!2724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 105, size: 32, elements: !2725)
!2725 = !{!2726, !2727}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2724, file: !2691, line: 105, baseType: !110, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2724, file: !2691, line: 105, baseType: !110, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2690, file: !2691, line: 106, baseType: !110, size: 32, offset: 224)
!2729 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2730, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2573, retainedTypes: !2731, splitDebugInlining: false, nameTableKind: None)
!2730 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2731 = !{!2732, !107, !109, !2757, !2800, !110}
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !2735)
!2735 = !{!2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2734, file: !548, line: 381, baseType: !552, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2734, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2734, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2734, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2734, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2734, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2734, file: !548, line: 387, baseType: !1650, size: 96, offset: 192)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2734, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2734, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2734, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2734, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2734, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2734, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2734, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2734, file: !548, line: 395, baseType: !1661, size: 64, offset: 512)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2734, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2734, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2734, file: !548, line: 398, baseType: !1665, size: 128, offset: 640)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2734, file: !548, line: 399, baseType: !1667, size: 160, offset: 768)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2734, file: !548, line: 400, baseType: !1669, size: 160, offset: 928)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2734, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2691, line: 141, baseType: !2759)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2691, line: 97, size: 256, elements: !2760)
!2760 = !{!2761}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2759, file: !2691, line: 107, baseType: !2762, size: 256)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2691, line: 98, size: 256, elements: !2763)
!2763 = !{!2764, !2769, !2774, !2779, !2784, !2789, !2794, !2799}
!2764 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 99, baseType: !2765, size: 32)
!2765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 99, size: 32, elements: !2766)
!2766 = !{!2767, !2768}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2765, file: !2691, line: 99, baseType: !110, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2765, file: !2691, line: 99, baseType: !110, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 100, baseType: !2770, size: 32, offset: 32)
!2770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 100, size: 32, elements: !2771)
!2771 = !{!2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2770, file: !2691, line: 100, baseType: !110, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2770, file: !2691, line: 100, baseType: !110, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 101, baseType: !2775, size: 32, offset: 64)
!2775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 101, size: 32, elements: !2776)
!2776 = !{!2777, !2778}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2775, file: !2691, line: 101, baseType: !110, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2775, file: !2691, line: 101, baseType: !110, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 102, baseType: !2780, size: 32, offset: 96)
!2780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 102, size: 32, elements: !2781)
!2781 = !{!2782, !2783}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2780, file: !2691, line: 102, baseType: !110, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2780, file: !2691, line: 102, baseType: !110, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 103, baseType: !2785, size: 32, offset: 128)
!2785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 103, size: 32, elements: !2786)
!2786 = !{!2787, !2788}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2785, file: !2691, line: 103, baseType: !110, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2785, file: !2691, line: 103, baseType: !110, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 104, baseType: !2790, size: 32, offset: 160)
!2790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 104, size: 32, elements: !2791)
!2791 = !{!2792, !2793}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2790, file: !2691, line: 104, baseType: !110, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2790, file: !2691, line: 104, baseType: !110, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2691, line: 105, baseType: !2795, size: 32, offset: 192)
!2795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2691, line: 105, size: 32, elements: !2796)
!2796 = !{!2797, !2798}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2795, file: !2691, line: 105, baseType: !110, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2795, file: !2691, line: 105, baseType: !110, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2762, file: !2691, line: 106, baseType: !110, size: 32, offset: 224)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 32)
!2801 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2802, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1598, retainedTypes: !2803, splitDebugInlining: false, nameTableKind: None)
!2802 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2803 = !{!872, !854, !178, !110, !2804, !2821}
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !548, line: 360, baseType: !2806)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 345, size: 28704, elements: !2807)
!2807 = !{!2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2806, file: !548, line: 347, baseType: !1613, size: 256)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2806, file: !548, line: 348, baseType: !1615, size: 768, offset: 256)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2806, file: !548, line: 349, baseType: !1613, size: 256, offset: 1024)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2806, file: !548, line: 350, baseType: !1615, size: 768, offset: 1280)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2806, file: !548, line: 351, baseType: !1613, size: 256, offset: 2048)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2806, file: !548, line: 352, baseType: !1615, size: 768, offset: 2304)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2806, file: !548, line: 353, baseType: !1613, size: 256, offset: 3072)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2806, file: !548, line: 354, baseType: !1615, size: 768, offset: 3328)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2806, file: !548, line: 355, baseType: !1613, size: 256, offset: 4096)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2806, file: !548, line: 356, baseType: !1626, size: 1792, offset: 4352)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2806, file: !548, line: 357, baseType: !1630, size: 1920, offset: 6144)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2806, file: !548, line: 358, baseType: !1635, size: 20608, offset: 8064)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2806, file: !548, line: 359, baseType: !316, size: 32, offset: 28672)
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !2823)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !2824)
!2824 = !{!2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2823, file: !548, line: 381, baseType: !552, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2823, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2823, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2823, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2823, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2823, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2823, file: !548, line: 387, baseType: !1650, size: 96, offset: 192)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2823, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2823, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2823, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2823, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2823, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2823, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2823, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2823, file: !548, line: 395, baseType: !1661, size: 64, offset: 512)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2823, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2823, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2823, file: !548, line: 398, baseType: !1665, size: 128, offset: 640)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2823, file: !548, line: 399, baseType: !1667, size: 160, offset: 768)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2823, file: !548, line: 400, baseType: !1669, size: 160, offset: 928)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2823, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!2846 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2847, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2848, splitDebugInlining: false, nameTableKind: None)
!2847 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2848 = !{!2849, !107, !109}
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !2851)
!2851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !2852)
!2852 = !{!2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2851, file: !548, line: 381, baseType: !552, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2851, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2851, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2851, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2851, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2851, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2851, file: !548, line: 387, baseType: !1650, size: 96, offset: 192)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2851, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2851, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2851, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2851, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2851, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2851, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2851, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2851, file: !548, line: 395, baseType: !1661, size: 64, offset: 512)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2851, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2851, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2851, file: !548, line: 398, baseType: !1665, size: 128, offset: 640)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2851, file: !548, line: 399, baseType: !1667, size: 160, offset: 768)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2851, file: !548, line: 400, baseType: !1669, size: 160, offset: 928)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2851, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!2874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2875, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2876, splitDebugInlining: false, nameTableKind: None)
!2875 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2876 = !{!148, !285, !232, !1048, !2877, !179, !107}
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !179)
!2879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2880, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2881, splitDebugInlining: false, nameTableKind: None)
!2880 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2881 = !{!2882}
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 32)
!2883 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 386, baseType: !2884)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 448, elements: !2885)
!2885 = !{!2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2884, file: !312, line: 372, baseType: !316, size: 32)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2884, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2884, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2884, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2884, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2884, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2884, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2884, file: !312, line: 379, baseType: !316, size: 32, offset: 224)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2884, file: !312, line: 380, baseType: !316, size: 32, offset: 256)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2884, file: !312, line: 381, baseType: !316, size: 32, offset: 288)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2884, file: !312, line: 382, baseType: !316, size: 32, offset: 320)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2884, file: !312, line: 383, baseType: !316, size: 32, offset: 352)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2884, file: !312, line: 384, baseType: !316, size: 32, offset: 384)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2884, file: !312, line: 385, baseType: !316, size: 32, offset: 416)
!2900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2901, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2901 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2902 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2903, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2904, retainedTypes: !2920, splitDebugInlining: false, nameTableKind: None)
!2903 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2904 = !{!2905, !2912, !2916}
!2905 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2906, line: 39, baseType: !32, size: 32, elements: !2907)
!2906 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2907 = !{!2908, !2909, !2910, !2911}
!2908 = !DIEnumerator(name: "HAL_OK", value: 0)
!2909 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2910 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2911 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2912 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !909, line: 183, baseType: !32, size: 32, elements: !2913)
!2913 = !{!2914, !2915}
!2914 = !DIEnumerator(name: "DISABLE", value: 0)
!2915 = !DIEnumerator(name: "ENABLE", value: 1)
!2916 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !909, line: 177, baseType: !32, size: 32, elements: !2917)
!2917 = !{!2918, !2919}
!2918 = !DIEnumerator(name: "RESET", value: 0)
!2919 = !DIEnumerator(name: "SET", value: 1)
!2920 = !{!2921, !107, !110, !178, !2939, !2940, !2946, !192, !2959, !111, !2972}
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 32)
!2922 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 386, baseType: !2923)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 448, elements: !2924)
!2924 = !{!2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2923, file: !312, line: 372, baseType: !316, size: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2923, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2923, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2923, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2923, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2923, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2923, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2923, file: !312, line: 379, baseType: !316, size: 32, offset: 224)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2923, file: !312, line: 380, baseType: !316, size: 32, offset: 256)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2923, file: !312, line: 381, baseType: !316, size: 32, offset: 288)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2923, file: !312, line: 382, baseType: !316, size: 32, offset: 320)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2923, file: !312, line: 383, baseType: !316, size: 32, offset: 352)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2923, file: !312, line: 384, baseType: !316, size: 32, offset: 384)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2923, file: !312, line: 385, baseType: !316, size: 32, offset: 416)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 364, baseType: !2942)
!2942 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 360, size: 64, elements: !2943)
!2943 = !{!2944, !2945}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2942, file: !312, line: 362, baseType: !316, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2942, file: !312, line: 363, baseType: !316, size: 32, offset: 32)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 286, baseType: !2948)
!2948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 275, size: 288, elements: !2949)
!2949 = !{!2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2948, file: !312, line: 277, baseType: !316, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2948, file: !312, line: 278, baseType: !316, size: 32, offset: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2948, file: !312, line: 279, baseType: !316, size: 32, offset: 64)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2948, file: !312, line: 280, baseType: !316, size: 32, offset: 96)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2948, file: !312, line: 281, baseType: !316, size: 32, offset: 128)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2948, file: !312, line: 282, baseType: !316, size: 32, offset: 160)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2948, file: !312, line: 283, baseType: !316, size: 32, offset: 192)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2948, file: !312, line: 284, baseType: !316, size: 32, offset: 224)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2948, file: !312, line: 285, baseType: !316, size: 32, offset: 256)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 314, baseType: !2961)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 303, size: 320, elements: !2962)
!2962 = !{!2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2961, file: !312, line: 305, baseType: !316, size: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2961, file: !312, line: 306, baseType: !316, size: 32, offset: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2961, file: !312, line: 307, baseType: !316, size: 32, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2961, file: !312, line: 308, baseType: !316, size: 32, offset: 96)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2961, file: !312, line: 309, baseType: !316, size: 32, offset: 128)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2961, file: !312, line: 310, baseType: !316, size: 32, offset: 160)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2961, file: !312, line: 311, baseType: !316, size: 32, offset: 192)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2961, file: !312, line: 312, baseType: !316, size: 32, offset: 224)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2961, file: !312, line: 313, baseType: !1185, size: 64, offset: 256)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!2973 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2974, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2975, retainedTypes: !2976, splitDebugInlining: false, nameTableKind: None)
!2974 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!2975 = !{!908}
!2976 = !{!2977, !110, !2985, !2991, !3004}
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2978, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !548, line: 712, baseType: !2979)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 706, size: 128, elements: !2980)
!2980 = !{!2981, !2982, !2983, !2984}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2979, file: !548, line: 708, baseType: !316, size: 32)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2979, file: !548, line: 709, baseType: !316, size: 32, offset: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2979, file: !548, line: 710, baseType: !316, size: 32, offset: 64)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2979, file: !548, line: 711, baseType: !552, size: 32, offset: 96)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 364, baseType: !2987)
!2987 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 360, size: 64, elements: !2988)
!2988 = !{!2989, !2990}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2987, file: !312, line: 362, baseType: !316, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2987, file: !312, line: 363, baseType: !316, size: 32, offset: 32)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 32)
!2992 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 286, baseType: !2993)
!2993 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 275, size: 288, elements: !2994)
!2994 = !{!2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2993, file: !312, line: 277, baseType: !316, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2993, file: !312, line: 278, baseType: !316, size: 32, offset: 32)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2993, file: !312, line: 279, baseType: !316, size: 32, offset: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2993, file: !312, line: 280, baseType: !316, size: 32, offset: 96)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2993, file: !312, line: 281, baseType: !316, size: 32, offset: 128)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2993, file: !312, line: 282, baseType: !316, size: 32, offset: 160)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2993, file: !312, line: 283, baseType: !316, size: 32, offset: 192)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2993, file: !312, line: 284, baseType: !316, size: 32, offset: 224)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2993, file: !312, line: 285, baseType: !316, size: 32, offset: 256)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 386, baseType: !3006)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 448, elements: !3007)
!3007 = !{!3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3006, file: !312, line: 372, baseType: !316, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3006, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3006, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3006, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3006, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3006, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3006, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3006, file: !312, line: 379, baseType: !316, size: 32, offset: 224)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3006, file: !312, line: 380, baseType: !316, size: 32, offset: 256)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3006, file: !312, line: 381, baseType: !316, size: 32, offset: 288)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3006, file: !312, line: 382, baseType: !316, size: 32, offset: 320)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3006, file: !312, line: 383, baseType: !316, size: 32, offset: 352)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3006, file: !312, line: 384, baseType: !316, size: 32, offset: 384)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3006, file: !312, line: 385, baseType: !316, size: 32, offset: 416)
!3022 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3023, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3024, splitDebugInlining: false, nameTableKind: None)
!3023 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!3024 = !{!107, !232}
!3025 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3026, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3027, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3026 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!3027 = !{!3028, !3035, !2574, !30}
!3028 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3029, line: 14, baseType: !32, size: 32, elements: !3030)
!3029 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3030 = !{!3031, !3032, !3033, !3034}
!3031 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3032 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3033 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3034 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3035 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3029, line: 42, baseType: !32, size: 32, elements: !3036)
!3036 = !{!3037, !3038, !3039, !3040, !3041, !3042}
!3037 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3038 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3039 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3040 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3041 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3042 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3043 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3044, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3044 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!3045 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3046, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3047, splitDebugInlining: false, nameTableKind: None)
!3046 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!3047 = !{!22, !107, !109}
!3048 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3049, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3049 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!3050 = !{!"Ubuntu clang version 14.0.6"}
!3051 = !{i32 7, !"Dwarf Version", i32 4}
!3052 = !{i32 2, !"Debug Info Version", i32 3}
!3053 = !{i32 1, !"wchar_size", i32 4}
!3054 = !{i32 1, !"min_enum_size", i32 4}
!3055 = !{i32 1, !"branch-target-enforcement", i32 0}
!3056 = !{i32 1, !"sign-return-address", i32 0}
!3057 = !{i32 1, !"sign-return-address-all", i32 0}
!3058 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3059 = !{i32 7, !"frame-pointer", i32 2}
!3060 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3061, file: !3061, line: 26, type: !3062, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !2045)
!3061 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3062 = !DISubroutineType(types: !3063)
!3063 = !{null}
!3064 = !DILocation(line: 28, column: 1, scope: !3060)
!3065 = !{i64 2152498576, i64 2152498596, i64 2152498659}
!3066 = !DILocation(line: 29, column: 1, scope: !3060)
!3067 = !{i64 2152498991, i64 2152499011, i64 2152499074}
!3068 = !DILocation(line: 30, column: 1, scope: !3060)
!3069 = !{i64 2152499410, i64 2152499430, i64 2152499493}
!3070 = !DILocation(line: 31, column: 1, scope: !3060)
!3071 = !{i64 2152499829, i64 2152499849, i64 2152499912}
!3072 = !DILocation(line: 33, column: 1, scope: !3060)
!3073 = !{i64 2152500121, i64 2152500141, i64 2152500204}
!3074 = !DILocation(line: 35, column: 1, scope: !3060)
!3075 = !{i64 2152500446, i64 2152500466, i64 2152500529}
!3076 = !DILocation(line: 50, column: 1, scope: !3060)
!3077 = !{i64 2152500873, i64 2152500893, i64 2152500956}
!3078 = !DILocation(line: 54, column: 1, scope: !3060)
!3079 = !{i64 2152501312, i64 2152501332, i64 2152501395}
!3080 = !DILocation(line: 61, column: 1, scope: !3060)
!3081 = !{i64 2152501629, i64 2152501649, i64 2152501712}
!3082 = !DILocation(line: 63, column: 1, scope: !3060)
!3083 = !{i64 2152502009, i64 2152502029, i64 2152502092}
!3084 = !DILocation(line: 64, column: 1, scope: !3060)
!3085 = !{i64 2152502531, i64 2152502551, i64 2152502614}
!3086 = !DILocation(line: 65, column: 1, scope: !3060)
!3087 = !{i64 2152503029, i64 2152503049, i64 2152503112}
!3088 = !DILocation(line: 66, column: 1, scope: !3060)
!3089 = !{i64 2152503511, i64 2152503531, i64 2152503594}
!3090 = !DILocation(line: 67, column: 1, scope: !3060)
!3091 = !{i64 2152504018, i64 2152504038, i64 2152504101}
!3092 = !DILocation(line: 68, column: 1, scope: !3060)
!3093 = !{i64 2152504506, i64 2152504526, i64 2152504589}
!3094 = !DILocation(line: 70, column: 1, scope: !3060)
!3095 = !{i64 2152504974, i64 2152504994, i64 2152505057}
!3096 = !DILocation(line: 71, column: 1, scope: !3060)
!3097 = !{i64 2152505416, i64 2152505436, i64 2152505499}
!3098 = !DILocation(line: 72, column: 1, scope: !3060)
!3099 = !{i64 2152505874, i64 2152505894, i64 2152505957}
!3100 = !DILocation(line: 79, column: 1, scope: !3060)
!3101 = !{i64 2152510389, i64 2152510409, i64 2152510472}
!3102 = !DILocation(line: 80, column: 1, scope: !3060)
!3103 = !{i64 2152510900, i64 2152510920, i64 2152510983}
!3104 = !DILocation(line: 82, column: 1, scope: !3060)
!3105 = !{i64 2152511391, i64 2152511411, i64 2152511474}
!3106 = !DILocation(line: 97, column: 1, scope: !3060)
!3107 = !{i64 2152511728, i64 2152511748, i64 2152511811}
!3108 = !DILocation(line: 99, column: 1, scope: !3060)
!3109 = !{i64 2152511946, i64 2152511966, i64 2152512029}
!3110 = !DILocation(line: 102, column: 1, scope: !3060)
!3111 = !{i64 2152512203, i64 2152512223, i64 2152512286}
!3112 = !DILocation(line: 105, column: 1, scope: !3060)
!3113 = !{i64 2152512443, i64 2152512463, i64 2152512526}
!3114 = !DILocation(line: 115, column: 1, scope: !3060)
!3115 = !{i64 2152512782, i64 2152512802, i64 2152512865}
!3116 = !DILocation(line: 118, column: 1, scope: !3060)
!3117 = !{i64 2152513126, i64 2152513146, i64 2152513209}
!3118 = !DILocation(line: 32, column: 1, scope: !3119)
!3119 = !DILexicalBlockFile(scope: !3060, file: !3120, discriminator: 0)
!3120 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3121 = !{i64 2152513482, i64 2152513502, i64 2152513565}
!3122 = !DILocation(line: 33, column: 1, scope: !3119)
!3123 = !{i64 2152513994, i64 2152514014, i64 2152514077}
!3124 = !DILocation(line: 53, column: 1, scope: !3119)
!3125 = !{i64 2152514502, i64 2152514522, i64 2152514585}
!3126 = !DILocation(line: 54, column: 1, scope: !3119)
!3127 = !{i64 2152514920, i64 2152514940, i64 2152515003}
!3128 = !DILocation(line: 55, column: 1, scope: !3119)
!3129 = !{i64 2152515338, i64 2152515358, i64 2152515421}
!3130 = !DILocation(line: 56, column: 1, scope: !3119)
!3131 = !{i64 2152515756, i64 2152515776, i64 2152515839}
!3132 = !DILocation(line: 57, column: 1, scope: !3119)
!3133 = !{i64 2152516174, i64 2152516194, i64 2152516257}
!3134 = !DILocation(line: 58, column: 1, scope: !3119)
!3135 = !{i64 2152516592, i64 2152516612, i64 2152516675}
!3136 = !DILocation(line: 59, column: 1, scope: !3119)
!3137 = !{i64 2152517010, i64 2152517030, i64 2152517093}
!3138 = !DILocation(line: 60, column: 1, scope: !3119)
!3139 = !{i64 2152517434, i64 2152517454, i64 2152517517}
!3140 = !DILocation(line: 61, column: 1, scope: !3119)
!3141 = !{i64 2152517751, i64 2152517771, i64 2152517834}
!3142 = !DILocation(line: 70, column: 1, scope: !3119)
!3143 = !{i64 2152517980, i64 2152518000, i64 2152518063}
!3144 = !DILocation(line: 72, column: 1, scope: !3119)
!3145 = !{i64 2152518312, i64 2152518332, i64 2152518395}
!3146 = !DILocation(line: 73, column: 1, scope: !3119)
!3147 = !{i64 2152518762, i64 2152518782, i64 2152518845}
!3148 = !DILocation(line: 74, column: 1, scope: !3119)
!3149 = !{i64 2152519212, i64 2152519232, i64 2152519295}
!3150 = !DILocation(line: 75, column: 1, scope: !3119)
!3151 = !{i64 2152519662, i64 2152519682, i64 2152519745}
!3152 = !DILocation(line: 76, column: 1, scope: !3119)
!3153 = !{i64 2152524173, i64 2152524193, i64 2152524256}
!3154 = !DILocation(line: 77, column: 1, scope: !3119)
!3155 = !{i64 2152524623, i64 2152524643, i64 2152524706}
!3156 = !DILocation(line: 78, column: 1, scope: !3119)
!3157 = !{i64 2152525073, i64 2152525093, i64 2152525156}
!3158 = !DILocation(line: 79, column: 1, scope: !3119)
!3159 = !{i64 2152525523, i64 2152525543, i64 2152525606}
!3160 = !DILocation(line: 80, column: 1, scope: !3119)
!3161 = !{i64 2152525976, i64 2152525996, i64 2152526059}
!3162 = !DILocation(line: 84, column: 1, scope: !3119)
!3163 = !{i64 2152526308, i64 2152526328, i64 2152526391}
!3164 = !DILocation(line: 91, column: 1, scope: !3119)
!3165 = !{i64 2152526705, i64 2152526725, i64 2152526788}
!3166 = !DILocation(line: 93, column: 1, scope: !3119)
!3167 = !{i64 2152527072, i64 2152527092, i64 2152527155}
!3168 = !DILocation(line: 106, column: 1, scope: !3119)
!3169 = !{i64 2152527342, i64 2152527362, i64 2152527425}
!3170 = !DILocation(line: 11, column: 1, scope: !3171)
!3171 = !DILexicalBlockFile(scope: !3060, file: !3172, discriminator: 0)
!3172 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3173 = distinct !DISubprogram(name: "worker_thread", scope: !116, file: !116, line: 23, type: !3174, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3176)
!3174 = !DISubroutineType(types: !3175)
!3175 = !{null, !107, !107, !107}
!3176 = !{!3177, !3178, !3179, !3180, !3181, !3182}
!3177 = !DILocalVariable(name: "p1", arg: 1, scope: !3173, file: !116, line: 23, type: !107)
!3178 = !DILocalVariable(name: "p2", arg: 2, scope: !3173, file: !116, line: 23, type: !107)
!3179 = !DILocalVariable(name: "p3", arg: 3, scope: !3173, file: !116, line: 23, type: !107)
!3180 = !DILocalVariable(name: "myid", scope: !3173, file: !116, line: 25, type: !1837)
!3181 = !DILocalVariable(name: "workloops", scope: !3173, file: !116, line: 26, type: !1837)
!3182 = !DILocalVariable(name: "i", scope: !3183, file: !116, line: 28, type: !109)
!3183 = distinct !DILexicalBlock(scope: !3173, file: !116, line: 28, column: 2)
!3184 = !DILocation(line: 0, scope: !3173)
!3185 = !DILocation(line: 25, column: 19, scope: !3173)
!3186 = !DILocation(line: 0, scope: !3183)
!3187 = !DILocation(line: 28, column: 2, scope: !3183)
!3188 = !DILocation(line: 36, column: 2, scope: !3173)
!3189 = !DILocation(line: 41, column: 6, scope: !3173)
!3190 = !DILocation(line: 42, column: 2, scope: !3173)
!3191 = !DILocation(line: 44, column: 2, scope: !3173)
!3192 = !DILocation(line: 45, column: 2, scope: !3173)
!3193 = !DILocation(line: 46, column: 1, scope: !3173)
!3194 = !DILocation(line: 29, column: 3, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3196, file: !116, line: 28, column: 38)
!3196 = distinct !DILexicalBlock(scope: !3183, file: !116, line: 28, column: 2)
!3197 = !DILocation(line: 30, column: 11, scope: !3195)
!3198 = !DILocation(line: 30, column: 3, scope: !3195)
!3199 = !DILocation(line: 28, column: 34, scope: !3196)
!3200 = !DILocation(line: 28, column: 20, scope: !3196)
!3201 = distinct !{!3201, !3187, !3202}
!3202 = !DILocation(line: 31, column: 2, scope: !3183)
!3203 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3204, file: !3204, line: 927, type: !3205, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3212)
!3204 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!3205 = !DISubroutineType(types: !3206)
!3206 = !{!109, !3207, !3208}
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!3208 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3209)
!3209 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3210)
!3210 = !{!3211}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3209, file: !104, line: 66, baseType: !103, size: 64)
!3212 = !{!3213, !3214}
!3213 = !DILocalVariable(name: "mutex", arg: 1, scope: !3203, file: !3204, line: 927, type: !3207)
!3214 = !DILocalVariable(name: "timeout", arg: 2, scope: !3203, file: !3204, line: 927, type: !3208)
!3215 = !DILocation(line: 0, scope: !3203)
!3216 = !DILocation(line: 936, column: 2, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !3203, file: !3204, line: 936, column: 2)
!3218 = !{i64 2152224630}
!3219 = !DILocation(line: 937, column: 9, scope: !3203)
!3220 = !DILocation(line: 937, column: 2, scope: !3203)
!3221 = distinct !DISubprogram(name: "k_condvar_signal", scope: !3204, file: !3204, line: 976, type: !3222, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3225)
!3222 = !DISubroutineType(types: !3223)
!3223 = !{!109, !3224}
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3225 = !{!3226}
!3226 = !DILocalVariable(name: "condvar", arg: 1, scope: !3221, file: !3204, line: 976, type: !3224)
!3227 = !DILocation(line: 0, scope: !3221)
!3228 = !DILocation(line: 984, column: 2, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3221, file: !3204, line: 984, column: 2)
!3230 = !{i64 2152224834}
!3231 = !DILocation(line: 985, column: 9, scope: !3221)
!3232 = !DILocation(line: 985, column: 2, scope: !3221)
!3233 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3204, file: !3204, line: 944, type: !3234, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3236)
!3234 = !DISubroutineType(types: !3235)
!3235 = !{!109, !3207}
!3236 = !{!3237}
!3237 = !DILocalVariable(name: "mutex", arg: 1, scope: !3233, file: !3204, line: 944, type: !3207)
!3238 = !DILocation(line: 0, scope: !3233)
!3239 = !DILocation(line: 952, column: 2, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3233, file: !3204, line: 952, column: 2)
!3241 = !{i64 2152224698}
!3242 = !DILocation(line: 953, column: 9, scope: !3233)
!3243 = !DILocation(line: 953, column: 2, scope: !3233)
!3244 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3245, file: !3245, line: 403, type: !3246, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3248)
!3245 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3246 = !DISubroutineType(types: !3247)
!3247 = !{!111, !111}
!3248 = !{!3249}
!3249 = !DILocalVariable(name: "t", arg: 1, scope: !3244, file: !3245, line: 403, type: !111)
!3250 = !DILocation(line: 0, scope: !3244)
!3251 = !DILocalVariable(name: "t", arg: 1, scope: !3252, file: !3245, line: 102, type: !111)
!3252 = distinct !DISubprogram(name: "z_tmcvt", scope: !3245, file: !3245, line: 102, type: !3253, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3255)
!3253 = !DISubroutineType(types: !3254)
!3254 = !{!111, !111, !110, !110, !360, !360, !360, !360}
!3255 = !{!3251, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265}
!3256 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3252, file: !3245, line: 102, type: !110)
!3257 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3252, file: !3245, line: 103, type: !110)
!3258 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3252, file: !3245, line: 103, type: !360)
!3259 = !DILocalVariable(name: "result32", arg: 5, scope: !3252, file: !3245, line: 104, type: !360)
!3260 = !DILocalVariable(name: "round_up", arg: 6, scope: !3252, file: !3245, line: 104, type: !360)
!3261 = !DILocalVariable(name: "round_off", arg: 7, scope: !3252, file: !3245, line: 105, type: !360)
!3262 = !DILocalVariable(name: "mul_ratio", scope: !3252, file: !3245, line: 107, type: !360)
!3263 = !DILocalVariable(name: "div_ratio", scope: !3252, file: !3245, line: 109, type: !360)
!3264 = !DILocalVariable(name: "off", scope: !3252, file: !3245, line: 116, type: !111)
!3265 = !DILocalVariable(name: "rdivisor", scope: !3266, file: !3245, line: 119, type: !110)
!3266 = distinct !DILexicalBlock(scope: !3267, file: !3245, line: 118, column: 18)
!3267 = distinct !DILexicalBlock(scope: !3252, file: !3245, line: 118, column: 6)
!3268 = !DILocation(line: 0, scope: !3252, inlinedAt: !3269)
!3269 = distinct !DILocation(line: 406, column: 9, scope: !3244)
!3270 = !DILocation(line: 145, column: 13, scope: !3271, inlinedAt: !3269)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !3245, line: 144, column: 10)
!3272 = distinct !DILexicalBlock(scope: !3273, file: !3245, line: 142, column: 7)
!3273 = distinct !DILexicalBlock(scope: !3274, file: !3245, line: 141, column: 24)
!3274 = distinct !DILexicalBlock(scope: !3275, file: !3245, line: 141, column: 13)
!3275 = distinct !DILexicalBlock(scope: !3252, file: !3245, line: 134, column: 6)
!3276 = !DILocation(line: 406, column: 2, scope: !3244)
!3277 = distinct !DISubprogram(name: "k_sleep", scope: !3204, file: !3204, line: 91, type: !3278, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3280)
!3278 = !DISubroutineType(types: !3279)
!3279 = !{!854, !3208}
!3280 = !{!3281}
!3281 = !DILocalVariable(name: "timeout", arg: 1, scope: !3277, file: !3204, line: 91, type: !3208)
!3282 = !DILocation(line: 0, scope: !3277)
!3283 = !DILocation(line: 99, column: 2, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3277, file: !3204, line: 99, column: 2)
!3285 = !{i64 2152221262}
!3286 = !DILocation(line: 100, column: 9, scope: !3277)
!3287 = !DILocation(line: 100, column: 2, scope: !3277)
!3288 = distinct !DISubprogram(name: "main", scope: !116, file: !116, line: 48, type: !3062, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3289)
!3289 = !{!3290, !3293}
!3290 = !DILocalVariable(name: "tid", scope: !3288, file: !116, line: 50, type: !3291)
!3291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3292, size: 640, elements: !259)
!3292 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !266)
!3293 = !DILocalVariable(name: "i", scope: !3294, file: !116, line: 54, type: !109)
!3294 = distinct !DILexicalBlock(scope: !3288, file: !116, line: 54, column: 2)
!3295 = !DILocation(line: 52, column: 7, scope: !3288)
!3296 = !DILocation(line: 0, scope: !3294)
!3297 = !DILocation(line: 54, column: 2, scope: !3294)
!3298 = !DILocation(line: 60, column: 10, scope: !3288)
!3299 = !DILocation(line: 60, column: 2, scope: !3288)
!3300 = !DILocation(line: 62, column: 2, scope: !3288)
!3301 = !DILocation(line: 67, column: 9, scope: !3288)
!3302 = !DILocation(line: 67, column: 14, scope: !3288)
!3303 = !DILocation(line: 67, column: 2, scope: !3288)
!3304 = !DILocation(line: 56, column: 21, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3306, file: !116, line: 54, column: 40)
!3306 = distinct !DILexicalBlock(scope: !3294, file: !116, line: 54, column: 2)
!3307 = !DILocation(line: 56, column: 27, scope: !3305)
!3308 = !DILocation(line: 57, column: 21, scope: !3305)
!3309 = !DILocation(line: 56, column: 4, scope: !3305)
!3310 = !DILocation(line: 0, scope: !3288)
!3311 = !DILocation(line: 54, column: 36, scope: !3306)
!3312 = !DILocation(line: 54, column: 20, scope: !3306)
!3313 = distinct !{!3313, !3297, !3314}
!3314 = !DILocation(line: 59, column: 2, scope: !3294)
!3315 = !DILocation(line: 68, column: 3, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3288, file: !116, line: 67, column: 29)
!3317 = !DILocation(line: 75, column: 3, scope: !3316)
!3318 = !DILocation(line: 77, column: 3, scope: !3316)
!3319 = distinct !{!3319, !3303, !3320}
!3320 = !DILocation(line: 80, column: 2, scope: !3288)
!3321 = !DILocation(line: 82, column: 2, scope: !3288)
!3322 = !DILocation(line: 85, column: 2, scope: !3288)
!3323 = !DILocation(line: 86, column: 1, scope: !3288)
!3324 = distinct !DISubprogram(name: "k_thread_create", scope: !3204, file: !3204, line: 24, type: !3325, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3332)
!3325 = !DISubroutineType(types: !3326)
!3326 = !{!3292, !266, !3327, !232, !3330, !107, !107, !107, !109, !110, !3208}
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 32)
!3328 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3329, line: 44, baseType: !144)
!3329 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3330 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3329, line: 46, baseType: !3331)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 32)
!3332 = !{!3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342}
!3333 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3324, file: !3204, line: 24, type: !266)
!3334 = !DILocalVariable(name: "stack", arg: 2, scope: !3324, file: !3204, line: 24, type: !3327)
!3335 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3324, file: !3204, line: 24, type: !232)
!3336 = !DILocalVariable(name: "entry", arg: 4, scope: !3324, file: !3204, line: 24, type: !3330)
!3337 = !DILocalVariable(name: "p1", arg: 5, scope: !3324, file: !3204, line: 24, type: !107)
!3338 = !DILocalVariable(name: "p2", arg: 6, scope: !3324, file: !3204, line: 24, type: !107)
!3339 = !DILocalVariable(name: "p3", arg: 7, scope: !3324, file: !3204, line: 24, type: !107)
!3340 = !DILocalVariable(name: "prio", arg: 8, scope: !3324, file: !3204, line: 24, type: !109)
!3341 = !DILocalVariable(name: "options", arg: 9, scope: !3324, file: !3204, line: 24, type: !110)
!3342 = !DILocalVariable(name: "delay", arg: 10, scope: !3324, file: !3204, line: 24, type: !3208)
!3343 = !DILocation(line: 0, scope: !3324)
!3344 = !DILocation(line: 49, column: 2, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3324, file: !3204, line: 49, column: 2)
!3346 = !{i64 2152221058}
!3347 = !DILocation(line: 50, column: 9, scope: !3324)
!3348 = !DILocation(line: 50, column: 2, scope: !3324)
!3349 = distinct !DISubprogram(name: "k_condvar_wait", scope: !3204, file: !3204, line: 1008, type: !3350, scopeLine: 1009, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3352)
!3350 = !DISubroutineType(types: !3351)
!3351 = !{!109, !3224, !3207, !3208}
!3352 = !{!3353, !3354, !3355}
!3353 = !DILocalVariable(name: "condvar", arg: 1, scope: !3349, file: !3204, line: 1008, type: !3224)
!3354 = !DILocalVariable(name: "mutex", arg: 2, scope: !3349, file: !3204, line: 1008, type: !3207)
!3355 = !DILocalVariable(name: "timeout", arg: 3, scope: !3349, file: !3204, line: 1008, type: !3208)
!3356 = !DILocation(line: 0, scope: !3349)
!3357 = !DILocation(line: 1018, column: 2, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3349, file: !3204, line: 1018, column: 2)
!3359 = !{i64 2152224970}
!3360 = !DILocation(line: 1019, column: 9, scope: !3349)
!3361 = !DILocation(line: 1019, column: 2, scope: !3349)
!3362 = distinct !DISubprogram(name: "cbvprintf_package", scope: !288, file: !288, line: 233, type: !3363, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3372)
!3363 = !DISubroutineType(types: !3364)
!3364 = !{!109, !107, !232, !110, !279, !3365}
!3365 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3366, line: 99, baseType: !3367)
!3366 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3367 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3366, line: 40, baseType: !3368)
!3368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !288, baseType: !3369)
!3369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3370)
!3370 = !{!3371}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3369, file: !288, line: 18, baseType: !107, size: 32)
!3372 = !{!3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3408, !3417, !3420, !3421, !3424, !3427, !3430, !3433, !3439}
!3373 = !DILocalVariable(name: "packaged", arg: 1, scope: !3362, file: !288, line: 233, type: !107)
!3374 = !DILocalVariable(name: "len", arg: 2, scope: !3362, file: !288, line: 233, type: !232)
!3375 = !DILocalVariable(name: "flags", arg: 3, scope: !3362, file: !288, line: 233, type: !110)
!3376 = !DILocalVariable(name: "fmt", arg: 4, scope: !3362, file: !288, line: 234, type: !279)
!3377 = !DILocalVariable(name: "ap", arg: 5, scope: !3362, file: !288, line: 234, type: !3365)
!3378 = !DILocalVariable(name: "buf0", scope: !3362, file: !288, line: 247, type: !286)
!3379 = !DILocalVariable(name: "buf", scope: !3362, file: !288, line: 248, type: !286)
!3380 = !DILocalVariable(name: "size", scope: !3362, file: !288, line: 249, type: !32)
!3381 = !DILocalVariable(name: "align", scope: !3362, file: !288, line: 250, type: !32)
!3382 = !DILocalVariable(name: "str_ptr_pos", scope: !3362, file: !288, line: 251, type: !3383)
!3383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 128, elements: !840)
!3384 = !DILocalVariable(name: "str_ptr_arg", scope: !3362, file: !288, line: 252, type: !3383)
!3385 = !DILocalVariable(name: "s_idx", scope: !3362, file: !288, line: 253, type: !32)
!3386 = !DILocalVariable(name: "s_rw_cnt", scope: !3362, file: !288, line: 254, type: !32)
!3387 = !DILocalVariable(name: "s_ro_cnt", scope: !3362, file: !288, line: 255, type: !32)
!3388 = !DILocalVariable(name: "arg_idx", scope: !3362, file: !288, line: 256, type: !109)
!3389 = !DILocalVariable(name: "i", scope: !3362, file: !288, line: 257, type: !32)
!3390 = !DILocalVariable(name: "s", scope: !3362, file: !288, line: 258, type: !279)
!3391 = !DILocalVariable(name: "parsing", scope: !3362, file: !288, line: 259, type: !360)
!3392 = !DILocalVariable(name: "rws_pos_en", scope: !3362, file: !288, line: 263, type: !360)
!3393 = !DILocalVariable(name: "fros_cnt", scope: !3362, file: !288, line: 268, type: !109)
!3394 = !DILocalVariable(name: "is_str_arg", scope: !3362, file: !288, line: 269, type: !360)
!3395 = !DILocalVariable(name: "pkg_hdr", scope: !3362, file: !288, line: 270, type: !3396)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 32)
!3397 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3398, line: 78, size: 32, elements: !3399)
!3398 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3399 = !{!3400, !3407}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3397, file: !3398, line: 80, baseType: !3401, size: 32)
!3401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3398, line: 45, size: 32, elements: !3402)
!3402 = !{!3403, !3404, !3405, !3406}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3401, file: !3398, line: 47, baseType: !178, size: 8)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3401, file: !3398, line: 50, baseType: !178, size: 8, offset: 8)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3401, file: !3398, line: 53, baseType: !178, size: 8, offset: 16)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3401, file: !3398, line: 56, baseType: !178, size: 8, offset: 24)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3397, file: !3398, line: 82, baseType: !107, size: 32)
!3408 = !DILocalVariable(name: "v", scope: !3409, file: !288, line: 567, type: !3413)
!3409 = distinct !DILexicalBlock(scope: !3410, file: !288, line: 562, column: 14)
!3410 = distinct !DILexicalBlock(scope: !3411, file: !288, line: 481, column: 18)
!3411 = distinct !DILexicalBlock(scope: !3412, file: !288, line: 466, column: 3)
!3412 = distinct !DILexicalBlock(scope: !3362, file: !288, line: 343, column: 15)
!3413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3362, file: !288, line: 567, size: 64, elements: !3414)
!3414 = !{!3415, !3416}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3413, file: !288, line: 567, baseType: !277, size: 64)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3413, file: !288, line: 567, baseType: !275, size: 64)
!3417 = !DILocalVariable(name: "is_ro", scope: !3418, file: !288, line: 620, type: !360)
!3418 = distinct !DILexicalBlock(scope: !3419, file: !288, line: 613, column: 19)
!3419 = distinct !DILexicalBlock(scope: !3412, file: !288, line: 613, column: 7)
!3420 = !DILocalVariable(name: "do_ro", scope: !3418, file: !288, line: 621, type: !360)
!3421 = !DILocalVariable(name: "s_ptr_idx", scope: !3422, file: !288, line: 626, type: !110)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !288, line: 625, column: 11)
!3423 = distinct !DILexicalBlock(scope: !3418, file: !288, line: 623, column: 8)
!3424 = !DILocalVariable(name: "v", scope: !3425, file: !288, line: 684, type: !109)
!3425 = distinct !DILexicalBlock(scope: !3426, file: !288, line: 683, column: 35)
!3426 = distinct !DILexicalBlock(scope: !3419, file: !288, line: 683, column: 14)
!3427 = !DILocalVariable(name: "v", scope: !3428, file: !288, line: 691, type: !102)
!3428 = distinct !DILexicalBlock(scope: !3429, file: !288, line: 690, column: 36)
!3429 = distinct !DILexicalBlock(scope: !3426, file: !288, line: 690, column: 14)
!3430 = !DILocalVariable(name: "v", scope: !3431, file: !288, line: 698, type: !106)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !288, line: 697, column: 41)
!3432 = distinct !DILexicalBlock(scope: !3429, file: !288, line: 697, column: 14)
!3433 = !DILocalVariable(name: "pos", scope: !3434, file: !288, line: 762, type: !178)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !288, line: 757, column: 31)
!3435 = distinct !DILexicalBlock(scope: !3436, file: !288, line: 757, column: 3)
!3436 = distinct !DILexicalBlock(scope: !3437, file: !288, line: 757, column: 3)
!3437 = distinct !DILexicalBlock(scope: !3438, file: !288, line: 756, column: 16)
!3438 = distinct !DILexicalBlock(scope: !3362, file: !288, line: 756, column: 6)
!3439 = !DILabel(scope: !3418, name: "process_string", file: !288, line: 615)
!3440 = !DILocation(line: 0, scope: !3362)
!3441 = !DILocation(line: 251, column: 2, scope: !3362)
!3442 = !DILocation(line: 251, column: 10, scope: !3362)
!3443 = !DILocation(line: 252, column: 2, scope: !3362)
!3444 = !DILocation(line: 252, column: 10, scope: !3362)
!3445 = !DILocation(line: 263, column: 29, scope: !3362)
!3446 = !DILocation(line: 263, column: 21, scope: !3362)
!3447 = !DILocation(line: 268, column: 21, scope: !3362)
!3448 = !DILocation(line: 268, column: 19, scope: !3362)
!3449 = !DILocation(line: 273, column: 6, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3362, file: !288, line: 273, column: 6)
!3451 = !DILocation(line: 273, column: 26, scope: !3450)
!3452 = !DILocation(line: 273, column: 6, scope: !3362)
!3453 = !DILocation(line: 297, column: 6, scope: !3362)
!3454 = !DILocation(line: 305, column: 11, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3362, file: !288, line: 305, column: 6)
!3456 = !DILocation(line: 305, column: 6, scope: !3362)
!3457 = !DILocation(line: 327, column: 19, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3362, file: !288, line: 327, column: 6)
!3459 = !DILocation(line: 327, column: 22, scope: !3458)
!3460 = !DILocation(line: 327, column: 33, scope: !3458)
!3461 = !DILocation(line: 327, column: 50, scope: !3458)
!3462 = !DILocation(line: 327, column: 6, scope: !3362)
!3463 = !DILocation(line: 338, column: 9, scope: !3362)
!3464 = !DILocation(line: 341, column: 2, scope: !3362)
!3465 = !DILocation(line: 472, column: 8, scope: !3411)
!3466 = !DILocation(line: 473, column: 14, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !288, line: 473, column: 9)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !288, line: 472, column: 18)
!3469 = distinct !DILexicalBlock(scope: !3411, file: !288, line: 472, column: 8)
!3470 = !DILocation(line: 473, column: 9, scope: !3468)
!3471 = !DILocation(line: 479, column: 5, scope: !3468)
!3472 = !DILocation(line: 468, column: 9, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3411, file: !288, line: 468, column: 8)
!3474 = !DILocation(line: 468, column: 8, scope: !3473)
!3475 = !DILocation(line: 468, column: 15, scope: !3473)
!3476 = !DILocation(line: 468, column: 8, scope: !3411)
!3477 = distinct !{!3477, !3478, !3479}
!3478 = !DILocation(line: 343, column: 2, scope: !3362)
!3479 = !DILocation(line: 712, column: 2, scope: !3362)
!3480 = !DILocation(line: 481, column: 4, scope: !3411)
!3481 = !DILocation(line: 484, column: 12, scope: !3410)
!3482 = !DILocation(line: 485, column: 5, scope: !3410)
!3483 = !DILocation(line: 505, column: 5, scope: !3410)
!3484 = !DILocation(line: 518, column: 5, scope: !3410)
!3485 = !DILocation(line: 523, column: 5, scope: !3410)
!3486 = !DILocation(line: 532, column: 9, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3410, file: !288, line: 532, column: 9)
!3488 = !DILocation(line: 532, column: 17, scope: !3487)
!3489 = !DILocation(line: 532, column: 9, scope: !3410)
!3490 = !DILocation(line: 533, column: 10, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !288, line: 533, column: 10)
!3492 = distinct !DILexicalBlock(scope: !3487, file: !288, line: 532, column: 25)
!3493 = !DILocation(line: 533, column: 18, scope: !3491)
!3494 = !DILocation(line: 0, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3409, file: !288, line: 569, column: 9)
!3496 = !DILocation(line: 0, scope: !3409)
!3497 = !DILocation(line: 579, column: 20, scope: !3409)
!3498 = !DILocation(line: 579, column: 11, scope: !3409)
!3499 = !DILocation(line: 580, column: 9, scope: !3409)
!3500 = !DILocation(line: 582, column: 21, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3502, file: !288, line: 582, column: 10)
!3502 = distinct !DILexicalBlock(scope: !3503, file: !288, line: 580, column: 23)
!3503 = distinct !DILexicalBlock(scope: !3409, file: !288, line: 580, column: 9)
!3504 = !DILocation(line: 582, column: 28, scope: !3501)
!3505 = !DILocation(line: 582, column: 10, scope: !3502)
!3506 = !DILocation(line: 0, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !288, line: 587, column: 17)
!3508 = distinct !DILexicalBlock(scope: !3502, file: !288, line: 585, column: 10)
!3509 = !DILocation(line: 593, column: 9, scope: !3409)
!3510 = !DILocation(line: 600, column: 5, scope: !3410)
!3511 = !DILocation(line: 605, column: 18, scope: !3412)
!3512 = !DILocation(line: 605, column: 9, scope: !3412)
!3513 = !DILocation(line: 608, column: 20, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3412, file: !288, line: 608, column: 7)
!3515 = !DILocation(line: 608, column: 23, scope: !3514)
!3516 = !DILocation(line: 608, column: 34, scope: !3514)
!3517 = !DILocation(line: 608, column: 41, scope: !3514)
!3518 = !DILocation(line: 608, column: 7, scope: !3412)
!3519 = !DILocation(line: 613, column: 7, scope: !3412)
!3520 = !DILocation(line: 614, column: 8, scope: !3418)
!3521 = !DILocation(line: 614, column: 4, scope: !3418)
!3522 = !DILocation(line: 256, column: 6, scope: !3362)
!3523 = !DILocation(line: 254, column: 15, scope: !3362)
!3524 = !DILocation(line: 320, column: 7, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3455, file: !288, line: 305, column: 20)
!3526 = !DILocation(line: 615, column: 1, scope: !3418)
!3527 = !DILocation(line: 616, column: 8, scope: !3418)
!3528 = !DILocation(line: 617, column: 5, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !288, line: 616, column: 22)
!3530 = distinct !DILexicalBlock(scope: !3418, file: !288, line: 616, column: 8)
!3531 = !DILocation(line: 617, column: 25, scope: !3529)
!3532 = !DILocation(line: 618, column: 4, scope: !3529)
!3533 = !DILocation(line: 620, column: 26, scope: !3418)
!3534 = !DILocation(line: 620, column: 29, scope: !3418)
!3535 = !DILocation(line: 620, column: 17, scope: !3418)
!3536 = !DILocation(line: 620, column: 43, scope: !3418)
!3537 = !DILocation(line: 0, scope: !3418)
!3538 = !DILocation(line: 623, column: 14, scope: !3423)
!3539 = !DILocation(line: 626, column: 26, scope: !3422)
!3540 = !DILocation(line: 626, column: 37, scope: !3422)
!3541 = !DILocation(line: 0, scope: !3422)
!3542 = !DILocation(line: 634, column: 15, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3422, file: !288, line: 634, column: 9)
!3544 = !DILocation(line: 635, column: 6, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3546, file: !288, line: 635, column: 6)
!3546 = distinct !DILexicalBlock(scope: !3547, file: !288, line: 635, column: 6)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !288, line: 635, column: 6)
!3548 = distinct !DILexicalBlock(scope: !3543, file: !288, line: 634, column: 44)
!3549 = !DILocation(line: 639, column: 15, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3422, file: !288, line: 639, column: 9)
!3551 = !DILocation(line: 639, column: 9, scope: !3422)
!3552 = !DILocation(line: 640, column: 6, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3554, file: !288, line: 640, column: 6)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !288, line: 640, column: 6)
!3555 = distinct !DILexicalBlock(scope: !3556, file: !288, line: 640, column: 6)
!3556 = distinct !DILexicalBlock(scope: !3550, file: !288, line: 639, column: 43)
!3557 = !DILocation(line: 644, column: 9, scope: !3422)
!3558 = !DILocation(line: 649, column: 27, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !288, line: 644, column: 23)
!3560 = distinct !DILexicalBlock(scope: !3422, file: !288, line: 644, column: 9)
!3561 = !DILocation(line: 649, column: 6, scope: !3559)
!3562 = !DILocation(line: 649, column: 25, scope: !3559)
!3563 = !DILocation(line: 650, column: 27, scope: !3559)
!3564 = !DILocation(line: 650, column: 6, scope: !3559)
!3565 = !DILocation(line: 650, column: 25, scope: !3559)
!3566 = !DILocation(line: 651, column: 10, scope: !3559)
!3567 = !DILocation(line: 653, column: 26, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3569, file: !288, line: 651, column: 17)
!3569 = distinct !DILexicalBlock(scope: !3559, file: !288, line: 651, column: 10)
!3570 = !DILocation(line: 654, column: 15, scope: !3568)
!3571 = !DILocation(line: 655, column: 6, scope: !3568)
!3572 = !DILocation(line: 656, column: 15, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3569, file: !288, line: 655, column: 13)
!3574 = !DILocation(line: 658, column: 16, scope: !3560)
!3575 = !DILocation(line: 663, column: 10, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3577, file: !288, line: 658, column: 23)
!3577 = distinct !DILexicalBlock(scope: !3560, file: !288, line: 658, column: 16)
!3578 = !DILocation(line: 664, column: 5, scope: !3576)
!3579 = !DILocation(line: 664, column: 16, scope: !3577)
!3580 = !DILocation(line: 669, column: 10, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3582, file: !288, line: 664, column: 28)
!3582 = distinct !DILexicalBlock(scope: !3577, file: !288, line: 664, column: 16)
!3583 = !DILocation(line: 670, column: 5, scope: !3581)
!3584 = !DILocation(line: 675, column: 13, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3582, file: !288, line: 670, column: 12)
!3586 = !DILocation(line: 675, column: 27, scope: !3585)
!3587 = !DILocation(line: 675, column: 10, scope: !3585)
!3588 = !DILocation(line: 678, column: 10, scope: !3422)
!3589 = !DILocation(line: 680, column: 8, scope: !3418)
!3590 = !DILocation(line: 683, column: 14, scope: !3419)
!3591 = !DILocation(line: 684, column: 12, scope: !3425)
!3592 = !DILocation(line: 0, scope: !3425)
!3593 = !DILocation(line: 686, column: 8, scope: !3425)
!3594 = !DILocation(line: 687, column: 5, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !288, line: 686, column: 22)
!3596 = distinct !DILexicalBlock(scope: !3425, file: !288, line: 686, column: 8)
!3597 = !DILocation(line: 687, column: 17, scope: !3595)
!3598 = !DILocation(line: 688, column: 4, scope: !3595)
!3599 = !DILocation(line: 698, column: 18, scope: !3431)
!3600 = !DILocation(line: 0, scope: !3431)
!3601 = !DILocation(line: 700, column: 8, scope: !3431)
!3602 = !DILocation(line: 704, column: 6, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3604, file: !288, line: 703, column: 12)
!3604 = distinct !DILexicalBlock(scope: !3605, file: !288, line: 701, column: 9)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !288, line: 700, column: 22)
!3606 = distinct !DILexicalBlock(scope: !3431, file: !288, line: 700, column: 8)
!3607 = !DILocation(line: 704, column: 24, scope: !3603)
!3608 = !DILocation(line: 706, column: 4, scope: !3605)
!3609 = !DILocation(line: 709, column: 4, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3611, file: !288, line: 709, column: 4)
!3611 = distinct !DILexicalBlock(scope: !3612, file: !288, line: 709, column: 4)
!3612 = distinct !DILexicalBlock(scope: !3613, file: !288, line: 709, column: 4)
!3613 = distinct !DILexicalBlock(scope: !3432, file: !288, line: 708, column: 10)
!3614 = !DILocation(line: 0, scope: !3426)
!3615 = !DILocation(line: 0, scope: !3412)
!3616 = !DILocation(line: 720, column: 6, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3362, file: !288, line: 720, column: 6)
!3618 = !DILocation(line: 720, column: 17, scope: !3617)
!3619 = !DILocation(line: 720, column: 31, scope: !3617)
!3620 = !DILocation(line: 720, column: 6, scope: !3362)
!3621 = !DILocation(line: 721, column: 3, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !288, line: 721, column: 3)
!3623 = distinct !DILexicalBlock(scope: !3624, file: !288, line: 721, column: 3)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !288, line: 721, column: 3)
!3625 = distinct !DILexicalBlock(scope: !3617, file: !288, line: 720, column: 38)
!3626 = !DILocation(line: 729, column: 6, scope: !3362)
!3627 = !DILocation(line: 730, column: 21, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !288, line: 729, column: 20)
!3629 = distinct !DILexicalBlock(scope: !3362, file: !288, line: 729, column: 6)
!3630 = !DILocation(line: 730, column: 27, scope: !3628)
!3631 = !DILocation(line: 730, column: 3, scope: !3628)
!3632 = !DILocation(line: 737, column: 22, scope: !3362)
!3633 = !DILocation(line: 737, column: 20, scope: !3362)
!3634 = !DILocation(line: 0, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3362, file: !288, line: 739, column: 6)
!3636 = !DILocation(line: 745, column: 17, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3635, file: !288, line: 743, column: 9)
!3638 = !DILocation(line: 745, column: 25, scope: !3637)
!3639 = !DILocation(line: 746, column: 17, scope: !3637)
!3640 = !DILocation(line: 746, column: 28, scope: !3637)
!3641 = !DILocation(line: 749, column: 29, scope: !3362)
!3642 = !DILocation(line: 749, column: 16, scope: !3362)
!3643 = !DILocation(line: 749, column: 27, scope: !3362)
!3644 = !DILocation(line: 756, column: 6, scope: !3438)
!3645 = !DILocation(line: 756, column: 6, scope: !3362)
!3646 = !DILocation(line: 757, column: 3, scope: !3436)
!3647 = !DILocation(line: 758, column: 10, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3434, file: !288, line: 758, column: 8)
!3649 = !DILocation(line: 758, column: 25, scope: !3648)
!3650 = !DILocation(line: 758, column: 8, scope: !3434)
!3651 = !DILocation(line: 0, scope: !3434)
!3652 = !DILocation(line: 765, column: 8, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3434, file: !288, line: 765, column: 8)
!3654 = !DILocation(line: 765, column: 19, scope: !3653)
!3655 = !DILocation(line: 765, column: 23, scope: !3653)
!3656 = !DILocation(line: 765, column: 8, scope: !3434)
!3657 = !DILocation(line: 762, column: 33, scope: !3434)
!3658 = !DILocation(line: 769, column: 8, scope: !3434)
!3659 = !DILocation(line: 769, column: 11, scope: !3434)
!3660 = !DILocation(line: 757, column: 27, scope: !3435)
!3661 = !DILocation(line: 757, column: 17, scope: !3435)
!3662 = distinct !{!3662, !3646, !3663}
!3663 = !DILocation(line: 770, column: 3, scope: !3436)
!3664 = !DILocation(line: 774, column: 16, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !288, line: 774, column: 2)
!3666 = distinct !DILexicalBlock(scope: !3362, file: !288, line: 774, column: 2)
!3667 = !DILocation(line: 774, column: 2, scope: !3666)
!3668 = !DILocation(line: 776, column: 16, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !288, line: 776, column: 7)
!3670 = distinct !DILexicalBlock(scope: !3665, file: !288, line: 774, column: 30)
!3671 = !DILocation(line: 776, column: 19, scope: !3669)
!3672 = !DILocation(line: 776, column: 34, scope: !3669)
!3673 = !DILocation(line: 776, column: 7, scope: !3670)
!3674 = !DILocation(line: 780, column: 7, scope: !3670)
!3675 = !DILocation(line: 782, column: 13, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3677, file: !288, line: 780, column: 19)
!3677 = distinct !DILexicalBlock(scope: !3670, file: !288, line: 780, column: 7)
!3678 = !DILocation(line: 782, column: 8, scope: !3676)
!3679 = !DILocation(line: 782, column: 11, scope: !3676)
!3680 = !DILocation(line: 783, column: 3, scope: !3676)
!3681 = !DILocation(line: 785, column: 26, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3677, file: !288, line: 783, column: 10)
!3683 = !DILocation(line: 785, column: 41, scope: !3682)
!3684 = !DILocation(line: 785, column: 24, scope: !3682)
!3685 = !DILocation(line: 785, column: 8, scope: !3682)
!3686 = !DILocation(line: 787, column: 52, scope: !3682)
!3687 = !DILocation(line: 789, column: 11, scope: !3682)
!3688 = !DILocation(line: 789, column: 21, scope: !3682)
!3689 = !DILocation(line: 0, scope: !3677)
!3690 = !DILocation(line: 793, column: 7, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3670, file: !288, line: 793, column: 7)
!3692 = !DILocation(line: 793, column: 18, scope: !3691)
!3693 = !DILocation(line: 793, column: 22, scope: !3691)
!3694 = !DILocation(line: 793, column: 29, scope: !3691)
!3695 = !DILocation(line: 793, column: 7, scope: !3670)
!3696 = !DILocation(line: 797, column: 12, scope: !3670)
!3697 = !DILocation(line: 797, column: 7, scope: !3670)
!3698 = !DILocation(line: 797, column: 10, scope: !3670)
!3699 = !DILocation(line: 799, column: 3, scope: !3670)
!3700 = !DILocation(line: 800, column: 7, scope: !3670)
!3701 = !DILocation(line: 801, column: 2, scope: !3670)
!3702 = !DILocation(line: 338, column: 4, scope: !3362)
!3703 = !DILocation(line: 774, column: 26, scope: !3665)
!3704 = distinct !{!3704, !3667, !3705}
!3705 = !DILocation(line: 801, column: 2, scope: !3666)
!3706 = !DILocation(line: 808, column: 9, scope: !3362)
!3707 = !DILocation(line: 808, column: 2, scope: !3362)
!3708 = !DILocation(line: 813, column: 1, scope: !3362)
!3709 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !288, file: !288, line: 33, type: !3710, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3712)
!3710 = !DISubroutineType(types: !3711)
!3711 = !{!360, !279}
!3712 = !{!3713}
!3713 = !DILocalVariable(name: "addr", arg: 1, scope: !3709, file: !288, line: 33, type: !279)
!3714 = !DILocation(line: 0, scope: !3709)
!3715 = !DILocation(line: 41, column: 9, scope: !3709)
!3716 = !DILocation(line: 41, column: 2, scope: !3709)
!3717 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3718, file: !3718, line: 24, type: !3719, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3721)
!3718 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3719 = !DISubroutineType(types: !3720)
!3720 = !{!360, !13}
!3721 = !{!3722}
!3722 = !DILocalVariable(name: "addr", arg: 1, scope: !3717, file: !3718, line: 24, type: !13)
!3723 = !DILocation(line: 0, scope: !3717)
!3724 = !DILocation(line: 49, column: 30, scope: !3717)
!3725 = !DILocation(line: 49, column: 57, scope: !3717)
!3726 = !DILocation(line: 49, column: 2, scope: !3717)
!3727 = distinct !DISubprogram(name: "cbprintf_package", scope: !288, file: !288, line: 815, type: !3728, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3730)
!3728 = !DISubroutineType(types: !3729)
!3729 = !{!109, !107, !232, !110, !279, null}
!3730 = !{!3731, !3732, !3733, !3734, !3735, !3736}
!3731 = !DILocalVariable(name: "packaged", arg: 1, scope: !3727, file: !288, line: 815, type: !107)
!3732 = !DILocalVariable(name: "len", arg: 2, scope: !3727, file: !288, line: 815, type: !232)
!3733 = !DILocalVariable(name: "flags", arg: 3, scope: !3727, file: !288, line: 815, type: !110)
!3734 = !DILocalVariable(name: "format", arg: 4, scope: !3727, file: !288, line: 816, type: !279)
!3735 = !DILocalVariable(name: "ap", scope: !3727, file: !288, line: 818, type: !3365)
!3736 = !DILocalVariable(name: "ret", scope: !3727, file: !288, line: 819, type: !109)
!3737 = !DILocation(line: 0, scope: !3727)
!3738 = !DILocation(line: 818, column: 2, scope: !3727)
!3739 = !DILocation(line: 818, column: 10, scope: !3727)
!3740 = !DILocation(line: 821, column: 2, scope: !3727)
!3741 = !DILocation(line: 822, column: 8, scope: !3727)
!3742 = !DILocation(line: 823, column: 2, scope: !3727)
!3743 = !DILocation(line: 825, column: 1, scope: !3727)
!3744 = !DILocation(line: 824, column: 2, scope: !3727)
!3745 = distinct !DISubprogram(name: "cbpprintf_external", scope: !288, file: !288, line: 827, type: !3746, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3756)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{!109, !3748, !3752, !107, !107}
!3748 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3398, line: 297, baseType: !3749)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 32)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{!109, null}
!3752 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3398, line: 328, baseType: !3753)
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 32)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{!109, !3748, !107, !279, !3365}
!3756 = !{!3757, !3758, !3759, !3760, !3761, !3762, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775}
!3757 = !DILocalVariable(name: "out", arg: 1, scope: !3745, file: !288, line: 827, type: !3748)
!3758 = !DILocalVariable(name: "formatter", arg: 2, scope: !3745, file: !288, line: 828, type: !3752)
!3759 = !DILocalVariable(name: "ctx", arg: 3, scope: !3745, file: !288, line: 829, type: !107)
!3760 = !DILocalVariable(name: "packaged", arg: 4, scope: !3745, file: !288, line: 829, type: !107)
!3761 = !DILocalVariable(name: "buf", scope: !3745, file: !288, line: 831, type: !286)
!3762 = !DILocalVariable(name: "hdr", scope: !3745, file: !288, line: 832, type: !3763)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 32)
!3764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3398, line: 96, size: 64, elements: !3765)
!3765 = !{!3766, !3767}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3764, file: !3398, line: 98, baseType: !3397, size: 32)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3764, file: !3398, line: 101, baseType: !285, size: 32, offset: 32)
!3768 = !DILocalVariable(name: "s", scope: !3745, file: !288, line: 833, type: !285)
!3769 = !DILocalVariable(name: "ps", scope: !3745, file: !288, line: 833, type: !284)
!3770 = !DILocalVariable(name: "i", scope: !3745, file: !288, line: 834, type: !32)
!3771 = !DILocalVariable(name: "args_size", scope: !3745, file: !288, line: 834, type: !32)
!3772 = !DILocalVariable(name: "s_nbr", scope: !3745, file: !288, line: 834, type: !32)
!3773 = !DILocalVariable(name: "ros_nbr", scope: !3745, file: !288, line: 834, type: !32)
!3774 = !DILocalVariable(name: "rws_nbr", scope: !3745, file: !288, line: 834, type: !32)
!3775 = !DILocalVariable(name: "s_idx", scope: !3745, file: !288, line: 834, type: !32)
!3776 = !DILocation(line: 0, scope: !3745)
!3777 = !DILocation(line: 836, column: 10, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3745, file: !288, line: 836, column: 6)
!3779 = !DILocation(line: 836, column: 6, scope: !3745)
!3780 = !DILocation(line: 842, column: 28, scope: !3745)
!3781 = !DILocation(line: 842, column: 14, scope: !3745)
!3782 = !DILocation(line: 852, column: 16, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !288, line: 852, column: 2)
!3784 = distinct !DILexicalBlock(scope: !3745, file: !288, line: 852, column: 2)
!3785 = !DILocation(line: 852, column: 2, scope: !3784)
!3786 = !DILocation(line: 841, column: 28, scope: !3745)
!3787 = !DILocation(line: 841, column: 14, scope: !3745)
!3788 = !DILocation(line: 841, column: 32, scope: !3745)
!3789 = !DILocation(line: 847, column: 19, scope: !3745)
!3790 = !DILocation(line: 843, column: 28, scope: !3745)
!3791 = !DILocation(line: 843, column: 14, scope: !3745)
!3792 = !DILocation(line: 847, column: 31, scope: !3745)
!3793 = !DILocation(line: 844, column: 28, scope: !3745)
!3794 = !DILocation(line: 844, column: 14, scope: !3745)
!3795 = !DILocation(line: 847, column: 45, scope: !3745)
!3796 = !DILocation(line: 847, column: 41, scope: !3745)
!3797 = !DILocation(line: 854, column: 24, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3783, file: !288, line: 852, column: 30)
!3799 = !DILocation(line: 854, column: 11, scope: !3798)
!3800 = !DILocation(line: 855, column: 30, scope: !3798)
!3801 = !DILocation(line: 855, column: 22, scope: !3798)
!3802 = !DILocation(line: 855, column: 8, scope: !3798)
!3803 = !DILocation(line: 857, column: 7, scope: !3798)
!3804 = !DILocation(line: 859, column: 8, scope: !3798)
!3805 = !DILocation(line: 859, column: 18, scope: !3798)
!3806 = !DILocation(line: 859, column: 5, scope: !3798)
!3807 = !DILocation(line: 852, column: 26, scope: !3783)
!3808 = distinct !{!3808, !3785, !3809}
!3809 = !DILocation(line: 860, column: 2, scope: !3784)
!3810 = !DILocation(line: 863, column: 6, scope: !3745)
!3811 = !DILocation(line: 866, column: 56, scope: !3745)
!3812 = !DILocation(line: 866, column: 9, scope: !3745)
!3813 = !DILocation(line: 866, column: 2, scope: !3745)
!3814 = !DILocation(line: 867, column: 1, scope: !3745)
!3815 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !288, file: !288, line: 179, type: !3816, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3818)
!3816 = !DISubroutineType(types: !3817)
!3817 = !{!109, !3748, !3752, !107, !279, !107}
!3818 = !{!3819, !3820, !3821, !3822, !3823, !3824}
!3819 = !DILocalVariable(name: "out", arg: 1, scope: !3815, file: !288, line: 179, type: !3748)
!3820 = !DILocalVariable(name: "formatter", arg: 2, scope: !3815, file: !288, line: 180, type: !3752)
!3821 = !DILocalVariable(name: "ctx", arg: 3, scope: !3815, file: !288, line: 181, type: !107)
!3822 = !DILocalVariable(name: "fmt", arg: 4, scope: !3815, file: !288, line: 182, type: !279)
!3823 = !DILocalVariable(name: "buf", arg: 5, scope: !3815, file: !288, line: 182, type: !107)
!3824 = !DILocalVariable(name: "u", scope: !3815, file: !288, line: 187, type: !3825)
!3825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3815, file: !288, line: 184, size: 32, elements: !3826)
!3826 = !{!3827, !3828}
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3825, file: !288, line: 185, baseType: !3365, size: 32)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3825, file: !288, line: 186, baseType: !107, size: 32)
!3829 = !DILocation(line: 0, scope: !3815)
!3830 = !DILocation(line: 191, column: 9, scope: !3815)
!3831 = !DILocation(line: 191, column: 2, scope: !3815)
!3832 = distinct !DISubprogram(name: "is_ptr", scope: !288, file: !288, line: 881, type: !3833, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3835)
!3833 = !DISubroutineType(types: !3834)
!3834 = !{!360, !279, !109}
!3835 = !{!3836, !3837, !3838, !3839, !3840}
!3836 = !DILocalVariable(name: "fmt", arg: 1, scope: !3832, file: !288, line: 881, type: !279)
!3837 = !DILocalVariable(name: "n", arg: 2, scope: !3832, file: !288, line: 881, type: !109)
!3838 = !DILocalVariable(name: "c", scope: !3832, file: !288, line: 883, type: !148)
!3839 = !DILocalVariable(name: "mod", scope: !3832, file: !288, line: 884, type: !360)
!3840 = !DILocalVariable(name: "cnt", scope: !3832, file: !288, line: 885, type: !109)
!3841 = !DILocation(line: 0, scope: !3832)
!3842 = !DILocation(line: 887, column: 14, scope: !3832)
!3843 = !DILocation(line: 887, column: 22, scope: !3832)
!3844 = !DILocation(line: 887, column: 2, scope: !3832)
!3845 = !DILocation(line: 887, column: 18, scope: !3832)
!3846 = !DILocation(line: 888, column: 7, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3832, file: !288, line: 887, column: 31)
!3848 = !DILocation(line: 889, column: 12, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !288, line: 889, column: 8)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !288, line: 888, column: 12)
!3851 = distinct !DILexicalBlock(scope: !3847, file: !288, line: 888, column: 7)
!3852 = !DILocation(line: 889, column: 8, scope: !3850)
!3853 = !DILocation(line: 890, column: 11, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !288, line: 890, column: 9)
!3855 = distinct !DILexicalBlock(scope: !3849, file: !288, line: 889, column: 18)
!3856 = !DILocation(line: 890, column: 9, scope: !3855)
!3857 = !DILocation(line: 892, column: 16, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3854, file: !288, line: 892, column: 16)
!3859 = !DILocation(line: 892, column: 16, scope: !3854)
!3860 = !DILocation(line: 895, column: 15, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3849, file: !288, line: 895, column: 15)
!3862 = !DILocation(line: 895, column: 15, scope: !3849)
!3863 = !DILocation(line: 900, column: 9, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3847, file: !288, line: 900, column: 7)
!3865 = !DILocation(line: 900, column: 7, scope: !3847)
!3866 = distinct !{!3866, !3844, !3867}
!3867 = !DILocation(line: 903, column: 2, scope: !3832)
!3868 = !DILocation(line: 906, column: 1, scope: !3832)
!3869 = distinct !DISubprogram(name: "is_fmt_spec", scope: !288, file: !288, line: 873, type: !3870, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3872)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{!360, !148}
!3872 = !{!3873}
!3873 = !DILocalVariable(name: "c", arg: 1, scope: !3869, file: !288, line: 873, type: !148)
!3874 = !DILocation(line: 0, scope: !3869)
!3875 = !DILocation(line: 875, column: 19, scope: !3869)
!3876 = !DILocation(line: 875, column: 2, scope: !3869)
!3877 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !288, file: !288, line: 908, type: !3878, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3884)
!3878 = !DISubroutineType(types: !3879)
!3879 = !{!109, !107, !232, !3880, !107, !110, !2800, !232}
!3880 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3398, line: 308, baseType: !3881)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 32)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{!109, !13, !232, !107}
!3884 = !{!3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3902, !3903, !3904, !3905, !3906, !3912, !3915, !3916, !3917, !3919, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !3935, !3938, !3939, !3940, !3941, !3942, !3943, !3945, !3948, !3949, !3950}
!3885 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3877, file: !288, line: 908, type: !107)
!3886 = !DILocalVariable(name: "in_len", arg: 2, scope: !3877, file: !288, line: 909, type: !232)
!3887 = !DILocalVariable(name: "cb", arg: 3, scope: !3877, file: !288, line: 910, type: !3880)
!3888 = !DILocalVariable(name: "ctx", arg: 4, scope: !3877, file: !288, line: 911, type: !107)
!3889 = !DILocalVariable(name: "flags", arg: 5, scope: !3877, file: !288, line: 912, type: !110)
!3890 = !DILocalVariable(name: "strl", arg: 6, scope: !3877, file: !288, line: 913, type: !2800)
!3891 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3877, file: !288, line: 914, type: !232)
!3892 = !DILocalVariable(name: "buf", scope: !3877, file: !288, line: 918, type: !286)
!3893 = !DILocalVariable(name: "buf32", scope: !3877, file: !288, line: 919, type: !945)
!3894 = !DILocalVariable(name: "args_size", scope: !3877, file: !288, line: 920, type: !32)
!3895 = !DILocalVariable(name: "ros_nbr", scope: !3877, file: !288, line: 920, type: !32)
!3896 = !DILocalVariable(name: "rws_nbr", scope: !3877, file: !288, line: 920, type: !32)
!3897 = !DILocalVariable(name: "fmt_present", scope: !3877, file: !288, line: 921, type: !360)
!3898 = !DILocalVariable(name: "rw_cpy", scope: !3877, file: !288, line: 922, type: !360)
!3899 = !DILocalVariable(name: "ro_cpy", scope: !3877, file: !288, line: 923, type: !360)
!3900 = !DILocalVariable(name: "in_desc", scope: !3877, file: !288, line: 924, type: !3901)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 32)
!3902 = !DILocalVariable(name: "out_len", scope: !3877, file: !288, line: 960, type: !109)
!3903 = !DILocalVariable(name: "fmt", scope: !3877, file: !288, line: 965, type: !279)
!3904 = !DILocalVariable(name: "str_pos", scope: !3877, file: !288, line: 966, type: !286)
!3905 = !DILocalVariable(name: "strl_cnt", scope: !3877, file: !288, line: 967, type: !232)
!3906 = !DILocalVariable(name: "i", scope: !3907, file: !288, line: 973, type: !109)
!3907 = distinct !DILexicalBlock(scope: !3908, file: !288, line: 973, column: 4)
!3908 = distinct !DILexicalBlock(scope: !3909, file: !288, line: 972, column: 15)
!3909 = distinct !DILexicalBlock(scope: !3910, file: !288, line: 972, column: 7)
!3910 = distinct !DILexicalBlock(scope: !3911, file: !288, line: 970, column: 18)
!3911 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 970, column: 6)
!3912 = !DILocalVariable(name: "str", scope: !3913, file: !288, line: 974, type: !279)
!3913 = distinct !DILexicalBlock(scope: !3914, file: !288, line: 973, column: 38)
!3914 = distinct !DILexicalBlock(scope: !3907, file: !288, line: 973, column: 4)
!3915 = !DILocalVariable(name: "len", scope: !3913, file: !288, line: 975, type: !109)
!3916 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3910, file: !288, line: 990, type: !360)
!3917 = !DILocalVariable(name: "i", scope: !3918, file: !288, line: 995, type: !109)
!3918 = distinct !DILexicalBlock(scope: !3910, file: !288, line: 995, column: 3)
!3919 = !DILocalVariable(name: "arg_idx", scope: !3920, file: !288, line: 996, type: !178)
!3920 = distinct !DILexicalBlock(scope: !3921, file: !288, line: 995, column: 37)
!3921 = distinct !DILexicalBlock(scope: !3918, file: !288, line: 995, column: 3)
!3922 = !DILocalVariable(name: "arg_pos", scope: !3920, file: !288, line: 997, type: !178)
!3923 = !DILocalVariable(name: "str", scope: !3920, file: !288, line: 998, type: !279)
!3924 = !DILocalVariable(name: "is_ro", scope: !3920, file: !288, line: 999, type: !360)
!3925 = !DILocalVariable(name: "len", scope: !3920, file: !288, line: 1000, type: !109)
!3926 = !DILocalVariable(name: "out_desc", scope: !3877, file: !288, line: 1038, type: !3401)
!3927 = !DILocalVariable(name: "cpy_str_pos", scope: !3877, file: !288, line: 1040, type: !3383)
!3928 = !DILocalVariable(name: "keep_str_pos", scope: !3877, file: !288, line: 1042, type: !3383)
!3929 = !DILocalVariable(name: "scpy_cnt", scope: !3877, file: !288, line: 1043, type: !178)
!3930 = !DILocalVariable(name: "keep_cnt", scope: !3877, file: !288, line: 1044, type: !178)
!3931 = !DILocalVariable(name: "dst", scope: !3877, file: !288, line: 1045, type: !286)
!3932 = !DILocalVariable(name: "rv", scope: !3877, file: !288, line: 1046, type: !109)
!3933 = !DILocalVariable(name: "i", scope: !3934, file: !288, line: 1074, type: !109)
!3934 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 1074, column: 2)
!3935 = !DILocalVariable(name: "arg_idx", scope: !3936, file: !288, line: 1075, type: !178)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !288, line: 1074, column: 36)
!3937 = distinct !DILexicalBlock(scope: !3934, file: !288, line: 1074, column: 2)
!3938 = !DILocalVariable(name: "arg_pos", scope: !3936, file: !288, line: 1076, type: !178)
!3939 = !DILocalVariable(name: "str", scope: !3936, file: !288, line: 1077, type: !279)
!3940 = !DILocalVariable(name: "is_ro", scope: !3936, file: !288, line: 1078, type: !360)
!3941 = !DILocalVariable(name: "in_desc_backup", scope: !3877, file: !288, line: 1114, type: !3401)
!3942 = !DILocalVariable(name: "strs_len", scope: !3877, file: !288, line: 1134, type: !232)
!3943 = !DILocalVariable(name: "i", scope: !3944, file: !288, line: 1143, type: !109)
!3944 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 1143, column: 2)
!3945 = !DILocalVariable(name: "loc", scope: !3946, file: !288, line: 1144, type: !178)
!3946 = distinct !DILexicalBlock(scope: !3947, file: !288, line: 1143, column: 37)
!3947 = distinct !DILexicalBlock(scope: !3944, file: !288, line: 1143, column: 2)
!3948 = !DILocalVariable(name: "str", scope: !3946, file: !288, line: 1145, type: !279)
!3949 = !DILocalVariable(name: "str_len", scope: !3946, file: !288, line: 1146, type: !192)
!3950 = !DILabel(scope: !3951, name: "calculate_string_length", file: !288, line: 1021)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !288, line: 1020, column: 56)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !288, line: 1020, column: 15)
!3953 = distinct !DILexicalBlock(scope: !3920, file: !288, line: 1014, column: 8)
!3954 = !DILocation(line: 0, scope: !3877)
!3955 = !DILocation(line: 916, column: 2, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !288, line: 916, column: 2)
!3957 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 916, column: 2)
!3958 = !DILocation(line: 916, column: 2, scope: !3957)
!3959 = !DILocation(line: 916, column: 2, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3956, file: !288, line: 916, column: 2)
!3961 = !DILocation(line: 919, column: 20, scope: !3877)
!3962 = !DILocation(line: 921, column: 27, scope: !3877)
!3963 = !DILocation(line: 921, column: 21, scope: !3877)
!3964 = !DILocation(line: 926, column: 18, scope: !3877)
!3965 = !DILocation(line: 926, column: 11, scope: !3877)
!3966 = !DILocation(line: 926, column: 34, scope: !3877)
!3967 = !DILocation(line: 931, column: 21, scope: !3877)
!3968 = !DILocation(line: 931, column: 12, scope: !3877)
!3969 = !DILocation(line: 932, column: 11, scope: !3877)
!3970 = !DILocation(line: 932, column: 19, scope: !3877)
!3971 = !DILocation(line: 938, column: 21, scope: !3877)
!3972 = !DILocation(line: 938, column: 12, scope: !3877)
!3973 = !DILocation(line: 939, column: 19, scope: !3877)
!3974 = !DILocation(line: 939, column: 23, scope: !3877)
!3975 = !DILocation(line: 946, column: 14, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 946, column: 6)
!3977 = !DILocation(line: 947, column: 7, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !288, line: 947, column: 7)
!3979 = distinct !DILexicalBlock(scope: !3976, file: !288, line: 946, column: 26)
!3980 = !DILocation(line: 947, column: 7, scope: !3979)
!3981 = !DILocation(line: 948, column: 4, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3978, file: !288, line: 947, column: 11)
!3983 = !DILocation(line: 949, column: 3, scope: !3982)
!3984 = !DILocation(line: 958, column: 23, scope: !3877)
!3985 = !DILocation(line: 958, column: 14, scope: !3877)
!3986 = !DILocation(line: 958, column: 27, scope: !3877)
!3987 = !DILocation(line: 965, column: 41, scope: !3877)
!3988 = !DILocation(line: 965, column: 20, scope: !3877)
!3989 = !DILocation(line: 966, column: 22, scope: !3877)
!3990 = !DILocation(line: 970, column: 9, scope: !3911)
!3991 = !DILocation(line: 970, column: 6, scope: !3877)
!3992 = !DILocation(line: 972, column: 7, scope: !3910)
!3993 = !DILocation(line: 0, scope: !3907)
!3994 = !DILocation(line: 973, column: 4, scope: !3907)
!3995 = !DILocation(line: 974, column: 46, scope: !3913)
!3996 = !DILocation(line: 974, column: 40, scope: !3913)
!3997 = !DILocation(line: 974, column: 23, scope: !3913)
!3998 = !DILocation(line: 0, scope: !3913)
!3999 = !DILocation(line: 975, column: 15, scope: !3913)
!4000 = !DILocation(line: 978, column: 14, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3913, file: !288, line: 978, column: 9)
!4002 = !DILocation(line: 979, column: 25, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !4001, file: !288, line: 978, column: 38)
!4004 = !DILocation(line: 979, column: 19, scope: !4003)
!4005 = !DILocation(line: 979, column: 6, scope: !4003)
!4006 = !DILocation(line: 979, column: 23, scope: !4003)
!4007 = !DILocation(line: 980, column: 5, scope: !4003)
!4008 = !DILocation(line: 981, column: 13, scope: !3913)
!4009 = !DILocation(line: 982, column: 12, scope: !3913)
!4010 = !DILocation(line: 973, column: 34, scope: !3914)
!4011 = !DILocation(line: 973, column: 22, scope: !3914)
!4012 = distinct !{!4012, !3994, !4013}
!4013 = !DILocation(line: 983, column: 4, scope: !3907)
!4014 = !DILocation(line: 985, column: 16, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !288, line: 985, column: 8)
!4016 = distinct !DILexicalBlock(scope: !3909, file: !288, line: 984, column: 10)
!4017 = !DILocation(line: 967, column: 9, scope: !3877)
!4018 = !DILocation(line: 971, column: 11, scope: !3910)
!4019 = !DILocation(line: 0, scope: !3910)
!4020 = !DILocation(line: 0, scope: !3918)
!4021 = !DILocation(line: 995, column: 21, scope: !3921)
!4022 = !DILocation(line: 995, column: 3, scope: !3918)
!4023 = !DILocation(line: 990, column: 34, scope: !3910)
!4024 = !DILocation(line: 990, column: 26, scope: !3910)
!4025 = !DILocation(line: 996, column: 30, scope: !3920)
!4026 = !DILocation(line: 0, scope: !3920)
!4027 = !DILocation(line: 997, column: 30, scope: !3920)
!4028 = !DILocation(line: 997, column: 22, scope: !3920)
!4029 = !DILocation(line: 998, column: 39, scope: !3920)
!4030 = !DILocation(line: 998, column: 22, scope: !3920)
!4031 = !DILocation(line: 999, column: 17, scope: !3920)
!4032 = !DILocation(line: 1002, column: 20, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !3920, file: !288, line: 1002, column: 8)
!4034 = !DILocation(line: 996, column: 22, scope: !3920)
!4035 = !DILocation(line: 1002, column: 35, scope: !4033)
!4036 = !DILocation(line: 1002, column: 23, scope: !4033)
!4037 = !DILocation(line: 1002, column: 8, scope: !3920)
!4038 = !DILocation(line: 1003, column: 5, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !288, line: 1003, column: 5)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !288, line: 1003, column: 5)
!4041 = distinct !DILexicalBlock(scope: !4042, file: !288, line: 1003, column: 5)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !288, line: 1003, column: 5)
!4043 = distinct !DILexicalBlock(scope: !4033, file: !288, line: 1002, column: 45)
!4044 = !DILocation(line: 1010, column: 13, scope: !4043)
!4045 = !DILocation(line: 1011, column: 5, scope: !4043)
!4046 = !DILocation(line: 1014, column: 8, scope: !3920)
!4047 = !DILocation(line: 1015, column: 9, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !3953, file: !288, line: 1014, column: 15)
!4049 = !DILocation(line: 1018, column: 14, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !288, line: 1017, column: 12)
!4051 = distinct !DILexicalBlock(scope: !4048, file: !288, line: 1015, column: 9)
!4052 = !DILocation(line: 1020, column: 4, scope: !4048)
!4053 = !DILocation(line: 1020, column: 15, scope: !3953)
!4054 = !DILocation(line: 1021, column: 1, scope: !3951)
!4055 = !DILocation(line: 1022, column: 11, scope: !3951)
!4056 = !DILocation(line: 1025, column: 14, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !3951, file: !288, line: 1025, column: 9)
!4058 = !DILocation(line: 1026, column: 25, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4057, file: !288, line: 1025, column: 38)
!4060 = !DILocation(line: 1026, column: 19, scope: !4059)
!4061 = !DILocation(line: 1026, column: 6, scope: !4059)
!4062 = !DILocation(line: 1026, column: 23, scope: !4059)
!4063 = !DILocation(line: 1027, column: 5, scope: !4059)
!4064 = !DILocation(line: 1031, column: 21, scope: !3951)
!4065 = !DILocation(line: 1031, column: 13, scope: !3951)
!4066 = !DILocation(line: 1032, column: 4, scope: !3951)
!4067 = !DILocation(line: 995, column: 33, scope: !3921)
!4068 = distinct !{!4068, !4022, !4069}
!4069 = !DILocation(line: 1033, column: 3, scope: !3918)
!4070 = !DILocation(line: 1040, column: 10, scope: !3877)
!4071 = !DILocation(line: 1042, column: 10, scope: !3877)
!4072 = !DILocation(line: 1052, column: 6, scope: !3877)
!4073 = !DILocation(line: 1055, column: 9, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !288, line: 1052, column: 14)
!4075 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 1052, column: 6)
!4076 = !DILocation(line: 1056, column: 2, scope: !4074)
!4077 = !DILocation(line: 1056, column: 21, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4075, file: !288, line: 1056, column: 13)
!4079 = !DILocation(line: 1066, column: 3, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !288, line: 1065, column: 11)
!4081 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 1065, column: 6)
!4082 = !DILocation(line: 1067, column: 2, scope: !4080)
!4083 = !DILocation(line: 1068, column: 10, scope: !3877)
!4084 = !DILocation(line: 0, scope: !3934)
!4085 = !DILocation(line: 1074, column: 20, scope: !3937)
!4086 = !DILocation(line: 1074, column: 2, scope: !3934)
!4087 = !DILocation(line: 1110, column: 24, scope: !3877)
!4088 = !DILocation(line: 1053, column: 12, scope: !4074)
!4089 = !DILocation(line: 1054, column: 12, scope: !4074)
!4090 = !DILocation(line: 1108, column: 30, scope: !3877)
!4091 = !DILocation(line: 1108, column: 40, scope: !3877)
!4092 = !DILocation(line: 1108, column: 38, scope: !3877)
!4093 = !DILocation(line: 1109, column: 31, scope: !3877)
!4094 = !DILocation(line: 1109, column: 24, scope: !3877)
!4095 = !DILocation(line: 1110, column: 31, scope: !3877)
!4096 = !DILocation(line: 1114, column: 31, scope: !3877)
!4097 = !DILocation(line: 1114, column: 48, scope: !3877)
!4098 = !DILocation(line: 1115, column: 13, scope: !3877)
!4099 = !DILocation(line: 1118, column: 7, scope: !3877)
!4100 = !DILocation(line: 1119, column: 9, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 1119, column: 6)
!4102 = !DILocation(line: 1119, column: 6, scope: !3877)
!4103 = !DILocation(line: 1075, column: 29, scope: !3936)
!4104 = !DILocation(line: 1075, column: 21, scope: !3936)
!4105 = !DILocation(line: 0, scope: !3936)
!4106 = !DILocation(line: 1076, column: 29, scope: !3936)
!4107 = !DILocation(line: 1076, column: 21, scope: !3936)
!4108 = !DILocation(line: 1077, column: 38, scope: !3936)
!4109 = !DILocation(line: 1077, column: 21, scope: !3936)
!4110 = !DILocation(line: 1078, column: 16, scope: !3936)
!4111 = !DILocation(line: 1080, column: 19, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !3936, file: !288, line: 1080, column: 7)
!4113 = !DILocation(line: 1080, column: 34, scope: !4112)
!4114 = !DILocation(line: 1080, column: 22, scope: !4112)
!4115 = !DILocation(line: 1080, column: 7, scope: !3936)
!4116 = !DILocation(line: 1084, column: 7, scope: !3936)
!4117 = !DILocation(line: 1085, column: 8, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !288, line: 1084, column: 14)
!4119 = distinct !DILexicalBlock(scope: !3936, file: !288, line: 1084, column: 7)
!4120 = !DILocation(line: 1086, column: 5, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !288, line: 1086, column: 5)
!4122 = distinct !DILexicalBlock(scope: !4123, file: !288, line: 1086, column: 5)
!4123 = distinct !DILexicalBlock(scope: !4124, file: !288, line: 1085, column: 49)
!4124 = distinct !DILexicalBlock(scope: !4118, file: !288, line: 1085, column: 8)
!4125 = !DILocation(line: 1086, column: 5, scope: !4122)
!4126 = !DILocation(line: 1086, column: 5, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4121, file: !288, line: 1086, column: 5)
!4128 = !DILocation(line: 1087, column: 25, scope: !4123)
!4129 = !DILocation(line: 1087, column: 5, scope: !4123)
!4130 = !DILocation(line: 1088, column: 4, scope: !4123)
!4131 = !DILocation(line: 1088, column: 15, scope: !4124)
!4132 = !DILocation(line: 1089, column: 5, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4134, file: !288, line: 1089, column: 5)
!4134 = distinct !DILexicalBlock(scope: !4135, file: !288, line: 1089, column: 5)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !288, line: 1088, column: 61)
!4136 = distinct !DILexicalBlock(scope: !4124, file: !288, line: 1088, column: 15)
!4137 = !DILocation(line: 1089, column: 5, scope: !4134)
!4138 = !DILocation(line: 1089, column: 5, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4133, file: !288, line: 1089, column: 5)
!4140 = !DILocation(line: 1090, column: 26, scope: !4135)
!4141 = !DILocation(line: 1090, column: 5, scope: !4135)
!4142 = !DILocation(line: 1091, column: 4, scope: !4135)
!4143 = !DILocation(line: 1095, column: 8, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4119, file: !288, line: 1094, column: 10)
!4145 = !DILocation(line: 1096, column: 5, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !288, line: 1096, column: 5)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !288, line: 1096, column: 5)
!4148 = distinct !DILexicalBlock(scope: !4149, file: !288, line: 1095, column: 49)
!4149 = distinct !DILexicalBlock(scope: !4144, file: !288, line: 1095, column: 8)
!4150 = !DILocation(line: 1096, column: 5, scope: !4147)
!4151 = !DILocation(line: 1096, column: 5, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4146, file: !288, line: 1096, column: 5)
!4153 = !DILocation(line: 1097, column: 25, scope: !4148)
!4154 = !DILocation(line: 1097, column: 5, scope: !4148)
!4155 = !DILocation(line: 1098, column: 4, scope: !4148)
!4156 = !DILocation(line: 1099, column: 5, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4158, file: !288, line: 1099, column: 5)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !288, line: 1099, column: 5)
!4159 = distinct !DILexicalBlock(scope: !4149, file: !288, line: 1098, column: 11)
!4160 = !DILocation(line: 1099, column: 5, scope: !4158)
!4161 = !DILocation(line: 1099, column: 5, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4157, file: !288, line: 1099, column: 5)
!4163 = !DILocation(line: 1100, column: 26, scope: !4159)
!4164 = !DILocation(line: 1100, column: 5, scope: !4159)
!4165 = !DILocation(line: 1100, column: 30, scope: !4159)
!4166 = !DILocation(line: 1101, column: 26, scope: !4159)
!4167 = !DILocation(line: 1101, column: 5, scope: !4159)
!4168 = !DILocation(line: 0, scope: !4119)
!4169 = !DILocation(line: 1074, column: 32, scope: !3937)
!4170 = distinct !{!4170, !4086, !4171}
!4171 = !DILocation(line: 1104, column: 2, scope: !3934)
!4172 = !DILocation(line: 1124, column: 13, scope: !3877)
!4173 = !DILocation(line: 1127, column: 10, scope: !3877)
!4174 = !DILocation(line: 1127, column: 7, scope: !3877)
!4175 = !DILocation(line: 1128, column: 9, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 1128, column: 6)
!4177 = !DILocation(line: 1128, column: 6, scope: !3877)
!4178 = !DILocation(line: 1134, column: 27, scope: !3877)
!4179 = !DILocation(line: 1136, column: 7, scope: !3877)
!4180 = !DILocation(line: 1137, column: 9, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 1137, column: 6)
!4182 = !DILocation(line: 1137, column: 6, scope: !3877)
!4183 = !DILocation(line: 1131, column: 10, scope: !3877)
!4184 = !DILocation(line: 1140, column: 10, scope: !3877)
!4185 = !DILocation(line: 0, scope: !3944)
!4186 = !DILocation(line: 1143, column: 20, scope: !3947)
!4187 = !DILocation(line: 1143, column: 2, scope: !3944)
!4188 = !DILocation(line: 1144, column: 3, scope: !3946)
!4189 = !DILocation(line: 1144, column: 17, scope: !3946)
!4190 = !DILocation(line: 0, scope: !3946)
!4191 = !DILocation(line: 1144, column: 11, scope: !3946)
!4192 = !DILocation(line: 1145, column: 38, scope: !3946)
!4193 = !DILocation(line: 1145, column: 21, scope: !3946)
!4194 = !DILocation(line: 1146, column: 22, scope: !3946)
!4195 = !DILocation(line: 1146, column: 29, scope: !3946)
!4196 = !DILocation(line: 1148, column: 8, scope: !3946)
!4197 = !DILocation(line: 1149, column: 10, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !3946, file: !288, line: 1149, column: 7)
!4199 = !DILocation(line: 1149, column: 7, scope: !3946)
!4200 = !DILocation(line: 1154, column: 8, scope: !3946)
!4201 = !DILocation(line: 1155, column: 10, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !3946, file: !288, line: 1155, column: 7)
!4203 = !DILocation(line: 1155, column: 7, scope: !3946)
!4204 = !DILocation(line: 1159, column: 2, scope: !3947)
!4205 = !DILocation(line: 1152, column: 11, scope: !3946)
!4206 = !DILocation(line: 1158, column: 11, scope: !3946)
!4207 = !DILocation(line: 1143, column: 33, scope: !3947)
!4208 = distinct !{!4208, !4187, !4209}
!4209 = !DILocation(line: 1159, column: 2, scope: !3944)
!4210 = !DILocation(line: 1162, column: 8, scope: !3877)
!4211 = !DILocation(line: 1164, column: 2, scope: !3877)
!4212 = !DILocation(line: 1165, column: 1, scope: !3877)
!4213 = distinct !DISubprogram(name: "get_package_len", scope: !288, file: !288, line: 196, type: !4214, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4216)
!4214 = !DISubroutineType(types: !4215)
!4215 = !{!232, !107}
!4216 = !{!4217, !4218, !4219, !4220, !4221, !4222, !4223}
!4217 = !DILocalVariable(name: "packaged", arg: 1, scope: !4213, file: !288, line: 196, type: !107)
!4218 = !DILocalVariable(name: "buf", scope: !4213, file: !288, line: 200, type: !286)
!4219 = !DILocalVariable(name: "start", scope: !4213, file: !288, line: 201, type: !286)
!4220 = !DILocalVariable(name: "args_size", scope: !4213, file: !288, line: 202, type: !32)
!4221 = !DILocalVariable(name: "s_nbr", scope: !4213, file: !288, line: 202, type: !32)
!4222 = !DILocalVariable(name: "ros_nbr", scope: !4213, file: !288, line: 202, type: !32)
!4223 = !DILocalVariable(name: "i", scope: !4224, file: !288, line: 215, type: !109)
!4224 = distinct !DILexicalBlock(scope: !4213, file: !288, line: 215, column: 2)
!4225 = !DILocation(line: 0, scope: !4213)
!4226 = !DILocation(line: 198, column: 2, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !288, line: 198, column: 2)
!4228 = distinct !DILexicalBlock(scope: !4213, file: !288, line: 198, column: 2)
!4229 = !DILocation(line: 198, column: 2, scope: !4228)
!4230 = !DILocation(line: 198, column: 2, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4227, file: !288, line: 198, column: 2)
!4232 = !DILocation(line: 204, column: 14, scope: !4213)
!4233 = !DILocation(line: 204, column: 21, scope: !4213)
!4234 = !DILocation(line: 205, column: 14, scope: !4213)
!4235 = !DILocation(line: 206, column: 14, scope: !4213)
!4236 = !DILocation(line: 209, column: 6, scope: !4213)
!4237 = !DILocation(line: 212, column: 6, scope: !4213)
!4238 = !DILocation(line: 0, scope: !4224)
!4239 = !DILocation(line: 215, column: 20, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4224, file: !288, line: 215, column: 2)
!4241 = !DILocation(line: 215, column: 2, scope: !4224)
!4242 = !DILocation(line: 220, column: 33, scope: !4213)
!4243 = !DILocation(line: 220, column: 2, scope: !4213)
!4244 = !DILocation(line: 216, column: 6, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4240, file: !288, line: 215, column: 34)
!4246 = !DILocation(line: 217, column: 10, scope: !4245)
!4247 = !DILocation(line: 217, column: 36, scope: !4245)
!4248 = !DILocation(line: 217, column: 7, scope: !4245)
!4249 = !DILocation(line: 215, column: 30, scope: !4240)
!4250 = distinct !{!4250, !4241, !4251}
!4251 = !DILocation(line: 218, column: 2, scope: !4224)
!4252 = distinct !DISubprogram(name: "append_string", scope: !288, file: !288, line: 223, type: !4253, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4255)
!4253 = !DISubroutineType(types: !4254)
!4254 = !{!109, !3880, !107, !279, !192}
!4255 = !{!4256, !4257, !4258, !4259}
!4256 = !DILocalVariable(name: "cb", arg: 1, scope: !4252, file: !288, line: 223, type: !3880)
!4257 = !DILocalVariable(name: "ctx", arg: 2, scope: !4252, file: !288, line: 223, type: !107)
!4258 = !DILocalVariable(name: "str", arg: 3, scope: !4252, file: !288, line: 223, type: !279)
!4259 = !DILocalVariable(name: "strl", arg: 4, scope: !4252, file: !288, line: 223, type: !192)
!4260 = !DILocation(line: 0, scope: !4252)
!4261 = !DILocation(line: 225, column: 9, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4252, file: !288, line: 225, column: 6)
!4263 = !DILocation(line: 225, column: 6, scope: !4252)
!4264 = !DILocation(line: 226, column: 14, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4262, file: !288, line: 225, column: 18)
!4266 = !DILocation(line: 226, column: 12, scope: !4265)
!4267 = !DILocation(line: 226, column: 3, scope: !4265)
!4268 = !DILocation(line: 229, column: 14, scope: !4252)
!4269 = !DILocation(line: 229, column: 9, scope: !4252)
!4270 = !DILocation(line: 229, column: 27, scope: !4252)
!4271 = !DILocation(line: 229, column: 39, scope: !4252)
!4272 = !DILocation(line: 230, column: 17, scope: !4252)
!4273 = !DILocation(line: 230, column: 9, scope: !4252)
!4274 = !DILocation(line: 230, column: 2, scope: !4252)
!4275 = !DILocation(line: 231, column: 1, scope: !4252)
!4276 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !301, file: !301, line: 45, type: !303, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4277)
!4277 = !{!4278}
!4278 = !DILocalVariable(name: "c", arg: 1, scope: !4276, file: !301, line: 45, type: !109)
!4279 = !DILocation(line: 0, scope: !4276)
!4280 = !DILocation(line: 50, column: 2, scope: !4276)
!4281 = distinct !DISubprogram(name: "__printk_hook_install", scope: !301, file: !301, line: 63, type: !4282, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4284)
!4282 = !DISubroutineType(types: !4283)
!4283 = !{null, !302}
!4284 = !{!4285}
!4285 = !DILocalVariable(name: "fn", arg: 1, scope: !4281, file: !301, line: 63, type: !302)
!4286 = !DILocation(line: 0, scope: !4281)
!4287 = !DILocation(line: 65, column: 12, scope: !4281)
!4288 = !DILocation(line: 66, column: 1, scope: !4281)
!4289 = distinct !DISubprogram(name: "__printk_get_hook", scope: !301, file: !301, line: 76, type: !4290, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2045)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{!107}
!4292 = !DILocation(line: 78, column: 9, scope: !4289)
!4293 = !DILocation(line: 78, column: 2, scope: !4289)
!4294 = distinct !DISubprogram(name: "vprintk", scope: !301, file: !301, line: 113, type: !4295, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4303)
!4295 = !DISubroutineType(types: !4296)
!4296 = !{null, !279, !4297}
!4297 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3366, line: 99, baseType: !4298)
!4298 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3366, line: 40, baseType: !4299)
!4299 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !301, baseType: !4300)
!4300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4301)
!4301 = !{!4302}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4300, file: !301, line: 79, baseType: !107, size: 32)
!4303 = !{!4304, !4305, !4306}
!4304 = !DILocalVariable(name: "fmt", arg: 1, scope: !4294, file: !301, line: 113, type: !279)
!4305 = !DILocalVariable(name: "ap", arg: 2, scope: !4294, file: !301, line: 113, type: !4297)
!4306 = !DILocalVariable(name: "ctx", scope: !4307, file: !301, line: 121, type: !4309)
!4307 = distinct !DILexicalBlock(scope: !4308, file: !301, line: 120, column: 27)
!4308 = distinct !DILexicalBlock(scope: !4294, file: !301, line: 120, column: 6)
!4309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !301, line: 81, size: 32, elements: !4310)
!4310 = !{!4311, !4312}
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4309, file: !301, line: 85, baseType: !32, size: 32)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4309, file: !301, line: 86, baseType: !4313, offset: 32)
!4313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, elements: !4314)
!4314 = !{!4315}
!4315 = !DISubrange(count: 0)
!4316 = !DILocation(line: 0, scope: !4294)
!4317 = !DILocation(line: 148, column: 3, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4308, file: !301, line: 138, column: 9)
!4319 = !DILocation(line: 155, column: 1, scope: !4294)
!4320 = distinct !DISubprogram(name: "char_out", scope: !301, file: !301, line: 107, type: !4321, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4323)
!4321 = !DISubroutineType(types: !4322)
!4322 = !{!109, !109, !107}
!4323 = !{!4324, !4325}
!4324 = !DILocalVariable(name: "c", arg: 1, scope: !4320, file: !301, line: 107, type: !109)
!4325 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4320, file: !301, line: 107, type: !107)
!4326 = !DILocation(line: 0, scope: !4320)
!4327 = !DILocation(line: 110, column: 9, scope: !4320)
!4328 = !DILocation(line: 110, column: 2, scope: !4320)
!4329 = distinct !DISubprogram(name: "cbvprintf", scope: !3398, file: !3398, line: 739, type: !4330, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4332)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{!109, !3748, !107, !279, !4297}
!4332 = !{!4333, !4334, !4335, !4336}
!4333 = !DILocalVariable(name: "out", arg: 1, scope: !4329, file: !3398, line: 739, type: !3748)
!4334 = !DILocalVariable(name: "ctx", arg: 2, scope: !4329, file: !3398, line: 739, type: !107)
!4335 = !DILocalVariable(name: "format", arg: 3, scope: !4329, file: !3398, line: 739, type: !279)
!4336 = !DILocalVariable(name: "ap", arg: 4, scope: !4329, file: !3398, line: 739, type: !4297)
!4337 = !DILocation(line: 0, scope: !4329)
!4338 = !DILocation(line: 741, column: 9, scope: !4329)
!4339 = !DILocation(line: 741, column: 2, scope: !4329)
!4340 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !301, file: !301, line: 157, type: !4341, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4343)
!4341 = !DISubroutineType(types: !4342)
!4342 = !{null, !285, !232}
!4343 = !{!4344, !4345, !4346}
!4344 = !DILocalVariable(name: "c", arg: 1, scope: !4340, file: !301, line: 157, type: !285)
!4345 = !DILocalVariable(name: "n", arg: 2, scope: !4340, file: !301, line: 157, type: !232)
!4346 = !DILocalVariable(name: "i", scope: !4340, file: !301, line: 159, type: !232)
!4347 = !DILocation(line: 0, scope: !4340)
!4348 = !DILocation(line: 164, column: 16, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !301, line: 164, column: 2)
!4350 = distinct !DILexicalBlock(scope: !4340, file: !301, line: 164, column: 2)
!4351 = !DILocation(line: 164, column: 2, scope: !4350)
!4352 = !DILocation(line: 165, column: 3, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4349, file: !301, line: 164, column: 26)
!4354 = !DILocation(line: 165, column: 13, scope: !4353)
!4355 = !DILocation(line: 164, column: 22, scope: !4349)
!4356 = distinct !{!4356, !4351, !4357}
!4357 = !DILocation(line: 166, column: 2, scope: !4350)
!4358 = !DILocation(line: 171, column: 1, scope: !4340)
!4359 = distinct !DISubprogram(name: "printk", scope: !301, file: !301, line: 203, type: !4360, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4362)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{null, !279, null}
!4362 = !{!4363, !4364}
!4363 = !DILocalVariable(name: "fmt", arg: 1, scope: !4359, file: !301, line: 203, type: !279)
!4364 = !DILocalVariable(name: "ap", scope: !4359, file: !301, line: 205, type: !4297)
!4365 = !DILocation(line: 0, scope: !4359)
!4366 = !DILocation(line: 205, column: 2, scope: !4359)
!4367 = !DILocation(line: 205, column: 10, scope: !4359)
!4368 = !DILocation(line: 207, column: 2, scope: !4359)
!4369 = !DILocation(line: 209, column: 2, scope: !4359)
!4370 = !DILocation(line: 211, column: 2, scope: !4359)
!4371 = !DILocation(line: 212, column: 1, scope: !4359)
!4372 = distinct !DISubprogram(name: "snprintk", scope: !301, file: !301, line: 239, type: !4373, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4375)
!4373 = !DISubroutineType(types: !4374)
!4374 = !{!109, !285, !232, !279, null}
!4375 = !{!4376, !4377, !4378, !4379, !4380}
!4376 = !DILocalVariable(name: "str", arg: 1, scope: !4372, file: !301, line: 239, type: !285)
!4377 = !DILocalVariable(name: "size", arg: 2, scope: !4372, file: !301, line: 239, type: !232)
!4378 = !DILocalVariable(name: "fmt", arg: 3, scope: !4372, file: !301, line: 239, type: !279)
!4379 = !DILocalVariable(name: "ap", scope: !4372, file: !301, line: 241, type: !4297)
!4380 = !DILocalVariable(name: "ret", scope: !4372, file: !301, line: 242, type: !109)
!4381 = !DILocation(line: 0, scope: !4372)
!4382 = !DILocation(line: 241, column: 2, scope: !4372)
!4383 = !DILocation(line: 241, column: 10, scope: !4372)
!4384 = !DILocation(line: 244, column: 2, scope: !4372)
!4385 = !DILocation(line: 245, column: 8, scope: !4372)
!4386 = !DILocation(line: 246, column: 2, scope: !4372)
!4387 = !DILocation(line: 249, column: 1, scope: !4372)
!4388 = !DILocation(line: 248, column: 2, scope: !4372)
!4389 = distinct !DISubprogram(name: "vsnprintk", scope: !301, file: !301, line: 251, type: !4390, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4392)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!109, !285, !232, !279, !4297}
!4392 = !{!4393, !4394, !4395, !4396, !4397}
!4393 = !DILocalVariable(name: "str", arg: 1, scope: !4389, file: !301, line: 251, type: !285)
!4394 = !DILocalVariable(name: "size", arg: 2, scope: !4389, file: !301, line: 251, type: !232)
!4395 = !DILocalVariable(name: "fmt", arg: 3, scope: !4389, file: !301, line: 251, type: !279)
!4396 = !DILocalVariable(name: "ap", arg: 4, scope: !4389, file: !301, line: 251, type: !4297)
!4397 = !DILocalVariable(name: "ctx", scope: !4389, file: !301, line: 253, type: !4398)
!4398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !301, line: 217, size: 96, elements: !4399)
!4399 = !{!4400, !4401, !4402}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4398, file: !301, line: 218, baseType: !285, size: 32)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4398, file: !301, line: 219, baseType: !109, size: 32, offset: 32)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4398, file: !301, line: 220, baseType: !109, size: 32, offset: 64)
!4403 = !DILocation(line: 0, scope: !4389)
!4404 = !DILocation(line: 253, column: 2, scope: !4389)
!4405 = !DILocation(line: 253, column: 21, scope: !4389)
!4406 = !DILocation(line: 253, column: 27, scope: !4389)
!4407 = !DILocation(line: 255, column: 2, scope: !4389)
!4408 = !DILocation(line: 257, column: 10, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4389, file: !301, line: 257, column: 6)
!4410 = !DILocation(line: 257, column: 22, scope: !4409)
!4411 = !DILocation(line: 257, column: 16, scope: !4409)
!4412 = !DILocation(line: 257, column: 6, scope: !4389)
!4413 = !DILocation(line: 258, column: 3, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4409, file: !301, line: 257, column: 27)
!4415 = !DILocation(line: 258, column: 18, scope: !4414)
!4416 = !DILocation(line: 259, column: 2, scope: !4414)
!4417 = !DILocation(line: 262, column: 1, scope: !4389)
!4418 = !DILocation(line: 261, column: 2, scope: !4389)
!4419 = distinct !DISubprogram(name: "str_out", scope: !301, file: !301, line: 223, type: !4420, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4423)
!4420 = !DISubroutineType(types: !4421)
!4421 = !{!109, !109, !4422}
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 32)
!4423 = !{!4424, !4425}
!4424 = !DILocalVariable(name: "c", arg: 1, scope: !4419, file: !301, line: 223, type: !109)
!4425 = !DILocalVariable(name: "ctx", arg: 2, scope: !4419, file: !301, line: 223, type: !4422)
!4426 = !DILocation(line: 0, scope: !4419)
!4427 = !DILocation(line: 225, column: 11, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4419, file: !301, line: 225, column: 6)
!4429 = !DILocation(line: 225, column: 15, scope: !4428)
!4430 = !DILocation(line: 0, scope: !4428)
!4431 = !DILocation(line: 225, column: 23, scope: !4428)
!4432 = !DILocation(line: 225, column: 45, scope: !4428)
!4433 = !DILocation(line: 225, column: 37, scope: !4428)
!4434 = !DILocation(line: 225, column: 6, scope: !4419)
!4435 = !DILocation(line: 226, column: 8, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4428, file: !301, line: 225, column: 50)
!4437 = !DILocation(line: 226, column: 13, scope: !4436)
!4438 = !DILocation(line: 227, column: 3, scope: !4436)
!4439 = !DILocation(line: 230, column: 29, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4419, file: !301, line: 230, column: 6)
!4441 = !DILocation(line: 230, column: 17, scope: !4440)
!4442 = !DILocation(line: 230, column: 6, scope: !4419)
!4443 = !DILocation(line: 231, column: 22, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4440, file: !301, line: 230, column: 34)
!4445 = !DILocation(line: 231, column: 3, scope: !4444)
!4446 = !DILocation(line: 231, column: 26, scope: !4444)
!4447 = !DILocation(line: 232, column: 2, scope: !4444)
!4448 = !DILocation(line: 233, column: 28, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4440, file: !301, line: 232, column: 9)
!4450 = !DILocation(line: 233, column: 22, scope: !4449)
!4451 = !DILocation(line: 233, column: 3, scope: !4449)
!4452 = !DILocation(line: 233, column: 26, scope: !4449)
!4453 = !DILocation(line: 237, column: 1, scope: !4419)
!4454 = distinct !DISubprogram(name: "z_thread_entry", scope: !4455, file: !4455, line: 30, type: !4456, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4458)
!4455 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4456 = !DISubroutineType(types: !4457)
!4457 = !{null, !3330, !107, !107, !107}
!4458 = !{!4459, !4460, !4461, !4462}
!4459 = !DILocalVariable(name: "entry", arg: 1, scope: !4454, file: !4455, line: 30, type: !3330)
!4460 = !DILocalVariable(name: "p1", arg: 2, scope: !4454, file: !4455, line: 31, type: !107)
!4461 = !DILocalVariable(name: "p2", arg: 3, scope: !4454, file: !4455, line: 31, type: !107)
!4462 = !DILocalVariable(name: "p3", arg: 4, scope: !4454, file: !4455, line: 31, type: !107)
!4463 = !DILocation(line: 0, scope: !4454)
!4464 = !DILocation(line: 36, column: 2, scope: !4454)
!4465 = !DILocation(line: 38, column: 17, scope: !4454)
!4466 = !DILocation(line: 38, column: 2, scope: !4454)
!4467 = !DILocation(line: 45, column: 2, scope: !4454)
!4468 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !4469, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !2045)
!4469 = !DISubroutineType(types: !4470)
!4470 = !{!4471}
!4471 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !4472)
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 32)
!4473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !4474)
!4474 = !{!4475, !4533, !4545, !4546, !4547, !4548, !4549, !4555, !4570}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4473, file: !156, line: 247, baseType: !4476, size: 384)
!4476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !4477)
!4477 = !{!4478, !4502, !4509, !4510, !4511, !4520, !4521, !4522}
!4478 = !DIDerivedType(tag: DW_TAG_member, scope: !4476, file: !156, line: 60, baseType: !4479, size: 64)
!4479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4476, file: !156, line: 60, size: 64, elements: !4480)
!4480 = !{!4481, !4496}
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4479, file: !156, line: 61, baseType: !4482, size: 64)
!4482 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !4483)
!4483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !4484)
!4484 = !{!4485, !4491}
!4485 = !DIDerivedType(tag: DW_TAG_member, scope: !4483, file: !127, line: 38, baseType: !4486, size: 32)
!4486 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4483, file: !127, line: 38, size: 32, elements: !4487)
!4487 = !{!4488, !4490}
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4486, file: !127, line: 39, baseType: !4489, size: 32)
!4489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4483, size: 32)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4486, file: !127, line: 40, baseType: !4489, size: 32)
!4491 = !DIDerivedType(tag: DW_TAG_member, scope: !4483, file: !127, line: 42, baseType: !4492, size: 32, offset: 32)
!4492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4483, file: !127, line: 42, size: 32, elements: !4493)
!4493 = !{!4494, !4495}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4492, file: !127, line: 43, baseType: !4489, size: 32)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4492, file: !127, line: 44, baseType: !4489, size: 32)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4479, file: !156, line: 62, baseType: !4497, size: 64)
!4497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !4498)
!4498 = !{!4499}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4497, file: !168, line: 50, baseType: !4500, size: 64)
!4500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4501, size: 64, elements: !173)
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4476, file: !156, line: 68, baseType: !4503, size: 32, offset: 64)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4504, size: 32)
!4504 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !4505)
!4505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !4506)
!4506 = !{!4507}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4505, file: !122, line: 232, baseType: !4508, size: 64)
!4508 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !4483)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4476, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4476, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!4511 = !DIDerivedType(tag: DW_TAG_member, scope: !4476, file: !156, line: 90, baseType: !4512, size: 16, offset: 112)
!4512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4476, file: !156, line: 90, size: 16, elements: !4513)
!4513 = !{!4514, !4519}
!4514 = !DIDerivedType(tag: DW_TAG_member, scope: !4512, file: !156, line: 91, baseType: !4515, size: 16)
!4515 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4512, file: !156, line: 91, size: 16, elements: !4516)
!4516 = !{!4517, !4518}
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4515, file: !156, line: 96, baseType: !188, size: 8)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4515, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4512, file: !156, line: 100, baseType: !192, size: 16)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4476, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4476, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4476, file: !156, line: 131, baseType: !4523, size: 192, offset: 192)
!4523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !4524)
!4524 = !{!4525, !4526, !4532}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4523, file: !122, line: 245, baseType: !4482, size: 64)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4523, file: !122, line: 246, baseType: !4527, size: 32, offset: 64)
!4527 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !4528)
!4528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4529, size: 32)
!4529 = !DISubroutineType(types: !4530)
!4530 = !{null, !4531}
!4531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4523, size: 32)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4523, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4473, file: !156, line: 250, baseType: !4534, size: 288, offset: 384)
!4534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !4535)
!4535 = !{!4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544}
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4534, file: !209, line: 26, baseType: !110, size: 32)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4534, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4534, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4534, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4534, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4534, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4534, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4534, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4534, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4473, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4473, file: !156, line: 256, baseType: !4504, size: 64, offset: 704)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4473, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4473, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4473, file: !156, line: 300, baseType: !4550, size: 96, offset: 1056)
!4550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !4551)
!4551 = !{!4552, !4553, !4554}
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4550, file: !156, line: 153, baseType: !22, size: 32)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4550, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4550, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4473, file: !156, line: 325, baseType: !4556, size: 32, offset: 1152)
!4556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4557, size: 32)
!4557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !4558)
!4558 = !{!4559, !4565, !4566}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4557, file: !118, line: 5074, baseType: !4560, size: 96)
!4560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !4561)
!4561 = !{!4562, !4563, !4564}
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4560, file: !241, line: 57, baseType: !244, size: 32)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4560, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4560, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4557, file: !118, line: 5075, baseType: !4504, size: 64, offset: 96)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4557, file: !118, line: 5076, baseType: !4567, size: 32, offset: 160)
!4567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !4568)
!4568 = !{!4569}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4567, file: !251, line: 52, baseType: !22, size: 32)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4473, file: !156, line: 343, baseType: !4571, size: 64, offset: 1184)
!4571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !4572)
!4572 = !{!4573, !4574}
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4571, file: !209, line: 63, baseType: !110, size: 32)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4571, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!4575 = !DILocation(line: 535, column: 9, scope: !4468)
!4576 = !DILocation(line: 535, column: 2, scope: !4468)
!4577 = distinct !DISubprogram(name: "k_thread_abort", scope: !3204, file: !3204, line: 188, type: !4578, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4580)
!4578 = !DISubroutineType(types: !4579)
!4579 = !{null, !4471}
!4580 = !{!4581}
!4581 = !DILocalVariable(name: "thread", arg: 1, scope: !4577, file: !3204, line: 188, type: !4471)
!4582 = !DILocation(line: 0, scope: !4577)
!4583 = !DILocation(line: 197, column: 2, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4577, file: !3204, line: 197, column: 2)
!4585 = !{i64 2152220855}
!4586 = !DILocation(line: 198, column: 2, scope: !4577)
!4587 = !DILocation(line: 199, column: 1, scope: !4577)
!4588 = distinct !DISubprogram(name: "z_current_get", scope: !3204, file: !3204, line: 173, type: !4469, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !2045)
!4589 = !DILocation(line: 180, column: 2, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4588, file: !3204, line: 180, column: 2)
!4591 = !{i64 2152220787}
!4592 = !DILocation(line: 181, column: 9, scope: !4588)
!4593 = !DILocation(line: 181, column: 2, scope: !4588)
!4594 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2534, file: !2534, line: 1338, type: !4595, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !4603)
!4595 = !DISubroutineType(types: !4596)
!4596 = !{!109, !3748, !107, !279, !4597, !110}
!4597 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3366, line: 99, baseType: !4598)
!4598 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3366, line: 40, baseType: !4599)
!4599 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2534, baseType: !4600)
!4600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4601)
!4601 = !{!4602}
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4600, file: !2534, baseType: !107, size: 32)
!4603 = !{!4604, !4605, !4606, !4607, !4608, !4609, !4613, !4614, !4615, !4617, !4622, !4665, !4668, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4680, !4681, !4682, !4686, !4689, !4691, !4694, !4695, !4696, !4701, !4707, !4710, !4714, !4720, !4724, !4727, !4729, !4732}
!4604 = !DILocalVariable(name: "out", arg: 1, scope: !4594, file: !2534, line: 1338, type: !3748)
!4605 = !DILocalVariable(name: "ctx", arg: 2, scope: !4594, file: !2534, line: 1338, type: !107)
!4606 = !DILocalVariable(name: "fp", arg: 3, scope: !4594, file: !2534, line: 1338, type: !279)
!4607 = !DILocalVariable(name: "ap", arg: 4, scope: !4594, file: !2534, line: 1339, type: !4597)
!4608 = !DILocalVariable(name: "flags", arg: 5, scope: !4594, file: !2534, line: 1339, type: !110)
!4609 = !DILocalVariable(name: "buf", scope: !4594, file: !2534, line: 1341, type: !4610)
!4610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 176, elements: !4611)
!4611 = !{!4612}
!4612 = !DISubrange(count: 22)
!4613 = !DILocalVariable(name: "count", scope: !4594, file: !2534, line: 1342, type: !232)
!4614 = !DILocalVariable(name: "sint", scope: !4594, file: !2534, line: 1343, type: !2553)
!4615 = !DILocalVariable(name: "tagged_ap", scope: !4594, file: !2534, line: 1345, type: !4616)
!4616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !360)
!4617 = !DILocalVariable(name: "rc", scope: !4618, file: !2534, line: 1377, type: !109)
!4618 = distinct !DILexicalBlock(scope: !4619, file: !2534, line: 1377, column: 4)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !2534, line: 1376, column: 19)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !2534, line: 1376, column: 7)
!4621 = distinct !DILexicalBlock(scope: !4594, file: !2534, line: 1375, column: 19)
!4622 = !DILocalVariable(name: "state", scope: !4621, file: !2534, line: 1395, type: !4623)
!4623 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4594, file: !2534, line: 1392, size: 192, elements: !4624)
!4624 = !{!4625, !4633}
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4623, file: !2534, line: 1393, baseType: !4626, size: 64)
!4626 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2534, line: 166, size: 64, elements: !4627)
!4627 = !{!4628, !4629, !4630, !4631, !4632}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4626, file: !2534, line: 168, baseType: !2553, size: 64)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4626, file: !2534, line: 171, baseType: !2556, size: 64)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4626, file: !2534, line: 174, baseType: !277, size: 64)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4626, file: !2534, line: 177, baseType: !275, size: 64)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4626, file: !2534, line: 180, baseType: !107, size: 32)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4623, file: !2534, line: 1394, baseType: !4634, size: 96, offset: 64)
!4634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2534, line: 189, size: 96, elements: !4635)
!4635 = !{!4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4660}
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4634, file: !2534, line: 191, baseType: !360, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4634, file: !2534, line: 194, baseType: !360, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4634, file: !2534, line: 197, baseType: !360, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4634, file: !2534, line: 200, baseType: !360, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4634, file: !2534, line: 203, baseType: !360, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4634, file: !2534, line: 206, baseType: !360, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4634, file: !2534, line: 209, baseType: !360, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4634, file: !2534, line: 212, baseType: !360, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4634, file: !2534, line: 219, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4634, file: !2534, line: 222, baseType: !360, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4634, file: !2534, line: 229, baseType: !360, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4634, file: !2534, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4634, file: !2534, line: 238, baseType: !360, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4634, file: !2534, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4634, file: !2534, line: 244, baseType: !360, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4634, file: !2534, line: 247, baseType: !360, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4634, file: !2534, line: 252, baseType: !360, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4634, file: !2534, line: 257, baseType: !360, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4634, file: !2534, line: 260, baseType: !179, size: 8, offset: 24)
!4655 = !DIDerivedType(tag: DW_TAG_member, scope: !4634, file: !2534, line: 262, baseType: !4656, size: 32, offset: 32)
!4656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4634, file: !2534, line: 262, size: 32, elements: !4657)
!4657 = !{!4658, !4659}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4656, file: !2534, line: 267, baseType: !109, size: 32)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4656, file: !2534, line: 289, baseType: !109, size: 32)
!4660 = !DIDerivedType(tag: DW_TAG_member, scope: !4634, file: !2534, line: 292, baseType: !4661, size: 32, offset: 64)
!4661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4634, file: !2534, line: 292, size: 32, elements: !4662)
!4662 = !{!4663, !4664}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4661, file: !2534, line: 297, baseType: !109, size: 32)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4661, file: !2534, line: 306, baseType: !109, size: 32)
!4665 = !DILocalVariable(name: "conv", scope: !4621, file: !2534, line: 1400, type: !4666)
!4666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4667)
!4667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4634, size: 32)
!4668 = !DILocalVariable(name: "value", scope: !4621, file: !2534, line: 1401, type: !4669)
!4669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4670)
!4670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 32)
!4671 = !DILocalVariable(name: "sp", scope: !4621, file: !2534, line: 1402, type: !279)
!4672 = !DILocalVariable(name: "width", scope: !4621, file: !2534, line: 1403, type: !109)
!4673 = !DILocalVariable(name: "precision", scope: !4621, file: !2534, line: 1404, type: !109)
!4674 = !DILocalVariable(name: "bps", scope: !4621, file: !2534, line: 1405, type: !279)
!4675 = !DILocalVariable(name: "bpe", scope: !4621, file: !2534, line: 1406, type: !279)
!4676 = !DILocalVariable(name: "sign", scope: !4621, file: !2534, line: 1407, type: !148)
!4677 = !DILocalVariable(name: "arg", scope: !4678, file: !2534, line: 1432, type: !109)
!4678 = distinct !DILexicalBlock(scope: !4679, file: !2534, line: 1431, column: 24)
!4679 = distinct !DILexicalBlock(scope: !4621, file: !2534, line: 1431, column: 7)
!4680 = !DILocalVariable(name: "specifier_cat", scope: !4621, file: !2534, line: 1468, type: !2533)
!4681 = !DILocalVariable(name: "length_mod", scope: !4621, file: !2534, line: 1470, type: !2541)
!4682 = !DILocalVariable(name: "rc", scope: !4683, file: !2534, line: 1575, type: !109)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !2534, line: 1575, column: 4)
!4684 = distinct !DILexicalBlock(scope: !4685, file: !2534, line: 1574, column: 43)
!4685 = distinct !DILexicalBlock(scope: !4621, file: !2534, line: 1574, column: 7)
!4686 = !DILocalVariable(name: "rc", scope: !4687, file: !2534, line: 1584, type: !109)
!4687 = distinct !DILexicalBlock(scope: !4688, file: !2534, line: 1584, column: 4)
!4688 = distinct !DILexicalBlock(scope: !4621, file: !2534, line: 1582, column: 28)
!4689 = !DILocalVariable(name: "len", scope: !4690, file: !2534, line: 1589, type: !232)
!4690 = distinct !DILexicalBlock(scope: !4688, file: !2534, line: 1586, column: 13)
!4691 = !DILocalVariable(name: "len", scope: !4692, file: !2534, line: 1641, type: !232)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !2534, line: 1640, column: 24)
!4693 = distinct !DILexicalBlock(scope: !4688, file: !2534, line: 1640, column: 8)
!4694 = !DILocalVariable(name: "nj_len", scope: !4621, file: !2534, line: 1722, type: !232)
!4695 = !DILocalVariable(name: "pad_len", scope: !4621, file: !2534, line: 1723, type: !109)
!4696 = !DILocalVariable(name: "pad", scope: !4697, file: !2534, line: 1751, type: !148)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !2534, line: 1750, column: 26)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !2534, line: 1750, column: 8)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !2534, line: 1747, column: 18)
!4700 = distinct !DILexicalBlock(scope: !4621, file: !2534, line: 1747, column: 7)
!4701 = !DILocalVariable(name: "rc", scope: !4702, file: !2534, line: 1758, type: !109)
!4702 = distinct !DILexicalBlock(scope: !4703, file: !2534, line: 1758, column: 7)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !2534, line: 1757, column: 21)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !2534, line: 1757, column: 10)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !2534, line: 1756, column: 26)
!4706 = distinct !DILexicalBlock(scope: !4697, file: !2534, line: 1756, column: 9)
!4707 = !DILocalVariable(name: "rc", scope: !4708, file: !2534, line: 1765, type: !109)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2534, line: 1765, column: 6)
!4709 = distinct !DILexicalBlock(scope: !4697, file: !2534, line: 1764, column: 25)
!4710 = !DILocalVariable(name: "rc", scope: !4711, file: !2534, line: 1774, type: !109)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !2534, line: 1774, column: 4)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !2534, line: 1773, column: 18)
!4713 = distinct !DILexicalBlock(scope: !4621, file: !2534, line: 1773, column: 7)
!4714 = !DILocalVariable(name: "rc", scope: !4715, file: !2534, line: 1819, type: !109)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !2534, line: 1819, column: 5)
!4716 = distinct !DILexicalBlock(scope: !4717, file: !2534, line: 1818, column: 44)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !2534, line: 1818, column: 8)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !2534, line: 1817, column: 10)
!4719 = distinct !DILexicalBlock(scope: !4621, file: !2534, line: 1777, column: 7)
!4720 = !DILocalVariable(name: "rc", scope: !4721, file: !2534, line: 1823, type: !109)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !2534, line: 1823, column: 5)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !2534, line: 1822, column: 26)
!4723 = distinct !DILexicalBlock(scope: !4718, file: !2534, line: 1822, column: 8)
!4724 = !DILocalVariable(name: "rc", scope: !4725, file: !2534, line: 1828, type: !109)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !2534, line: 1828, column: 5)
!4726 = distinct !DILexicalBlock(scope: !4718, file: !2534, line: 1827, column: 26)
!4727 = !DILocalVariable(name: "rc", scope: !4728, file: !2534, line: 1831, type: !109)
!4728 = distinct !DILexicalBlock(scope: !4718, file: !2534, line: 1831, column: 4)
!4729 = !DILocalVariable(name: "rc", scope: !4730, file: !2534, line: 1836, type: !109)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !2534, line: 1836, column: 4)
!4731 = distinct !DILexicalBlock(scope: !4621, file: !2534, line: 1835, column: 21)
!4732 = !DILabel(scope: !4688, name: "prec_int_pad0", file: !2534, line: 1634)
!4733 = !DILocation(line: 0, scope: !4594)
!4734 = !DILocation(line: 1341, column: 2, scope: !4594)
!4735 = !DILocation(line: 1341, column: 7, scope: !4594)
!4736 = !DILocation(line: 1375, column: 2, scope: !4594)
!4737 = !DILocation(line: 1342, column: 9, scope: !4594)
!4738 = !DILocation(line: 1375, column: 9, scope: !4594)
!4739 = !DILocation(line: 1377, column: 4, scope: !4618)
!4740 = !DILocation(line: 0, scope: !4618)
!4741 = !DILocation(line: 1377, column: 4, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4618, file: !2534, line: 1377, column: 4)
!4743 = distinct !{!4743, !4736, !4744}
!4744 = !DILocation(line: 1839, column: 2, scope: !4594)
!4745 = !DILocation(line: 1392, column: 3, scope: !4621)
!4746 = !DILocation(line: 1395, column: 5, scope: !4621)
!4747 = !DILocation(line: 0, scope: !4621)
!4748 = !DILocation(line: 1409, column: 8, scope: !4621)
!4749 = !DILocation(line: 1414, column: 13, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4621, file: !2534, line: 1414, column: 7)
!4751 = !DILocation(line: 1414, column: 7, scope: !4621)
!4752 = !DILocation(line: 1415, column: 12, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4750, file: !2534, line: 1414, column: 25)
!4754 = !DILocation(line: 1417, column: 14, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4753, file: !2534, line: 1417, column: 8)
!4756 = !DILocation(line: 1417, column: 8, scope: !4753)
!4757 = !DILocation(line: 1418, column: 21, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4755, file: !2534, line: 1417, column: 19)
!4759 = !DILocation(line: 1419, column: 13, scope: !4758)
!4760 = !DILocation(line: 1420, column: 4, scope: !4758)
!4761 = !DILocation(line: 1421, column: 20, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4750, file: !2534, line: 1421, column: 14)
!4763 = !DILocation(line: 1421, column: 14, scope: !4750)
!4764 = !DILocation(line: 1431, column: 13, scope: !4679)
!4765 = !DILocation(line: 1431, column: 7, scope: !4621)
!4766 = !DILocation(line: 1432, column: 14, scope: !4678)
!4767 = !DILocation(line: 0, scope: !4678)
!4768 = !DILocation(line: 1434, column: 12, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4678, file: !2534, line: 1434, column: 8)
!4770 = !DILocation(line: 1434, column: 8, scope: !4678)
!4771 = !DILocation(line: 1435, column: 24, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4769, file: !2534, line: 1434, column: 17)
!4773 = !DILocation(line: 1436, column: 4, scope: !4772)
!4774 = !DILocation(line: 1439, column: 20, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4679, file: !2534, line: 1439, column: 14)
!4776 = !DILocation(line: 1439, column: 14, scope: !4679)
!4777 = !DILocation(line: 1469, column: 37, scope: !4621)
!4778 = !DILocation(line: 1448, column: 20, scope: !4621)
!4779 = !DILocation(line: 1449, column: 22, scope: !4621)
!4780 = !DILocation(line: 1471, column: 34, scope: !4621)
!4781 = !DILocation(line: 1478, column: 7, scope: !4621)
!4782 = !DILocation(line: 1479, column: 4, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4784, file: !2534, line: 1478, column: 40)
!4784 = distinct !DILexicalBlock(scope: !4621, file: !2534, line: 1478, column: 7)
!4785 = !DILocation(line: 1484, column: 19, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4783, file: !2534, line: 1479, column: 24)
!4787 = !DILocation(line: 1484, column: 17, scope: !4786)
!4788 = !DILocation(line: 1485, column: 5, scope: !4786)
!4789 = !DILocation(line: 1492, column: 20, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !2534, line: 1491, column: 12)
!4791 = distinct !DILexicalBlock(scope: !4786, file: !2534, line: 1487, column: 9)
!4792 = !DILocation(line: 1492, column: 18, scope: !4790)
!4793 = !DILocation(line: 1494, column: 5, scope: !4786)
!4794 = !DILocation(line: 1497, column: 23, scope: !4786)
!4795 = !DILocation(line: 1496, column: 17, scope: !4786)
!4796 = !DILocation(line: 1498, column: 5, scope: !4786)
!4797 = !DILocation(line: 1501, column: 23, scope: !4786)
!4798 = !DILocation(line: 1500, column: 17, scope: !4786)
!4799 = !DILocation(line: 1502, column: 5, scope: !4786)
!4800 = !DILocation(line: 1513, column: 23, scope: !4786)
!4801 = !DILocation(line: 1513, column: 6, scope: !4786)
!4802 = !DILocation(line: 1512, column: 17, scope: !4786)
!4803 = !DILocation(line: 1514, column: 5, scope: !4786)
!4804 = !DILocation(line: 0, scope: !4786)
!4805 = !DILocation(line: 1516, column: 8, scope: !4783)
!4806 = !DILocation(line: 1517, column: 19, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4808, file: !2534, line: 1516, column: 33)
!4808 = distinct !DILexicalBlock(scope: !4783, file: !2534, line: 1516, column: 8)
!4809 = !DILocation(line: 1517, column: 17, scope: !4807)
!4810 = !DILocation(line: 1518, column: 4, scope: !4807)
!4811 = !DILocation(line: 1519, column: 19, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4813, file: !2534, line: 1518, column: 39)
!4813 = distinct !DILexicalBlock(scope: !4808, file: !2534, line: 1518, column: 15)
!4814 = !DILocation(line: 1519, column: 17, scope: !4812)
!4815 = !DILocation(line: 1520, column: 4, scope: !4812)
!4816 = !DILocation(line: 1522, column: 4, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !2534, line: 1521, column: 47)
!4818 = distinct !DILexicalBlock(scope: !4784, file: !2534, line: 1521, column: 14)
!4819 = !DILocation(line: 1527, column: 19, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4817, file: !2534, line: 1522, column: 24)
!4821 = !DILocation(line: 1527, column: 17, scope: !4820)
!4822 = !DILocation(line: 1528, column: 5, scope: !4820)
!4823 = !DILocation(line: 0, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4820, file: !2534, line: 1530, column: 9)
!4825 = !DILocation(line: 1540, column: 23, scope: !4820)
!4826 = !DILocation(line: 1539, column: 17, scope: !4820)
!4827 = !DILocation(line: 1542, column: 5, scope: !4820)
!4828 = !DILocation(line: 1545, column: 23, scope: !4820)
!4829 = !DILocation(line: 1544, column: 17, scope: !4820)
!4830 = !DILocation(line: 1547, column: 5, scope: !4820)
!4831 = !DILocation(line: 1551, column: 23, scope: !4820)
!4832 = !DILocation(line: 1551, column: 6, scope: !4820)
!4833 = !DILocation(line: 1550, column: 17, scope: !4820)
!4834 = !DILocation(line: 1552, column: 5, scope: !4820)
!4835 = !DILocation(line: 0, scope: !4820)
!4836 = !DILocation(line: 1554, column: 8, scope: !4817)
!4837 = !DILocation(line: 1555, column: 19, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4839, file: !2534, line: 1554, column: 33)
!4839 = distinct !DILexicalBlock(scope: !4817, file: !2534, line: 1554, column: 8)
!4840 = !DILocation(line: 1555, column: 17, scope: !4838)
!4841 = !DILocation(line: 1556, column: 4, scope: !4838)
!4842 = !DILocation(line: 1557, column: 19, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4844, file: !2534, line: 1556, column: 39)
!4844 = distinct !DILexicalBlock(scope: !4839, file: !2534, line: 1556, column: 15)
!4845 = !DILocation(line: 1557, column: 17, scope: !4843)
!4846 = !DILocation(line: 1558, column: 4, scope: !4843)
!4847 = !DILocation(line: 0, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !2534, line: 1560, column: 8)
!4849 = distinct !DILexicalBlock(scope: !4850, file: !2534, line: 1559, column: 45)
!4850 = distinct !DILexicalBlock(scope: !4818, file: !2534, line: 1559, column: 14)
!4851 = !DILocation(line: 1566, column: 17, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4853, file: !2534, line: 1565, column: 46)
!4853 = distinct !DILexicalBlock(scope: !4850, file: !2534, line: 1565, column: 14)
!4854 = !DILocation(line: 1566, column: 15, scope: !4852)
!4855 = !DILocation(line: 1567, column: 3, scope: !4852)
!4856 = !DILocation(line: 1574, column: 21, scope: !4685)
!4857 = !DILocation(line: 1575, column: 4, scope: !4683)
!4858 = !DILocation(line: 0, scope: !4683)
!4859 = !DILocation(line: 1575, column: 4, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4683, file: !2534, line: 1575, column: 4)
!4861 = !DILocation(line: 1582, column: 17, scope: !4621)
!4862 = !DILocation(line: 1582, column: 3, scope: !4621)
!4863 = !DILocation(line: 1584, column: 4, scope: !4687)
!4864 = !DILocation(line: 0, scope: !4687)
!4865 = !DILocation(line: 1584, column: 4, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4687, file: !2534, line: 1584, column: 4)
!4867 = !DILocation(line: 1587, column: 31, scope: !4690)
!4868 = !DILocation(line: 1591, column: 18, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4690, file: !2534, line: 1591, column: 8)
!4870 = !DILocation(line: 1591, column: 8, scope: !4690)
!4871 = !DILocation(line: 1592, column: 11, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4869, file: !2534, line: 1591, column: 24)
!4873 = !DILocation(line: 0, scope: !4690)
!4874 = !DILocation(line: 1593, column: 4, scope: !4872)
!4875 = !DILocation(line: 1594, column: 11, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4869, file: !2534, line: 1593, column: 11)
!4877 = !DILocation(line: 1604, column: 51, scope: !4688)
!4878 = !DILocation(line: 1604, column: 13, scope: !4688)
!4879 = !DILocation(line: 1604, column: 11, scope: !4688)
!4880 = !DILocation(line: 1606, column: 4, scope: !4688)
!4881 = !DILocation(line: 1609, column: 14, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4688, file: !2534, line: 1609, column: 8)
!4883 = !DILocation(line: 1609, column: 8, scope: !4688)
!4884 = !DILocation(line: 1619, column: 18, scope: !4688)
!4885 = !DILocation(line: 1620, column: 13, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4688, file: !2534, line: 1620, column: 8)
!4887 = !DILocation(line: 1620, column: 8, scope: !4688)
!4888 = !DILocation(line: 1622, column: 36, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4886, file: !2534, line: 1620, column: 18)
!4890 = !DILocation(line: 1622, column: 17, scope: !4889)
!4891 = !DILocation(line: 1623, column: 4, scope: !4889)
!4892 = !DILocation(line: 1632, column: 29, scope: !4688)
!4893 = !DILocation(line: 1632, column: 10, scope: !4688)
!4894 = !DILocation(line: 1632, column: 4, scope: !4688)
!4895 = !DILocation(line: 1407, column: 8, scope: !4621)
!4896 = !DILocation(line: 0, scope: !4688)
!4897 = !DILocation(line: 1634, column: 3, scope: !4688)
!4898 = !DILocation(line: 1640, column: 18, scope: !4693)
!4899 = !DILocation(line: 1640, column: 8, scope: !4688)
!4900 = !DILocation(line: 1729, column: 13, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4621, file: !2534, line: 1729, column: 7)
!4902 = !DILocation(line: 1641, column: 22, scope: !4692)
!4903 = !DILocation(line: 0, scope: !4692)
!4904 = !DILocation(line: 1646, column: 21, scope: !4692)
!4905 = !DILocation(line: 1649, column: 13, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4692, file: !2534, line: 1649, column: 9)
!4907 = !DILocation(line: 1649, column: 9, scope: !4692)
!4908 = !DILocation(line: 1650, column: 35, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4906, file: !2534, line: 1649, column: 34)
!4910 = !DILocation(line: 1650, column: 23, scope: !4909)
!4911 = !DILocation(line: 1651, column: 5, scope: !4909)
!4912 = !DILocation(line: 1660, column: 15, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4688, file: !2534, line: 1660, column: 8)
!4914 = !DILocation(line: 1660, column: 19, scope: !4913)
!4915 = !DILocation(line: 1660, column: 8, scope: !4688)
!4916 = !DILocation(line: 1661, column: 23, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4913, file: !2534, line: 1660, column: 28)
!4918 = !DILocation(line: 1661, column: 11, scope: !4917)
!4919 = !DILocation(line: 1665, column: 22, scope: !4917)
!4920 = !DILocation(line: 1666, column: 21, scope: !4917)
!4921 = !DILocation(line: 1668, column: 5, scope: !4917)
!4922 = !DILocation(line: 1677, column: 30, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !2534, line: 1676, column: 49)
!4924 = distinct !DILexicalBlock(scope: !4688, file: !2534, line: 1676, column: 8)
!4925 = !DILocation(line: 1677, column: 5, scope: !4923)
!4926 = !DILocation(line: 1680, column: 4, scope: !4688)
!4927 = !DILocation(line: 0, scope: !4869)
!4928 = !DILocation(line: 1597, column: 14, scope: !4690)
!4929 = !DILocation(line: 1699, column: 11, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4621, file: !2534, line: 1699, column: 7)
!4931 = !DILocation(line: 1699, column: 7, scope: !4621)
!4932 = !DILocation(line: 1725, column: 7, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4621, file: !2534, line: 1725, column: 7)
!4934 = !DILocation(line: 1725, column: 12, scope: !4933)
!4935 = !DILocation(line: 1747, column: 13, scope: !4700)
!4936 = !DILocation(line: 1747, column: 7, scope: !4621)
!4937 = !DILocation(line: 1722, column: 24, scope: !4621)
!4938 = !DILocation(line: 1725, column: 7, scope: !4621)
!4939 = !DILocation(line: 1729, column: 7, scope: !4621)
!4940 = !DILocation(line: 1736, column: 13, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4621, file: !2534, line: 1736, column: 7)
!4942 = !DILocation(line: 1735, column: 19, scope: !4621)
!4943 = !DILocation(line: 1736, column: 7, scope: !4621)
!4944 = !DILocation(line: 1748, column: 10, scope: !4699)
!4945 = !DILocation(line: 1750, column: 15, scope: !4698)
!4946 = !DILocation(line: 1750, column: 8, scope: !4699)
!4947 = !DILocation(line: 0, scope: !4697)
!4948 = !DILocation(line: 1756, column: 15, scope: !4706)
!4949 = !DILocation(line: 1756, column: 9, scope: !4697)
!4950 = !DILocation(line: 1758, column: 7, scope: !4702)
!4951 = !DILocation(line: 0, scope: !4702)
!4952 = !DILocation(line: 1758, column: 7, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4702, file: !2534, line: 1758, column: 7)
!4954 = !DILocation(line: 1764, column: 5, scope: !4697)
!4955 = !DILocation(line: 0, scope: !4699)
!4956 = !DILocation(line: 1764, column: 20, scope: !4697)
!4957 = !DILocation(line: 1764, column: 17, scope: !4697)
!4958 = !DILocation(line: 1765, column: 6, scope: !4708)
!4959 = !DILocation(line: 0, scope: !4708)
!4960 = !DILocation(line: 1765, column: 6, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4708, file: !2534, line: 1765, column: 6)
!4962 = distinct !{!4962, !4954, !4963}
!4963 = !DILocation(line: 1766, column: 5, scope: !4697)
!4964 = !DILocation(line: 1773, column: 12, scope: !4713)
!4965 = !DILocation(line: 1773, column: 7, scope: !4621)
!4966 = !DILocation(line: 1773, column: 7, scope: !4713)
!4967 = !DILocation(line: 1774, column: 4, scope: !4711)
!4968 = !DILocation(line: 0, scope: !4711)
!4969 = !DILocation(line: 1774, column: 4, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4711, file: !2534, line: 1774, column: 4)
!4971 = !DILocation(line: 1818, column: 8, scope: !4717)
!4972 = !DILocation(line: 1818, column: 27, scope: !4717)
!4973 = !DILocation(line: 1818, column: 25, scope: !4717)
!4974 = !DILocation(line: 1818, column: 8, scope: !4718)
!4975 = !DILocation(line: 1819, column: 5, scope: !4715)
!4976 = !DILocation(line: 0, scope: !4715)
!4977 = !DILocation(line: 1819, column: 5, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4715, file: !2534, line: 1819, column: 5)
!4979 = !DILocation(line: 1822, column: 14, scope: !4723)
!4980 = !DILocation(line: 1822, column: 8, scope: !4718)
!4981 = !DILocation(line: 1823, column: 5, scope: !4721)
!4982 = !DILocation(line: 0, scope: !4721)
!4983 = !DILocation(line: 1823, column: 5, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4721, file: !2534, line: 1823, column: 5)
!4985 = !DILocation(line: 1826, column: 20, scope: !4718)
!4986 = !DILocation(line: 1827, column: 4, scope: !4718)
!4987 = !DILocation(line: 0, scope: !4718)
!4988 = !DILocation(line: 1827, column: 21, scope: !4718)
!4989 = !DILocation(line: 1827, column: 18, scope: !4718)
!4990 = !DILocation(line: 1828, column: 5, scope: !4725)
!4991 = !DILocation(line: 0, scope: !4725)
!4992 = !DILocation(line: 1828, column: 5, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4725, file: !2534, line: 1828, column: 5)
!4994 = distinct !{!4994, !4986, !4995}
!4995 = !DILocation(line: 1829, column: 4, scope: !4718)
!4996 = !DILocation(line: 1831, column: 4, scope: !4728)
!4997 = !DILocation(line: 0, scope: !4728)
!4998 = !DILocation(line: 1831, column: 4, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4728, file: !2534, line: 1831, column: 4)
!5000 = !DILocation(line: 1835, column: 16, scope: !4621)
!5001 = !DILocation(line: 1835, column: 3, scope: !4621)
!5002 = !DILocation(line: 1836, column: 4, scope: !4730)
!5003 = !DILocation(line: 0, scope: !4730)
!5004 = !DILocation(line: 1836, column: 4, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4730, file: !2534, line: 1836, column: 4)
!5006 = !DILocation(line: 1837, column: 4, scope: !4731)
!5007 = distinct !{!5007, !5001, !5008}
!5008 = !DILocation(line: 1838, column: 3, scope: !4621)
!5009 = !DILocation(line: 1844, column: 1, scope: !4594)
!5010 = distinct !DISubprogram(name: "extract_conversion", scope: !2534, file: !2534, line: 642, type: !5011, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5013)
!5011 = !DISubroutineType(types: !5012)
!5012 = !{!279, !4667, !279}
!5013 = !{!5014, !5015}
!5014 = !DILocalVariable(name: "conv", arg: 1, scope: !5010, file: !2534, line: 642, type: !4667)
!5015 = !DILocalVariable(name: "sp", arg: 2, scope: !5010, file: !2534, line: 643, type: !279)
!5016 = !DILocation(line: 0, scope: !5010)
!5017 = !DILocation(line: 645, column: 10, scope: !5010)
!5018 = !DILocation(line: 653, column: 2, scope: !5010)
!5019 = !DILocation(line: 654, column: 6, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5010, file: !2534, line: 654, column: 6)
!5021 = !DILocation(line: 654, column: 10, scope: !5020)
!5022 = !DILocation(line: 654, column: 6, scope: !5010)
!5023 = !DILocation(line: 655, column: 24, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5020, file: !2534, line: 654, column: 18)
!5025 = !DILocation(line: 655, column: 19, scope: !5024)
!5026 = !DILocation(line: 656, column: 3, scope: !5024)
!5027 = !DILocation(line: 659, column: 7, scope: !5010)
!5028 = !DILocation(line: 660, column: 7, scope: !5010)
!5029 = !DILocation(line: 661, column: 7, scope: !5010)
!5030 = !DILocation(line: 662, column: 7, scope: !5010)
!5031 = !DILocation(line: 663, column: 7, scope: !5010)
!5032 = !DILocation(line: 665, column: 2, scope: !5010)
!5033 = !DILocation(line: 666, column: 1, scope: !5010)
!5034 = distinct !DISubprogram(name: "outs", scope: !2534, file: !2534, line: 1319, type: !5035, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5037)
!5035 = !DISubroutineType(types: !5036)
!5036 = !{!109, !3748, !107, !279, !279}
!5037 = !{!5038, !5039, !5040, !5041, !5042, !5043}
!5038 = !DILocalVariable(name: "out", arg: 1, scope: !5034, file: !2534, line: 1319, type: !3748)
!5039 = !DILocalVariable(name: "ctx", arg: 2, scope: !5034, file: !2534, line: 1320, type: !107)
!5040 = !DILocalVariable(name: "sp", arg: 3, scope: !5034, file: !2534, line: 1321, type: !279)
!5041 = !DILocalVariable(name: "ep", arg: 4, scope: !5034, file: !2534, line: 1322, type: !279)
!5042 = !DILocalVariable(name: "count", scope: !5034, file: !2534, line: 1324, type: !232)
!5043 = !DILocalVariable(name: "rc", scope: !5044, file: !2534, line: 1327, type: !109)
!5044 = distinct !DILexicalBlock(scope: !5034, file: !2534, line: 1326, column: 45)
!5045 = !DILocation(line: 0, scope: !5034)
!5046 = !DILocation(line: 1326, column: 2, scope: !5034)
!5047 = !DILocation(line: 1324, column: 9, scope: !5034)
!5048 = !DILocation(line: 1326, column: 13, scope: !5034)
!5049 = !DILocation(line: 1326, column: 19, scope: !5034)
!5050 = !DILocation(line: 1327, column: 21, scope: !5044)
!5051 = !DILocation(line: 1326, column: 36, scope: !5034)
!5052 = !DILocation(line: 1326, column: 39, scope: !5034)
!5053 = !DILocation(line: 1327, column: 24, scope: !5044)
!5054 = !DILocation(line: 1327, column: 16, scope: !5044)
!5055 = !DILocation(line: 1327, column: 12, scope: !5044)
!5056 = !DILocation(line: 0, scope: !5044)
!5057 = !DILocation(line: 1329, column: 10, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5044, file: !2534, line: 1329, column: 7)
!5059 = !DILocation(line: 1329, column: 7, scope: !5044)
!5060 = distinct !{!5060, !5046, !5061}
!5061 = !DILocation(line: 1333, column: 2, scope: !5034)
!5062 = !DILocation(line: 1336, column: 1, scope: !5034)
!5063 = distinct !DISubprogram(name: "encode_uint", scope: !2534, file: !2534, line: 788, type: !5064, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5066)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{!285, !2556, !4667, !285, !279}
!5066 = !{!5067, !5068, !5069, !5070, !5071, !5072, !5074, !5075}
!5067 = !DILocalVariable(name: "value", arg: 1, scope: !5063, file: !2534, line: 788, type: !2556)
!5068 = !DILocalVariable(name: "conv", arg: 2, scope: !5063, file: !2534, line: 789, type: !4667)
!5069 = !DILocalVariable(name: "bps", arg: 3, scope: !5063, file: !2534, line: 790, type: !285)
!5070 = !DILocalVariable(name: "bpe", arg: 4, scope: !5063, file: !2534, line: 791, type: !279)
!5071 = !DILocalVariable(name: "upcase", scope: !5063, file: !2534, line: 793, type: !360)
!5072 = !DILocalVariable(name: "radix", scope: !5063, file: !2534, line: 794, type: !5073)
!5073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5074 = !DILocalVariable(name: "bp", scope: !5063, file: !2534, line: 795, type: !285)
!5075 = !DILocalVariable(name: "lsv", scope: !5076, file: !2534, line: 798, type: !32)
!5076 = distinct !DILexicalBlock(scope: !5063, file: !2534, line: 797, column: 5)
!5077 = !DILocation(line: 0, scope: !5063)
!5078 = !DILocation(line: 793, column: 35, scope: !5063)
!5079 = !DILocation(line: 793, column: 24, scope: !5063)
!5080 = !DILocation(line: 793, column: 16, scope: !5063)
!5081 = !DILocation(line: 794, column: 29, scope: !5063)
!5082 = !DILocation(line: 795, column: 24, scope: !5063)
!5083 = !DILocation(line: 795, column: 17, scope: !5063)
!5084 = !DILocation(line: 797, column: 2, scope: !5063)
!5085 = !DILocation(line: 802, column: 9, scope: !5076)
!5086 = !DILocation(line: 798, column: 22, scope: !5076)
!5087 = !DILocation(line: 0, scope: !5076)
!5088 = !DILocation(line: 800, column: 16, scope: !5076)
!5089 = !DILocation(line: 800, column: 11, scope: !5076)
!5090 = !DILocation(line: 800, column: 4, scope: !5076)
!5091 = !DILocation(line: 800, column: 9, scope: !5076)
!5092 = !DILocation(line: 803, column: 18, scope: !5063)
!5093 = !DILocation(line: 803, column: 24, scope: !5063)
!5094 = !DILocation(line: 803, column: 2, scope: !5076)
!5095 = distinct !{!5095, !5084, !5096}
!5096 = !DILocation(line: 803, column: 37, scope: !5063)
!5097 = !DILocation(line: 808, column: 12, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5063, file: !2534, line: 808, column: 6)
!5099 = !DILocation(line: 808, column: 6, scope: !5063)
!5100 = !DILocation(line: 809, column: 7, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5098, file: !2534, line: 808, column: 23)
!5102 = !DILocation(line: 813, column: 3, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5104, file: !2534, line: 811, column: 27)
!5104 = distinct !DILexicalBlock(scope: !5105, file: !2534, line: 811, column: 14)
!5105 = distinct !DILexicalBlock(scope: !5101, file: !2534, line: 809, column: 7)
!5106 = !DILocation(line: 0, scope: !5105)
!5107 = !DILocation(line: 818, column: 2, scope: !5063)
!5108 = distinct !DISubprogram(name: "store_count", scope: !2534, file: !2534, line: 1280, type: !5109, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5113)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{null, !5111, !107, !109}
!5111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5112, size: 32)
!5112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4634)
!5113 = !{!5114, !5115, !5116}
!5114 = !DILocalVariable(name: "conv", arg: 1, scope: !5108, file: !2534, line: 1280, type: !5111)
!5115 = !DILocalVariable(name: "dp", arg: 2, scope: !5108, file: !2534, line: 1281, type: !107)
!5116 = !DILocalVariable(name: "count", arg: 3, scope: !5108, file: !2534, line: 1282, type: !109)
!5117 = !DILocation(line: 0, scope: !5108)
!5118 = !DILocation(line: 1284, column: 38, scope: !5108)
!5119 = !DILocation(line: 1284, column: 2, scope: !5108)
!5120 = !DILocation(line: 1286, column: 4, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5108, file: !2534, line: 1284, column: 50)
!5122 = !DILocation(line: 1286, column: 14, scope: !5121)
!5123 = !DILocation(line: 1287, column: 3, scope: !5121)
!5124 = !DILocation(line: 1289, column: 24, scope: !5121)
!5125 = !DILocation(line: 1289, column: 22, scope: !5121)
!5126 = !DILocation(line: 1290, column: 3, scope: !5121)
!5127 = !DILocation(line: 1292, column: 18, scope: !5121)
!5128 = !DILocation(line: 1292, column: 4, scope: !5121)
!5129 = !DILocation(line: 1292, column: 16, scope: !5121)
!5130 = !DILocation(line: 1293, column: 3, scope: !5121)
!5131 = !DILocation(line: 1295, column: 4, scope: !5121)
!5132 = !DILocation(line: 1295, column: 15, scope: !5121)
!5133 = !DILocation(line: 1296, column: 3, scope: !5121)
!5134 = !DILocation(line: 1298, column: 22, scope: !5121)
!5135 = !DILocation(line: 1298, column: 4, scope: !5121)
!5136 = !DILocation(line: 1298, column: 20, scope: !5121)
!5137 = !DILocation(line: 1299, column: 3, scope: !5121)
!5138 = !DILocation(line: 1301, column: 21, scope: !5121)
!5139 = !DILocation(line: 1301, column: 4, scope: !5121)
!5140 = !DILocation(line: 1301, column: 19, scope: !5121)
!5141 = !DILocation(line: 1302, column: 3, scope: !5121)
!5142 = !DILocation(line: 1304, column: 4, scope: !5121)
!5143 = !DILocation(line: 1304, column: 17, scope: !5121)
!5144 = !DILocation(line: 1305, column: 3, scope: !5121)
!5145 = !DILocation(line: 1307, column: 4, scope: !5121)
!5146 = !DILocation(line: 1307, column: 20, scope: !5121)
!5147 = !DILocation(line: 1308, column: 3, scope: !5121)
!5148 = !DILocation(line: 1316, column: 1, scope: !5108)
!5149 = distinct !DISubprogram(name: "isupper", scope: !5150, file: !5150, line: 16, type: !303, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5151)
!5150 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5151 = !{!5152}
!5152 = !DILocalVariable(name: "a", arg: 1, scope: !5149, file: !5150, line: 16, type: !109)
!5153 = !DILocation(line: 0, scope: !5149)
!5154 = !DILocation(line: 18, column: 29, scope: !5149)
!5155 = !DILocation(line: 18, column: 45, scope: !5149)
!5156 = !DILocation(line: 18, column: 2, scope: !5149)
!5157 = distinct !DISubprogram(name: "conversion_radix", scope: !2534, file: !2534, line: 761, type: !5158, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5160)
!5158 = !DISubroutineType(types: !5159)
!5159 = !{!232, !148}
!5160 = !{!5161}
!5161 = !DILocalVariable(name: "specifier", arg: 1, scope: !5157, file: !2534, line: 761, type: !148)
!5162 = !DILocation(line: 0, scope: !5157)
!5163 = !DILocation(line: 763, column: 2, scope: !5157)
!5164 = !DILocation(line: 770, column: 3, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5157, file: !2534, line: 763, column: 21)
!5166 = !DILocation(line: 774, column: 3, scope: !5165)
!5167 = !DILocation(line: 0, scope: !5165)
!5168 = !DILocation(line: 776, column: 1, scope: !5157)
!5169 = distinct !DISubprogram(name: "extract_flags", scope: !2534, file: !2534, line: 339, type: !5011, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5170)
!5170 = !{!5171, !5172, !5173}
!5171 = !DILocalVariable(name: "conv", arg: 1, scope: !5169, file: !2534, line: 339, type: !4667)
!5172 = !DILocalVariable(name: "sp", arg: 2, scope: !5169, file: !2534, line: 340, type: !279)
!5173 = !DILocalVariable(name: "loop", scope: !5169, file: !2534, line: 342, type: !360)
!5174 = !DILocation(line: 0, scope: !5169)
!5175 = !DILocation(line: 344, column: 2, scope: !5169)
!5176 = !DILocation(line: 345, column: 11, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5169, file: !2534, line: 344, column: 5)
!5178 = !DILocation(line: 345, column: 3, scope: !5177)
!5179 = !DILocation(line: 351, column: 4, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5177, file: !2534, line: 345, column: 16)
!5181 = !DILocation(line: 354, column: 4, scope: !5180)
!5182 = !DILocation(line: 357, column: 4, scope: !5180)
!5183 = !DILocation(line: 360, column: 4, scope: !5180)
!5184 = !DILocation(line: 0, scope: !5180)
!5185 = !DILocation(line: 370, column: 12, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5169, file: !2534, line: 370, column: 6)
!5187 = !DILocation(line: 370, column: 22, scope: !5186)
!5188 = !DILocation(line: 371, column: 19, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5186, file: !2534, line: 370, column: 42)
!5190 = !DILocation(line: 372, column: 2, scope: !5189)
!5191 = !DILocation(line: 376, column: 2, scope: !5169)
!5192 = distinct !DISubprogram(name: "extract_width", scope: !2534, file: !2534, line: 388, type: !5011, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5193)
!5193 = !{!5194, !5195, !5196, !5197}
!5194 = !DILocalVariable(name: "conv", arg: 1, scope: !5192, file: !2534, line: 388, type: !4667)
!5195 = !DILocalVariable(name: "sp", arg: 2, scope: !5192, file: !2534, line: 389, type: !279)
!5196 = !DILocalVariable(name: "wp", scope: !5192, file: !2534, line: 398, type: !279)
!5197 = !DILocalVariable(name: "width", scope: !5192, file: !2534, line: 399, type: !232)
!5198 = !DILocation(line: 0, scope: !5192)
!5199 = !DILocation(line: 391, column: 8, scope: !5192)
!5200 = !DILocation(line: 391, column: 22, scope: !5192)
!5201 = !DILocation(line: 393, column: 6, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5192, file: !2534, line: 393, column: 6)
!5203 = !DILocation(line: 393, column: 10, scope: !5202)
!5204 = !DILocation(line: 393, column: 6, scope: !5192)
!5205 = !DILocation(line: 394, column: 20, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5202, file: !2534, line: 393, column: 18)
!5207 = !DILocation(line: 395, column: 10, scope: !5206)
!5208 = !DILocation(line: 395, column: 3, scope: !5206)
!5209 = !DILocation(line: 399, column: 17, scope: !5192)
!5210 = !DILocation(line: 401, column: 6, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5192, file: !2534, line: 401, column: 6)
!5212 = !DILocation(line: 401, column: 9, scope: !5211)
!5213 = !DILocation(line: 401, column: 6, scope: !5192)
!5214 = !DILocation(line: 402, column: 23, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5211, file: !2534, line: 401, column: 16)
!5216 = !DILocation(line: 403, column: 9, scope: !5215)
!5217 = !DILocation(line: 403, column: 21, scope: !5215)
!5218 = !DILocation(line: 405, column: 11, scope: !5215)
!5219 = !DILocation(line: 404, column: 21, scope: !5215)
!5220 = !DILocation(line: 406, column: 2, scope: !5215)
!5221 = !DILocation(line: 409, column: 1, scope: !5192)
!5222 = distinct !DISubprogram(name: "extract_prec", scope: !2534, file: !2534, line: 420, type: !5011, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5223)
!5223 = !{!5224, !5225, !5226}
!5224 = !DILocalVariable(name: "conv", arg: 1, scope: !5222, file: !2534, line: 420, type: !4667)
!5225 = !DILocalVariable(name: "sp", arg: 2, scope: !5222, file: !2534, line: 421, type: !279)
!5226 = !DILocalVariable(name: "prec", scope: !5222, file: !2534, line: 435, type: !232)
!5227 = !DILocation(line: 0, scope: !5222)
!5228 = !DILocation(line: 423, column: 24, scope: !5222)
!5229 = !DILocation(line: 423, column: 28, scope: !5222)
!5230 = !DILocation(line: 423, column: 8, scope: !5222)
!5231 = !DILocation(line: 423, column: 21, scope: !5222)
!5232 = !DILocation(line: 425, column: 6, scope: !5222)
!5233 = !DILocation(line: 428, column: 2, scope: !5222)
!5234 = !DILocation(line: 430, column: 6, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5222, file: !2534, line: 430, column: 6)
!5236 = !DILocation(line: 430, column: 10, scope: !5235)
!5237 = !DILocation(line: 430, column: 6, scope: !5222)
!5238 = !DILocation(line: 431, column: 19, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5235, file: !2534, line: 430, column: 18)
!5240 = !DILocation(line: 432, column: 10, scope: !5239)
!5241 = !DILocation(line: 432, column: 3, scope: !5239)
!5242 = !DILocation(line: 435, column: 16, scope: !5222)
!5243 = !DILocation(line: 437, column: 8, scope: !5222)
!5244 = !DILocation(line: 437, column: 19, scope: !5222)
!5245 = !DILocation(line: 439, column: 10, scope: !5222)
!5246 = !DILocation(line: 438, column: 20, scope: !5222)
!5247 = !DILocation(line: 441, column: 9, scope: !5222)
!5248 = !DILocation(line: 442, column: 1, scope: !5222)
!5249 = distinct !DISubprogram(name: "extract_length", scope: !2534, file: !2534, line: 453, type: !5011, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5250)
!5250 = !{!5251, !5252}
!5251 = !DILocalVariable(name: "conv", arg: 1, scope: !5249, file: !2534, line: 453, type: !4667)
!5252 = !DILocalVariable(name: "sp", arg: 2, scope: !5249, file: !2534, line: 454, type: !279)
!5253 = !DILocation(line: 0, scope: !5249)
!5254 = !DILocation(line: 456, column: 10, scope: !5249)
!5255 = !DILocation(line: 456, column: 2, scope: !5249)
!5256 = !DILocation(line: 458, column: 8, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5258, file: !2534, line: 458, column: 7)
!5258 = distinct !DILexicalBlock(scope: !5249, file: !2534, line: 456, column: 15)
!5259 = !DILocation(line: 458, column: 7, scope: !5257)
!5260 = !DILocation(line: 458, column: 13, scope: !5257)
!5261 = !DILocation(line: 0, scope: !5257)
!5262 = !DILocation(line: 458, column: 7, scope: !5258)
!5263 = !DILocation(line: 459, column: 21, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5257, file: !2534, line: 458, column: 21)
!5265 = !DILocation(line: 460, column: 4, scope: !5264)
!5266 = !DILocation(line: 461, column: 3, scope: !5264)
!5267 = !DILocation(line: 462, column: 21, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5257, file: !2534, line: 461, column: 10)
!5269 = !DILocation(line: 466, column: 8, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5258, file: !2534, line: 466, column: 7)
!5271 = !DILocation(line: 466, column: 7, scope: !5270)
!5272 = !DILocation(line: 466, column: 13, scope: !5270)
!5273 = !DILocation(line: 0, scope: !5270)
!5274 = !DILocation(line: 466, column: 7, scope: !5258)
!5275 = !DILocation(line: 467, column: 21, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5270, file: !2534, line: 466, column: 21)
!5277 = !DILocation(line: 468, column: 4, scope: !5276)
!5278 = !DILocation(line: 469, column: 3, scope: !5276)
!5279 = !DILocation(line: 470, column: 21, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5270, file: !2534, line: 469, column: 10)
!5281 = !DILocation(line: 474, column: 9, scope: !5258)
!5282 = !DILocation(line: 474, column: 20, scope: !5258)
!5283 = !DILocation(line: 475, column: 3, scope: !5258)
!5284 = !DILocation(line: 476, column: 3, scope: !5258)
!5285 = !DILocation(line: 478, column: 9, scope: !5258)
!5286 = !DILocation(line: 478, column: 20, scope: !5258)
!5287 = !DILocation(line: 479, column: 3, scope: !5258)
!5288 = !DILocation(line: 480, column: 3, scope: !5258)
!5289 = !DILocation(line: 482, column: 9, scope: !5258)
!5290 = !DILocation(line: 482, column: 20, scope: !5258)
!5291 = !DILocation(line: 483, column: 3, scope: !5258)
!5292 = !DILocation(line: 484, column: 3, scope: !5258)
!5293 = !DILocation(line: 486, column: 9, scope: !5258)
!5294 = !DILocation(line: 486, column: 20, scope: !5258)
!5295 = !DILocation(line: 487, column: 3, scope: !5258)
!5296 = !DILocation(line: 492, column: 21, scope: !5258)
!5297 = !DILocation(line: 493, column: 3, scope: !5258)
!5298 = !DILocation(line: 495, column: 9, scope: !5258)
!5299 = !DILocation(line: 495, column: 20, scope: !5258)
!5300 = !DILocation(line: 496, column: 3, scope: !5258)
!5301 = !DILocation(line: 498, column: 2, scope: !5249)
!5302 = distinct !DISubprogram(name: "extract_specifier", scope: !2534, file: !2534, line: 513, type: !5011, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5303)
!5303 = !{!5304, !5305, !5306, !5307}
!5304 = !DILocalVariable(name: "conv", arg: 1, scope: !5302, file: !2534, line: 513, type: !4667)
!5305 = !DILocalVariable(name: "sp", arg: 2, scope: !5302, file: !2534, line: 514, type: !279)
!5306 = !DILocalVariable(name: "unsupported", scope: !5302, file: !2534, line: 516, type: !360)
!5307 = !DILabel(scope: !5308, name: "int_conv", file: !2534, line: 526)
!5308 = distinct !DILexicalBlock(scope: !5302, file: !2534, line: 520, column: 27)
!5309 = !DILocation(line: 0, scope: !5302)
!5310 = !DILocation(line: 518, column: 20, scope: !5302)
!5311 = !DILocation(line: 518, column: 8, scope: !5302)
!5312 = !DILocation(line: 518, column: 18, scope: !5302)
!5313 = !DILocation(line: 520, column: 2, scope: !5302)
!5314 = !DILocation(line: 525, column: 3, scope: !5308)
!5315 = !DILocation(line: 0, scope: !5308)
!5316 = !DILocation(line: 526, column: 1, scope: !5308)
!5317 = !DILocation(line: 528, column: 24, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5308, file: !2534, line: 528, column: 7)
!5319 = !DILocation(line: 528, column: 7, scope: !5308)
!5320 = !DILocation(line: 535, column: 23, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5308, file: !2534, line: 535, column: 7)
!5322 = !DILocation(line: 535, column: 7, scope: !5308)
!5323 = !DILocation(line: 536, column: 36, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5321, file: !2534, line: 535, column: 31)
!5325 = !DILocation(line: 537, column: 3, scope: !5324)
!5326 = !DILocation(line: 570, column: 9, scope: !5308)
!5327 = !DILocation(line: 570, column: 23, scope: !5308)
!5328 = !DILocation(line: 575, column: 4, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5330, file: !2534, line: 573, column: 48)
!5330 = distinct !DILexicalBlock(scope: !5308, file: !2534, line: 573, column: 7)
!5331 = !DILocation(line: 603, column: 9, scope: !5308)
!5332 = !DILocation(line: 603, column: 23, scope: !5308)
!5333 = !DILocation(line: 605, column: 24, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5308, file: !2534, line: 605, column: 7)
!5335 = !DILocation(line: 605, column: 7, scope: !5308)
!5336 = !DILocation(line: 612, column: 9, scope: !5308)
!5337 = !DILocation(line: 612, column: 23, scope: !5308)
!5338 = !DILocation(line: 619, column: 24, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5308, file: !2534, line: 619, column: 7)
!5340 = !DILocation(line: 619, column: 7, scope: !5308)
!5341 = !DILocation(line: 625, column: 9, scope: !5308)
!5342 = !DILocation(line: 625, column: 17, scope: !5308)
!5343 = !DILocation(line: 626, column: 3, scope: !5308)
!5344 = !DILocation(line: 629, column: 20, scope: !5302)
!5345 = !DILocation(line: 629, column: 8, scope: !5302)
!5346 = !DILocation(line: 518, column: 23, scope: !5302)
!5347 = !DILocation(line: 631, column: 2, scope: !5302)
!5348 = distinct !DISubprogram(name: "extract_decimal", scope: !2534, file: !2534, line: 318, type: !5349, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5351)
!5349 = !DISubroutineType(types: !5350)
!5350 = !{!232, !278}
!5351 = !{!5352, !5353, !5354}
!5352 = !DILocalVariable(name: "str", arg: 1, scope: !5348, file: !2534, line: 318, type: !278)
!5353 = !DILocalVariable(name: "sp", scope: !5348, file: !2534, line: 320, type: !279)
!5354 = !DILocalVariable(name: "val", scope: !5348, file: !2534, line: 321, type: !232)
!5355 = !DILocation(line: 0, scope: !5348)
!5356 = !DILocation(line: 320, column: 19, scope: !5348)
!5357 = !DILocation(line: 323, column: 37, scope: !5348)
!5358 = !DILocation(line: 323, column: 17, scope: !5348)
!5359 = !DILocation(line: 323, column: 9, scope: !5348)
!5360 = !DILocation(line: 323, column: 2, scope: !5348)
!5361 = !DILocation(line: 324, column: 13, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5348, file: !2534, line: 323, column: 43)
!5363 = !DILocation(line: 324, column: 24, scope: !5362)
!5364 = !DILocation(line: 324, column: 19, scope: !5362)
!5365 = !DILocation(line: 324, column: 27, scope: !5362)
!5366 = distinct !{!5366, !5360, !5367}
!5367 = !DILocation(line: 325, column: 2, scope: !5348)
!5368 = !DILocation(line: 326, column: 7, scope: !5348)
!5369 = !DILocation(line: 327, column: 2, scope: !5348)
!5370 = distinct !DISubprogram(name: "isdigit", scope: !5150, file: !5150, line: 43, type: !303, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5371)
!5371 = !{!5372}
!5372 = !DILocalVariable(name: "a", arg: 1, scope: !5370, file: !5150, line: 43, type: !109)
!5373 = !DILocation(line: 0, scope: !5370)
!5374 = !DILocation(line: 45, column: 29, scope: !5370)
!5375 = !DILocation(line: 45, column: 45, scope: !5370)
!5376 = !DILocation(line: 45, column: 2, scope: !5370)
!5377 = distinct !DISubprogram(name: "assert_post_action", scope: !5378, file: !5378, line: 26, type: !5379, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !5381)
!5378 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5379 = !DISubroutineType(types: !5380)
!5380 = !{null, !279, !32}
!5381 = !{!5382, !5383}
!5382 = !DILocalVariable(name: "file", arg: 1, scope: !5377, file: !5378, line: 26, type: !279)
!5383 = !DILocalVariable(name: "line", arg: 2, scope: !5377, file: !5378, line: 26, type: !32)
!5384 = !DILocation(line: 0, scope: !5377)
!5385 = !DILocation(line: 43, column: 2, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5377, file: !5378, line: 43, column: 2)
!5387 = !{i64 2152226199, i64 2152226215, i64 2152226241, i64 2152226269, i64 2152226289}
!5388 = !DILocation(line: 44, column: 1, scope: !5377)
!5389 = distinct !DISubprogram(name: "assert_print", scope: !5378, file: !5378, line: 46, type: !4360, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !5390)
!5390 = !{!5391, !5392}
!5391 = !DILocalVariable(name: "fmt", arg: 1, scope: !5389, file: !5378, line: 46, type: !279)
!5392 = !DILocalVariable(name: "ap", scope: !5389, file: !5378, line: 48, type: !5393)
!5393 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3366, line: 99, baseType: !5394)
!5394 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3366, line: 40, baseType: !5395)
!5395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5378, baseType: !5396)
!5396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5397)
!5397 = !{!5398}
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5396, file: !5378, line: 48, baseType: !107, size: 32)
!5399 = !DILocation(line: 0, scope: !5389)
!5400 = !DILocation(line: 48, column: 2, scope: !5389)
!5401 = !DILocation(line: 48, column: 10, scope: !5389)
!5402 = !DILocation(line: 50, column: 2, scope: !5389)
!5403 = !DILocation(line: 52, column: 2, scope: !5389)
!5404 = !DILocation(line: 54, column: 2, scope: !5389)
!5405 = !DILocation(line: 55, column: 1, scope: !5389)
!5406 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5407, file: !5407, line: 9, type: !3062, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !2045)
!5407 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!5408 = !DILocation(line: 11, column: 1, scope: !5406)
!5409 = !{i64 2147564570, i64 2147564613, i64 2147564653}
!5410 = !DILocation(line: 12, column: 1, scope: !5406)
!5411 = !{i64 2147568797, i64 2147568840, i64 2147568880}
!5412 = !DILocation(line: 13, column: 1, scope: !5406)
!5413 = !{i64 2147569006, i64 2147569049, i64 2147569089}
!5414 = !DILocation(line: 14, column: 1, scope: !5406)
!5415 = !{i64 2147569175, i64 2147569218, i64 2147569258}
!5416 = !DILocation(line: 15, column: 1, scope: !5406)
!5417 = !{i64 2147569338, i64 2147569381, i64 2147569421}
!5418 = !DILocation(line: 16, column: 1, scope: !5406)
!5419 = !{i64 2147569522, i64 2147569565, i64 2147569605}
!5420 = !DILocation(line: 17, column: 1, scope: !5406)
!5421 = !{i64 2147569701, i64 2147569744, i64 2147569784}
!5422 = !DILocation(line: 18, column: 1, scope: !5406)
!5423 = !{i64 2147569943, i64 2147569986, i64 2147570026}
!5424 = !DILocation(line: 19, column: 1, scope: !5406)
!5425 = !{i64 2147570178, i64 2147570221, i64 2147570261}
!5426 = !DILocation(line: 20, column: 1, scope: !5406)
!5427 = !{i64 2147570364, i64 2147570407, i64 2147570447}
!5428 = !DILocation(line: 21, column: 1, scope: !5406)
!5429 = !{i64 2147570580, i64 2147570623, i64 2147570663}
!5430 = !DILocation(line: 22, column: 1, scope: !5406)
!5431 = !{i64 2147570783, i64 2147570826, i64 2147570866}
!5432 = !DILocation(line: 23, column: 1, scope: !5406)
!5433 = !{i64 2147570986, i64 2147571029, i64 2147571069}
!5434 = !DILocation(line: 24, column: 1, scope: !5406)
!5435 = !{i64 2147571161, i64 2147571204, i64 2147571244}
!5436 = !DILocation(line: 25, column: 1, scope: !5406)
!5437 = !{i64 2147571369, i64 2147571412, i64 2147571452}
!5438 = !DILocation(line: 26, column: 1, scope: !5406)
!5439 = !{i64 2147571573, i64 2147571616, i64 2147571656}
!5440 = !DILocation(line: 27, column: 1, scope: !5406)
!5441 = !{i64 2147571766, i64 2147571809, i64 2147571849}
!5442 = !DILocation(line: 28, column: 1, scope: !5406)
!5443 = !{i64 2147571968, i64 2147572011, i64 2147572051}
!5444 = !DILocation(line: 29, column: 1, scope: !5406)
!5445 = !{i64 2147572167, i64 2147572210, i64 2147572250}
!5446 = !DILocation(line: 30, column: 1, scope: !5406)
!5447 = !{i64 2147572394, i64 2147572437, i64 2147572477}
!5448 = !DILocation(line: 31, column: 1, scope: !5406)
!5449 = !{i64 2147572596, i64 2147572639, i64 2147572679}
!5450 = !DILocation(line: 32, column: 1, scope: !5406)
!5451 = !{i64 2147572811, i64 2147572854, i64 2147572894}
!5452 = !DILocation(line: 33, column: 1, scope: !5406)
!5453 = !{i64 2147573028, i64 2147573071, i64 2147573111}
!5454 = !DILocation(line: 34, column: 1, scope: !5406)
!5455 = !{i64 2147573200, i64 2147573243, i64 2147573283}
!5456 = !DILocation(line: 35, column: 1, scope: !5406)
!5457 = !{i64 2147573402, i64 2147573445, i64 2147573485}
!5458 = !DILocation(line: 36, column: 1, scope: !5406)
!5459 = !{i64 2147573628, i64 2147573671, i64 2147573711}
!5460 = !DILocation(line: 37, column: 1, scope: !5406)
!5461 = !{i64 2147573827, i64 2147573870, i64 2147573910}
!5462 = !DILocation(line: 38, column: 1, scope: !5406)
!5463 = !{i64 2147574002, i64 2147574045, i64 2147574085}
!5464 = !DILocation(line: 39, column: 1, scope: !5406)
!5465 = !{i64 2147574255, i64 2147574298, i64 2147574338}
!5466 = !DILocation(line: 40, column: 1, scope: !5406)
!5467 = !{i64 2147574493, i64 2147574536, i64 2147574576}
!5468 = !DILocation(line: 41, column: 1, scope: !5406)
!5469 = !{i64 2147574728, i64 2147574771, i64 2147574811}
!5470 = !DILocation(line: 42, column: 1, scope: !5406)
!5471 = !{i64 2147574960, i64 2147575003, i64 2147575043}
!5472 = !DILocation(line: 43, column: 1, scope: !5406)
!5473 = !{i64 2147575186, i64 2147575229, i64 2147575269}
!5474 = !DILocation(line: 44, column: 1, scope: !5406)
!5475 = !{i64 2147575445, i64 2147575488, i64 2147575528}
!5476 = !DILocation(line: 45, column: 1, scope: !5406)
!5477 = !{i64 2147575671, i64 2147575714, i64 2147575754}
!5478 = !DILocation(line: 46, column: 1, scope: !5406)
!5479 = !{i64 2147575912, i64 2147575955, i64 2147575995}
!5480 = !DILocation(line: 47, column: 1, scope: !5406)
!5481 = !{i64 2147576156, i64 2147576199, i64 2147576239}
!5482 = !DILocation(line: 48, column: 1, scope: !5406)
!5483 = !{i64 2147576397, i64 2147576440, i64 2147576480}
!5484 = !DILocation(line: 49, column: 1, scope: !5406)
!5485 = !{i64 2147576632, i64 2147576675, i64 2147576715}
!5486 = !DILocation(line: 50, column: 1, scope: !5406)
!5487 = !{i64 2147576858, i64 2147576901, i64 2147576941}
!5488 = !DILocation(line: 51, column: 1, scope: !5406)
!5489 = !{i64 2147577084, i64 2147577127, i64 2147577167}
!5490 = !DILocation(line: 52, column: 1, scope: !5406)
!5491 = !{i64 2147577328, i64 2147577371, i64 2147577411}
!5492 = !DILocation(line: 53, column: 1, scope: !5406)
!5493 = !{i64 2147581627, i64 2147581670, i64 2147581710}
!5494 = !DILocation(line: 54, column: 1, scope: !5406)
!5495 = !{i64 2147581901, i64 2147581944, i64 2147581984}
!5496 = !DILocation(line: 55, column: 1, scope: !5406)
!5497 = !{i64 2147582139, i64 2147582182, i64 2147582222}
!5498 = !DILocation(line: 56, column: 1, scope: !5406)
!5499 = !{i64 2147582383, i64 2147582426, i64 2147582466}
!5500 = !DILocation(line: 57, column: 1, scope: !5406)
!5501 = !{i64 2147582633, i64 2147582676, i64 2147582716}
!5502 = !DILocation(line: 58, column: 1, scope: !5406)
!5503 = !{i64 2147582880, i64 2147582923, i64 2147582963}
!5504 = !DILocation(line: 59, column: 1, scope: !5406)
!5505 = !{i64 2147583115, i64 2147583158, i64 2147583198}
!5506 = !DILocation(line: 60, column: 1, scope: !5406)
!5507 = !{i64 2147583350, i64 2147583393, i64 2147583433}
!5508 = !DILocation(line: 61, column: 1, scope: !5406)
!5509 = !{i64 2147583585, i64 2147583628, i64 2147583668}
!5510 = !DILocation(line: 62, column: 1, scope: !5406)
!5511 = !{i64 2147583823, i64 2147583866, i64 2147583906}
!5512 = !DILocation(line: 63, column: 1, scope: !5406)
!5513 = !{i64 2147584064, i64 2147584107, i64 2147584147}
!5514 = !DILocation(line: 64, column: 1, scope: !5406)
!5515 = !{i64 2147584323, i64 2147584366, i64 2147584406}
!5516 = !DILocation(line: 65, column: 1, scope: !5406)
!5517 = !{i64 2147584603, i64 2147584646, i64 2147584686}
!5518 = !DILocation(line: 66, column: 1, scope: !5406)
!5519 = !{i64 2147584832, i64 2147584875, i64 2147584915}
!5520 = !DILocation(line: 67, column: 1, scope: !5406)
!5521 = !{i64 2147585040, i64 2147585083, i64 2147585123}
!5522 = !DILocation(line: 68, column: 1, scope: !5406)
!5523 = !{i64 2147585251, i64 2147585294, i64 2147585334}
!5524 = !DILocation(line: 69, column: 1, scope: !5406)
!5525 = !{i64 2147585486, i64 2147585529, i64 2147585569}
!5526 = !DILocation(line: 70, column: 1, scope: !5406)
!5527 = !{i64 2147585715, i64 2147585758, i64 2147585798}
!5528 = !DILocation(line: 71, column: 1, scope: !5406)
!5529 = !{i64 2147585932, i64 2147585975, i64 2147586015}
!5530 = !DILocation(line: 72, column: 1, scope: !5406)
!5531 = !{i64 2147586161, i64 2147586204, i64 2147586244}
!5532 = !DILocation(line: 73, column: 1, scope: !5406)
!5533 = !{i64 2147586399, i64 2147586442, i64 2147586482}
!5534 = !DILocation(line: 74, column: 1, scope: !5406)
!5535 = !{i64 2147586631, i64 2147586674, i64 2147586714}
!5536 = !DILocation(line: 75, column: 1, scope: !5406)
!5537 = !{i64 2147586857, i64 2147586900, i64 2147586940}
!5538 = !DILocation(line: 76, column: 1, scope: !5406)
!5539 = !{i64 2147587074, i64 2147587117, i64 2147587157}
!5540 = !DILocation(line: 77, column: 1, scope: !5406)
!5541 = !{i64 2147587306, i64 2147587349, i64 2147587389}
!5542 = !DILocation(line: 78, column: 1, scope: !5406)
!5543 = !{i64 2147587532, i64 2147587575, i64 2147587615}
!5544 = !DILocation(line: 79, column: 1, scope: !5406)
!5545 = !{i64 2147587746, i64 2147587789, i64 2147587829}
!5546 = !DILocation(line: 80, column: 1, scope: !5406)
!5547 = !{i64 2147587966, i64 2147588009, i64 2147588049}
!5548 = !DILocation(line: 81, column: 1, scope: !5406)
!5549 = !{i64 2147588198, i64 2147588241, i64 2147588281}
!5550 = !DILocation(line: 82, column: 1, scope: !5406)
!5551 = !{i64 2147588406, i64 2147588449, i64 2147588489}
!5552 = !DILocation(line: 83, column: 1, scope: !5406)
!5553 = !{i64 2147588611, i64 2147588654, i64 2147588694}
!5554 = !DILocation(line: 84, column: 1, scope: !5406)
!5555 = !{i64 2147588828, i64 2147588871, i64 2147588911}
!5556 = !DILocation(line: 85, column: 1, scope: !5406)
!5557 = !{i64 2147589042, i64 2147589085, i64 2147589125}
!5558 = !DILocation(line: 86, column: 1, scope: !5406)
!5559 = !{i64 2147589268, i64 2147589311, i64 2147589351}
!5560 = !DILocation(line: 87, column: 1, scope: !5406)
!5561 = !{i64 2147589488, i64 2147589531, i64 2147589571}
!5562 = !DILocation(line: 88, column: 1, scope: !5406)
!5563 = !{i64 2147589693, i64 2147589736, i64 2147589776}
!5564 = !DILocation(line: 89, column: 1, scope: !5406)
!5565 = !{i64 2147593986, i64 2147594029, i64 2147594069}
!5566 = !DILocation(line: 90, column: 1, scope: !5406)
!5567 = !{i64 2147594221, i64 2147594264, i64 2147594304}
!5568 = !DILocation(line: 91, column: 1, scope: !5406)
!5569 = !{i64 2147594471, i64 2147594514, i64 2147594554}
!5570 = !DILocation(line: 92, column: 1, scope: !5406)
!5571 = !{i64 2147594721, i64 2147594764, i64 2147594804}
!5572 = !DILocation(line: 93, column: 1, scope: !5406)
!5573 = !{i64 2147594959, i64 2147595002, i64 2147595042}
!5574 = !DILocation(line: 94, column: 1, scope: !5406)
!5575 = !{i64 2147595170, i64 2147595213, i64 2147595253}
!5576 = !DILocation(line: 95, column: 1, scope: !5406)
!5577 = !{i64 2147595387, i64 2147595430, i64 2147595470}
!5578 = !DILocation(line: 96, column: 1, scope: !5406)
!5579 = !{i64 2147595583, i64 2147595626, i64 2147595666}
!5580 = !DILocation(line: 97, column: 1, scope: !5406)
!5581 = !{i64 2147595785, i64 2147595828, i64 2147595868}
!5582 = !DILocation(line: 98, column: 1, scope: !5406)
!5583 = !{i64 2147595978, i64 2147596021, i64 2147596061}
!5584 = !DILocation(line: 99, column: 1, scope: !5406)
!5585 = !{i64 2147596186, i64 2147596229, i64 2147596269}
!5586 = !DILocation(line: 100, column: 1, scope: !5406)
!5587 = !{i64 2147596382, i64 2147596425, i64 2147596465}
!5588 = !DILocation(line: 101, column: 1, scope: !5406)
!5589 = !{i64 2147596587, i64 2147596630, i64 2147596670}
!5590 = !DILocation(line: 102, column: 1, scope: !5406)
!5591 = !{i64 2147596798, i64 2147596841, i64 2147596881}
!5592 = !DILocation(line: 103, column: 1, scope: !5406)
!5593 = !{i64 2147596997, i64 2147597040, i64 2147597080}
!5594 = !DILocation(line: 104, column: 1, scope: !5406)
!5595 = !{i64 2147597172, i64 2147597215, i64 2147597255}
!5596 = !DILocation(line: 105, column: 1, scope: !5406)
!5597 = !{i64 2147597356, i64 2147597399, i64 2147597439}
!5598 = !DILocation(line: 106, column: 1, scope: !5406)
!5599 = !{i64 2147597558, i64 2147597601, i64 2147597641}
!5600 = !DILocation(line: 107, column: 1, scope: !5406)
!5601 = !{i64 2147597760, i64 2147597803, i64 2147597843}
!5602 = !DILocation(line: 108, column: 1, scope: !5406)
!5603 = !{i64 2147597965, i64 2147598008, i64 2147598048}
!5604 = !DILocation(line: 109, column: 1, scope: !5406)
!5605 = !{i64 2147598158, i64 2147598201, i64 2147598241}
!5606 = !DILocation(line: 110, column: 1, scope: !5406)
!5607 = !{i64 2147598324, i64 2147598367, i64 2147598407}
!5608 = !DILocation(line: 111, column: 1, scope: !5406)
!5609 = !{i64 2147598508, i64 2147598551, i64 2147598591}
!5610 = !DILocation(line: 112, column: 1, scope: !5406)
!5611 = !{i64 2147598698, i64 2147598741, i64 2147598781}
!5612 = !DILocation(line: 113, column: 1, scope: !5406)
!5613 = !{i64 2147598882, i64 2147598925, i64 2147598965}
!5614 = !DILocation(line: 114, column: 1, scope: !5406)
!5615 = !{i64 2147599096, i64 2147599139, i64 2147599179}
!5616 = !DILocation(line: 115, column: 1, scope: !5406)
!5617 = !{i64 2147599307, i64 2147599350, i64 2147599390}
!5618 = !DILocation(line: 116, column: 1, scope: !5406)
!5619 = !{i64 2147599530, i64 2147599573, i64 2147599613}
!5620 = !DILocation(line: 117, column: 1, scope: !5406)
!5621 = !{i64 2147599714, i64 2147599757, i64 2147599797}
!5622 = !DILocation(line: 118, column: 1, scope: !5406)
!5623 = !{i64 2147599928, i64 2147599971, i64 2147600011}
!5624 = !DILocation(line: 119, column: 1, scope: !5406)
!5625 = !{i64 2147600094, i64 2147600137, i64 2147600177}
!5626 = !DILocation(line: 120, column: 1, scope: !5406)
!5627 = !{i64 2147600275, i64 2147600318, i64 2147600358}
!5628 = !DILocation(line: 121, column: 1, scope: !5406)
!5629 = !{i64 2147600468, i64 2147600511, i64 2147600551}
!5630 = !DILocation(line: 122, column: 1, scope: !5406)
!5631 = !{i64 2147600694, i64 2147600737, i64 2147600777}
!5632 = !DILocation(line: 123, column: 1, scope: !5406)
!5633 = !{i64 2147600908, i64 2147600951, i64 2147600991}
!5634 = !DILocation(line: 124, column: 1, scope: !5406)
!5635 = !{i64 2147601134, i64 2147601177, i64 2147601217}
!5636 = !DILocation(line: 125, column: 1, scope: !5406)
!5637 = !{i64 2147601351, i64 2147601394, i64 2147601434}
!5638 = !DILocation(line: 126, column: 1, scope: !5406)
!5639 = !{i64 2147601628, i64 2147601671, i64 2147601711}
!5640 = !DILocation(line: 127, column: 1, scope: !5406)
!5641 = !{i64 2147601854, i64 2147601897, i64 2147601937}
!5642 = !DILocation(line: 128, column: 1, scope: !5406)
!5643 = !{i64 2147602050, i64 2147602093, i64 2147602133}
!5644 = !DILocation(line: 129, column: 1, scope: !5406)
!5645 = !{i64 2147602315, i64 2147602358, i64 2147602398}
!5646 = !DILocation(line: 130, column: 1, scope: !5406)
!5647 = !{i64 2147602529, i64 2147602572, i64 2147602612}
!5648 = !DILocation(line: 131, column: 1, scope: !5406)
!5649 = !{i64 2147602704, i64 2147602747, i64 2147602787}
!5650 = !DILocation(line: 132, column: 1, scope: !5406)
!5651 = !{i64 2147607019, i64 2147607062, i64 2147607102}
!5652 = !DILocation(line: 133, column: 1, scope: !5406)
!5653 = !{i64 2147607218, i64 2147607261, i64 2147607301}
!5654 = !DILocation(line: 134, column: 1, scope: !5406)
!5655 = !{i64 2147607460, i64 2147607503, i64 2147607543}
!5656 = !DILocation(line: 135, column: 1, scope: !5406)
!5657 = !{i64 2147607623, i64 2147607666, i64 2147607706}
!5658 = !DILocation(line: 136, column: 1, scope: !5406)
!5659 = !{i64 2147607810, i64 2147607853, i64 2147607893}
!5660 = !DILocation(line: 137, column: 1, scope: !5406)
!5661 = !{i64 2147608018, i64 2147608061, i64 2147608101}
!5662 = !DILocation(line: 138, column: 1, scope: !5406)
!5663 = !{i64 2147608214, i64 2147608257, i64 2147608297}
!5664 = !DILocation(line: 139, column: 1, scope: !5406)
!5665 = !{i64 2147608407, i64 2147608450, i64 2147608490}
!5666 = !DILocation(line: 140, column: 1, scope: !5406)
!5667 = !{i64 2147608589, i64 2147608632, i64 2147608672}
!5668 = !DILocation(line: 141, column: 1, scope: !5406)
!5669 = !{i64 2147608803, i64 2147608846, i64 2147608886}
!5670 = !DILocation(line: 142, column: 1, scope: !5406)
!5671 = !{i64 2147609014, i64 2147609057, i64 2147609097}
!5672 = !DILocation(line: 143, column: 1, scope: !5406)
!5673 = !{i64 2147609234, i64 2147609277, i64 2147609317}
!5674 = !DILocation(line: 144, column: 1, scope: !5406)
!5675 = !{i64 2147609441, i64 2147609484, i64 2147609524}
!5676 = !DILocation(line: 145, column: 1, scope: !5406)
!5677 = !{i64 2147609714, i64 2147609757, i64 2147609797}
!5678 = !DILocation(line: 146, column: 1, scope: !5406)
!5679 = !{i64 2147609962, i64 2147610005, i64 2147610045}
!5680 = !DILocation(line: 147, column: 1, scope: !5406)
!5681 = !{i64 2147610161, i64 2147610204, i64 2147610244}
!5682 = !DILocation(line: 148, column: 1, scope: !5406)
!5683 = !{i64 2147610396, i64 2147610439, i64 2147610479}
!5684 = !DILocation(line: 149, column: 1, scope: !5406)
!5685 = !{i64 2147610646, i64 2147610689, i64 2147610729}
!5686 = !DILocation(line: 150, column: 1, scope: !5406)
!5687 = !{i64 2147610848, i64 2147610891, i64 2147610931}
!5688 = !DILocation(line: 151, column: 1, scope: !5406)
!5689 = !{i64 2147611071, i64 2147611114, i64 2147611154}
!5690 = !DILocation(line: 152, column: 1, scope: !5406)
!5691 = !{i64 2147611285, i64 2147611328, i64 2147611368}
!5692 = !DILocation(line: 153, column: 1, scope: !5406)
!5693 = !{i64 2147611529, i64 2147611572, i64 2147611612}
!5694 = !DILocation(line: 154, column: 1, scope: !5406)
!5695 = !{i64 2147611758, i64 2147611801, i64 2147611841}
!5696 = !DILocation(line: 155, column: 1, scope: !5406)
!5697 = !{i64 2147611987, i64 2147612030, i64 2147612070}
!5698 = !DILocation(line: 156, column: 1, scope: !5406)
!5699 = !{i64 2147612195, i64 2147612238, i64 2147612278}
!5700 = !DILocation(line: 157, column: 1, scope: !5406)
!5701 = !{i64 2147612433, i64 2147612476, i64 2147612516}
!5702 = !DILocation(line: 158, column: 1, scope: !5406)
!5703 = !{i64 2147612659, i64 2147612702, i64 2147612742}
!5704 = !DILocation(line: 159, column: 1, scope: !5406)
!5705 = !{i64 2147612918, i64 2147612961, i64 2147613001}
!5706 = !DILocation(line: 160, column: 1, scope: !5406)
!5707 = !{i64 2147613138, i64 2147613181, i64 2147613221}
!5708 = !DILocation(line: 161, column: 1, scope: !5406)
!5709 = !{i64 2147613370, i64 2147613413, i64 2147613453}
!5710 = !DILocation(line: 162, column: 1, scope: !5406)
!5711 = !{i64 2147613611, i64 2147613654, i64 2147613694}
!5712 = !DILocation(line: 163, column: 1, scope: !5406)
!5713 = !{i64 2147613852, i64 2147613895, i64 2147613935}
!5714 = !DILocation(line: 164, column: 1, scope: !5406)
!5715 = !{i64 2147614075, i64 2147614118, i64 2147614158}
!5716 = !DILocation(line: 165, column: 1, scope: !5406)
!5717 = !{i64 2147614292, i64 2147614335, i64 2147614375}
!5718 = !DILocation(line: 166, column: 1, scope: !5406)
!5719 = !{i64 2147614533, i64 2147614576, i64 2147614616}
!5720 = !DILocation(line: 167, column: 1, scope: !5406)
!5721 = !{i64 2147614720, i64 2147614763, i64 2147614803}
!5722 = !DILocation(line: 168, column: 1, scope: !5406)
!5723 = !{i64 2147614883, i64 2147614926, i64 2147614966}
!5724 = !DILocation(line: 169, column: 1, scope: !5406)
!5725 = !{i64 2147615088, i64 2147615131, i64 2147615171}
!5726 = !DILocation(line: 170, column: 1, scope: !5406)
!5727 = !{i64 2147615281, i64 2147615324, i64 2147615364}
!5728 = !DILocation(line: 171, column: 1, scope: !5406)
!5729 = !{i64 2147615540, i64 2147615583, i64 2147615623}
!5730 = !DILocation(line: 172, column: 1, scope: !5406)
!5731 = !{i64 2147619824, i64 2147619867, i64 2147619907}
!5732 = !DILocation(line: 173, column: 1, scope: !5406)
!5733 = !{i64 2147620053, i64 2147620096, i64 2147620136}
!5734 = !DILocation(line: 174, column: 1, scope: !5406)
!5735 = !{i64 2147620267, i64 2147620310, i64 2147620350}
!5736 = !DILocation(line: 175, column: 1, scope: !5406)
!5737 = !{i64 2147620469, i64 2147620512, i64 2147620552}
!5738 = !DILocation(line: 176, column: 1, scope: !5406)
!5739 = !{i64 2147620665, i64 2147620708, i64 2147620748}
!5740 = !DILocation(line: 177, column: 1, scope: !5406)
!5741 = !{i64 2147620877, i64 2147620920, i64 2147620960}
!5742 = !DILocation(line: 178, column: 1, scope: !5406)
!5743 = !{i64 2147621098, i64 2147621141, i64 2147621181}
!5744 = !DILocation(line: 179, column: 1, scope: !5406)
!5745 = !{i64 2147621312, i64 2147621355, i64 2147621395}
!5746 = !DILocation(line: 180, column: 1, scope: !5406)
!5747 = !{i64 2147621502, i64 2147621545, i64 2147621585}
!5748 = !DILocation(line: 181, column: 1, scope: !5406)
!5749 = !{i64 2147621701, i64 2147621744, i64 2147621784}
!5750 = !DILocation(line: 182, column: 1, scope: !5406)
!5751 = !{i64 2147621906, i64 2147621949, i64 2147621989}
!5752 = !DILocation(line: 183, column: 1, scope: !5406)
!5753 = !{i64 2147622126, i64 2147622169, i64 2147622209}
!5754 = !DILocation(line: 184, column: 1, scope: !5406)
!5755 = !{i64 2147622327, i64 2147622370, i64 2147622410}
!5756 = !DILocation(line: 185, column: 1, scope: !5406)
!5757 = !{i64 2147622526, i64 2147622569, i64 2147622609}
!5758 = !DILocation(line: 186, column: 1, scope: !5406)
!5759 = !{i64 2147622731, i64 2147622774, i64 2147622814}
!5760 = !DILocation(line: 187, column: 1, scope: !5406)
!5761 = !{i64 2147622900, i64 2147622943, i64 2147622983}
!5762 = !DILocation(line: 188, column: 1, scope: !5406)
!5763 = !{i64 2147623084, i64 2147623127, i64 2147623167}
!5764 = !DILocation(line: 189, column: 1, scope: !5406)
!5765 = !{i64 2147623268, i64 2147623311, i64 2147623351}
!5766 = !DILocation(line: 190, column: 1, scope: !5406)
!5767 = !{i64 2147623455, i64 2147623498, i64 2147623538}
!5768 = !DILocation(line: 191, column: 1, scope: !5406)
!5769 = !{i64 2147623639, i64 2147623682, i64 2147623722}
!5770 = !DILocation(line: 192, column: 1, scope: !5406)
!5771 = !{i64 2147623826, i64 2147623869, i64 2147623909}
!5772 = !DILocation(line: 193, column: 1, scope: !5406)
!5773 = !{i64 2147624038, i64 2147624081, i64 2147624121}
!5774 = !DILocation(line: 194, column: 1, scope: !5406)
!5775 = !{i64 2147624276, i64 2147624319, i64 2147624359}
!5776 = !DILocation(line: 195, column: 1, scope: !5406)
!5777 = !{i64 2147624506, i64 2147624549, i64 2147624589}
!5778 = !DILocation(line: 196, column: 1, scope: !5406)
!5779 = !{i64 2147624735, i64 2147624778, i64 2147624818}
!5780 = !DILocation(line: 197, column: 1, scope: !5406)
!5781 = !{i64 2147624922, i64 2147624965, i64 2147625005}
!5782 = !DILocation(line: 198, column: 1, scope: !5406)
!5783 = !{i64 2147625118, i64 2147625161, i64 2147625201}
!5784 = !DILocation(line: 199, column: 1, scope: !5406)
!5785 = !{i64 2147625326, i64 2147625369, i64 2147625409}
!5786 = !DILocation(line: 200, column: 1, scope: !5406)
!5787 = !{i64 2147625538, i64 2147625581, i64 2147625621}
!5788 = !DILocation(line: 201, column: 1, scope: !5406)
!5789 = !{i64 2147625737, i64 2147625780, i64 2147625820}
!5790 = !DILocation(line: 202, column: 1, scope: !5406)
!5791 = !{i64 2147625975, i64 2147626018, i64 2147626058}
!5792 = !DILocation(line: 203, column: 1, scope: !5406)
!5793 = !{i64 2147626171, i64 2147626214, i64 2147626254}
!5794 = !DILocation(line: 204, column: 1, scope: !5406)
!5795 = !{i64 2147626373, i64 2147626416, i64 2147626456}
!5796 = !DILocation(line: 205, column: 1, scope: !5406)
!5797 = !{i64 2147626566, i64 2147626609, i64 2147626649}
!5798 = !DILocation(line: 206, column: 1, scope: !5406)
!5799 = !{i64 2147626800, i64 2147626843, i64 2147626883}
!5800 = !DILocation(line: 207, column: 1, scope: !5406)
!5801 = !{i64 2147626963, i64 2147627006, i64 2147627046}
!5802 = !DILocation(line: 208, column: 1, scope: !5406)
!5803 = !{i64 2147627202, i64 2147627245, i64 2147627285}
!5804 = !DILocation(line: 209, column: 1, scope: !5406)
!5805 = !{i64 2147627441, i64 2147627484, i64 2147627524}
!5806 = !DILocation(line: 210, column: 1, scope: !5406)
!5807 = !{i64 2147627677, i64 2147627720, i64 2147627760}
!5808 = !DILocation(line: 211, column: 1, scope: !5406)
!5809 = !{i64 2147627907, i64 2147627950, i64 2147627990}
!5810 = !DILocation(line: 212, column: 1, scope: !5406)
!5811 = !{i64 2147628094, i64 2147628137, i64 2147628177}
!5812 = !DILocation(line: 213, column: 1, scope: !5406)
!5813 = !{i64 2147628293, i64 2147628336, i64 2147628376}
!5814 = !DILocation(line: 214, column: 1, scope: !5406)
!5815 = !{i64 2147628564, i64 2147628607, i64 2147628647}
!5816 = !DILocation(line: 215, column: 1, scope: !5406)
!5817 = !{i64 2147628739, i64 2147628782, i64 2147628822}
!5818 = !DILocation(line: 216, column: 1, scope: !5406)
!5819 = !{i64 2147633034, i64 2147633077, i64 2147633117}
!5820 = !DILocation(line: 217, column: 1, scope: !5406)
!5821 = !{i64 2147633242, i64 2147633285, i64 2147633325}
!5822 = !DILocation(line: 218, column: 1, scope: !5406)
!5823 = !{i64 2147633460, i64 2147633503, i64 2147633543}
!5824 = !DILocation(line: 219, column: 1, scope: !5406)
!5825 = !{i64 2147633650, i64 2147633693, i64 2147633733}
!5826 = !DILocation(line: 220, column: 1, scope: !5406)
!5827 = !{i64 2147633882, i64 2147633925, i64 2147633965}
!5828 = !DILocation(line: 221, column: 1, scope: !5406)
!5829 = !{i64 2147634102, i64 2147634145, i64 2147634185}
!5830 = !DILocation(line: 222, column: 1, scope: !5406)
!5831 = !{i64 2147634298, i64 2147634341, i64 2147634381}
!5832 = !DILocation(line: 223, column: 1, scope: !5406)
!5833 = !{i64 2147634504, i64 2147634547, i64 2147634587}
!5834 = !DILocation(line: 224, column: 1, scope: !5406)
!5835 = !{i64 2147634709, i64 2147634752, i64 2147634792}
!5836 = !DILocation(line: 225, column: 1, scope: !5406)
!5837 = !{i64 2147634935, i64 2147634978, i64 2147635018}
!5838 = !DILocation(line: 226, column: 1, scope: !5406)
!5839 = !{i64 2147635143, i64 2147635186, i64 2147635226}
!5840 = !DILocation(line: 227, column: 1, scope: !5406)
!5841 = !{i64 2147635339, i64 2147635382, i64 2147635422}
!5842 = !DILocation(line: 228, column: 1, scope: !5406)
!5843 = !{i64 2147635571, i64 2147635614, i64 2147635654}
!5844 = !DILocation(line: 229, column: 1, scope: !5406)
!5845 = !{i64 2147635755, i64 2147635798, i64 2147635838}
!5846 = !DILocation(line: 230, column: 1, scope: !5406)
!5847 = !{i64 2147635964, i64 2147636007, i64 2147636047}
!5848 = !DILocation(line: 231, column: 1, scope: !5406)
!5849 = !{i64 2147636172, i64 2147636215, i64 2147636255}
!5850 = !DILocation(line: 232, column: 1, scope: !5406)
!5851 = !{i64 2147636368, i64 2147636411, i64 2147636451}
!5852 = !DILocation(line: 233, column: 1, scope: !5406)
!5853 = !{i64 2147636552, i64 2147636595, i64 2147636635}
!5854 = !DILocation(line: 234, column: 1, scope: !5406)
!5855 = !{i64 2147636778, i64 2147636821, i64 2147636861}
!5856 = !DILocation(line: 235, column: 1, scope: !5406)
!5857 = !{i64 2147637004, i64 2147637047, i64 2147637087}
!5858 = !DILocation(line: 236, column: 1, scope: !5406)
!5859 = !{i64 2147637230, i64 2147637273, i64 2147637313}
!5860 = !DILocation(line: 237, column: 1, scope: !5406)
!5861 = !{i64 2147637456, i64 2147637499, i64 2147637539}
!5862 = !DILocation(line: 238, column: 1, scope: !5406)
!5863 = !{i64 2147637682, i64 2147637725, i64 2147637765}
!5864 = !DILocation(line: 239, column: 1, scope: !5406)
!5865 = !{i64 2147637914, i64 2147637957, i64 2147637997}
!5866 = !DILocation(line: 240, column: 1, scope: !5406)
!5867 = !{i64 2147638152, i64 2147638195, i64 2147638235}
!5868 = !DILocation(line: 241, column: 1, scope: !5406)
!5869 = !{i64 2147638384, i64 2147638427, i64 2147638467}
!5870 = !DILocation(line: 242, column: 1, scope: !5406)
!5871 = !{i64 2147638586, i64 2147638629, i64 2147638669}
!5872 = !DILocation(line: 243, column: 1, scope: !5406)
!5873 = !{i64 2147638836, i64 2147638879, i64 2147638919}
!5874 = !DILocation(line: 244, column: 1, scope: !5406)
!5875 = !{i64 2147639074, i64 2147639117, i64 2147639157}
!5876 = !DILocation(line: 245, column: 1, scope: !5406)
!5877 = !{i64 2147639282, i64 2147639325, i64 2147639365}
!5878 = !DILocation(line: 246, column: 1, scope: !5406)
!5879 = !{i64 2147639478, i64 2147639521, i64 2147639561}
!5880 = !DILocation(line: 247, column: 1, scope: !5406)
!5881 = !{i64 2147639662, i64 2147639705, i64 2147639745}
!5882 = !DILocation(line: 248, column: 1, scope: !5406)
!5883 = !{i64 2147639879, i64 2147639922, i64 2147639962}
!5884 = !DILocation(line: 249, column: 1, scope: !5406)
!5885 = !{i64 2147640084, i64 2147640127, i64 2147640167}
!5886 = !DILocation(line: 250, column: 1, scope: !5406)
!5887 = !{i64 2147640319, i64 2147640362, i64 2147640402}
!5888 = !DILocation(line: 251, column: 1, scope: !5406)
!5889 = !{i64 2147640542, i64 2147640585, i64 2147640625}
!5890 = !DILocation(line: 252, column: 1, scope: !5406)
!5891 = !{i64 2147640765, i64 2147640808, i64 2147640848}
!5892 = !DILocation(line: 253, column: 1, scope: !5406)
!5893 = !{i64 2147641003, i64 2147641046, i64 2147641086}
!5894 = !DILocation(line: 254, column: 1, scope: !5406)
!5895 = !{i64 2147641241, i64 2147641284, i64 2147641324}
!5896 = !DILocation(line: 255, column: 1, scope: !5406)
!5897 = !{i64 2147641458, i64 2147641501, i64 2147641541}
!5898 = !DILocation(line: 256, column: 1, scope: !5406)
!5899 = !{i64 2147645724, i64 2147645767, i64 2147645807}
!5900 = !DILocation(line: 257, column: 1, scope: !5406)
!5901 = !{i64 2147645917, i64 2147645960, i64 2147646000}
!5902 = !DILocation(line: 258, column: 1, scope: !5406)
!5903 = !{i64 2147646170, i64 2147646213, i64 2147646253}
!5904 = !DILocation(line: 259, column: 1, scope: !5406)
!5905 = !{i64 2147646378, i64 2147646421, i64 2147646461}
!5906 = !DILocation(line: 260, column: 1, scope: !5406)
!5907 = !{i64 2147646574, i64 2147646617, i64 2147646657}
!5908 = !DILocation(line: 261, column: 1, scope: !5406)
!5909 = !{i64 2147646788, i64 2147646831, i64 2147646871}
!5910 = !DILocation(line: 262, column: 1, scope: !5406)
!5911 = !{i64 2147646996, i64 2147647039, i64 2147647079}
!5912 = !DILocation(line: 263, column: 1, scope: !5406)
!5913 = !{i64 2147647186, i64 2147647229, i64 2147647269}
!5914 = !DILocation(line: 264, column: 1, scope: !5406)
!5915 = !{i64 2147647400, i64 2147647443, i64 2147647483}
!5916 = !DILocation(line: 265, column: 1, scope: !5406)
!5917 = !{i64 2147647662, i64 2147647705, i64 2147647745}
!5918 = !DILocation(line: 266, column: 1, scope: !5406)
!5919 = !{i64 2147647873, i64 2147647916, i64 2147647956}
!5920 = !DILocation(line: 267, column: 1, scope: !5406)
!5921 = !{i64 2147648117, i64 2147648160, i64 2147648200}
!5922 = !DILocation(line: 268, column: 1, scope: !5406)
!5923 = !{i64 2147648328, i64 2147648371, i64 2147648411}
!5924 = !DILocation(line: 269, column: 1, scope: !5406)
!5925 = !{i64 2147648557, i64 2147648600, i64 2147648640}
!5926 = !DILocation(line: 270, column: 1, scope: !5406)
!5927 = !{i64 2147648822, i64 2147648865, i64 2147648905}
!5928 = !DILocation(line: 271, column: 1, scope: !5406)
!5929 = !{i64 2147649027, i64 2147649070, i64 2147649110}
!5930 = !DILocation(line: 272, column: 1, scope: !5406)
!5931 = !{i64 2147649223, i64 2147649266, i64 2147649306}
!5932 = !DILocation(line: 273, column: 1, scope: !5406)
!5933 = !{i64 2147649446, i64 2147649489, i64 2147649529}
!5934 = !DILocation(line: 274, column: 1, scope: !5406)
!5935 = !{i64 2147649609, i64 2147649652, i64 2147649692}
!5936 = !DILocation(line: 275, column: 1, scope: !5406)
!5937 = !{i64 2147649814, i64 2147649857, i64 2147649897}
!5938 = !DILocation(line: 276, column: 1, scope: !5406)
!5939 = !{i64 2147650034, i64 2147650077, i64 2147650117}
!5940 = !DILocation(line: 277, column: 1, scope: !5406)
!5941 = !{i64 2147650248, i64 2147650291, i64 2147650331}
!5942 = !DILocation(line: 278, column: 1, scope: !5406)
!5943 = !{i64 2147650492, i64 2147650535, i64 2147650575}
!5944 = !DILocation(line: 279, column: 1, scope: !5406)
!5945 = !{i64 2147650724, i64 2147650767, i64 2147650807}
!5946 = !DILocation(line: 280, column: 1, scope: !5406)
!5947 = !{i64 2147650938, i64 2147650981, i64 2147651021}
!5948 = !DILocation(line: 281, column: 1, scope: !5406)
!5949 = !{i64 2147651149, i64 2147651192, i64 2147651232}
!5950 = !DILocation(line: 282, column: 1, scope: !5406)
!5951 = !{i64 2147651342, i64 2147651385, i64 2147651425}
!5952 = !DILocation(line: 283, column: 1, scope: !5406)
!5953 = !{i64 2147651541, i64 2147651584, i64 2147651624}
!5954 = !DILocation(line: 284, column: 1, scope: !5406)
!5955 = !{i64 2147651713, i64 2147651756, i64 2147651796}
!5956 = !DILocation(line: 285, column: 1, scope: !5406)
!5957 = !{i64 2147651906, i64 2147651949, i64 2147651989}
!5958 = !DILocation(line: 286, column: 1, scope: !5406)
!5959 = !{i64 2147652078, i64 2147652121, i64 2147652161}
!5960 = !DILocation(line: 287, column: 1, scope: !5406)
!5961 = !{i64 2147652268, i64 2147652311, i64 2147652351}
!5962 = !DILocation(line: 288, column: 1, scope: !5406)
!5963 = !{i64 2147652461, i64 2147652504, i64 2147652544}
!5964 = !DILocation(line: 289, column: 1, scope: !5406)
!5965 = !{i64 2147652657, i64 2147652700, i64 2147652740}
!5966 = !DILocation(line: 290, column: 1, scope: !5406)
!5967 = !{i64 2147652820, i64 2147652863, i64 2147652903}
!5968 = !DILocation(line: 291, column: 1, scope: !5406)
!5969 = !{i64 2147653022, i64 2147653065, i64 2147653105}
!5970 = !DILocation(line: 292, column: 1, scope: !5406)
!5971 = !{i64 2147653233, i64 2147653276, i64 2147653316}
!5972 = !DILocation(line: 293, column: 1, scope: !5406)
!5973 = !{i64 2147653438, i64 2147653481, i64 2147653521}
!5974 = !DILocation(line: 294, column: 1, scope: !5406)
!5975 = !{i64 2147653646, i64 2147653689, i64 2147653729}
!5976 = !DILocation(line: 295, column: 1, scope: !5406)
!5977 = !{i64 2147653839, i64 2147653882, i64 2147653922}
!5978 = !DILocation(line: 296, column: 1, scope: !5406)
!5979 = !{i64 2147654026, i64 2147654069, i64 2147654109}
!5980 = !DILocation(line: 297, column: 1, scope: !5406)
!5981 = !{i64 2147654192, i64 2147654235, i64 2147654275}
!5982 = !DILocation(line: 298, column: 1, scope: !5406)
!5983 = !{i64 2147654419, i64 2147654462, i64 2147654502}
!5984 = !DILocation(line: 299, column: 1, scope: !5406)
!5985 = !{i64 2147654636, i64 2147654679, i64 2147654719}
!5986 = !DILocation(line: 300, column: 1, scope: !5406)
!5987 = !{i64 2147658923, i64 2147658966, i64 2147659006}
!5988 = !DILocation(line: 301, column: 1, scope: !5406)
!5989 = !{i64 2147659128, i64 2147659171, i64 2147659211}
!5990 = !DILocation(line: 302, column: 1, scope: !5406)
!5991 = !{i64 2147659345, i64 2147659388, i64 2147659428}
!5992 = !DILocation(line: 303, column: 1, scope: !5406)
!5993 = !{i64 2147659637, i64 2147659680, i64 2147659720}
!5994 = !DILocation(line: 304, column: 1, scope: !5406)
!5995 = !{i64 2147659869, i64 2147659912, i64 2147659952}
!5996 = !DILocation(line: 305, column: 1, scope: !5406)
!5997 = !{i64 2147660086, i64 2147660129, i64 2147660169}
!5998 = !DILocation(line: 306, column: 1, scope: !5406)
!5999 = !{i64 2147660293, i64 2147660336, i64 2147660376}
!6000 = !DILocation(line: 307, column: 1, scope: !5406)
!6001 = !{i64 2147660494, i64 2147660537, i64 2147660577}
!6002 = !DILocation(line: 308, column: 1, scope: !5406)
!6003 = !{i64 2147660726, i64 2147660769, i64 2147660809}
!6004 = !DILocation(line: 309, column: 1, scope: !5406)
!6005 = !{i64 2147660934, i64 2147660977, i64 2147661017}
!6006 = !DILocation(line: 310, column: 1, scope: !5406)
!6007 = !{i64 2147661124, i64 2147661167, i64 2147661207}
!6008 = !DILocation(line: 311, column: 1, scope: !5406)
!6009 = !{i64 2147661350, i64 2147661393, i64 2147661433}
!6010 = !DILocation(line: 312, column: 1, scope: !5406)
!6011 = !{i64 2147661539, i64 2147661582, i64 2147661622}
!6012 = !DILocation(line: 313, column: 1, scope: !5406)
!6013 = !{i64 2147661810, i64 2147661853, i64 2147661893}
!6014 = !DILocation(line: 314, column: 1, scope: !5406)
!6015 = !{i64 2147662030, i64 2147662073, i64 2147662113}
!6016 = !DILocation(line: 315, column: 1, scope: !5406)
!6017 = !{i64 2147662283, i64 2147662326, i64 2147662366}
!6018 = !DILocation(line: 316, column: 1, scope: !5406)
!6019 = !{i64 2147662491, i64 2147662534, i64 2147662574}
!6020 = !DILocation(line: 317, column: 1, scope: !5406)
!6021 = !{i64 2147662723, i64 2147662766, i64 2147662806}
!6022 = !DILocation(line: 318, column: 1, scope: !5406)
!6023 = !{i64 2147662934, i64 2147662977, i64 2147663017}
!6024 = !DILocation(line: 319, column: 1, scope: !5406)
!6025 = !{i64 2147663124, i64 2147663167, i64 2147663207}
!6026 = !DILocation(line: 320, column: 1, scope: !5406)
!6027 = !{i64 2147663338, i64 2147663381, i64 2147663421}
!6028 = !DILocation(line: 321, column: 1, scope: !5406)
!6029 = !{i64 2147663537, i64 2147663580, i64 2147663620}
!6030 = !DILocation(line: 322, column: 1, scope: !5406)
!6031 = !{i64 2147663724, i64 2147663767, i64 2147663807}
!6032 = !DILocation(line: 323, column: 1, scope: !5406)
!6033 = !{i64 2147663932, i64 2147663975, i64 2147664015}
!6034 = !DILocation(line: 324, column: 1, scope: !5406)
!6035 = !{i64 2147664161, i64 2147664204, i64 2147664244}
!6036 = !DILocation(line: 325, column: 1, scope: !5406)
!6037 = !{i64 2147664363, i64 2147664406, i64 2147664446}
!6038 = !DILocation(line: 326, column: 1, scope: !5406)
!6039 = !{i64 2147664562, i64 2147664605, i64 2147664645}
!6040 = !DILocation(line: 327, column: 1, scope: !5406)
!6041 = !{i64 2147664779, i64 2147664822, i64 2147664862}
!6042 = !DILocation(line: 329, column: 1, scope: !5406)
!6043 = distinct !DISubprogram(name: "stm32l1_init", scope: !337, file: !337, line: 31, type: !344, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6044)
!6044 = !{!6045, !6046}
!6045 = !DILocalVariable(name: "arg", arg: 1, scope: !6043, file: !337, line: 31, type: !346)
!6046 = !DILocalVariable(name: "key", scope: !6043, file: !337, line: 33, type: !110)
!6047 = !DILocation(line: 0, scope: !6043)
!6048 = !DILocation(line: 55, column: 2, scope: !6049, inlinedAt: !6056)
!6049 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !6051, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6053)
!6050 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6051 = !DISubroutineType(types: !6052)
!6052 = !{!32}
!6053 = !{!6054, !6055}
!6054 = !DILocalVariable(name: "key", scope: !6049, file: !6050, line: 44, type: !32)
!6055 = !DILocalVariable(name: "tmp", scope: !6049, file: !6050, line: 53, type: !32)
!6056 = distinct !DILocation(line: 37, column: 8, scope: !6043)
!6057 = !{i64 1527912}
!6058 = !DILocation(line: 0, scope: !6049, inlinedAt: !6056)
!6059 = !DILocalVariable(name: "key", arg: 1, scope: !6060, file: !6050, line: 84, type: !32)
!6060 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !6061, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6063)
!6061 = !DISubroutineType(types: !6062)
!6062 = !{null, !32}
!6063 = !{!6059}
!6064 = !DILocation(line: 0, scope: !6060, inlinedAt: !6065)
!6065 = distinct !DILocation(line: 44, column: 2, scope: !6043)
!6066 = !DILocation(line: 95, column: 2, scope: !6060, inlinedAt: !6065)
!6067 = !{i64 1528729}
!6068 = !DILocation(line: 48, column: 18, scope: !6043)
!6069 = !DILocation(line: 54, column: 2, scope: !6043)
!6070 = !DILocation(line: 55, column: 2, scope: !6043)
!6071 = !DILocation(line: 57, column: 2, scope: !6043)
!6072 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !6073, file: !6073, line: 531, type: !6074, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6076)
!6073 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6074 = !DISubroutineType(types: !6075)
!6075 = !{null, !110}
!6076 = !{!6077, !6078}
!6077 = !DILocalVariable(name: "Periphs", arg: 1, scope: !6072, file: !6073, line: 531, type: !110)
!6078 = !DILocalVariable(name: "tmpreg", scope: !6072, file: !6073, line: 533, type: !316)
!6079 = !DILocation(line: 0, scope: !6072)
!6080 = !DILocation(line: 533, column: 3, scope: !6072)
!6081 = !DILocation(line: 533, column: 17, scope: !6072)
!6082 = !DILocation(line: 534, column: 3, scope: !6072)
!6083 = !DILocation(line: 536, column: 12, scope: !6072)
!6084 = !DILocation(line: 536, column: 10, scope: !6072)
!6085 = !DILocation(line: 537, column: 9, scope: !6072)
!6086 = !DILocation(line: 538, column: 1, scope: !6072)
!6087 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !6088, file: !6088, line: 272, type: !6074, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6089)
!6088 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6089 = !{!6090}
!6090 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !6087, file: !6088, line: 272, type: !110)
!6091 = !DILocation(line: 0, scope: !6087)
!6092 = !DILocation(line: 274, column: 3, scope: !6087)
!6093 = !DILocation(line: 275, column: 1, scope: !6087)
!6094 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !374, file: !374, line: 26, type: !380, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !371, retainedNodes: !6095)
!6095 = !{!6096}
!6096 = !DILocalVariable(name: "dev", arg: 1, scope: !6094, file: !374, line: 26, type: !382)
!6097 = !DILocation(line: 0, scope: !6094)
!6098 = !DILocation(line: 68, column: 2, scope: !6094)
!6099 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6100, file: !6100, line: 14, type: !4360, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6101)
!6100 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6101 = !{!6102, !6103}
!6102 = !DILocalVariable(name: "fmt", arg: 1, scope: !6099, file: !6100, line: 14, type: !279)
!6103 = !DILocalVariable(name: "ap", scope: !6099, file: !6100, line: 16, type: !6104)
!6104 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3366, line: 99, baseType: !6105)
!6105 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3366, line: 40, baseType: !6106)
!6106 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6100, baseType: !6107)
!6107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6108)
!6108 = !{!6109}
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6107, file: !6100, line: 16, baseType: !107, size: 32)
!6110 = !DILocation(line: 0, scope: !6099)
!6111 = !DILocation(line: 16, column: 2, scope: !6099)
!6112 = !DILocation(line: 16, column: 10, scope: !6099)
!6113 = !DILocation(line: 18, column: 2, scope: !6099)
!6114 = !DILocation(line: 19, column: 2, scope: !6099)
!6115 = !DILocation(line: 20, column: 2, scope: !6099)
!6116 = !DILocation(line: 21, column: 1, scope: !6099)
!6117 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6100, file: !6100, line: 23, type: !6118, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6120)
!6118 = !DISubroutineType(types: !6119)
!6119 = !{null, !279, !6104}
!6120 = !{!6121, !6122}
!6121 = !DILocalVariable(name: "fmt", arg: 1, scope: !6117, file: !6100, line: 23, type: !279)
!6122 = !DILocalVariable(name: "ap", arg: 2, scope: !6117, file: !6100, line: 23, type: !6104)
!6123 = !DILocation(line: 0, scope: !6117)
!6124 = !DILocation(line: 25, column: 2, scope: !6117)
!6125 = !DILocation(line: 26, column: 1, scope: !6117)
!6126 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6100, file: !6100, line: 52, type: !6127, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6129)
!6127 = !DISubroutineType(types: !6128)
!6128 = !{null, !109, !13, !232}
!6129 = !{!6130, !6131, !6132, !6133}
!6130 = !DILocalVariable(name: "level", arg: 1, scope: !6126, file: !6100, line: 52, type: !109)
!6131 = !DILocalVariable(name: "data", arg: 2, scope: !6126, file: !6100, line: 52, type: !13)
!6132 = !DILocalVariable(name: "size", arg: 3, scope: !6126, file: !6100, line: 52, type: !232)
!6133 = !DILocalVariable(name: "data_buffer", scope: !6126, file: !6100, line: 54, type: !279)
!6134 = !DILocation(line: 0, scope: !6126)
!6135 = !DILocation(line: 55, column: 14, scope: !6126)
!6136 = !DILocation(line: 55, column: 2, scope: !6126)
!6137 = !DILocation(line: 56, column: 3, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6126, file: !6100, line: 55, column: 20)
!6139 = !DILocation(line: 57, column: 3, scope: !6138)
!6140 = !DILocation(line: 59, column: 7, scope: !6138)
!6141 = distinct !{!6141, !6136, !6142}
!6142 = !DILocation(line: 65, column: 2, scope: !6126)
!6143 = !DILocation(line: 66, column: 1, scope: !6126)
!6144 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6145, file: !6145, line: 175, type: !6146, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6148)
!6145 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6146 = !DISubroutineType(types: !6147)
!6147 = !{!148, !109}
!6148 = !{!6149}
!6149 = !DILocalVariable(name: "level", arg: 1, scope: !6144, file: !6145, line: 175, type: !109)
!6150 = !DILocation(line: 0, scope: !6144)
!6151 = !DILocation(line: 177, column: 2, scope: !6144)
!6152 = !DILocation(line: 189, column: 1, scope: !6144)
!6153 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6100, file: !6100, line: 28, type: !6154, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6156)
!6154 = !DISubroutineType(types: !6155)
!6155 = !{null, !279, !232}
!6156 = !{!6157, !6158, !6159, !6161, !6163}
!6157 = !DILocalVariable(name: "data", arg: 1, scope: !6153, file: !6100, line: 28, type: !279)
!6158 = !DILocalVariable(name: "length", arg: 2, scope: !6153, file: !6100, line: 28, type: !232)
!6159 = !DILocalVariable(name: "i", scope: !6160, file: !6100, line: 30, type: !232)
!6160 = distinct !DILexicalBlock(scope: !6153, file: !6100, line: 30, column: 2)
!6161 = !DILocalVariable(name: "i", scope: !6162, file: !6100, line: 40, type: !232)
!6162 = distinct !DILexicalBlock(scope: !6153, file: !6100, line: 40, column: 2)
!6163 = !DILocalVariable(name: "c", scope: !6164, file: !6100, line: 42, type: !179)
!6164 = distinct !DILexicalBlock(scope: !6165, file: !6100, line: 41, column: 19)
!6165 = distinct !DILexicalBlock(scope: !6166, file: !6100, line: 41, column: 7)
!6166 = distinct !DILexicalBlock(scope: !6167, file: !6100, line: 40, column: 54)
!6167 = distinct !DILexicalBlock(scope: !6162, file: !6100, line: 40, column: 2)
!6168 = !DILocation(line: 0, scope: !6153)
!6169 = !DILocation(line: 0, scope: !6160)
!6170 = !DILocation(line: 30, column: 2, scope: !6160)
!6171 = !DILocation(line: 38, column: 2, scope: !6153)
!6172 = !DILocation(line: 0, scope: !6162)
!6173 = !DILocation(line: 40, column: 2, scope: !6162)
!6174 = !DILocation(line: 31, column: 9, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !6100, line: 31, column: 7)
!6176 = distinct !DILexicalBlock(scope: !6177, file: !6100, line: 30, column: 54)
!6177 = distinct !DILexicalBlock(scope: !6160, file: !6100, line: 30, column: 2)
!6178 = !DILocation(line: 31, column: 7, scope: !6176)
!6179 = !DILocation(line: 32, column: 35, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6175, file: !6100, line: 31, column: 19)
!6181 = !DILocation(line: 32, column: 20, scope: !6180)
!6182 = !DILocation(line: 32, column: 4, scope: !6180)
!6183 = !DILocation(line: 33, column: 3, scope: !6180)
!6184 = !DILocation(line: 34, column: 4, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6175, file: !6100, line: 33, column: 10)
!6186 = !DILocation(line: 30, column: 50, scope: !6177)
!6187 = !DILocation(line: 30, column: 24, scope: !6177)
!6188 = distinct !{!6188, !6170, !6189}
!6189 = !DILocation(line: 36, column: 2, scope: !6160)
!6190 = !DILocation(line: 49, column: 2, scope: !6153)
!6191 = !DILocation(line: 50, column: 1, scope: !6153)
!6192 = !DILocation(line: 41, column: 9, scope: !6165)
!6193 = !DILocation(line: 41, column: 7, scope: !6166)
!6194 = !DILocation(line: 42, column: 22, scope: !6164)
!6195 = !DILocation(line: 0, scope: !6164)
!6196 = !DILocation(line: 44, column: 25, scope: !6164)
!6197 = !DILocation(line: 44, column: 17, scope: !6164)
!6198 = !DILocation(line: 44, column: 33, scope: !6164)
!6199 = !DILocation(line: 44, column: 4, scope: !6164)
!6200 = !DILocation(line: 45, column: 3, scope: !6164)
!6201 = !DILocation(line: 46, column: 4, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6165, file: !6100, line: 45, column: 10)
!6203 = !DILocation(line: 40, column: 50, scope: !6167)
!6204 = !DILocation(line: 40, column: 24, scope: !6167)
!6205 = distinct !{!6205, !6173, !6206}
!6206 = !DILocation(line: 48, column: 2, scope: !6162)
!6207 = distinct !DISubprogram(name: "isprint", scope: !5150, file: !5150, line: 37, type: !303, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !6208)
!6208 = !{!6209}
!6209 = !DILocalVariable(name: "c", arg: 1, scope: !6207, file: !5150, line: 37, type: !109)
!6210 = !DILocation(line: 0, scope: !6207)
!6211 = !DILocation(line: 39, column: 38, scope: !6207)
!6212 = !DILocation(line: 39, column: 2, scope: !6207)
!6213 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6214, file: !6214, line: 57, type: !6215, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6261)
!6214 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6215 = !DISubroutineType(types: !6216)
!6216 = !{null, !32, !6217}
!6217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6218, size: 32)
!6218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6219)
!6219 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2691, line: 141, baseType: !6220)
!6220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2691, line: 97, size: 256, elements: !6221)
!6221 = !{!6222}
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6220, file: !2691, line: 107, baseType: !6223, size: 256)
!6223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2691, line: 98, size: 256, elements: !6224)
!6224 = !{!6225, !6230, !6235, !6240, !6245, !6250, !6255, !6260}
!6225 = !DIDerivedType(tag: DW_TAG_member, scope: !6223, file: !2691, line: 99, baseType: !6226, size: 32)
!6226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6223, file: !2691, line: 99, size: 32, elements: !6227)
!6227 = !{!6228, !6229}
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6226, file: !2691, line: 99, baseType: !110, size: 32)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6226, file: !2691, line: 99, baseType: !110, size: 32)
!6230 = !DIDerivedType(tag: DW_TAG_member, scope: !6223, file: !2691, line: 100, baseType: !6231, size: 32, offset: 32)
!6231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6223, file: !2691, line: 100, size: 32, elements: !6232)
!6232 = !{!6233, !6234}
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6231, file: !2691, line: 100, baseType: !110, size: 32)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6231, file: !2691, line: 100, baseType: !110, size: 32)
!6235 = !DIDerivedType(tag: DW_TAG_member, scope: !6223, file: !2691, line: 101, baseType: !6236, size: 32, offset: 64)
!6236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6223, file: !2691, line: 101, size: 32, elements: !6237)
!6237 = !{!6238, !6239}
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6236, file: !2691, line: 101, baseType: !110, size: 32)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6236, file: !2691, line: 101, baseType: !110, size: 32)
!6240 = !DIDerivedType(tag: DW_TAG_member, scope: !6223, file: !2691, line: 102, baseType: !6241, size: 32, offset: 96)
!6241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6223, file: !2691, line: 102, size: 32, elements: !6242)
!6242 = !{!6243, !6244}
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6241, file: !2691, line: 102, baseType: !110, size: 32)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6241, file: !2691, line: 102, baseType: !110, size: 32)
!6245 = !DIDerivedType(tag: DW_TAG_member, scope: !6223, file: !2691, line: 103, baseType: !6246, size: 32, offset: 128)
!6246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6223, file: !2691, line: 103, size: 32, elements: !6247)
!6247 = !{!6248, !6249}
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6246, file: !2691, line: 103, baseType: !110, size: 32)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6246, file: !2691, line: 103, baseType: !110, size: 32)
!6250 = !DIDerivedType(tag: DW_TAG_member, scope: !6223, file: !2691, line: 104, baseType: !6251, size: 32, offset: 160)
!6251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6223, file: !2691, line: 104, size: 32, elements: !6252)
!6252 = !{!6253, !6254}
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6251, file: !2691, line: 104, baseType: !110, size: 32)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6251, file: !2691, line: 104, baseType: !110, size: 32)
!6255 = !DIDerivedType(tag: DW_TAG_member, scope: !6223, file: !2691, line: 105, baseType: !6256, size: 32, offset: 192)
!6256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6223, file: !2691, line: 105, size: 32, elements: !6257)
!6257 = !{!6258, !6259}
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6256, file: !2691, line: 105, baseType: !110, size: 32)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6256, file: !2691, line: 105, baseType: !110, size: 32)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6223, file: !2691, line: 106, baseType: !110, size: 32, offset: 224)
!6261 = !{!6262, !6263}
!6262 = !DILocalVariable(name: "reason", arg: 1, scope: !6213, file: !6214, line: 57, type: !32)
!6263 = !DILocalVariable(name: "esf", arg: 2, scope: !6213, file: !6214, line: 57, type: !6217)
!6264 = !DILocation(line: 0, scope: !6213)
!6265 = !DILocation(line: 60, column: 10, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6213, file: !6214, line: 60, column: 6)
!6267 = !DILocation(line: 60, column: 6, scope: !6213)
!6268 = !DILocation(line: 61, column: 3, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6266, file: !6214, line: 60, column: 19)
!6270 = !DILocation(line: 62, column: 2, scope: !6269)
!6271 = !DILocation(line: 63, column: 2, scope: !6213)
!6272 = !DILocation(line: 64, column: 1, scope: !6213)
!6273 = distinct !DISubprogram(name: "esf_dump", scope: !6214, file: !6214, line: 20, type: !6274, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6276)
!6274 = !DISubroutineType(types: !6275)
!6275 = !{null, !6217}
!6276 = !{!6277}
!6277 = !DILocalVariable(name: "esf", arg: 1, scope: !6273, file: !6214, line: 20, type: !6217)
!6278 = !DILocation(line: 0, scope: !6273)
!6279 = !DILocation(line: 22, column: 2, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6281, file: !6214, line: 22, column: 2)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !6214, line: 22, column: 2)
!6282 = distinct !DILexicalBlock(scope: !6283, file: !6214, line: 22, column: 2)
!6283 = distinct !DILexicalBlock(scope: !6273, file: !6214, line: 22, column: 2)
!6284 = !DILocation(line: 24, column: 2, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !6214, line: 24, column: 2)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !6214, line: 24, column: 2)
!6287 = distinct !DILexicalBlock(scope: !6288, file: !6214, line: 24, column: 2)
!6288 = distinct !DILexicalBlock(scope: !6273, file: !6214, line: 24, column: 2)
!6289 = !DILocation(line: 26, column: 2, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6291, file: !6214, line: 26, column: 2)
!6291 = distinct !DILexicalBlock(scope: !6292, file: !6214, line: 26, column: 2)
!6292 = distinct !DILexicalBlock(scope: !6293, file: !6214, line: 26, column: 2)
!6293 = distinct !DILexicalBlock(scope: !6273, file: !6214, line: 26, column: 2)
!6294 = !DILocation(line: 53, column: 2, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6296, file: !6214, line: 53, column: 2)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !6214, line: 53, column: 2)
!6297 = distinct !DILexicalBlock(scope: !6298, file: !6214, line: 53, column: 2)
!6298 = distinct !DILexicalBlock(scope: !6273, file: !6214, line: 53, column: 2)
!6299 = !DILocation(line: 55, column: 1, scope: !6273)
!6300 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6214, file: !6214, line: 82, type: !6301, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6316)
!6301 = !DISubroutineType(types: !6302)
!6302 = !{null, !6217, !6303}
!6303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6304, size: 32)
!6304 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !209, line: 37, baseType: !6305)
!6305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6306)
!6306 = !{!6307, !6308, !6309, !6310, !6311, !6312, !6313, !6314, !6315}
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6305, file: !209, line: 26, baseType: !110, size: 32)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6305, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6305, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6305, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6305, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6305, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6305, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6305, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6305, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6316 = !{!6317, !6318, !6319}
!6317 = !DILocalVariable(name: "esf", arg: 1, scope: !6300, file: !6214, line: 82, type: !6217)
!6318 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6300, file: !6214, line: 82, type: !6303)
!6319 = !DILocalVariable(name: "reason", scope: !6300, file: !6214, line: 88, type: !32)
!6320 = !DILocation(line: 0, scope: !6300)
!6321 = !DILocation(line: 88, column: 35, scope: !6300)
!6322 = !DILocation(line: 108, column: 2, scope: !6300)
!6323 = !DILocation(line: 131, column: 1, scope: !6300)
!6324 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6214, file: !6214, line: 133, type: !6325, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6327)
!6325 = !DISubroutineType(types: !6326)
!6326 = !{null, !107}
!6327 = !{!6328, !6329, !6330}
!6328 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6324, file: !6214, line: 133, type: !107)
!6329 = !DILocalVariable(name: "ssf_contents", scope: !6324, file: !6214, line: 135, type: !945)
!6330 = !DILocalVariable(name: "oops_esf", scope: !6324, file: !6214, line: 136, type: !6219)
!6331 = !DILocation(line: 0, scope: !6324)
!6332 = !DILocation(line: 136, column: 2, scope: !6324)
!6333 = !DILocation(line: 136, column: 15, scope: !6324)
!6334 = !DILocation(line: 139, column: 22, scope: !6324)
!6335 = !DILocation(line: 139, column: 17, scope: !6324)
!6336 = !DILocation(line: 139, column: 20, scope: !6324)
!6337 = !DILocation(line: 141, column: 2, scope: !6324)
!6338 = !DILocation(line: 142, column: 2, scope: !6324)
!6339 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6340, file: !6340, line: 40, type: !6061, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6341)
!6340 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6341 = !{!6342}
!6342 = !DILocalVariable(name: "irq", arg: 1, scope: !6339, file: !6340, line: 40, type: !32)
!6343 = !DILocation(line: 0, scope: !6339)
!6344 = !DILocation(line: 42, column: 2, scope: !6339)
!6345 = !DILocation(line: 43, column: 1, scope: !6339)
!6346 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !548, file: !548, line: 1508, type: !6347, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6349)
!6347 = !DISubroutineType(types: !6348)
!6348 = !{null, !872}
!6349 = !{!6350}
!6350 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6346, file: !548, line: 1508, type: !872)
!6351 = !DILocation(line: 0, scope: !6346)
!6352 = !DILocation(line: 1510, column: 23, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6346, file: !548, line: 1510, column: 7)
!6354 = !DILocation(line: 1510, column: 7, scope: !6346)
!6355 = !DILocation(line: 1512, column: 5, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6353, file: !548, line: 1511, column: 3)
!6357 = !{i64 2149972975}
!6358 = !DILocation(line: 1513, column: 81, scope: !6356)
!6359 = !DILocation(line: 1513, column: 60, scope: !6356)
!6360 = !DILocation(line: 1513, column: 34, scope: !6356)
!6361 = !DILocation(line: 1513, column: 5, scope: !6356)
!6362 = !DILocation(line: 1513, column: 43, scope: !6356)
!6363 = !DILocation(line: 1514, column: 5, scope: !6356)
!6364 = !{i64 2149973089}
!6365 = !DILocation(line: 1515, column: 3, scope: !6356)
!6366 = !DILocation(line: 1516, column: 1, scope: !6346)
!6367 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6340, file: !6340, line: 45, type: !6061, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6368)
!6368 = !{!6369}
!6369 = !DILocalVariable(name: "irq", arg: 1, scope: !6367, file: !6340, line: 45, type: !32)
!6370 = !DILocation(line: 0, scope: !6367)
!6371 = !DILocation(line: 47, column: 2, scope: !6367)
!6372 = !DILocation(line: 48, column: 1, scope: !6367)
!6373 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !548, file: !548, line: 1546, type: !6347, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6374)
!6374 = !{!6375}
!6375 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6373, file: !548, line: 1546, type: !872)
!6376 = !DILocation(line: 0, scope: !6373)
!6377 = !DILocation(line: 1548, column: 23, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6373, file: !548, line: 1548, column: 7)
!6379 = !DILocation(line: 1548, column: 7, scope: !6373)
!6380 = !DILocation(line: 1550, column: 81, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6378, file: !548, line: 1549, column: 3)
!6382 = !DILocation(line: 1550, column: 60, scope: !6381)
!6383 = !DILocation(line: 1550, column: 34, scope: !6381)
!6384 = !DILocation(line: 1550, column: 5, scope: !6381)
!6385 = !DILocation(line: 1550, column: 43, scope: !6381)
!6386 = !DILocation(line: 271, column: 3, scope: !6387, inlinedAt: !6389)
!6387 = distinct !DISubprogram(name: "__DSB", scope: !6388, file: !6388, line: 269, type: !3062, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !2045)
!6388 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6389 = distinct !DILocation(line: 1551, column: 5, scope: !6381)
!6390 = !{i64 2430477}
!6391 = !DILocation(line: 260, column: 3, scope: !6392, inlinedAt: !6393)
!6392 = distinct !DISubprogram(name: "__ISB", scope: !6388, file: !6388, line: 258, type: !3062, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !2045)
!6393 = distinct !DILocation(line: 1552, column: 5, scope: !6381)
!6394 = !{i64 2430194}
!6395 = !DILocation(line: 1553, column: 3, scope: !6381)
!6396 = !DILocation(line: 1554, column: 1, scope: !6373)
!6397 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6340, file: !6340, line: 50, type: !6398, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6400)
!6398 = !DISubroutineType(types: !6399)
!6399 = !{!109, !32}
!6400 = !{!6401}
!6401 = !DILocalVariable(name: "irq", arg: 1, scope: !6397, file: !6340, line: 50, type: !32)
!6402 = !DILocation(line: 0, scope: !6397)
!6403 = !DILocation(line: 52, column: 20, scope: !6397)
!6404 = !DILocation(line: 52, column: 9, scope: !6397)
!6405 = !DILocation(line: 52, column: 41, scope: !6397)
!6406 = !DILocation(line: 52, column: 39, scope: !6397)
!6407 = !DILocation(line: 52, column: 2, scope: !6397)
!6408 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6340, file: !6340, line: 64, type: !6409, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6411)
!6409 = !DISubroutineType(types: !6410)
!6410 = !{null, !32, !32, !110}
!6411 = !{!6412, !6413, !6414}
!6412 = !DILocalVariable(name: "irq", arg: 1, scope: !6408, file: !6340, line: 64, type: !32)
!6413 = !DILocalVariable(name: "prio", arg: 2, scope: !6408, file: !6340, line: 64, type: !32)
!6414 = !DILocalVariable(name: "flags", arg: 3, scope: !6408, file: !6340, line: 64, type: !110)
!6415 = !DILocation(line: 0, scope: !6408)
!6416 = !DILocation(line: 83, column: 8, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6418, file: !6340, line: 82, column: 9)
!6418 = distinct !DILexicalBlock(scope: !6408, file: !6340, line: 76, column: 6)
!6419 = !DILocation(line: 91, column: 2, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6421, file: !6340, line: 91, column: 2)
!6421 = distinct !DILexicalBlock(scope: !6408, file: !6340, line: 91, column: 2)
!6422 = !DILocation(line: 91, column: 2, scope: !6421)
!6423 = !DILocation(line: 91, column: 2, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6420, file: !6340, line: 91, column: 2)
!6425 = !DILocation(line: 95, column: 2, scope: !6408)
!6426 = !DILocation(line: 96, column: 1, scope: !6408)
!6427 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !548, file: !548, line: 1638, type: !6428, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6430)
!6428 = !DISubroutineType(types: !6429)
!6429 = !{null, !872, !110}
!6430 = !{!6431, !6432}
!6431 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6427, file: !548, line: 1638, type: !872)
!6432 = !DILocalVariable(name: "priority", arg: 2, scope: !6427, file: !548, line: 1638, type: !110)
!6433 = !DILocation(line: 0, scope: !6427)
!6434 = !DILocation(line: 0, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6427, file: !548, line: 1640, column: 7)
!6436 = !DILocation(line: 1640, column: 7, scope: !6427)
!6437 = !DILocation(line: 1648, column: 1, scope: !6427)
!6438 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6340, file: !6340, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6439)
!6439 = !{!6440}
!6440 = !DILocalVariable(name: "unused", arg: 1, scope: !6438, file: !6340, line: 155, type: !13)
!6441 = !DILocation(line: 0, scope: !6438)
!6442 = !DILocation(line: 159, column: 2, scope: !6438)
!6443 = !DILocation(line: 160, column: 1, scope: !6438)
!6444 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6445, file: !6445, line: 87, type: !3062, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !2045)
!6445 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6446 = !DILocation(line: 89, column: 2, scope: !6444)
!6447 = !DILocation(line: 90, column: 2, scope: !6444)
!6448 = !DILocation(line: 91, column: 1, scope: !6444)
!6449 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6445, file: !6445, line: 23, type: !3062, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2045)
!6450 = !DISubprogram(name: "z_arm_int_exit", scope: !6451, file: !6451, line: 153, type: !3062, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2045)
!6451 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6452 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6453, file: !6453, line: 256, type: !3062, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !2045)
!6453 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6454 = !DILocation(line: 258, column: 2, scope: !6452)
!6455 = !DILocation(line: 262, column: 2, scope: !6452)
!6456 = !DILocation(line: 263, column: 2, scope: !6452)
!6457 = !DILocation(line: 267, column: 2, scope: !6452)
!6458 = !DILocation(line: 268, column: 2, scope: !6452)
!6459 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6453, file: !6453, line: 53, type: !3062, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !2045)
!6460 = !DILocation(line: 55, column: 12, scope: !6459)
!6461 = !DILocation(line: 271, column: 3, scope: !6462, inlinedAt: !6463)
!6462 = distinct !DISubprogram(name: "__DSB", scope: !6388, file: !6388, line: 269, type: !3062, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !2045)
!6463 = distinct !DILocation(line: 56, column: 2, scope: !6459)
!6464 = !{i64 2429148}
!6465 = !DILocation(line: 260, column: 3, scope: !6466, inlinedAt: !6467)
!6466 = distinct !DISubprogram(name: "__ISB", scope: !6388, file: !6388, line: 258, type: !3062, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !2045)
!6467 = distinct !DILocation(line: 57, column: 2, scope: !6459)
!6468 = !{i64 2428865}
!6469 = !DILocation(line: 58, column: 1, scope: !6459)
!6470 = distinct !DISubprogram(name: "arch_swap", scope: !6471, file: !6471, line: 33, type: !6398, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6472)
!6471 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6472 = !{!6473}
!6473 = !DILocalVariable(name: "key", arg: 1, scope: !6470, file: !6471, line: 33, type: !32)
!6474 = !DILocation(line: 0, scope: !6470)
!6475 = !DILocation(line: 36, column: 2, scope: !6470)
!6476 = !DILocation(line: 36, column: 17, scope: !6470)
!6477 = !DILocation(line: 36, column: 25, scope: !6470)
!6478 = !DILocation(line: 37, column: 37, scope: !6470)
!6479 = !DILocation(line: 37, column: 17, scope: !6470)
!6480 = !DILocation(line: 37, column: 35, scope: !6470)
!6481 = !DILocation(line: 41, column: 12, scope: !6470)
!6482 = !DILocalVariable(name: "key", arg: 1, scope: !6483, file: !6050, line: 84, type: !32)
!6483 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !6061, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !6484)
!6484 = !{!6482}
!6485 = !DILocation(line: 0, scope: !6483, inlinedAt: !6486)
!6486 = distinct !DILocation(line: 44, column: 2, scope: !6470)
!6487 = !DILocation(line: 95, column: 2, scope: !6483, inlinedAt: !6486)
!6488 = !{i64 1652148}
!6489 = !DILocation(line: 53, column: 9, scope: !6470)
!6490 = !DILocation(line: 53, column: 24, scope: !6470)
!6491 = !DILocation(line: 53, column: 2, scope: !6470)
!6492 = distinct !DISubprogram(name: "arch_new_thread", scope: !6493, file: !6493, line: 56, type: !6494, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !6604)
!6493 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6494 = !DISubroutineType(types: !6495)
!6495 = !{null, !6496, !6599, !285, !3330, !107, !107, !107}
!6496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6497, size: 32)
!6497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !6498)
!6498 = !{!6499, !6557, !6569, !6570, !6571, !6572, !6573, !6579, !6594}
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6497, file: !156, line: 247, baseType: !6500, size: 384)
!6500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !6501)
!6501 = !{!6502, !6526, !6533, !6534, !6535, !6544, !6545, !6546}
!6502 = !DIDerivedType(tag: DW_TAG_member, scope: !6500, file: !156, line: 60, baseType: !6503, size: 64)
!6503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6500, file: !156, line: 60, size: 64, elements: !6504)
!6504 = !{!6505, !6520}
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6503, file: !156, line: 61, baseType: !6506, size: 64)
!6506 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !6507)
!6507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !6508)
!6508 = !{!6509, !6515}
!6509 = !DIDerivedType(tag: DW_TAG_member, scope: !6507, file: !127, line: 38, baseType: !6510, size: 32)
!6510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6507, file: !127, line: 38, size: 32, elements: !6511)
!6511 = !{!6512, !6514}
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6510, file: !127, line: 39, baseType: !6513, size: 32)
!6513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6507, size: 32)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6510, file: !127, line: 40, baseType: !6513, size: 32)
!6515 = !DIDerivedType(tag: DW_TAG_member, scope: !6507, file: !127, line: 42, baseType: !6516, size: 32, offset: 32)
!6516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6507, file: !127, line: 42, size: 32, elements: !6517)
!6517 = !{!6518, !6519}
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6516, file: !127, line: 43, baseType: !6513, size: 32)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6516, file: !127, line: 44, baseType: !6513, size: 32)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6503, file: !156, line: 62, baseType: !6521, size: 64)
!6521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !6522)
!6522 = !{!6523}
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6521, file: !168, line: 50, baseType: !6524, size: 64)
!6524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6525, size: 64, elements: !173)
!6525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6521, size: 32)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6500, file: !156, line: 68, baseType: !6527, size: 32, offset: 64)
!6527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6528, size: 32)
!6528 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !6529)
!6529 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !6530)
!6530 = !{!6531}
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6529, file: !122, line: 232, baseType: !6532, size: 64)
!6532 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !6507)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6500, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6500, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!6535 = !DIDerivedType(tag: DW_TAG_member, scope: !6500, file: !156, line: 90, baseType: !6536, size: 16, offset: 112)
!6536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6500, file: !156, line: 90, size: 16, elements: !6537)
!6537 = !{!6538, !6543}
!6538 = !DIDerivedType(tag: DW_TAG_member, scope: !6536, file: !156, line: 91, baseType: !6539, size: 16)
!6539 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6536, file: !156, line: 91, size: 16, elements: !6540)
!6540 = !{!6541, !6542}
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6539, file: !156, line: 96, baseType: !188, size: 8)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6539, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6536, file: !156, line: 100, baseType: !192, size: 16)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6500, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6500, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6500, file: !156, line: 131, baseType: !6547, size: 192, offset: 192)
!6547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !6548)
!6548 = !{!6549, !6550, !6556}
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6547, file: !122, line: 245, baseType: !6506, size: 64)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6547, file: !122, line: 246, baseType: !6551, size: 32, offset: 64)
!6551 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !6552)
!6552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6553, size: 32)
!6553 = !DISubroutineType(types: !6554)
!6554 = !{null, !6555}
!6555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6547, size: 32)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6547, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6497, file: !156, line: 250, baseType: !6558, size: 288, offset: 384)
!6558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6559)
!6559 = !{!6560, !6561, !6562, !6563, !6564, !6565, !6566, !6567, !6568}
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6558, file: !209, line: 26, baseType: !110, size: 32)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6558, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6558, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6558, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6558, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6558, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6558, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6558, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6558, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6497, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6497, file: !156, line: 256, baseType: !6528, size: 64, offset: 704)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6497, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6497, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6497, file: !156, line: 300, baseType: !6574, size: 96, offset: 1056)
!6574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !6575)
!6575 = !{!6576, !6577, !6578}
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6574, file: !156, line: 153, baseType: !22, size: 32)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6574, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6574, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6497, file: !156, line: 325, baseType: !6580, size: 32, offset: 1152)
!6580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6581, size: 32)
!6581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !6582)
!6582 = !{!6583, !6589, !6590}
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6581, file: !118, line: 5074, baseType: !6584, size: 96)
!6584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !6585)
!6585 = !{!6586, !6587, !6588}
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6584, file: !241, line: 57, baseType: !244, size: 32)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6584, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6584, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6581, file: !118, line: 5075, baseType: !6528, size: 64, offset: 96)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6581, file: !118, line: 5076, baseType: !6591, size: 32, offset: 160)
!6591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !6592)
!6592 = !{!6593}
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6591, file: !251, line: 52, baseType: !22, size: 32)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6497, file: !156, line: 343, baseType: !6595, size: 64, offset: 1184)
!6595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !6596)
!6596 = !{!6597, !6598}
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6595, file: !209, line: 63, baseType: !110, size: 32)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6595, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!6599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6600, size: 32)
!6600 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3329, line: 44, baseType: !6601)
!6601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !6602)
!6602 = !{!6603}
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6601, file: !145, line: 48, baseType: !148, size: 8)
!6604 = !{!6605, !6606, !6607, !6608, !6609, !6610, !6611, !6612}
!6605 = !DILocalVariable(name: "thread", arg: 1, scope: !6492, file: !6493, line: 56, type: !6496)
!6606 = !DILocalVariable(name: "stack", arg: 2, scope: !6492, file: !6493, line: 56, type: !6599)
!6607 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6492, file: !6493, line: 57, type: !285)
!6608 = !DILocalVariable(name: "entry", arg: 4, scope: !6492, file: !6493, line: 57, type: !3330)
!6609 = !DILocalVariable(name: "p1", arg: 5, scope: !6492, file: !6493, line: 58, type: !107)
!6610 = !DILocalVariable(name: "p2", arg: 6, scope: !6492, file: !6493, line: 58, type: !107)
!6611 = !DILocalVariable(name: "p3", arg: 7, scope: !6492, file: !6493, line: 58, type: !107)
!6612 = !DILocalVariable(name: "iframe", scope: !6492, file: !6493, line: 60, type: !2689)
!6613 = !DILocation(line: 0, scope: !6492)
!6614 = !DILocation(line: 85, column: 11, scope: !6492)
!6615 = !DILocation(line: 93, column: 10, scope: !6492)
!6616 = !DILocation(line: 98, column: 13, scope: !6492)
!6617 = !DILocation(line: 100, column: 15, scope: !6492)
!6618 = !DILocation(line: 100, column: 10, scope: !6492)
!6619 = !DILocation(line: 100, column: 13, scope: !6492)
!6620 = !DILocation(line: 101, column: 15, scope: !6492)
!6621 = !DILocation(line: 101, column: 10, scope: !6492)
!6622 = !DILocation(line: 101, column: 13, scope: !6492)
!6623 = !DILocation(line: 102, column: 15, scope: !6492)
!6624 = !DILocation(line: 102, column: 10, scope: !6492)
!6625 = !DILocation(line: 102, column: 13, scope: !6492)
!6626 = !DILocation(line: 103, column: 15, scope: !6492)
!6627 = !DILocation(line: 103, column: 10, scope: !6492)
!6628 = !DILocation(line: 103, column: 13, scope: !6492)
!6629 = !DILocation(line: 106, column: 10, scope: !6492)
!6630 = !DILocation(line: 106, column: 15, scope: !6492)
!6631 = !DILocation(line: 122, column: 29, scope: !6492)
!6632 = !DILocation(line: 122, column: 23, scope: !6492)
!6633 = !DILocation(line: 122, column: 27, scope: !6492)
!6634 = !DILocation(line: 123, column: 15, scope: !6492)
!6635 = !DILocation(line: 123, column: 23, scope: !6492)
!6636 = !DILocation(line: 143, column: 1, scope: !6492)
!6637 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6493, file: !6493, line: 385, type: !6638, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !6641)
!6638 = !DISubroutineType(types: !6639)
!6639 = !{!110, !6640, !6640}
!6640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6641 = !{!6642, !6643, !6644, !6647}
!6642 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6637, file: !6493, line: 385, type: !6640)
!6643 = !DILocalVariable(name: "psp", arg: 2, scope: !6637, file: !6493, line: 385, type: !6640)
!6644 = !DILocalVariable(name: "thread", scope: !6637, file: !6493, line: 388, type: !6645)
!6645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6646, size: 32)
!6646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6497)
!6647 = !DILocalVariable(name: "guard_len", scope: !6637, file: !6493, line: 405, type: !110)
!6648 = !DILocation(line: 0, scope: !6637)
!6649 = !DILocation(line: 388, column: 34, scope: !6637)
!6650 = !DILocation(line: 390, column: 13, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6637, file: !6493, line: 390, column: 6)
!6652 = !DILocation(line: 390, column: 6, scope: !6637)
!6653 = !DILocation(line: 438, column: 6, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6637, file: !6493, line: 438, column: 6)
!6655 = !DILocation(line: 438, column: 6, scope: !6637)
!6656 = !DILocation(line: 442, column: 3, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6654, file: !6493, line: 440, column: 22)
!6658 = !DILocation(line: 455, column: 1, scope: !6637)
!6659 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6493, file: !6493, line: 530, type: !6660, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !6662)
!6660 = !DISubroutineType(types: !6661)
!6661 = !{null, !6496, !285, !3330}
!6662 = !{!6663, !6664, !6665}
!6663 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6659, file: !6493, line: 530, type: !6496)
!6664 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6659, file: !6493, line: 530, type: !285)
!6665 = !DILocalVariable(name: "_main", arg: 3, scope: !6659, file: !6493, line: 531, type: !3330)
!6666 = !DILocation(line: 0, scope: !6659)
!6667 = !DILocation(line: 535, column: 11, scope: !6659)
!6668 = !DILocation(line: 560, column: 2, scope: !6659)
!6669 = !DILocation(line: 576, column: 2, scope: !6659)
!6670 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6671 = !DILocation(line: 603, column: 2, scope: !6659)
!6672 = distinct !DISubprogram(name: "z_arm_fault", scope: !6673, file: !6673, line: 1036, type: !6674, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6689)
!6673 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6674 = !DISubroutineType(types: !6675)
!6675 = !{null, !110, !110, !110, !6676}
!6676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6677, size: 32)
!6677 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !209, line: 37, baseType: !6678)
!6678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6679)
!6679 = !{!6680, !6681, !6682, !6683, !6684, !6685, !6686, !6687, !6688}
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6678, file: !209, line: 26, baseType: !110, size: 32)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6678, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6678, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6678, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6678, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6678, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6678, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6678, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6678, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6689 = !{!6690, !6691, !6692, !6693, !6694, !6695, !6696, !6697, !6698, !6699}
!6690 = !DILocalVariable(name: "msp", arg: 1, scope: !6672, file: !6673, line: 1036, type: !110)
!6691 = !DILocalVariable(name: "psp", arg: 2, scope: !6672, file: !6673, line: 1036, type: !110)
!6692 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6672, file: !6673, line: 1036, type: !110)
!6693 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6672, file: !6673, line: 1037, type: !6676)
!6694 = !DILocalVariable(name: "reason", scope: !6672, file: !6673, line: 1039, type: !110)
!6695 = !DILocalVariable(name: "fault", scope: !6672, file: !6673, line: 1040, type: !109)
!6696 = !DILocalVariable(name: "recoverable", scope: !6672, file: !6673, line: 1041, type: !360)
!6697 = !DILocalVariable(name: "nested_exc", scope: !6672, file: !6673, line: 1041, type: !360)
!6698 = !DILocalVariable(name: "esf", scope: !6672, file: !6673, line: 1042, type: !2757)
!6699 = !DILocalVariable(name: "esf_copy", scope: !6672, file: !6673, line: 1047, type: !2758)
!6700 = !DILocation(line: 0, scope: !6672)
!6701 = !DILocation(line: 1040, column: 19, scope: !6672)
!6702 = !DILocation(line: 1041, column: 2, scope: !6672)
!6703 = !DILocation(line: 1047, column: 2, scope: !6672)
!6704 = !DILocation(line: 1047, column: 15, scope: !6672)
!6705 = !DILocalVariable(name: "key", arg: 1, scope: !6706, file: !6050, line: 84, type: !32)
!6706 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !6061, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6707)
!6707 = !{!6705}
!6708 = !DILocation(line: 0, scope: !6706, inlinedAt: !6709)
!6709 = distinct !DILocation(line: 1050, column: 2, scope: !6672)
!6710 = !DILocation(line: 95, column: 2, scope: !6706, inlinedAt: !6709)
!6711 = !{i64 1685392}
!6712 = !DILocation(line: 1055, column: 9, scope: !6672)
!6713 = !DILocation(line: 1056, column: 2, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !6673, line: 1056, column: 2)
!6715 = distinct !DILexicalBlock(scope: !6672, file: !6673, line: 1056, column: 2)
!6716 = !DILocation(line: 1056, column: 2, scope: !6715)
!6717 = !DILocation(line: 1056, column: 2, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6714, file: !6673, line: 1056, column: 2)
!6719 = !DILocation(line: 1040, column: 24, scope: !6672)
!6720 = !DILocation(line: 1063, column: 11, scope: !6672)
!6721 = !DILocation(line: 1064, column: 6, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6672, file: !6673, line: 1064, column: 6)
!6723 = !{i8 0, i8 2}
!6724 = !DILocation(line: 1064, column: 6, scope: !6672)
!6725 = !DILocation(line: 1070, column: 20, scope: !6672)
!6726 = !DILocation(line: 1070, column: 2, scope: !6672)
!6727 = !DILocation(line: 1089, column: 6, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6672, file: !6673, line: 1089, column: 6)
!6729 = !DILocation(line: 0, scope: !6728)
!6730 = !DILocation(line: 1089, column: 6, scope: !6672)
!6731 = !DILocation(line: 1090, column: 28, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6733, file: !6673, line: 1090, column: 7)
!6733 = distinct !DILexicalBlock(scope: !6728, file: !6673, line: 1089, column: 18)
!6734 = !DILocation(line: 1090, column: 44, scope: !6732)
!6735 = !DILocation(line: 1090, column: 7, scope: !6733)
!6736 = !DILocation(line: 1091, column: 24, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6732, file: !6673, line: 1090, column: 50)
!6738 = !DILocation(line: 1092, column: 3, scope: !6737)
!6739 = !DILocation(line: 1094, column: 23, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6728, file: !6673, line: 1093, column: 9)
!6741 = !DILocation(line: 1097, column: 2, scope: !6672)
!6742 = !DILocation(line: 1098, column: 1, scope: !6672)
!6743 = distinct !DISubprogram(name: "get_esf", scope: !6673, file: !6673, line: 894, type: !6744, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6747)
!6744 = !DISubroutineType(types: !6745)
!6745 = !{!2757, !110, !110, !110, !6746}
!6746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!6747 = !{!6748, !6749, !6750, !6751, !6752, !6753}
!6748 = !DILocalVariable(name: "msp", arg: 1, scope: !6743, file: !6673, line: 894, type: !110)
!6749 = !DILocalVariable(name: "psp", arg: 2, scope: !6743, file: !6673, line: 894, type: !110)
!6750 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6743, file: !6673, line: 894, type: !110)
!6751 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6743, file: !6673, line: 895, type: !6746)
!6752 = !DILocalVariable(name: "alternative_state_exc", scope: !6743, file: !6673, line: 897, type: !360)
!6753 = !DILocalVariable(name: "ptr_esf", scope: !6743, file: !6673, line: 898, type: !2757)
!6754 = !DILocation(line: 0, scope: !6743)
!6755 = !DILocation(line: 900, column: 14, scope: !6743)
!6756 = !DILocation(line: 902, column: 49, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6743, file: !6673, line: 902, column: 6)
!6758 = !DILocation(line: 902, column: 6, scope: !6743)
!6759 = !DILocation(line: 983, column: 44, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6743, file: !6673, line: 983, column: 6)
!6761 = !DILocation(line: 985, column: 3, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6763, file: !6673, line: 985, column: 3)
!6763 = distinct !DILexicalBlock(scope: !6764, file: !6673, line: 985, column: 3)
!6764 = distinct !DILexicalBlock(scope: !6765, file: !6673, line: 985, column: 3)
!6765 = distinct !DILexicalBlock(scope: !6766, file: !6673, line: 985, column: 3)
!6766 = distinct !DILexicalBlock(scope: !6760, file: !6673, line: 984, column: 47)
!6767 = !DILocation(line: 986, column: 3, scope: !6766)
!6768 = !DILocation(line: 983, column: 18, scope: !6760)
!6769 = !DILocation(line: 991, column: 7, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6771, file: !6673, line: 990, column: 30)
!6771 = distinct !DILexicalBlock(scope: !6743, file: !6673, line: 990, column: 6)
!6772 = !DILocation(line: 998, column: 16, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !6673, line: 995, column: 10)
!6774 = distinct !DILexicalBlock(scope: !6770, file: !6673, line: 991, column: 7)
!6775 = !DILocation(line: 1002, column: 2, scope: !6743)
!6776 = !DILocation(line: 1003, column: 1, scope: !6743)
!6777 = distinct !DISubprogram(name: "fault_handle", scope: !6673, file: !6673, line: 786, type: !6778, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6780)
!6778 = !DISubroutineType(types: !6779)
!6779 = !{!110, !2757, !109, !6746}
!6780 = !{!6781, !6782, !6783, !6784}
!6781 = !DILocalVariable(name: "esf", arg: 1, scope: !6777, file: !6673, line: 786, type: !2757)
!6782 = !DILocalVariable(name: "fault", arg: 2, scope: !6777, file: !6673, line: 786, type: !109)
!6783 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6777, file: !6673, line: 786, type: !6746)
!6784 = !DILocalVariable(name: "reason", scope: !6777, file: !6673, line: 788, type: !110)
!6785 = !DILocation(line: 0, scope: !6777)
!6786 = !DILocation(line: 790, column: 15, scope: !6777)
!6787 = !DILocation(line: 792, column: 2, scope: !6777)
!6788 = !DILocation(line: 794, column: 12, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6777, file: !6673, line: 792, column: 17)
!6790 = !DILocation(line: 795, column: 3, scope: !6789)
!6791 = !DILocation(line: 800, column: 12, scope: !6789)
!6792 = !DILocation(line: 801, column: 3, scope: !6789)
!6793 = !DILocation(line: 803, column: 12, scope: !6789)
!6794 = !DILocation(line: 804, column: 3, scope: !6789)
!6795 = !DILocation(line: 806, column: 12, scope: !6789)
!6796 = !DILocation(line: 807, column: 3, scope: !6789)
!6797 = !DILocation(line: 814, column: 3, scope: !6789)
!6798 = !DILocation(line: 815, column: 3, scope: !6789)
!6799 = !DILocation(line: 820, column: 3, scope: !6789)
!6800 = !DILocation(line: 821, column: 3, scope: !6789)
!6801 = !DILocation(line: 829, column: 2, scope: !6777)
!6802 = distinct !DISubprogram(name: "hard_fault", scope: !6673, file: !6673, line: 709, type: !6803, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6805)
!6803 = !DISubroutineType(types: !6804)
!6804 = !{!110, !2757, !6746}
!6805 = !{!6806, !6807, !6808}
!6806 = !DILocalVariable(name: "esf", arg: 1, scope: !6802, file: !6673, line: 709, type: !2757)
!6807 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6802, file: !6673, line: 709, type: !6746)
!6808 = !DILocalVariable(name: "reason", scope: !6802, file: !6673, line: 711, type: !110)
!6809 = !DILocation(line: 0, scope: !6802)
!6810 = !DILocation(line: 713, column: 2, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !6673, line: 713, column: 2)
!6812 = distinct !DILexicalBlock(scope: !6813, file: !6673, line: 713, column: 2)
!6813 = distinct !DILexicalBlock(scope: !6814, file: !6673, line: 713, column: 2)
!6814 = distinct !DILexicalBlock(scope: !6802, file: !6673, line: 713, column: 2)
!6815 = !DILocation(line: 732, column: 15, scope: !6802)
!6816 = !DILocation(line: 734, column: 12, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6802, file: !6673, line: 734, column: 6)
!6818 = !DILocation(line: 734, column: 17, scope: !6817)
!6819 = !DILocation(line: 734, column: 41, scope: !6817)
!6820 = !DILocation(line: 734, column: 6, scope: !6802)
!6821 = !DILocation(line: 735, column: 3, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6823, file: !6673, line: 735, column: 3)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !6673, line: 735, column: 3)
!6824 = distinct !DILexicalBlock(scope: !6825, file: !6673, line: 735, column: 3)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !6673, line: 735, column: 3)
!6826 = distinct !DILexicalBlock(scope: !6817, file: !6673, line: 734, column: 47)
!6827 = !DILocation(line: 736, column: 2, scope: !6826)
!6828 = !DILocation(line: 736, column: 19, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6817, file: !6673, line: 736, column: 13)
!6830 = !DILocation(line: 736, column: 49, scope: !6829)
!6831 = !DILocation(line: 736, column: 13, scope: !6817)
!6832 = !DILocation(line: 737, column: 3, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6834, file: !6673, line: 737, column: 3)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !6673, line: 737, column: 3)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !6673, line: 737, column: 3)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !6673, line: 737, column: 3)
!6837 = distinct !DILexicalBlock(scope: !6829, file: !6673, line: 736, column: 55)
!6838 = !DILocation(line: 738, column: 2, scope: !6837)
!6839 = !DILocation(line: 738, column: 19, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6829, file: !6673, line: 738, column: 13)
!6841 = !DILocation(line: 738, column: 24, scope: !6840)
!6842 = !DILocation(line: 738, column: 47, scope: !6840)
!6843 = !DILocation(line: 738, column: 13, scope: !6829)
!6844 = !DILocation(line: 739, column: 3, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6846, file: !6673, line: 739, column: 3)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !6673, line: 739, column: 3)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !6673, line: 739, column: 3)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !6673, line: 739, column: 3)
!6849 = distinct !DILexicalBlock(scope: !6840, file: !6673, line: 738, column: 53)
!6850 = !DILocation(line: 740, column: 7, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6849, file: !6673, line: 740, column: 7)
!6852 = !DILocation(line: 740, column: 7, scope: !6849)
!6853 = !DILocation(line: 741, column: 4, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6855, file: !6673, line: 741, column: 4)
!6855 = distinct !DILexicalBlock(scope: !6856, file: !6673, line: 741, column: 4)
!6856 = distinct !DILexicalBlock(scope: !6857, file: !6673, line: 741, column: 4)
!6857 = distinct !DILexicalBlock(scope: !6858, file: !6673, line: 741, column: 4)
!6858 = distinct !DILexicalBlock(scope: !6851, file: !6673, line: 740, column: 38)
!6859 = !DILocation(line: 742, column: 24, scope: !6858)
!6860 = !DILocation(line: 743, column: 3, scope: !6858)
!6861 = !DILocation(line: 743, column: 20, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6851, file: !6673, line: 743, column: 14)
!6863 = !DILocation(line: 743, column: 25, scope: !6862)
!6864 = !DILocation(line: 743, column: 52, scope: !6862)
!6865 = !DILocation(line: 743, column: 14, scope: !6851)
!6866 = !DILocation(line: 744, column: 13, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6862, file: !6673, line: 743, column: 58)
!6868 = !DILocation(line: 745, column: 3, scope: !6867)
!6869 = !DILocation(line: 745, column: 20, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6862, file: !6673, line: 745, column: 14)
!6871 = !DILocation(line: 745, column: 25, scope: !6870)
!6872 = !DILocation(line: 745, column: 52, scope: !6870)
!6873 = !DILocation(line: 745, column: 14, scope: !6862)
!6874 = !DILocation(line: 746, column: 13, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6870, file: !6673, line: 745, column: 58)
!6876 = !DILocation(line: 747, column: 3, scope: !6875)
!6877 = !DILocation(line: 747, column: 20, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6870, file: !6673, line: 747, column: 14)
!6879 = !DILocation(line: 747, column: 52, scope: !6878)
!6880 = !DILocation(line: 747, column: 14, scope: !6870)
!6881 = !DILocation(line: 748, column: 13, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6878, file: !6673, line: 747, column: 58)
!6883 = !DILocation(line: 754, column: 4, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6885, file: !6673, line: 754, column: 4)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !6673, line: 754, column: 4)
!6886 = distinct !DILexicalBlock(scope: !6887, file: !6673, line: 754, column: 4)
!6887 = distinct !DILexicalBlock(scope: !6878, file: !6673, line: 753, column: 10)
!6888 = !DILocation(line: 758, column: 3, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !6673, line: 758, column: 3)
!6890 = distinct !DILexicalBlock(scope: !6891, file: !6673, line: 758, column: 3)
!6891 = distinct !DILexicalBlock(scope: !6892, file: !6673, line: 758, column: 3)
!6892 = distinct !DILexicalBlock(scope: !6840, file: !6673, line: 757, column: 9)
!6893 = !DILocation(line: 766, column: 2, scope: !6802)
!6894 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6673, file: !6673, line: 229, type: !6778, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6895)
!6895 = !{!6896, !6897, !6898, !6899, !6900, !6901, !6904}
!6896 = !DILocalVariable(name: "esf", arg: 1, scope: !6894, file: !6673, line: 229, type: !2757)
!6897 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6894, file: !6673, line: 229, type: !109)
!6898 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6894, file: !6673, line: 230, type: !6746)
!6899 = !DILocalVariable(name: "reason", scope: !6894, file: !6673, line: 232, type: !110)
!6900 = !DILocalVariable(name: "mmfar", scope: !6894, file: !6673, line: 233, type: !110)
!6901 = !DILocalVariable(name: "temp", scope: !6902, file: !6673, line: 254, type: !110)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !6673, line: 244, column: 48)
!6903 = distinct !DILexicalBlock(scope: !6894, file: !6673, line: 244, column: 6)
!6904 = !DILocalVariable(name: "min_stack_ptr", scope: !6905, file: !6673, line: 309, type: !110)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !6673, line: 308, column: 43)
!6906 = distinct !DILexicalBlock(scope: !6907, file: !6673, line: 308, column: 7)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !6673, line: 289, column: 40)
!6908 = distinct !DILexicalBlock(scope: !6894, file: !6673, line: 288, column: 6)
!6909 = !DILocation(line: 0, scope: !6894)
!6910 = !DILocation(line: 235, column: 2, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !6673, line: 235, column: 2)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !6673, line: 235, column: 2)
!6913 = distinct !DILexicalBlock(scope: !6914, file: !6673, line: 235, column: 2)
!6914 = distinct !DILexicalBlock(scope: !6894, file: !6673, line: 235, column: 2)
!6915 = !DILocation(line: 237, column: 12, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6894, file: !6673, line: 237, column: 6)
!6917 = !DILocation(line: 237, column: 17, scope: !6916)
!6918 = !DILocation(line: 237, column: 41, scope: !6916)
!6919 = !DILocation(line: 237, column: 6, scope: !6894)
!6920 = !DILocation(line: 238, column: 3, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6922, file: !6673, line: 238, column: 3)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !6673, line: 238, column: 3)
!6923 = distinct !DILexicalBlock(scope: !6924, file: !6673, line: 238, column: 3)
!6924 = distinct !DILexicalBlock(scope: !6925, file: !6673, line: 238, column: 3)
!6925 = distinct !DILexicalBlock(scope: !6916, file: !6673, line: 237, column: 47)
!6926 = !DILocation(line: 240, column: 2, scope: !6925)
!6927 = !DILocation(line: 241, column: 12, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6894, file: !6673, line: 241, column: 6)
!6929 = !DILocation(line: 241, column: 17, scope: !6928)
!6930 = !DILocation(line: 241, column: 43, scope: !6928)
!6931 = !DILocation(line: 241, column: 6, scope: !6894)
!6932 = !DILocation(line: 242, column: 3, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !6673, line: 242, column: 3)
!6934 = distinct !DILexicalBlock(scope: !6935, file: !6673, line: 242, column: 3)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !6673, line: 242, column: 3)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !6673, line: 242, column: 3)
!6937 = distinct !DILexicalBlock(scope: !6928, file: !6673, line: 241, column: 49)
!6938 = !DILocation(line: 243, column: 2, scope: !6937)
!6939 = !DILocation(line: 244, column: 12, scope: !6903)
!6940 = !DILocation(line: 244, column: 17, scope: !6903)
!6941 = !DILocation(line: 244, column: 42, scope: !6903)
!6942 = !DILocation(line: 244, column: 6, scope: !6894)
!6943 = !DILocation(line: 245, column: 3, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !6673, line: 245, column: 3)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !6673, line: 245, column: 3)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !6673, line: 245, column: 3)
!6947 = distinct !DILexicalBlock(scope: !6902, file: !6673, line: 245, column: 3)
!6948 = !DILocation(line: 254, column: 24, scope: !6902)
!6949 = !DILocation(line: 0, scope: !6902)
!6950 = !DILocation(line: 256, column: 13, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6902, file: !6673, line: 256, column: 7)
!6952 = !DILocation(line: 256, column: 18, scope: !6951)
!6953 = !DILocation(line: 256, column: 44, scope: !6951)
!6954 = !DILocation(line: 256, column: 7, scope: !6902)
!6955 = !DILocation(line: 258, column: 4, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !6673, line: 258, column: 4)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !6673, line: 258, column: 4)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !6673, line: 258, column: 4)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !6673, line: 258, column: 4)
!6960 = distinct !DILexicalBlock(scope: !6951, file: !6673, line: 256, column: 50)
!6961 = !DILocation(line: 259, column: 24, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6960, file: !6673, line: 259, column: 8)
!6963 = !DILocation(line: 259, column: 8, scope: !6960)
!6964 = !DILocation(line: 261, column: 15, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6962, file: !6673, line: 259, column: 30)
!6966 = !DILocation(line: 262, column: 4, scope: !6965)
!6967 = !DILocation(line: 265, column: 12, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6894, file: !6673, line: 265, column: 6)
!6969 = !DILocation(line: 265, column: 17, scope: !6968)
!6970 = !DILocation(line: 265, column: 42, scope: !6968)
!6971 = !DILocation(line: 265, column: 6, scope: !6894)
!6972 = !DILocation(line: 266, column: 3, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6974, file: !6673, line: 266, column: 3)
!6974 = distinct !DILexicalBlock(scope: !6975, file: !6673, line: 266, column: 3)
!6975 = distinct !DILexicalBlock(scope: !6976, file: !6673, line: 266, column: 3)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !6673, line: 266, column: 3)
!6977 = distinct !DILexicalBlock(scope: !6968, file: !6673, line: 265, column: 48)
!6978 = !DILocation(line: 267, column: 2, scope: !6977)
!6979 = !DILocation(line: 288, column: 12, scope: !6908)
!6980 = !DILocation(line: 288, column: 17, scope: !6908)
!6981 = !DILocation(line: 288, column: 41, scope: !6908)
!6982 = !DILocation(line: 289, column: 9, scope: !6908)
!6983 = !DILocation(line: 289, column: 14, scope: !6908)
!6984 = !DILocation(line: 288, column: 6, scope: !6894)
!6985 = !DILocation(line: 308, column: 12, scope: !6906)
!6986 = !DILocation(line: 308, column: 17, scope: !6906)
!6987 = !DILocation(line: 308, column: 7, scope: !6907)
!6988 = !DILocation(line: 310, column: 6, scope: !6905)
!6989 = !DILocation(line: 309, column: 29, scope: !6905)
!6990 = !DILocation(line: 0, scope: !6905)
!6991 = !DILocation(line: 312, column: 8, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6905, file: !6673, line: 312, column: 8)
!6993 = !DILocation(line: 312, column: 8, scope: !6905)
!6994 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6995, file: !6388, line: 1099, type: !110)
!6995 = distinct !DISubprogram(name: "__set_PSP", scope: !6388, file: !6388, line: 1099, type: !6074, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6996)
!6996 = !{!6994}
!6997 = !DILocation(line: 0, scope: !6995, inlinedAt: !6998)
!6998 = distinct !DILocation(line: 338, column: 5, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6992, file: !6673, line: 312, column: 23)
!7000 = !DILocation(line: 1101, column: 3, scope: !6995, inlinedAt: !6998)
!7001 = !{i64 2480117}
!7002 = !DILocation(line: 341, column: 4, scope: !6999)
!7003 = !DILocation(line: 342, column: 5, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !7005, file: !6673, line: 342, column: 5)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !6673, line: 342, column: 5)
!7006 = distinct !DILexicalBlock(scope: !6992, file: !6673, line: 341, column: 11)
!7007 = !DILocation(line: 342, column: 5, scope: !7005)
!7008 = !DILocation(line: 342, column: 5, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7004, file: !6673, line: 342, column: 5)
!7010 = !DILocation(line: 366, column: 12, scope: !6894)
!7011 = !DILocation(line: 369, column: 15, scope: !6894)
!7012 = !DILocation(line: 371, column: 2, scope: !6894)
!7013 = distinct !DISubprogram(name: "bus_fault", scope: !6673, file: !6673, line: 383, type: !7014, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7016)
!7014 = !DISubroutineType(types: !7015)
!7015 = !{!109, !2757, !109, !6746}
!7016 = !{!7017, !7018, !7019, !7020, !7021}
!7017 = !DILocalVariable(name: "esf", arg: 1, scope: !7013, file: !6673, line: 383, type: !2757)
!7018 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7013, file: !6673, line: 383, type: !109)
!7019 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7013, file: !6673, line: 383, type: !6746)
!7020 = !DILocalVariable(name: "reason", scope: !7013, file: !6673, line: 385, type: !110)
!7021 = !DILocalVariable(name: "bfar", scope: !7022, file: !6673, line: 405, type: !110)
!7022 = distinct !DILexicalBlock(scope: !7023, file: !6673, line: 395, column: 42)
!7023 = distinct !DILexicalBlock(scope: !7013, file: !6673, line: 395, column: 6)
!7024 = !DILocation(line: 0, scope: !7013)
!7025 = !DILocation(line: 387, column: 2, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !6673, line: 387, column: 2)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !6673, line: 387, column: 2)
!7028 = distinct !DILexicalBlock(scope: !7029, file: !6673, line: 387, column: 2)
!7029 = distinct !DILexicalBlock(scope: !7013, file: !6673, line: 387, column: 2)
!7030 = !DILocation(line: 389, column: 11, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7013, file: !6673, line: 389, column: 6)
!7032 = !DILocation(line: 389, column: 16, scope: !7031)
!7033 = !DILocation(line: 389, column: 6, scope: !7013)
!7034 = !DILocation(line: 390, column: 3, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !6673, line: 390, column: 3)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !6673, line: 390, column: 3)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !6673, line: 390, column: 3)
!7038 = distinct !DILexicalBlock(scope: !7039, file: !6673, line: 390, column: 3)
!7039 = distinct !DILexicalBlock(scope: !7031, file: !6673, line: 389, column: 39)
!7040 = !DILocation(line: 391, column: 2, scope: !7039)
!7041 = !DILocation(line: 392, column: 11, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7013, file: !6673, line: 392, column: 6)
!7043 = !DILocation(line: 392, column: 16, scope: !7042)
!7044 = !DILocation(line: 392, column: 6, scope: !7013)
!7045 = !DILocation(line: 393, column: 3, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !6673, line: 393, column: 3)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !6673, line: 393, column: 3)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !6673, line: 393, column: 3)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !6673, line: 393, column: 3)
!7050 = distinct !DILexicalBlock(scope: !7042, file: !6673, line: 392, column: 41)
!7051 = !DILocation(line: 394, column: 2, scope: !7050)
!7052 = !DILocation(line: 395, column: 11, scope: !7023)
!7053 = !DILocation(line: 395, column: 16, scope: !7023)
!7054 = !DILocation(line: 395, column: 6, scope: !7013)
!7055 = !DILocation(line: 396, column: 3, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !6673, line: 396, column: 3)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !6673, line: 396, column: 3)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !6673, line: 396, column: 3)
!7059 = distinct !DILexicalBlock(scope: !7022, file: !6673, line: 396, column: 3)
!7060 = !DILocation(line: 405, column: 3, scope: !7022)
!7061 = !DILocation(line: 0, scope: !7022)
!7062 = !DILocation(line: 407, column: 13, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7022, file: !6673, line: 407, column: 7)
!7064 = !DILocation(line: 407, column: 18, scope: !7063)
!7065 = !DILocation(line: 407, column: 44, scope: !7063)
!7066 = !DILocation(line: 407, column: 7, scope: !7022)
!7067 = !DILocation(line: 408, column: 4, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7069, file: !6673, line: 408, column: 4)
!7069 = distinct !DILexicalBlock(scope: !7070, file: !6673, line: 408, column: 4)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !6673, line: 408, column: 4)
!7071 = distinct !DILexicalBlock(scope: !7072, file: !6673, line: 408, column: 4)
!7072 = distinct !DILexicalBlock(scope: !7063, file: !6673, line: 407, column: 50)
!7073 = !DILocation(line: 409, column: 24, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7072, file: !6673, line: 409, column: 8)
!7075 = !DILocation(line: 409, column: 8, scope: !7072)
!7076 = !DILocation(line: 411, column: 15, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7074, file: !6673, line: 409, column: 30)
!7078 = !DILocation(line: 412, column: 4, scope: !7077)
!7079 = !DILocation(line: 415, column: 11, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7013, file: !6673, line: 415, column: 6)
!7081 = !DILocation(line: 415, column: 16, scope: !7080)
!7082 = !DILocation(line: 415, column: 6, scope: !7013)
!7083 = !DILocation(line: 416, column: 3, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !6673, line: 416, column: 3)
!7085 = distinct !DILexicalBlock(scope: !7086, file: !6673, line: 416, column: 3)
!7086 = distinct !DILexicalBlock(scope: !7087, file: !6673, line: 416, column: 3)
!7087 = distinct !DILexicalBlock(scope: !7088, file: !6673, line: 416, column: 3)
!7088 = distinct !DILexicalBlock(scope: !7080, file: !6673, line: 415, column: 44)
!7089 = !DILocation(line: 417, column: 2, scope: !7088)
!7090 = !DILocation(line: 418, column: 12, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7013, file: !6673, line: 418, column: 6)
!7092 = !DILocation(line: 418, column: 17, scope: !7091)
!7093 = !DILocation(line: 418, column: 41, scope: !7091)
!7094 = !DILocation(line: 418, column: 6, scope: !7013)
!7095 = !DILocation(line: 419, column: 3, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !6673, line: 419, column: 3)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !6673, line: 419, column: 3)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !6673, line: 419, column: 3)
!7099 = distinct !DILexicalBlock(scope: !7100, file: !6673, line: 419, column: 3)
!7100 = distinct !DILexicalBlock(scope: !7091, file: !6673, line: 418, column: 47)
!7101 = !DILocation(line: 421, column: 2, scope: !7100)
!7102 = !DILocation(line: 524, column: 12, scope: !7013)
!7103 = !DILocation(line: 526, column: 15, scope: !7013)
!7104 = !DILocation(line: 528, column: 2, scope: !7013)
!7105 = distinct !DISubprogram(name: "usage_fault", scope: !6673, file: !6673, line: 539, type: !7106, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7110)
!7106 = !DISubroutineType(types: !7107)
!7107 = !{!110, !7108}
!7108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7109, size: 32)
!7109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2758)
!7110 = !{!7111, !7112}
!7111 = !DILocalVariable(name: "esf", arg: 1, scope: !7105, file: !6673, line: 539, type: !7108)
!7112 = !DILocalVariable(name: "reason", scope: !7105, file: !6673, line: 541, type: !110)
!7113 = !DILocation(line: 0, scope: !7105)
!7114 = !DILocation(line: 543, column: 2, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7116, file: !6673, line: 543, column: 2)
!7116 = distinct !DILexicalBlock(scope: !7117, file: !6673, line: 543, column: 2)
!7117 = distinct !DILexicalBlock(scope: !7118, file: !6673, line: 543, column: 2)
!7118 = distinct !DILexicalBlock(scope: !7105, file: !6673, line: 543, column: 2)
!7119 = !DILocation(line: 546, column: 12, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7105, file: !6673, line: 546, column: 6)
!7121 = !DILocation(line: 546, column: 17, scope: !7120)
!7122 = !DILocation(line: 546, column: 43, scope: !7120)
!7123 = !DILocation(line: 546, column: 6, scope: !7105)
!7124 = !DILocation(line: 547, column: 3, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7126, file: !6673, line: 547, column: 3)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !6673, line: 547, column: 3)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !6673, line: 547, column: 3)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !6673, line: 547, column: 3)
!7129 = distinct !DILexicalBlock(scope: !7120, file: !6673, line: 546, column: 49)
!7130 = !DILocation(line: 548, column: 2, scope: !7129)
!7131 = !DILocation(line: 549, column: 12, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7105, file: !6673, line: 549, column: 6)
!7133 = !DILocation(line: 549, column: 17, scope: !7132)
!7134 = !DILocation(line: 549, column: 43, scope: !7132)
!7135 = !DILocation(line: 549, column: 6, scope: !7105)
!7136 = !DILocation(line: 550, column: 3, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7138, file: !6673, line: 550, column: 3)
!7138 = distinct !DILexicalBlock(scope: !7139, file: !6673, line: 550, column: 3)
!7139 = distinct !DILexicalBlock(scope: !7140, file: !6673, line: 550, column: 3)
!7140 = distinct !DILexicalBlock(scope: !7141, file: !6673, line: 550, column: 3)
!7141 = distinct !DILexicalBlock(scope: !7132, file: !6673, line: 549, column: 49)
!7142 = !DILocation(line: 551, column: 2, scope: !7141)
!7143 = !DILocation(line: 567, column: 12, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7105, file: !6673, line: 567, column: 6)
!7145 = !DILocation(line: 567, column: 17, scope: !7144)
!7146 = !DILocation(line: 567, column: 38, scope: !7144)
!7147 = !DILocation(line: 567, column: 6, scope: !7105)
!7148 = !DILocation(line: 568, column: 3, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !6673, line: 568, column: 3)
!7150 = distinct !DILexicalBlock(scope: !7151, file: !6673, line: 568, column: 3)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !6673, line: 568, column: 3)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !6673, line: 568, column: 3)
!7153 = distinct !DILexicalBlock(scope: !7144, file: !6673, line: 567, column: 44)
!7154 = !DILocation(line: 569, column: 2, scope: !7153)
!7155 = !DILocation(line: 570, column: 12, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7105, file: !6673, line: 570, column: 6)
!7157 = !DILocation(line: 570, column: 17, scope: !7156)
!7158 = !DILocation(line: 570, column: 39, scope: !7156)
!7159 = !DILocation(line: 570, column: 6, scope: !7105)
!7160 = !DILocation(line: 571, column: 3, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7162, file: !6673, line: 571, column: 3)
!7162 = distinct !DILexicalBlock(scope: !7163, file: !6673, line: 571, column: 3)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !6673, line: 571, column: 3)
!7164 = distinct !DILexicalBlock(scope: !7165, file: !6673, line: 571, column: 3)
!7165 = distinct !DILexicalBlock(scope: !7156, file: !6673, line: 570, column: 45)
!7166 = !DILocation(line: 572, column: 2, scope: !7165)
!7167 = !DILocation(line: 573, column: 12, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7105, file: !6673, line: 573, column: 6)
!7169 = !DILocation(line: 573, column: 17, scope: !7168)
!7170 = !DILocation(line: 573, column: 42, scope: !7168)
!7171 = !DILocation(line: 573, column: 6, scope: !7105)
!7172 = !DILocation(line: 574, column: 3, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7174, file: !6673, line: 574, column: 3)
!7174 = distinct !DILexicalBlock(scope: !7175, file: !6673, line: 574, column: 3)
!7175 = distinct !DILexicalBlock(scope: !7176, file: !6673, line: 574, column: 3)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !6673, line: 574, column: 3)
!7177 = distinct !DILexicalBlock(scope: !7168, file: !6673, line: 573, column: 48)
!7178 = !DILocation(line: 575, column: 2, scope: !7177)
!7179 = !DILocation(line: 576, column: 12, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7105, file: !6673, line: 576, column: 6)
!7181 = !DILocation(line: 576, column: 17, scope: !7180)
!7182 = !DILocation(line: 576, column: 44, scope: !7180)
!7183 = !DILocation(line: 576, column: 6, scope: !7105)
!7184 = !DILocation(line: 577, column: 3, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7186, file: !6673, line: 577, column: 3)
!7186 = distinct !DILexicalBlock(scope: !7187, file: !6673, line: 577, column: 3)
!7187 = distinct !DILexicalBlock(scope: !7188, file: !6673, line: 577, column: 3)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !6673, line: 577, column: 3)
!7189 = distinct !DILexicalBlock(scope: !7180, file: !6673, line: 576, column: 50)
!7190 = !DILocation(line: 578, column: 2, scope: !7189)
!7191 = !DILocation(line: 581, column: 12, scope: !7105)
!7192 = !DILocation(line: 583, column: 2, scope: !7105)
!7193 = distinct !DISubprogram(name: "debug_monitor", scope: !6673, file: !6673, line: 632, type: !7194, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7196)
!7194 = !DISubroutineType(types: !7195)
!7195 = !{null, !2757, !6746}
!7196 = !{!7197, !7198}
!7197 = !DILocalVariable(name: "esf", arg: 1, scope: !7193, file: !6673, line: 632, type: !2757)
!7198 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7193, file: !6673, line: 632, type: !6746)
!7199 = !DILocation(line: 0, scope: !7193)
!7200 = !DILocation(line: 634, column: 15, scope: !7193)
!7201 = !DILocation(line: 636, column: 2, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7203, file: !6673, line: 636, column: 2)
!7203 = distinct !DILexicalBlock(scope: !7204, file: !6673, line: 636, column: 2)
!7204 = distinct !DILexicalBlock(scope: !7205, file: !6673, line: 636, column: 2)
!7205 = distinct !DILexicalBlock(scope: !7193, file: !6673, line: 636, column: 2)
!7206 = !DILocation(line: 652, column: 1, scope: !7193)
!7207 = distinct !DISubprogram(name: "reserved_exception", scope: !6673, file: !6673, line: 776, type: !7208, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7210)
!7208 = !DISubroutineType(types: !7209)
!7209 = !{null, !7108, !109}
!7210 = !{!7211, !7212}
!7211 = !DILocalVariable(name: "esf", arg: 1, scope: !7207, file: !6673, line: 776, type: !7108)
!7212 = !DILocalVariable(name: "fault", arg: 2, scope: !7207, file: !6673, line: 776, type: !109)
!7213 = !DILocation(line: 0, scope: !7207)
!7214 = !DILocation(line: 780, column: 2, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7216, file: !6673, line: 780, column: 2)
!7216 = distinct !DILexicalBlock(scope: !7217, file: !6673, line: 780, column: 2)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !6673, line: 780, column: 2)
!7218 = distinct !DILexicalBlock(scope: !7207, file: !6673, line: 780, column: 2)
!7219 = !DILocation(line: 783, column: 1, scope: !7207)
!7220 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6673, file: !6673, line: 658, type: !7221, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7223)
!7221 = !DISubroutineType(types: !7222)
!7222 = !{!360, !2757}
!7223 = !{!7224, !7225, !7226}
!7224 = !DILocalVariable(name: "esf", arg: 1, scope: !7220, file: !6673, line: 658, type: !2757)
!7225 = !DILocalVariable(name: "ret_addr", scope: !7220, file: !6673, line: 660, type: !2800)
!7226 = !DILocalVariable(name: "fault_insn", scope: !7220, file: !6673, line: 686, type: !192)
!7227 = !DILocation(line: 0, scope: !7220)
!7228 = !DILocation(line: 660, column: 46, scope: !7220)
!7229 = !DILocation(line: 660, column: 23, scope: !7220)
!7230 = !DILocation(line: 682, column: 11, scope: !7220)
!7231 = !DILocation(line: 271, column: 3, scope: !7232, inlinedAt: !7233)
!7232 = distinct !DISubprogram(name: "__DSB", scope: !6388, file: !6388, line: 269, type: !3062, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !2045)
!7233 = distinct !DILocation(line: 683, column: 2, scope: !7220)
!7234 = !{i64 2456252}
!7235 = !DILocation(line: 260, column: 3, scope: !7236, inlinedAt: !7237)
!7236 = distinct !DISubprogram(name: "__ISB", scope: !6388, file: !6388, line: 258, type: !3062, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !2045)
!7237 = distinct !DILocation(line: 684, column: 2, scope: !7220)
!7238 = !{i64 2455969}
!7239 = !DILocation(line: 686, column: 35, scope: !7220)
!7240 = !DILocation(line: 686, column: 24, scope: !7220)
!7241 = !DILocation(line: 688, column: 11, scope: !7220)
!7242 = !DILocation(line: 271, column: 3, scope: !7232, inlinedAt: !7243)
!7243 = distinct !DILocation(line: 689, column: 2, scope: !7220)
!7244 = !DILocation(line: 260, column: 3, scope: !7236, inlinedAt: !7245)
!7245 = distinct !DILocation(line: 690, column: 2, scope: !7220)
!7246 = !DILocation(line: 693, column: 45, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7220, file: !6673, line: 693, column: 6)
!7248 = !DILocation(line: 699, column: 1, scope: !7220)
!7249 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6673, file: !6673, line: 1107, type: !3062, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !2045)
!7250 = !DILocation(line: 1111, column: 11, scope: !7249)
!7251 = !DILocation(line: 1136, column: 1, scope: !7249)
!7252 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7253, file: !7253, line: 26, type: !3062, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !7254)
!7253 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7254 = !{!7255}
!7255 = !DILocalVariable(name: "irq", scope: !7252, file: !7253, line: 28, type: !109)
!7256 = !DILocation(line: 0, scope: !7252)
!7257 = !DILocation(line: 30, column: 2, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7252, file: !7253, line: 30, column: 2)
!7259 = !DILocation(line: 31, column: 3, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7261, file: !7253, line: 30, column: 39)
!7261 = distinct !DILexicalBlock(scope: !7258, file: !7253, line: 30, column: 2)
!7262 = !DILocation(line: 30, column: 35, scope: !7261)
!7263 = !DILocation(line: 30, column: 13, scope: !7261)
!7264 = distinct !{!7264, !7257, !7265}
!7265 = !DILocation(line: 32, column: 2, scope: !7258)
!7266 = !DILocation(line: 33, column: 1, scope: !7252)
!7267 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !548, file: !548, line: 1638, type: !6428, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !7268)
!7268 = !{!7269, !7270}
!7269 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7267, file: !548, line: 1638, type: !872)
!7270 = !DILocalVariable(name: "priority", arg: 2, scope: !7267, file: !548, line: 1638, type: !110)
!7271 = !DILocation(line: 0, scope: !7267)
!7272 = !DILocation(line: 1640, column: 7, scope: !7267)
!7273 = !DILocation(line: 0, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7267, file: !548, line: 1640, column: 7)
!7275 = !DILocation(line: 1648, column: 1, scope: !7267)
!7276 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7277, file: !7277, line: 27, type: !7278, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !7384)
!7277 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7278 = !DISubroutineType(types: !7279)
!7279 = !{null, !7280}
!7280 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !7281)
!7281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7282, size: 32)
!7282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !7283)
!7283 = !{!7284, !7342, !7354, !7355, !7356, !7357, !7358, !7364, !7379}
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7282, file: !156, line: 247, baseType: !7285, size: 384)
!7285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !7286)
!7286 = !{!7287, !7311, !7318, !7319, !7320, !7329, !7330, !7331}
!7287 = !DIDerivedType(tag: DW_TAG_member, scope: !7285, file: !156, line: 60, baseType: !7288, size: 64)
!7288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7285, file: !156, line: 60, size: 64, elements: !7289)
!7289 = !{!7290, !7305}
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7288, file: !156, line: 61, baseType: !7291, size: 64)
!7291 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !7292)
!7292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !7293)
!7293 = !{!7294, !7300}
!7294 = !DIDerivedType(tag: DW_TAG_member, scope: !7292, file: !127, line: 38, baseType: !7295, size: 32)
!7295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7292, file: !127, line: 38, size: 32, elements: !7296)
!7296 = !{!7297, !7299}
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7295, file: !127, line: 39, baseType: !7298, size: 32)
!7298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7292, size: 32)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7295, file: !127, line: 40, baseType: !7298, size: 32)
!7300 = !DIDerivedType(tag: DW_TAG_member, scope: !7292, file: !127, line: 42, baseType: !7301, size: 32, offset: 32)
!7301 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7292, file: !127, line: 42, size: 32, elements: !7302)
!7302 = !{!7303, !7304}
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7301, file: !127, line: 43, baseType: !7298, size: 32)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7301, file: !127, line: 44, baseType: !7298, size: 32)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7288, file: !156, line: 62, baseType: !7306, size: 64)
!7306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !7307)
!7307 = !{!7308}
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7306, file: !168, line: 50, baseType: !7309, size: 64)
!7309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7310, size: 64, elements: !173)
!7310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7306, size: 32)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7285, file: !156, line: 68, baseType: !7312, size: 32, offset: 64)
!7312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7313, size: 32)
!7313 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !7314)
!7314 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !7315)
!7315 = !{!7316}
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7314, file: !122, line: 232, baseType: !7317, size: 64)
!7317 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !7292)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7285, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7285, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!7320 = !DIDerivedType(tag: DW_TAG_member, scope: !7285, file: !156, line: 90, baseType: !7321, size: 16, offset: 112)
!7321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7285, file: !156, line: 90, size: 16, elements: !7322)
!7322 = !{!7323, !7328}
!7323 = !DIDerivedType(tag: DW_TAG_member, scope: !7321, file: !156, line: 91, baseType: !7324, size: 16)
!7324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7321, file: !156, line: 91, size: 16, elements: !7325)
!7325 = !{!7326, !7327}
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7324, file: !156, line: 96, baseType: !188, size: 8)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7324, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7321, file: !156, line: 100, baseType: !192, size: 16)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7285, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7285, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7285, file: !156, line: 131, baseType: !7332, size: 192, offset: 192)
!7332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !7333)
!7333 = !{!7334, !7335, !7341}
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7332, file: !122, line: 245, baseType: !7291, size: 64)
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7332, file: !122, line: 246, baseType: !7336, size: 32, offset: 64)
!7336 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !7337)
!7337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7338, size: 32)
!7338 = !DISubroutineType(types: !7339)
!7339 = !{null, !7340}
!7340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7332, size: 32)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7332, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7282, file: !156, line: 250, baseType: !7343, size: 288, offset: 384)
!7343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !7344)
!7344 = !{!7345, !7346, !7347, !7348, !7349, !7350, !7351, !7352, !7353}
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7343, file: !209, line: 26, baseType: !110, size: 32)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7343, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7343, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7343, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7343, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7343, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7343, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7343, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7343, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7282, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7282, file: !156, line: 256, baseType: !7313, size: 64, offset: 704)
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7282, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7282, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7282, file: !156, line: 300, baseType: !7359, size: 96, offset: 1056)
!7359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !7360)
!7360 = !{!7361, !7362, !7363}
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7359, file: !156, line: 153, baseType: !22, size: 32)
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7359, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7359, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7282, file: !156, line: 325, baseType: !7365, size: 32, offset: 1152)
!7365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7366, size: 32)
!7366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !7367)
!7367 = !{!7368, !7374, !7375}
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7366, file: !118, line: 5074, baseType: !7369, size: 96)
!7369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !7370)
!7370 = !{!7371, !7372, !7373}
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7369, file: !241, line: 57, baseType: !244, size: 32)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7369, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7369, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7366, file: !118, line: 5075, baseType: !7313, size: 64, offset: 96)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7366, file: !118, line: 5076, baseType: !7376, size: 32, offset: 160)
!7376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !7377)
!7377 = !{!7378}
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7376, file: !251, line: 52, baseType: !22, size: 32)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7282, file: !156, line: 343, baseType: !7380, size: 64, offset: 1184)
!7380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !7381)
!7381 = !{!7382, !7383}
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7380, file: !209, line: 63, baseType: !110, size: 32)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7380, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!7384 = !{!7385}
!7385 = !DILocalVariable(name: "thread", arg: 1, scope: !7276, file: !7277, line: 27, type: !7280)
!7386 = !DILocation(line: 0, scope: !7276)
!7387 = !DILocation(line: 29, column: 6, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7276, file: !7277, line: 29, column: 6)
!7389 = !DILocation(line: 29, column: 15, scope: !7388)
!7390 = !DILocation(line: 29, column: 6, scope: !7276)
!7391 = !DILocation(line: 1031, column: 3, scope: !7392, inlinedAt: !7397)
!7392 = distinct !DISubprogram(name: "__get_IPSR", scope: !6388, file: !6388, line: 1027, type: !7393, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !7395)
!7393 = !DISubroutineType(types: !7394)
!7394 = !{!110}
!7395 = !{!7396}
!7396 = !DILocalVariable(name: "result", scope: !7392, file: !6388, line: 1029, type: !110)
!7397 = distinct !DILocation(line: 48, column: 10, scope: !7398, inlinedAt: !7402)
!7398 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7399, file: !7399, line: 46, type: !7400, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2846, retainedNodes: !2045)
!7399 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7400 = !DISubroutineType(types: !7401)
!7401 = !{!360}
!7402 = distinct !DILocation(line: 30, column: 7, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7404, file: !7277, line: 30, column: 7)
!7404 = distinct !DILexicalBlock(scope: !7388, file: !7277, line: 29, column: 26)
!7405 = !{i64 2445100}
!7406 = !DILocation(line: 0, scope: !7392, inlinedAt: !7397)
!7407 = !DILocation(line: 48, column: 9, scope: !7398, inlinedAt: !7402)
!7408 = !DILocation(line: 30, column: 7, scope: !7404)
!7409 = !DILocation(line: 42, column: 14, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7403, file: !7277, line: 30, column: 25)
!7411 = !DILocation(line: 48, column: 15, scope: !7410)
!7412 = !DILocation(line: 49, column: 3, scope: !7410)
!7413 = !DILocation(line: 52, column: 2, scope: !7276)
!7414 = !DILocation(line: 53, column: 1, scope: !7276)
!7415 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !407, file: !407, line: 127, type: !3062, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !2045)
!7416 = !DILocation(line: 134, column: 2, scope: !7415)
!7417 = !DILocation(line: 156, column: 1, scope: !7415)
!7418 = !DILocation(line: 0, scope: !406)
!7419 = !DILocation(line: 289, column: 36, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !406, file: !407, line: 285, column: 2)
!7421 = !DILocation(line: 289, column: 42, scope: !7420)
!7422 = !DILocation(line: 300, column: 36, scope: !406)
!7423 = !DILocation(line: 301, column: 35, scope: !406)
!7424 = !DILocation(line: 302, column: 37, scope: !406)
!7425 = !DILocation(line: 311, column: 2, scope: !406)
!7426 = !DILocation(line: 316, column: 1, scope: !406)
!7427 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !576, file: !576, line: 180, type: !3062, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !2045)
!7428 = !DILocation(line: 188, column: 12, scope: !7427)
!7429 = !DILocation(line: 271, column: 3, scope: !7430, inlinedAt: !7431)
!7430 = distinct !DISubprogram(name: "__DSB", scope: !6388, file: !6388, line: 269, type: !3062, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !2045)
!7431 = distinct !DILocation(line: 192, column: 2, scope: !7427)
!7432 = !{i64 2603927}
!7433 = !DILocation(line: 260, column: 3, scope: !7434, inlinedAt: !7435)
!7434 = distinct !DISubprogram(name: "__ISB", scope: !6388, file: !6388, line: 258, type: !3062, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !2045)
!7435 = distinct !DILocation(line: 193, column: 2, scope: !7427)
!7436 = !{i64 2603644}
!7437 = !DILocation(line: 194, column: 1, scope: !7427)
!7438 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !576, file: !576, line: 199, type: !3062, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !2045)
!7439 = !DILocation(line: 282, column: 3, scope: !7440, inlinedAt: !7441)
!7440 = distinct !DISubprogram(name: "__DMB", scope: !6388, file: !6388, line: 280, type: !3062, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !2045)
!7441 = distinct !DILocation(line: 202, column: 2, scope: !7438)
!7442 = !{i64 2604203}
!7443 = !DILocation(line: 205, column: 12, scope: !7438)
!7444 = !DILocation(line: 206, column: 1, scope: !7438)
!7445 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !576, file: !576, line: 275, type: !7446, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7459)
!7446 = !DISubroutineType(types: !7447)
!7447 = !{null, !7448, !1826, !6640, !6640}
!7448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7449, size: 32)
!7449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7450)
!7450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !520, line: 52, size: 96, elements: !7451)
!7451 = !{!7452, !7453, !7454}
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7450, file: !520, line: 53, baseType: !22, size: 32)
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7450, file: !520, line: 54, baseType: !232, size: 32, offset: 32)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7450, file: !520, line: 55, baseType: !7455, size: 32, offset: 64)
!7455 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !526, line: 151, baseType: !7456)
!7456 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !526, line: 149, size: 32, elements: !7457)
!7457 = !{!7458}
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7456, file: !526, line: 150, baseType: !110, size: 32)
!7459 = !{!7460, !7461, !7462, !7463}
!7460 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7445, file: !576, line: 276, type: !7448)
!7461 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7445, file: !576, line: 276, type: !1826)
!7462 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7445, file: !576, line: 277, type: !6640)
!7463 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7445, file: !576, line: 277, type: !6640)
!7464 = !DILocation(line: 0, scope: !7445)
!7465 = !DILocation(line: 279, column: 6, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7445, file: !576, line: 279, column: 6)
!7467 = !DILocation(line: 280, column: 57, scope: !7466)
!7468 = !DILocation(line: 279, column: 6, scope: !7445)
!7469 = !DILocation(line: 282, column: 3, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7471, file: !576, line: 282, column: 3)
!7471 = distinct !DILexicalBlock(scope: !7472, file: !576, line: 282, column: 3)
!7472 = distinct !DILexicalBlock(scope: !7473, file: !576, line: 282, column: 3)
!7473 = distinct !DILexicalBlock(scope: !7466, file: !576, line: 280, column: 69)
!7474 = !DILocation(line: 285, column: 1, scope: !7445)
!7475 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7476, file: !7476, line: 220, type: !7477, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7479)
!7476 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7477 = !DISubroutineType(types: !7478)
!7478 = !{!109, !7448, !1826, !6640, !6640}
!7479 = !{!7480, !7481, !7482, !7483, !7484}
!7480 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7475, file: !7476, line: 221, type: !7448)
!7481 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7475, file: !7476, line: 221, type: !1826)
!7482 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7475, file: !7476, line: 222, type: !6640)
!7483 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7475, file: !7476, line: 223, type: !6640)
!7484 = !DILocalVariable(name: "mpu_reg_index", scope: !7475, file: !7476, line: 225, type: !109)
!7485 = !DILocation(line: 0, scope: !7475)
!7486 = !DILocation(line: 225, column: 22, scope: !7475)
!7487 = !DILocation(line: 233, column: 18, scope: !7475)
!7488 = !DILocation(line: 236, column: 23, scope: !7475)
!7489 = !DILocation(line: 236, column: 21, scope: !7475)
!7490 = !DILocation(line: 238, column: 2, scope: !7475)
!7491 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !576, file: !576, line: 105, type: !7492, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7494)
!7492 = !DISubroutineType(types: !7493)
!7493 = !{!109, !7448, !178, !178, !360}
!7494 = !{!7495, !7496, !7497, !7498, !7499, !7500}
!7495 = !DILocalVariable(name: "regions", arg: 1, scope: !7491, file: !576, line: 106, type: !7448)
!7496 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7491, file: !576, line: 106, type: !178)
!7497 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7491, file: !576, line: 106, type: !178)
!7498 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7491, file: !576, line: 107, type: !360)
!7499 = !DILocalVariable(name: "i", scope: !7491, file: !576, line: 109, type: !109)
!7500 = !DILocalVariable(name: "reg_index", scope: !7491, file: !576, line: 110, type: !109)
!7501 = !DILocation(line: 0, scope: !7491)
!7502 = !DILocation(line: 110, column: 18, scope: !7491)
!7503 = !DILocation(line: 112, column: 16, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7505, file: !576, line: 112, column: 2)
!7505 = distinct !DILexicalBlock(scope: !7491, file: !576, line: 112, column: 2)
!7506 = !DILocation(line: 112, column: 2, scope: !7505)
!7507 = !DILocation(line: 113, column: 7, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !576, line: 113, column: 7)
!7509 = distinct !DILexicalBlock(scope: !7504, file: !576, line: 112, column: 36)
!7510 = !DILocation(line: 113, column: 18, scope: !7508)
!7511 = !DILocation(line: 113, column: 23, scope: !7508)
!7512 = !DILocation(line: 113, column: 7, scope: !7509)
!7513 = !DILocation(line: 118, column: 23, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7509, file: !576, line: 118, column: 7)
!7515 = !DILocation(line: 119, column: 7, scope: !7514)
!7516 = !DILocation(line: 118, column: 7, scope: !7509)
!7517 = !DILocation(line: 120, column: 4, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7519, file: !576, line: 120, column: 4)
!7519 = distinct !DILexicalBlock(scope: !7520, file: !576, line: 120, column: 4)
!7520 = distinct !DILexicalBlock(scope: !7521, file: !576, line: 120, column: 4)
!7521 = distinct !DILexicalBlock(scope: !7522, file: !576, line: 120, column: 4)
!7522 = distinct !DILexicalBlock(scope: !7514, file: !576, line: 119, column: 45)
!7523 = !DILocation(line: 121, column: 4, scope: !7522)
!7524 = !DILocation(line: 124, column: 36, scope: !7509)
!7525 = !DILocation(line: 124, column: 15, scope: !7509)
!7526 = !DILocation(line: 126, column: 17, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7509, file: !576, line: 126, column: 7)
!7528 = !DILocation(line: 126, column: 7, scope: !7509)
!7529 = !DILocation(line: 131, column: 12, scope: !7509)
!7530 = !DILocation(line: 132, column: 2, scope: !7509)
!7531 = !DILocation(line: 112, column: 32, scope: !7504)
!7532 = distinct !{!7532, !7506, !7533}
!7533 = !DILocation(line: 132, column: 2, scope: !7505)
!7534 = !DILocation(line: 135, column: 1, scope: !7491)
!7535 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7476, file: !7476, line: 63, type: !7536, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7538)
!7536 = !DISubroutineType(types: !7537)
!7537 = !{!109, !7448}
!7538 = !{!7539, !7540}
!7539 = !DILocalVariable(name: "part", arg: 1, scope: !7535, file: !7476, line: 63, type: !7448)
!7540 = !DILocalVariable(name: "partition_is_valid", scope: !7535, file: !7476, line: 70, type: !109)
!7541 = !DILocation(line: 0, scope: !7535)
!7542 = !DILocation(line: 71, column: 11, scope: !7535)
!7543 = !DILocation(line: 71, column: 37, scope: !7535)
!7544 = !{i32 0, i32 33}
!7545 = !DILocation(line: 72, column: 3, scope: !7535)
!7546 = !DILocation(line: 71, column: 30, scope: !7535)
!7547 = !DILocation(line: 75, column: 11, scope: !7535)
!7548 = !DILocation(line: 75, column: 17, scope: !7535)
!7549 = !DILocation(line: 75, column: 38, scope: !7535)
!7550 = !DILocation(line: 77, column: 2, scope: !7535)
!7551 = distinct !DISubprogram(name: "mpu_configure_region", scope: !576, file: !576, line: 79, type: !7552, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7554)
!7552 = !DISubroutineType(types: !7553)
!7553 = !{!109, !1826, !7448}
!7554 = !{!7555, !7556, !7557}
!7555 = !DILocalVariable(name: "index", arg: 1, scope: !7551, file: !576, line: 79, type: !1826)
!7556 = !DILocalVariable(name: "new_region", arg: 2, scope: !7551, file: !576, line: 80, type: !7448)
!7557 = !DILocalVariable(name: "region_conf", scope: !7551, file: !576, line: 82, type: !565)
!7558 = !DILocation(line: 0, scope: !7551)
!7559 = !DILocation(line: 82, column: 2, scope: !7551)
!7560 = !DILocation(line: 82, column: 24, scope: !7551)
!7561 = !DILocation(line: 87, column: 33, scope: !7551)
!7562 = !DILocation(line: 87, column: 14, scope: !7551)
!7563 = !DILocation(line: 87, column: 19, scope: !7551)
!7564 = !DILocation(line: 91, column: 55, scope: !7551)
!7565 = !DILocation(line: 92, column: 16, scope: !7551)
!7566 = !DILocation(line: 92, column: 53, scope: !7551)
!7567 = !DILocation(line: 91, column: 2, scope: !7551)
!7568 = !DILocation(line: 95, column: 9, scope: !7551)
!7569 = !DILocation(line: 97, column: 1, scope: !7551)
!7570 = !DILocation(line: 95, column: 2, scope: !7551)
!7571 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7476, file: !7476, line: 113, type: !7572, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7577)
!7572 = !DISubroutineType(types: !7573)
!7573 = !{null, !7574, !7575, !110, !110}
!7574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 32)
!7575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7576, size: 32)
!7576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7455)
!7577 = !{!7578, !7579, !7580, !7581}
!7578 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7571, file: !7476, line: 114, type: !7574)
!7579 = !DILocalVariable(name: "attr", arg: 2, scope: !7571, file: !7476, line: 115, type: !7575)
!7580 = !DILocalVariable(name: "base", arg: 3, scope: !7571, file: !7476, line: 115, type: !110)
!7581 = !DILocalVariable(name: "size", arg: 4, scope: !7571, file: !7476, line: 115, type: !110)
!7582 = !DILocation(line: 0, scope: !7571)
!7583 = !DILocation(line: 127, column: 23, scope: !7571)
!7584 = !DILocation(line: 127, column: 35, scope: !7571)
!7585 = !DILocation(line: 127, column: 33, scope: !7571)
!7586 = !DILocation(line: 127, column: 10, scope: !7571)
!7587 = !DILocation(line: 127, column: 15, scope: !7571)
!7588 = !DILocation(line: 129, column: 1, scope: !7571)
!7589 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !576, file: !576, line: 57, type: !7590, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7592)
!7590 = !DISubroutineType(types: !7591)
!7591 = !{!109, !1826, !563}
!7592 = !{!7593, !7594}
!7593 = !DILocalVariable(name: "index", arg: 1, scope: !7589, file: !576, line: 57, type: !1826)
!7594 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7589, file: !576, line: 58, type: !563)
!7595 = !DILocation(line: 0, scope: !7589)
!7596 = !DILocation(line: 61, column: 6, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7589, file: !576, line: 61, column: 6)
!7598 = !DILocation(line: 61, column: 12, scope: !7597)
!7599 = !DILocation(line: 61, column: 6, scope: !7589)
!7600 = !DILocation(line: 64, column: 3, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7602, file: !576, line: 64, column: 3)
!7602 = distinct !DILexicalBlock(scope: !7603, file: !576, line: 64, column: 3)
!7603 = distinct !DILexicalBlock(scope: !7604, file: !576, line: 64, column: 3)
!7604 = distinct !DILexicalBlock(scope: !7605, file: !576, line: 64, column: 3)
!7605 = distinct !DILexicalBlock(scope: !7597, file: !576, line: 61, column: 40)
!7606 = !DILocation(line: 65, column: 3, scope: !7605)
!7607 = !DILocation(line: 71, column: 2, scope: !7589)
!7608 = !DILocation(line: 73, column: 2, scope: !7589)
!7609 = !DILocation(line: 74, column: 1, scope: !7589)
!7610 = distinct !DISubprogram(name: "region_init", scope: !7476, file: !7476, line: 29, type: !7611, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7613)
!7611 = !DISubroutineType(types: !7612)
!7612 = !{null, !6640, !563}
!7613 = !{!7614, !7615}
!7614 = !DILocalVariable(name: "index", arg: 1, scope: !7610, file: !7476, line: 29, type: !6640)
!7615 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7610, file: !7476, line: 30, type: !563)
!7616 = !DILocation(line: 0, scope: !7610)
!7617 = !DILocation(line: 33, column: 2, scope: !7610)
!7618 = !DILocation(line: 47, column: 28, scope: !7610)
!7619 = !DILocation(line: 47, column: 33, scope: !7610)
!7620 = !DILocation(line: 48, column: 26, scope: !7610)
!7621 = !DILocation(line: 47, column: 12, scope: !7610)
!7622 = !DILocation(line: 49, column: 32, scope: !7610)
!7623 = !DILocation(line: 49, column: 37, scope: !7610)
!7624 = !DILocation(line: 49, column: 12, scope: !7610)
!7625 = !DILocation(line: 53, column: 1, scope: !7610)
!7626 = distinct !DISubprogram(name: "set_region_number", scope: !7627, file: !7627, line: 32, type: !6074, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7628)
!7627 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7628 = !{!7629}
!7629 = !DILocalVariable(name: "index", arg: 1, scope: !7626, file: !7627, line: 32, type: !110)
!7630 = !DILocation(line: 0, scope: !7626)
!7631 = !DILocation(line: 34, column: 11, scope: !7626)
!7632 = !DILocation(line: 35, column: 1, scope: !7626)
!7633 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7476, file: !7476, line: 88, type: !7634, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7636)
!7634 = !DISubroutineType(types: !7635)
!7635 = !{!110, !110}
!7636 = !{!7637}
!7637 = !DILocalVariable(name: "size", arg: 1, scope: !7633, file: !7476, line: 88, type: !110)
!7638 = !DILocation(line: 0, scope: !7633)
!7639 = !DILocation(line: 91, column: 11, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7633, file: !7476, line: 91, column: 6)
!7641 = !DILocation(line: 91, column: 6, scope: !7633)
!7642 = !DILocation(line: 100, column: 11, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7633, file: !7476, line: 100, column: 6)
!7644 = !DILocation(line: 100, column: 6, scope: !7633)
!7645 = !DILocation(line: 104, column: 35, scope: !7633)
!7646 = !DILocation(line: 104, column: 16, scope: !7633)
!7647 = !DILocation(line: 104, column: 50, scope: !7633)
!7648 = !DILocation(line: 104, column: 72, scope: !7633)
!7649 = !DILocation(line: 104, column: 2, scope: !7633)
!7650 = !DILocation(line: 106, column: 1, scope: !7633)
!7651 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !576, file: !576, line: 307, type: !7652, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7654)
!7652 = !DISubroutineType(types: !7653)
!7653 = !{null, !7448, !178}
!7654 = !{!7655, !7656}
!7655 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7651, file: !576, line: 308, type: !7448)
!7656 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7651, file: !576, line: 308, type: !178)
!7657 = !DILocation(line: 0, scope: !7651)
!7658 = !DILocation(line: 310, column: 6, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7651, file: !576, line: 310, column: 6)
!7660 = !DILocation(line: 311, column: 3, scope: !7659)
!7661 = !DILocation(line: 310, column: 6, scope: !7651)
!7662 = !DILocation(line: 313, column: 3, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7664, file: !576, line: 313, column: 3)
!7664 = distinct !DILexicalBlock(scope: !7665, file: !576, line: 313, column: 3)
!7665 = distinct !DILexicalBlock(scope: !7666, file: !576, line: 313, column: 3)
!7666 = distinct !DILexicalBlock(scope: !7659, file: !576, line: 311, column: 15)
!7667 = !DILocation(line: 316, column: 1, scope: !7651)
!7668 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7476, file: !7476, line: 249, type: !7669, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7671)
!7669 = !DISubroutineType(types: !7670)
!7670 = !{!109, !7448, !178}
!7671 = !{!7672, !7673, !7674, !7675}
!7672 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7668, file: !7476, line: 250, type: !7448)
!7673 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7668, file: !7476, line: 250, type: !178)
!7674 = !DILocalVariable(name: "mpu_reg_index", scope: !7668, file: !7476, line: 252, type: !109)
!7675 = !DILocalVariable(name: "i", scope: !7676, file: !7476, line: 264, type: !109)
!7676 = distinct !DILexicalBlock(scope: !7677, file: !7476, line: 264, column: 3)
!7677 = distinct !DILexicalBlock(scope: !7678, file: !7476, line: 261, column: 32)
!7678 = distinct !DILexicalBlock(scope: !7668, file: !7476, line: 261, column: 6)
!7679 = !DILocation(line: 0, scope: !7668)
!7680 = !DILocation(line: 252, column: 22, scope: !7668)
!7681 = !DILocation(line: 258, column: 18, scope: !7668)
!7682 = !DILocation(line: 261, column: 20, scope: !7678)
!7683 = !DILocation(line: 261, column: 6, scope: !7668)
!7684 = !DILocation(line: 0, scope: !7676)
!7685 = !DILocation(line: 265, column: 4, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7687, file: !7476, line: 264, column: 59)
!7687 = distinct !DILexicalBlock(scope: !7676, file: !7476, line: 264, column: 3)
!7688 = !DILocation(line: 264, column: 55, scope: !7687)
!7689 = !DILocation(line: 264, column: 33, scope: !7687)
!7690 = !DILocation(line: 264, column: 3, scope: !7676)
!7691 = distinct !{!7691, !7690, !7692}
!7692 = !DILocation(line: 266, column: 3, scope: !7676)
!7693 = !DILocation(line: 269, column: 2, scope: !7668)
!7694 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7695, file: !7695, line: 218, type: !6074, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7696)
!7695 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7696 = !{!7697}
!7697 = !DILocalVariable(name: "rnr", arg: 1, scope: !7694, file: !7695, line: 218, type: !110)
!7698 = !DILocation(line: 0, scope: !7694)
!7699 = !DILocation(line: 220, column: 12, scope: !7694)
!7700 = !DILocation(line: 221, column: 13, scope: !7694)
!7701 = !DILocation(line: 222, column: 1, scope: !7694)
!7702 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !576, file: !576, line: 326, type: !7703, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7705)
!7703 = !DISubroutineType(types: !7704)
!7704 = !{!109}
!7705 = !{!7706}
!7706 = !DILocalVariable(name: "r_index", scope: !7702, file: !576, line: 328, type: !110)
!7707 = !DILocation(line: 330, column: 17, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7702, file: !576, line: 330, column: 6)
!7709 = !DILocation(line: 330, column: 29, scope: !7708)
!7710 = !DILocation(line: 330, column: 6, scope: !7702)
!7711 = !DILocation(line: 337, column: 3, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !576, line: 337, column: 3)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !576, line: 337, column: 3)
!7714 = distinct !DILexicalBlock(scope: !7715, file: !576, line: 337, column: 3)
!7715 = distinct !DILexicalBlock(scope: !7708, file: !576, line: 330, column: 50)
!7716 = !DILocation(line: 347, column: 2, scope: !7702)
!7717 = !DILocation(line: 0, scope: !7702)
!7718 = !DILocation(line: 364, column: 29, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7720, file: !576, line: 364, column: 2)
!7720 = distinct !DILexicalBlock(scope: !7702, file: !576, line: 364, column: 2)
!7721 = !DILocation(line: 364, column: 2, scope: !7720)
!7722 = !DILocation(line: 365, column: 25, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7719, file: !576, line: 364, column: 66)
!7724 = !DILocation(line: 365, column: 3, scope: !7723)
!7725 = !DILocation(line: 364, column: 62, scope: !7719)
!7726 = distinct !{!7726, !7721, !7727}
!7727 = !DILocation(line: 366, column: 2, scope: !7720)
!7728 = !DILocation(line: 369, column: 23, scope: !7702)
!7729 = !DILocation(line: 369, column: 21, scope: !7702)
!7730 = !DILocation(line: 372, column: 2, scope: !7702)
!7731 = !DILocation(line: 433, column: 2, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7733, file: !576, line: 433, column: 2)
!7733 = distinct !DILexicalBlock(scope: !7702, file: !576, line: 433, column: 2)
!7734 = !DILocation(line: 433, column: 2, scope: !7733)
!7735 = !DILocation(line: 433, column: 2, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7732, file: !576, line: 433, column: 2)
!7737 = !DILocation(line: 444, column: 1, scope: !7702)
!7738 = distinct !DISubprogram(name: "strcpy", scope: !7739, file: !7739, line: 20, type: !7740, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7744)
!7739 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7740 = !DISubroutineType(types: !7741)
!7741 = !{!285, !7742, !7743}
!7742 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !285)
!7743 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !279)
!7744 = !{!7745, !7746, !7747}
!7745 = !DILocalVariable(name: "d", arg: 1, scope: !7738, file: !7739, line: 20, type: !7742)
!7746 = !DILocalVariable(name: "s", arg: 2, scope: !7738, file: !7739, line: 20, type: !7743)
!7747 = !DILocalVariable(name: "dest", scope: !7738, file: !7739, line: 22, type: !285)
!7748 = !DILocation(line: 0, scope: !7738)
!7749 = !DILocation(line: 24, column: 9, scope: !7738)
!7750 = !DILocation(line: 24, column: 12, scope: !7738)
!7751 = !DILocation(line: 24, column: 2, scope: !7738)
!7752 = !DILocation(line: 25, column: 6, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7738, file: !7739, line: 24, column: 21)
!7754 = !DILocation(line: 26, column: 4, scope: !7753)
!7755 = !DILocation(line: 27, column: 4, scope: !7753)
!7756 = distinct !{!7756, !7751, !7757}
!7757 = !DILocation(line: 28, column: 2, scope: !7738)
!7758 = !DILocation(line: 30, column: 5, scope: !7738)
!7759 = !DILocation(line: 32, column: 2, scope: !7738)
!7760 = distinct !DISubprogram(name: "strncpy", scope: !7739, file: !7739, line: 42, type: !7761, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7763)
!7761 = !DISubroutineType(types: !7762)
!7762 = !{!285, !7742, !7743, !232}
!7763 = !{!7764, !7765, !7766, !7767}
!7764 = !DILocalVariable(name: "d", arg: 1, scope: !7760, file: !7739, line: 42, type: !7742)
!7765 = !DILocalVariable(name: "s", arg: 2, scope: !7760, file: !7739, line: 42, type: !7743)
!7766 = !DILocalVariable(name: "n", arg: 3, scope: !7760, file: !7739, line: 42, type: !232)
!7767 = !DILocalVariable(name: "dest", scope: !7760, file: !7739, line: 44, type: !285)
!7768 = !DILocation(line: 0, scope: !7760)
!7769 = !DILocation(line: 46, column: 12, scope: !7760)
!7770 = !DILocation(line: 46, column: 17, scope: !7760)
!7771 = !DILocation(line: 46, column: 20, scope: !7760)
!7772 = !DILocation(line: 46, column: 23, scope: !7760)
!7773 = !DILocation(line: 46, column: 2, scope: !7760)
!7774 = !DILocation(line: 47, column: 6, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7760, file: !7739, line: 46, column: 32)
!7776 = !DILocation(line: 48, column: 4, scope: !7775)
!7777 = !DILocation(line: 49, column: 4, scope: !7775)
!7778 = !DILocation(line: 50, column: 4, scope: !7775)
!7779 = distinct !{!7779, !7773, !7780}
!7780 = !DILocation(line: 51, column: 2, scope: !7760)
!7781 = !DILocation(line: 54, column: 6, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7760, file: !7739, line: 53, column: 16)
!7783 = !DILocation(line: 55, column: 4, scope: !7782)
!7784 = !DILocation(line: 56, column: 4, scope: !7782)
!7785 = !DILocation(line: 53, column: 11, scope: !7760)
!7786 = !DILocation(line: 53, column: 2, scope: !7760)
!7787 = distinct !{!7787, !7786, !7788}
!7788 = !DILocation(line: 57, column: 2, scope: !7760)
!7789 = !DILocation(line: 59, column: 2, scope: !7760)
!7790 = distinct !DISubprogram(name: "strchr", scope: !7739, file: !7739, line: 69, type: !7791, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7793)
!7791 = !DISubroutineType(types: !7792)
!7792 = !{!285, !279, !109}
!7793 = !{!7794, !7795, !7796}
!7794 = !DILocalVariable(name: "s", arg: 1, scope: !7790, file: !7739, line: 69, type: !279)
!7795 = !DILocalVariable(name: "c", arg: 2, scope: !7790, file: !7739, line: 69, type: !109)
!7796 = !DILocalVariable(name: "tmp", scope: !7790, file: !7739, line: 71, type: !148)
!7797 = !DILocation(line: 0, scope: !7790)
!7798 = !DILocation(line: 73, column: 2, scope: !7790)
!7799 = !DILocation(line: 73, column: 10, scope: !7790)
!7800 = !DILocation(line: 73, column: 13, scope: !7790)
!7801 = !DILocation(line: 73, column: 21, scope: !7790)
!7802 = !DILocation(line: 74, column: 4, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7790, file: !7739, line: 73, column: 38)
!7804 = distinct !{!7804, !7798, !7805}
!7805 = !DILocation(line: 75, column: 2, scope: !7790)
!7806 = !DILocation(line: 77, column: 9, scope: !7790)
!7807 = !DILocation(line: 77, column: 2, scope: !7790)
!7808 = distinct !DISubprogram(name: "strrchr", scope: !7739, file: !7739, line: 87, type: !7791, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7809)
!7809 = !{!7810, !7811, !7812}
!7810 = !DILocalVariable(name: "s", arg: 1, scope: !7808, file: !7739, line: 87, type: !279)
!7811 = !DILocalVariable(name: "c", arg: 2, scope: !7808, file: !7739, line: 87, type: !109)
!7812 = !DILocalVariable(name: "match", scope: !7808, file: !7739, line: 89, type: !285)
!7813 = !DILocation(line: 0, scope: !7808)
!7814 = !DILocation(line: 91, column: 2, scope: !7808)
!7815 = !DILocation(line: 92, column: 7, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7817, file: !7739, line: 92, column: 7)
!7817 = distinct !DILexicalBlock(scope: !7808, file: !7739, line: 91, column: 5)
!7818 = !DILocation(line: 92, column: 10, scope: !7816)
!7819 = !DILocation(line: 92, column: 7, scope: !7817)
!7820 = !DILocation(line: 95, column: 13, scope: !7808)
!7821 = !DILocation(line: 95, column: 2, scope: !7817)
!7822 = distinct !{!7822, !7814, !7823}
!7823 = !DILocation(line: 95, column: 15, scope: !7808)
!7824 = !DILocation(line: 97, column: 2, scope: !7808)
!7825 = distinct !DISubprogram(name: "strlen", scope: !7739, file: !7739, line: 107, type: !7826, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7828)
!7826 = !DISubroutineType(types: !7827)
!7827 = !{!232, !279}
!7828 = !{!7829, !7830}
!7829 = !DILocalVariable(name: "s", arg: 1, scope: !7825, file: !7739, line: 107, type: !279)
!7830 = !DILocalVariable(name: "n", scope: !7825, file: !7739, line: 109, type: !232)
!7831 = !DILocation(line: 0, scope: !7825)
!7832 = !DILocation(line: 111, column: 9, scope: !7825)
!7833 = !DILocation(line: 111, column: 12, scope: !7825)
!7834 = !DILocation(line: 111, column: 2, scope: !7825)
!7835 = !DILocation(line: 112, column: 4, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7825, file: !7739, line: 111, column: 21)
!7837 = !DILocation(line: 113, column: 4, scope: !7836)
!7838 = distinct !{!7838, !7834, !7839}
!7839 = !DILocation(line: 114, column: 2, scope: !7825)
!7840 = !DILocation(line: 116, column: 2, scope: !7825)
!7841 = distinct !DISubprogram(name: "strnlen", scope: !7739, file: !7739, line: 126, type: !7842, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7844)
!7842 = !DISubroutineType(types: !7843)
!7843 = !{!232, !279, !232}
!7844 = !{!7845, !7846, !7847}
!7845 = !DILocalVariable(name: "s", arg: 1, scope: !7841, file: !7739, line: 126, type: !279)
!7846 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7841, file: !7739, line: 126, type: !232)
!7847 = !DILocalVariable(name: "n", scope: !7841, file: !7739, line: 128, type: !232)
!7848 = !DILocation(line: 0, scope: !7841)
!7849 = !DILocation(line: 130, column: 9, scope: !7841)
!7850 = !DILocation(line: 130, column: 12, scope: !7841)
!7851 = !DILocation(line: 130, column: 20, scope: !7841)
!7852 = !DILocation(line: 130, column: 2, scope: !7841)
!7853 = !DILocation(line: 131, column: 4, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7841, file: !7739, line: 130, column: 35)
!7855 = !DILocation(line: 132, column: 4, scope: !7854)
!7856 = distinct !{!7856, !7852, !7857}
!7857 = !DILocation(line: 133, column: 2, scope: !7841)
!7858 = !DILocation(line: 135, column: 2, scope: !7841)
!7859 = distinct !DISubprogram(name: "strcmp", scope: !7739, file: !7739, line: 145, type: !7860, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7862)
!7860 = !DISubroutineType(types: !7861)
!7861 = !{!109, !279, !279}
!7862 = !{!7863, !7864}
!7863 = !DILocalVariable(name: "s1", arg: 1, scope: !7859, file: !7739, line: 145, type: !279)
!7864 = !DILocalVariable(name: "s2", arg: 2, scope: !7859, file: !7739, line: 145, type: !279)
!7865 = !DILocation(line: 0, scope: !7859)
!7866 = !DILocation(line: 147, column: 10, scope: !7859)
!7867 = !DILocation(line: 147, column: 17, scope: !7859)
!7868 = !DILocation(line: 147, column: 14, scope: !7859)
!7869 = !DILocation(line: 147, column: 22, scope: !7859)
!7870 = !DILocation(line: 148, column: 5, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7859, file: !7739, line: 147, column: 40)
!7872 = !DILocation(line: 149, column: 5, scope: !7871)
!7873 = distinct !{!7873, !7874, !7875}
!7874 = !DILocation(line: 147, column: 2, scope: !7859)
!7875 = !DILocation(line: 150, column: 2, scope: !7859)
!7876 = !DILocation(line: 152, column: 9, scope: !7859)
!7877 = !DILocation(line: 152, column: 15, scope: !7859)
!7878 = !DILocation(line: 152, column: 13, scope: !7859)
!7879 = !DILocation(line: 152, column: 2, scope: !7859)
!7880 = distinct !DISubprogram(name: "strncmp", scope: !7739, file: !7739, line: 162, type: !7881, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7883)
!7881 = !DISubroutineType(types: !7882)
!7882 = !{!109, !279, !279, !232}
!7883 = !{!7884, !7885, !7886}
!7884 = !DILocalVariable(name: "s1", arg: 1, scope: !7880, file: !7739, line: 162, type: !279)
!7885 = !DILocalVariable(name: "s2", arg: 2, scope: !7880, file: !7739, line: 162, type: !279)
!7886 = !DILocalVariable(name: "n", arg: 3, scope: !7880, file: !7739, line: 162, type: !232)
!7887 = !DILocation(line: 0, scope: !7880)
!7888 = !DILocation(line: 164, column: 17, scope: !7880)
!7889 = !DILocation(line: 164, column: 21, scope: !7880)
!7890 = !DILocation(line: 164, column: 28, scope: !7880)
!7891 = !DILocation(line: 164, column: 25, scope: !7880)
!7892 = !DILocation(line: 164, column: 33, scope: !7880)
!7893 = !DILocation(line: 165, column: 5, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7880, file: !7739, line: 164, column: 51)
!7895 = !DILocation(line: 166, column: 5, scope: !7894)
!7896 = !DILocation(line: 167, column: 4, scope: !7894)
!7897 = distinct !{!7897, !7898, !7899}
!7898 = !DILocation(line: 164, column: 2, scope: !7880)
!7899 = !DILocation(line: 168, column: 2, scope: !7880)
!7900 = !DILocation(line: 170, column: 25, scope: !7880)
!7901 = !DILocation(line: 170, column: 31, scope: !7880)
!7902 = !DILocation(line: 170, column: 29, scope: !7880)
!7903 = !DILocation(line: 170, column: 9, scope: !7880)
!7904 = !DILocation(line: 170, column: 2, scope: !7880)
!7905 = distinct !DISubprogram(name: "strtok_r", scope: !7739, file: !7739, line: 180, type: !7906, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7908)
!7906 = !DISubroutineType(types: !7907)
!7907 = !{!285, !285, !279, !284}
!7908 = !{!7909, !7910, !7911, !7912, !7913}
!7909 = !DILocalVariable(name: "str", arg: 1, scope: !7905, file: !7739, line: 180, type: !285)
!7910 = !DILocalVariable(name: "sep", arg: 2, scope: !7905, file: !7739, line: 180, type: !279)
!7911 = !DILocalVariable(name: "state", arg: 3, scope: !7905, file: !7739, line: 180, type: !284)
!7912 = !DILocalVariable(name: "start", scope: !7905, file: !7739, line: 182, type: !285)
!7913 = !DILocalVariable(name: "end", scope: !7905, file: !7739, line: 182, type: !285)
!7914 = !DILocation(line: 0, scope: !7905)
!7915 = !DILocation(line: 184, column: 10, scope: !7905)
!7916 = !DILocation(line: 184, column: 22, scope: !7905)
!7917 = !DILocation(line: 187, column: 9, scope: !7905)
!7918 = !DILocation(line: 187, column: 16, scope: !7905)
!7919 = !DILocation(line: 187, column: 19, scope: !7905)
!7920 = !DILocation(line: 187, column: 2, scope: !7905)
!7921 = !DILocation(line: 188, column: 8, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7905, file: !7739, line: 187, column: 40)
!7923 = distinct !{!7923, !7920, !7924}
!7924 = !DILocation(line: 189, column: 2, scope: !7905)
!7925 = !DILocation(line: 198, column: 9, scope: !7905)
!7926 = !DILocation(line: 198, column: 18, scope: !7905)
!7927 = !DILocation(line: 198, column: 17, scope: !7905)
!7928 = !DILocation(line: 198, column: 2, scope: !7905)
!7929 = !DILocation(line: 199, column: 6, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7905, file: !7739, line: 198, column: 37)
!7931 = !DILocation(line: 198, column: 14, scope: !7905)
!7932 = distinct !{!7932, !7928, !7933}
!7933 = !DILocation(line: 200, column: 2, scope: !7905)
!7934 = !DILocation(line: 203, column: 8, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7936, file: !7739, line: 202, column: 20)
!7936 = distinct !DILexicalBlock(scope: !7905, file: !7739, line: 202, column: 6)
!7937 = !DILocation(line: 204, column: 16, scope: !7935)
!7938 = !DILocation(line: 205, column: 2, scope: !7935)
!7939 = !DILocation(line: 210, column: 1, scope: !7905)
!7940 = distinct !DISubprogram(name: "strcat", scope: !7739, file: !7739, line: 212, type: !7740, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7941)
!7941 = !{!7942, !7943}
!7942 = !DILocalVariable(name: "dest", arg: 1, scope: !7940, file: !7739, line: 212, type: !7742)
!7943 = !DILocalVariable(name: "src", arg: 2, scope: !7940, file: !7739, line: 212, type: !7743)
!7944 = !DILocation(line: 0, scope: !7940)
!7945 = !DILocation(line: 214, column: 16, scope: !7940)
!7946 = !DILocation(line: 214, column: 14, scope: !7940)
!7947 = !DILocation(line: 214, column: 2, scope: !7940)
!7948 = !DILocation(line: 215, column: 2, scope: !7940)
!7949 = distinct !DISubprogram(name: "strncat", scope: !7739, file: !7739, line: 218, type: !7761, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7950)
!7950 = !{!7951, !7952, !7953, !7954, !7955}
!7951 = !DILocalVariable(name: "dest", arg: 1, scope: !7949, file: !7739, line: 218, type: !7742)
!7952 = !DILocalVariable(name: "src", arg: 2, scope: !7949, file: !7739, line: 218, type: !7743)
!7953 = !DILocalVariable(name: "n", arg: 3, scope: !7949, file: !7739, line: 219, type: !232)
!7954 = !DILocalVariable(name: "orig_dest", scope: !7949, file: !7739, line: 221, type: !285)
!7955 = !DILocalVariable(name: "len", scope: !7949, file: !7739, line: 222, type: !232)
!7956 = !DILocation(line: 0, scope: !7949)
!7957 = !DILocation(line: 222, column: 15, scope: !7949)
!7958 = !DILocation(line: 224, column: 7, scope: !7949)
!7959 = !DILocation(line: 225, column: 14, scope: !7949)
!7960 = !DILocation(line: 225, column: 19, scope: !7949)
!7961 = !DILocation(line: 225, column: 11, scope: !7949)
!7962 = !DILocation(line: 225, column: 23, scope: !7949)
!7963 = !DILocation(line: 225, column: 28, scope: !7949)
!7964 = !DILocation(line: 225, column: 2, scope: !7949)
!7965 = !DILocation(line: 226, column: 17, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7949, file: !7739, line: 225, column: 38)
!7967 = !DILocation(line: 226, column: 8, scope: !7966)
!7968 = !DILocation(line: 226, column: 11, scope: !7966)
!7969 = distinct !{!7969, !7964, !7970}
!7970 = !DILocation(line: 227, column: 2, scope: !7949)
!7971 = !DILocation(line: 228, column: 8, scope: !7949)
!7972 = !DILocation(line: 230, column: 2, scope: !7949)
!7973 = distinct !DISubprogram(name: "memcmp", scope: !7739, file: !7739, line: 239, type: !7974, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !7976)
!7974 = !DISubroutineType(types: !7975)
!7975 = !{!109, !13, !13, !232}
!7976 = !{!7977, !7978, !7979, !7980, !7981}
!7977 = !DILocalVariable(name: "m1", arg: 1, scope: !7973, file: !7739, line: 239, type: !13)
!7978 = !DILocalVariable(name: "m2", arg: 2, scope: !7973, file: !7739, line: 239, type: !13)
!7979 = !DILocalVariable(name: "n", arg: 3, scope: !7973, file: !7739, line: 239, type: !232)
!7980 = !DILocalVariable(name: "c1", scope: !7973, file: !7739, line: 241, type: !279)
!7981 = !DILocalVariable(name: "c2", scope: !7973, file: !7739, line: 242, type: !279)
!7982 = !DILocation(line: 0, scope: !7973)
!7983 = !DILocation(line: 244, column: 7, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7973, file: !7739, line: 244, column: 6)
!7985 = !DILocation(line: 244, column: 6, scope: !7973)
!7986 = !DILocation(line: 248, column: 10, scope: !7973)
!7987 = !DILocation(line: 248, column: 14, scope: !7973)
!7988 = !DILocation(line: 248, column: 19, scope: !7973)
!7989 = !DILocation(line: 248, column: 2, scope: !7973)
!7990 = !DILocation(line: 248, column: 23, scope: !7973)
!7991 = !DILocation(line: 248, column: 30, scope: !7973)
!7992 = !DILocation(line: 248, column: 27, scope: !7973)
!7993 = !DILocation(line: 249, column: 5, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7973, file: !7739, line: 248, column: 36)
!7995 = !DILocation(line: 250, column: 5, scope: !7994)
!7996 = distinct !{!7996, !7989, !7997}
!7997 = !DILocation(line: 251, column: 2, scope: !7973)
!7998 = !DILocation(line: 253, column: 9, scope: !7973)
!7999 = !DILocation(line: 253, column: 15, scope: !7973)
!8000 = !DILocation(line: 253, column: 13, scope: !7973)
!8001 = !DILocation(line: 253, column: 2, scope: !7973)
!8002 = !DILocation(line: 254, column: 1, scope: !7973)
!8003 = distinct !DISubprogram(name: "memmove", scope: !7739, file: !7739, line: 263, type: !8004, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !8006)
!8004 = !DISubroutineType(types: !8005)
!8005 = !{!107, !107, !13, !232}
!8006 = !{!8007, !8008, !8009, !8010, !8011}
!8007 = !DILocalVariable(name: "d", arg: 1, scope: !8003, file: !7739, line: 263, type: !107)
!8008 = !DILocalVariable(name: "s", arg: 2, scope: !8003, file: !7739, line: 263, type: !13)
!8009 = !DILocalVariable(name: "n", arg: 3, scope: !8003, file: !7739, line: 263, type: !232)
!8010 = !DILocalVariable(name: "dest", scope: !8003, file: !7739, line: 265, type: !285)
!8011 = !DILocalVariable(name: "src", scope: !8003, file: !7739, line: 266, type: !279)
!8012 = !DILocation(line: 0, scope: !8003)
!8013 = !DILocation(line: 268, column: 21, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8003, file: !7739, line: 268, column: 6)
!8015 = !DILocation(line: 268, column: 28, scope: !8014)
!8016 = !DILocation(line: 268, column: 6, scope: !8003)
!8017 = !DILocation(line: 280, column: 12, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8014, file: !7739, line: 278, column: 9)
!8019 = !DILocation(line: 280, column: 3, scope: !8018)
!8020 = !DILocation(line: 275, column: 5, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8022, file: !7739, line: 274, column: 17)
!8022 = distinct !DILexicalBlock(scope: !8014, file: !7739, line: 268, column: 33)
!8023 = !DILocation(line: 276, column: 14, scope: !8021)
!8024 = !DILocation(line: 276, column: 4, scope: !8021)
!8025 = !DILocation(line: 276, column: 12, scope: !8021)
!8026 = !DILocation(line: 274, column: 12, scope: !8022)
!8027 = !DILocation(line: 274, column: 3, scope: !8022)
!8028 = distinct !{!8028, !8027, !8029}
!8029 = !DILocation(line: 277, column: 3, scope: !8022)
!8030 = !DILocation(line: 281, column: 12, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8018, file: !7739, line: 280, column: 17)
!8032 = !DILocation(line: 281, column: 10, scope: !8031)
!8033 = !DILocation(line: 282, column: 8, scope: !8031)
!8034 = !DILocation(line: 283, column: 7, scope: !8031)
!8035 = !DILocation(line: 284, column: 5, scope: !8031)
!8036 = distinct !{!8036, !8019, !8037}
!8037 = !DILocation(line: 285, column: 3, scope: !8018)
!8038 = !DILocation(line: 288, column: 2, scope: !8003)
!8039 = distinct !DISubprogram(name: "memcpy", scope: !7739, file: !7739, line: 298, type: !8040, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !8044)
!8040 = !DISubroutineType(types: !8041)
!8041 = !{!107, !8042, !8043, !232}
!8042 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !107)
!8043 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8044 = !{!8045, !8046, !8047, !8048, !8049}
!8045 = !DILocalVariable(name: "d", arg: 1, scope: !8039, file: !7739, line: 298, type: !8042)
!8046 = !DILocalVariable(name: "s", arg: 2, scope: !8039, file: !7739, line: 298, type: !8043)
!8047 = !DILocalVariable(name: "n", arg: 3, scope: !8039, file: !7739, line: 298, type: !232)
!8048 = !DILocalVariable(name: "d_byte", scope: !8039, file: !7739, line: 302, type: !1048)
!8049 = !DILocalVariable(name: "s_byte", scope: !8039, file: !7739, line: 303, type: !2877)
!8050 = !DILocation(line: 0, scope: !8039)
!8051 = !DILocation(line: 337, column: 11, scope: !8039)
!8052 = !DILocation(line: 337, column: 2, scope: !8039)
!8053 = !DILocation(line: 338, column: 25, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8039, file: !7739, line: 337, column: 16)
!8055 = !DILocation(line: 338, column: 17, scope: !8054)
!8056 = !DILocation(line: 338, column: 11, scope: !8054)
!8057 = !DILocation(line: 338, column: 15, scope: !8054)
!8058 = !DILocation(line: 339, column: 4, scope: !8054)
!8059 = distinct !{!8059, !8052, !8060}
!8060 = !DILocation(line: 340, column: 2, scope: !8039)
!8061 = !DILocation(line: 342, column: 2, scope: !8039)
!8062 = distinct !DISubprogram(name: "memset", scope: !7739, file: !7739, line: 352, type: !8063, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !8065)
!8063 = !DISubroutineType(types: !8064)
!8064 = !{!107, !107, !109, !232}
!8065 = !{!8066, !8067, !8068, !8069, !8070}
!8066 = !DILocalVariable(name: "buf", arg: 1, scope: !8062, file: !7739, line: 352, type: !107)
!8067 = !DILocalVariable(name: "c", arg: 2, scope: !8062, file: !7739, line: 352, type: !109)
!8068 = !DILocalVariable(name: "n", arg: 3, scope: !8062, file: !7739, line: 352, type: !232)
!8069 = !DILocalVariable(name: "d_byte", scope: !8062, file: !7739, line: 356, type: !1048)
!8070 = !DILocalVariable(name: "c_byte", scope: !8062, file: !7739, line: 357, type: !179)
!8071 = !DILocation(line: 0, scope: !8062)
!8072 = !DILocation(line: 357, column: 25, scope: !8062)
!8073 = !DILocation(line: 389, column: 11, scope: !8062)
!8074 = !DILocation(line: 389, column: 2, scope: !8062)
!8075 = !DILocation(line: 390, column: 11, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8062, file: !7739, line: 389, column: 16)
!8077 = !DILocation(line: 390, column: 15, scope: !8076)
!8078 = !DILocation(line: 391, column: 4, scope: !8076)
!8079 = distinct !{!8079, !8074, !8080}
!8080 = !DILocation(line: 392, column: 2, scope: !8062)
!8081 = !DILocation(line: 394, column: 2, scope: !8062)
!8082 = distinct !DISubprogram(name: "memchr", scope: !7739, file: !7739, line: 404, type: !8083, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !8085)
!8083 = !DISubroutineType(types: !8084)
!8084 = !{!107, !13, !109, !232}
!8085 = !{!8086, !8087, !8088, !8089}
!8086 = !DILocalVariable(name: "s", arg: 1, scope: !8082, file: !7739, line: 404, type: !13)
!8087 = !DILocalVariable(name: "c", arg: 2, scope: !8082, file: !7739, line: 404, type: !109)
!8088 = !DILocalVariable(name: "n", arg: 3, scope: !8082, file: !7739, line: 404, type: !232)
!8089 = !DILocalVariable(name: "p", scope: !8090, file: !7739, line: 407, type: !2877)
!8090 = distinct !DILexicalBlock(scope: !8091, file: !7739, line: 406, column: 14)
!8091 = distinct !DILexicalBlock(scope: !8082, file: !7739, line: 406, column: 6)
!8092 = !DILocation(line: 0, scope: !8082)
!8093 = !DILocation(line: 406, column: 8, scope: !8091)
!8094 = !DILocation(line: 406, column: 6, scope: !8082)
!8095 = !DILocation(line: 409, column: 3, scope: !8090)
!8096 = !DILocation(line: 0, scope: !8090)
!8097 = !DILocation(line: 410, column: 8, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8099, file: !7739, line: 410, column: 8)
!8099 = distinct !DILexicalBlock(scope: !8090, file: !7739, line: 409, column: 6)
!8100 = !DILocation(line: 410, column: 13, scope: !8098)
!8101 = !DILocation(line: 410, column: 8, scope: !8099)
!8102 = distinct !{!8102, !8095, !8103}
!8103 = !DILocation(line: 414, column: 20, scope: !8090)
!8104 = !DILocation(line: 417, column: 2, scope: !8082)
!8105 = !DILocation(line: 418, column: 1, scope: !8082)
!8106 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !586, file: !586, line: 23, type: !4282, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8107)
!8107 = !{!8108}
!8108 = !DILocalVariable(name: "hook", arg: 1, scope: !8106, file: !586, line: 23, type: !302)
!8109 = !DILocation(line: 0, scope: !8106)
!8110 = !DILocation(line: 25, column: 15, scope: !8106)
!8111 = !DILocation(line: 26, column: 1, scope: !8106)
!8112 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !586, file: !586, line: 14, type: !303, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8113)
!8113 = !{!8114}
!8114 = !DILocalVariable(name: "c", arg: 1, scope: !8112, file: !586, line: 14, type: !109)
!8115 = !DILocation(line: 0, scope: !8112)
!8116 = !DILocation(line: 18, column: 2, scope: !8112)
!8117 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !586, file: !586, line: 28, type: !8118, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8120)
!8118 = !DISubroutineType(types: !8119)
!8119 = !{!109, !109, !582}
!8120 = !{!8121, !8122}
!8121 = !DILocalVariable(name: "c", arg: 1, scope: !8117, file: !586, line: 28, type: !109)
!8122 = !DILocalVariable(name: "stream", arg: 2, scope: !8117, file: !586, line: 28, type: !582)
!8123 = !DILocation(line: 0, scope: !8117)
!8124 = !DILocation(line: 30, column: 27, scope: !8117)
!8125 = !DILocation(line: 30, column: 50, scope: !8117)
!8126 = !DILocation(line: 30, column: 9, scope: !8117)
!8127 = !DILocation(line: 30, column: 2, scope: !8117)
!8128 = distinct !DISubprogram(name: "fputc", scope: !586, file: !586, line: 41, type: !8118, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8129)
!8129 = !{!8130, !8131}
!8130 = !DILocalVariable(name: "c", arg: 1, scope: !8128, file: !586, line: 41, type: !109)
!8131 = !DILocalVariable(name: "stream", arg: 2, scope: !8128, file: !586, line: 41, type: !582)
!8132 = !DILocation(line: 0, scope: !8128)
!8133 = !DILocation(line: 43, column: 9, scope: !8128)
!8134 = !DILocation(line: 43, column: 2, scope: !8128)
!8135 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8136, file: !8136, line: 72, type: !8118, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8137)
!8136 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!8137 = !{!8138, !8139}
!8138 = !DILocalVariable(name: "c", arg: 1, scope: !8135, file: !8136, line: 72, type: !109)
!8139 = !DILocalVariable(name: "stream", arg: 2, scope: !8135, file: !8136, line: 72, type: !582)
!8140 = !DILocation(line: 0, scope: !8135)
!8141 = !DILocation(line: 81, column: 2, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8135, file: !8136, line: 81, column: 2)
!8143 = !{i64 2152286404}
!8144 = !DILocation(line: 82, column: 9, scope: !8135)
!8145 = !DILocation(line: 82, column: 2, scope: !8135)
!8146 = distinct !DISubprogram(name: "fputs", scope: !586, file: !586, line: 46, type: !8147, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8150)
!8147 = !DISubroutineType(types: !8148)
!8148 = !{!109, !7743, !8149}
!8149 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !582)
!8150 = !{!8151, !8152, !8153, !8154}
!8151 = !DILocalVariable(name: "s", arg: 1, scope: !8146, file: !586, line: 46, type: !7743)
!8152 = !DILocalVariable(name: "stream", arg: 2, scope: !8146, file: !586, line: 46, type: !8149)
!8153 = !DILocalVariable(name: "len", scope: !8146, file: !586, line: 48, type: !109)
!8154 = !DILocalVariable(name: "ret", scope: !8146, file: !586, line: 49, type: !109)
!8155 = !DILocation(line: 0, scope: !8146)
!8156 = !DILocation(line: 48, column: 12, scope: !8146)
!8157 = !DILocation(line: 51, column: 8, scope: !8146)
!8158 = !DILocation(line: 53, column: 13, scope: !8146)
!8159 = !DILocation(line: 53, column: 9, scope: !8146)
!8160 = !DILocation(line: 53, column: 2, scope: !8146)
!8161 = distinct !DISubprogram(name: "fwrite", scope: !586, file: !586, line: 99, type: !8162, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8164)
!8162 = !DISubroutineType(types: !8163)
!8163 = !{!232, !8043, !232, !232, !8149}
!8164 = !{!8165, !8166, !8167, !8168}
!8165 = !DILocalVariable(name: "ptr", arg: 1, scope: !8161, file: !586, line: 99, type: !8043)
!8166 = !DILocalVariable(name: "size", arg: 2, scope: !8161, file: !586, line: 99, type: !232)
!8167 = !DILocalVariable(name: "nitems", arg: 3, scope: !8161, file: !586, line: 99, type: !232)
!8168 = !DILocalVariable(name: "stream", arg: 4, scope: !8161, file: !586, line: 100, type: !8149)
!8169 = !DILocation(line: 0, scope: !8161)
!8170 = !DILocation(line: 102, column: 9, scope: !8161)
!8171 = !DILocation(line: 102, column: 2, scope: !8161)
!8172 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8136, file: !8136, line: 96, type: !8162, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8173)
!8173 = !{!8174, !8175, !8176, !8177}
!8174 = !DILocalVariable(name: "ptr", arg: 1, scope: !8172, file: !8136, line: 96, type: !8043)
!8175 = !DILocalVariable(name: "size", arg: 2, scope: !8172, file: !8136, line: 96, type: !232)
!8176 = !DILocalVariable(name: "nitems", arg: 3, scope: !8172, file: !8136, line: 96, type: !232)
!8177 = !DILocalVariable(name: "stream", arg: 4, scope: !8172, file: !8136, line: 96, type: !8149)
!8178 = !DILocation(line: 0, scope: !8172)
!8179 = !DILocation(line: 107, column: 2, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8172, file: !8136, line: 107, column: 2)
!8181 = !{i64 2152286508}
!8182 = !DILocation(line: 108, column: 9, scope: !8172)
!8183 = !DILocation(line: 108, column: 2, scope: !8172)
!8184 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !586, file: !586, line: 56, type: !8162, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8185)
!8185 = !{!8186, !8187, !8188, !8189, !8190, !8191, !8192, !8193}
!8186 = !DILocalVariable(name: "ptr", arg: 1, scope: !8184, file: !586, line: 56, type: !8043)
!8187 = !DILocalVariable(name: "size", arg: 2, scope: !8184, file: !586, line: 56, type: !232)
!8188 = !DILocalVariable(name: "nitems", arg: 3, scope: !8184, file: !586, line: 57, type: !232)
!8189 = !DILocalVariable(name: "stream", arg: 4, scope: !8184, file: !586, line: 57, type: !8149)
!8190 = !DILocalVariable(name: "i", scope: !8184, file: !586, line: 59, type: !232)
!8191 = !DILocalVariable(name: "j", scope: !8184, file: !586, line: 60, type: !232)
!8192 = !DILocalVariable(name: "p", scope: !8184, file: !586, line: 61, type: !2877)
!8193 = !DILabel(scope: !8184, name: "done", file: !586, line: 82)
!8194 = !DILocation(line: 0, scope: !8184)
!8195 = !DILocation(line: 63, column: 14, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8184, file: !586, line: 63, column: 6)
!8197 = !DILocation(line: 63, column: 24, scope: !8196)
!8198 = !DILocation(line: 72, column: 3, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8184, file: !586, line: 70, column: 5)
!8200 = !DILocation(line: 0, scope: !8199)
!8201 = !DILocation(line: 73, column: 8, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8203, file: !586, line: 73, column: 8)
!8203 = distinct !DILexicalBlock(scope: !8199, file: !586, line: 72, column: 6)
!8204 = !DILocation(line: 73, column: 29, scope: !8202)
!8205 = !DILocation(line: 73, column: 27, scope: !8202)
!8206 = !DILocation(line: 73, column: 21, scope: !8202)
!8207 = !DILocation(line: 73, column: 33, scope: !8202)
!8208 = !DILocation(line: 73, column: 8, scope: !8203)
!8209 = !DILocation(line: 76, column: 5, scope: !8203)
!8210 = !DILocation(line: 77, column: 14, scope: !8199)
!8211 = !DILocation(line: 77, column: 3, scope: !8203)
!8212 = distinct !{!8212, !8198, !8213}
!8213 = !DILocation(line: 77, column: 17, scope: !8199)
!8214 = !DILocation(line: 79, column: 4, scope: !8199)
!8215 = !DILocation(line: 80, column: 13, scope: !8184)
!8216 = !DILocation(line: 80, column: 2, scope: !8199)
!8217 = distinct !{!8217, !8218, !8219}
!8218 = !DILocation(line: 70, column: 2, scope: !8184)
!8219 = !DILocation(line: 80, column: 16, scope: !8184)
!8220 = !DILocation(line: 82, column: 1, scope: !8184)
!8221 = !DILocation(line: 83, column: 17, scope: !8184)
!8222 = !DILocation(line: 83, column: 2, scope: !8184)
!8223 = !DILocation(line: 84, column: 1, scope: !8184)
!8224 = distinct !DISubprogram(name: "puts", scope: !586, file: !586, line: 106, type: !8225, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8227)
!8225 = !DISubroutineType(types: !8226)
!8226 = !{!109, !279}
!8227 = !{!8228}
!8228 = !DILocalVariable(name: "s", arg: 1, scope: !8224, file: !586, line: 106, type: !279)
!8229 = !DILocation(line: 0, scope: !8224)
!8230 = !DILocation(line: 108, column: 6, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8224, file: !586, line: 108, column: 6)
!8232 = !DILocation(line: 108, column: 23, scope: !8231)
!8233 = !DILocation(line: 108, column: 6, scope: !8224)
!8234 = !DILocation(line: 112, column: 9, scope: !8224)
!8235 = !DILocation(line: 112, column: 29, scope: !8224)
!8236 = !DILocation(line: 112, column: 2, scope: !8224)
!8237 = !DILocation(line: 113, column: 1, scope: !8224)
!8238 = distinct !DISubprogram(name: "rf_init", scope: !711, file: !711, line: 10, type: !717, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !614, retainedNodes: !8239)
!8239 = !{!8240, !8241, !8249, !8250}
!8240 = !DILocalVariable(name: "dev", arg: 1, scope: !8238, file: !711, line: 10, type: !637)
!8241 = !DILocalVariable(name: "rf1", scope: !8238, file: !711, line: 12, type: !8242)
!8242 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8243)
!8243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !618, line: 271, size: 64, elements: !8244)
!8244 = !{!8245, !8246, !8247}
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8243, file: !618, line: 273, baseType: !637, size: 32)
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !8243, file: !618, line: 275, baseType: !652, size: 8, offset: 32)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !8243, file: !618, line: 277, baseType: !8248, size: 16, offset: 48)
!8248 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !618, line: 249, baseType: !192)
!8249 = !DILocalVariable(name: "rf2", scope: !8238, file: !711, line: 14, type: !8242)
!8250 = !DILocalVariable(name: "rf3", scope: !8238, file: !711, line: 16, type: !8242)
!8251 = !DILocation(line: 0, scope: !8238)
!8252 = !DILocation(line: 12, column: 2, scope: !8238)
!8253 = !DILocation(line: 12, column: 28, scope: !8238)
!8254 = !DILocation(line: 14, column: 2, scope: !8238)
!8255 = !DILocation(line: 14, column: 28, scope: !8238)
!8256 = !DILocation(line: 16, column: 2, scope: !8238)
!8257 = !DILocation(line: 16, column: 28, scope: !8238)
!8258 = !DILocation(line: 22, column: 27, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8238, file: !711, line: 22, column: 6)
!8260 = !DILocation(line: 22, column: 7, scope: !8259)
!8261 = !DILocation(line: 22, column: 33, scope: !8259)
!8262 = !DILocation(line: 23, column: 7, scope: !8259)
!8263 = !DILocation(line: 23, column: 33, scope: !8259)
!8264 = !DILocation(line: 24, column: 7, scope: !8259)
!8265 = !DILocation(line: 22, column: 6, scope: !8238)
!8266 = !DILocation(line: 28, column: 8, scope: !8238)
!8267 = !DILocation(line: 29, column: 8, scope: !8238)
!8268 = !DILocation(line: 30, column: 8, scope: !8238)
!8269 = !DILocation(line: 32, column: 2, scope: !8238)
!8270 = !DILocation(line: 33, column: 1, scope: !8238)
!8271 = distinct !DISubprogram(name: "device_is_ready", scope: !8272, file: !8272, line: 47, type: !8273, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !614, retainedNodes: !8275)
!8272 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!8273 = !DISubroutineType(types: !8274)
!8274 = !{!360, !637}
!8275 = !{!8276}
!8276 = !DILocalVariable(name: "dev", arg: 1, scope: !8271, file: !8272, line: 47, type: !637)
!8277 = !DILocation(line: 0, scope: !8271)
!8278 = !DILocation(line: 55, column: 2, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8271, file: !8272, line: 55, column: 2)
!8280 = !{i64 2148930322}
!8281 = !DILocation(line: 56, column: 9, scope: !8271)
!8282 = !DILocation(line: 56, column: 2, scope: !8271)
!8283 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !618, file: !618, line: 731, type: !8284, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !614, retainedNodes: !8287)
!8284 = !DISubroutineType(types: !8285)
!8285 = !{!109, !8286, !653}
!8286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8242, size: 32)
!8287 = !{!8288, !8289}
!8288 = !DILocalVariable(name: "spec", arg: 1, scope: !8283, file: !618, line: 731, type: !8286)
!8289 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !8283, file: !618, line: 732, type: !653)
!8290 = !DILocation(line: 0, scope: !8283)
!8291 = !DILocation(line: 734, column: 34, scope: !8283)
!8292 = !DILocation(line: 735, column: 13, scope: !8283)
!8293 = !DILocation(line: 736, column: 13, scope: !8283)
!8294 = !DILocation(line: 736, column: 7, scope: !8283)
!8295 = !DILocation(line: 736, column: 22, scope: !8283)
!8296 = !DILocation(line: 734, column: 9, scope: !8283)
!8297 = !DILocation(line: 734, column: 2, scope: !8283)
!8298 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !8299, file: !8299, line: 49, type: !635, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !614, retainedNodes: !8300)
!8299 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!8300 = !{!8301, !8302, !8303}
!8301 = !DILocalVariable(name: "port", arg: 1, scope: !8298, file: !8299, line: 49, type: !637)
!8302 = !DILocalVariable(name: "pin", arg: 2, scope: !8298, file: !8299, line: 49, type: !652)
!8303 = !DILocalVariable(name: "flags", arg: 3, scope: !8298, file: !8299, line: 49, type: !653)
!8304 = !DILocation(line: 0, scope: !8298)
!8305 = !DILocation(line: 59, column: 2, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8298, file: !8299, line: 59, column: 2)
!8307 = !{i64 2148980416}
!8308 = !DILocation(line: 60, column: 9, scope: !8298)
!8309 = !DILocation(line: 60, column: 2, scope: !8298)
!8310 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !618, file: !618, line: 667, type: !635, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !614, retainedNodes: !8311)
!8311 = !{!8312, !8313, !8314, !8315, !8316, !8318}
!8312 = !DILocalVariable(name: "port", arg: 1, scope: !8310, file: !618, line: 667, type: !637)
!8313 = !DILocalVariable(name: "pin", arg: 2, scope: !8310, file: !618, line: 668, type: !652)
!8314 = !DILocalVariable(name: "flags", arg: 3, scope: !8310, file: !618, line: 669, type: !653)
!8315 = !DILocalVariable(name: "api", scope: !8310, file: !618, line: 671, type: !629)
!8316 = !DILocalVariable(name: "cfg", scope: !8310, file: !618, line: 673, type: !8317)
!8317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !699)
!8318 = !DILocalVariable(name: "data", scope: !8310, file: !618, line: 675, type: !709)
!8319 = !DILocation(line: 0, scope: !8310)
!8320 = !DILocation(line: 672, column: 41, scope: !8310)
!8321 = !DILocation(line: 674, column: 44, scope: !8310)
!8322 = !DILocation(line: 676, column: 36, scope: !8310)
!8323 = !DILocation(line: 678, column: 2, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8325, file: !618, line: 678, column: 2)
!8325 = distinct !DILexicalBlock(scope: !8310, file: !618, line: 678, column: 2)
!8326 = !DILocation(line: 678, column: 2, scope: !8325)
!8327 = !DILocation(line: 678, column: 2, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8324, file: !618, line: 678, column: 2)
!8329 = !DILocation(line: 681, column: 2, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !618, line: 681, column: 2)
!8331 = distinct !DILexicalBlock(scope: !8310, file: !618, line: 681, column: 2)
!8332 = !DILocation(line: 681, column: 2, scope: !8331)
!8333 = !DILocation(line: 681, column: 2, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8330, file: !618, line: 681, column: 2)
!8335 = !DILocation(line: 685, column: 2, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8337, file: !618, line: 685, column: 2)
!8337 = distinct !DILexicalBlock(scope: !8310, file: !618, line: 685, column: 2)
!8338 = !DILocation(line: 685, column: 2, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8336, file: !618, line: 685, column: 2)
!8340 = !DILocation(line: 689, column: 2, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !618, line: 689, column: 2)
!8342 = distinct !DILexicalBlock(scope: !8310, file: !618, line: 689, column: 2)
!8343 = !DILocation(line: 689, column: 2, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8341, file: !618, line: 689, column: 2)
!8345 = !DILocation(line: 692, column: 2, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8347, file: !618, line: 692, column: 2)
!8347 = distinct !DILexicalBlock(scope: !8310, file: !618, line: 692, column: 2)
!8348 = !DILocation(line: 692, column: 2, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8346, file: !618, line: 692, column: 2)
!8350 = !DILocation(line: 696, column: 2, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8352, file: !618, line: 696, column: 2)
!8352 = distinct !DILexicalBlock(scope: !8310, file: !618, line: 696, column: 2)
!8353 = !DILocation(line: 696, column: 2, scope: !8352)
!8354 = !DILocation(line: 696, column: 2, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8351, file: !618, line: 696, column: 2)
!8356 = !DILocation(line: 701, column: 6, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8310, file: !618, line: 700, column: 6)
!8358 = !DILocation(line: 708, column: 2, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !618, line: 708, column: 2)
!8360 = distinct !DILexicalBlock(scope: !8310, file: !618, line: 708, column: 2)
!8361 = !DILocation(line: 708, column: 2, scope: !8360)
!8362 = !DILocation(line: 708, column: 2, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8359, file: !618, line: 708, column: 2)
!8364 = !DILocation(line: 711, column: 13, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8310, file: !618, line: 711, column: 6)
!8366 = !DILocation(line: 711, column: 32, scope: !8365)
!8367 = !DILocation(line: 711, column: 6, scope: !8310)
!8368 = !DILocation(line: 712, column: 9, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8365, file: !618, line: 711, column: 38)
!8370 = !DILocation(line: 712, column: 16, scope: !8369)
!8371 = !DILocation(line: 713, column: 2, scope: !8369)
!8372 = !DILocation(line: 714, column: 19, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8365, file: !618, line: 713, column: 9)
!8374 = !DILocation(line: 714, column: 9, scope: !8373)
!8375 = !DILocation(line: 714, column: 16, scope: !8373)
!8376 = !DILocation(line: 706, column: 8, scope: !8310)
!8377 = !DILocation(line: 717, column: 14, scope: !8310)
!8378 = !DILocation(line: 717, column: 9, scope: !8310)
!8379 = !DILocation(line: 717, column: 2, scope: !8310)
!8380 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !349, file: !349, line: 730, type: !8273, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !614, retainedNodes: !8381)
!8381 = !{!8382}
!8382 = !DILocalVariable(name: "dev", arg: 1, scope: !8380, file: !349, line: 730, type: !637)
!8383 = !DILocation(line: 0, scope: !8380)
!8384 = !DILocation(line: 732, column: 9, scope: !8380)
!8385 = !DILocation(line: 732, column: 2, scope: !8380)
!8386 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !794, file: !794, line: 368, type: !847, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8387)
!8387 = !{!8388}
!8388 = !DILocalVariable(name: "dev", arg: 1, scope: !8386, file: !794, line: 368, type: !823)
!8389 = !DILocation(line: 0, scope: !8386)
!8390 = !DILocation(line: 370, column: 2, scope: !8386)
!8391 = !DILocation(line: 371, column: 1, scope: !8386)
!8392 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !794, file: !794, line: 243, type: !8393, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8395)
!8393 = !DISubroutineType(types: !8394)
!8394 = !{null, !109, !109, !823}
!8395 = !{!8396, !8397, !8398, !8399, !8401}
!8396 = !DILocalVariable(name: "min", arg: 1, scope: !8392, file: !794, line: 243, type: !109)
!8397 = !DILocalVariable(name: "max", arg: 2, scope: !8392, file: !794, line: 243, type: !109)
!8398 = !DILocalVariable(name: "dev", arg: 3, scope: !8392, file: !794, line: 243, type: !823)
!8399 = !DILocalVariable(name: "data", scope: !8392, file: !794, line: 245, type: !8400)
!8400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 32)
!8401 = !DILocalVariable(name: "line", scope: !8392, file: !794, line: 246, type: !109)
!8402 = !DILocation(line: 0, scope: !8392)
!8403 = !DILocation(line: 245, column: 38, scope: !8392)
!8404 = !DILocation(line: 249, column: 24, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8406, file: !794, line: 249, column: 2)
!8406 = distinct !DILexicalBlock(scope: !8392, file: !794, line: 249, column: 2)
!8407 = !DILocation(line: 249, column: 2, scope: !8406)
!8408 = !DILocation(line: 251, column: 7, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !794, line: 251, column: 7)
!8410 = distinct !DILexicalBlock(scope: !8405, file: !794, line: 249, column: 39)
!8411 = !DILocation(line: 251, column: 7, scope: !8410)
!8412 = !DILocation(line: 253, column: 4, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8409, file: !794, line: 251, column: 36)
!8414 = !DILocation(line: 256, column: 24, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8413, file: !794, line: 256, column: 8)
!8416 = !DILocation(line: 256, column: 9, scope: !8415)
!8417 = !DILocation(line: 256, column: 8, scope: !8413)
!8418 = !DILocation(line: 260, column: 43, scope: !8413)
!8419 = !DILocation(line: 260, column: 4, scope: !8413)
!8420 = !DILocation(line: 261, column: 3, scope: !8413)
!8421 = !DILocation(line: 249, column: 35, scope: !8405)
!8422 = distinct !{!8422, !8407, !8423}
!8423 = !DILocation(line: 262, column: 2, scope: !8406)
!8424 = !DILocation(line: 263, column: 1, scope: !8392)
!8425 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !794, file: !794, line: 158, type: !303, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8426)
!8426 = !{!8427}
!8427 = !DILocalVariable(name: "line", arg: 1, scope: !8425, file: !794, line: 158, type: !109)
!8428 = !DILocation(line: 0, scope: !8425)
!8429 = !DILocation(line: 170, column: 38, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8431, file: !794, line: 160, column: 17)
!8431 = distinct !DILexicalBlock(scope: !8425, file: !794, line: 160, column: 6)
!8432 = !DILocation(line: 170, column: 10, scope: !8430)
!8433 = !DILocation(line: 176, column: 1, scope: !8425)
!8434 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !794, file: !794, line: 183, type: !8435, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8437)
!8435 = !DISubroutineType(types: !8436)
!8436 = !{null, !109}
!8437 = !{!8438}
!8438 = !DILocalVariable(name: "line", arg: 1, scope: !8434, file: !794, line: 183, type: !109)
!8439 = !DILocation(line: 0, scope: !8434)
!8440 = !DILocation(line: 195, column: 28, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8442, file: !794, line: 185, column: 17)
!8442 = distinct !DILexicalBlock(scope: !8434, file: !794, line: 185, column: 6)
!8443 = !DILocation(line: 195, column: 3, scope: !8441)
!8444 = !DILocation(line: 200, column: 1, scope: !8434)
!8445 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8446, file: !8446, line: 971, type: !6074, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8447)
!8446 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8447 = !{!8448}
!8448 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8445, file: !8446, line: 971, type: !110)
!8449 = !DILocation(line: 0, scope: !8445)
!8450 = !DILocation(line: 973, column: 3, scope: !8445)
!8451 = !DILocation(line: 974, column: 1, scope: !8445)
!8452 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8446, file: !8446, line: 891, type: !7634, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8453)
!8453 = !{!8454}
!8454 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8452, file: !8446, line: 891, type: !110)
!8455 = !DILocation(line: 0, scope: !8452)
!8456 = !DILocation(line: 893, column: 11, scope: !8452)
!8457 = !DILocation(line: 893, column: 40, scope: !8452)
!8458 = !DILocation(line: 893, column: 3, scope: !8452)
!8459 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !794, file: !794, line: 304, type: !847, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8460)
!8460 = !{!8461}
!8461 = !DILocalVariable(name: "dev", arg: 1, scope: !8459, file: !794, line: 304, type: !823)
!8462 = !DILocation(line: 0, scope: !8459)
!8463 = !DILocation(line: 306, column: 2, scope: !8459)
!8464 = !DILocation(line: 307, column: 1, scope: !8459)
!8465 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !794, file: !794, line: 299, type: !847, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8466)
!8466 = !{!8467}
!8467 = !DILocalVariable(name: "dev", arg: 1, scope: !8465, file: !794, line: 299, type: !823)
!8468 = !DILocation(line: 0, scope: !8465)
!8469 = !DILocation(line: 301, column: 2, scope: !8465)
!8470 = !DILocation(line: 302, column: 1, scope: !8465)
!8471 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !794, file: !794, line: 294, type: !847, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8472)
!8472 = !{!8473}
!8473 = !DILocalVariable(name: "dev", arg: 1, scope: !8471, file: !794, line: 294, type: !823)
!8474 = !DILocation(line: 0, scope: !8471)
!8475 = !DILocation(line: 296, column: 2, scope: !8471)
!8476 = !DILocation(line: 297, column: 1, scope: !8471)
!8477 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !794, file: !794, line: 289, type: !847, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8478)
!8478 = !{!8479}
!8479 = !DILocalVariable(name: "dev", arg: 1, scope: !8477, file: !794, line: 289, type: !823)
!8480 = !DILocation(line: 0, scope: !8477)
!8481 = !DILocation(line: 291, column: 2, scope: !8477)
!8482 = !DILocation(line: 292, column: 1, scope: !8477)
!8483 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !794, file: !794, line: 373, type: !847, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8484)
!8484 = !{!8485}
!8485 = !DILocalVariable(name: "dev", arg: 1, scope: !8483, file: !794, line: 373, type: !823)
!8486 = !DILocation(line: 0, scope: !8483)
!8487 = !DILocation(line: 375, column: 2, scope: !8483)
!8488 = !DILocation(line: 376, column: 1, scope: !8483)
!8489 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !794, file: !794, line: 284, type: !847, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8490)
!8490 = !{!8491}
!8491 = !DILocalVariable(name: "dev", arg: 1, scope: !8489, file: !794, line: 284, type: !823)
!8492 = !DILocation(line: 0, scope: !8489)
!8493 = !DILocation(line: 286, column: 2, scope: !8489)
!8494 = !DILocation(line: 287, column: 1, scope: !8489)
!8495 = distinct !DISubprogram(name: "stm32_exti_init", scope: !794, file: !794, line: 416, type: !821, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8496)
!8496 = !{!8497}
!8497 = !DILocalVariable(name: "dev", arg: 1, scope: !8495, file: !794, line: 416, type: !823)
!8498 = !DILocation(line: 0, scope: !8495)
!8499 = !DILocation(line: 418, column: 2, scope: !8495)
!8500 = !DILocation(line: 420, column: 2, scope: !8495)
!8501 = !DILocation(line: 0, scope: !846)
!8502 = !DILocation(line: 493, column: 2, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !846, file: !794, line: 493, column: 2)
!8504 = !DILocation(line: 497, column: 2, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !846, file: !794, line: 497, column: 2)
!8506 = !DILocation(line: 507, column: 2, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !846, file: !794, line: 507, column: 2)
!8508 = !DILocation(line: 512, column: 2, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !846, file: !794, line: 512, column: 2)
!8510 = !DILocation(line: 516, column: 2, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !846, file: !794, line: 516, column: 2)
!8512 = !DILocation(line: 523, column: 2, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !846, file: !794, line: 523, column: 2)
!8514 = !DILocation(line: 527, column: 2, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !846, file: !794, line: 527, column: 2)
!8516 = !DILocation(line: 607, column: 1, scope: !846)
!8517 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !794, file: !794, line: 112, type: !8435, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8518)
!8518 = !{!8519, !8520}
!8519 = !DILocalVariable(name: "line", arg: 1, scope: !8517, file: !794, line: 112, type: !109)
!8520 = !DILocalVariable(name: "irqnum", scope: !8517, file: !794, line: 114, type: !109)
!8521 = !DILocation(line: 0, scope: !8517)
!8522 = !DILocation(line: 121, column: 11, scope: !8517)
!8523 = !DILocation(line: 130, column: 26, scope: !8517)
!8524 = !DILocation(line: 130, column: 2, scope: !8517)
!8525 = !DILocation(line: 134, column: 2, scope: !8517)
!8526 = !DILocation(line: 135, column: 1, scope: !8517)
!8527 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8446, file: !8446, line: 274, type: !6074, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8528)
!8528 = !{!8529}
!8529 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8527, file: !8446, line: 274, type: !110)
!8530 = !DILocation(line: 0, scope: !8527)
!8531 = !DILocation(line: 276, column: 3, scope: !8527)
!8532 = !DILocation(line: 277, column: 1, scope: !8527)
!8533 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !794, file: !794, line: 137, type: !8435, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8534)
!8534 = !{!8535}
!8535 = !DILocalVariable(name: "line", arg: 1, scope: !8533, file: !794, line: 137, type: !109)
!8536 = !DILocation(line: 0, scope: !8533)
!8537 = !DILocation(line: 141, column: 11, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8533, file: !794, line: 141, column: 6)
!8539 = !DILocation(line: 141, column: 6, scope: !8533)
!8540 = !DILocation(line: 145, column: 28, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8538, file: !794, line: 141, column: 17)
!8542 = !DILocation(line: 145, column: 3, scope: !8541)
!8543 = !DILocation(line: 147, column: 2, scope: !8541)
!8544 = !DILocation(line: 151, column: 1, scope: !8533)
!8545 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8446, file: !8446, line: 322, type: !6074, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8546)
!8546 = !{!8547}
!8547 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8545, file: !8446, line: 322, type: !110)
!8548 = !DILocation(line: 0, scope: !8545)
!8549 = !DILocation(line: 324, column: 3, scope: !8545)
!8550 = !DILocation(line: 325, column: 1, scope: !8545)
!8551 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !794, file: !794, line: 202, type: !8552, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8554)
!8552 = !DISubroutineType(types: !8553)
!8553 = !{null, !109, !109}
!8554 = !{!8555, !8556}
!8555 = !DILocalVariable(name: "line", arg: 1, scope: !8551, file: !794, line: 202, type: !109)
!8556 = !DILocalVariable(name: "trigger", arg: 2, scope: !8551, file: !794, line: 202, type: !109)
!8557 = !DILocation(line: 0, scope: !8551)
!8558 = !DILocation(line: 211, column: 2, scope: !8551)
!8559 = !DILocation(line: 213, column: 36, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8551, file: !794, line: 211, column: 19)
!8561 = !DILocation(line: 213, column: 3, scope: !8560)
!8562 = !DILocation(line: 214, column: 3, scope: !8560)
!8563 = !DILocation(line: 215, column: 3, scope: !8560)
!8564 = !DILocation(line: 217, column: 35, scope: !8560)
!8565 = !DILocation(line: 217, column: 3, scope: !8560)
!8566 = !DILocation(line: 218, column: 3, scope: !8560)
!8567 = !DILocation(line: 219, column: 3, scope: !8560)
!8568 = !DILocation(line: 221, column: 36, scope: !8560)
!8569 = !DILocation(line: 221, column: 3, scope: !8560)
!8570 = !DILocation(line: 222, column: 3, scope: !8560)
!8571 = !DILocation(line: 223, column: 3, scope: !8560)
!8572 = !DILocation(line: 225, column: 35, scope: !8560)
!8573 = !DILocation(line: 225, column: 3, scope: !8560)
!8574 = !DILocation(line: 226, column: 3, scope: !8560)
!8575 = !DILocation(line: 227, column: 3, scope: !8560)
!8576 = !DILocation(line: 232, column: 1, scope: !8551)
!8577 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8446, file: !8446, line: 618, type: !6074, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8578)
!8578 = !{!8579}
!8579 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8577, file: !8446, line: 618, type: !110)
!8580 = !DILocation(line: 0, scope: !8577)
!8581 = !DILocation(line: 620, column: 3, scope: !8577)
!8582 = !DILocation(line: 622, column: 1, scope: !8577)
!8583 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8446, file: !8446, line: 754, type: !6074, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8584)
!8584 = !{!8585}
!8585 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8583, file: !8446, line: 754, type: !110)
!8586 = !DILocation(line: 0, scope: !8583)
!8587 = !DILocation(line: 756, column: 3, scope: !8583)
!8588 = !DILocation(line: 757, column: 1, scope: !8583)
!8589 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8446, file: !8446, line: 572, type: !6074, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8590)
!8590 = !{!8591}
!8591 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8589, file: !8446, line: 572, type: !110)
!8592 = !DILocation(line: 0, scope: !8589)
!8593 = !DILocation(line: 574, column: 3, scope: !8589)
!8594 = !DILocation(line: 576, column: 1, scope: !8589)
!8595 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8446, file: !8446, line: 710, type: !6074, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8596)
!8596 = !{!8597}
!8597 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8595, file: !8446, line: 710, type: !110)
!8598 = !DILocation(line: 0, scope: !8595)
!8599 = !DILocation(line: 712, column: 3, scope: !8595)
!8600 = !DILocation(line: 713, column: 1, scope: !8595)
!8601 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !794, file: !794, line: 433, type: !8602, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8604)
!8602 = !DISubroutineType(types: !8603)
!8603 = !{!109, !109, !834, !107}
!8604 = !{!8605, !8606, !8607, !8608, !8610}
!8605 = !DILocalVariable(name: "line", arg: 1, scope: !8601, file: !794, line: 433, type: !109)
!8606 = !DILocalVariable(name: "cb", arg: 2, scope: !8601, file: !794, line: 433, type: !834)
!8607 = !DILocalVariable(name: "arg", arg: 3, scope: !8601, file: !794, line: 433, type: !107)
!8608 = !DILocalVariable(name: "dev", scope: !8601, file: !794, line: 435, type: !8609)
!8609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !823)
!8610 = !DILocalVariable(name: "data", scope: !8601, file: !794, line: 436, type: !8400)
!8611 = !DILocation(line: 0, scope: !8601)
!8612 = !DILocation(line: 438, column: 21, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8601, file: !794, line: 438, column: 6)
!8614 = !DILocation(line: 438, column: 6, scope: !8613)
!8615 = !DILocation(line: 438, column: 6, scope: !8601)
!8616 = !DILocation(line: 442, column: 20, scope: !8601)
!8617 = !DILocation(line: 443, column: 17, scope: !8601)
!8618 = !DILocation(line: 443, column: 22, scope: !8601)
!8619 = !DILocation(line: 445, column: 2, scope: !8601)
!8620 = !DILocation(line: 446, column: 1, scope: !8601)
!8621 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !794, file: !794, line: 448, type: !8435, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8622)
!8622 = !{!8623, !8624, !8625}
!8623 = !DILocalVariable(name: "line", arg: 1, scope: !8621, file: !794, line: 448, type: !109)
!8624 = !DILocalVariable(name: "dev", scope: !8621, file: !794, line: 450, type: !8609)
!8625 = !DILocalVariable(name: "data", scope: !8621, file: !794, line: 451, type: !8400)
!8626 = !DILocation(line: 0, scope: !8621)
!8627 = !DILocation(line: 453, column: 17, scope: !8621)
!8628 = !DILocation(line: 453, column: 20, scope: !8621)
!8629 = !DILocation(line: 454, column: 17, scope: !8621)
!8630 = !DILocation(line: 454, column: 22, scope: !8621)
!8631 = !DILocation(line: 455, column: 1, scope: !8621)
!8632 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !949, file: !949, line: 183, type: !985, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !8633)
!8633 = !{!8634, !8635, !8636, !8637, !8638}
!8634 = !DILocalVariable(name: "dev", arg: 1, scope: !8632, file: !949, line: 183, type: !976)
!8635 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8632, file: !949, line: 184, type: !987)
!8636 = !DILocalVariable(name: "pclken", scope: !8632, file: !949, line: 186, type: !939)
!8637 = !DILocalVariable(name: "reg", scope: !8632, file: !949, line: 187, type: !2939)
!8638 = !DILocalVariable(name: "reg_val", scope: !8632, file: !949, line: 188, type: !110)
!8639 = !DILocation(line: 0, scope: !8632)
!8640 = !DILocation(line: 192, column: 6, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8632, file: !949, line: 192, column: 6)
!8642 = !DILocation(line: 192, column: 6, scope: !8632)
!8643 = !DILocation(line: 197, column: 52, scope: !8632)
!8644 = !DILocation(line: 197, column: 8, scope: !8632)
!8645 = !DILocation(line: 198, column: 12, scope: !8632)
!8646 = !DILocation(line: 199, column: 21, scope: !8632)
!8647 = !DILocation(line: 199, column: 10, scope: !8632)
!8648 = !DILocation(line: 200, column: 7, scope: !8632)
!8649 = !DILocation(line: 202, column: 2, scope: !8632)
!8650 = !DILocation(line: 203, column: 1, scope: !8632)
!8651 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !949, file: !949, line: 205, type: !985, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !8652)
!8652 = !{!8653, !8654, !8655, !8656, !8657}
!8653 = !DILocalVariable(name: "dev", arg: 1, scope: !8651, file: !949, line: 205, type: !976)
!8654 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8651, file: !949, line: 206, type: !987)
!8655 = !DILocalVariable(name: "pclken", scope: !8651, file: !949, line: 208, type: !939)
!8656 = !DILocalVariable(name: "reg", scope: !8651, file: !949, line: 209, type: !2939)
!8657 = !DILocalVariable(name: "reg_val", scope: !8651, file: !949, line: 210, type: !110)
!8658 = !DILocation(line: 0, scope: !8651)
!8659 = !DILocation(line: 214, column: 6, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8651, file: !949, line: 214, column: 6)
!8661 = !DILocation(line: 214, column: 6, scope: !8651)
!8662 = !DILocation(line: 219, column: 52, scope: !8651)
!8663 = !DILocation(line: 219, column: 8, scope: !8651)
!8664 = !DILocation(line: 220, column: 12, scope: !8651)
!8665 = !DILocation(line: 221, column: 22, scope: !8651)
!8666 = !DILocation(line: 221, column: 13, scope: !8651)
!8667 = !DILocation(line: 221, column: 10, scope: !8651)
!8668 = !DILocation(line: 222, column: 7, scope: !8651)
!8669 = !DILocation(line: 224, column: 2, scope: !8651)
!8670 = !DILocation(line: 225, column: 1, scope: !8651)
!8671 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !949, file: !949, line: 262, type: !1001, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !8672)
!8672 = !{!8673, !8674, !8675, !8676, !8677, !8678, !8679}
!8673 = !DILocalVariable(name: "clock", arg: 1, scope: !8671, file: !949, line: 262, type: !976)
!8674 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8671, file: !949, line: 263, type: !987)
!8675 = !DILocalVariable(name: "rate", arg: 3, scope: !8671, file: !949, line: 264, type: !945)
!8676 = !DILocalVariable(name: "pclken", scope: !8671, file: !949, line: 266, type: !939)
!8677 = !DILocalVariable(name: "ahb_clock", scope: !8671, file: !949, line: 273, type: !110)
!8678 = !DILocalVariable(name: "apb1_clock", scope: !8671, file: !949, line: 274, type: !110)
!8679 = !DILocalVariable(name: "apb2_clock", scope: !8671, file: !949, line: 276, type: !110)
!8680 = !DILocation(line: 0, scope: !8671)
!8681 = !DILocation(line: 273, column: 23, scope: !8671)
!8682 = !DILocation(line: 299, column: 18, scope: !8671)
!8683 = !DILocation(line: 299, column: 2, scope: !8671)
!8684 = !DILocation(line: 374, column: 3, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8671, file: !949, line: 299, column: 23)
!8686 = !DILocation(line: 379, column: 3, scope: !8685)
!8687 = !DILocation(line: 389, column: 3, scope: !8685)
!8688 = !DILocation(line: 0, scope: !8685)
!8689 = !DILocation(line: 396, column: 1, scope: !8671)
!8690 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !949, file: !949, line: 227, type: !1017, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !8691)
!8691 = !{!8692, !8693, !8694, !8695, !8696, !8697, !8698, !8699}
!8692 = !DILocalVariable(name: "dev", arg: 1, scope: !8690, file: !949, line: 227, type: !976)
!8693 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8690, file: !949, line: 228, type: !987)
!8694 = !DILocalVariable(name: "data", arg: 3, scope: !8690, file: !949, line: 229, type: !107)
!8695 = !DILocalVariable(name: "pclken", scope: !8690, file: !949, line: 233, type: !939)
!8696 = !DILocalVariable(name: "reg", scope: !8690, file: !949, line: 234, type: !2939)
!8697 = !DILocalVariable(name: "reg_val", scope: !8690, file: !949, line: 235, type: !110)
!8698 = !DILocalVariable(name: "dt_val", scope: !8690, file: !949, line: 235, type: !110)
!8699 = !DILocalVariable(name: "err", scope: !8690, file: !949, line: 236, type: !109)
!8700 = !DILocation(line: 0, scope: !8690)
!8701 = !DILocation(line: 241, column: 30, scope: !8690)
!8702 = !DILocation(line: 241, column: 8, scope: !8690)
!8703 = !DILocation(line: 242, column: 10, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8690, file: !949, line: 242, column: 6)
!8705 = !DILocation(line: 242, column: 6, scope: !8690)
!8706 = !DILocation(line: 247, column: 11, scope: !8690)
!8707 = !DILocation(line: 248, column: 6, scope: !8690)
!8708 = !DILocation(line: 247, column: 44, scope: !8690)
!8709 = !DILocation(line: 250, column: 6, scope: !8690)
!8710 = !DILocation(line: 249, column: 52, scope: !8690)
!8711 = !DILocation(line: 249, column: 8, scope: !8690)
!8712 = !DILocation(line: 251, column: 12, scope: !8690)
!8713 = !DILocation(line: 252, column: 10, scope: !8690)
!8714 = !DILocation(line: 253, column: 7, scope: !8690)
!8715 = !DILocation(line: 255, column: 2, scope: !8690)
!8716 = !DILocation(line: 260, column: 1, scope: !8690)
!8717 = distinct !DISubprogram(name: "enabled_clock", scope: !949, file: !949, line: 100, type: !8718, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !8720)
!8718 = !DISubroutineType(types: !8719)
!8719 = !{!109, !110}
!8720 = !{!8721, !8722}
!8721 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8717, file: !949, line: 100, type: !110)
!8722 = !DILocalVariable(name: "r", scope: !8717, file: !949, line: 102, type: !109)
!8723 = !DILocation(line: 0, scope: !8717)
!8724 = !DILocation(line: 104, column: 2, scope: !8717)
!8725 = !DILocation(line: 180, column: 2, scope: !8717)
!8726 = !DILocation(line: 181, column: 1, scope: !8717)
!8727 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !949, file: !949, line: 641, type: !974, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !8728)
!8728 = !{!8729, !8730, !8731}
!8729 = !DILocalVariable(name: "dev", arg: 1, scope: !8727, file: !949, line: 641, type: !976)
!8730 = !DILocalVariable(name: "old_flash_freq", scope: !8727, file: !949, line: 664, type: !110)
!8731 = !DILocalVariable(name: "new_flash_freq", scope: !8727, file: !949, line: 665, type: !110)
!8732 = !DILocation(line: 0, scope: !8727)
!8733 = !DILocation(line: 646, column: 2, scope: !8727)
!8734 = !DILocation(line: 667, column: 19, scope: !8727)
!8735 = !DILocation(line: 674, column: 21, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8727, file: !949, line: 674, column: 6)
!8737 = !DILocation(line: 674, column: 6, scope: !8727)
!8738 = !DILocation(line: 675, column: 3, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8736, file: !949, line: 674, column: 59)
!8740 = !DILocation(line: 676, column: 2, scope: !8739)
!8741 = !DILocation(line: 680, column: 2, scope: !8727)
!8742 = !DILocation(line: 683, column: 2, scope: !8727)
!8743 = !DILocation(line: 690, column: 3, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8745, file: !949, line: 689, column: 9)
!8745 = distinct !DILexicalBlock(scope: !8727, file: !949, line: 685, column: 6)
!8746 = !DILocation(line: 695, column: 2, scope: !8727)
!8747 = !DILocation(line: 696, column: 2, scope: !8727)
!8748 = !DILocation(line: 696, column: 9, scope: !8727)
!8749 = !DILocation(line: 696, column: 34, scope: !8727)
!8750 = distinct !{!8750, !8747, !8751}
!8751 = !DILocation(line: 697, column: 2, scope: !8727)
!8752 = !DILocation(line: 720, column: 21, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8727, file: !949, line: 720, column: 6)
!8754 = !DILocation(line: 720, column: 6, scope: !8727)
!8755 = !DILocation(line: 721, column: 3, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8753, file: !949, line: 720, column: 60)
!8757 = !DILocation(line: 722, column: 2, scope: !8756)
!8758 = !DILocation(line: 725, column: 18, scope: !8727)
!8759 = !DILocation(line: 728, column: 2, scope: !8727)
!8760 = !DILocation(line: 730, column: 2, scope: !8727)
!8761 = !DILocation(line: 745, column: 2, scope: !8727)
!8762 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8763, file: !8763, line: 995, type: !7393, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !2045)
!8763 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8764 = !DILocation(line: 997, column: 21, scope: !8762)
!8765 = !DILocation(line: 997, column: 3, scope: !8762)
!8766 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !949, file: !949, line: 507, type: !3062, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !2045)
!8767 = !DILocation(line: 534, column: 7, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8769, file: !949, line: 534, column: 7)
!8769 = distinct !DILexicalBlock(scope: !8770, file: !949, line: 532, column: 37)
!8770 = distinct !DILexicalBlock(scope: !8766, file: !949, line: 532, column: 6)
!8771 = !DILocation(line: 534, column: 28, scope: !8768)
!8772 = !DILocation(line: 534, column: 7, scope: !8769)
!8773 = !DILocation(line: 536, column: 4, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8768, file: !949, line: 534, column: 34)
!8775 = !DILocation(line: 537, column: 4, scope: !8774)
!8776 = !DILocation(line: 537, column: 11, scope: !8774)
!8777 = !DILocation(line: 537, column: 32, scope: !8774)
!8778 = distinct !{!8778, !8775, !8779}
!8779 = !DILocation(line: 539, column: 4, scope: !8774)
!8780 = !DILocation(line: 583, column: 3, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8782, file: !949, line: 577, column: 37)
!8782 = distinct !DILexicalBlock(scope: !8766, file: !949, line: 577, column: 6)
!8783 = !DILocation(line: 584, column: 3, scope: !8781)
!8784 = !DILocation(line: 584, column: 10, scope: !8781)
!8785 = !DILocation(line: 584, column: 31, scope: !8781)
!8786 = distinct !{!8786, !8783, !8787}
!8787 = !DILocation(line: 585, column: 3, scope: !8781)
!8788 = !DILocation(line: 627, column: 1, scope: !8766)
!8789 = distinct !DISubprogram(name: "set_up_plls", scope: !949, file: !949, line: 448, type: !3062, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !2045)
!8790 = !DILocation(line: 460, column: 6, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8789, file: !949, line: 460, column: 6)
!8792 = !DILocation(line: 460, column: 31, scope: !8791)
!8793 = !DILocation(line: 460, column: 6, scope: !8789)
!8794 = !DILocation(line: 461, column: 3, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8791, file: !949, line: 460, column: 67)
!8796 = !DILocation(line: 462, column: 3, scope: !8795)
!8797 = !DILocation(line: 463, column: 2, scope: !8795)
!8798 = !DILocation(line: 464, column: 2, scope: !8789)
!8799 = !DILocation(line: 496, column: 2, scope: !8789)
!8800 = !DILocation(line: 499, column: 2, scope: !8789)
!8801 = !DILocation(line: 500, column: 2, scope: !8789)
!8802 = !DILocation(line: 500, column: 9, scope: !8789)
!8803 = !DILocation(line: 500, column: 30, scope: !8789)
!8804 = distinct !{!8804, !8801, !8805}
!8805 = !DILocation(line: 502, column: 2, scope: !8789)
!8806 = !DILocation(line: 505, column: 1, scope: !8789)
!8807 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8763, file: !8763, line: 944, type: !6074, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !8808)
!8808 = !{!8809}
!8809 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8807, file: !8763, line: 944, type: !110)
!8810 = !DILocation(line: 0, scope: !8807)
!8811 = !DILocation(line: 946, column: 3, scope: !8807)
!8812 = !DILocation(line: 947, column: 1, scope: !8807)
!8813 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8763, file: !8763, line: 910, type: !6074, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !8814)
!8814 = !{!8815}
!8815 = !DILocalVariable(name: "Source", arg: 1, scope: !8813, file: !8763, line: 910, type: !110)
!8816 = !DILocation(line: 0, scope: !8813)
!8817 = !DILocation(line: 912, column: 3, scope: !8813)
!8818 = !DILocation(line: 913, column: 1, scope: !8813)
!8819 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8763, file: !8763, line: 924, type: !7393, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !2045)
!8820 = !DILocation(line: 926, column: 21, scope: !8819)
!8821 = !DILocation(line: 926, column: 3, scope: !8819)
!8822 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8763, file: !8763, line: 960, type: !6074, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !8823)
!8823 = !{!8824}
!8824 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8822, file: !8763, line: 960, type: !110)
!8825 = !DILocation(line: 0, scope: !8822)
!8826 = !DILocation(line: 962, column: 3, scope: !8822)
!8827 = !DILocation(line: 963, column: 1, scope: !8822)
!8828 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8763, file: !8763, line: 976, type: !6074, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !8829)
!8829 = !{!8830}
!8830 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8828, file: !8763, line: 976, type: !110)
!8831 = !DILocation(line: 0, scope: !8828)
!8832 = !DILocation(line: 978, column: 3, scope: !8828)
!8833 = !DILocation(line: 979, column: 1, scope: !8828)
!8834 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !949, file: !949, line: 409, type: !3062, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !2045)
!8835 = !DILocation(line: 412, column: 6, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8834, file: !949, line: 412, column: 6)
!8837 = !DILocation(line: 412, column: 27, scope: !8836)
!8838 = !DILocation(line: 412, column: 6, scope: !8834)
!8839 = !DILocation(line: 414, column: 3, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8836, file: !949, line: 412, column: 33)
!8841 = !DILocation(line: 415, column: 3, scope: !8840)
!8842 = !DILocation(line: 415, column: 10, scope: !8840)
!8843 = !DILocation(line: 415, column: 31, scope: !8840)
!8844 = distinct !{!8844, !8841, !8845}
!8845 = !DILocation(line: 417, column: 3, scope: !8840)
!8846 = !DILocation(line: 421, column: 2, scope: !8834)
!8847 = !DILocation(line: 422, column: 2, scope: !8834)
!8848 = !DILocation(line: 422, column: 9, scope: !8834)
!8849 = !DILocation(line: 422, column: 34, scope: !8834)
!8850 = distinct !{!8850, !8847, !8851}
!8851 = !DILocation(line: 423, column: 2, scope: !8834)
!8852 = !DILocation(line: 424, column: 1, scope: !8834)
!8853 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8763, file: !8763, line: 1180, type: !3062, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !2045)
!8854 = !DILocation(line: 1182, column: 3, scope: !8853)
!8855 = !DILocation(line: 1183, column: 1, scope: !8853)
!8856 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8763, file: !8763, line: 1169, type: !3062, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !2045)
!8857 = !DILocation(line: 1171, column: 3, scope: !8856)
!8858 = !DILocation(line: 1172, column: 1, scope: !8856)
!8859 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8763, file: !8763, line: 1190, type: !7393, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !2045)
!8860 = !DILocation(line: 1192, column: 12, scope: !8859)
!8861 = !DILocation(line: 1192, column: 11, scope: !8859)
!8862 = !DILocation(line: 1192, column: 3, scope: !8859)
!8863 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8763, file: !8763, line: 612, type: !7393, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !2045)
!8864 = !DILocation(line: 614, column: 12, scope: !8863)
!8865 = !DILocation(line: 614, column: 11, scope: !8863)
!8866 = !DILocation(line: 614, column: 3, scope: !8863)
!8867 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8763, file: !8763, line: 592, type: !3062, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !2045)
!8868 = !DILocation(line: 594, column: 3, scope: !8867)
!8869 = !DILocation(line: 595, column: 1, scope: !8867)
!8870 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8763, file: !8763, line: 760, type: !3062, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !2045)
!8871 = !DILocation(line: 762, column: 3, scope: !8870)
!8872 = !DILocation(line: 763, column: 1, scope: !8870)
!8873 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8763, file: !8763, line: 780, type: !7393, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !2045)
!8874 = !DILocation(line: 782, column: 12, scope: !8873)
!8875 = !DILocation(line: 782, column: 11, scope: !8873)
!8876 = !DILocation(line: 782, column: 3, scope: !8873)
!8877 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8878, file: !8878, line: 48, type: !7393, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2045)
!8878 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8879 = !DILocation(line: 51, column: 3, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8881, file: !8878, line: 50, column: 37)
!8881 = distinct !DILexicalBlock(scope: !8877, file: !8878, line: 50, column: 6)
!8882 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8878, file: !8878, line: 64, type: !3062, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2045)
!8883 = !DILocation(line: 66, column: 2, scope: !8882)
!8884 = !DILocation(line: 69, column: 1, scope: !8882)
!8885 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8763, file: !8763, line: 1219, type: !8886, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !8888)
!8886 = !DISubroutineType(types: !8887)
!8887 = !{null, !110, !110, !110}
!8888 = !{!8889, !8890, !8891}
!8889 = !DILocalVariable(name: "Source", arg: 1, scope: !8885, file: !8763, line: 1219, type: !110)
!8890 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !8885, file: !8763, line: 1219, type: !110)
!8891 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !8885, file: !8763, line: 1219, type: !110)
!8892 = !DILocation(line: 0, scope: !8885)
!8893 = !DILocation(line: 1221, column: 3, scope: !8885)
!8894 = !DILocation(line: 1222, column: 1, scope: !8885)
!8895 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !8878, file: !8878, line: 75, type: !7393, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2045)
!8896 = !DILocation(line: 77, column: 9, scope: !8895)
!8897 = !DILocation(line: 77, column: 2, scope: !8895)
!8898 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8878, file: !8878, line: 87, type: !3062, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2045)
!8899 = !DILocation(line: 93, column: 2, scope: !8898)
!8900 = !DILocation(line: 95, column: 1, scope: !8898)
!8901 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !6073, file: !6073, line: 895, type: !6074, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !8902)
!8902 = !{!8903, !8904}
!8903 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8901, file: !6073, line: 895, type: !110)
!8904 = !DILocalVariable(name: "tmpreg", scope: !8901, file: !6073, line: 897, type: !316)
!8905 = !DILocation(line: 0, scope: !8901)
!8906 = !DILocation(line: 897, column: 3, scope: !8901)
!8907 = !DILocation(line: 897, column: 17, scope: !8901)
!8908 = !DILocation(line: 898, column: 3, scope: !8901)
!8909 = !DILocation(line: 900, column: 12, scope: !8901)
!8910 = !DILocation(line: 900, column: 10, scope: !8901)
!8911 = !DILocation(line: 901, column: 9, scope: !8901)
!8912 = !DILocation(line: 902, column: 1, scope: !8901)
!8913 = distinct !DISubprogram(name: "uart_console_init", scope: !1078, file: !1078, line: 588, type: !1055, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1021, retainedNodes: !8914)
!8914 = !{!8915}
!8915 = !DILocalVariable(name: "arg", arg: 1, scope: !8913, file: !1078, line: 588, type: !1033)
!8916 = !DILocation(line: 0, scope: !8913)
!8917 = !DILocation(line: 593, column: 7, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8913, file: !1078, line: 593, column: 6)
!8919 = !DILocation(line: 593, column: 6, scope: !8913)
!8920 = !DILocation(line: 597, column: 2, scope: !8913)
!8921 = !DILocation(line: 599, column: 2, scope: !8913)
!8922 = !DILocation(line: 600, column: 1, scope: !8913)
!8923 = distinct !DISubprogram(name: "device_is_ready", scope: !8272, file: !8272, line: 47, type: !8924, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1021, retainedNodes: !8926)
!8924 = !DISubroutineType(types: !8925)
!8925 = !{!360, !1033}
!8926 = !{!8927}
!8927 = !DILocalVariable(name: "dev", arg: 1, scope: !8923, file: !8272, line: 47, type: !1033)
!8928 = !DILocation(line: 0, scope: !8923)
!8929 = !DILocation(line: 55, column: 2, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8923, file: !8272, line: 55, column: 2)
!8931 = !{i64 2152424483}
!8932 = !DILocation(line: 56, column: 9, scope: !8923)
!8933 = !DILocation(line: 56, column: 2, scope: !8923)
!8934 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1078, file: !1078, line: 573, type: !3062, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1021, retainedNodes: !2045)
!8935 = !DILocation(line: 576, column: 2, scope: !8934)
!8936 = !DILocation(line: 579, column: 2, scope: !8934)
!8937 = !DILocation(line: 581, column: 1, scope: !8934)
!8938 = distinct !DISubprogram(name: "console_out", scope: !1078, file: !1078, line: 77, type: !303, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1021, retainedNodes: !8939)
!8939 = !{!8940}
!8940 = !DILocalVariable(name: "c", arg: 1, scope: !8938, file: !1078, line: 77, type: !109)
!8941 = !DILocation(line: 0, scope: !8938)
!8942 = !DILocation(line: 89, column: 11, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8938, file: !1078, line: 89, column: 6)
!8944 = !DILocation(line: 89, column: 6, scope: !8938)
!8945 = !DILocation(line: 90, column: 3, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8943, file: !1078, line: 89, column: 17)
!8947 = !DILocation(line: 91, column: 2, scope: !8946)
!8948 = !DILocation(line: 92, column: 34, scope: !8938)
!8949 = !DILocation(line: 92, column: 2, scope: !8938)
!8950 = !DILocation(line: 94, column: 2, scope: !8938)
!8951 = distinct !DISubprogram(name: "uart_poll_out", scope: !8952, file: !8952, line: 95, type: !1051, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1021, retainedNodes: !8953)
!8952 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/simple")
!8953 = !{!8954, !8955}
!8954 = !DILocalVariable(name: "dev", arg: 1, scope: !8951, file: !8952, line: 95, type: !1033)
!8955 = !DILocalVariable(name: "out_char", arg: 2, scope: !8951, file: !8952, line: 95, type: !179)
!8956 = !DILocation(line: 0, scope: !8951)
!8957 = !DILocation(line: 105, column: 2, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8951, file: !8952, line: 105, column: 2)
!8959 = !{i64 2152507874}
!8960 = !DILocation(line: 106, column: 2, scope: !8951)
!8961 = !DILocation(line: 107, column: 1, scope: !8951)
!8962 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1027, file: !1027, line: 574, type: !1051, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1021, retainedNodes: !8963)
!8963 = !{!8964, !8965, !8966}
!8964 = !DILocalVariable(name: "dev", arg: 1, scope: !8962, file: !1027, line: 574, type: !1033)
!8965 = !DILocalVariable(name: "out_char", arg: 2, scope: !8962, file: !1027, line: 575, type: !179)
!8966 = !DILocalVariable(name: "api", scope: !8962, file: !1027, line: 577, type: !1024)
!8967 = !DILocation(line: 0, scope: !8962)
!8968 = !DILocation(line: 578, column: 40, scope: !8962)
!8969 = !DILocation(line: 580, column: 7, scope: !8962)
!8970 = !DILocation(line: 580, column: 2, scope: !8962)
!8971 = !DILocation(line: 581, column: 1, scope: !8962)
!8972 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !349, file: !349, line: 730, type: !8924, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1021, retainedNodes: !8973)
!8973 = !{!8974}
!8974 = !DILocalVariable(name: "dev", arg: 1, scope: !8972, file: !349, line: 730, type: !1033)
!8975 = !DILocation(line: 0, scope: !8972)
!8976 = !DILocation(line: 732, column: 9, scope: !8972)
!8977 = !DILocation(line: 732, column: 2, scope: !8972)
!8978 = distinct !DISubprogram(name: "uart_register_input", scope: !1078, file: !1078, line: 560, type: !8979, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1021, retainedNodes: !9026)
!8979 = !DISubroutineType(types: !8980)
!8980 = !{null, !8981, !8981, !9023}
!8981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8982, size: 32)
!8982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !118, line: 2208, size: 160, elements: !8983)
!8983 = !{!8984}
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8982, file: !118, line: 2209, baseType: !8985, size: 160)
!8985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !118, line: 1709, size: 160, elements: !8986)
!8986 = !{!8987, !9000, !9004}
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8985, file: !118, line: 1710, baseType: !8988, size: 64)
!8988 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8989, line: 46, baseType: !8990)
!8989 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8989, line: 41, size: 64, elements: !8991)
!8991 = !{!8992, !8999}
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8990, file: !8989, line: 42, baseType: !8993, size: 32)
!8993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8994, size: 32)
!8994 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8989, line: 39, baseType: !8995)
!8995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8989, line: 35, size: 32, elements: !8996)
!8996 = !{!8997}
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8995, file: !8989, line: 36, baseType: !8998, size: 32)
!8998 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8989, line: 32, baseType: !110)
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8990, file: !8989, line: 43, baseType: !8993, size: 32, offset: 32)
!9000 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8985, file: !118, line: 1711, baseType: !9001, size: 32, offset: 64)
!9001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !9002)
!9002 = !{!9003}
!9003 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9001, file: !251, line: 52, baseType: !22, size: 32)
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8985, file: !118, line: 1712, baseType: !9005, size: 64, offset: 96)
!9005 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !9006)
!9006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !9007)
!9007 = !{!9008}
!9008 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9006, file: !122, line: 232, baseType: !9009, size: 64)
!9009 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !9010)
!9010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !9011)
!9011 = !{!9012, !9018}
!9012 = !DIDerivedType(tag: DW_TAG_member, scope: !9010, file: !127, line: 38, baseType: !9013, size: 32)
!9013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9010, file: !127, line: 38, size: 32, elements: !9014)
!9014 = !{!9015, !9017}
!9015 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9013, file: !127, line: 39, baseType: !9016, size: 32)
!9016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9010, size: 32)
!9017 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9013, file: !127, line: 40, baseType: !9016, size: 32)
!9018 = !DIDerivedType(tag: DW_TAG_member, scope: !9010, file: !127, line: 42, baseType: !9019, size: 32, offset: 32)
!9019 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9010, file: !127, line: 42, size: 32, elements: !9020)
!9020 = !{!9021, !9022}
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9019, file: !127, line: 43, baseType: !9016, size: 32)
!9022 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9019, file: !127, line: 44, baseType: !9016, size: 32)
!9023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9024, size: 32)
!9024 = !DISubroutineType(types: !9025)
!9025 = !{!178, !285, !178}
!9026 = !{!9027, !9028, !9029}
!9027 = !DILocalVariable(name: "avail", arg: 1, scope: !8978, file: !1078, line: 560, type: !8981)
!9028 = !DILocalVariable(name: "lines", arg: 2, scope: !8978, file: !1078, line: 560, type: !8981)
!9029 = !DILocalVariable(name: "completion", arg: 3, scope: !8978, file: !1078, line: 561, type: !9023)
!9030 = !DILocation(line: 0, scope: !8978)
!9031 = !DILocation(line: 566, column: 1, scope: !8978)
!9032 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1237, file: !1237, line: 523, type: !1103, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9033)
!9033 = !{!9034, !9035, !9036, !9037, !9038}
!9034 = !DILocalVariable(name: "dev", arg: 1, scope: !9032, file: !1237, line: 523, type: !1105)
!9035 = !DILocalVariable(name: "pin", arg: 2, scope: !9032, file: !1237, line: 524, type: !652)
!9036 = !DILocalVariable(name: "flags", arg: 3, scope: !9032, file: !1237, line: 524, type: !653)
!9037 = !DILocalVariable(name: "err", scope: !9032, file: !1237, line: 526, type: !109)
!9038 = !DILocalVariable(name: "pincfg", scope: !9032, file: !1237, line: 527, type: !109)
!9039 = !DILocation(line: 0, scope: !9032)
!9040 = !DILocation(line: 527, column: 2, scope: !9032)
!9041 = !DILocation(line: 532, column: 8, scope: !9032)
!9042 = !DILocation(line: 533, column: 10, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9032, file: !1237, line: 533, column: 6)
!9044 = !DILocation(line: 533, column: 6, scope: !9032)
!9045 = !DILocation(line: 543, column: 13, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9032, file: !1237, line: 543, column: 6)
!9047 = !DILocation(line: 543, column: 28, scope: !9046)
!9048 = !DILocation(line: 543, column: 6, scope: !9032)
!9049 = !DILocation(line: 544, column: 14, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9051, file: !1237, line: 544, column: 7)
!9051 = distinct !DILexicalBlock(scope: !9046, file: !1237, line: 543, column: 34)
!9052 = !DILocation(line: 544, column: 39, scope: !9050)
!9053 = !DILocation(line: 544, column: 7, scope: !9051)
!9054 = !DILocation(line: 545, column: 38, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9050, file: !1237, line: 544, column: 45)
!9056 = !DILocation(line: 545, column: 4, scope: !9055)
!9057 = !DILocation(line: 546, column: 3, scope: !9055)
!9058 = !DILocation(line: 546, column: 21, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9050, file: !1237, line: 546, column: 14)
!9060 = !DILocation(line: 546, column: 45, scope: !9059)
!9061 = !DILocation(line: 546, column: 14, scope: !9050)
!9062 = !DILocation(line: 547, column: 40, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9059, file: !1237, line: 546, column: 51)
!9064 = !DILocation(line: 547, column: 4, scope: !9063)
!9065 = !DILocation(line: 548, column: 3, scope: !9063)
!9066 = !DILocation(line: 551, column: 32, scope: !9032)
!9067 = !DILocation(line: 551, column: 37, scope: !9032)
!9068 = !DILocation(line: 551, column: 2, scope: !9032)
!9069 = !DILocation(line: 554, column: 6, scope: !9032)
!9070 = !DILocation(line: 562, column: 1, scope: !9032)
!9071 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1237, file: !1237, line: 410, type: !9072, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9074)
!9072 = !DISubroutineType(types: !9073)
!9073 = !{!109, !1105, !945}
!9074 = !{!9075, !9076, !9077, !9079}
!9075 = !DILocalVariable(name: "dev", arg: 1, scope: !9071, file: !1237, line: 410, type: !1105)
!9076 = !DILocalVariable(name: "value", arg: 2, scope: !9071, file: !1237, line: 410, type: !945)
!9077 = !DILocalVariable(name: "cfg", scope: !9071, file: !1237, line: 412, type: !9078)
!9078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 32)
!9079 = !DILocalVariable(name: "gpio", scope: !9071, file: !1237, line: 413, type: !1172)
!9080 = !DILocation(line: 0, scope: !9071)
!9081 = !DILocation(line: 412, column: 45, scope: !9071)
!9082 = !DILocation(line: 413, column: 44, scope: !9071)
!9083 = !DILocation(line: 415, column: 11, scope: !9071)
!9084 = !DILocation(line: 415, column: 9, scope: !9071)
!9085 = !DILocation(line: 417, column: 2, scope: !9071)
!9086 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1237, file: !1237, line: 420, type: !1126, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9087)
!9087 = !{!9088, !9089, !9090, !9091, !9092, !9093}
!9088 = !DILocalVariable(name: "dev", arg: 1, scope: !9086, file: !1237, line: 420, type: !1105)
!9089 = !DILocalVariable(name: "mask", arg: 2, scope: !9086, file: !1237, line: 421, type: !664)
!9090 = !DILocalVariable(name: "value", arg: 3, scope: !9086, file: !1237, line: 422, type: !659)
!9091 = !DILocalVariable(name: "cfg", scope: !9086, file: !1237, line: 424, type: !9078)
!9092 = !DILocalVariable(name: "gpio", scope: !9086, file: !1237, line: 425, type: !1172)
!9093 = !DILocalVariable(name: "port_value", scope: !9086, file: !1237, line: 426, type: !110)
!9094 = !DILocation(line: 0, scope: !9086)
!9095 = !DILocation(line: 424, column: 45, scope: !9086)
!9096 = !DILocation(line: 425, column: 44, scope: !9086)
!9097 = !DILocation(line: 430, column: 15, scope: !9086)
!9098 = !DILocation(line: 431, column: 46, scope: !9086)
!9099 = !DILocation(line: 431, column: 44, scope: !9086)
!9100 = !DILocation(line: 431, column: 61, scope: !9086)
!9101 = !DILocation(line: 431, column: 53, scope: !9086)
!9102 = !DILocation(line: 431, column: 2, scope: !9086)
!9103 = !DILocation(line: 435, column: 2, scope: !9086)
!9104 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1237, file: !1237, line: 438, type: !1130, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9105)
!9105 = !{!9106, !9107, !9108, !9109}
!9106 = !DILocalVariable(name: "dev", arg: 1, scope: !9104, file: !1237, line: 438, type: !1105)
!9107 = !DILocalVariable(name: "pins", arg: 2, scope: !9104, file: !1237, line: 439, type: !664)
!9108 = !DILocalVariable(name: "cfg", scope: !9104, file: !1237, line: 441, type: !9078)
!9109 = !DILocalVariable(name: "gpio", scope: !9104, file: !1237, line: 442, type: !1172)
!9110 = !DILocation(line: 0, scope: !9104)
!9111 = !DILocation(line: 441, column: 45, scope: !9104)
!9112 = !DILocation(line: 442, column: 44, scope: !9104)
!9113 = !DILocation(line: 448, column: 2, scope: !9104)
!9114 = !DILocation(line: 450, column: 2, scope: !9104)
!9115 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1237, file: !1237, line: 453, type: !1130, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9116)
!9116 = !{!9117, !9118, !9119, !9120}
!9117 = !DILocalVariable(name: "dev", arg: 1, scope: !9115, file: !1237, line: 453, type: !1105)
!9118 = !DILocalVariable(name: "pins", arg: 2, scope: !9115, file: !1237, line: 454, type: !664)
!9119 = !DILocalVariable(name: "cfg", scope: !9115, file: !1237, line: 456, type: !9078)
!9120 = !DILocalVariable(name: "gpio", scope: !9115, file: !1237, line: 457, type: !1172)
!9121 = !DILocation(line: 0, scope: !9115)
!9122 = !DILocation(line: 456, column: 45, scope: !9115)
!9123 = !DILocation(line: 457, column: 44, scope: !9115)
!9124 = !DILocation(line: 467, column: 2, scope: !9115)
!9125 = !DILocation(line: 470, column: 2, scope: !9115)
!9126 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1237, file: !1237, line: 473, type: !1130, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9127)
!9127 = !{!9128, !9129, !9130, !9131}
!9128 = !DILocalVariable(name: "dev", arg: 1, scope: !9126, file: !1237, line: 473, type: !1105)
!9129 = !DILocalVariable(name: "pins", arg: 2, scope: !9126, file: !1237, line: 474, type: !664)
!9130 = !DILocalVariable(name: "cfg", scope: !9126, file: !1237, line: 476, type: !9078)
!9131 = !DILocalVariable(name: "gpio", scope: !9126, file: !1237, line: 477, type: !1172)
!9132 = !DILocation(line: 0, scope: !9126)
!9133 = !DILocation(line: 476, column: 45, scope: !9126)
!9134 = !DILocation(line: 477, column: 44, scope: !9126)
!9135 = !DILocation(line: 484, column: 2, scope: !9126)
!9136 = !DILocation(line: 487, column: 2, scope: !9126)
!9137 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1237, file: !1237, line: 594, type: !1136, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9138)
!9138 = !{!9139, !9140, !9141, !9142, !9143, !9144, !9146, !9147, !9148}
!9139 = !DILocalVariable(name: "dev", arg: 1, scope: !9137, file: !1237, line: 594, type: !1105)
!9140 = !DILocalVariable(name: "pin", arg: 2, scope: !9137, file: !1237, line: 595, type: !652)
!9141 = !DILocalVariable(name: "mode", arg: 3, scope: !9137, file: !1237, line: 596, type: !617)
!9142 = !DILocalVariable(name: "trig", arg: 4, scope: !9137, file: !1237, line: 597, type: !623)
!9143 = !DILocalVariable(name: "cfg", scope: !9137, file: !1237, line: 599, type: !9078)
!9144 = !DILocalVariable(name: "data", scope: !9137, file: !1237, line: 600, type: !9145)
!9145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!9146 = !DILocalVariable(name: "edge", scope: !9137, file: !1237, line: 601, type: !109)
!9147 = !DILocalVariable(name: "err", scope: !9137, file: !1237, line: 602, type: !109)
!9148 = !DILabel(scope: !9137, name: "exit", file: !1237, line: 643)
!9149 = !DILocation(line: 0, scope: !9137)
!9150 = !DILocation(line: 599, column: 45, scope: !9137)
!9151 = !DILocation(line: 604, column: 6, scope: !9137)
!9152 = !DILocation(line: 605, column: 34, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9154, file: !1237, line: 605, column: 7)
!9154 = distinct !DILexicalBlock(scope: !9155, file: !1237, line: 604, column: 38)
!9155 = distinct !DILexicalBlock(scope: !9137, file: !1237, line: 604, column: 6)
!9156 = !DILocation(line: 605, column: 7, scope: !9153)
!9157 = !DILocation(line: 605, column: 47, scope: !9153)
!9158 = !DILocation(line: 605, column: 39, scope: !9153)
!9159 = !DILocation(line: 605, column: 7, scope: !9154)
!9160 = !DILocation(line: 606, column: 4, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9153, file: !1237, line: 605, column: 53)
!9162 = !DILocation(line: 607, column: 4, scope: !9161)
!9163 = !DILocation(line: 608, column: 4, scope: !9161)
!9164 = !DILocation(line: 609, column: 3, scope: !9161)
!9165 = !DILocation(line: 600, column: 38, scope: !9137)
!9166 = !DILocation(line: 620, column: 30, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9137, file: !1237, line: 620, column: 6)
!9168 = !DILocation(line: 620, column: 6, scope: !9167)
!9169 = !DILocation(line: 620, column: 57, scope: !9167)
!9170 = !DILocation(line: 620, column: 6, scope: !9137)
!9171 = !DILocation(line: 625, column: 29, scope: !9137)
!9172 = !DILocation(line: 625, column: 2, scope: !9137)
!9173 = !DILocation(line: 627, column: 2, scope: !9137)
!9174 = !DILocation(line: 630, column: 3, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9137, file: !1237, line: 627, column: 16)
!9176 = !DILocation(line: 633, column: 3, scope: !9175)
!9177 = !DILocation(line: 636, column: 3, scope: !9175)
!9178 = !DILocation(line: 639, column: 2, scope: !9137)
!9179 = !DILocation(line: 641, column: 2, scope: !9137)
!9180 = !DILocation(line: 643, column: 1, scope: !9137)
!9181 = !DILocation(line: 644, column: 2, scope: !9137)
!9182 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1237, file: !1237, line: 647, type: !1140, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9183)
!9183 = !{!9184, !9185, !9186, !9187}
!9184 = !DILocalVariable(name: "dev", arg: 1, scope: !9182, file: !1237, line: 647, type: !1105)
!9185 = !DILocalVariable(name: "callback", arg: 2, scope: !9182, file: !1237, line: 648, type: !1142)
!9186 = !DILocalVariable(name: "set", arg: 3, scope: !9182, file: !1237, line: 649, type: !360)
!9187 = !DILocalVariable(name: "data", scope: !9182, file: !1237, line: 651, type: !9145)
!9188 = !DILocation(line: 0, scope: !9182)
!9189 = !DILocation(line: 651, column: 38, scope: !9182)
!9190 = !DILocation(line: 653, column: 37, scope: !9182)
!9191 = !DILocation(line: 653, column: 9, scope: !9182)
!9192 = !DILocation(line: 653, column: 2, scope: !9182)
!9193 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9194, file: !9194, line: 38, type: !9195, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9198)
!9194 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9195 = !DISubroutineType(types: !9196)
!9196 = !{!109, !9197, !1142, !360}
!9197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 32)
!9198 = !{!9199, !9200, !9201}
!9199 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9193, file: !9194, line: 38, type: !9197)
!9200 = !DILocalVariable(name: "callback", arg: 2, scope: !9193, file: !9194, line: 39, type: !1142)
!9201 = !DILocalVariable(name: "set", arg: 3, scope: !9193, file: !9194, line: 40, type: !360)
!9202 = !DILocation(line: 0, scope: !9193)
!9203 = !DILocation(line: 42, column: 2, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9205, file: !9194, line: 42, column: 2)
!9205 = distinct !DILexicalBlock(scope: !9193, file: !9194, line: 42, column: 2)
!9206 = !DILocation(line: 42, column: 2, scope: !9205)
!9207 = !DILocation(line: 42, column: 2, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9204, file: !9194, line: 42, column: 2)
!9209 = !DILocation(line: 43, column: 2, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9211, file: !9194, line: 43, column: 2)
!9211 = distinct !DILexicalBlock(scope: !9193, file: !9194, line: 43, column: 2)
!9212 = !DILocation(line: 43, column: 2, scope: !9211)
!9213 = !DILocation(line: 43, column: 2, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9210, file: !9194, line: 43, column: 2)
!9215 = !DILocation(line: 45, column: 7, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9193, file: !9194, line: 45, column: 6)
!9217 = !DILocation(line: 45, column: 6, scope: !9193)
!9218 = !DILocation(line: 46, column: 56, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9220, file: !9194, line: 46, column: 7)
!9220 = distinct !DILexicalBlock(scope: !9216, file: !9194, line: 45, column: 38)
!9221 = !DILocation(line: 46, column: 8, scope: !9219)
!9222 = !DILocation(line: 46, column: 7, scope: !9220)
!9223 = !DILocation(line: 51, column: 13, scope: !9216)
!9224 = !DILocation(line: 56, column: 43, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9226, file: !9194, line: 55, column: 11)
!9226 = distinct !DILexicalBlock(scope: !9193, file: !9194, line: 55, column: 6)
!9227 = !DILocation(line: 56, column: 3, scope: !9225)
!9228 = !DILocation(line: 57, column: 2, scope: !9225)
!9229 = !DILocation(line: 60, column: 1, scope: !9193)
!9230 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !684, file: !684, line: 261, type: !9231, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9233)
!9231 = !DISubroutineType(types: !9232)
!9232 = !{!360, !9197}
!9233 = !{!9234}
!9234 = !DILocalVariable(name: "list", arg: 1, scope: !9230, file: !684, line: 261, type: !9197)
!9235 = !DILocation(line: 0, scope: !9230)
!9236 = !DILocation(line: 261, column: 1, scope: !9230)
!9237 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !684, file: !684, line: 417, type: !9238, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9240)
!9238 = !DISubroutineType(types: !9239)
!9239 = !{!360, !9197, !1307}
!9240 = !{!9241, !9242, !9243, !9244}
!9241 = !DILocalVariable(name: "list", arg: 1, scope: !9237, file: !684, line: 417, type: !9197)
!9242 = !DILocalVariable(name: "node", arg: 2, scope: !9237, file: !684, line: 417, type: !1307)
!9243 = !DILocalVariable(name: "prev", scope: !9237, file: !684, line: 417, type: !1307)
!9244 = !DILocalVariable(name: "test", scope: !9237, file: !684, line: 417, type: !1307)
!9245 = !DILocation(line: 0, scope: !9237)
!9246 = !DILocation(line: 417, column: 1, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9237, file: !684, line: 417, column: 1)
!9248 = !DILocation(line: 417, column: 1, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9247, file: !684, line: 417, column: 1)
!9250 = !DILocation(line: 417, column: 1, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9252, file: !684, line: 417, column: 1)
!9252 = distinct !DILexicalBlock(scope: !9249, file: !684, line: 417, column: 1)
!9253 = !DILocation(line: 417, column: 1, scope: !9252)
!9254 = distinct !{!9254, !9246, !9246}
!9255 = !DILocation(line: 417, column: 1, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9251, file: !684, line: 417, column: 1)
!9257 = !DILocation(line: 417, column: 1, scope: !9237)
!9258 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !684, file: !684, line: 298, type: !9259, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9261)
!9259 = !DISubroutineType(types: !9260)
!9260 = !{null, !9197, !1307}
!9261 = !{!9262, !9263}
!9262 = !DILocalVariable(name: "list", arg: 1, scope: !9258, file: !684, line: 298, type: !9197)
!9263 = !DILocalVariable(name: "node", arg: 2, scope: !9258, file: !684, line: 298, type: !1307)
!9264 = !DILocation(line: 0, scope: !9258)
!9265 = !DILocation(line: 298, column: 1, scope: !9258)
!9266 = !DILocation(line: 298, column: 1, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9258, file: !684, line: 298, column: 1)
!9268 = !DILocation(line: 298, column: 1, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9267, file: !684, line: 298, column: 1)
!9270 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !684, file: !684, line: 231, type: !9271, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9273)
!9271 = !DISubroutineType(types: !9272)
!9272 = !{!1307, !9197}
!9273 = !{!9274}
!9274 = !DILocalVariable(name: "list", arg: 1, scope: !9270, file: !684, line: 231, type: !9197)
!9275 = !DILocation(line: 0, scope: !9270)
!9276 = !DILocation(line: 233, column: 15, scope: !9270)
!9277 = !DILocation(line: 233, column: 2, scope: !9270)
!9278 = distinct !DISubprogram(name: "z_snode_next_set", scope: !684, file: !684, line: 209, type: !9279, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9281)
!9279 = !DISubroutineType(types: !9280)
!9280 = !{null, !1307, !1307}
!9281 = !{!9282, !9283}
!9282 = !DILocalVariable(name: "parent", arg: 1, scope: !9278, file: !684, line: 209, type: !1307)
!9283 = !DILocalVariable(name: "child", arg: 2, scope: !9278, file: !684, line: 209, type: !1307)
!9284 = !DILocation(line: 0, scope: !9278)
!9285 = !DILocation(line: 211, column: 10, scope: !9278)
!9286 = !DILocation(line: 211, column: 15, scope: !9278)
!9287 = !DILocation(line: 212, column: 1, scope: !9278)
!9288 = distinct !DISubprogram(name: "z_slist_head_set", scope: !684, file: !684, line: 214, type: !9259, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9289)
!9289 = !{!9290, !9291}
!9290 = !DILocalVariable(name: "list", arg: 1, scope: !9288, file: !684, line: 214, type: !9197)
!9291 = !DILocalVariable(name: "node", arg: 2, scope: !9288, file: !684, line: 214, type: !1307)
!9292 = !DILocation(line: 0, scope: !9288)
!9293 = !DILocation(line: 216, column: 8, scope: !9288)
!9294 = !DILocation(line: 216, column: 13, scope: !9288)
!9295 = !DILocation(line: 217, column: 1, scope: !9288)
!9296 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !684, file: !684, line: 243, type: !9271, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9297)
!9297 = !{!9298}
!9298 = !DILocalVariable(name: "list", arg: 1, scope: !9296, file: !684, line: 243, type: !9197)
!9299 = !DILocation(line: 0, scope: !9296)
!9300 = !DILocation(line: 245, column: 15, scope: !9296)
!9301 = !DILocation(line: 245, column: 2, scope: !9296)
!9302 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !684, file: !684, line: 219, type: !9259, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9303)
!9303 = !{!9304, !9305}
!9304 = !DILocalVariable(name: "list", arg: 1, scope: !9302, file: !684, line: 219, type: !9197)
!9305 = !DILocalVariable(name: "node", arg: 2, scope: !9302, file: !684, line: 219, type: !1307)
!9306 = !DILocation(line: 0, scope: !9302)
!9307 = !DILocation(line: 221, column: 8, scope: !9302)
!9308 = !DILocation(line: 221, column: 13, scope: !9302)
!9309 = !DILocation(line: 222, column: 1, scope: !9302)
!9310 = distinct !DISubprogram(name: "sys_slist_remove", scope: !684, file: !684, line: 401, type: !9311, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9313)
!9311 = !DISubroutineType(types: !9312)
!9312 = !{null, !9197, !1307, !1307}
!9313 = !{!9314, !9315, !9316}
!9314 = !DILocalVariable(name: "list", arg: 1, scope: !9310, file: !684, line: 401, type: !9197)
!9315 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9310, file: !684, line: 401, type: !1307)
!9316 = !DILocalVariable(name: "node", arg: 3, scope: !9310, file: !684, line: 401, type: !1307)
!9317 = !DILocation(line: 0, scope: !9310)
!9318 = !DILocation(line: 401, column: 1, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9310, file: !684, line: 401, column: 1)
!9320 = !DILocation(line: 0, scope: !9319)
!9321 = !DILocation(line: 401, column: 1, scope: !9310)
!9322 = !DILocation(line: 401, column: 1, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9319, file: !684, line: 401, column: 1)
!9324 = !DILocation(line: 401, column: 1, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9323, file: !684, line: 401, column: 1)
!9326 = !DILocation(line: 401, column: 1, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9325, file: !684, line: 401, column: 1)
!9328 = !DILocation(line: 401, column: 1, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9319, file: !684, line: 401, column: 1)
!9330 = !DILocation(line: 401, column: 1, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9329, file: !684, line: 401, column: 1)
!9332 = !DILocation(line: 401, column: 1, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9331, file: !684, line: 401, column: 1)
!9334 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !684, file: !684, line: 285, type: !9335, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9337)
!9335 = !DISubroutineType(types: !9336)
!9336 = !{!1307, !1307}
!9337 = !{!9338}
!9338 = !DILocalVariable(name: "node", arg: 1, scope: !9334, file: !684, line: 285, type: !1307)
!9339 = !DILocation(line: 0, scope: !9334)
!9340 = !DILocation(line: 285, column: 1, scope: !9334)
!9341 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !684, file: !684, line: 274, type: !9335, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9342)
!9342 = !{!9343}
!9343 = !DILocalVariable(name: "node", arg: 1, scope: !9341, file: !684, line: 274, type: !1307)
!9344 = !DILocation(line: 0, scope: !9341)
!9345 = !DILocation(line: 274, column: 1, scope: !9341)
!9346 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !684, file: !684, line: 204, type: !9335, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9347)
!9347 = !{!9348}
!9348 = !DILocalVariable(name: "node", arg: 1, scope: !9346, file: !684, line: 204, type: !1307)
!9349 = !DILocation(line: 0, scope: !9346)
!9350 = !DILocation(line: 206, column: 15, scope: !9346)
!9351 = !DILocation(line: 206, column: 2, scope: !9346)
!9352 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1237, file: !1237, line: 342, type: !303, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9353)
!9353 = !{!9354, !9355, !9356}
!9354 = !DILocalVariable(name: "pin", arg: 1, scope: !9352, file: !1237, line: 342, type: !109)
!9355 = !DILocalVariable(name: "line", scope: !9352, file: !1237, line: 344, type: !110)
!9356 = !DILocalVariable(name: "port", scope: !9352, file: !1237, line: 345, type: !109)
!9357 = !DILocation(line: 0, scope: !9352)
!9358 = !DILocation(line: 344, column: 18, scope: !9352)
!9359 = !{i32 983040, i32 0}
!9360 = !DILocation(line: 356, column: 9, scope: !9352)
!9361 = !DILocation(line: 370, column: 2, scope: !9352)
!9362 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1237, file: !1237, line: 37, type: !837, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9363)
!9363 = !{!9364, !9365, !9366}
!9364 = !DILocalVariable(name: "line", arg: 1, scope: !9362, file: !1237, line: 37, type: !109)
!9365 = !DILocalVariable(name: "arg", arg: 2, scope: !9362, file: !1237, line: 37, type: !107)
!9366 = !DILocalVariable(name: "data", scope: !9362, file: !1237, line: 39, type: !9145)
!9367 = !DILocation(line: 0, scope: !9362)
!9368 = !DILocation(line: 41, column: 29, scope: !9362)
!9369 = !DILocation(line: 41, column: 39, scope: !9362)
!9370 = !DILocation(line: 41, column: 44, scope: !9362)
!9371 = !DILocation(line: 41, column: 2, scope: !9362)
!9372 = !DILocation(line: 42, column: 1, scope: !9362)
!9373 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1237, file: !1237, line: 376, type: !9374, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9376)
!9374 = !DISubroutineType(types: !9375)
!9375 = !{!109, !109, !109}
!9376 = !{!9377, !9378, !9379, !9381, !9382}
!9377 = !DILocalVariable(name: "port", arg: 1, scope: !9373, file: !1237, line: 376, type: !109)
!9378 = !DILocalVariable(name: "pin", arg: 2, scope: !9373, file: !1237, line: 376, type: !109)
!9379 = !DILocalVariable(name: "clk", scope: !9373, file: !1237, line: 386, type: !9380)
!9380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!9381 = !DILocalVariable(name: "pclken", scope: !9373, file: !1237, line: 387, type: !1342)
!9382 = !DILocalVariable(name: "ret", scope: !9373, file: !1237, line: 396, type: !109)
!9383 = !DILocation(line: 0, scope: !9373)
!9384 = !DILocation(line: 387, column: 2, scope: !9373)
!9385 = !DILocation(line: 387, column: 22, scope: !9373)
!9386 = !DILocation(line: 399, column: 8, scope: !9373)
!9387 = !DILocation(line: 400, column: 10, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9373, file: !1237, line: 400, column: 6)
!9389 = !DILocation(line: 400, column: 6, scope: !9373)
!9390 = !DILocation(line: 405, column: 2, scope: !9373)
!9391 = !DILocation(line: 407, column: 2, scope: !9373)
!9392 = !DILocation(line: 408, column: 1, scope: !9373)
!9393 = distinct !DISubprogram(name: "clock_control_on", scope: !914, file: !914, line: 123, type: !1202, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9394)
!9394 = !{!9395, !9396, !9397}
!9395 = !DILocalVariable(name: "dev", arg: 1, scope: !9393, file: !914, line: 123, type: !1105)
!9396 = !DILocalVariable(name: "sys", arg: 2, scope: !9393, file: !914, line: 124, type: !987)
!9397 = !DILocalVariable(name: "api", scope: !9393, file: !914, line: 126, type: !1195)
!9398 = !DILocation(line: 0, scope: !9393)
!9399 = !DILocation(line: 127, column: 49, scope: !9393)
!9400 = !DILocation(line: 129, column: 14, scope: !9393)
!9401 = !DILocation(line: 129, column: 9, scope: !9393)
!9402 = !DILocation(line: 129, column: 2, scope: !9393)
!9403 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1237, file: !1237, line: 311, type: !8552, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9404)
!9404 = !{!9405, !9406, !9407}
!9405 = !DILocalVariable(name: "port", arg: 1, scope: !9403, file: !1237, line: 311, type: !109)
!9406 = !DILocalVariable(name: "pin", arg: 2, scope: !9403, file: !1237, line: 311, type: !109)
!9407 = !DILocalVariable(name: "line", scope: !9403, file: !1237, line: 313, type: !110)
!9408 = !DILocation(line: 0, scope: !9403)
!9409 = !DILocation(line: 313, column: 18, scope: !9403)
!9410 = !DILocation(line: 337, column: 2, scope: !9403)
!9411 = !DILocation(line: 340, column: 1, scope: !9403)
!9412 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1237, file: !1237, line: 295, type: !9413, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9415)
!9413 = !DISubroutineType(types: !9414)
!9414 = !{!110, !109}
!9415 = !{!9416}
!9416 = !DILocalVariable(name: "pin", arg: 1, scope: !9412, file: !1237, line: 295, type: !109)
!9417 = !DILocation(line: 0, scope: !9412)
!9418 = !DILocation(line: 307, column: 46, scope: !9412)
!9419 = !DILocation(line: 307, column: 27, scope: !9412)
!9420 = !DILocation(line: 307, column: 32, scope: !9412)
!9421 = !DILocation(line: 307, column: 14, scope: !9412)
!9422 = !DILocation(line: 307, column: 39, scope: !9412)
!9423 = !DILocation(line: 307, column: 2, scope: !9412)
!9424 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !9425, file: !9425, line: 621, type: !9426, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9428)
!9425 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9426 = !DISubroutineType(types: !9427)
!9427 = !{null, !110, !110}
!9428 = !{!9429, !9430}
!9429 = !DILocalVariable(name: "Port", arg: 1, scope: !9424, file: !9425, line: 621, type: !110)
!9430 = !DILocalVariable(name: "Line", arg: 2, scope: !9424, file: !9425, line: 621, type: !110)
!9431 = !DILocation(line: 0, scope: !9424)
!9432 = !DILocation(line: 623, column: 3, scope: !9424)
!9433 = !DILocalVariable(name: "value", arg: 1, scope: !9434, file: !6388, line: 373, type: !110)
!9434 = distinct !DISubprogram(name: "__RBIT", scope: !6388, file: !6388, line: 373, type: !7634, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9435)
!9435 = !{!9433, !9436}
!9436 = !DILocalVariable(name: "result", scope: !9434, file: !6388, line: 375, type: !110)
!9437 = !DILocation(line: 0, scope: !9434, inlinedAt: !9438)
!9438 = distinct !DILocation(line: 623, column: 3, scope: !9424)
!9439 = !DILocation(line: 380, column: 4, scope: !9434, inlinedAt: !9438)
!9440 = !{i64 2452400}
!9441 = !DILocalVariable(name: "value", arg: 1, scope: !9442, file: !6388, line: 403, type: !110)
!9442 = distinct !DISubprogram(name: "__CLZ", scope: !6388, file: !6388, line: 403, type: !9443, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9445)
!9443 = !DISubroutineType(types: !9444)
!9444 = !{!178, !110}
!9445 = !{!9441}
!9446 = !DILocation(line: 0, scope: !9442, inlinedAt: !9447)
!9447 = distinct !DILocation(line: 623, column: 3, scope: !9424)
!9448 = !DILocation(line: 414, column: 7, scope: !9442, inlinedAt: !9447)
!9449 = !DILocation(line: 624, column: 1, scope: !9424)
!9450 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9194, file: !9194, line: 69, type: !9451, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9453)
!9451 = !DISubroutineType(types: !9452)
!9452 = !{null, !9197, !1105, !110}
!9453 = !{!9454, !9455, !9456, !9457, !9458}
!9454 = !DILocalVariable(name: "list", arg: 1, scope: !9450, file: !9194, line: 69, type: !9197)
!9455 = !DILocalVariable(name: "port", arg: 2, scope: !9450, file: !9194, line: 70, type: !1105)
!9456 = !DILocalVariable(name: "pins", arg: 3, scope: !9450, file: !9194, line: 71, type: !110)
!9457 = !DILocalVariable(name: "cb", scope: !9450, file: !9194, line: 73, type: !1142)
!9458 = !DILocalVariable(name: "tmp", scope: !9450, file: !9194, line: 73, type: !1142)
!9459 = !DILocation(line: 0, scope: !9450)
!9460 = !DILocation(line: 75, column: 2, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9450, file: !9194, line: 75, column: 2)
!9462 = !DILocation(line: 0, scope: !9461)
!9463 = !DILocation(line: 76, column: 11, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9465, file: !9194, line: 76, column: 7)
!9465 = distinct !DILexicalBlock(scope: !9466, file: !9194, line: 75, column: 57)
!9466 = distinct !DILexicalBlock(scope: !9461, file: !9194, line: 75, column: 2)
!9467 = !DILocation(line: 76, column: 20, scope: !9464)
!9468 = !DILocation(line: 76, column: 7, scope: !9465)
!9469 = !DILocation(line: 77, column: 4, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9471, file: !9194, line: 77, column: 4)
!9471 = distinct !DILexicalBlock(scope: !9472, file: !9194, line: 77, column: 4)
!9472 = distinct !DILexicalBlock(scope: !9464, file: !9194, line: 76, column: 28)
!9473 = !DILocation(line: 77, column: 4, scope: !9471)
!9474 = !DILocation(line: 77, column: 4, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9470, file: !9194, line: 77, column: 4)
!9476 = !DILocation(line: 78, column: 4, scope: !9472)
!9477 = !DILocation(line: 79, column: 3, scope: !9472)
!9478 = !DILocation(line: 75, column: 2, scope: !9466)
!9479 = !DILocation(line: 81, column: 1, scope: !9450)
!9480 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !9425, file: !9425, line: 721, type: !7634, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9481)
!9481 = !{!9482}
!9482 = !DILocalVariable(name: "Line", arg: 1, scope: !9480, file: !9425, line: 721, type: !110)
!9483 = !DILocation(line: 0, scope: !9480)
!9484 = !DILocation(line: 723, column: 21, scope: !9480)
!9485 = !DILocation(line: 0, scope: !9434, inlinedAt: !9486)
!9486 = distinct !DILocation(line: 723, column: 76, scope: !9480)
!9487 = !DILocation(line: 380, column: 4, scope: !9434, inlinedAt: !9486)
!9488 = !DILocation(line: 0, scope: !9442, inlinedAt: !9489)
!9489 = distinct !DILocation(line: 723, column: 76, scope: !9480)
!9490 = !DILocation(line: 414, column: 7, scope: !9442, inlinedAt: !9489)
!9491 = !DILocation(line: 723, column: 73, scope: !9480)
!9492 = !DILocation(line: 723, column: 3, scope: !9480)
!9493 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9494, file: !9494, line: 913, type: !9495, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9497)
!9494 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9495 = !DISubroutineType(types: !9496)
!9496 = !{null, !1172, !110}
!9497 = !{!9498, !9499}
!9498 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9493, file: !9494, line: 913, type: !1172)
!9499 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9493, file: !9494, line: 913, type: !110)
!9500 = !DILocation(line: 0, scope: !9493)
!9501 = !DILocation(line: 918, column: 3, scope: !9493)
!9502 = !DILocation(line: 920, column: 1, scope: !9493)
!9503 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9494, file: !9494, line: 825, type: !9504, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9506)
!9504 = !DISubroutineType(types: !9505)
!9505 = !{!110, !1172}
!9506 = !{!9507}
!9507 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9503, file: !9494, line: 825, type: !1172)
!9508 = !DILocation(line: 0, scope: !9503)
!9509 = !DILocation(line: 827, column: 21, scope: !9503)
!9510 = !DILocation(line: 827, column: 3, scope: !9503)
!9511 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9494, file: !9494, line: 814, type: !9495, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9512)
!9512 = !{!9513, !9514}
!9513 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9511, file: !9494, line: 814, type: !1172)
!9514 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9511, file: !9494, line: 814, type: !110)
!9515 = !DILocation(line: 0, scope: !9511)
!9516 = !DILocation(line: 816, column: 3, scope: !9511)
!9517 = !DILocation(line: 817, column: 1, scope: !9511)
!9518 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9494, file: !9494, line: 773, type: !9504, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9519)
!9519 = !{!9520}
!9520 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9518, file: !9494, line: 773, type: !1172)
!9521 = !DILocation(line: 0, scope: !9518)
!9522 = !DILocation(line: 775, column: 21, scope: !9518)
!9523 = !DILocation(line: 775, column: 3, scope: !9518)
!9524 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1237, file: !1237, line: 47, type: !9525, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9527)
!9525 = !DISubroutineType(types: !9526)
!9526 = !{!109, !653, !281}
!9527 = !{!9528, !9529}
!9528 = !DILocalVariable(name: "flags", arg: 1, scope: !9524, file: !1237, line: 47, type: !653)
!9529 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9524, file: !1237, line: 47, type: !281)
!9530 = !DILocation(line: 0, scope: !9524)
!9531 = !DILocation(line: 50, column: 13, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9524, file: !1237, line: 50, column: 6)
!9533 = !DILocation(line: 50, column: 28, scope: !9532)
!9534 = !DILocation(line: 50, column: 6, scope: !9524)
!9535 = !DILocation(line: 53, column: 11, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9532, file: !1237, line: 50, column: 34)
!9537 = !DILocation(line: 55, column: 14, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9536, file: !1237, line: 55, column: 7)
!9539 = !DILocation(line: 55, column: 35, scope: !9538)
!9540 = !DILocation(line: 55, column: 7, scope: !9536)
!9541 = !DILocation(line: 56, column: 14, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9543, file: !1237, line: 56, column: 8)
!9543 = distinct !DILexicalBlock(scope: !9538, file: !1237, line: 55, column: 41)
!9544 = !DILocation(line: 56, column: 8, scope: !9543)
!9545 = !DILocation(line: 0, scope: !9538)
!9546 = !DILocation(line: 66, column: 14, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9536, file: !1237, line: 66, column: 7)
!9548 = !DILocation(line: 66, column: 30, scope: !9547)
!9549 = !DILocation(line: 66, column: 7, scope: !9536)
!9550 = !DILocation(line: 67, column: 12, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9547, file: !1237, line: 66, column: 36)
!9552 = !DILocation(line: 68, column: 3, scope: !9551)
!9553 = !DILocation(line: 68, column: 21, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9547, file: !1237, line: 68, column: 14)
!9555 = !DILocation(line: 68, column: 39, scope: !9554)
!9556 = !DILocation(line: 68, column: 14, scope: !9547)
!9557 = !DILocation(line: 69, column: 12, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9554, file: !1237, line: 68, column: 45)
!9559 = !DILocation(line: 70, column: 3, scope: !9558)
!9560 = !DILocation(line: 72, column: 21, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9532, file: !1237, line: 72, column: 14)
!9562 = !DILocation(line: 72, column: 35, scope: !9561)
!9563 = !DILocation(line: 72, column: 14, scope: !9532)
!9564 = !DILocation(line: 77, column: 14, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9566, file: !1237, line: 77, column: 7)
!9566 = distinct !DILexicalBlock(scope: !9561, file: !1237, line: 72, column: 41)
!9567 = !DILocation(line: 77, column: 30, scope: !9565)
!9568 = !DILocation(line: 77, column: 7, scope: !9566)
!9569 = !DILocation(line: 0, scope: !9532)
!9570 = !DILocation(line: 90, column: 1, scope: !9524)
!9571 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1237, file: !1237, line: 157, type: !9572, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9574)
!9572 = !DISubroutineType(types: !9573)
!9573 = !{null, !1105, !109, !109, !109}
!9574 = !{!9575, !9576, !9577, !9578, !9579, !9580, !9581, !9582, !9583, !9584, !9585}
!9575 = !DILocalVariable(name: "dev", arg: 1, scope: !9571, file: !1237, line: 157, type: !1105)
!9576 = !DILocalVariable(name: "pin", arg: 2, scope: !9571, file: !1237, line: 157, type: !109)
!9577 = !DILocalVariable(name: "conf", arg: 3, scope: !9571, file: !1237, line: 158, type: !109)
!9578 = !DILocalVariable(name: "func", arg: 4, scope: !9571, file: !1237, line: 158, type: !109)
!9579 = !DILocalVariable(name: "cfg", scope: !9571, file: !1237, line: 160, type: !9078)
!9580 = !DILocalVariable(name: "gpio", scope: !9571, file: !1237, line: 161, type: !1172)
!9581 = !DILocalVariable(name: "pin_ll", scope: !9571, file: !1237, line: 163, type: !109)
!9582 = !DILocalVariable(name: "mode", scope: !9571, file: !1237, line: 227, type: !32)
!9583 = !DILocalVariable(name: "otype", scope: !9571, file: !1237, line: 227, type: !32)
!9584 = !DILocalVariable(name: "ospeed", scope: !9571, file: !1237, line: 227, type: !32)
!9585 = !DILocalVariable(name: "pupd", scope: !9571, file: !1237, line: 227, type: !32)
!9586 = !DILocation(line: 0, scope: !9571)
!9587 = !DILocation(line: 160, column: 45, scope: !9571)
!9588 = !DILocation(line: 161, column: 44, scope: !9571)
!9589 = !DILocation(line: 163, column: 15, scope: !9571)
!9590 = !DILocation(line: 229, column: 14, scope: !9571)
!9591 = !DILocation(line: 246, column: 47, scope: !9571)
!9592 = !DILocation(line: 246, column: 2, scope: !9571)
!9593 = !DILocation(line: 248, column: 43, scope: !9571)
!9594 = !DILocation(line: 248, column: 2, scope: !9571)
!9595 = !DILocation(line: 250, column: 40, scope: !9571)
!9596 = !DILocation(line: 250, column: 2, scope: !9571)
!9597 = !DILocation(line: 252, column: 11, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9571, file: !1237, line: 252, column: 6)
!9599 = !DILocation(line: 252, column: 6, scope: !9571)
!9600 = !DILocation(line: 253, column: 11, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9602, file: !1237, line: 253, column: 7)
!9602 = distinct !DILexicalBlock(scope: !9598, file: !1237, line: 252, column: 36)
!9603 = !DILocation(line: 253, column: 7, scope: !9602)
!9604 = !DILocation(line: 254, column: 4, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9601, file: !1237, line: 253, column: 16)
!9606 = !DILocation(line: 255, column: 3, scope: !9605)
!9607 = !DILocation(line: 256, column: 4, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9601, file: !1237, line: 255, column: 10)
!9609 = !DILocation(line: 260, column: 40, scope: !9571)
!9610 = !DILocation(line: 260, column: 2, scope: !9571)
!9611 = !DILocation(line: 265, column: 1, scope: !9571)
!9612 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1237, file: !1237, line: 137, type: !9413, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9613)
!9613 = !{!9614, !9615}
!9614 = !DILocalVariable(name: "pin", arg: 1, scope: !9612, file: !1237, line: 137, type: !109)
!9615 = !DILocalVariable(name: "pinval", scope: !9612, file: !1237, line: 139, type: !110)
!9616 = !DILocation(line: 0, scope: !9612)
!9617 = !DILocation(line: 149, column: 13, scope: !9612)
!9618 = !DILocation(line: 151, column: 2, scope: !9612)
!9619 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9494, file: !9494, line: 343, type: !9620, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9622)
!9620 = !DISubroutineType(types: !9621)
!9621 = !{null, !1172, !110, !110}
!9622 = !{!9623, !9624, !9625}
!9623 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9619, file: !9494, line: 343, type: !1172)
!9624 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9619, file: !9494, line: 343, type: !110)
!9625 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9619, file: !9494, line: 343, type: !110)
!9626 = !DILocation(line: 0, scope: !9619)
!9627 = !DILocation(line: 345, column: 3, scope: !9619)
!9628 = !DILocation(line: 346, column: 1, scope: !9619)
!9629 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9494, file: !9494, line: 414, type: !9620, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9630)
!9630 = !{!9631, !9632, !9633}
!9631 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9629, file: !9494, line: 414, type: !1172)
!9632 = !DILocalVariable(name: "Pin", arg: 2, scope: !9629, file: !9494, line: 414, type: !110)
!9633 = !DILocalVariable(name: "Speed", arg: 3, scope: !9629, file: !9494, line: 414, type: !110)
!9634 = !DILocation(line: 0, scope: !9629)
!9635 = !DILocation(line: 416, column: 3, scope: !9629)
!9636 = !DILocation(line: 0, scope: !9434, inlinedAt: !9637)
!9637 = distinct !DILocation(line: 416, column: 3, scope: !9629)
!9638 = !DILocation(line: 380, column: 4, scope: !9434, inlinedAt: !9637)
!9639 = !DILocation(line: 0, scope: !9442, inlinedAt: !9640)
!9640 = distinct !DILocation(line: 416, column: 3, scope: !9629)
!9641 = !DILocation(line: 414, column: 7, scope: !9442, inlinedAt: !9640)
!9642 = !DILocation(line: 0, scope: !9434, inlinedAt: !9643)
!9643 = distinct !DILocation(line: 416, column: 3, scope: !9629)
!9644 = !DILocation(line: 0, scope: !9442, inlinedAt: !9645)
!9645 = distinct !DILocation(line: 416, column: 3, scope: !9629)
!9646 = !DILocation(line: 418, column: 1, scope: !9629)
!9647 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9494, file: !9494, line: 485, type: !9620, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9648)
!9648 = !{!9649, !9650, !9651}
!9649 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9647, file: !9494, line: 485, type: !1172)
!9650 = !DILocalVariable(name: "Pin", arg: 2, scope: !9647, file: !9494, line: 485, type: !110)
!9651 = !DILocalVariable(name: "Pull", arg: 3, scope: !9647, file: !9494, line: 485, type: !110)
!9652 = !DILocation(line: 0, scope: !9647)
!9653 = !DILocation(line: 487, column: 3, scope: !9647)
!9654 = !DILocation(line: 0, scope: !9434, inlinedAt: !9655)
!9655 = distinct !DILocation(line: 487, column: 3, scope: !9647)
!9656 = !DILocation(line: 380, column: 4, scope: !9434, inlinedAt: !9655)
!9657 = !DILocation(line: 0, scope: !9442, inlinedAt: !9658)
!9658 = distinct !DILocation(line: 487, column: 3, scope: !9647)
!9659 = !DILocation(line: 414, column: 7, scope: !9442, inlinedAt: !9658)
!9660 = !DILocation(line: 0, scope: !9434, inlinedAt: !9661)
!9661 = distinct !DILocation(line: 487, column: 3, scope: !9647)
!9662 = !DILocation(line: 0, scope: !9442, inlinedAt: !9663)
!9663 = distinct !DILocation(line: 487, column: 3, scope: !9647)
!9664 = !DILocation(line: 488, column: 1, scope: !9647)
!9665 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9494, file: !9494, line: 557, type: !9620, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9666)
!9666 = !{!9667, !9668, !9669}
!9667 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9665, file: !9494, line: 557, type: !1172)
!9668 = !DILocalVariable(name: "Pin", arg: 2, scope: !9665, file: !9494, line: 557, type: !110)
!9669 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9665, file: !9494, line: 557, type: !110)
!9670 = !DILocation(line: 0, scope: !9665)
!9671 = !DILocation(line: 559, column: 3, scope: !9665)
!9672 = !DILocation(line: 0, scope: !9434, inlinedAt: !9673)
!9673 = distinct !DILocation(line: 559, column: 3, scope: !9665)
!9674 = !DILocation(line: 380, column: 4, scope: !9434, inlinedAt: !9673)
!9675 = !DILocation(line: 0, scope: !9442, inlinedAt: !9676)
!9676 = distinct !DILocation(line: 559, column: 3, scope: !9665)
!9677 = !DILocation(line: 414, column: 7, scope: !9442, inlinedAt: !9676)
!9678 = !DILocation(line: 0, scope: !9434, inlinedAt: !9679)
!9679 = distinct !DILocation(line: 559, column: 3, scope: !9665)
!9680 = !DILocation(line: 0, scope: !9442, inlinedAt: !9681)
!9681 = distinct !DILocation(line: 559, column: 3, scope: !9665)
!9682 = !DILocation(line: 561, column: 1, scope: !9665)
!9683 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9494, file: !9494, line: 634, type: !9620, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9684)
!9684 = !{!9685, !9686, !9687}
!9685 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9683, file: !9494, line: 634, type: !1172)
!9686 = !DILocalVariable(name: "Pin", arg: 2, scope: !9683, file: !9494, line: 634, type: !110)
!9687 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9683, file: !9494, line: 634, type: !110)
!9688 = !DILocation(line: 0, scope: !9683)
!9689 = !DILocation(line: 636, column: 3, scope: !9683)
!9690 = !DILocation(line: 0, scope: !9434, inlinedAt: !9691)
!9691 = distinct !DILocation(line: 636, column: 3, scope: !9683)
!9692 = !DILocation(line: 380, column: 4, scope: !9434, inlinedAt: !9691)
!9693 = !DILocation(line: 0, scope: !9442, inlinedAt: !9694)
!9694 = distinct !DILocation(line: 636, column: 3, scope: !9683)
!9695 = !DILocation(line: 414, column: 7, scope: !9442, inlinedAt: !9694)
!9696 = !DILocation(line: 0, scope: !9434, inlinedAt: !9697)
!9697 = distinct !DILocation(line: 636, column: 3, scope: !9683)
!9698 = !DILocation(line: 0, scope: !9442, inlinedAt: !9699)
!9699 = distinct !DILocation(line: 636, column: 3, scope: !9683)
!9700 = !DILocation(line: 638, column: 1, scope: !9683)
!9701 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9494, file: !9494, line: 274, type: !9620, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9702)
!9702 = !{!9703, !9704, !9705}
!9703 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9701, file: !9494, line: 274, type: !1172)
!9704 = !DILocalVariable(name: "Pin", arg: 2, scope: !9701, file: !9494, line: 274, type: !110)
!9705 = !DILocalVariable(name: "Mode", arg: 3, scope: !9701, file: !9494, line: 274, type: !110)
!9706 = !DILocation(line: 0, scope: !9701)
!9707 = !DILocation(line: 276, column: 3, scope: !9701)
!9708 = !DILocation(line: 0, scope: !9434, inlinedAt: !9709)
!9709 = distinct !DILocation(line: 276, column: 3, scope: !9701)
!9710 = !DILocation(line: 380, column: 4, scope: !9434, inlinedAt: !9709)
!9711 = !DILocation(line: 0, scope: !9442, inlinedAt: !9712)
!9712 = distinct !DILocation(line: 276, column: 3, scope: !9701)
!9713 = !DILocation(line: 414, column: 7, scope: !9442, inlinedAt: !9712)
!9714 = !DILocation(line: 0, scope: !9434, inlinedAt: !9715)
!9715 = distinct !DILocation(line: 276, column: 3, scope: !9701)
!9716 = !DILocation(line: 0, scope: !9442, inlinedAt: !9717)
!9717 = distinct !DILocation(line: 276, column: 3, scope: !9701)
!9718 = !DILocation(line: 277, column: 1, scope: !9701)
!9719 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1237, file: !1237, line: 698, type: !1250, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9720)
!9720 = !{!9721, !9722, !9723}
!9721 = !DILocalVariable(name: "dev", arg: 1, scope: !9719, file: !1237, line: 698, type: !1105)
!9722 = !DILocalVariable(name: "data", scope: !9719, file: !1237, line: 700, type: !9145)
!9723 = !DILocalVariable(name: "ret", scope: !9719, file: !1237, line: 701, type: !109)
!9724 = !DILocation(line: 0, scope: !9719)
!9725 = !DILocation(line: 700, column: 38, scope: !9719)
!9726 = !DILocation(line: 703, column: 8, scope: !9719)
!9727 = !DILocation(line: 703, column: 12, scope: !9719)
!9728 = !DILocation(line: 705, column: 7, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9719, file: !1237, line: 705, column: 6)
!9730 = !DILocation(line: 705, column: 6, scope: !9719)
!9731 = !DILocation(line: 722, column: 8, scope: !9719)
!9732 = !DILocation(line: 723, column: 10, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9719, file: !1237, line: 723, column: 6)
!9734 = !DILocation(line: 723, column: 6, scope: !9719)
!9735 = !DILocation(line: 731, column: 1, scope: !9719)
!9736 = distinct !DISubprogram(name: "device_is_ready", scope: !8272, file: !8272, line: 47, type: !9737, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9739)
!9737 = !DISubroutineType(types: !9738)
!9738 = !{!360, !1105}
!9739 = !{!9740}
!9740 = !DILocalVariable(name: "dev", arg: 1, scope: !9736, file: !8272, line: 47, type: !1105)
!9741 = !DILocation(line: 0, scope: !9736)
!9742 = !DILocation(line: 55, column: 2, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9736, file: !8272, line: 55, column: 2)
!9744 = !{i64 2152415690}
!9745 = !DILocation(line: 56, column: 9, scope: !9736)
!9746 = !DILocation(line: 56, column: 2, scope: !9736)
!9747 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1237, file: !1237, line: 270, type: !9748, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9750)
!9748 = !DISubroutineType(types: !9749)
!9749 = !{!109, !1105, !360}
!9750 = !{!9751, !9752, !9753, !9754, !9755}
!9751 = !DILocalVariable(name: "dev", arg: 1, scope: !9747, file: !1237, line: 270, type: !1105)
!9752 = !DILocalVariable(name: "on", arg: 2, scope: !9747, file: !1237, line: 270, type: !360)
!9753 = !DILocalVariable(name: "cfg", scope: !9747, file: !1237, line: 272, type: !9078)
!9754 = !DILocalVariable(name: "ret", scope: !9747, file: !1237, line: 273, type: !109)
!9755 = !DILocalVariable(name: "clk", scope: !9747, file: !1237, line: 278, type: !9380)
!9756 = !DILocation(line: 0, scope: !9747)
!9757 = !DILocation(line: 272, column: 45, scope: !9747)
!9758 = !DILocation(line: 282, column: 38, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9760, file: !1237, line: 280, column: 10)
!9760 = distinct !DILexicalBlock(scope: !9747, file: !1237, line: 280, column: 6)
!9761 = !DILocation(line: 282, column: 6, scope: !9759)
!9762 = !DILocation(line: 281, column: 9, scope: !9759)
!9763 = !DILocation(line: 293, column: 1, scope: !9747)
!9764 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !349, file: !349, line: 730, type: !9737, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9765)
!9765 = !{!9766}
!9766 = !DILocalVariable(name: "dev", arg: 1, scope: !9764, file: !349, line: 730, type: !1105)
!9767 = !DILocation(line: 0, scope: !9764)
!9768 = !DILocation(line: 732, column: 9, scope: !9764)
!9769 = !DILocation(line: 732, column: 2, scope: !9764)
!9770 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1237, file: !1237, line: 496, type: !9771, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1087, retainedNodes: !9773)
!9771 = !DISubroutineType(types: !9772)
!9772 = !{!109, !1105, !109, !109, !109}
!9773 = !{!9774, !9775, !9776, !9777, !9778, !9779}
!9774 = !DILocalVariable(name: "dev", arg: 1, scope: !9770, file: !1237, line: 496, type: !1105)
!9775 = !DILocalVariable(name: "pin", arg: 2, scope: !9770, file: !1237, line: 496, type: !109)
!9776 = !DILocalVariable(name: "conf", arg: 3, scope: !9770, file: !1237, line: 496, type: !109)
!9777 = !DILocalVariable(name: "func", arg: 4, scope: !9770, file: !1237, line: 496, type: !109)
!9778 = !DILocalVariable(name: "ret", scope: !9770, file: !1237, line: 498, type: !109)
!9779 = !DILocalVariable(name: "gpio_out", scope: !9780, file: !1237, line: 508, type: !110)
!9780 = distinct !DILexicalBlock(scope: !9781, file: !1237, line: 507, column: 27)
!9781 = distinct !DILexicalBlock(scope: !9770, file: !1237, line: 507, column: 6)
!9782 = !DILocation(line: 0, scope: !9770)
!9783 = !DILocation(line: 505, column: 2, scope: !9770)
!9784 = !DILocation(line: 507, column: 11, scope: !9781)
!9785 = !DILocation(line: 507, column: 6, scope: !9770)
!9786 = !DILocation(line: 508, column: 28, scope: !9780)
!9787 = !DILocation(line: 0, scope: !9780)
!9788 = !DILocation(line: 510, column: 16, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9780, file: !1237, line: 510, column: 7)
!9790 = !DILocation(line: 0, scope: !9789)
!9791 = !DILocation(line: 510, column: 7, scope: !9780)
!9792 = !DILocation(line: 511, column: 4, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9789, file: !1237, line: 510, column: 32)
!9794 = !DILocation(line: 512, column: 3, scope: !9793)
!9795 = !DILocation(line: 513, column: 4, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9797, file: !1237, line: 512, column: 39)
!9797 = distinct !DILexicalBlock(scope: !9789, file: !1237, line: 512, column: 14)
!9798 = !DILocation(line: 514, column: 3, scope: !9796)
!9799 = !DILocation(line: 518, column: 1, scope: !9770)
!9800 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1494, file: !1494, line: 526, type: !1398, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !9801)
!9801 = !{!9802, !9803, !9804}
!9802 = !DILocalVariable(name: "dev", arg: 1, scope: !9800, file: !1494, line: 526, type: !1400)
!9803 = !DILocalVariable(name: "c", arg: 2, scope: !9800, file: !1494, line: 526, type: !1048)
!9804 = !DILocalVariable(name: "config", scope: !9800, file: !1494, line: 528, type: !9805)
!9805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!9806 = !DILocation(line: 0, scope: !9800)
!9807 = !DILocation(line: 528, column: 48, scope: !9800)
!9808 = !DILocation(line: 531, column: 40, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9800, file: !1494, line: 531, column: 6)
!9810 = !DILocation(line: 531, column: 6, scope: !9809)
!9811 = !DILocation(line: 531, column: 6, scope: !9800)
!9812 = !DILocation(line: 532, column: 34, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9809, file: !1494, line: 531, column: 48)
!9814 = !DILocation(line: 532, column: 3, scope: !9813)
!9815 = !DILocation(line: 533, column: 2, scope: !9813)
!9816 = !DILocation(line: 539, column: 42, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9800, file: !1494, line: 539, column: 6)
!9818 = !DILocation(line: 539, column: 7, scope: !9817)
!9819 = !DILocation(line: 539, column: 6, scope: !9800)
!9820 = !DILocation(line: 543, column: 52, scope: !9800)
!9821 = !DILocation(line: 543, column: 22, scope: !9800)
!9822 = !DILocation(line: 543, column: 5, scope: !9800)
!9823 = !DILocation(line: 545, column: 2, scope: !9800)
!9824 = !DILocation(line: 546, column: 1, scope: !9800)
!9825 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1494, file: !1494, line: 548, type: !1417, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !9826)
!9826 = !{!9827, !9828, !9829, !9830}
!9827 = !DILocalVariable(name: "dev", arg: 1, scope: !9825, file: !1494, line: 548, type: !1400)
!9828 = !DILocalVariable(name: "c", arg: 2, scope: !9825, file: !1494, line: 549, type: !179)
!9829 = !DILocalVariable(name: "config", scope: !9825, file: !1494, line: 551, type: !9805)
!9830 = !DILocalVariable(name: "key", scope: !9825, file: !1494, line: 555, type: !32)
!9831 = !DILocation(line: 0, scope: !9825)
!9832 = !DILocation(line: 551, column: 48, scope: !9825)
!9833 = !DILocation(line: 562, column: 2, scope: !9825)
!9834 = !DILocation(line: 563, column: 41, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9836, file: !1494, line: 563, column: 7)
!9836 = distinct !DILexicalBlock(scope: !9825, file: !1494, line: 562, column: 12)
!9837 = !DILocation(line: 563, column: 7, scope: !9835)
!9838 = !DILocation(line: 563, column: 7, scope: !9836)
!9839 = !DILocation(line: 55, column: 2, scope: !9840, inlinedAt: !9844)
!9840 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !6051, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !9841)
!9841 = !{!9842, !9843}
!9842 = !DILocalVariable(name: "key", scope: !9840, file: !6050, line: 44, type: !32)
!9843 = !DILocalVariable(name: "tmp", scope: !9840, file: !6050, line: 53, type: !32)
!9844 = distinct !DILocation(line: 564, column: 10, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9835, file: !1494, line: 563, column: 49)
!9846 = !{i64 1701749}
!9847 = !DILocation(line: 0, scope: !9840, inlinedAt: !9844)
!9848 = !DILocation(line: 565, column: 42, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9845, file: !1494, line: 565, column: 8)
!9850 = !DILocation(line: 565, column: 8, scope: !9849)
!9851 = !DILocation(line: 565, column: 8, scope: !9845)
!9852 = !DILocalVariable(name: "key", arg: 1, scope: !9853, file: !6050, line: 84, type: !32)
!9853 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !6061, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !9854)
!9854 = !{!9852}
!9855 = !DILocation(line: 0, scope: !9853, inlinedAt: !9856)
!9856 = distinct !DILocation(line: 568, column: 4, scope: !9845)
!9857 = !DILocation(line: 95, column: 2, scope: !9853, inlinedAt: !9856)
!9858 = !{i64 1702566}
!9859 = !DILocation(line: 569, column: 3, scope: !9845)
!9860 = distinct !{!9860, !9833, !9861}
!9861 = !DILocation(line: 570, column: 2, scope: !9825)
!9862 = !DILocation(line: 592, column: 33, scope: !9825)
!9863 = !DILocation(line: 592, column: 2, scope: !9825)
!9864 = !DILocation(line: 0, scope: !9853, inlinedAt: !9865)
!9865 = distinct !DILocation(line: 593, column: 2, scope: !9825)
!9866 = !DILocation(line: 95, column: 2, scope: !9853, inlinedAt: !9865)
!9867 = !DILocation(line: 594, column: 1, scope: !9825)
!9868 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1494, file: !1494, line: 596, type: !1421, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !9869)
!9869 = !{!9870, !9871, !9872}
!9870 = !DILocalVariable(name: "dev", arg: 1, scope: !9868, file: !1494, line: 596, type: !1400)
!9871 = !DILocalVariable(name: "config", scope: !9868, file: !1494, line: 598, type: !9805)
!9872 = !DILocalVariable(name: "err", scope: !9868, file: !1494, line: 599, type: !110)
!9873 = !DILocation(line: 0, scope: !9868)
!9874 = !DILocation(line: 598, column: 48, scope: !9868)
!9875 = !DILocation(line: 606, column: 40, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9868, file: !1494, line: 606, column: 6)
!9877 = !DILocation(line: 606, column: 6, scope: !9876)
!9878 = !DILocation(line: 606, column: 6, scope: !9868)
!9879 = !DILocation(line: 610, column: 39, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9868, file: !1494, line: 610, column: 6)
!9881 = !DILocation(line: 610, column: 6, scope: !9880)
!9882 = !DILocation(line: 610, column: 6, scope: !9868)
!9883 = !DILocation(line: 614, column: 39, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9868, file: !1494, line: 614, column: 6)
!9885 = !DILocation(line: 614, column: 6, scope: !9884)
!9886 = !DILocation(line: 614, column: 6, scope: !9868)
!9887 = !DILocation(line: 619, column: 40, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9868, file: !1494, line: 619, column: 6)
!9889 = !DILocation(line: 619, column: 6, scope: !9888)
!9890 = !DILocation(line: 619, column: 6, scope: !9868)
!9891 = !DILocation(line: 623, column: 10, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9868, file: !1494, line: 623, column: 6)
!9893 = !DILocation(line: 623, column: 6, scope: !9868)
!9894 = !DILocation(line: 624, column: 34, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9892, file: !1494, line: 623, column: 24)
!9896 = !DILocation(line: 624, column: 3, scope: !9895)
!9897 = !DILocation(line: 625, column: 2, scope: !9895)
!9898 = !DILocation(line: 632, column: 10, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9868, file: !1494, line: 632, column: 6)
!9900 = !DILocation(line: 632, column: 6, scope: !9868)
!9901 = !DILocation(line: 633, column: 34, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9899, file: !1494, line: 632, column: 32)
!9903 = !DILocation(line: 633, column: 3, scope: !9902)
!9904 = !DILocation(line: 634, column: 2, scope: !9902)
!9905 = !DILocation(line: 636, column: 10, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9868, file: !1494, line: 636, column: 6)
!9907 = !DILocation(line: 636, column: 6, scope: !9868)
!9908 = !DILocation(line: 637, column: 33, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9906, file: !1494, line: 636, column: 31)
!9910 = !DILocation(line: 637, column: 3, scope: !9909)
!9911 = !DILocation(line: 638, column: 2, scope: !9909)
!9912 = !DILocation(line: 640, column: 10, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9868, file: !1494, line: 640, column: 6)
!9914 = !DILocation(line: 640, column: 6, scope: !9868)
!9915 = !DILocation(line: 641, column: 33, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9913, file: !1494, line: 640, column: 32)
!9917 = !DILocation(line: 641, column: 3, scope: !9916)
!9918 = !DILocation(line: 642, column: 2, scope: !9916)
!9919 = !DILocation(line: 646, column: 32, scope: !9868)
!9920 = !DILocation(line: 646, column: 2, scope: !9868)
!9921 = !DILocation(line: 648, column: 2, scope: !9868)
!9922 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1494, file: !1494, line: 419, type: !1425, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !9923)
!9923 = !{!9924, !9925, !9926, !9927, !9929, !9930, !9931, !9932}
!9924 = !DILocalVariable(name: "dev", arg: 1, scope: !9922, file: !1494, line: 419, type: !1400)
!9925 = !DILocalVariable(name: "cfg", arg: 2, scope: !9922, file: !1494, line: 420, type: !1427)
!9926 = !DILocalVariable(name: "config", scope: !9922, file: !1494, line: 422, type: !9805)
!9927 = !DILocalVariable(name: "data", scope: !9922, file: !1494, line: 423, type: !9928)
!9928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!9929 = !DILocalVariable(name: "parity", scope: !9922, file: !1494, line: 424, type: !6640)
!9930 = !DILocalVariable(name: "stopbits", scope: !9922, file: !1494, line: 425, type: !6640)
!9931 = !DILocalVariable(name: "databits", scope: !9922, file: !1494, line: 426, type: !6640)
!9932 = !DILocalVariable(name: "flowctrl", scope: !9922, file: !1494, line: 428, type: !6640)
!9933 = !DILocation(line: 0, scope: !9922)
!9934 = !DILocation(line: 422, column: 48, scope: !9922)
!9935 = !DILocation(line: 423, column: 38, scope: !9922)
!9936 = !DILocation(line: 424, column: 56, scope: !9922)
!9937 = !DILocation(line: 424, column: 51, scope: !9922)
!9938 = !DILocation(line: 424, column: 26, scope: !9922)
!9939 = !DILocation(line: 425, column: 60, scope: !9922)
!9940 = !DILocation(line: 425, column: 55, scope: !9922)
!9941 = !DILocation(line: 425, column: 28, scope: !9922)
!9942 = !DILocation(line: 426, column: 60, scope: !9922)
!9943 = !DILocation(line: 426, column: 55, scope: !9922)
!9944 = !DILocation(line: 426, column: 28, scope: !9922)
!9945 = !DILocation(line: 428, column: 58, scope: !9922)
!9946 = !DILocation(line: 428, column: 53, scope: !9922)
!9947 = !DILocation(line: 428, column: 28, scope: !9922)
!9948 = !DILocation(line: 431, column: 44, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9922, file: !1494, line: 431, column: 6)
!9950 = !DILocation(line: 438, column: 22, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9922, file: !1494, line: 437, column: 6)
!9952 = !DILocation(line: 437, column: 6, scope: !9922)
!9953 = !DILocation(line: 448, column: 6, scope: !9922)
!9954 = !DILocation(line: 465, column: 47, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9922, file: !1494, line: 465, column: 6)
!9956 = !DILocation(line: 475, column: 21, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9922, file: !1494, line: 475, column: 6)
!9958 = !DILocation(line: 475, column: 6, scope: !9922)
!9959 = !DILocation(line: 476, column: 8, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9961, file: !1494, line: 476, column: 7)
!9961 = distinct !DILexicalBlock(scope: !9957, file: !1494, line: 475, column: 49)
!9962 = !DILocation(line: 477, column: 34, scope: !9960)
!9963 = !DILocation(line: 476, column: 7, scope: !9961)
!9964 = !DILocation(line: 482, column: 27, scope: !9922)
!9965 = !DILocation(line: 482, column: 2, scope: !9922)
!9966 = !DILocation(line: 484, column: 16, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9922, file: !1494, line: 484, column: 6)
!9968 = !DILocation(line: 484, column: 13, scope: !9967)
!9969 = !DILocation(line: 484, column: 6, scope: !9922)
!9970 = !DILocation(line: 485, column: 3, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9967, file: !1494, line: 484, column: 44)
!9972 = !DILocation(line: 486, column: 2, scope: !9971)
!9973 = !DILocation(line: 488, column: 18, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9922, file: !1494, line: 488, column: 6)
!9975 = !DILocation(line: 488, column: 15, scope: !9974)
!9976 = !DILocation(line: 488, column: 6, scope: !9922)
!9977 = !DILocation(line: 489, column: 3, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9974, file: !1494, line: 488, column: 48)
!9979 = !DILocation(line: 490, column: 2, scope: !9978)
!9980 = !DILocation(line: 492, column: 18, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9922, file: !1494, line: 492, column: 6)
!9982 = !DILocation(line: 492, column: 15, scope: !9981)
!9983 = !DILocation(line: 492, column: 6, scope: !9922)
!9984 = !DILocation(line: 493, column: 3, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9981, file: !1494, line: 492, column: 48)
!9986 = !DILocation(line: 494, column: 2, scope: !9985)
!9987 = !DILocation(line: 496, column: 18, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9922, file: !1494, line: 496, column: 6)
!9989 = !DILocation(line: 496, column: 15, scope: !9988)
!9990 = !DILocation(line: 496, column: 6, scope: !9922)
!9991 = !DILocation(line: 497, column: 3, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9988, file: !1494, line: 496, column: 46)
!9993 = !DILocation(line: 498, column: 2, scope: !9992)
!9994 = !DILocation(line: 500, column: 11, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9922, file: !1494, line: 500, column: 6)
!9996 = !DILocation(line: 500, column: 29, scope: !9995)
!9997 = !DILocation(line: 500, column: 20, scope: !9995)
!9998 = !DILocation(line: 500, column: 6, scope: !9922)
!9999 = !DILocation(line: 501, column: 3, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9995, file: !1494, line: 500, column: 40)
!10001 = !DILocation(line: 502, column: 26, scope: !10000)
!10002 = !DILocation(line: 502, column: 19, scope: !10000)
!10003 = !DILocation(line: 503, column: 2, scope: !10000)
!10004 = !DILocation(line: 505, column: 26, scope: !9922)
!10005 = !DILocation(line: 505, column: 2, scope: !9922)
!10006 = !DILocation(line: 506, column: 2, scope: !9922)
!10007 = !DILocation(line: 507, column: 1, scope: !9922)
!10008 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1494, file: !1494, line: 509, type: !1438, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10009)
!10009 = !{!10010, !10011, !10012}
!10010 = !DILocalVariable(name: "dev", arg: 1, scope: !10008, file: !1494, line: 509, type: !1400)
!10011 = !DILocalVariable(name: "cfg", arg: 2, scope: !10008, file: !1494, line: 510, type: !1440)
!10012 = !DILocalVariable(name: "data", scope: !10008, file: !1494, line: 512, type: !9928)
!10013 = !DILocation(line: 0, scope: !10008)
!10014 = !DILocation(line: 512, column: 38, scope: !10008)
!10015 = !DILocation(line: 514, column: 24, scope: !10008)
!10016 = !DILocation(line: 514, column: 7, scope: !10008)
!10017 = !DILocation(line: 514, column: 16, scope: !10008)
!10018 = !DILocation(line: 515, column: 41, scope: !10008)
!10019 = !{i32 0, i32 1537}
!10020 = !DILocation(line: 515, column: 16, scope: !10008)
!10021 = !DILocation(line: 515, column: 7, scope: !10008)
!10022 = !DILocation(line: 515, column: 14, scope: !10008)
!10023 = !DILocation(line: 517, column: 3, scope: !10008)
!10024 = !{i32 0, i32 12289}
!10025 = !DILocation(line: 516, column: 19, scope: !10008)
!10026 = !DILocation(line: 516, column: 7, scope: !10008)
!10027 = !DILocation(line: 516, column: 17, scope: !10008)
!10028 = !DILocation(line: 519, column: 3, scope: !10008)
!10029 = !DILocation(line: 519, column: 33, scope: !10008)
!10030 = !DILocation(line: 518, column: 19, scope: !10008)
!10031 = !DILocation(line: 518, column: 7, scope: !10008)
!10032 = !DILocation(line: 518, column: 17, scope: !10008)
!10033 = !DILocation(line: 521, column: 3, scope: !10008)
!10034 = !{i32 0, i32 769}
!10035 = !DILocation(line: 520, column: 19, scope: !10008)
!10036 = !DILocation(line: 520, column: 7, scope: !10008)
!10037 = !DILocation(line: 520, column: 17, scope: !10008)
!10038 = !DILocation(line: 522, column: 2, scope: !10008)
!10039 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1494, file: !1494, line: 205, type: !10040, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10042)
!10040 = !DISubroutineType(types: !10041)
!10041 = !{!110, !1400}
!10042 = !{!10043, !10044}
!10043 = !DILocalVariable(name: "dev", arg: 1, scope: !10039, file: !1494, line: 205, type: !1400)
!10044 = !DILocalVariable(name: "config", scope: !10039, file: !1494, line: 207, type: !9805)
!10045 = !DILocation(line: 0, scope: !10039)
!10046 = !DILocation(line: 207, column: 48, scope: !10039)
!10047 = !DILocation(line: 209, column: 36, scope: !10039)
!10048 = !DILocation(line: 209, column: 9, scope: !10039)
!10049 = !DILocation(line: 209, column: 2, scope: !10039)
!10050 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1494, file: !1494, line: 270, type: !10051, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10053)
!10051 = !DISubroutineType(types: !10052)
!10052 = !{!1366, !110}
!10053 = !{!10054}
!10054 = !DILocalVariable(name: "parity", arg: 1, scope: !10050, file: !1494, line: 270, type: !110)
!10055 = !DILocation(line: 0, scope: !10050)
!10056 = !DILocation(line: 272, column: 2, scope: !10050)
!10057 = !DILocation(line: 281, column: 1, scope: !10050)
!10058 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1494, file: !1494, line: 220, type: !10040, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10059)
!10059 = !{!10060, !10061}
!10060 = !DILocalVariable(name: "dev", arg: 1, scope: !10058, file: !1494, line: 220, type: !1400)
!10061 = !DILocalVariable(name: "config", scope: !10058, file: !1494, line: 222, type: !9805)
!10062 = !DILocation(line: 0, scope: !10058)
!10063 = !DILocation(line: 222, column: 48, scope: !10058)
!10064 = !DILocation(line: 224, column: 44, scope: !10058)
!10065 = !DILocation(line: 224, column: 9, scope: !10058)
!10066 = !DILocation(line: 224, column: 2, scope: !10058)
!10067 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1494, file: !1494, line: 304, type: !10068, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10070)
!10068 = !DISubroutineType(types: !10069)
!10069 = !{!1380, !110}
!10070 = !{!10071}
!10071 = !DILocalVariable(name: "sb", arg: 1, scope: !10067, file: !1494, line: 304, type: !110)
!10072 = !DILocation(line: 0, scope: !10067)
!10073 = !DILocation(line: 306, column: 2, scope: !10067)
!10074 = !DILocation(line: 0, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10067, file: !1494, line: 306, column: 14)
!10076 = !DILocation(line: 323, column: 1, scope: !10067)
!10077 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1494, file: !1494, line: 235, type: !10040, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10078)
!10078 = !{!10079, !10080}
!10079 = !DILocalVariable(name: "dev", arg: 1, scope: !10077, file: !1494, line: 235, type: !1400)
!10080 = !DILocalVariable(name: "config", scope: !10077, file: !1494, line: 237, type: !9805)
!10081 = !DILocation(line: 0, scope: !10077)
!10082 = !DILocation(line: 237, column: 48, scope: !10077)
!10083 = !DILocation(line: 239, column: 39, scope: !10077)
!10084 = !DILocation(line: 239, column: 9, scope: !10077)
!10085 = !DILocation(line: 239, column: 2, scope: !10077)
!10086 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1494, file: !1494, line: 355, type: !10087, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10089)
!10087 = !DISubroutineType(types: !10088)
!10088 = !{!1373, !110, !110}
!10089 = !{!10090, !10091}
!10090 = !DILocalVariable(name: "db", arg: 1, scope: !10086, file: !1494, line: 355, type: !110)
!10091 = !DILocalVariable(name: "p", arg: 2, scope: !10086, file: !1494, line: 356, type: !110)
!10092 = !DILocation(line: 0, scope: !10086)
!10093 = !DILocation(line: 358, column: 2, scope: !10086)
!10094 = !DILocation(line: 384, column: 1, scope: !10086)
!10095 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1494, file: !1494, line: 250, type: !10040, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10096)
!10096 = !{!10097, !10098}
!10097 = !DILocalVariable(name: "dev", arg: 1, scope: !10095, file: !1494, line: 250, type: !1400)
!10098 = !DILocalVariable(name: "config", scope: !10095, file: !1494, line: 252, type: !9805)
!10099 = !DILocation(line: 0, scope: !10095)
!10100 = !DILocation(line: 252, column: 48, scope: !10095)
!10101 = !DILocation(line: 254, column: 40, scope: !10095)
!10102 = !DILocation(line: 254, column: 9, scope: !10095)
!10103 = !DILocation(line: 254, column: 2, scope: !10095)
!10104 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1494, file: !1494, line: 409, type: !10105, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10107)
!10105 = !DISubroutineType(types: !10106)
!10106 = !{!1386, !110}
!10107 = !{!10108}
!10108 = !DILocalVariable(name: "fc", arg: 1, scope: !10104, file: !1494, line: 409, type: !110)
!10109 = !DILocation(line: 0, scope: !10104)
!10110 = !DILocation(line: 411, column: 9, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10104, file: !1494, line: 411, column: 6)
!10112 = !DILocation(line: 416, column: 1, scope: !10104)
!10113 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10114, file: !10114, line: 966, type: !10115, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10117)
!10114 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10115 = !DISubroutineType(types: !10116)
!10116 = !{!110, !1441}
!10117 = !{!10118}
!10118 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10113, file: !10114, line: 966, type: !1441)
!10119 = !DILocation(line: 0, scope: !10113)
!10120 = !DILocation(line: 968, column: 21, scope: !10113)
!10121 = !DILocation(line: 968, column: 3, scope: !10113)
!10122 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10114, file: !10114, line: 600, type: !10115, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10123)
!10123 = !{!10124}
!10124 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10122, file: !10114, line: 600, type: !1441)
!10125 = !DILocation(line: 0, scope: !10122)
!10126 = !DILocation(line: 602, column: 21, scope: !10122)
!10127 = !DILocation(line: 602, column: 3, scope: !10122)
!10128 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10114, file: !10114, line: 819, type: !10115, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10129)
!10129 = !{!10130}
!10130 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10128, file: !10114, line: 819, type: !1441)
!10131 = !DILocation(line: 0, scope: !10128)
!10132 = !DILocation(line: 821, column: 21, scope: !10128)
!10133 = !DILocation(line: 821, column: 3, scope: !10128)
!10134 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10114, file: !10114, line: 546, type: !10115, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10135)
!10135 = !{!10136}
!10136 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10134, file: !10114, line: 546, type: !1441)
!10137 = !DILocation(line: 0, scope: !10134)
!10138 = !DILocation(line: 548, column: 21, scope: !10134)
!10139 = !DILocation(line: 548, column: 3, scope: !10134)
!10140 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1494, file: !1494, line: 257, type: !10141, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10143)
!10141 = !DISubroutineType(types: !10142)
!10142 = !{!110, !1366}
!10143 = !{!10144}
!10144 = !DILocalVariable(name: "parity", arg: 1, scope: !10140, file: !1494, line: 257, type: !1366)
!10145 = !DILocation(line: 0, scope: !10140)
!10146 = !DILocation(line: 259, column: 2, scope: !10140)
!10147 = !DILocation(line: 268, column: 1, scope: !10140)
!10148 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1494, file: !1494, line: 283, type: !10149, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10151)
!10149 = !DISubroutineType(types: !10150)
!10150 = !{!110, !1380}
!10151 = !{!10152}
!10152 = !DILocalVariable(name: "sb", arg: 1, scope: !10148, file: !1494, line: 283, type: !1380)
!10153 = !DILocation(line: 0, scope: !10148)
!10154 = !DILocation(line: 285, column: 2, scope: !10148)
!10155 = !DILocation(line: 0, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10148, file: !1494, line: 285, column: 14)
!10157 = !DILocation(line: 302, column: 1, scope: !10148)
!10158 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1494, file: !1494, line: 325, type: !10159, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10161)
!10159 = !DISubroutineType(types: !10160)
!10160 = !{!110, !1373, !1366}
!10161 = !{!10162, !10163}
!10162 = !DILocalVariable(name: "db", arg: 1, scope: !10158, file: !1494, line: 325, type: !1373)
!10163 = !DILocalVariable(name: "p", arg: 2, scope: !10158, file: !1494, line: 326, type: !1366)
!10164 = !DILocation(line: 0, scope: !10158)
!10165 = !DILocation(line: 328, column: 2, scope: !10158)
!10166 = !DILocation(line: 353, column: 1, scope: !10158)
!10167 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1494, file: !1494, line: 393, type: !10168, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10170)
!10168 = !DISubroutineType(types: !10169)
!10169 = !{!110, !1386}
!10170 = !{!10171}
!10171 = !DILocalVariable(name: "fc", arg: 1, scope: !10167, file: !1494, line: 393, type: !1386)
!10172 = !DILocation(line: 0, scope: !10167)
!10173 = !DILocation(line: 395, column: 9, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10167, file: !1494, line: 395, column: 6)
!10175 = !DILocation(line: 400, column: 1, scope: !10167)
!10176 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10114, file: !10114, line: 423, type: !10177, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10179)
!10177 = !DISubroutineType(types: !10178)
!10178 = !{null, !1441}
!10179 = !{!10180}
!10180 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10176, file: !10114, line: 423, type: !1441)
!10181 = !DILocation(line: 0, scope: !10176)
!10182 = !DILocation(line: 425, column: 3, scope: !10176)
!10183 = !DILocation(line: 426, column: 1, scope: !10176)
!10184 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1494, file: !1494, line: 197, type: !10185, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10187)
!10185 = !DISubroutineType(types: !10186)
!10186 = !{null, !1400, !110}
!10187 = !{!10188, !10189, !10190}
!10188 = !DILocalVariable(name: "dev", arg: 1, scope: !10184, file: !1494, line: 197, type: !1400)
!10189 = !DILocalVariable(name: "parity", arg: 2, scope: !10184, file: !1494, line: 198, type: !110)
!10190 = !DILocalVariable(name: "config", scope: !10184, file: !1494, line: 200, type: !9805)
!10191 = !DILocation(line: 0, scope: !10184)
!10192 = !DILocation(line: 200, column: 48, scope: !10184)
!10193 = !DILocation(line: 202, column: 29, scope: !10184)
!10194 = !DILocation(line: 202, column: 2, scope: !10184)
!10195 = !DILocation(line: 203, column: 1, scope: !10184)
!10196 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1494, file: !1494, line: 212, type: !10185, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10197)
!10197 = !{!10198, !10199, !10200}
!10198 = !DILocalVariable(name: "dev", arg: 1, scope: !10196, file: !1494, line: 212, type: !1400)
!10199 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10196, file: !1494, line: 213, type: !110)
!10200 = !DILocalVariable(name: "config", scope: !10196, file: !1494, line: 215, type: !9805)
!10201 = !DILocation(line: 0, scope: !10196)
!10202 = !DILocation(line: 215, column: 48, scope: !10196)
!10203 = !DILocation(line: 217, column: 37, scope: !10196)
!10204 = !DILocation(line: 217, column: 2, scope: !10196)
!10205 = !DILocation(line: 218, column: 1, scope: !10196)
!10206 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1494, file: !1494, line: 227, type: !10185, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10207)
!10207 = !{!10208, !10209, !10210}
!10208 = !DILocalVariable(name: "dev", arg: 1, scope: !10206, file: !1494, line: 227, type: !1400)
!10209 = !DILocalVariable(name: "databits", arg: 2, scope: !10206, file: !1494, line: 228, type: !110)
!10210 = !DILocalVariable(name: "config", scope: !10206, file: !1494, line: 230, type: !9805)
!10211 = !DILocation(line: 0, scope: !10206)
!10212 = !DILocation(line: 230, column: 48, scope: !10206)
!10213 = !DILocation(line: 232, column: 32, scope: !10206)
!10214 = !DILocation(line: 232, column: 2, scope: !10206)
!10215 = !DILocation(line: 233, column: 1, scope: !10206)
!10216 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1494, file: !1494, line: 242, type: !10185, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10217)
!10217 = !{!10218, !10219, !10220}
!10218 = !DILocalVariable(name: "dev", arg: 1, scope: !10216, file: !1494, line: 242, type: !1400)
!10219 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10216, file: !1494, line: 243, type: !110)
!10220 = !DILocalVariable(name: "config", scope: !10216, file: !1494, line: 245, type: !9805)
!10221 = !DILocation(line: 0, scope: !10216)
!10222 = !DILocation(line: 245, column: 48, scope: !10216)
!10223 = !DILocation(line: 247, column: 33, scope: !10216)
!10224 = !DILocation(line: 247, column: 2, scope: !10216)
!10225 = !DILocation(line: 248, column: 1, scope: !10216)
!10226 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1494, file: !1494, line: 107, type: !10185, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10227)
!10227 = !{!10228, !10229, !10230, !10231, !10232}
!10228 = !DILocalVariable(name: "dev", arg: 1, scope: !10226, file: !1494, line: 107, type: !1400)
!10229 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10226, file: !1494, line: 107, type: !110)
!10230 = !DILocalVariable(name: "config", scope: !10226, file: !1494, line: 109, type: !9805)
!10231 = !DILocalVariable(name: "data", scope: !10226, file: !1494, line: 110, type: !9928)
!10232 = !DILocalVariable(name: "clock_rate", scope: !10226, file: !1494, line: 112, type: !110)
!10233 = !DILocation(line: 0, scope: !10226)
!10234 = !DILocation(line: 109, column: 48, scope: !10226)
!10235 = !DILocation(line: 110, column: 38, scope: !10226)
!10236 = !DILocation(line: 112, column: 2, scope: !10226)
!10237 = !DILocation(line: 123, column: 36, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10239, file: !1494, line: 123, column: 7)
!10239 = distinct !DILexicalBlock(scope: !10240, file: !1494, line: 122, column: 9)
!10240 = distinct !DILexicalBlock(scope: !10226, file: !1494, line: 115, column: 6)
!10241 = !DILocation(line: 124, column: 42, scope: !10238)
!10242 = !DILocation(line: 123, column: 7, scope: !10238)
!10243 = !DILocation(line: 125, column: 22, scope: !10238)
!10244 = !DILocation(line: 123, column: 7, scope: !10239)
!10245 = !DILocation(line: 126, column: 4, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10247, file: !1494, line: 126, column: 4)
!10247 = distinct !DILexicalBlock(scope: !10248, file: !1494, line: 126, column: 4)
!10248 = distinct !DILexicalBlock(scope: !10249, file: !1494, line: 126, column: 4)
!10249 = distinct !DILexicalBlock(scope: !10250, file: !1494, line: 126, column: 4)
!10250 = distinct !DILexicalBlock(scope: !10238, file: !1494, line: 125, column: 27)
!10251 = !DILocation(line: 127, column: 4, scope: !10250)
!10252 = !DILocation(line: 176, column: 36, scope: !10226)
!10253 = !DILocation(line: 176, column: 3, scope: !10226)
!10254 = !DILocation(line: 179, column: 32, scope: !10226)
!10255 = !DILocation(line: 180, column: 10, scope: !10226)
!10256 = !DILocation(line: 179, column: 3, scope: !10226)
!10257 = !DILocation(line: 189, column: 3, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10259, file: !1494, line: 189, column: 3)
!10259 = distinct !DILexicalBlock(scope: !10226, file: !1494, line: 189, column: 3)
!10260 = !DILocation(line: 189, column: 3, scope: !10259)
!10261 = !DILocation(line: 189, column: 3, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10258, file: !1494, line: 189, column: 3)
!10263 = !DILocation(line: 195, column: 1, scope: !10226)
!10264 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10114, file: !10114, line: 409, type: !10177, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10265)
!10265 = !{!10266}
!10266 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10264, file: !10114, line: 409, type: !1441)
!10267 = !DILocation(line: 0, scope: !10264)
!10268 = !DILocation(line: 411, column: 3, scope: !10264)
!10269 = !DILocation(line: 412, column: 1, scope: !10264)
!10270 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !914, file: !914, line: 216, type: !1474, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10271)
!10271 = !{!10272, !10273, !10274, !10275}
!10272 = !DILocalVariable(name: "dev", arg: 1, scope: !10270, file: !914, line: 216, type: !1400)
!10273 = !DILocalVariable(name: "sys", arg: 2, scope: !10270, file: !914, line: 217, type: !987)
!10274 = !DILocalVariable(name: "rate", arg: 3, scope: !10270, file: !914, line: 218, type: !945)
!10275 = !DILocalVariable(name: "api", scope: !10270, file: !914, line: 220, type: !1452)
!10276 = !DILocation(line: 0, scope: !10270)
!10277 = !DILocation(line: 221, column: 49, scope: !10270)
!10278 = !DILocation(line: 223, column: 11, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10270, file: !914, line: 223, column: 6)
!10280 = !DILocation(line: 223, column: 20, scope: !10279)
!10281 = !DILocation(line: 223, column: 6, scope: !10270)
!10282 = !DILocation(line: 227, column: 9, scope: !10270)
!10283 = !DILocation(line: 227, column: 2, scope: !10270)
!10284 = !DILocation(line: 228, column: 1, scope: !10270)
!10285 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6145, file: !6145, line: 175, type: !6146, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10286)
!10286 = !{!10287}
!10287 = !DILocalVariable(name: "level", arg: 1, scope: !10285, file: !6145, line: 175, type: !109)
!10288 = !DILocation(line: 0, scope: !10285)
!10289 = !DILocation(line: 177, column: 2, scope: !10285)
!10290 = !DILocation(line: 189, column: 1, scope: !10285)
!10291 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10114, file: !10114, line: 614, type: !10292, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10294)
!10292 = !DISubroutineType(types: !10293)
!10293 = !{null, !1441, !110}
!10294 = !{!10295, !10296}
!10295 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10291, file: !10114, line: 614, type: !1441)
!10296 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10291, file: !10114, line: 614, type: !110)
!10297 = !DILocation(line: 0, scope: !10291)
!10298 = !DILocation(line: 616, column: 3, scope: !10291)
!10299 = !DILocation(line: 617, column: 1, scope: !10291)
!10300 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10114, file: !10114, line: 1019, type: !10301, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10303)
!10301 = !DISubroutineType(types: !10302)
!10302 = !{null, !1441, !110, !110, !110}
!10303 = !{!10304, !10305, !10306, !10307}
!10304 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10300, file: !10114, line: 1019, type: !1441)
!10305 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10300, file: !10114, line: 1019, type: !110)
!10306 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10300, file: !10114, line: 1019, type: !110)
!10307 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10300, file: !10114, line: 1020, type: !110)
!10308 = !DILocation(line: 0, scope: !10300)
!10309 = !DILocation(line: 1028, column: 30, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10311, file: !10114, line: 1027, column: 3)
!10311 = distinct !DILexicalBlock(scope: !10300, file: !10114, line: 1022, column: 7)
!10312 = !DILocation(line: 1028, column: 19, scope: !10310)
!10313 = !DILocation(line: 1028, column: 13, scope: !10310)
!10314 = !DILocation(line: 1028, column: 17, scope: !10310)
!10315 = !DILocation(line: 1030, column: 1, scope: !10300)
!10316 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10114, file: !10114, line: 948, type: !10292, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10317)
!10317 = !{!10318, !10319}
!10318 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10316, file: !10114, line: 948, type: !1441)
!10319 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10316, file: !10114, line: 948, type: !110)
!10320 = !DILocation(line: 0, scope: !10316)
!10321 = !DILocation(line: 950, column: 3, scope: !10316)
!10322 = !DILocation(line: 951, column: 1, scope: !10316)
!10323 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10114, file: !10114, line: 587, type: !10292, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10324)
!10324 = !{!10325, !10326}
!10325 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10323, file: !10114, line: 587, type: !1441)
!10326 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10323, file: !10114, line: 587, type: !110)
!10327 = !DILocation(line: 0, scope: !10323)
!10328 = !DILocation(line: 589, column: 3, scope: !10323)
!10329 = !DILocation(line: 590, column: 1, scope: !10323)
!10330 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10114, file: !10114, line: 804, type: !10292, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10331)
!10331 = !{!10332, !10333}
!10332 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10330, file: !10114, line: 804, type: !1441)
!10333 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10330, file: !10114, line: 804, type: !110)
!10334 = !DILocation(line: 0, scope: !10330)
!10335 = !DILocation(line: 806, column: 3, scope: !10330)
!10336 = !DILocation(line: 807, column: 1, scope: !10330)
!10337 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10114, file: !10114, line: 531, type: !10292, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10338)
!10338 = !{!10339, !10340}
!10339 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10337, file: !10114, line: 531, type: !1441)
!10340 = !DILocalVariable(name: "Parity", arg: 2, scope: !10337, file: !10114, line: 531, type: !110)
!10341 = !DILocation(line: 0, scope: !10337)
!10342 = !DILocation(line: 533, column: 3, scope: !10337)
!10343 = !DILocation(line: 534, column: 1, scope: !10337)
!10344 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10114, file: !10114, line: 1769, type: !10115, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10345)
!10345 = !{!10346}
!10346 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10344, file: !10114, line: 1769, type: !1441)
!10347 = !DILocation(line: 0, scope: !10344)
!10348 = !DILocation(line: 1771, column: 11, scope: !10344)
!10349 = !DILocation(line: 1771, column: 46, scope: !10344)
!10350 = !DILocation(line: 1771, column: 3, scope: !10344)
!10351 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10114, file: !10114, line: 1736, type: !10115, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10352)
!10352 = !{!10353}
!10353 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10351, file: !10114, line: 1736, type: !1441)
!10354 = !DILocation(line: 0, scope: !10351)
!10355 = !DILocation(line: 1738, column: 11, scope: !10351)
!10356 = !DILocation(line: 1738, column: 3, scope: !10351)
!10357 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10114, file: !10114, line: 1747, type: !10115, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10358)
!10358 = !{!10359}
!10359 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10357, file: !10114, line: 1747, type: !1441)
!10360 = !DILocation(line: 0, scope: !10357)
!10361 = !DILocation(line: 1749, column: 11, scope: !10357)
!10362 = !DILocation(line: 1749, column: 45, scope: !10357)
!10363 = !DILocation(line: 1749, column: 3, scope: !10357)
!10364 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10114, file: !10114, line: 1826, type: !10115, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10365)
!10365 = !{!10366}
!10366 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10364, file: !10114, line: 1826, type: !1441)
!10367 = !DILocation(line: 0, scope: !10364)
!10368 = !DILocation(line: 1828, column: 11, scope: !10364)
!10369 = !DILocation(line: 1828, column: 46, scope: !10364)
!10370 = !DILocation(line: 1828, column: 3, scope: !10364)
!10371 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10114, file: !10114, line: 1991, type: !10177, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10372)
!10372 = !{!10373}
!10373 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10371, file: !10114, line: 1991, type: !1441)
!10374 = !DILocation(line: 0, scope: !10371)
!10375 = !DILocation(line: 1993, column: 3, scope: !10371)
!10376 = !DILocation(line: 1994, column: 1, scope: !10371)
!10377 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10114, file: !10114, line: 1933, type: !10177, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10378)
!10378 = !{!10379, !10380}
!10379 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10377, file: !10114, line: 1933, type: !1441)
!10380 = !DILocalVariable(name: "tmpreg", scope: !10377, file: !10114, line: 1935, type: !316)
!10381 = !DILocation(line: 0, scope: !10377)
!10382 = !DILocation(line: 1935, column: 3, scope: !10377)
!10383 = !DILocation(line: 1935, column: 17, scope: !10377)
!10384 = !DILocation(line: 1936, column: 20, scope: !10377)
!10385 = !DILocation(line: 1936, column: 10, scope: !10377)
!10386 = !DILocation(line: 1937, column: 10, scope: !10377)
!10387 = !DILocation(line: 1938, column: 20, scope: !10377)
!10388 = !DILocation(line: 1938, column: 10, scope: !10377)
!10389 = !DILocation(line: 1939, column: 10, scope: !10377)
!10390 = !DILocation(line: 1940, column: 1, scope: !10377)
!10391 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10114, file: !10114, line: 1876, type: !10177, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10392)
!10392 = !{!10393, !10394}
!10393 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10391, file: !10114, line: 1876, type: !1441)
!10394 = !DILocalVariable(name: "tmpreg", scope: !10391, file: !10114, line: 1878, type: !316)
!10395 = !DILocation(line: 0, scope: !10391)
!10396 = !DILocation(line: 1878, column: 3, scope: !10391)
!10397 = !DILocation(line: 1878, column: 17, scope: !10391)
!10398 = !DILocation(line: 1879, column: 20, scope: !10391)
!10399 = !DILocation(line: 1879, column: 10, scope: !10391)
!10400 = !DILocation(line: 1880, column: 10, scope: !10391)
!10401 = !DILocation(line: 1881, column: 20, scope: !10391)
!10402 = !DILocation(line: 1881, column: 10, scope: !10391)
!10403 = !DILocation(line: 1882, column: 10, scope: !10391)
!10404 = !DILocation(line: 1883, column: 1, scope: !10391)
!10405 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10114, file: !10114, line: 1895, type: !10177, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10406)
!10406 = !{!10407, !10408}
!10407 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10405, file: !10114, line: 1895, type: !1441)
!10408 = !DILocalVariable(name: "tmpreg", scope: !10405, file: !10114, line: 1897, type: !316)
!10409 = !DILocation(line: 0, scope: !10405)
!10410 = !DILocation(line: 1897, column: 3, scope: !10405)
!10411 = !DILocation(line: 1897, column: 17, scope: !10405)
!10412 = !DILocation(line: 1898, column: 20, scope: !10405)
!10413 = !DILocation(line: 1898, column: 10, scope: !10405)
!10414 = !DILocation(line: 1899, column: 10, scope: !10405)
!10415 = !DILocation(line: 1900, column: 20, scope: !10405)
!10416 = !DILocation(line: 1900, column: 10, scope: !10405)
!10417 = !DILocation(line: 1901, column: 10, scope: !10405)
!10418 = !DILocation(line: 1902, column: 1, scope: !10405)
!10419 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10114, file: !10114, line: 1914, type: !10177, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10420)
!10420 = !{!10421, !10422}
!10421 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10419, file: !10114, line: 1914, type: !1441)
!10422 = !DILocalVariable(name: "tmpreg", scope: !10419, file: !10114, line: 1916, type: !316)
!10423 = !DILocation(line: 0, scope: !10419)
!10424 = !DILocation(line: 1916, column: 3, scope: !10419)
!10425 = !DILocation(line: 1916, column: 17, scope: !10419)
!10426 = !DILocation(line: 1917, column: 20, scope: !10419)
!10427 = !DILocation(line: 1917, column: 10, scope: !10419)
!10428 = !DILocation(line: 1918, column: 10, scope: !10419)
!10429 = !DILocation(line: 1919, column: 20, scope: !10419)
!10430 = !DILocation(line: 1919, column: 10, scope: !10419)
!10431 = !DILocation(line: 1920, column: 10, scope: !10419)
!10432 = !DILocation(line: 1921, column: 1, scope: !10419)
!10433 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10114, file: !10114, line: 1813, type: !10115, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10434)
!10434 = !{!10435}
!10435 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10433, file: !10114, line: 1813, type: !1441)
!10436 = !DILocation(line: 0, scope: !10433)
!10437 = !DILocation(line: 1815, column: 11, scope: !10433)
!10438 = !DILocation(line: 1815, column: 46, scope: !10433)
!10439 = !DILocation(line: 1815, column: 3, scope: !10433)
!10440 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10114, file: !10114, line: 2425, type: !10441, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10443)
!10441 = !DISubroutineType(types: !10442)
!10442 = !{null, !1441, !178}
!10443 = !{!10444, !10445}
!10444 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10440, file: !10114, line: 2425, type: !1441)
!10445 = !DILocalVariable(name: "Value", arg: 2, scope: !10440, file: !10114, line: 2425, type: !178)
!10446 = !DILocation(line: 0, scope: !10440)
!10447 = !DILocation(line: 2427, column: 16, scope: !10440)
!10448 = !DILocation(line: 2427, column: 11, scope: !10440)
!10449 = !DILocation(line: 2427, column: 14, scope: !10440)
!10450 = !DILocation(line: 2428, column: 1, scope: !10440)
!10451 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10114, file: !10114, line: 1791, type: !10115, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10452)
!10452 = !{!10453}
!10453 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10451, file: !10114, line: 1791, type: !1441)
!10454 = !DILocation(line: 0, scope: !10451)
!10455 = !DILocation(line: 1793, column: 11, scope: !10451)
!10456 = !DILocation(line: 1793, column: 47, scope: !10451)
!10457 = !DILocation(line: 1793, column: 3, scope: !10451)
!10458 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10114, file: !10114, line: 2402, type: !10459, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10461)
!10459 = !DISubroutineType(types: !10460)
!10460 = !{!178, !1441}
!10461 = !{!10462}
!10462 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10458, file: !10114, line: 2402, type: !1441)
!10463 = !DILocation(line: 0, scope: !10458)
!10464 = !DILocation(line: 2404, column: 20, scope: !10458)
!10465 = !DILocation(line: 2404, column: 10, scope: !10458)
!10466 = !DILocation(line: 2404, column: 3, scope: !10458)
!10467 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1494, file: !1494, line: 1583, type: !1421, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10468)
!10468 = !{!10469, !10470, !10471, !10472, !10473, !10474}
!10469 = !DILocalVariable(name: "dev", arg: 1, scope: !10467, file: !1494, line: 1583, type: !1400)
!10470 = !DILocalVariable(name: "config", scope: !10467, file: !1494, line: 1585, type: !9805)
!10471 = !DILocalVariable(name: "data", scope: !10467, file: !1494, line: 1586, type: !9928)
!10472 = !DILocalVariable(name: "ll_parity", scope: !10467, file: !1494, line: 1587, type: !110)
!10473 = !DILocalVariable(name: "ll_datawidth", scope: !10467, file: !1494, line: 1588, type: !110)
!10474 = !DILocalVariable(name: "err", scope: !10467, file: !1494, line: 1589, type: !109)
!10475 = !DILocation(line: 0, scope: !10467)
!10476 = !DILocation(line: 1585, column: 48, scope: !10467)
!10477 = !DILocation(line: 1586, column: 38, scope: !10467)
!10478 = !DILocation(line: 1591, column: 2, scope: !10467)
!10479 = !DILocation(line: 1593, column: 29, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10467, file: !1494, line: 1593, column: 6)
!10481 = !DILocation(line: 1593, column: 7, scope: !10480)
!10482 = !DILocation(line: 1593, column: 6, scope: !10467)
!10483 = !DILocation(line: 1594, column: 3, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10485, file: !1494, line: 1594, column: 3)
!10485 = distinct !DILexicalBlock(scope: !10486, file: !1494, line: 1594, column: 3)
!10486 = distinct !DILexicalBlock(scope: !10487, file: !1494, line: 1594, column: 3)
!10487 = distinct !DILexicalBlock(scope: !10488, file: !1494, line: 1594, column: 3)
!10488 = distinct !DILexicalBlock(scope: !10480, file: !1494, line: 1593, column: 37)
!10489 = !DILocation(line: 1595, column: 3, scope: !10488)
!10490 = !DILocation(line: 1599, column: 31, scope: !10467)
!10491 = !DILocation(line: 1599, column: 71, scope: !10467)
!10492 = !DILocation(line: 1599, column: 8, scope: !10467)
!10493 = !DILocation(line: 1600, column: 10, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10467, file: !1494, line: 1600, column: 6)
!10495 = !DILocation(line: 1600, column: 6, scope: !10467)
!10496 = !DILocation(line: 1601, column: 3, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10498, file: !1494, line: 1601, column: 3)
!10498 = distinct !DILexicalBlock(scope: !10499, file: !1494, line: 1601, column: 3)
!10499 = distinct !DILexicalBlock(scope: !10500, file: !1494, line: 1601, column: 3)
!10500 = distinct !DILexicalBlock(scope: !10501, file: !1494, line: 1601, column: 3)
!10501 = distinct !DILexicalBlock(scope: !10494, file: !1494, line: 1600, column: 16)
!10502 = !DILocation(line: 1602, column: 3, scope: !10501)
!10503 = !DILocation(line: 1616, column: 36, scope: !10467)
!10504 = !DILocation(line: 1616, column: 8, scope: !10467)
!10505 = !DILocation(line: 1617, column: 10, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10467, file: !1494, line: 1617, column: 6)
!10507 = !DILocation(line: 1617, column: 6, scope: !10467)
!10508 = !DILocation(line: 1621, column: 27, scope: !10467)
!10509 = !DILocation(line: 1621, column: 2, scope: !10467)
!10510 = !DILocation(line: 1624, column: 40, scope: !10467)
!10511 = !DILocation(line: 1624, column: 2, scope: !10467)
!10512 = !DILocation(line: 1630, column: 14, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10467, file: !1494, line: 1630, column: 6)
!10514 = !DILocation(line: 1630, column: 6, scope: !10467)
!10515 = !DILocation(line: 1640, column: 4, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10517, file: !1494, line: 1640, column: 4)
!10517 = distinct !DILexicalBlock(scope: !10518, file: !1494, line: 1640, column: 4)
!10518 = distinct !DILexicalBlock(scope: !10519, file: !1494, line: 1640, column: 4)
!10519 = distinct !DILexicalBlock(scope: !10520, file: !1494, line: 1640, column: 4)
!10520 = distinct !DILexicalBlock(scope: !10521, file: !1494, line: 1639, column: 28)
!10521 = distinct !DILexicalBlock(scope: !10522, file: !1494, line: 1639, column: 7)
!10522 = distinct !DILexicalBlock(scope: !10523, file: !1494, line: 1638, column: 9)
!10523 = distinct !DILexicalBlock(scope: !10513, file: !1494, line: 1634, column: 13)
!10524 = !DILocation(line: 0, scope: !10513)
!10525 = !DILocation(line: 1649, column: 35, scope: !10467)
!10526 = !DILocation(line: 1649, column: 2, scope: !10467)
!10527 = !DILocation(line: 1654, column: 14, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10467, file: !1494, line: 1654, column: 6)
!10529 = !DILocation(line: 1654, column: 6, scope: !10467)
!10530 = !DILocation(line: 1655, column: 3, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10528, file: !1494, line: 1654, column: 31)
!10532 = !DILocation(line: 1656, column: 2, scope: !10531)
!10533 = !DILocation(line: 1659, column: 37, scope: !10467)
!10534 = !DILocation(line: 1659, column: 2, scope: !10467)
!10535 = !DILocation(line: 1662, column: 14, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10467, file: !1494, line: 1662, column: 6)
!10537 = !DILocation(line: 1662, column: 6, scope: !10467)
!10538 = !DILocation(line: 1663, column: 37, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10536, file: !1494, line: 1662, column: 27)
!10540 = !DILocation(line: 1663, column: 3, scope: !10539)
!10541 = !DILocation(line: 1664, column: 2, scope: !10539)
!10542 = !DILocation(line: 1684, column: 26, scope: !10467)
!10543 = !DILocation(line: 1684, column: 2, scope: !10467)
!10544 = !DILocation(line: 1722, column: 2, scope: !10467)
!10545 = !DILocation(line: 1724, column: 1, scope: !10467)
!10546 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1494, file: !1494, line: 651, type: !10547, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10549)
!10547 = !DISubroutineType(types: !10548)
!10548 = !{null, !1400}
!10549 = !{!10550, !10551, !10552}
!10550 = !DILocalVariable(name: "dev", arg: 1, scope: !10546, file: !1494, line: 651, type: !1400)
!10551 = !DILocalVariable(name: "data", scope: !10546, file: !1494, line: 653, type: !9928)
!10552 = !DILocalVariable(name: "clk", scope: !10546, file: !1494, line: 654, type: !10553)
!10553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!10554 = !DILocation(line: 0, scope: !10546)
!10555 = !DILocation(line: 653, column: 38, scope: !10546)
!10556 = !DILocation(line: 656, column: 8, scope: !10546)
!10557 = !DILocation(line: 656, column: 14, scope: !10546)
!10558 = !DILocation(line: 657, column: 1, scope: !10546)
!10559 = distinct !DISubprogram(name: "device_is_ready", scope: !8272, file: !8272, line: 47, type: !10560, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10562)
!10560 = !DISubroutineType(types: !10561)
!10561 = !{!360, !1400}
!10562 = !{!10563}
!10563 = !DILocalVariable(name: "dev", arg: 1, scope: !10559, file: !8272, line: 47, type: !1400)
!10564 = !DILocation(line: 0, scope: !10559)
!10565 = !DILocation(line: 55, column: 2, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10559, file: !8272, line: 55, column: 2)
!10567 = !{i64 2152506853}
!10568 = !DILocation(line: 56, column: 9, scope: !10559)
!10569 = !DILocation(line: 56, column: 2, scope: !10559)
!10570 = distinct !DISubprogram(name: "clock_control_on", scope: !914, file: !914, line: 123, type: !1459, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10571)
!10571 = !{!10572, !10573, !10574}
!10572 = !DILocalVariable(name: "dev", arg: 1, scope: !10570, file: !914, line: 123, type: !1400)
!10573 = !DILocalVariable(name: "sys", arg: 2, scope: !10570, file: !914, line: 124, type: !987)
!10574 = !DILocalVariable(name: "api", scope: !10570, file: !914, line: 126, type: !1452)
!10575 = !DILocation(line: 0, scope: !10570)
!10576 = !DILocation(line: 127, column: 49, scope: !10570)
!10577 = !DILocation(line: 129, column: 14, scope: !10570)
!10578 = !DILocation(line: 129, column: 9, scope: !10570)
!10579 = !DILocation(line: 129, column: 2, scope: !10570)
!10580 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1539, file: !1539, line: 342, type: !10581, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10583)
!10581 = !DISubroutineType(types: !10582)
!10582 = !{!109, !1536, !178}
!10583 = !{!10584, !10585, !10586, !10587}
!10584 = !DILocalVariable(name: "config", arg: 1, scope: !10580, file: !1539, line: 342, type: !1536)
!10585 = !DILocalVariable(name: "id", arg: 2, scope: !10580, file: !1539, line: 343, type: !178)
!10586 = !DILocalVariable(name: "ret", scope: !10580, file: !1539, line: 345, type: !109)
!10587 = !DILocalVariable(name: "state", scope: !10580, file: !1539, line: 346, type: !1542)
!10588 = !DILocation(line: 0, scope: !10580)
!10589 = !DILocation(line: 346, column: 2, scope: !10580)
!10590 = !DILocation(line: 348, column: 8, scope: !10580)
!10591 = !DILocation(line: 349, column: 10, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10580, file: !1539, line: 349, column: 6)
!10593 = !DILocation(line: 349, column: 6, scope: !10580)
!10594 = !DILocation(line: 353, column: 44, scope: !10580)
!10595 = !DILocation(line: 353, column: 9, scope: !10580)
!10596 = !DILocation(line: 353, column: 2, scope: !10580)
!10597 = !DILocation(line: 354, column: 1, scope: !10580)
!10598 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10114, file: !10114, line: 496, type: !10292, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10599)
!10599 = !{!10600, !10601}
!10600 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10598, file: !10114, line: 496, type: !1441)
!10601 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10598, file: !10114, line: 496, type: !110)
!10602 = !DILocation(line: 0, scope: !10598)
!10603 = !DILocation(line: 498, column: 3, scope: !10598)
!10604 = !DILocation(line: 499, column: 1, scope: !10598)
!10605 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10114, file: !10114, line: 849, type: !10301, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10606)
!10606 = !{!10607, !10608, !10609, !10610}
!10607 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10605, file: !10114, line: 849, type: !1441)
!10608 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10605, file: !10114, line: 849, type: !110)
!10609 = !DILocalVariable(name: "Parity", arg: 3, scope: !10605, file: !10114, line: 849, type: !110)
!10610 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10605, file: !10114, line: 850, type: !110)
!10611 = !DILocation(line: 0, scope: !10605)
!10612 = !DILocation(line: 852, column: 3, scope: !10605)
!10613 = !DILocation(line: 853, column: 3, scope: !10605)
!10614 = !DILocation(line: 854, column: 1, scope: !10605)
!10615 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10114, file: !10114, line: 1336, type: !10177, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10616)
!10616 = !{!10617}
!10617 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10615, file: !10114, line: 1336, type: !1441)
!10618 = !DILocation(line: 0, scope: !10615)
!10619 = !DILocation(line: 1338, column: 3, scope: !10615)
!10620 = !DILocation(line: 1339, column: 1, scope: !10615)
!10621 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1539, file: !1539, line: 316, type: !10622, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10624)
!10622 = !DISubroutineType(types: !10623)
!10623 = !{!109, !1536, !1542}
!10624 = !{!10625, !10626, !10627}
!10625 = !DILocalVariable(name: "config", arg: 1, scope: !10621, file: !1539, line: 317, type: !1536)
!10626 = !DILocalVariable(name: "state", arg: 2, scope: !10621, file: !1539, line: 318, type: !1542)
!10627 = !DILocalVariable(name: "reg", scope: !10621, file: !1539, line: 320, type: !22)
!10628 = !DILocation(line: 0, scope: !10621)
!10629 = !DILocation(line: 329, column: 39, scope: !10621)
!10630 = !DILocation(line: 329, column: 52, scope: !10621)
!10631 = !DILocation(line: 329, column: 9, scope: !10621)
!10632 = !DILocation(line: 329, column: 2, scope: !10621)
!10633 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !349, file: !349, line: 730, type: !10560, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1356, retainedNodes: !10634)
!10634 = !{!10635}
!10635 = !DILocalVariable(name: "dev", arg: 1, scope: !10633, file: !349, line: 730, type: !1400)
!10636 = !DILocation(line: 0, scope: !10633)
!10637 = !DILocation(line: 732, column: 9, scope: !10633)
!10638 = !DILocation(line: 732, column: 2, scope: !10633)
!10639 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1674, file: !1674, line: 270, type: !1680, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1596, retainedNodes: !10640)
!10640 = !{!10641}
!10641 = !DILocalVariable(name: "dev", arg: 1, scope: !10639, file: !1674, line: 270, type: !1682)
!10642 = !DILocation(line: 0, scope: !10639)
!10643 = !DILocation(line: 274, column: 2, scope: !10639)
!10644 = !DILocation(line: 275, column: 12, scope: !10639)
!10645 = !DILocation(line: 276, column: 15, scope: !10639)
!10646 = !DILocation(line: 277, column: 16, scope: !10639)
!10647 = !DILocation(line: 278, column: 15, scope: !10639)
!10648 = !DILocation(line: 279, column: 16, scope: !10639)
!10649 = !DILocation(line: 282, column: 2, scope: !10639)
!10650 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !548, file: !548, line: 1638, type: !6428, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1596, retainedNodes: !10651)
!10651 = !{!10652, !10653}
!10652 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10650, file: !548, line: 1638, type: !872)
!10653 = !DILocalVariable(name: "priority", arg: 2, scope: !10650, file: !548, line: 1638, type: !110)
!10654 = !DILocation(line: 0, scope: !10650)
!10655 = !DILocation(line: 1646, column: 46, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10657, file: !548, line: 1645, column: 3)
!10657 = distinct !DILexicalBlock(scope: !10650, file: !548, line: 1640, column: 7)
!10658 = !DILocation(line: 1648, column: 1, scope: !10650)
!10659 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1674, file: !1674, line: 118, type: !6325, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1596, retainedNodes: !10660)
!10660 = !{!10661, !10662}
!10661 = !DILocalVariable(name: "arg", arg: 1, scope: !10659, file: !1674, line: 118, type: !107)
!10662 = !DILocalVariable(name: "dticks", scope: !10659, file: !1674, line: 121, type: !110)
!10663 = !DILocation(line: 0, scope: !10659)
!10664 = !DILocation(line: 124, column: 2, scope: !10659)
!10665 = !DILocation(line: 129, column: 17, scope: !10659)
!10666 = !DILocation(line: 129, column: 14, scope: !10659)
!10667 = !DILocation(line: 130, column: 15, scope: !10659)
!10668 = !DILocation(line: 145, column: 27, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10670, file: !1674, line: 132, column: 16)
!10670 = distinct !DILexicalBlock(scope: !10659, file: !1674, line: 132, column: 6)
!10671 = !DILocation(line: 145, column: 25, scope: !10669)
!10672 = !DILocation(line: 145, column: 45, scope: !10669)
!10673 = !DILocation(line: 146, column: 30, scope: !10669)
!10674 = !DILocation(line: 146, column: 20, scope: !10669)
!10675 = !DILocation(line: 147, column: 3, scope: !10669)
!10676 = !DILocation(line: 151, column: 2, scope: !10659)
!10677 = !DILocation(line: 152, column: 1, scope: !10659)
!10678 = distinct !DISubprogram(name: "elapsed", scope: !1674, file: !1674, line: 85, type: !7393, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1596, retainedNodes: !10679)
!10679 = !{!10680, !10681, !10682}
!10680 = !DILocalVariable(name: "val1", scope: !10678, file: !1674, line: 87, type: !110)
!10681 = !DILocalVariable(name: "ctrl", scope: !10678, file: !1674, line: 88, type: !110)
!10682 = !DILocalVariable(name: "val2", scope: !10678, file: !1674, line: 89, type: !110)
!10683 = !DILocation(line: 87, column: 27, scope: !10678)
!10684 = !DILocation(line: 0, scope: !10678)
!10685 = !DILocation(line: 88, column: 27, scope: !10678)
!10686 = !DILocation(line: 89, column: 27, scope: !10678)
!10687 = !DILocation(line: 105, column: 12, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10678, file: !1674, line: 105, column: 6)
!10689 = !DILocation(line: 106, column: 6, scope: !10688)
!10690 = !DILocation(line: 107, column: 16, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10688, file: !1674, line: 106, column: 24)
!10692 = !DILocation(line: 111, column: 18, scope: !10691)
!10693 = !DILocation(line: 112, column: 2, scope: !10691)
!10694 = !DILocation(line: 114, column: 20, scope: !10678)
!10695 = !DILocation(line: 114, column: 30, scope: !10678)
!10696 = !DILocation(line: 114, column: 28, scope: !10678)
!10697 = !DILocation(line: 114, column: 2, scope: !10678)
!10698 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1674, file: !1674, line: 154, type: !10699, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1596, retainedNodes: !10701)
!10699 = !DISubroutineType(types: !10700)
!10700 = !{null, !854, !360}
!10701 = !{!10702, !10703, !10704, !10705, !10706, !10707, !10708, !10713, !10714}
!10702 = !DILocalVariable(name: "ticks", arg: 1, scope: !10698, file: !1674, line: 154, type: !854)
!10703 = !DILocalVariable(name: "idle", arg: 2, scope: !10698, file: !1674, line: 154, type: !360)
!10704 = !DILocalVariable(name: "delay", scope: !10698, file: !1674, line: 169, type: !110)
!10705 = !DILocalVariable(name: "val1", scope: !10698, file: !1674, line: 170, type: !110)
!10706 = !DILocalVariable(name: "val2", scope: !10698, file: !1674, line: 170, type: !110)
!10707 = !DILocalVariable(name: "last_load_", scope: !10698, file: !1674, line: 171, type: !110)
!10708 = !DILocalVariable(name: "key", scope: !10698, file: !1674, line: 176, type: !10709)
!10709 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !10710)
!10710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !10711)
!10711 = !{!10712}
!10712 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10710, file: !251, line: 33, baseType: !109, size: 32)
!10713 = !DILocalVariable(name: "pending", scope: !10698, file: !1674, line: 178, type: !110)
!10714 = !DILocalVariable(name: "unannounced", scope: !10698, file: !1674, line: 185, type: !110)
!10715 = !DILocation(line: 0, scope: !10698)
!10716 = !DILocation(line: 162, column: 49, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10698, file: !1674, line: 162, column: 6)
!10718 = !DILocation(line: 163, column: 17, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10717, file: !1674, line: 162, column: 78)
!10720 = !DILocation(line: 164, column: 13, scope: !10719)
!10721 = !DILocation(line: 165, column: 3, scope: !10719)
!10722 = !DILocation(line: 171, column: 24, scope: !10698)
!10723 = !DILocation(line: 173, column: 10, scope: !10698)
!10724 = !DILocation(line: 174, column: 10, scope: !10698)
!10725 = !DILocalVariable(name: "l", arg: 1, scope: !10726, file: !251, line: 136, type: !10729)
!10726 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !10727, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1596, retainedNodes: !10730)
!10727 = !DISubroutineType(types: !10728)
!10728 = !{!10709, !10729}
!10729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!10730 = !{!10725, !10731}
!10731 = !DILocalVariable(name: "k", scope: !10726, file: !251, line: 139, type: !10709)
!10732 = !DILocation(line: 0, scope: !10726, inlinedAt: !10733)
!10733 = distinct !DILocation(line: 176, column: 25, scope: !10698)
!10734 = !DILocation(line: 55, column: 2, scope: !10735, inlinedAt: !10739)
!10735 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !6051, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1596, retainedNodes: !10736)
!10736 = !{!10737, !10738}
!10737 = !DILocalVariable(name: "key", scope: !10735, file: !6050, line: 44, type: !32)
!10738 = !DILocalVariable(name: "tmp", scope: !10735, file: !6050, line: 53, type: !32)
!10739 = distinct !DILocation(line: 145, column: 10, scope: !10726, inlinedAt: !10733)
!10740 = !{i64 1622041}
!10741 = !DILocation(line: 0, scope: !10735, inlinedAt: !10739)
!10742 = !DILocation(line: 148, column: 2, scope: !10743, inlinedAt: !10733)
!10743 = distinct !DILexicalBlock(scope: !10744, file: !251, line: 148, column: 2)
!10744 = distinct !DILexicalBlock(scope: !10726, file: !251, line: 148, column: 2)
!10745 = !DILocation(line: 148, column: 2, scope: !10744, inlinedAt: !10733)
!10746 = !DILocation(line: 148, column: 2, scope: !10747, inlinedAt: !10733)
!10747 = distinct !DILexicalBlock(scope: !10743, file: !251, line: 148, column: 2)
!10748 = !DILocation(line: 160, column: 2, scope: !10726, inlinedAt: !10733)
!10749 = !DILocation(line: 178, column: 21, scope: !10698)
!10750 = !DILocation(line: 180, column: 18, scope: !10698)
!10751 = !DILocation(line: 182, column: 14, scope: !10698)
!10752 = !DILocation(line: 183, column: 15, scope: !10698)
!10753 = !DILocation(line: 185, column: 39, scope: !10698)
!10754 = !DILocation(line: 185, column: 37, scope: !10698)
!10755 = !DILocation(line: 187, column: 27, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10698, file: !1674, line: 187, column: 6)
!10757 = !DILocation(line: 187, column: 6, scope: !10698)
!10758 = !DILocation(line: 202, column: 27, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10756, file: !1674, line: 195, column: 9)
!10760 = !DILocation(line: 202, column: 48, scope: !10759)
!10761 = !DILocation(line: 203, column: 9, scope: !10759)
!10762 = !DILocation(line: 204, column: 11, scope: !10759)
!10763 = !DILocation(line: 205, column: 13, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10759, file: !1674, line: 205, column: 7)
!10765 = !DILocation(line: 205, column: 7, scope: !10759)
!10766 = !DILocation(line: 0, scope: !10756)
!10767 = !DILocation(line: 212, column: 18, scope: !10698)
!10768 = !DILocation(line: 214, column: 28, scope: !10698)
!10769 = !DILocation(line: 214, column: 16, scope: !10698)
!10770 = !DILocation(line: 215, column: 15, scope: !10698)
!10771 = !DILocation(line: 227, column: 11, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10698, file: !1674, line: 227, column: 6)
!10773 = !DILocation(line: 227, column: 6, scope: !10698)
!10774 = !DILocation(line: 228, column: 15, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10772, file: !1674, line: 227, column: 19)
!10776 = !DILocation(line: 228, column: 38, scope: !10775)
!10777 = !DILocation(line: 228, column: 24, scope: !10775)
!10778 = !DILocation(line: 229, column: 2, scope: !10775)
!10779 = !DILocation(line: 230, column: 24, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10772, file: !1674, line: 229, column: 9)
!10781 = !DILocation(line: 230, column: 15, scope: !10780)
!10782 = !DILocation(line: 0, scope: !10772)
!10783 = !DILocalVariable(name: "key", arg: 2, scope: !10784, file: !251, line: 190, type: !10709)
!10784 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !10785, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1596, retainedNodes: !10787)
!10785 = !DISubroutineType(types: !10786)
!10786 = !{null, !10729, !10709}
!10787 = !{!10788, !10783}
!10788 = !DILocalVariable(name: "l", arg: 1, scope: !10784, file: !251, line: 189, type: !10729)
!10789 = !DILocation(line: 0, scope: !10784, inlinedAt: !10790)
!10790 = distinct !DILocation(line: 232, column: 2, scope: !10698)
!10791 = !DILocation(line: 194, column: 2, scope: !10792, inlinedAt: !10790)
!10792 = distinct !DILexicalBlock(scope: !10793, file: !251, line: 194, column: 2)
!10793 = distinct !DILexicalBlock(scope: !10784, file: !251, line: 194, column: 2)
!10794 = !DILocation(line: 194, column: 2, scope: !10793, inlinedAt: !10790)
!10795 = !DILocation(line: 194, column: 2, scope: !10796, inlinedAt: !10790)
!10796 = distinct !DILexicalBlock(scope: !10792, file: !251, line: 194, column: 2)
!10797 = !DILocalVariable(name: "key", arg: 1, scope: !10798, file: !6050, line: 84, type: !32)
!10798 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !6061, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1596, retainedNodes: !10799)
!10799 = !{!10797}
!10800 = !DILocation(line: 0, scope: !10798, inlinedAt: !10801)
!10801 = distinct !DILocation(line: 215, column: 2, scope: !10784, inlinedAt: !10790)
!10802 = !DILocation(line: 95, column: 2, scope: !10798, inlinedAt: !10801)
!10803 = !{i64 1622858}
!10804 = !DILocation(line: 234, column: 1, scope: !10698)
!10805 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1674, file: !1674, line: 236, type: !7393, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1596, retainedNodes: !10806)
!10806 = !{!10807, !10808}
!10807 = !DILocalVariable(name: "key", scope: !10805, file: !1674, line: 242, type: !10709)
!10808 = !DILocalVariable(name: "cyc", scope: !10805, file: !1674, line: 243, type: !110)
!10809 = !DILocation(line: 0, scope: !10726, inlinedAt: !10810)
!10810 = distinct !DILocation(line: 242, column: 25, scope: !10805)
!10811 = !DILocation(line: 55, column: 2, scope: !10735, inlinedAt: !10812)
!10812 = distinct !DILocation(line: 145, column: 10, scope: !10726, inlinedAt: !10810)
!10813 = !DILocation(line: 0, scope: !10735, inlinedAt: !10812)
!10814 = !DILocation(line: 148, column: 2, scope: !10743, inlinedAt: !10810)
!10815 = !DILocation(line: 148, column: 2, scope: !10744, inlinedAt: !10810)
!10816 = !DILocation(line: 148, column: 2, scope: !10747, inlinedAt: !10810)
!10817 = !DILocation(line: 160, column: 2, scope: !10726, inlinedAt: !10810)
!10818 = !DILocation(line: 0, scope: !10805)
!10819 = !DILocation(line: 243, column: 17, scope: !10805)
!10820 = !DILocation(line: 243, column: 29, scope: !10805)
!10821 = !DILocation(line: 243, column: 43, scope: !10805)
!10822 = !DILocation(line: 0, scope: !10784, inlinedAt: !10823)
!10823 = distinct !DILocation(line: 245, column: 2, scope: !10805)
!10824 = !DILocation(line: 194, column: 2, scope: !10792, inlinedAt: !10823)
!10825 = !DILocation(line: 194, column: 2, scope: !10793, inlinedAt: !10823)
!10826 = !DILocation(line: 194, column: 2, scope: !10796, inlinedAt: !10823)
!10827 = !DILocation(line: 243, column: 27, scope: !10805)
!10828 = !DILocation(line: 243, column: 41, scope: !10805)
!10829 = !DILocation(line: 0, scope: !10798, inlinedAt: !10830)
!10830 = distinct !DILocation(line: 215, column: 2, scope: !10784, inlinedAt: !10823)
!10831 = !DILocation(line: 95, column: 2, scope: !10798, inlinedAt: !10830)
!10832 = !DILocation(line: 246, column: 13, scope: !10805)
!10833 = !DILocation(line: 246, column: 2, scope: !10805)
!10834 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1674, file: !1674, line: 249, type: !7393, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1596, retainedNodes: !10835)
!10835 = !{!10836, !10837}
!10836 = !DILocalVariable(name: "key", scope: !10834, file: !1674, line: 251, type: !10709)
!10837 = !DILocalVariable(name: "ret", scope: !10834, file: !1674, line: 252, type: !110)
!10838 = !DILocation(line: 0, scope: !10726, inlinedAt: !10839)
!10839 = distinct !DILocation(line: 251, column: 25, scope: !10834)
!10840 = !DILocation(line: 55, column: 2, scope: !10735, inlinedAt: !10841)
!10841 = distinct !DILocation(line: 145, column: 10, scope: !10726, inlinedAt: !10839)
!10842 = !DILocation(line: 0, scope: !10735, inlinedAt: !10841)
!10843 = !DILocation(line: 148, column: 2, scope: !10743, inlinedAt: !10839)
!10844 = !DILocation(line: 148, column: 2, scope: !10744, inlinedAt: !10839)
!10845 = !DILocation(line: 148, column: 2, scope: !10747, inlinedAt: !10839)
!10846 = !DILocation(line: 160, column: 2, scope: !10726, inlinedAt: !10839)
!10847 = !DILocation(line: 0, scope: !10834)
!10848 = !DILocation(line: 252, column: 17, scope: !10834)
!10849 = !DILocation(line: 252, column: 29, scope: !10834)
!10850 = !DILocation(line: 0, scope: !10784, inlinedAt: !10851)
!10851 = distinct !DILocation(line: 254, column: 2, scope: !10834)
!10852 = !DILocation(line: 194, column: 2, scope: !10792, inlinedAt: !10851)
!10853 = !DILocation(line: 194, column: 2, scope: !10793, inlinedAt: !10851)
!10854 = !DILocation(line: 194, column: 2, scope: !10796, inlinedAt: !10851)
!10855 = !DILocation(line: 252, column: 27, scope: !10834)
!10856 = !DILocation(line: 0, scope: !10798, inlinedAt: !10857)
!10857 = distinct !DILocation(line: 215, column: 2, scope: !10784, inlinedAt: !10851)
!10858 = !DILocation(line: 95, column: 2, scope: !10798, inlinedAt: !10857)
!10859 = !DILocation(line: 255, column: 2, scope: !10834)
!10860 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1674, file: !1674, line: 258, type: !3062, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1596, retainedNodes: !2045)
!10861 = !DILocation(line: 260, column: 6, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10860, file: !1674, line: 260, column: 6)
!10863 = !DILocation(line: 260, column: 16, scope: !10862)
!10864 = !DILocation(line: 260, column: 6, scope: !10860)
!10865 = !DILocation(line: 261, column: 17, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10862, file: !1674, line: 260, column: 34)
!10867 = !DILocation(line: 262, column: 2, scope: !10866)
!10868 = !DILocation(line: 263, column: 1, scope: !10860)
!10869 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1674, file: !1674, line: 265, type: !3062, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1596, retainedNodes: !2045)
!10870 = !DILocation(line: 267, column: 16, scope: !10869)
!10871 = !DILocation(line: 268, column: 1, scope: !10869)
!10872 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10873, file: !10873, line: 9, type: !10874, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !10897)
!10873 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10874 = !DISubroutineType(types: !10875)
!10875 = !{!109, !10876, !178, !10896}
!10876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10877, size: 32)
!10877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10878)
!10878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1539, line: 60, size: 64, elements: !10879)
!10879 = !{!10880, !10895}
!10880 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10878, file: !1539, line: 69, baseType: !10881, size: 32)
!10881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10882, size: 32)
!10882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10883)
!10883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1539, line: 50, size: 64, elements: !10884)
!10884 = !{!10885, !10893, !10894}
!10885 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10883, file: !1539, line: 52, baseType: !10886, size: 32)
!10886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10887, size: 32)
!10887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10888)
!10888 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1550, line: 37, baseType: !10889)
!10889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1550, line: 32, size: 64, elements: !10890)
!10890 = !{!10891, !10892}
!10891 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10889, file: !1550, line: 34, baseType: !110, size: 32)
!10892 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10889, file: !1550, line: 36, baseType: !110, size: 32, offset: 32)
!10893 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10883, file: !1539, line: 54, baseType: !178, size: 8, offset: 32)
!10894 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10883, file: !1539, line: 56, baseType: !178, size: 8, offset: 40)
!10895 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10878, file: !1539, line: 71, baseType: !178, size: 8, offset: 32)
!10896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10881, size: 32)
!10897 = !{!10898, !10899, !10900}
!10898 = !DILocalVariable(name: "config", arg: 1, scope: !10872, file: !10873, line: 9, type: !10876)
!10899 = !DILocalVariable(name: "id", arg: 2, scope: !10872, file: !10873, line: 9, type: !178)
!10900 = !DILocalVariable(name: "state", arg: 3, scope: !10872, file: !10873, line: 10, type: !10896)
!10901 = !DILocation(line: 0, scope: !10872)
!10902 = !DILocation(line: 12, column: 20, scope: !10872)
!10903 = !DILocation(line: 13, column: 27, scope: !10872)
!10904 = !DILocation(line: 13, column: 42, scope: !10872)
!10905 = !DILocation(line: 13, column: 19, scope: !10872)
!10906 = !DILocation(line: 13, column: 16, scope: !10872)
!10907 = !DILocation(line: 13, column: 2, scope: !10872)
!10908 = distinct !{!10908, !10907, !10909}
!10909 = !DILocation(line: 19, column: 2, scope: !10872)
!10910 = !DILocation(line: 14, column: 23, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10912, file: !10873, line: 14, column: 7)
!10912 = distinct !DILexicalBlock(scope: !10872, file: !10873, line: 13, column: 54)
!10913 = !DILocation(line: 14, column: 10, scope: !10911)
!10914 = !DILocation(line: 18, column: 11, scope: !10912)
!10915 = !DILocation(line: 14, column: 7, scope: !10912)
!10916 = !DILocation(line: 22, column: 1, scope: !10872)
!10917 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1792, file: !1792, line: 193, type: !10918, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1711, retainedNodes: !10927)
!10918 = !DISubroutineType(types: !10919)
!10919 = !{!109, !10920, !178, !22}
!10920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10921, size: 32)
!10921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10922)
!10922 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1550, line: 37, baseType: !10923)
!10923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1550, line: 32, size: 64, elements: !10924)
!10924 = !{!10925, !10926}
!10925 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10923, file: !1550, line: 34, baseType: !110, size: 32)
!10926 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10923, file: !1550, line: 36, baseType: !110, size: 32, offset: 32)
!10927 = !{!10928, !10929, !10930, !10931, !10932, !10933, !10934, !10935, !10937}
!10928 = !DILocalVariable(name: "pins", arg: 1, scope: !10917, file: !1792, line: 193, type: !10920)
!10929 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10917, file: !1792, line: 193, type: !178)
!10930 = !DILocalVariable(name: "reg", arg: 3, scope: !10917, file: !1792, line: 194, type: !22)
!10931 = !DILocalVariable(name: "pin", scope: !10917, file: !1792, line: 196, type: !110)
!10932 = !DILocalVariable(name: "mux", scope: !10917, file: !1792, line: 196, type: !110)
!10933 = !DILocalVariable(name: "pin_cgf", scope: !10917, file: !1792, line: 197, type: !110)
!10934 = !DILocalVariable(name: "ret", scope: !10917, file: !1792, line: 198, type: !109)
!10935 = !DILocalVariable(name: "i", scope: !10936, file: !1792, line: 209, type: !178)
!10936 = distinct !DILexicalBlock(scope: !10917, file: !1792, line: 209, column: 2)
!10937 = !DILocalVariable(name: "gpio_out", scope: !10938, file: !1792, line: 239, type: !110)
!10938 = distinct !DILexicalBlock(scope: !10939, file: !1792, line: 238, column: 55)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !1792, line: 238, column: 14)
!10940 = distinct !DILexicalBlock(scope: !10941, file: !1792, line: 236, column: 14)
!10941 = distinct !DILexicalBlock(scope: !10942, file: !1792, line: 234, column: 7)
!10942 = distinct !DILexicalBlock(scope: !10943, file: !1792, line: 209, column: 41)
!10943 = distinct !DILexicalBlock(scope: !10936, file: !1792, line: 209, column: 2)
!10944 = !DILocation(line: 0, scope: !10917)
!10945 = !DILocation(line: 0, scope: !10936)
!10946 = !DILocation(line: 209, column: 25, scope: !10943)
!10947 = !DILocation(line: 209, column: 2, scope: !10936)
!10948 = distinct !{!10948, !10947, !10949}
!10949 = !DILocation(line: 259, column: 2, scope: !10936)
!10950 = !DILocation(line: 210, column: 17, scope: !10942)
!10951 = !DILocation(line: 234, column: 7, scope: !10941)
!10952 = !DILocation(line: 234, column: 33, scope: !10941)
!10953 = !DILocation(line: 234, column: 7, scope: !10942)
!10954 = !DILocation(line: 235, column: 22, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10941, file: !1792, line: 234, column: 49)
!10956 = !DILocation(line: 235, column: 29, scope: !10955)
!10957 = !DILocation(line: 236, column: 3, scope: !10955)
!10958 = !DILocation(line: 236, column: 14, scope: !10941)
!10959 = !DILocation(line: 239, column: 32, scope: !10938)
!10960 = !DILocation(line: 0, scope: !10938)
!10961 = !DILocation(line: 241, column: 8, scope: !10938)
!10962 = !DILocation(line: 246, column: 3, scope: !10938)
!10963 = !DILocation(line: 252, column: 9, scope: !10942)
!10964 = !DILocation(line: 255, column: 9, scope: !10942)
!10965 = !DILocation(line: 256, column: 11, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10942, file: !1792, line: 256, column: 7)
!10967 = !DILocation(line: 209, column: 37, scope: !10943)
!10968 = !DILocation(line: 256, column: 7, scope: !10942)
!10969 = !DILocation(line: 262, column: 1, scope: !10917)
!10970 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1792, file: !1792, line: 176, type: !10971, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1711, retainedNodes: !10973)
!10971 = !DISubroutineType(types: !10972)
!10972 = !{!109, !110, !110, !110}
!10973 = !{!10974, !10975, !10976, !10977}
!10974 = !DILocalVariable(name: "pin", arg: 1, scope: !10970, file: !1792, line: 176, type: !110)
!10975 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10970, file: !1792, line: 176, type: !110)
!10976 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10970, file: !1792, line: 176, type: !110)
!10977 = !DILocalVariable(name: "port_device", scope: !10970, file: !1792, line: 178, type: !1722)
!10978 = !DILocation(line: 0, scope: !10970)
!10979 = !DILocation(line: 180, column: 22, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10970, file: !1792, line: 180, column: 6)
!10981 = !DILocation(line: 180, column: 6, scope: !10970)
!10982 = !DILocation(line: 180, column: 6, scope: !10980)
!10983 = !DILocation(line: 184, column: 16, scope: !10970)
!10984 = !DILocation(line: 186, column: 19, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10970, file: !1792, line: 186, column: 6)
!10986 = !DILocation(line: 186, column: 28, scope: !10985)
!10987 = !DILocation(line: 186, column: 33, scope: !10985)
!10988 = !DILocation(line: 186, column: 6, scope: !10970)
!10989 = !DILocation(line: 190, column: 43, scope: !10970)
!10990 = !DILocation(line: 190, column: 9, scope: !10970)
!10991 = !DILocation(line: 190, column: 2, scope: !10970)
!10992 = !DILocation(line: 191, column: 1, scope: !10970)
!10993 = distinct !DISubprogram(name: "device_is_ready", scope: !8272, file: !8272, line: 47, type: !10994, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1711, retainedNodes: !10996)
!10994 = !DISubroutineType(types: !10995)
!10995 = !{!360, !1722}
!10996 = !{!10997}
!10997 = !DILocalVariable(name: "dev", arg: 1, scope: !10993, file: !8272, line: 47, type: !1722)
!10998 = !DILocation(line: 0, scope: !10993)
!10999 = !DILocation(line: 55, column: 2, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10993, file: !8272, line: 55, column: 2)
!11001 = !{i64 2148856050}
!11002 = !DILocation(line: 56, column: 9, scope: !10993)
!11003 = !DILocation(line: 56, column: 2, scope: !10993)
!11004 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !349, file: !349, line: 730, type: !10994, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1711, retainedNodes: !11005)
!11005 = !{!11006}
!11006 = !DILocalVariable(name: "dev", arg: 1, scope: !11004, file: !349, line: 730, type: !1722)
!11007 = !DILocation(line: 0, scope: !11004)
!11008 = !DILocation(line: 732, column: 9, scope: !11004)
!11009 = !DILocation(line: 732, column: 2, scope: !11004)
!11010 = distinct !DISubprogram(name: "SystemInit", scope: !1822, file: !1822, line: 160, type: !3062, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1798, retainedNodes: !2045)
!11011 = !DILocation(line: 170, column: 1, scope: !11010)
!11012 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1822, file: !1822, line: 210, type: !3062, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1798, retainedNodes: !11013)
!11013 = !{!11014, !11015, !11016, !11017, !11018}
!11014 = !DILocalVariable(name: "tmp", scope: !11012, file: !1822, line: 212, type: !110)
!11015 = !DILocalVariable(name: "pllmul", scope: !11012, file: !1822, line: 212, type: !110)
!11016 = !DILocalVariable(name: "plldiv", scope: !11012, file: !1822, line: 212, type: !110)
!11017 = !DILocalVariable(name: "pllsource", scope: !11012, file: !1822, line: 212, type: !110)
!11018 = !DILocalVariable(name: "msirange", scope: !11012, file: !1822, line: 212, type: !110)
!11019 = !DILocation(line: 0, scope: !11012)
!11020 = !DILocation(line: 215, column: 14, scope: !11012)
!11021 = !DILocation(line: 217, column: 3, scope: !11012)
!11022 = !DILocation(line: 220, column: 24, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11012, file: !1822, line: 218, column: 3)
!11024 = !DILocation(line: 220, column: 52, scope: !11023)
!11025 = !DILocation(line: 221, column: 32, scope: !11023)
!11026 = !DILocation(line: 222, column: 7, scope: !11023)
!11027 = !DILocation(line: 228, column: 7, scope: !11023)
!11028 = !DILocation(line: 231, column: 21, scope: !11023)
!11029 = !DILocation(line: 232, column: 21, scope: !11023)
!11030 = !DILocation(line: 233, column: 36, scope: !11023)
!11031 = !DILocation(line: 233, column: 16, scope: !11023)
!11032 = !DILocation(line: 234, column: 24, scope: !11023)
!11033 = !DILocation(line: 234, column: 31, scope: !11023)
!11034 = !DILocation(line: 236, column: 24, scope: !11023)
!11035 = !DILocation(line: 236, column: 29, scope: !11023)
!11036 = !DILocation(line: 238, column: 21, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11023, file: !1822, line: 238, column: 11)
!11038 = !DILocation(line: 238, column: 11, scope: !11023)
!11039 = !DILocation(line: 241, column: 41, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11037, file: !1822, line: 239, column: 7)
!11041 = !DILocation(line: 241, column: 51, scope: !11040)
!11042 = !DILocation(line: 242, column: 7, scope: !11040)
!11043 = !DILocation(line: 246, column: 41, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11037, file: !1822, line: 244, column: 7)
!11045 = !DILocation(line: 246, column: 51, scope: !11044)
!11046 = !DILocation(line: 0, scope: !11023)
!11047 = !DILocation(line: 256, column: 30, scope: !11012)
!11048 = !DILocation(line: 256, column: 52, scope: !11012)
!11049 = !DILocation(line: 256, column: 9, scope: !11012)
!11050 = !DILocation(line: 258, column: 19, scope: !11012)
!11051 = !DILocation(line: 259, column: 1, scope: !11012)
!11052 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11053, file: !11053, line: 228, type: !11054, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11057)
!11053 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11054 = !DISubroutineType(types: !11055)
!11055 = !{!11056}
!11056 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2906, line: 45, baseType: !2905)
!11057 = !{!11058, !11059}
!11058 = !DILocalVariable(name: "tickstart", scope: !11052, file: !11053, line: 230, type: !110)
!11059 = !DILocalVariable(name: "status", scope: !11052, file: !11053, line: 231, type: !11056)
!11060 = !DILocation(line: 234, column: 3, scope: !11052)
!11061 = !DILocation(line: 238, column: 3, scope: !11052)
!11062 = !DILocation(line: 241, column: 15, scope: !11052)
!11063 = !DILocation(line: 0, scope: !11052)
!11064 = !DILocation(line: 244, column: 3, scope: !11052)
!11065 = !DILocation(line: 244, column: 10, scope: !11052)
!11066 = !DILocation(line: 244, column: 43, scope: !11052)
!11067 = !DILocation(line: 246, column: 10, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11069, file: !11053, line: 246, column: 9)
!11069 = distinct !DILexicalBlock(scope: !11052, file: !11053, line: 245, column: 3)
!11070 = !DILocation(line: 246, column: 24, scope: !11068)
!11071 = !DILocation(line: 246, column: 37, scope: !11068)
!11072 = !DILocation(line: 246, column: 9, scope: !11069)
!11073 = distinct !{!11073, !11064, !11074}
!11074 = !DILocation(line: 250, column: 3, scope: !11052)
!11075 = !DILocation(line: 253, column: 3, scope: !11052)
!11076 = !DILocation(line: 256, column: 3, scope: !11052)
!11077 = !DILocation(line: 256, column: 10, scope: !11052)
!11078 = !DILocation(line: 256, column: 44, scope: !11052)
!11079 = !DILocation(line: 258, column: 10, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !11053, line: 258, column: 9)
!11081 = distinct !DILexicalBlock(scope: !11052, file: !11053, line: 257, column: 3)
!11082 = !DILocation(line: 258, column: 24, scope: !11080)
!11083 = !DILocation(line: 258, column: 37, scope: !11080)
!11084 = !DILocation(line: 258, column: 9, scope: !11081)
!11085 = distinct !{!11085, !11076, !11086}
!11086 = !DILocation(line: 262, column: 3, scope: !11052)
!11087 = !DILocation(line: 265, column: 19, scope: !11052)
!11088 = !DILocation(line: 268, column: 25, scope: !11052)
!11089 = !DILocation(line: 268, column: 12, scope: !11052)
!11090 = !DILocation(line: 269, column: 13, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11052, file: !11053, line: 269, column: 6)
!11092 = !DILocation(line: 269, column: 6, scope: !11052)
!11093 = !DILocation(line: 275, column: 3, scope: !11052)
!11094 = !DILocation(line: 277, column: 3, scope: !11052)
!11095 = !DILocation(line: 280, column: 15, scope: !11052)
!11096 = !DILocation(line: 283, column: 3, scope: !11052)
!11097 = !DILocation(line: 283, column: 10, scope: !11052)
!11098 = !DILocation(line: 283, column: 43, scope: !11052)
!11099 = !DILocation(line: 285, column: 10, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11101, file: !11053, line: 285, column: 9)
!11101 = distinct !DILexicalBlock(scope: !11052, file: !11053, line: 284, column: 3)
!11102 = !DILocation(line: 285, column: 24, scope: !11100)
!11103 = !DILocation(line: 285, column: 37, scope: !11100)
!11104 = !DILocation(line: 285, column: 9, scope: !11101)
!11105 = distinct !{!11105, !11096, !11106}
!11106 = !DILocation(line: 289, column: 3, scope: !11052)
!11107 = !DILocation(line: 292, column: 3, scope: !11052)
!11108 = !DILocation(line: 295, column: 3, scope: !11052)
!11109 = !DILocation(line: 299, column: 3, scope: !11052)
!11110 = !DILocation(line: 305, column: 3, scope: !11052)
!11111 = !DILocation(line: 307, column: 3, scope: !11052)
!11112 = !DILocation(line: 308, column: 1, scope: !11052)
!11113 = !DISubprogram(name: "HAL_GetTick", scope: !11114, file: !11114, line: 945, type: !7393, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2045)
!11114 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11115 = !DISubprogram(name: "HAL_InitTick", scope: !11114, file: !11114, line: 932, type: !11116, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2045)
!11116 = !DISubroutineType(types: !11117)
!11117 = !{!11056, !110}
!11118 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11053, file: !11053, line: 324, type: !11119, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11143)
!11119 = !DISubroutineType(types: !11120)
!11120 = !{!11056, !11121}
!11121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11122, size: 32)
!11122 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11123, line: 283, baseType: !11124)
!11123 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11123, line: 252, size: 416, elements: !11125)
!11125 = !{!11126, !11127, !11128, !11129, !11130, !11131, !11132, !11133, !11134, !11135}
!11126 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11124, file: !11123, line: 254, baseType: !110, size: 32)
!11127 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11124, file: !11123, line: 257, baseType: !110, size: 32, offset: 32)
!11128 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11124, file: !11123, line: 260, baseType: !110, size: 32, offset: 64)
!11129 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11124, file: !11123, line: 263, baseType: !110, size: 32, offset: 96)
!11130 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11124, file: !11123, line: 266, baseType: !110, size: 32, offset: 128)
!11131 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11124, file: !11123, line: 269, baseType: !110, size: 32, offset: 160)
!11132 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !11124, file: !11123, line: 272, baseType: !110, size: 32, offset: 192)
!11133 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !11124, file: !11123, line: 275, baseType: !110, size: 32, offset: 224)
!11134 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !11124, file: !11123, line: 278, baseType: !110, size: 32, offset: 256)
!11135 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11124, file: !11123, line: 281, baseType: !11136, size: 128, offset: 288)
!11136 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11123, line: 247, baseType: !11137)
!11137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11123, line: 234, size: 128, elements: !11138)
!11138 = !{!11139, !11140, !11141, !11142}
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11137, file: !11123, line: 236, baseType: !110, size: 32)
!11140 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11137, file: !11123, line: 239, baseType: !110, size: 32, offset: 32)
!11141 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !11137, file: !11123, line: 242, baseType: !110, size: 32, offset: 64)
!11142 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !11137, file: !11123, line: 245, baseType: !110, size: 32, offset: 96)
!11143 = !{!11144, !11145, !11146, !11147, !11148, !11149, !11153}
!11144 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11118, file: !11053, line: 324, type: !11121)
!11145 = !DILocalVariable(name: "tickstart", scope: !11118, file: !11053, line: 326, type: !110)
!11146 = !DILocalVariable(name: "status", scope: !11118, file: !11053, line: 327, type: !11056)
!11147 = !DILocalVariable(name: "sysclk_source", scope: !11118, file: !11053, line: 328, type: !110)
!11148 = !DILocalVariable(name: "pll_config", scope: !11118, file: !11053, line: 328, type: !110)
!11149 = !DILocalVariable(name: "pwrclkchanged", scope: !11150, file: !11053, line: 613, type: !11152)
!11150 = distinct !DILexicalBlock(scope: !11151, file: !11053, line: 612, column: 3)
!11151 = distinct !DILexicalBlock(scope: !11118, file: !11053, line: 611, column: 6)
!11152 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !909, line: 181, baseType: !2916)
!11153 = !DILocalVariable(name: "tmpreg", scope: !11154, file: !11053, line: 622, type: !316)
!11154 = distinct !DILexicalBlock(scope: !11155, file: !11053, line: 622, column: 7)
!11155 = distinct !DILexicalBlock(scope: !11156, file: !11053, line: 621, column: 5)
!11156 = distinct !DILexicalBlock(scope: !11150, file: !11053, line: 620, column: 8)
!11157 = !DILocation(line: 0, scope: !11118)
!11158 = !DILocation(line: 331, column: 24, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11118, file: !11053, line: 331, column: 6)
!11160 = !DILocation(line: 331, column: 6, scope: !11118)
!11161 = !DILocation(line: 338, column: 19, scope: !11118)
!11162 = !DILocation(line: 339, column: 16, scope: !11118)
!11163 = !DILocation(line: 342, column: 27, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11118, file: !11053, line: 342, column: 6)
!11165 = !DILocation(line: 342, column: 43, scope: !11164)
!11166 = !DILocation(line: 342, column: 69, scope: !11164)
!11167 = !DILocation(line: 342, column: 6, scope: !11118)
!11168 = !DILocation(line: 348, column: 23, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11170, file: !11053, line: 348, column: 8)
!11170 = distinct !DILexicalBlock(scope: !11164, file: !11053, line: 343, column: 3)
!11171 = !DILocation(line: 349, column: 8, scope: !11169)
!11172 = !DILocation(line: 349, column: 27, scope: !11169)
!11173 = !DILocation(line: 349, column: 62, scope: !11169)
!11174 = !DILocation(line: 351, column: 11, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11176, file: !11053, line: 351, column: 10)
!11176 = distinct !DILexicalBlock(scope: !11169, file: !11053, line: 350, column: 5)
!11177 = !DILocation(line: 351, column: 47, scope: !11175)
!11178 = !DILocation(line: 351, column: 54, scope: !11175)
!11179 = !DILocation(line: 351, column: 77, scope: !11175)
!11180 = !DILocation(line: 351, column: 86, scope: !11175)
!11181 = !DILocation(line: 351, column: 10, scope: !11176)
!11182 = !DILocation(line: 359, column: 7, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11184, file: !11053, line: 359, column: 7)
!11184 = distinct !DILexicalBlock(scope: !11185, file: !11053, line: 359, column: 7)
!11185 = distinct !DILexicalBlock(scope: !11169, file: !11053, line: 357, column: 5)
!11186 = !DILocation(line: 359, column: 7, scope: !11184)
!11187 = !DILocation(line: 359, column: 7, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11183, file: !11053, line: 359, column: 7)
!11189 = !DILocation(line: 359, column: 7, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11191, file: !11053, line: 359, column: 7)
!11191 = distinct !DILexicalBlock(scope: !11183, file: !11053, line: 359, column: 7)
!11192 = !DILocation(line: 359, column: 7, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11194, file: !11053, line: 359, column: 7)
!11194 = distinct !DILexicalBlock(scope: !11191, file: !11053, line: 359, column: 7)
!11195 = !DILocation(line: 359, column: 7, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11194, file: !11053, line: 359, column: 7)
!11197 = !DILocation(line: 0, scope: !11183)
!11198 = !DILocation(line: 362, column: 29, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11185, file: !11053, line: 362, column: 10)
!11200 = !DILocation(line: 362, column: 38, scope: !11199)
!11201 = !DILocation(line: 0, scope: !11199)
!11202 = !DILocation(line: 362, column: 10, scope: !11185)
!11203 = !DILocation(line: 368, column: 15, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11199, file: !11053, line: 363, column: 7)
!11205 = !DILocation(line: 368, column: 51, scope: !11204)
!11206 = !DILocation(line: 368, column: 9, scope: !11204)
!11207 = !DILocation(line: 370, column: 15, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11209, file: !11053, line: 370, column: 14)
!11209 = distinct !DILexicalBlock(scope: !11204, file: !11053, line: 369, column: 9)
!11210 = !DILocation(line: 370, column: 29, scope: !11208)
!11211 = !DILocation(line: 370, column: 43, scope: !11208)
!11212 = !DILocation(line: 370, column: 14, scope: !11209)
!11213 = distinct !{!11213, !11206, !11214}
!11214 = !DILocation(line: 374, column: 9, scope: !11204)
!11215 = !DILocation(line: 382, column: 15, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11199, file: !11053, line: 377, column: 7)
!11217 = !DILocation(line: 382, column: 51, scope: !11216)
!11218 = !DILocation(line: 382, column: 9, scope: !11216)
!11219 = !DILocation(line: 384, column: 16, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11221, file: !11053, line: 384, column: 15)
!11221 = distinct !DILexicalBlock(scope: !11216, file: !11053, line: 383, column: 9)
!11222 = !DILocation(line: 384, column: 30, scope: !11220)
!11223 = !DILocation(line: 384, column: 44, scope: !11220)
!11224 = !DILocation(line: 384, column: 15, scope: !11221)
!11225 = distinct !{!11225, !11218, !11226}
!11226 = !DILocation(line: 388, column: 9, scope: !11216)
!11227 = !DILocation(line: 393, column: 27, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11118, file: !11053, line: 393, column: 6)
!11229 = !DILocation(line: 393, column: 43, scope: !11228)
!11230 = !DILocation(line: 393, column: 69, scope: !11228)
!11231 = !DILocation(line: 393, column: 6, scope: !11118)
!11232 = !DILocation(line: 400, column: 23, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11234, file: !11053, line: 400, column: 8)
!11234 = distinct !DILexicalBlock(scope: !11228, file: !11053, line: 394, column: 3)
!11235 = !DILocation(line: 401, column: 8, scope: !11233)
!11236 = !DILocation(line: 401, column: 27, scope: !11233)
!11237 = !DILocation(line: 401, column: 62, scope: !11233)
!11238 = !DILocation(line: 404, column: 11, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11240, file: !11053, line: 404, column: 10)
!11240 = distinct !DILexicalBlock(scope: !11233, file: !11053, line: 402, column: 5)
!11241 = !DILocation(line: 404, column: 47, scope: !11239)
!11242 = !DILocation(line: 404, column: 54, scope: !11239)
!11243 = !DILocation(line: 404, column: 77, scope: !11239)
!11244 = !DILocation(line: 404, column: 86, scope: !11239)
!11245 = !DILocation(line: 404, column: 10, scope: !11240)
!11246 = !DILocation(line: 418, column: 29, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11248, file: !11053, line: 418, column: 10)
!11248 = distinct !DILexicalBlock(scope: !11233, file: !11053, line: 416, column: 5)
!11249 = !DILocation(line: 418, column: 38, scope: !11247)
!11250 = !DILocation(line: 418, column: 10, scope: !11248)
!11251 = !DILocation(line: 421, column: 9, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11247, file: !11053, line: 419, column: 7)
!11253 = !DILocation(line: 424, column: 21, scope: !11252)
!11254 = !DILocation(line: 427, column: 9, scope: !11252)
!11255 = !DILocation(line: 427, column: 15, scope: !11252)
!11256 = !DILocation(line: 427, column: 51, scope: !11252)
!11257 = !DILocation(line: 429, column: 15, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11259, file: !11053, line: 429, column: 14)
!11259 = distinct !DILexicalBlock(scope: !11252, file: !11053, line: 428, column: 9)
!11260 = !DILocation(line: 429, column: 29, scope: !11258)
!11261 = !DILocation(line: 429, column: 43, scope: !11258)
!11262 = !DILocation(line: 429, column: 14, scope: !11259)
!11263 = distinct !{!11263, !11254, !11264}
!11264 = !DILocation(line: 433, column: 9, scope: !11252)
!11265 = !DILocation(line: 441, column: 9, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11247, file: !11053, line: 439, column: 7)
!11267 = !DILocation(line: 444, column: 21, scope: !11266)
!11268 = !DILocation(line: 447, column: 9, scope: !11266)
!11269 = !DILocation(line: 447, column: 15, scope: !11266)
!11270 = !DILocation(line: 447, column: 51, scope: !11266)
!11271 = !DILocation(line: 449, column: 15, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11273, file: !11053, line: 449, column: 14)
!11273 = distinct !DILexicalBlock(scope: !11266, file: !11053, line: 448, column: 9)
!11274 = !DILocation(line: 449, column: 29, scope: !11272)
!11275 = !DILocation(line: 449, column: 43, scope: !11272)
!11276 = !DILocation(line: 449, column: 14, scope: !11273)
!11277 = distinct !{!11277, !11268, !11278}
!11278 = !DILocation(line: 453, column: 9, scope: !11266)
!11279 = !DILocation(line: 0, scope: !11233)
!11280 = !DILocation(line: 458, column: 27, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11118, file: !11053, line: 458, column: 6)
!11282 = !DILocation(line: 458, column: 43, scope: !11281)
!11283 = !DILocation(line: 458, column: 69, scope: !11281)
!11284 = !DILocation(line: 458, column: 6, scope: !11118)
!11285 = !DILocation(line: 461, column: 22, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11287, file: !11053, line: 461, column: 8)
!11287 = distinct !DILexicalBlock(scope: !11281, file: !11053, line: 459, column: 3)
!11288 = !DILocation(line: 461, column: 8, scope: !11287)
!11289 = !DILocation(line: 463, column: 11, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !11053, line: 463, column: 10)
!11291 = distinct !DILexicalBlock(scope: !11286, file: !11053, line: 462, column: 5)
!11292 = !DILocation(line: 463, column: 47, scope: !11290)
!11293 = !DILocation(line: 463, column: 54, scope: !11290)
!11294 = !DILocation(line: 463, column: 77, scope: !11290)
!11295 = !DILocation(line: 463, column: 86, scope: !11290)
!11296 = !DILocation(line: 463, column: 10, scope: !11291)
!11297 = !DILocation(line: 477, column: 31, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11299, file: !11053, line: 477, column: 12)
!11299 = distinct !DILexicalBlock(scope: !11290, file: !11053, line: 469, column: 7)
!11300 = !DILocation(line: 477, column: 47, scope: !11298)
!11301 = !DILocation(line: 477, column: 45, scope: !11298)
!11302 = !DILocation(line: 477, column: 12, scope: !11299)
!11303 = !DILocation(line: 480, column: 14, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11305, file: !11053, line: 480, column: 14)
!11305 = distinct !DILexicalBlock(scope: !11298, file: !11053, line: 478, column: 9)
!11306 = !DILocation(line: 480, column: 80, scope: !11304)
!11307 = !DILocation(line: 480, column: 14, scope: !11305)
!11308 = !DILocation(line: 486, column: 11, scope: !11305)
!11309 = !DILocation(line: 488, column: 11, scope: !11305)
!11310 = !DILocation(line: 489, column: 9, scope: !11305)
!11311 = !DILocation(line: 494, column: 11, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11298, file: !11053, line: 491, column: 9)
!11313 = !DILocation(line: 496, column: 11, scope: !11312)
!11314 = !DILocation(line: 499, column: 65, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11312, file: !11053, line: 499, column: 14)
!11316 = !DILocation(line: 499, column: 14, scope: !11315)
!11317 = !DILocation(line: 499, column: 80, scope: !11315)
!11318 = !DILocation(line: 499, column: 14, scope: !11312)
!11319 = !DILocation(line: 506, column: 67, scope: !11299)
!11320 = !DILocation(line: 506, column: 81, scope: !11299)
!11321 = !DILocation(line: 506, column: 36, scope: !11299)
!11322 = !DILocation(line: 507, column: 52, scope: !11299)
!11323 = !DILocation(line: 507, column: 74, scope: !11299)
!11324 = !DILocation(line: 507, column: 31, scope: !11299)
!11325 = !DILocation(line: 507, column: 28, scope: !11299)
!11326 = !DILocation(line: 506, column: 25, scope: !11299)
!11327 = !DILocation(line: 510, column: 31, scope: !11299)
!11328 = !DILocation(line: 510, column: 18, scope: !11299)
!11329 = !DILocation(line: 511, column: 19, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11299, file: !11053, line: 511, column: 12)
!11331 = !DILocation(line: 511, column: 12, scope: !11299)
!11332 = !DILocation(line: 523, column: 29, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !11053, line: 523, column: 10)
!11334 = distinct !DILexicalBlock(scope: !11286, file: !11053, line: 518, column: 5)
!11335 = !DILocation(line: 523, column: 38, scope: !11333)
!11336 = !DILocation(line: 523, column: 10, scope: !11334)
!11337 = !DILocation(line: 526, column: 9, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11333, file: !11053, line: 524, column: 7)
!11339 = !DILocation(line: 529, column: 21, scope: !11338)
!11340 = !DILocation(line: 532, column: 9, scope: !11338)
!11341 = !DILocation(line: 532, column: 15, scope: !11338)
!11342 = !DILocation(line: 532, column: 51, scope: !11338)
!11343 = !DILocation(line: 534, column: 15, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11345, file: !11053, line: 534, column: 14)
!11345 = distinct !DILexicalBlock(scope: !11338, file: !11053, line: 533, column: 9)
!11346 = !DILocation(line: 534, column: 29, scope: !11344)
!11347 = !DILocation(line: 534, column: 42, scope: !11344)
!11348 = !DILocation(line: 534, column: 14, scope: !11345)
!11349 = distinct !{!11349, !11340, !11350}
!11350 = !DILocation(line: 538, column: 9, scope: !11338)
!11351 = !DILocation(line: 544, column: 9, scope: !11338)
!11352 = !DILocation(line: 546, column: 9, scope: !11338)
!11353 = !DILocation(line: 548, column: 7, scope: !11338)
!11354 = !DILocation(line: 552, column: 9, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11333, file: !11053, line: 550, column: 7)
!11356 = !DILocation(line: 555, column: 21, scope: !11355)
!11357 = !DILocation(line: 558, column: 9, scope: !11355)
!11358 = !DILocation(line: 558, column: 15, scope: !11355)
!11359 = !DILocation(line: 558, column: 51, scope: !11355)
!11360 = !DILocation(line: 560, column: 15, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11362, file: !11053, line: 560, column: 14)
!11362 = distinct !DILexicalBlock(scope: !11355, file: !11053, line: 559, column: 9)
!11363 = !DILocation(line: 560, column: 29, scope: !11361)
!11364 = !DILocation(line: 560, column: 42, scope: !11361)
!11365 = !DILocation(line: 560, column: 14, scope: !11362)
!11366 = distinct !{!11366, !11357, !11367}
!11367 = !DILocation(line: 564, column: 9, scope: !11355)
!11368 = !DILocation(line: 569, column: 27, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11118, file: !11053, line: 569, column: 6)
!11370 = !DILocation(line: 569, column: 43, scope: !11369)
!11371 = !DILocation(line: 569, column: 69, scope: !11369)
!11372 = !DILocation(line: 569, column: 6, scope: !11118)
!11373 = !DILocation(line: 575, column: 27, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11375, file: !11053, line: 575, column: 8)
!11375 = distinct !DILexicalBlock(scope: !11369, file: !11053, line: 570, column: 3)
!11376 = !DILocation(line: 575, column: 36, scope: !11374)
!11377 = !DILocation(line: 575, column: 8, scope: !11375)
!11378 = !DILocation(line: 578, column: 7, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11374, file: !11053, line: 576, column: 5)
!11380 = !DILocation(line: 581, column: 19, scope: !11379)
!11381 = !DILocation(line: 584, column: 7, scope: !11379)
!11382 = !DILocation(line: 584, column: 13, scope: !11379)
!11383 = !DILocation(line: 584, column: 49, scope: !11379)
!11384 = !DILocation(line: 586, column: 13, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11386, file: !11053, line: 586, column: 12)
!11386 = distinct !DILexicalBlock(scope: !11379, file: !11053, line: 585, column: 7)
!11387 = !DILocation(line: 586, column: 27, scope: !11385)
!11388 = !DILocation(line: 586, column: 41, scope: !11385)
!11389 = !DILocation(line: 586, column: 12, scope: !11386)
!11390 = distinct !{!11390, !11381, !11391}
!11391 = !DILocation(line: 590, column: 7, scope: !11379)
!11392 = !DILocation(line: 595, column: 7, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11374, file: !11053, line: 593, column: 5)
!11394 = !DILocation(line: 598, column: 19, scope: !11393)
!11395 = !DILocation(line: 601, column: 7, scope: !11393)
!11396 = !DILocation(line: 601, column: 13, scope: !11393)
!11397 = !DILocation(line: 601, column: 49, scope: !11393)
!11398 = !DILocation(line: 603, column: 13, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11400, file: !11053, line: 603, column: 12)
!11400 = distinct !DILexicalBlock(scope: !11393, file: !11053, line: 602, column: 7)
!11401 = !DILocation(line: 603, column: 27, scope: !11399)
!11402 = !DILocation(line: 603, column: 41, scope: !11399)
!11403 = !DILocation(line: 603, column: 12, scope: !11400)
!11404 = distinct !{!11404, !11395, !11405}
!11405 = !DILocation(line: 607, column: 7, scope: !11393)
!11406 = !DILocation(line: 611, column: 27, scope: !11151)
!11407 = !DILocation(line: 611, column: 43, scope: !11151)
!11408 = !DILocation(line: 611, column: 69, scope: !11151)
!11409 = !DILocation(line: 611, column: 6, scope: !11118)
!11410 = !DILocation(line: 0, scope: !11150)
!11411 = !DILocation(line: 620, column: 8, scope: !11156)
!11412 = !DILocation(line: 620, column: 8, scope: !11150)
!11413 = !DILocation(line: 622, column: 7, scope: !11154)
!11414 = !DILocation(line: 622, column: 7, scope: !11155)
!11415 = !DILocation(line: 624, column: 5, scope: !11155)
!11416 = !DILocation(line: 626, column: 8, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11150, file: !11053, line: 626, column: 8)
!11418 = !DILocation(line: 626, column: 8, scope: !11150)
!11419 = !DILocation(line: 629, column: 7, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11417, file: !11053, line: 627, column: 5)
!11421 = !DILocation(line: 632, column: 19, scope: !11420)
!11422 = !DILocation(line: 634, column: 7, scope: !11420)
!11423 = !DILocation(line: 634, column: 13, scope: !11420)
!11424 = !DILocation(line: 636, column: 13, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11426, file: !11053, line: 636, column: 12)
!11426 = distinct !DILexicalBlock(scope: !11420, file: !11053, line: 635, column: 7)
!11427 = !DILocation(line: 636, column: 27, scope: !11425)
!11428 = !DILocation(line: 636, column: 40, scope: !11425)
!11429 = !DILocation(line: 636, column: 12, scope: !11426)
!11430 = distinct !{!11430, !11422, !11431}
!11431 = !DILocation(line: 640, column: 7, scope: !11420)
!11432 = !DILocation(line: 644, column: 5, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11434, file: !11053, line: 644, column: 5)
!11434 = distinct !DILexicalBlock(scope: !11150, file: !11053, line: 644, column: 5)
!11435 = !DILocation(line: 644, column: 5, scope: !11434)
!11436 = !DILocation(line: 644, column: 5, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11433, file: !11053, line: 644, column: 5)
!11438 = !DILocation(line: 644, column: 5, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11440, file: !11053, line: 644, column: 5)
!11440 = distinct !DILexicalBlock(scope: !11433, file: !11053, line: 644, column: 5)
!11441 = !DILocation(line: 644, column: 5, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11443, file: !11053, line: 644, column: 5)
!11443 = distinct !DILexicalBlock(scope: !11440, file: !11053, line: 644, column: 5)
!11444 = !DILocation(line: 644, column: 5, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11443, file: !11053, line: 644, column: 5)
!11446 = !DILocation(line: 0, scope: !11433)
!11447 = !DILocation(line: 646, column: 27, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11150, file: !11053, line: 646, column: 8)
!11449 = !DILocation(line: 646, column: 36, scope: !11448)
!11450 = !DILocation(line: 0, scope: !11448)
!11451 = !DILocation(line: 646, column: 8, scope: !11150)
!11452 = !DILocation(line: 652, column: 13, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11448, file: !11053, line: 647, column: 5)
!11454 = !DILocation(line: 652, column: 49, scope: !11453)
!11455 = !DILocation(line: 652, column: 7, scope: !11453)
!11456 = !DILocation(line: 654, column: 13, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11458, file: !11053, line: 654, column: 12)
!11458 = distinct !DILexicalBlock(scope: !11453, file: !11053, line: 653, column: 7)
!11459 = !DILocation(line: 654, column: 27, scope: !11457)
!11460 = !DILocation(line: 654, column: 41, scope: !11457)
!11461 = !DILocation(line: 654, column: 12, scope: !11458)
!11462 = distinct !{!11462, !11455, !11463}
!11463 = !DILocation(line: 658, column: 7, scope: !11453)
!11464 = !DILocation(line: 666, column: 13, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11448, file: !11053, line: 661, column: 5)
!11466 = !DILocation(line: 666, column: 49, scope: !11465)
!11467 = !DILocation(line: 666, column: 7, scope: !11465)
!11468 = !DILocation(line: 668, column: 13, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11470, file: !11053, line: 668, column: 12)
!11470 = distinct !DILexicalBlock(scope: !11465, file: !11053, line: 667, column: 7)
!11471 = !DILocation(line: 668, column: 27, scope: !11469)
!11472 = !DILocation(line: 668, column: 41, scope: !11469)
!11473 = !DILocation(line: 668, column: 12, scope: !11470)
!11474 = distinct !{!11474, !11467, !11475}
!11475 = !DILocation(line: 672, column: 7, scope: !11465)
!11476 = !DILocation(line: 676, column: 8, scope: !11150)
!11477 = !DILocation(line: 678, column: 7, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11479, file: !11053, line: 677, column: 5)
!11479 = distinct !DILexicalBlock(scope: !11150, file: !11053, line: 676, column: 8)
!11480 = !DILocation(line: 679, column: 5, scope: !11478)
!11481 = !DILocation(line: 685, column: 31, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11118, file: !11053, line: 685, column: 7)
!11483 = !DILocation(line: 685, column: 41, scope: !11482)
!11484 = !DILocation(line: 685, column: 7, scope: !11118)
!11485 = !DILocation(line: 688, column: 22, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11487, file: !11053, line: 688, column: 8)
!11487 = distinct !DILexicalBlock(scope: !11482, file: !11053, line: 686, column: 3)
!11488 = !DILocation(line: 688, column: 8, scope: !11487)
!11489 = !DILocation(line: 690, column: 44, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11491, file: !11053, line: 690, column: 10)
!11491 = distinct !DILexicalBlock(scope: !11486, file: !11053, line: 689, column: 5)
!11492 = !DILocation(line: 0, scope: !11490)
!11493 = !DILocation(line: 690, column: 10, scope: !11491)
!11494 = !DILocation(line: 704, column: 15, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11490, file: !11053, line: 691, column: 7)
!11496 = !DILocation(line: 704, column: 51, scope: !11495)
!11497 = !DILocation(line: 704, column: 9, scope: !11495)
!11498 = !DILocation(line: 706, column: 15, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11500, file: !11053, line: 706, column: 14)
!11500 = distinct !DILexicalBlock(scope: !11495, file: !11053, line: 705, column: 9)
!11501 = !DILocation(line: 706, column: 29, scope: !11499)
!11502 = !DILocation(line: 706, column: 43, scope: !11499)
!11503 = !DILocation(line: 706, column: 14, scope: !11500)
!11504 = distinct !{!11504, !11497, !11505}
!11505 = !DILocation(line: 710, column: 9, scope: !11495)
!11506 = !DILocation(line: 713, column: 9, scope: !11495)
!11507 = !DILocation(line: 717, column: 9, scope: !11495)
!11508 = !DILocation(line: 720, column: 21, scope: !11495)
!11509 = !DILocation(line: 723, column: 9, scope: !11495)
!11510 = !DILocation(line: 723, column: 15, scope: !11495)
!11511 = !DILocation(line: 723, column: 51, scope: !11495)
!11512 = !DILocation(line: 725, column: 15, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11514, file: !11053, line: 725, column: 14)
!11514 = distinct !DILexicalBlock(scope: !11495, file: !11053, line: 724, column: 9)
!11515 = !DILocation(line: 725, column: 29, scope: !11513)
!11516 = !DILocation(line: 725, column: 43, scope: !11513)
!11517 = !DILocation(line: 725, column: 14, scope: !11514)
!11518 = distinct !{!11518, !11509, !11519}
!11519 = !DILocation(line: 729, column: 9, scope: !11495)
!11520 = !DILocation(line: 740, column: 15, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11490, file: !11053, line: 732, column: 7)
!11522 = !DILocation(line: 740, column: 51, scope: !11521)
!11523 = !DILocation(line: 740, column: 9, scope: !11521)
!11524 = !DILocation(line: 742, column: 15, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11526, file: !11053, line: 742, column: 14)
!11526 = distinct !DILexicalBlock(scope: !11521, file: !11053, line: 741, column: 9)
!11527 = !DILocation(line: 742, column: 29, scope: !11525)
!11528 = !DILocation(line: 742, column: 43, scope: !11525)
!11529 = !DILocation(line: 742, column: 14, scope: !11526)
!11530 = distinct !{!11530, !11523, !11531}
!11531 = !DILocation(line: 746, column: 9, scope: !11521)
!11532 = !DILocation(line: 752, column: 44, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11534, file: !11053, line: 752, column: 10)
!11534 = distinct !DILexicalBlock(scope: !11486, file: !11053, line: 750, column: 5)
!11535 = !DILocation(line: 752, column: 10, scope: !11534)
!11536 = !DILocation(line: 759, column: 27, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11533, file: !11053, line: 757, column: 7)
!11538 = !DILocation(line: 760, column: 13, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11537, file: !11053, line: 760, column: 12)
!11540 = !DILocation(line: 760, column: 77, scope: !11539)
!11541 = !DILocation(line: 760, column: 51, scope: !11539)
!11542 = !DILocation(line: 760, column: 88, scope: !11539)
!11543 = !DILocation(line: 761, column: 13, scope: !11539)
!11544 = !DILocation(line: 761, column: 77, scope: !11539)
!11545 = !DILocation(line: 761, column: 51, scope: !11539)
!11546 = !DILocation(line: 761, column: 85, scope: !11539)
!11547 = !DILocation(line: 762, column: 13, scope: !11539)
!11548 = !DILocation(line: 762, column: 77, scope: !11539)
!11549 = !DILocation(line: 762, column: 51, scope: !11539)
!11550 = !DILocation(line: 760, column: 12, scope: !11537)
!11551 = !DILocation(line: 770, column: 3, scope: !11118)
!11552 = !DILocation(line: 771, column: 1, scope: !11118)
!11553 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !11053, file: !11053, line: 1343, type: !11116, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11554)
!11554 = !{!11555, !11556, !11557, !11558}
!11555 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !11553, file: !11053, line: 1343, type: !110)
!11556 = !DILocalVariable(name: "vos", scope: !11553, file: !11053, line: 1345, type: !110)
!11557 = !DILocalVariable(name: "latency", scope: !11553, file: !11053, line: 1346, type: !110)
!11558 = !DILocalVariable(name: "tmpreg", scope: !11559, file: !11053, line: 1357, type: !316)
!11559 = distinct !DILexicalBlock(scope: !11560, file: !11053, line: 1357, column: 7)
!11560 = distinct !DILexicalBlock(scope: !11561, file: !11053, line: 1356, column: 5)
!11561 = distinct !DILexicalBlock(scope: !11562, file: !11053, line: 1351, column: 8)
!11562 = distinct !DILexicalBlock(scope: !11563, file: !11053, line: 1350, column: 3)
!11563 = distinct !DILexicalBlock(scope: !11553, file: !11053, line: 1349, column: 7)
!11564 = !DILocation(line: 0, scope: !11553)
!11565 = !DILocation(line: 1349, column: 7, scope: !11563)
!11566 = !DILocation(line: 1349, column: 42, scope: !11563)
!11567 = !DILocation(line: 1349, column: 7, scope: !11553)
!11568 = !DILocation(line: 1351, column: 8, scope: !11561)
!11569 = !DILocation(line: 1351, column: 8, scope: !11562)
!11570 = !DILocation(line: 1353, column: 13, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11561, file: !11053, line: 1352, column: 5)
!11572 = !DILocation(line: 1354, column: 5, scope: !11571)
!11573 = !DILocation(line: 1357, column: 7, scope: !11559)
!11574 = !DILocation(line: 1357, column: 7, scope: !11560)
!11575 = !DILocation(line: 1358, column: 13, scope: !11560)
!11576 = !DILocation(line: 1359, column: 7, scope: !11560)
!11577 = !DILocation(line: 0, scope: !11561)
!11578 = !DILocation(line: 1363, column: 13, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11562, file: !11053, line: 1363, column: 8)
!11580 = !DILocation(line: 1363, column: 46, scope: !11579)
!11581 = !DILocation(line: 1369, column: 3, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11553, file: !11053, line: 1369, column: 3)
!11583 = !DILocation(line: 1369, column: 3, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11585, file: !11053, line: 1369, column: 3)
!11585 = distinct !DILexicalBlock(scope: !11582, file: !11053, line: 1369, column: 3)
!11586 = !DILocation(line: 1373, column: 6, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11553, file: !11053, line: 1373, column: 6)
!11588 = !DILocation(line: 1379, column: 1, scope: !11553)
!11589 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11053, file: !11053, line: 799, type: !11590, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11601)
!11590 = !DISubroutineType(types: !11591)
!11591 = !{!11056, !11592, !110}
!11592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11593, size: 32)
!11593 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11123, line: 304, baseType: !11594)
!11594 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11123, line: 288, size: 160, elements: !11595)
!11595 = !{!11596, !11597, !11598, !11599, !11600}
!11596 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11594, file: !11123, line: 290, baseType: !110, size: 32)
!11597 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11594, file: !11123, line: 293, baseType: !110, size: 32, offset: 32)
!11598 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11594, file: !11123, line: 296, baseType: !110, size: 32, offset: 64)
!11599 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11594, file: !11123, line: 299, baseType: !110, size: 32, offset: 96)
!11600 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11594, file: !11123, line: 302, baseType: !110, size: 32, offset: 128)
!11601 = !{!11602, !11603, !11604, !11605}
!11602 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11589, file: !11053, line: 799, type: !11592)
!11603 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11589, file: !11053, line: 799, type: !110)
!11604 = !DILocalVariable(name: "tickstart", scope: !11589, file: !11053, line: 801, type: !110)
!11605 = !DILocalVariable(name: "status", scope: !11589, file: !11053, line: 802, type: !11056)
!11606 = !DILocation(line: 0, scope: !11589)
!11607 = !DILocation(line: 805, column: 24, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11589, file: !11053, line: 805, column: 6)
!11609 = !DILocation(line: 805, column: 6, scope: !11589)
!11610 = !DILocation(line: 817, column: 17, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11589, file: !11053, line: 817, column: 6)
!11612 = !DILocation(line: 817, column: 15, scope: !11611)
!11613 = !DILocation(line: 817, column: 6, scope: !11589)
!11614 = !DILocation(line: 820, column: 5, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11616, file: !11053, line: 820, column: 5)
!11616 = distinct !DILexicalBlock(scope: !11617, file: !11053, line: 820, column: 5)
!11617 = distinct !DILexicalBlock(scope: !11611, file: !11053, line: 818, column: 3)
!11618 = !DILocation(line: 820, column: 5, scope: !11616)
!11619 = !DILocation(line: 820, column: 5, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11615, file: !11053, line: 820, column: 5)
!11621 = !DILocation(line: 824, column: 8, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11617, file: !11053, line: 824, column: 8)
!11623 = !DILocation(line: 824, column: 34, scope: !11622)
!11624 = !DILocation(line: 824, column: 8, scope: !11617)
!11625 = !DILocation(line: 831, column: 27, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11589, file: !11053, line: 831, column: 6)
!11627 = !DILocation(line: 831, column: 38, scope: !11626)
!11628 = !DILocation(line: 831, column: 60, scope: !11626)
!11629 = !DILocation(line: 831, column: 6, scope: !11589)
!11630 = !DILocation(line: 834, column: 5, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11626, file: !11053, line: 832, column: 3)
!11632 = !DILocation(line: 838, column: 27, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11589, file: !11053, line: 838, column: 6)
!11634 = !DILocation(line: 835, column: 3, scope: !11631)
!11635 = !DILocation(line: 838, column: 38, scope: !11633)
!11636 = !DILocation(line: 838, column: 62, scope: !11633)
!11637 = !DILocation(line: 838, column: 6, scope: !11589)
!11638 = !DILocation(line: 843, column: 27, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11640, file: !11053, line: 843, column: 8)
!11640 = distinct !DILexicalBlock(scope: !11633, file: !11053, line: 839, column: 3)
!11641 = !DILocation(line: 843, column: 8, scope: !11640)
!11642 = !DILocation(line: 846, column: 10, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11644, file: !11053, line: 846, column: 10)
!11644 = distinct !DILexicalBlock(scope: !11639, file: !11053, line: 844, column: 5)
!11645 = !DILocation(line: 846, column: 46, scope: !11643)
!11646 = !DILocation(line: 846, column: 10, scope: !11644)
!11647 = !DILocation(line: 855, column: 10, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11649, file: !11053, line: 855, column: 10)
!11649 = distinct !DILexicalBlock(scope: !11650, file: !11053, line: 853, column: 5)
!11650 = distinct !DILexicalBlock(scope: !11639, file: !11053, line: 852, column: 13)
!11651 = !DILocation(line: 855, column: 46, scope: !11648)
!11652 = !DILocation(line: 855, column: 10, scope: !11649)
!11653 = !DILocation(line: 864, column: 10, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11655, file: !11053, line: 864, column: 10)
!11655 = distinct !DILexicalBlock(scope: !11656, file: !11053, line: 862, column: 5)
!11656 = distinct !DILexicalBlock(scope: !11650, file: !11053, line: 861, column: 13)
!11657 = !DILocation(line: 864, column: 46, scope: !11654)
!11658 = !DILocation(line: 864, column: 10, scope: !11655)
!11659 = !DILocation(line: 873, column: 10, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11661, file: !11053, line: 873, column: 10)
!11661 = distinct !DILexicalBlock(scope: !11656, file: !11053, line: 871, column: 5)
!11662 = !DILocation(line: 873, column: 46, scope: !11660)
!11663 = !DILocation(line: 873, column: 10, scope: !11661)
!11664 = !DILocation(line: 878, column: 5, scope: !11640)
!11665 = !DILocation(line: 881, column: 17, scope: !11640)
!11666 = !DILocation(line: 883, column: 27, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11640, file: !11053, line: 883, column: 8)
!11668 = !DILocation(line: 883, column: 8, scope: !11640)
!11669 = !DILocation(line: 885, column: 14, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11667, file: !11053, line: 884, column: 5)
!11671 = !DILocation(line: 885, column: 44, scope: !11670)
!11672 = !DILocation(line: 885, column: 7, scope: !11670)
!11673 = !DILocation(line: 887, column: 13, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !11053, line: 887, column: 12)
!11675 = distinct !DILexicalBlock(scope: !11670, file: !11053, line: 886, column: 7)
!11676 = !DILocation(line: 887, column: 27, scope: !11674)
!11677 = !DILocation(line: 887, column: 41, scope: !11674)
!11678 = !DILocation(line: 887, column: 12, scope: !11675)
!11679 = distinct !{!11679, !11672, !11680}
!11680 = !DILocation(line: 891, column: 7, scope: !11670)
!11681 = !DILocation(line: 895, column: 14, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11683, file: !11053, line: 894, column: 5)
!11683 = distinct !DILexicalBlock(scope: !11667, file: !11053, line: 893, column: 13)
!11684 = !DILocation(line: 895, column: 44, scope: !11682)
!11685 = !DILocation(line: 895, column: 7, scope: !11682)
!11686 = !DILocation(line: 897, column: 13, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11688, file: !11053, line: 897, column: 12)
!11688 = distinct !DILexicalBlock(scope: !11682, file: !11053, line: 896, column: 7)
!11689 = !DILocation(line: 897, column: 27, scope: !11687)
!11690 = !DILocation(line: 897, column: 41, scope: !11687)
!11691 = !DILocation(line: 897, column: 12, scope: !11688)
!11692 = distinct !{!11692, !11685, !11693}
!11693 = !DILocation(line: 901, column: 7, scope: !11682)
!11694 = !DILocation(line: 905, column: 14, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11696, file: !11053, line: 904, column: 5)
!11696 = distinct !DILexicalBlock(scope: !11683, file: !11053, line: 903, column: 13)
!11697 = !DILocation(line: 905, column: 44, scope: !11695)
!11698 = !DILocation(line: 905, column: 7, scope: !11695)
!11699 = !DILocation(line: 907, column: 13, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11701, file: !11053, line: 907, column: 12)
!11701 = distinct !DILexicalBlock(scope: !11695, file: !11053, line: 906, column: 7)
!11702 = !DILocation(line: 907, column: 27, scope: !11700)
!11703 = !DILocation(line: 907, column: 41, scope: !11700)
!11704 = !DILocation(line: 907, column: 12, scope: !11701)
!11705 = distinct !{!11705, !11698, !11706}
!11706 = !DILocation(line: 911, column: 7, scope: !11695)
!11707 = !DILocation(line: 915, column: 13, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11696, file: !11053, line: 914, column: 5)
!11709 = !DILocation(line: 915, column: 43, scope: !11708)
!11710 = !DILocation(line: 915, column: 7, scope: !11708)
!11711 = !DILocation(line: 917, column: 13, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11713, file: !11053, line: 917, column: 12)
!11713 = distinct !DILexicalBlock(scope: !11708, file: !11053, line: 916, column: 7)
!11714 = !DILocation(line: 917, column: 27, scope: !11712)
!11715 = !DILocation(line: 917, column: 41, scope: !11712)
!11716 = !DILocation(line: 917, column: 12, scope: !11713)
!11717 = distinct !{!11717, !11710, !11718}
!11718 = !DILocation(line: 921, column: 7, scope: !11708)
!11719 = !DILocation(line: 925, column: 17, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11589, file: !11053, line: 925, column: 6)
!11721 = !DILocation(line: 925, column: 15, scope: !11720)
!11722 = !DILocation(line: 925, column: 6, scope: !11589)
!11723 = !DILocation(line: 928, column: 5, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11725, file: !11053, line: 928, column: 5)
!11725 = distinct !DILexicalBlock(scope: !11720, file: !11053, line: 926, column: 3)
!11726 = !DILocation(line: 932, column: 8, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11725, file: !11053, line: 932, column: 8)
!11728 = !DILocation(line: 932, column: 34, scope: !11727)
!11729 = !DILocation(line: 932, column: 8, scope: !11725)
!11730 = !DILocation(line: 939, column: 27, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11589, file: !11053, line: 939, column: 6)
!11732 = !DILocation(line: 939, column: 38, scope: !11731)
!11733 = !DILocation(line: 939, column: 61, scope: !11731)
!11734 = !DILocation(line: 939, column: 6, scope: !11589)
!11735 = !DILocation(line: 942, column: 5, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11731, file: !11053, line: 940, column: 3)
!11737 = !DILocation(line: 946, column: 27, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11589, file: !11053, line: 946, column: 6)
!11739 = !DILocation(line: 943, column: 3, scope: !11736)
!11740 = !DILocation(line: 946, column: 38, scope: !11738)
!11741 = !DILocation(line: 946, column: 61, scope: !11738)
!11742 = !DILocation(line: 946, column: 6, scope: !11589)
!11743 = !DILocation(line: 949, column: 5, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11738, file: !11053, line: 947, column: 3)
!11745 = !DILocation(line: 950, column: 3, scope: !11744)
!11746 = !DILocation(line: 953, column: 21, scope: !11589)
!11747 = !DILocation(line: 953, column: 70, scope: !11589)
!11748 = !DILocation(line: 953, column: 91, scope: !11589)
!11749 = !DILocation(line: 953, column: 50, scope: !11589)
!11750 = !DILocation(line: 953, column: 47, scope: !11589)
!11751 = !DILocation(line: 953, column: 19, scope: !11589)
!11752 = !DILocation(line: 956, column: 25, scope: !11589)
!11753 = !DILocation(line: 956, column: 12, scope: !11589)
!11754 = !DILocation(line: 958, column: 3, scope: !11589)
!11755 = !DILocation(line: 959, column: 1, scope: !11589)
!11756 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11053, file: !11053, line: 1083, type: !7393, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11757)
!11757 = !{!11758, !11759, !11760, !11761, !11762, !11763}
!11758 = !DILocalVariable(name: "tmpreg", scope: !11756, file: !11053, line: 1085, type: !110)
!11759 = !DILocalVariable(name: "pllm", scope: !11756, file: !11053, line: 1085, type: !110)
!11760 = !DILocalVariable(name: "plld", scope: !11756, file: !11053, line: 1085, type: !110)
!11761 = !DILocalVariable(name: "pllvco", scope: !11756, file: !11053, line: 1085, type: !110)
!11762 = !DILocalVariable(name: "msiclkrange", scope: !11756, file: !11053, line: 1085, type: !110)
!11763 = !DILocalVariable(name: "sysclockfreq", scope: !11756, file: !11053, line: 1085, type: !110)
!11764 = !DILocation(line: 1087, column: 17, scope: !11756)
!11765 = !DILocation(line: 0, scope: !11756)
!11766 = !DILocation(line: 1090, column: 3, scope: !11756)
!11767 = !DILocation(line: 1100, column: 7, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11769, file: !11053, line: 1098, column: 5)
!11769 = distinct !DILexicalBlock(scope: !11756, file: !11053, line: 1091, column: 3)
!11770 = !DILocation(line: 1104, column: 63, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11769, file: !11053, line: 1103, column: 5)
!11772 = !DILocation(line: 1104, column: 14, scope: !11771)
!11773 = !DILocation(line: 1105, column: 52, scope: !11771)
!11774 = !DILocation(line: 1105, column: 76, scope: !11771)
!11775 = !DILocation(line: 1106, column: 11, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11771, file: !11053, line: 1106, column: 11)
!11777 = !DILocation(line: 1106, column: 41, scope: !11776)
!11778 = !DILocation(line: 1106, column: 11, scope: !11771)
!11779 = !DILocation(line: 0, scope: !11776)
!11780 = !DILocation(line: 1117, column: 7, scope: !11771)
!11781 = !DILocation(line: 1122, column: 27, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11769, file: !11053, line: 1121, column: 5)
!11783 = !DILocation(line: 1122, column: 56, scope: !11782)
!11784 = !DILocation(line: 1123, column: 30, scope: !11782)
!11785 = !DILocation(line: 1124, column: 7, scope: !11782)
!11786 = !DILocation(line: 0, scope: !11769)
!11787 = !DILocation(line: 1127, column: 3, scope: !11756)
!11788 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11053, file: !11053, line: 1005, type: !8886, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11789)
!11789 = !{!11790, !11791, !11792, !11793, !11803}
!11790 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11788, file: !11053, line: 1005, type: !110)
!11791 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11788, file: !11053, line: 1005, type: !110)
!11792 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11788, file: !11053, line: 1005, type: !110)
!11793 = !DILocalVariable(name: "gpio", scope: !11788, file: !11053, line: 1007, type: !11794)
!11794 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11795, line: 64, baseType: !11796)
!11795 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11795, line: 48, size: 160, elements: !11797)
!11797 = !{!11798, !11799, !11800, !11801, !11802}
!11798 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11796, file: !11795, line: 50, baseType: !110, size: 32)
!11799 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11796, file: !11795, line: 53, baseType: !110, size: 32, offset: 32)
!11800 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11796, file: !11795, line: 56, baseType: !110, size: 32, offset: 64)
!11801 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11796, file: !11795, line: 59, baseType: !110, size: 32, offset: 96)
!11802 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11796, file: !11795, line: 62, baseType: !110, size: 32, offset: 128)
!11803 = !DILocalVariable(name: "tmpreg", scope: !11804, file: !11053, line: 1022, type: !316)
!11804 = distinct !DILexicalBlock(scope: !11788, file: !11053, line: 1022, column: 3)
!11805 = !DILocation(line: 0, scope: !11788)
!11806 = !DILocation(line: 1007, column: 3, scope: !11788)
!11807 = !DILocation(line: 1007, column: 20, scope: !11788)
!11808 = !DILocation(line: 1015, column: 8, scope: !11788)
!11809 = !DILocation(line: 1015, column: 18, scope: !11788)
!11810 = !DILocation(line: 1016, column: 8, scope: !11788)
!11811 = !DILocation(line: 1016, column: 18, scope: !11788)
!11812 = !DILocation(line: 1017, column: 8, scope: !11788)
!11813 = !DILocation(line: 1017, column: 18, scope: !11788)
!11814 = !DILocation(line: 1018, column: 8, scope: !11788)
!11815 = !DILocation(line: 1018, column: 18, scope: !11788)
!11816 = !DILocation(line: 1019, column: 8, scope: !11788)
!11817 = !DILocation(line: 1019, column: 18, scope: !11788)
!11818 = !DILocation(line: 1022, column: 3, scope: !11804)
!11819 = !DILocation(line: 1022, column: 3, scope: !11788)
!11820 = !DILocation(line: 1024, column: 3, scope: !11788)
!11821 = !DILocation(line: 1027, column: 3, scope: !11788)
!11822 = !DILocation(line: 1028, column: 1, scope: !11788)
!11823 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11795, file: !11795, line: 293, type: !11824, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2045)
!11824 = !DISubroutineType(types: !11825)
!11825 = !{null, !2959, !11826}
!11826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11794, size: 32)
!11827 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11053, file: !11053, line: 1039, type: !3062, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2045)
!11828 = !DILocation(line: 1041, column: 38, scope: !11827)
!11829 = !DILocation(line: 1042, column: 1, scope: !11827)
!11830 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11053, file: !11053, line: 1048, type: !3062, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2045)
!11831 = !DILocation(line: 1050, column: 38, scope: !11830)
!11832 = !DILocation(line: 1051, column: 1, scope: !11830)
!11833 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11053, file: !11053, line: 1139, type: !7393, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2045)
!11834 = !DILocation(line: 1141, column: 10, scope: !11833)
!11835 = !DILocation(line: 1141, column: 3, scope: !11833)
!11836 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11053, file: !11053, line: 1150, type: !7393, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2045)
!11837 = !DILocation(line: 1153, column: 11, scope: !11836)
!11838 = !DILocation(line: 1153, column: 56, scope: !11836)
!11839 = !DILocation(line: 1153, column: 79, scope: !11836)
!11840 = !DILocation(line: 1153, column: 36, scope: !11836)
!11841 = !DILocation(line: 1153, column: 33, scope: !11836)
!11842 = !DILocation(line: 1153, column: 3, scope: !11836)
!11843 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11053, file: !11053, line: 1162, type: !7393, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2045)
!11844 = !DILocation(line: 1165, column: 11, scope: !11843)
!11845 = !DILocation(line: 1165, column: 55, scope: !11843)
!11846 = !DILocation(line: 1165, column: 78, scope: !11843)
!11847 = !DILocation(line: 1165, column: 35, scope: !11843)
!11848 = !DILocation(line: 1165, column: 32, scope: !11843)
!11849 = !DILocation(line: 1165, column: 3, scope: !11843)
!11850 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11053, file: !11053, line: 1175, type: !11851, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11853)
!11851 = !DISubroutineType(types: !11852)
!11852 = !{null, !11121}
!11853 = !{!11854}
!11854 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11850, file: !11053, line: 1175, type: !11121)
!11855 = !DILocation(line: 0, scope: !11850)
!11856 = !DILocation(line: 1181, column: 22, scope: !11850)
!11857 = !DILocation(line: 1181, column: 37, scope: !11850)
!11858 = !DILocation(line: 1186, column: 12, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11850, file: !11053, line: 1186, column: 6)
!11860 = !DILocation(line: 1186, column: 15, scope: !11859)
!11861 = !DILocation(line: 1186, column: 31, scope: !11859)
!11862 = !DILocation(line: 1186, column: 6, scope: !11850)
!11863 = !DILocation(line: 1188, column: 24, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11859, file: !11053, line: 1187, column: 3)
!11865 = !DILocation(line: 1188, column: 33, scope: !11864)
!11866 = !DILocation(line: 1189, column: 3, scope: !11864)
!11867 = !DILocation(line: 1190, column: 17, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11859, file: !11053, line: 1190, column: 11)
!11869 = !DILocation(line: 1190, column: 20, scope: !11868)
!11870 = !DILocation(line: 1190, column: 35, scope: !11868)
!11871 = !DILocation(line: 0, scope: !11868)
!11872 = !DILocation(line: 1190, column: 11, scope: !11859)
!11873 = !DILocation(line: 1192, column: 33, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11868, file: !11053, line: 1191, column: 3)
!11875 = !DILocation(line: 1193, column: 3, scope: !11874)
!11876 = !DILocation(line: 1196, column: 33, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11868, file: !11053, line: 1195, column: 3)
!11878 = !DILocation(line: 1200, column: 12, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11850, file: !11053, line: 1200, column: 6)
!11880 = !DILocation(line: 1200, column: 15, scope: !11879)
!11881 = !DILocation(line: 1206, column: 24, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11879, file: !11053, line: 1205, column: 3)
!11883 = !DILocation(line: 1206, column: 33, scope: !11882)
!11884 = !DILocation(line: 1209, column: 61, scope: !11850)
!11885 = !DILocation(line: 1209, column: 88, scope: !11850)
!11886 = !DILocation(line: 1209, column: 22, scope: !11850)
!11887 = !DILocation(line: 1209, column: 42, scope: !11850)
!11888 = !DILocation(line: 1212, column: 12, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11850, file: !11053, line: 1212, column: 6)
!11890 = !DILocation(line: 1212, column: 6, scope: !11850)
!11891 = !DILocation(line: 1218, column: 24, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !11889, file: !11053, line: 1217, column: 3)
!11893 = !DILocation(line: 1218, column: 33, scope: !11892)
!11894 = !DILocation(line: 1221, column: 61, scope: !11850)
!11895 = !DILocation(line: 1221, column: 88, scope: !11850)
!11896 = !DILocation(line: 1221, column: 22, scope: !11850)
!11897 = !DILocation(line: 1221, column: 42, scope: !11850)
!11898 = !DILocation(line: 1222, column: 55, scope: !11850)
!11899 = !DILocation(line: 1222, column: 61, scope: !11850)
!11900 = !DILocation(line: 1222, column: 22, scope: !11850)
!11901 = !DILocation(line: 1222, column: 36, scope: !11850)
!11902 = !DILocation(line: 1225, column: 12, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11850, file: !11053, line: 1225, column: 6)
!11904 = !DILocation(line: 1225, column: 16, scope: !11903)
!11905 = !DILocation(line: 1225, column: 33, scope: !11903)
!11906 = !DILocation(line: 1225, column: 6, scope: !11850)
!11907 = !DILocation(line: 1227, column: 24, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11903, file: !11053, line: 1226, column: 3)
!11909 = !DILocation(line: 1227, column: 33, scope: !11908)
!11910 = !DILocation(line: 1228, column: 3, scope: !11908)
!11911 = !DILocation(line: 1229, column: 17, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11903, file: !11053, line: 1229, column: 11)
!11913 = !DILocation(line: 1229, column: 21, scope: !11912)
!11914 = !DILocation(line: 1229, column: 37, scope: !11912)
!11915 = !DILocation(line: 0, scope: !11912)
!11916 = !DILocation(line: 1229, column: 11, scope: !11903)
!11917 = !DILocation(line: 1231, column: 33, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11912, file: !11053, line: 1230, column: 3)
!11919 = !DILocation(line: 1232, column: 3, scope: !11918)
!11920 = !DILocation(line: 1235, column: 33, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11912, file: !11053, line: 1234, column: 3)
!11922 = !DILocation(line: 1239, column: 12, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11850, file: !11053, line: 1239, column: 6)
!11924 = !DILocation(line: 1239, column: 16, scope: !11923)
!11925 = !DILocation(line: 1245, column: 24, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11923, file: !11053, line: 1244, column: 3)
!11927 = !DILocation(line: 1245, column: 33, scope: !11926)
!11928 = !DILocation(line: 1250, column: 12, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11850, file: !11053, line: 1250, column: 6)
!11930 = !DILocation(line: 1250, column: 15, scope: !11929)
!11931 = !DILocation(line: 1250, column: 30, scope: !11929)
!11932 = !DILocation(line: 1250, column: 6, scope: !11850)
!11933 = !DILocation(line: 1256, column: 28, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11929, file: !11053, line: 1255, column: 3)
!11935 = !DILocation(line: 1256, column: 37, scope: !11934)
!11936 = !DILocation(line: 1258, column: 54, scope: !11850)
!11937 = !DILocation(line: 1258, column: 59, scope: !11850)
!11938 = !DILocation(line: 1258, column: 26, scope: !11850)
!11939 = !DILocation(line: 1258, column: 36, scope: !11850)
!11940 = !DILocation(line: 1259, column: 51, scope: !11850)
!11941 = !DILocation(line: 1259, column: 56, scope: !11850)
!11942 = !DILocation(line: 1259, column: 26, scope: !11850)
!11943 = !DILocation(line: 1259, column: 33, scope: !11850)
!11944 = !DILocation(line: 1260, column: 51, scope: !11850)
!11945 = !DILocation(line: 1260, column: 56, scope: !11850)
!11946 = !DILocation(line: 1260, column: 26, scope: !11850)
!11947 = !DILocation(line: 1260, column: 33, scope: !11850)
!11948 = !DILocation(line: 1261, column: 1, scope: !11850)
!11949 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11053, file: !11053, line: 1271, type: !11950, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11952)
!11950 = !DISubroutineType(types: !11951)
!11951 = !{null, !11592, !945}
!11952 = !{!11953, !11954}
!11953 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11949, file: !11053, line: 1271, type: !11592)
!11954 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11949, file: !11053, line: 1271, type: !945)
!11955 = !DILocation(line: 0, scope: !11949)
!11956 = !DILocation(line: 1278, column: 22, scope: !11949)
!11957 = !DILocation(line: 1278, column: 32, scope: !11949)
!11958 = !DILocation(line: 1281, column: 53, scope: !11949)
!11959 = !DILocation(line: 1281, column: 58, scope: !11949)
!11960 = !DILocation(line: 1281, column: 22, scope: !11949)
!11961 = !DILocation(line: 1281, column: 35, scope: !11949)
!11962 = !DILocation(line: 1284, column: 54, scope: !11949)
!11963 = !DILocation(line: 1284, column: 59, scope: !11949)
!11964 = !DILocation(line: 1284, column: 22, scope: !11949)
!11965 = !DILocation(line: 1284, column: 36, scope: !11949)
!11966 = !DILocation(line: 1287, column: 55, scope: !11949)
!11967 = !DILocation(line: 1287, column: 60, scope: !11949)
!11968 = !DILocation(line: 1287, column: 22, scope: !11949)
!11969 = !DILocation(line: 1287, column: 37, scope: !11949)
!11970 = !DILocation(line: 1290, column: 56, scope: !11949)
!11971 = !DILocation(line: 1290, column: 79, scope: !11949)
!11972 = !DILocation(line: 1290, column: 22, scope: !11949)
!11973 = !DILocation(line: 1290, column: 37, scope: !11949)
!11974 = !DILocation(line: 1293, column: 16, scope: !11949)
!11975 = !DILocation(line: 1293, column: 14, scope: !11949)
!11976 = !DILocation(line: 1294, column: 1, scope: !11949)
!11977 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11053, file: !11053, line: 1301, type: !3062, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2045)
!11978 = !DILocation(line: 1304, column: 6, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11977, file: !11053, line: 1304, column: 6)
!11980 = !DILocation(line: 1304, column: 6, scope: !11977)
!11981 = !DILocation(line: 1307, column: 5, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11979, file: !11053, line: 1305, column: 3)
!11983 = !DILocation(line: 1310, column: 5, scope: !11982)
!11984 = !DILocation(line: 1311, column: 3, scope: !11982)
!11985 = !DILocation(line: 1312, column: 1, scope: !11977)
!11986 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11053, file: !11053, line: 1318, type: !3062, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2045)
!11987 = !DILocation(line: 1323, column: 1, scope: !11986)
!11988 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11989, file: !11989, line: 147, type: !6074, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !11990)
!11989 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11990 = !{!11991}
!11991 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11988, file: !11989, line: 147, type: !110)
!11992 = !DILocation(line: 0, scope: !11988)
!11993 = !DILocation(line: 150, column: 3, scope: !11988)
!11994 = !DILocation(line: 151, column: 1, scope: !11988)
!11995 = distinct !DISubprogram(name: "LL_InitTick", scope: !11996, file: !11996, line: 222, type: !9426, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !11997)
!11996 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11997 = !{!11998, !11999}
!11998 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11995, file: !11996, line: 222, type: !110)
!11999 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11995, file: !11996, line: 222, type: !110)
!12000 = !DILocation(line: 0, scope: !11995)
!12001 = !DILocation(line: 225, column: 46, scope: !11995)
!12002 = !DILocation(line: 225, column: 55, scope: !11995)
!12003 = !DILocation(line: 225, column: 18, scope: !11995)
!12004 = !DILocation(line: 226, column: 18, scope: !11995)
!12005 = !DILocation(line: 227, column: 18, scope: !11995)
!12006 = !DILocation(line: 229, column: 1, scope: !11995)
!12007 = distinct !DISubprogram(name: "LL_mDelay", scope: !11989, file: !11989, line: 163, type: !6074, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !12008)
!12008 = !{!12009, !12010, !12011}
!12009 = !DILocalVariable(name: "Delay", arg: 1, scope: !12007, file: !11989, line: 163, type: !110)
!12010 = !DILocalVariable(name: "tmp", scope: !12007, file: !11989, line: 165, type: !316)
!12011 = !DILocalVariable(name: "tmpDelay", scope: !12007, file: !11989, line: 166, type: !110)
!12012 = !DILocation(line: 0, scope: !12007)
!12013 = !DILocation(line: 165, column: 3, scope: !12007)
!12014 = !DILocation(line: 165, column: 18, scope: !12007)
!12015 = !DILocation(line: 165, column: 33, scope: !12007)
!12016 = !DILocation(line: 169, column: 10, scope: !12007)
!12017 = !DILocation(line: 172, column: 15, scope: !12018)
!12018 = distinct !DILexicalBlock(scope: !12007, file: !11989, line: 172, column: 6)
!12019 = !DILocation(line: 177, column: 3, scope: !12007)
!12020 = !DILocation(line: 179, column: 18, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12022, file: !11989, line: 179, column: 8)
!12022 = distinct !DILexicalBlock(scope: !12007, file: !11989, line: 178, column: 3)
!12023 = !DILocation(line: 177, column: 19, scope: !12007)
!12024 = !DILocation(line: 184, column: 1, scope: !12007)
!12025 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11989, file: !11989, line: 227, type: !6074, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !12026)
!12026 = !{!12027}
!12027 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12025, file: !11989, line: 227, type: !110)
!12028 = !DILocation(line: 0, scope: !12025)
!12029 = !DILocation(line: 230, column: 19, scope: !12025)
!12030 = !DILocation(line: 231, column: 1, scope: !12025)
!12031 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11989, file: !11989, line: 242, type: !12032, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !12035)
!12032 = !DISubroutineType(types: !12033)
!12033 = !{!12034, !110}
!12034 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !909, line: 194, baseType: !908)
!12035 = !{!12036, !12037, !12038}
!12036 = !DILocalVariable(name: "Frequency", arg: 1, scope: !12031, file: !11989, line: 242, type: !110)
!12037 = !DILocalVariable(name: "status", scope: !12031, file: !11989, line: 244, type: !12034)
!12038 = !DILocalVariable(name: "latency", scope: !12031, file: !11989, line: 246, type: !110)
!12039 = !DILocation(line: 0, scope: !12031)
!12040 = !DILocation(line: 249, column: 25, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12031, file: !11989, line: 249, column: 7)
!12042 = !DILocation(line: 255, column: 9, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12044, file: !11989, line: 255, column: 9)
!12044 = distinct !DILexicalBlock(scope: !12041, file: !11989, line: 254, column: 3)
!12045 = !DILocation(line: 255, column: 41, scope: !12043)
!12046 = !DILocation(line: 255, column: 9, scope: !12044)
!12047 = !DILocation(line: 257, column: 21, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12049, file: !11989, line: 257, column: 11)
!12049 = distinct !DILexicalBlock(scope: !12043, file: !11989, line: 256, column: 5)
!12050 = !DILocation(line: 284, column: 9, scope: !12044)
!12051 = !DILocation(line: 264, column: 14, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12043, file: !11989, line: 264, column: 14)
!12053 = !DILocation(line: 264, column: 46, scope: !12052)
!12054 = !DILocation(line: 264, column: 14, scope: !12043)
!12055 = !DILocation(line: 266, column: 21, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12057, file: !11989, line: 266, column: 11)
!12057 = distinct !DILexicalBlock(scope: !12052, file: !11989, line: 265, column: 5)
!12058 = !DILocation(line: 275, column: 21, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12060, file: !11989, line: 275, column: 11)
!12060 = distinct !DILexicalBlock(scope: !12052, file: !11989, line: 274, column: 5)
!12061 = !DILocation(line: 286, column: 7, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12063, file: !11989, line: 285, column: 5)
!12063 = distinct !DILexicalBlock(scope: !12044, file: !11989, line: 284, column: 9)
!12064 = !DILocation(line: 287, column: 5, scope: !12062)
!12065 = !DILocation(line: 289, column: 5, scope: !12044)
!12066 = !DILocation(line: 293, column: 9, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12044, file: !11989, line: 293, column: 9)
!12068 = !DILocation(line: 293, column: 31, scope: !12067)
!12069 = !DILocation(line: 293, column: 9, scope: !12044)
!12070 = !DILocation(line: 298, column: 3, scope: !12031)
!12071 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !6088, file: !6088, line: 285, type: !7393, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !2045)
!12072 = !DILocation(line: 287, column: 21, scope: !12071)
!12073 = !DILocation(line: 287, column: 3, scope: !12071)
!12074 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !9425, file: !9425, line: 1897, type: !3062, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !2045)
!12075 = !DILocation(line: 1899, column: 3, scope: !12074)
!12076 = !DILocation(line: 1900, column: 1, scope: !12074)
!12077 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !9425, file: !9425, line: 1843, type: !6074, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !12078)
!12078 = !{!12079}
!12079 = !DILocalVariable(name: "Latency", arg: 1, scope: !12077, file: !9425, line: 1843, type: !110)
!12080 = !DILocation(line: 0, scope: !12077)
!12081 = !DILocation(line: 1845, column: 3, scope: !12077)
!12082 = !DILocation(line: 1846, column: 1, scope: !12077)
!12083 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !9425, file: !9425, line: 1855, type: !7393, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !2045)
!12084 = !DILocation(line: 1857, column: 21, scope: !12083)
!12085 = !DILocation(line: 1857, column: 3, scope: !12083)
!12086 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11989, file: !11989, line: 323, type: !12087, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !12102)
!12087 = !DISubroutineType(types: !12088)
!12088 = !{!12034, !12089, !12095}
!12089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12090, size: 32)
!12090 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11996, line: 103, baseType: !12091)
!12091 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11996, line: 90, size: 64, elements: !12092)
!12092 = !{!12093, !12094}
!12093 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !12091, file: !11996, line: 92, baseType: !110, size: 32)
!12094 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !12091, file: !11996, line: 98, baseType: !110, size: 32, offset: 32)
!12095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12096, size: 32)
!12096 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11996, line: 128, baseType: !12097)
!12097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11996, line: 108, size: 96, elements: !12098)
!12098 = !{!12099, !12100, !12101}
!12099 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12097, file: !11996, line: 110, baseType: !110, size: 32)
!12100 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12097, file: !11996, line: 116, baseType: !110, size: 32, offset: 32)
!12101 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12097, file: !11996, line: 122, baseType: !110, size: 32, offset: 64)
!12102 = !{!12103, !12104, !12105, !12106}
!12103 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12086, file: !11989, line: 323, type: !12089)
!12104 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12086, file: !11989, line: 324, type: !12095)
!12105 = !DILocalVariable(name: "status", scope: !12086, file: !11989, line: 326, type: !12034)
!12106 = !DILocalVariable(name: "pllfreq", scope: !12086, file: !11989, line: 327, type: !110)
!12107 = !DILocation(line: 0, scope: !12086)
!12108 = !DILocation(line: 330, column: 7, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12086, file: !11989, line: 330, column: 7)
!12110 = !DILocation(line: 330, column: 26, scope: !12109)
!12111 = !DILocation(line: 330, column: 7, scope: !12086)
!12112 = !DILocation(line: 333, column: 15, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12109, file: !11989, line: 331, column: 3)
!12114 = !DILocation(line: 336, column: 9, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12113, file: !11989, line: 336, column: 9)
!12116 = !DILocation(line: 336, column: 30, scope: !12115)
!12117 = !DILocation(line: 336, column: 9, scope: !12113)
!12118 = !DILocation(line: 338, column: 7, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12115, file: !11989, line: 337, column: 5)
!12120 = !DILocation(line: 339, column: 7, scope: !12119)
!12121 = !DILocation(line: 339, column: 14, scope: !12119)
!12122 = !DILocation(line: 339, column: 35, scope: !12119)
!12123 = distinct !{!12123, !12120, !12124}
!12124 = !DILocation(line: 342, column: 7, scope: !12119)
!12125 = !DILocation(line: 346, column: 76, scope: !12113)
!12126 = !DILocation(line: 346, column: 105, scope: !12113)
!12127 = !DILocation(line: 346, column: 5, scope: !12113)
!12128 = !DILocation(line: 349, column: 14, scope: !12113)
!12129 = !DILocation(line: 350, column: 3, scope: !12113)
!12130 = !DILocation(line: 0, scope: !12109)
!12131 = !DILocation(line: 357, column: 3, scope: !12086)
!12132 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11989, file: !11989, line: 487, type: !12133, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !12135)
!12133 = !DISubroutineType(types: !12134)
!12134 = !{!12034}
!12135 = !{!12136}
!12136 = !DILocalVariable(name: "status", scope: !12132, file: !11989, line: 489, type: !12034)
!12137 = !DILocation(line: 0, scope: !12132)
!12138 = !DILocation(line: 492, column: 7, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12132, file: !11989, line: 492, column: 7)
!12140 = !DILocation(line: 492, column: 28, scope: !12139)
!12141 = !DILocation(line: 492, column: 7, scope: !12132)
!12142 = !DILocation(line: 498, column: 3, scope: !12132)
!12143 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11989, file: !11989, line: 457, type: !12144, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !12146)
!12144 = !DISubroutineType(types: !12145)
!12145 = !{!110, !110, !12089}
!12146 = !{!12147, !12148, !12149}
!12147 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12143, file: !11989, line: 457, type: !110)
!12148 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12143, file: !11989, line: 457, type: !12089)
!12149 = !DILocalVariable(name: "pllfreq", scope: !12143, file: !11989, line: 459, type: !110)
!12150 = !DILocation(line: 0, scope: !12143)
!12151 = !DILocation(line: 470, column: 68, scope: !12143)
!12152 = !DILocation(line: 470, column: 75, scope: !12143)
!12153 = !DILocation(line: 470, column: 35, scope: !12143)
!12154 = !DILocation(line: 470, column: 34, scope: !12143)
!12155 = !DILocation(line: 470, column: 32, scope: !12143)
!12156 = !DILocation(line: 475, column: 46, scope: !12143)
!12157 = !DILocation(line: 475, column: 53, scope: !12143)
!12158 = !DILocation(line: 475, column: 76, scope: !12143)
!12159 = !DILocation(line: 475, column: 21, scope: !12143)
!12160 = !DILocation(line: 478, column: 3, scope: !12143)
!12161 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8763, file: !8763, line: 612, type: !7393, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !2045)
!12162 = !DILocation(line: 614, column: 12, scope: !12161)
!12163 = !DILocation(line: 614, column: 11, scope: !12161)
!12164 = !DILocation(line: 614, column: 3, scope: !12161)
!12165 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8763, file: !8763, line: 592, type: !3062, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !2045)
!12166 = !DILocation(line: 594, column: 3, scope: !12165)
!12167 = !DILocation(line: 595, column: 1, scope: !12165)
!12168 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8763, file: !8763, line: 1219, type: !8886, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !12169)
!12169 = !{!12170, !12171, !12172}
!12170 = !DILocalVariable(name: "Source", arg: 1, scope: !12168, file: !8763, line: 1219, type: !110)
!12171 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !12168, file: !8763, line: 1219, type: !110)
!12172 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !12168, file: !8763, line: 1219, type: !110)
!12173 = !DILocation(line: 0, scope: !12168)
!12174 = !DILocation(line: 1221, column: 3, scope: !12168)
!12175 = !DILocation(line: 1222, column: 1, scope: !12168)
!12176 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11989, file: !11989, line: 510, type: !12177, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !12179)
!12177 = !DISubroutineType(types: !12178)
!12178 = !{!12034, !110, !12095}
!12179 = !{!12180, !12181, !12182, !12183}
!12180 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12176, file: !11989, line: 510, type: !110)
!12181 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12176, file: !11989, line: 510, type: !12095)
!12182 = !DILocalVariable(name: "status", scope: !12176, file: !11989, line: 512, type: !12034)
!12183 = !DILocalVariable(name: "hclk_frequency", scope: !12176, file: !11989, line: 513, type: !110)
!12184 = !DILocation(line: 0, scope: !12176)
!12185 = !DILocation(line: 520, column: 20, scope: !12176)
!12186 = !DILocation(line: 523, column: 7, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12176, file: !11989, line: 523, column: 7)
!12188 = !DILocation(line: 523, column: 23, scope: !12187)
!12189 = !DILocation(line: 523, column: 7, scope: !12176)
!12190 = !DILocation(line: 526, column: 14, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12187, file: !11989, line: 524, column: 3)
!12192 = !DILocation(line: 530, column: 14, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12176, file: !11989, line: 530, column: 7)
!12194 = !DILocation(line: 530, column: 7, scope: !12176)
!12195 = !DILocation(line: 533, column: 5, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12193, file: !11989, line: 531, column: 3)
!12197 = !DILocation(line: 534, column: 5, scope: !12196)
!12198 = !DILocation(line: 534, column: 12, scope: !12196)
!12199 = !DILocation(line: 534, column: 33, scope: !12196)
!12200 = distinct !{!12200, !12197, !12201}
!12201 = !DILocation(line: 537, column: 5, scope: !12196)
!12202 = !DILocation(line: 540, column: 49, scope: !12196)
!12203 = !DILocation(line: 540, column: 5, scope: !12196)
!12204 = !DILocation(line: 541, column: 5, scope: !12196)
!12205 = !DILocation(line: 542, column: 5, scope: !12196)
!12206 = !DILocation(line: 542, column: 12, scope: !12196)
!12207 = !DILocation(line: 542, column: 37, scope: !12196)
!12208 = distinct !{!12208, !12205, !12209}
!12209 = !DILocation(line: 545, column: 5, scope: !12196)
!12210 = !DILocation(line: 548, column: 50, scope: !12196)
!12211 = !DILocation(line: 548, column: 5, scope: !12196)
!12212 = !DILocation(line: 549, column: 50, scope: !12196)
!12213 = !DILocation(line: 549, column: 5, scope: !12196)
!12214 = !DILocation(line: 550, column: 3, scope: !12196)
!12215 = !DILocation(line: 553, column: 7, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12176, file: !11989, line: 553, column: 7)
!12217 = !DILocation(line: 553, column: 23, scope: !12216)
!12218 = !DILocation(line: 553, column: 7, scope: !12176)
!12219 = !DILocation(line: 556, column: 14, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !12216, file: !11989, line: 554, column: 3)
!12221 = !DILocation(line: 557, column: 3, scope: !12220)
!12222 = !DILocation(line: 560, column: 14, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12176, file: !11989, line: 560, column: 7)
!12224 = !DILocation(line: 560, column: 7, scope: !12176)
!12225 = !DILocation(line: 562, column: 5, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12223, file: !11989, line: 561, column: 3)
!12227 = !DILocation(line: 563, column: 3, scope: !12226)
!12228 = !DILocation(line: 565, column: 3, scope: !12176)
!12229 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8763, file: !8763, line: 1169, type: !3062, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !2045)
!12230 = !DILocation(line: 1171, column: 3, scope: !12229)
!12231 = !DILocation(line: 1172, column: 1, scope: !12229)
!12232 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8763, file: !8763, line: 1190, type: !7393, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !2045)
!12233 = !DILocation(line: 1192, column: 12, scope: !12232)
!12234 = !DILocation(line: 1192, column: 11, scope: !12232)
!12235 = !DILocation(line: 1192, column: 3, scope: !12232)
!12236 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8763, file: !8763, line: 944, type: !6074, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !12237)
!12237 = !{!12238}
!12238 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12236, file: !8763, line: 944, type: !110)
!12239 = !DILocation(line: 0, scope: !12236)
!12240 = !DILocation(line: 946, column: 3, scope: !12236)
!12241 = !DILocation(line: 947, column: 1, scope: !12236)
!12242 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8763, file: !8763, line: 910, type: !6074, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !12243)
!12243 = !{!12244}
!12244 = !DILocalVariable(name: "Source", arg: 1, scope: !12242, file: !8763, line: 910, type: !110)
!12245 = !DILocation(line: 0, scope: !12242)
!12246 = !DILocation(line: 912, column: 3, scope: !12242)
!12247 = !DILocation(line: 913, column: 1, scope: !12242)
!12248 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8763, file: !8763, line: 924, type: !7393, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !2045)
!12249 = !DILocation(line: 926, column: 21, scope: !12248)
!12250 = !DILocation(line: 926, column: 3, scope: !12248)
!12251 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8763, file: !8763, line: 960, type: !6074, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !12252)
!12252 = !{!12253}
!12253 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12251, file: !8763, line: 960, type: !110)
!12254 = !DILocation(line: 0, scope: !12251)
!12255 = !DILocation(line: 962, column: 3, scope: !12251)
!12256 = !DILocation(line: 963, column: 1, scope: !12251)
!12257 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8763, file: !8763, line: 976, type: !6074, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !12258)
!12258 = !{!12259}
!12259 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12257, file: !8763, line: 976, type: !110)
!12260 = !DILocation(line: 0, scope: !12257)
!12261 = !DILocation(line: 978, column: 3, scope: !12257)
!12262 = !DILocation(line: 979, column: 1, scope: !12257)
!12263 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11989, file: !11989, line: 385, type: !12264, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !12266)
!12264 = !DISubroutineType(types: !12265)
!12265 = !{!12034, !110, !110, !12089, !12095}
!12266 = !{!12267, !12268, !12269, !12270, !12271, !12272}
!12267 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12263, file: !11989, line: 385, type: !110)
!12268 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12263, file: !11989, line: 385, type: !110)
!12269 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12263, file: !11989, line: 386, type: !12089)
!12270 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12263, file: !11989, line: 386, type: !12095)
!12271 = !DILocalVariable(name: "status", scope: !12263, file: !11989, line: 388, type: !12034)
!12272 = !DILocalVariable(name: "pllfreq", scope: !12263, file: !11989, line: 389, type: !110)
!12273 = !DILocation(line: 0, scope: !12263)
!12274 = !DILocation(line: 396, column: 7, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12263, file: !11989, line: 396, column: 7)
!12276 = !DILocation(line: 396, column: 26, scope: !12275)
!12277 = !DILocation(line: 396, column: 7, scope: !12263)
!12278 = !DILocation(line: 400, column: 15, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12275, file: !11989, line: 397, column: 3)
!12280 = !DILocation(line: 403, column: 9, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12279, file: !11989, line: 403, column: 9)
!12282 = !DILocation(line: 403, column: 30, scope: !12281)
!12283 = !DILocation(line: 403, column: 9, scope: !12279)
!12284 = !DILocation(line: 406, column: 21, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12286, file: !11989, line: 406, column: 11)
!12286 = distinct !DILexicalBlock(scope: !12281, file: !11989, line: 404, column: 5)
!12287 = !DILocation(line: 406, column: 11, scope: !12286)
!12288 = !DILocation(line: 408, column: 9, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12285, file: !11989, line: 407, column: 7)
!12290 = !DILocation(line: 409, column: 7, scope: !12289)
!12291 = !DILocation(line: 412, column: 9, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12285, file: !11989, line: 411, column: 7)
!12293 = !DILocation(line: 416, column: 7, scope: !12286)
!12294 = !DILocation(line: 417, column: 7, scope: !12286)
!12295 = !DILocation(line: 417, column: 14, scope: !12286)
!12296 = !DILocation(line: 417, column: 35, scope: !12286)
!12297 = distinct !{!12297, !12294, !12298}
!12298 = !DILocation(line: 420, column: 7, scope: !12286)
!12299 = !DILocation(line: 424, column: 78, scope: !12279)
!12300 = !DILocation(line: 424, column: 107, scope: !12279)
!12301 = !DILocation(line: 424, column: 7, scope: !12279)
!12302 = !DILocation(line: 427, column: 14, scope: !12279)
!12303 = !DILocation(line: 428, column: 3, scope: !12279)
!12304 = !DILocation(line: 0, scope: !12275)
!12305 = !DILocation(line: 435, column: 3, scope: !12263)
!12306 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8763, file: !8763, line: 545, type: !7393, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !2045)
!12307 = !DILocation(line: 547, column: 12, scope: !12306)
!12308 = !DILocation(line: 547, column: 11, scope: !12306)
!12309 = !DILocation(line: 547, column: 3, scope: !12306)
!12310 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8763, file: !8763, line: 505, type: !3062, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !2045)
!12311 = !DILocation(line: 507, column: 3, scope: !12310)
!12312 = !DILocation(line: 508, column: 1, scope: !12310)
!12313 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8763, file: !8763, line: 515, type: !3062, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !2045)
!12314 = !DILocation(line: 517, column: 3, scope: !12313)
!12315 = !DILocation(line: 518, column: 1, scope: !12313)
!12316 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8763, file: !8763, line: 525, type: !3062, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2973, retainedNodes: !2045)
!12317 = !DILocation(line: 527, column: 3, scope: !12316)
!12318 = !DILocation(line: 528, column: 1, scope: !12316)
!12319 = distinct !DISubprogram(name: "z_device_state_init", scope: !12320, file: !12320, line: 23, type: !3062, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12321)
!12320 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12321 = !{!12322}
!12322 = !DILocalVariable(name: "dev", scope: !12319, file: !12320, line: 25, type: !12323)
!12323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12324, size: 32)
!12324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12325)
!12325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !12326)
!12326 = !{!12327, !12328, !12329, !12330, !12336, !12337}
!12327 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12325, file: !349, line: 380, baseType: !279, size: 32)
!12328 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12325, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!12329 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12325, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!12330 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12325, file: !349, line: 386, baseType: !12331, size: 32, offset: 96)
!12331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12332, size: 32)
!12332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !12333)
!12333 = !{!12334, !12335}
!12334 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12332, file: !349, line: 359, baseType: !178, size: 8)
!12335 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12332, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12336 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12325, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!12337 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12325, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!12338 = !DILocation(line: 0, scope: !12319)
!12339 = !DILocation(line: 31, column: 1, scope: !12319)
!12340 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12320, file: !12320, line: 33, type: !12341, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12343)
!12341 = !DISubroutineType(types: !12342)
!12342 = !{!12323, !279}
!12343 = !{!12344, !12345}
!12344 = !DILocalVariable(name: "name", arg: 1, scope: !12340, file: !12320, line: 33, type: !279)
!12345 = !DILocalVariable(name: "dev", scope: !12340, file: !12320, line: 35, type: !12323)
!12346 = !DILocation(line: 0, scope: !12340)
!12347 = !DILocation(line: 40, column: 12, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12340, file: !12320, line: 40, column: 6)
!12349 = !DILocation(line: 40, column: 21, scope: !12348)
!12350 = !DILocation(line: 40, column: 25, scope: !12348)
!12351 = !DILocation(line: 40, column: 33, scope: !12348)
!12352 = !DILocation(line: 40, column: 6, scope: !12340)
!12353 = !DILocation(line: 55, column: 2, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12340, file: !12320, line: 55, column: 2)
!12355 = !DILocation(line: 50, column: 7, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12357, file: !12320, line: 50, column: 7)
!12357 = distinct !DILexicalBlock(scope: !12358, file: !12320, line: 49, column: 57)
!12358 = distinct !DILexicalBlock(scope: !12359, file: !12320, line: 49, column: 2)
!12359 = distinct !DILexicalBlock(scope: !12340, file: !12320, line: 49, column: 2)
!12360 = !DILocation(line: 50, column: 30, scope: !12356)
!12361 = !DILocation(line: 50, column: 39, scope: !12356)
!12362 = !DILocation(line: 50, column: 44, scope: !12356)
!12363 = !DILocation(line: 50, column: 7, scope: !12357)
!12364 = !DILocation(line: 49, column: 53, scope: !12358)
!12365 = !DILocation(line: 49, column: 33, scope: !12358)
!12366 = !DILocation(line: 49, column: 2, scope: !12359)
!12367 = distinct !{!12367, !12366, !12368}
!12368 = !DILocation(line: 53, column: 2, scope: !12359)
!12369 = !DILocation(line: 56, column: 7, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12371, file: !12320, line: 56, column: 7)
!12371 = distinct !DILexicalBlock(scope: !12372, file: !12320, line: 55, column: 57)
!12372 = distinct !DILexicalBlock(scope: !12354, file: !12320, line: 55, column: 2)
!12373 = !DILocation(line: 56, column: 30, scope: !12370)
!12374 = !DILocation(line: 56, column: 52, scope: !12370)
!12375 = !DILocation(line: 56, column: 34, scope: !12370)
!12376 = !DILocation(line: 56, column: 58, scope: !12370)
!12377 = !DILocation(line: 56, column: 7, scope: !12371)
!12378 = !DILocation(line: 55, column: 53, scope: !12372)
!12379 = !DILocation(line: 55, column: 33, scope: !12372)
!12380 = distinct !{!12380, !12353, !12381}
!12381 = !DILocation(line: 59, column: 2, scope: !12354)
!12382 = !DILocation(line: 62, column: 1, scope: !12340)
!12383 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12320, file: !12320, line: 93, type: !12384, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12386)
!12384 = !DISubroutineType(types: !12385)
!12385 = !{!360, !12323}
!12386 = !{!12387}
!12387 = !DILocalVariable(name: "dev", arg: 1, scope: !12383, file: !12320, line: 93, type: !12323)
!12388 = !DILocation(line: 0, scope: !12383)
!12389 = !DILocation(line: 99, column: 10, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12383, file: !12320, line: 99, column: 6)
!12391 = !DILocation(line: 99, column: 6, scope: !12383)
!12392 = !DILocation(line: 103, column: 14, scope: !12383)
!12393 = !DILocation(line: 103, column: 21, scope: !12383)
!12394 = !DILocation(line: 103, column: 33, scope: !12383)
!12395 = !DILocation(line: 103, column: 49, scope: !12383)
!12396 = !DILocation(line: 103, column: 58, scope: !12383)
!12397 = !DILocation(line: 104, column: 1, scope: !12383)
!12398 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12320, file: !12320, line: 87, type: !12399, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12402)
!12399 = !DISubroutineType(types: !12400)
!12400 = !{!232, !12401}
!12401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12323, size: 32)
!12402 = !{!12403}
!12403 = !DILocalVariable(name: "devices", arg: 1, scope: !12398, file: !12320, line: 87, type: !12401)
!12404 = !DILocation(line: 0, scope: !12398)
!12405 = !DILocation(line: 89, column: 11, scope: !12398)
!12406 = !DILocation(line: 90, column: 2, scope: !12398)
!12407 = distinct !DISubprogram(name: "device_required_foreach", scope: !12320, file: !12320, line: 125, type: !12408, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12414)
!12408 = !DISubroutineType(types: !12409)
!12409 = !{!109, !12323, !12410, !107}
!12410 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !349, line: 471, baseType: !12411)
!12411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12412, size: 32)
!12412 = !DISubroutineType(types: !12413)
!12413 = !{!109, !12323, !107}
!12414 = !{!12415, !12416, !12417, !12418, !12419}
!12415 = !DILocalVariable(name: "dev", arg: 1, scope: !12407, file: !12320, line: 125, type: !12323)
!12416 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12407, file: !12320, line: 126, type: !12410)
!12417 = !DILocalVariable(name: "context", arg: 3, scope: !12407, file: !12320, line: 127, type: !107)
!12418 = !DILocalVariable(name: "handle_count", scope: !12407, file: !12320, line: 129, type: !232)
!12419 = !DILocalVariable(name: "handles", scope: !12407, file: !12320, line: 130, type: !363)
!12420 = !DILocation(line: 0, scope: !12407)
!12421 = !DILocation(line: 129, column: 2, scope: !12407)
!12422 = !DILocation(line: 129, column: 9, scope: !12407)
!12423 = !DILocation(line: 130, column: 35, scope: !12407)
!12424 = !DILocation(line: 132, column: 33, scope: !12407)
!12425 = !DILocation(line: 132, column: 9, scope: !12407)
!12426 = !DILocation(line: 133, column: 1, scope: !12407)
!12427 = !DILocation(line: 132, column: 2, scope: !12407)
!12428 = distinct !DISubprogram(name: "device_required_handles_get", scope: !349, file: !349, line: 493, type: !12429, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12431)
!12429 = !DISubroutineType(types: !12430)
!12430 = !{!363, !12323, !2561}
!12431 = !{!12432, !12433, !12434, !12435}
!12432 = !DILocalVariable(name: "dev", arg: 1, scope: !12428, file: !349, line: 493, type: !12323)
!12433 = !DILocalVariable(name: "count", arg: 2, scope: !12428, file: !349, line: 493, type: !2561)
!12434 = !DILocalVariable(name: "rv", scope: !12428, file: !349, line: 495, type: !363)
!12435 = !DILocalVariable(name: "i", scope: !12436, file: !349, line: 498, type: !232)
!12436 = distinct !DILexicalBlock(scope: !12437, file: !349, line: 497, column: 18)
!12437 = distinct !DILexicalBlock(scope: !12428, file: !349, line: 497, column: 6)
!12438 = !DILocation(line: 0, scope: !12428)
!12439 = !DILocation(line: 495, column: 35, scope: !12428)
!12440 = !DILocation(line: 497, column: 9, scope: !12437)
!12441 = !DILocation(line: 497, column: 6, scope: !12428)
!12442 = !DILocation(line: 0, scope: !12436)
!12443 = !DILocation(line: 500, column: 11, scope: !12436)
!12444 = !DILocation(line: 500, column: 40, scope: !12436)
!12445 = !DILocation(line: 502, column: 4, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12436, file: !349, line: 501, column: 40)
!12447 = distinct !{!12447, !12448, !12449}
!12448 = !DILocation(line: 500, column: 3, scope: !12436)
!12449 = !DILocation(line: 503, column: 3, scope: !12436)
!12450 = !DILocation(line: 504, column: 10, scope: !12436)
!12451 = !DILocation(line: 505, column: 2, scope: !12436)
!12452 = !DILocation(line: 507, column: 2, scope: !12428)
!12453 = distinct !DISubprogram(name: "device_visitor", scope: !12320, file: !12320, line: 106, type: !12454, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12456)
!12454 = !DISubroutineType(types: !12455)
!12455 = !{!109, !363, !232, !12410, !107}
!12456 = !{!12457, !12458, !12459, !12460, !12461, !12463, !12466, !12467}
!12457 = !DILocalVariable(name: "handles", arg: 1, scope: !12453, file: !12320, line: 106, type: !363)
!12458 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12453, file: !12320, line: 107, type: !232)
!12459 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12453, file: !12320, line: 108, type: !12410)
!12460 = !DILocalVariable(name: "context", arg: 4, scope: !12453, file: !12320, line: 109, type: !107)
!12461 = !DILocalVariable(name: "i", scope: !12462, file: !12320, line: 112, type: !232)
!12462 = distinct !DILexicalBlock(scope: !12453, file: !12320, line: 112, column: 2)
!12463 = !DILocalVariable(name: "dh", scope: !12464, file: !12320, line: 113, type: !365)
!12464 = distinct !DILexicalBlock(scope: !12465, file: !12320, line: 112, column: 44)
!12465 = distinct !DILexicalBlock(scope: !12462, file: !12320, line: 112, column: 2)
!12466 = !DILocalVariable(name: "rdev", scope: !12464, file: !12320, line: 114, type: !12323)
!12467 = !DILocalVariable(name: "rc", scope: !12464, file: !12320, line: 115, type: !109)
!12468 = !DILocation(line: 0, scope: !12453)
!12469 = !DILocation(line: 0, scope: !12462)
!12470 = !DILocation(line: 112, column: 23, scope: !12465)
!12471 = !DILocation(line: 112, column: 2, scope: !12462)
!12472 = distinct !{!12472, !12471, !12473}
!12473 = !DILocation(line: 120, column: 2, scope: !12462)
!12474 = !DILocation(line: 113, column: 24, scope: !12464)
!12475 = !DILocation(line: 0, scope: !12464)
!12476 = !DILocation(line: 114, column: 31, scope: !12464)
!12477 = !DILocation(line: 115, column: 12, scope: !12464)
!12478 = !DILocation(line: 117, column: 10, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12464, file: !12320, line: 117, column: 7)
!12480 = !DILocation(line: 112, column: 39, scope: !12465)
!12481 = !DILocation(line: 123, column: 1, scope: !12453)
!12482 = distinct !DISubprogram(name: "device_from_handle", scope: !349, file: !349, line: 439, type: !12483, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12485)
!12483 = !DISubroutineType(types: !12484)
!12484 = !{!12323, !365}
!12485 = !{!12486, !12487, !12488}
!12486 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12482, file: !349, line: 439, type: !365)
!12487 = !DILocalVariable(name: "dev", scope: !12482, file: !349, line: 443, type: !12323)
!12488 = !DILocalVariable(name: "numdev", scope: !12482, file: !349, line: 444, type: !232)
!12489 = !DILocation(line: 0, scope: !12482)
!12490 = !DILocation(line: 446, column: 7, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12482, file: !349, line: 446, column: 6)
!12492 = !DILocation(line: 446, column: 18, scope: !12491)
!12493 = !DILocation(line: 446, column: 23, scope: !12491)
!12494 = !DILocation(line: 450, column: 2, scope: !12482)
!12495 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12320, file: !12320, line: 135, type: !12408, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12496)
!12496 = !{!12497, !12498, !12499, !12500, !12501}
!12497 = !DILocalVariable(name: "dev", arg: 1, scope: !12495, file: !12320, line: 135, type: !12323)
!12498 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12495, file: !12320, line: 136, type: !12410)
!12499 = !DILocalVariable(name: "context", arg: 3, scope: !12495, file: !12320, line: 137, type: !107)
!12500 = !DILocalVariable(name: "handle_count", scope: !12495, file: !12320, line: 139, type: !232)
!12501 = !DILocalVariable(name: "handles", scope: !12495, file: !12320, line: 140, type: !363)
!12502 = !DILocation(line: 0, scope: !12495)
!12503 = !DILocation(line: 139, column: 2, scope: !12495)
!12504 = !DILocation(line: 139, column: 9, scope: !12495)
!12505 = !DILocation(line: 140, column: 35, scope: !12495)
!12506 = !DILocation(line: 142, column: 33, scope: !12495)
!12507 = !DILocation(line: 142, column: 9, scope: !12495)
!12508 = !DILocation(line: 143, column: 1, scope: !12495)
!12509 = !DILocation(line: 142, column: 2, scope: !12495)
!12510 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !349, file: !349, line: 573, type: !12429, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12511)
!12511 = !{!12512, !12513, !12514, !12515, !12516}
!12512 = !DILocalVariable(name: "dev", arg: 1, scope: !12510, file: !349, line: 573, type: !12323)
!12513 = !DILocalVariable(name: "count", arg: 2, scope: !12510, file: !349, line: 573, type: !2561)
!12514 = !DILocalVariable(name: "rv", scope: !12510, file: !349, line: 575, type: !363)
!12515 = !DILocalVariable(name: "region", scope: !12510, file: !349, line: 576, type: !232)
!12516 = !DILocalVariable(name: "i", scope: !12510, file: !349, line: 577, type: !232)
!12517 = !DILocation(line: 0, scope: !12510)
!12518 = !DILocation(line: 575, column: 35, scope: !12510)
!12519 = !DILocation(line: 579, column: 9, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12510, file: !349, line: 579, column: 6)
!12521 = !DILocation(line: 579, column: 6, scope: !12510)
!12522 = !DILocation(line: 582, column: 8, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12524, file: !349, line: 582, column: 8)
!12524 = distinct !DILexicalBlock(scope: !12525, file: !349, line: 581, column: 23)
!12525 = distinct !DILexicalBlock(scope: !12520, file: !349, line: 579, column: 18)
!12526 = !DILocation(line: 582, column: 12, scope: !12523)
!12527 = !DILocation(line: 585, column: 6, scope: !12524)
!12528 = !DILocation(line: 0, scope: !12525)
!12529 = !DILocation(line: 581, column: 17, scope: !12525)
!12530 = !DILocation(line: 581, column: 3, scope: !12525)
!12531 = !DILocation(line: 588, column: 10, scope: !12525)
!12532 = !DILocation(line: 588, column: 16, scope: !12525)
!12533 = !DILocation(line: 589, column: 4, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12525, file: !349, line: 588, column: 39)
!12535 = !DILocation(line: 588, column: 3, scope: !12525)
!12536 = distinct !{!12536, !12535, !12537}
!12537 = !DILocation(line: 590, column: 3, scope: !12525)
!12538 = !DILocation(line: 591, column: 10, scope: !12525)
!12539 = !DILocation(line: 592, column: 2, scope: !12525)
!12540 = !DILocation(line: 575, column: 25, scope: !12510)
!12541 = !DILocation(line: 594, column: 2, scope: !12510)
!12542 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1836, file: !1836, line: 49, type: !12543, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1833, retainedNodes: !2045)
!12543 = !DISubroutineType(types: !12544)
!12544 = !{!281}
!12545 = !DILocation(line: 51, column: 10, scope: !12542)
!12546 = !DILocation(line: 51, column: 20, scope: !12542)
!12547 = !DILocation(line: 51, column: 2, scope: !12542)
!12548 = distinct !DISubprogram(name: "coredump", scope: !3029, file: !3029, line: 209, type: !12549, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12698)
!12549 = !DISubroutineType(types: !12550)
!12550 = !{null, !32, !12551, !12595}
!12551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12552, size: 32)
!12552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12553)
!12553 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2691, line: 141, baseType: !12554)
!12554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2691, line: 97, size: 256, elements: !12555)
!12555 = !{!12556}
!12556 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12554, file: !2691, line: 107, baseType: !12557, size: 256)
!12557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2691, line: 98, size: 256, elements: !12558)
!12558 = !{!12559, !12564, !12569, !12574, !12579, !12584, !12589, !12594}
!12559 = !DIDerivedType(tag: DW_TAG_member, scope: !12557, file: !2691, line: 99, baseType: !12560, size: 32)
!12560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12557, file: !2691, line: 99, size: 32, elements: !12561)
!12561 = !{!12562, !12563}
!12562 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12560, file: !2691, line: 99, baseType: !110, size: 32)
!12563 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12560, file: !2691, line: 99, baseType: !110, size: 32)
!12564 = !DIDerivedType(tag: DW_TAG_member, scope: !12557, file: !2691, line: 100, baseType: !12565, size: 32, offset: 32)
!12565 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12557, file: !2691, line: 100, size: 32, elements: !12566)
!12566 = !{!12567, !12568}
!12567 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12565, file: !2691, line: 100, baseType: !110, size: 32)
!12568 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12565, file: !2691, line: 100, baseType: !110, size: 32)
!12569 = !DIDerivedType(tag: DW_TAG_member, scope: !12557, file: !2691, line: 101, baseType: !12570, size: 32, offset: 64)
!12570 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12557, file: !2691, line: 101, size: 32, elements: !12571)
!12571 = !{!12572, !12573}
!12572 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12570, file: !2691, line: 101, baseType: !110, size: 32)
!12573 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12570, file: !2691, line: 101, baseType: !110, size: 32)
!12574 = !DIDerivedType(tag: DW_TAG_member, scope: !12557, file: !2691, line: 102, baseType: !12575, size: 32, offset: 96)
!12575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12557, file: !2691, line: 102, size: 32, elements: !12576)
!12576 = !{!12577, !12578}
!12577 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12575, file: !2691, line: 102, baseType: !110, size: 32)
!12578 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12575, file: !2691, line: 102, baseType: !110, size: 32)
!12579 = !DIDerivedType(tag: DW_TAG_member, scope: !12557, file: !2691, line: 103, baseType: !12580, size: 32, offset: 128)
!12580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12557, file: !2691, line: 103, size: 32, elements: !12581)
!12581 = !{!12582, !12583}
!12582 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12580, file: !2691, line: 103, baseType: !110, size: 32)
!12583 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12580, file: !2691, line: 103, baseType: !110, size: 32)
!12584 = !DIDerivedType(tag: DW_TAG_member, scope: !12557, file: !2691, line: 104, baseType: !12585, size: 32, offset: 160)
!12585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12557, file: !2691, line: 104, size: 32, elements: !12586)
!12586 = !{!12587, !12588}
!12587 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12585, file: !2691, line: 104, baseType: !110, size: 32)
!12588 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12585, file: !2691, line: 104, baseType: !110, size: 32)
!12589 = !DIDerivedType(tag: DW_TAG_member, scope: !12557, file: !2691, line: 105, baseType: !12590, size: 32, offset: 192)
!12590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12557, file: !2691, line: 105, size: 32, elements: !12591)
!12591 = !{!12592, !12593}
!12592 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12590, file: !2691, line: 105, baseType: !110, size: 32)
!12593 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12590, file: !2691, line: 105, baseType: !110, size: 32)
!12594 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12557, file: !2691, line: 106, baseType: !110, size: 32, offset: 224)
!12595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12596, size: 32)
!12596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !12597)
!12597 = !{!12598, !12656, !12668, !12669, !12670, !12671, !12672, !12678, !12693}
!12598 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12596, file: !156, line: 247, baseType: !12599, size: 384)
!12599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !12600)
!12600 = !{!12601, !12625, !12632, !12633, !12634, !12643, !12644, !12645}
!12601 = !DIDerivedType(tag: DW_TAG_member, scope: !12599, file: !156, line: 60, baseType: !12602, size: 64)
!12602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12599, file: !156, line: 60, size: 64, elements: !12603)
!12603 = !{!12604, !12619}
!12604 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12602, file: !156, line: 61, baseType: !12605, size: 64)
!12605 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !12606)
!12606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !12607)
!12607 = !{!12608, !12614}
!12608 = !DIDerivedType(tag: DW_TAG_member, scope: !12606, file: !127, line: 38, baseType: !12609, size: 32)
!12609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12606, file: !127, line: 38, size: 32, elements: !12610)
!12610 = !{!12611, !12613}
!12611 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12609, file: !127, line: 39, baseType: !12612, size: 32)
!12612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12606, size: 32)
!12613 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12609, file: !127, line: 40, baseType: !12612, size: 32)
!12614 = !DIDerivedType(tag: DW_TAG_member, scope: !12606, file: !127, line: 42, baseType: !12615, size: 32, offset: 32)
!12615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12606, file: !127, line: 42, size: 32, elements: !12616)
!12616 = !{!12617, !12618}
!12617 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12615, file: !127, line: 43, baseType: !12612, size: 32)
!12618 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12615, file: !127, line: 44, baseType: !12612, size: 32)
!12619 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12602, file: !156, line: 62, baseType: !12620, size: 64)
!12620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !12621)
!12621 = !{!12622}
!12622 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12620, file: !168, line: 50, baseType: !12623, size: 64)
!12623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12624, size: 64, elements: !173)
!12624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12620, size: 32)
!12625 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12599, file: !156, line: 68, baseType: !12626, size: 32, offset: 64)
!12626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12627, size: 32)
!12627 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !12628)
!12628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !12629)
!12629 = !{!12630}
!12630 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12628, file: !122, line: 232, baseType: !12631, size: 64)
!12631 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !12606)
!12632 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12599, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!12633 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12599, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!12634 = !DIDerivedType(tag: DW_TAG_member, scope: !12599, file: !156, line: 90, baseType: !12635, size: 16, offset: 112)
!12635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12599, file: !156, line: 90, size: 16, elements: !12636)
!12636 = !{!12637, !12642}
!12637 = !DIDerivedType(tag: DW_TAG_member, scope: !12635, file: !156, line: 91, baseType: !12638, size: 16)
!12638 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12635, file: !156, line: 91, size: 16, elements: !12639)
!12639 = !{!12640, !12641}
!12640 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12638, file: !156, line: 96, baseType: !188, size: 8)
!12641 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12638, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!12642 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12635, file: !156, line: 100, baseType: !192, size: 16)
!12643 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12599, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!12644 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12599, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!12645 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12599, file: !156, line: 131, baseType: !12646, size: 192, offset: 192)
!12646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !12647)
!12647 = !{!12648, !12649, !12655}
!12648 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12646, file: !122, line: 245, baseType: !12605, size: 64)
!12649 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12646, file: !122, line: 246, baseType: !12650, size: 32, offset: 64)
!12650 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !12651)
!12651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12652, size: 32)
!12652 = !DISubroutineType(types: !12653)
!12653 = !{null, !12654}
!12654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12646, size: 32)
!12655 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12646, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!12656 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12596, file: !156, line: 250, baseType: !12657, size: 288, offset: 384)
!12657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !12658)
!12658 = !{!12659, !12660, !12661, !12662, !12663, !12664, !12665, !12666, !12667}
!12659 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12657, file: !209, line: 26, baseType: !110, size: 32)
!12660 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12657, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!12661 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12657, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!12662 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12657, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!12663 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12657, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!12664 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12657, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!12665 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12657, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!12666 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12657, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!12667 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12657, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!12668 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12596, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!12669 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12596, file: !156, line: 256, baseType: !12627, size: 64, offset: 704)
!12670 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12596, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!12671 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12596, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!12672 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12596, file: !156, line: 300, baseType: !12673, size: 96, offset: 1056)
!12673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !12674)
!12674 = !{!12675, !12676, !12677}
!12675 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12673, file: !156, line: 153, baseType: !22, size: 32)
!12676 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12673, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!12677 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12673, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!12678 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12596, file: !156, line: 325, baseType: !12679, size: 32, offset: 1152)
!12679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12680, size: 32)
!12680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !12681)
!12681 = !{!12682, !12688, !12689}
!12682 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12680, file: !118, line: 5074, baseType: !12683, size: 96)
!12683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !12684)
!12684 = !{!12685, !12686, !12687}
!12685 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12683, file: !241, line: 57, baseType: !244, size: 32)
!12686 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12683, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!12687 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12683, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!12688 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12680, file: !118, line: 5075, baseType: !12627, size: 64, offset: 96)
!12689 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12680, file: !118, line: 5076, baseType: !12690, size: 32, offset: 160)
!12690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !12691)
!12691 = !{!12692}
!12692 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12690, file: !251, line: 52, baseType: !22, size: 32)
!12693 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12596, file: !156, line: 343, baseType: !12694, size: 64, offset: 1184)
!12694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !12695)
!12695 = !{!12696, !12697}
!12696 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12694, file: !209, line: 63, baseType: !110, size: 32)
!12697 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12694, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!12698 = !{!12699, !12700, !12701}
!12699 = !DILocalVariable(name: "reason", arg: 1, scope: !12548, file: !3029, line: 209, type: !32)
!12700 = !DILocalVariable(name: "esf", arg: 2, scope: !12548, file: !3029, line: 209, type: !12551)
!12701 = !DILocalVariable(name: "thread", arg: 3, scope: !12548, file: !3029, line: 210, type: !12595)
!12702 = !DILocation(line: 0, scope: !12548)
!12703 = !DILocation(line: 212, column: 1, scope: !12548)
!12704 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3029, file: !3029, line: 214, type: !12705, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12707)
!12705 = !DISubroutineType(types: !12706)
!12706 = !{null, !22, !22}
!12707 = !{!12708, !12709}
!12708 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12704, file: !3029, line: 214, type: !22)
!12709 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12704, file: !3029, line: 214, type: !22)
!12710 = !DILocation(line: 0, scope: !12704)
!12711 = !DILocation(line: 216, column: 1, scope: !12704)
!12712 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3029, file: !3029, line: 218, type: !12713, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12715)
!12713 = !DISubroutineType(types: !12714)
!12714 = !{null, !286, !232}
!12715 = !{!12716, !12717}
!12716 = !DILocalVariable(name: "buf", arg: 1, scope: !12712, file: !3029, line: 218, type: !286)
!12717 = !DILocalVariable(name: "buflen", arg: 2, scope: !12712, file: !3029, line: 218, type: !232)
!12718 = !DILocation(line: 0, scope: !12712)
!12719 = !DILocation(line: 220, column: 1, scope: !12712)
!12720 = distinct !DISubprogram(name: "coredump_query", scope: !3029, file: !3029, line: 222, type: !12721, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12723)
!12721 = !DISubroutineType(types: !12722)
!12722 = !{!109, !3028, !107}
!12723 = !{!12724, !12725}
!12724 = !DILocalVariable(name: "query_id", arg: 1, scope: !12720, file: !3029, line: 222, type: !3028)
!12725 = !DILocalVariable(name: "arg", arg: 2, scope: !12720, file: !3029, line: 222, type: !107)
!12726 = !DILocation(line: 0, scope: !12720)
!12727 = !DILocation(line: 224, column: 2, scope: !12720)
!12728 = distinct !DISubprogram(name: "coredump_cmd", scope: !3029, file: !3029, line: 227, type: !12729, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12731)
!12729 = !DISubroutineType(types: !12730)
!12730 = !{!109, !3035, !107}
!12731 = !{!12732, !12733}
!12732 = !DILocalVariable(name: "query_id", arg: 1, scope: !12728, file: !3029, line: 227, type: !3035)
!12733 = !DILocalVariable(name: "arg", arg: 2, scope: !12728, file: !3029, line: 227, type: !107)
!12734 = !DILocation(line: 0, scope: !12728)
!12735 = !DILocation(line: 229, column: 2, scope: !12728)
!12736 = distinct !DISubprogram(name: "arch_system_halt", scope: !12737, file: !12737, line: 23, type: !6061, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12738)
!12737 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12738 = !{!12739}
!12739 = !DILocalVariable(name: "reason", arg: 1, scope: !12736, file: !12737, line: 23, type: !32)
!12740 = !DILocation(line: 0, scope: !12736)
!12741 = !DILocation(line: 55, column: 2, scope: !12742, inlinedAt: !12746)
!12742 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !6051, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12743)
!12743 = !{!12744, !12745}
!12744 = !DILocalVariable(name: "key", scope: !12742, file: !6050, line: 44, type: !32)
!12745 = !DILocalVariable(name: "tmp", scope: !12742, file: !6050, line: 53, type: !32)
!12746 = distinct !DILocation(line: 31, column: 8, scope: !12736)
!12747 = !{i64 1654309}
!12748 = !DILocation(line: 0, scope: !12742, inlinedAt: !12746)
!12749 = !DILocation(line: 32, column: 2, scope: !12736)
!12750 = !DILocation(line: 32, column: 2, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12752, file: !12737, line: 32, column: 2)
!12752 = distinct !DILexicalBlock(scope: !12736, file: !12737, line: 32, column: 2)
!12753 = distinct !{!12753, !12754, !12755}
!12754 = !DILocation(line: 32, column: 2, scope: !12752)
!12755 = !DILocation(line: 34, column: 2, scope: !12752)
!12756 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12737, file: !12737, line: 39, type: !12757, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12759)
!12757 = !DISubroutineType(types: !12758)
!12758 = !{null, !32, !12551}
!12759 = !{!12760, !12761}
!12760 = !DILocalVariable(name: "reason", arg: 1, scope: !12756, file: !12737, line: 39, type: !32)
!12761 = !DILocalVariable(name: "esf", arg: 2, scope: !12756, file: !12737, line: 40, type: !12551)
!12762 = !DILocation(line: 0, scope: !12756)
!12763 = !DILocation(line: 45, column: 2, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12765, file: !12737, line: 45, column: 2)
!12765 = distinct !DILexicalBlock(scope: !12766, file: !12737, line: 45, column: 2)
!12766 = distinct !DILexicalBlock(scope: !12767, file: !12737, line: 45, column: 2)
!12767 = distinct !DILexicalBlock(scope: !12756, file: !12737, line: 45, column: 2)
!12768 = !DILocation(line: 46, column: 2, scope: !12756)
!12769 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12737, file: !12737, line: 81, type: !6061, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12770)
!12770 = !{!12771}
!12771 = !DILocalVariable(name: "reason", arg: 1, scope: !12769, file: !12737, line: 81, type: !32)
!12772 = !DILocation(line: 0, scope: !12769)
!12773 = !DILocation(line: 83, column: 2, scope: !12769)
!12774 = distinct !DISubprogram(name: "z_fatal_error", scope: !12737, file: !12737, line: 96, type: !12757, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12775)
!12775 = !{!12776, !12777, !12778, !12779}
!12776 = !DILocalVariable(name: "reason", arg: 1, scope: !12774, file: !12737, line: 96, type: !32)
!12777 = !DILocalVariable(name: "esf", arg: 2, scope: !12774, file: !12737, line: 96, type: !12551)
!12778 = !DILocalVariable(name: "key", scope: !12774, file: !12737, line: 102, type: !32)
!12779 = !DILocalVariable(name: "thread", scope: !12774, file: !12737, line: 103, type: !12595)
!12780 = !DILocation(line: 0, scope: !12774)
!12781 = !DILocation(line: 55, column: 2, scope: !12742, inlinedAt: !12782)
!12782 = distinct !DILocation(line: 102, column: 21, scope: !12774)
!12783 = !DILocation(line: 0, scope: !12742, inlinedAt: !12782)
!12784 = !DILocation(line: 104, column: 4, scope: !12774)
!12785 = !DILocation(line: 109, column: 2, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12787, file: !12737, line: 109, column: 2)
!12787 = distinct !DILexicalBlock(scope: !12788, file: !12737, line: 109, column: 2)
!12788 = distinct !DILexicalBlock(scope: !12789, file: !12737, line: 109, column: 2)
!12789 = distinct !DILexicalBlock(scope: !12774, file: !12737, line: 109, column: 2)
!12790 = !DILocation(line: 119, column: 11, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12774, file: !12737, line: 119, column: 6)
!12792 = !DILocation(line: 119, column: 20, scope: !12791)
!12793 = !DILocalVariable(name: "esf", arg: 1, scope: !12794, file: !7399, line: 71, type: !12551)
!12794 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7399, file: !7399, line: 71, type: !12795, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12797)
!12795 = !DISubroutineType(types: !12796)
!12796 = !{!360, !12551}
!12797 = !{!12793}
!12798 = !DILocation(line: 0, scope: !12794, inlinedAt: !12799)
!12799 = distinct !DILocation(line: 119, column: 23, scope: !12791)
!12800 = !DILocation(line: 73, column: 21, scope: !12794, inlinedAt: !12799)
!12801 = !DILocation(line: 73, column: 26, scope: !12794, inlinedAt: !12799)
!12802 = !DILocation(line: 73, column: 9, scope: !12794, inlinedAt: !12799)
!12803 = !DILocation(line: 119, column: 6, scope: !12774)
!12804 = !DILocation(line: 120, column: 3, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12806, file: !12737, line: 120, column: 3)
!12806 = distinct !DILexicalBlock(scope: !12807, file: !12737, line: 120, column: 3)
!12807 = distinct !DILexicalBlock(scope: !12808, file: !12737, line: 120, column: 3)
!12808 = distinct !DILexicalBlock(scope: !12809, file: !12737, line: 120, column: 3)
!12809 = distinct !DILexicalBlock(scope: !12791, file: !12737, line: 119, column: 57)
!12810 = !DILocation(line: 121, column: 2, scope: !12809)
!12811 = !DILocation(line: 124, column: 2, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12813, file: !12737, line: 124, column: 2)
!12813 = distinct !DILexicalBlock(scope: !12814, file: !12737, line: 124, column: 2)
!12814 = distinct !DILexicalBlock(scope: !12815, file: !12737, line: 124, column: 2)
!12815 = distinct !DILexicalBlock(scope: !12774, file: !12737, line: 124, column: 2)
!12816 = !DILocation(line: 131, column: 2, scope: !12774)
!12817 = !DILocation(line: 0, scope: !12794, inlinedAt: !12818)
!12818 = distinct !DILocation(line: 163, column: 24, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12820, file: !12737, line: 163, column: 7)
!12820 = distinct !DILexicalBlock(scope: !12821, file: !12737, line: 160, column: 9)
!12821 = distinct !DILexicalBlock(scope: !12774, file: !12737, line: 146, column: 6)
!12822 = !DILocation(line: 73, column: 21, scope: !12794, inlinedAt: !12818)
!12823 = !DILocation(line: 73, column: 26, scope: !12794, inlinedAt: !12818)
!12824 = !DILocation(line: 73, column: 9, scope: !12794, inlinedAt: !12818)
!12825 = !DILocation(line: 163, column: 7, scope: !12820)
!12826 = !DILocalVariable(name: "key", arg: 1, scope: !12827, file: !6050, line: 84, type: !32)
!12827 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !6061, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12828)
!12828 = !{!12826}
!12829 = !DILocation(line: 0, scope: !12827, inlinedAt: !12830)
!12830 = distinct !DILocation(line: 171, column: 4, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12819, file: !12737, line: 163, column: 58)
!12832 = !DILocation(line: 95, column: 2, scope: !12827, inlinedAt: !12830)
!12833 = !{i64 1655126}
!12834 = !DILocation(line: 172, column: 4, scope: !12831)
!12835 = !DILocation(line: 163, column: 21, scope: !12819)
!12836 = !DILocation(line: 178, column: 15, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12838, file: !12737, line: 178, column: 8)
!12838 = distinct !DILexicalBlock(scope: !12819, file: !12737, line: 174, column: 10)
!12839 = !DILocation(line: 0, scope: !12827, inlinedAt: !12840)
!12840 = distinct !DILocation(line: 179, column: 5, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12837, file: !12737, line: 178, column: 38)
!12842 = !DILocation(line: 0, scope: !12827, inlinedAt: !12843)
!12843 = distinct !DILocation(line: 186, column: 2, scope: !12774)
!12844 = !DILocation(line: 178, column: 8, scope: !12838)
!12845 = !DILocation(line: 189, column: 3, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12847, file: !12737, line: 188, column: 41)
!12847 = distinct !DILexicalBlock(scope: !12774, file: !12737, line: 188, column: 6)
!12848 = !DILocation(line: 191, column: 1, scope: !12774)
!12849 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !12850, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !2045)
!12850 = !DISubroutineType(types: !12851)
!12851 = !{!12852}
!12852 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !12595)
!12853 = !DILocation(line: 535, column: 9, scope: !12849)
!12854 = !DILocation(line: 535, column: 2, scope: !12849)
!12855 = distinct !DISubprogram(name: "reason_to_str", scope: !12737, file: !12737, line: 62, type: !12856, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12858)
!12856 = !DISubroutineType(types: !12857)
!12857 = !{!279, !32}
!12858 = !{!12859}
!12859 = !DILocalVariable(name: "reason", arg: 1, scope: !12855, file: !12737, line: 62, type: !32)
!12860 = !DILocation(line: 0, scope: !12855)
!12861 = !DILocation(line: 64, column: 2, scope: !12855)
!12862 = !DILocation(line: 0, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12855, file: !12737, line: 64, column: 18)
!12864 = !DILocation(line: 78, column: 1, scope: !12855)
!12865 = distinct !DISubprogram(name: "thread_name_get", scope: !12737, file: !12737, line: 51, type: !12866, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12868)
!12866 = !DISubroutineType(types: !12867)
!12867 = !{!279, !12595}
!12868 = !{!12869, !12870}
!12869 = !DILocalVariable(name: "thread", arg: 1, scope: !12865, file: !12737, line: 51, type: !12595)
!12870 = !DILocalVariable(name: "thread_name", scope: !12865, file: !12737, line: 53, type: !279)
!12871 = !DILocation(line: 0, scope: !12865)
!12872 = !DILocation(line: 53, column: 36, scope: !12865)
!12873 = !DILocation(line: 53, column: 28, scope: !12865)
!12874 = !DILocation(line: 53, column: 47, scope: !12865)
!12875 = !DILocation(line: 55, column: 19, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12865, file: !12737, line: 55, column: 6)
!12877 = !DILocation(line: 55, column: 28, scope: !12876)
!12878 = !DILocation(line: 55, column: 32, scope: !12876)
!12879 = !DILocation(line: 55, column: 47, scope: !12876)
!12880 = !DILocation(line: 55, column: 6, scope: !12865)
!12881 = !DILocation(line: 57, column: 2, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12876, file: !12737, line: 55, column: 57)
!12883 = !DILocation(line: 59, column: 2, scope: !12865)
!12884 = distinct !DISubprogram(name: "k_thread_abort", scope: !3204, file: !3204, line: 188, type: !12885, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12887)
!12885 = !DISubroutineType(types: !12886)
!12886 = !{null, !12852}
!12887 = !{!12888}
!12888 = !DILocalVariable(name: "thread", arg: 1, scope: !12884, file: !3204, line: 188, type: !12852)
!12889 = !DILocation(line: 0, scope: !12884)
!12890 = !DILocation(line: 197, column: 2, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12884, file: !3204, line: 197, column: 2)
!12892 = !{i64 2152224560}
!12893 = !DILocation(line: 198, column: 2, scope: !12884)
!12894 = !DILocation(line: 199, column: 1, scope: !12884)
!12895 = distinct !DISubprogram(name: "z_current_get", scope: !3204, file: !3204, line: 173, type: !12850, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !2045)
!12896 = !DILocation(line: 180, column: 2, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12895, file: !3204, line: 180, column: 2)
!12898 = !{i64 2152224492}
!12899 = !DILocation(line: 181, column: 9, scope: !12895)
!12900 = !DILocation(line: 181, column: 2, scope: !12895)
!12901 = distinct !DISubprogram(name: "z_early_memset", scope: !1844, file: !1844, line: 108, type: !12902, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !12904)
!12902 = !DISubroutineType(types: !12903)
!12903 = !{null, !107, !109, !232}
!12904 = !{!12905, !12906, !12907}
!12905 = !DILocalVariable(name: "dst", arg: 1, scope: !12901, file: !1844, line: 108, type: !107)
!12906 = !DILocalVariable(name: "c", arg: 2, scope: !12901, file: !1844, line: 108, type: !109)
!12907 = !DILocalVariable(name: "n", arg: 3, scope: !12901, file: !1844, line: 108, type: !232)
!12908 = !DILocation(line: 0, scope: !12901)
!12909 = !DILocation(line: 110, column: 9, scope: !12901)
!12910 = !DILocation(line: 111, column: 1, scope: !12901)
!12911 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1844, file: !1844, line: 121, type: !12912, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !12914)
!12912 = !DISubroutineType(types: !12913)
!12913 = !{null, !107, !13, !232}
!12914 = !{!12915, !12916, !12917}
!12915 = !DILocalVariable(name: "dst", arg: 1, scope: !12911, file: !1844, line: 121, type: !107)
!12916 = !DILocalVariable(name: "src", arg: 2, scope: !12911, file: !1844, line: 121, type: !13)
!12917 = !DILocalVariable(name: "n", arg: 3, scope: !12911, file: !1844, line: 121, type: !232)
!12918 = !DILocation(line: 0, scope: !12911)
!12919 = !DILocation(line: 123, column: 9, scope: !12911)
!12920 = !DILocation(line: 124, column: 1, scope: !12911)
!12921 = distinct !DISubprogram(name: "z_bss_zero", scope: !1844, file: !1844, line: 132, type: !3062, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !2045)
!12922 = !DILocation(line: 143, column: 2, scope: !12921)
!12923 = !DILocation(line: 168, column: 1, scope: !12921)
!12924 = distinct !DISubprogram(name: "z_init_cpu", scope: !1844, file: !1844, line: 372, type: !8435, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !12925)
!12925 = !{!12926}
!12926 = !DILocalVariable(name: "id", arg: 1, scope: !12924, file: !1844, line: 372, type: !109)
!12927 = !DILocation(line: 0, scope: !12924)
!12928 = !DILocation(line: 374, column: 2, scope: !12924)
!12929 = !DILocation(line: 375, column: 34, scope: !12924)
!12930 = !DILocation(line: 375, column: 19, scope: !12924)
!12931 = !DILocation(line: 375, column: 31, scope: !12924)
!12932 = !DILocation(line: 376, column: 24, scope: !12924)
!12933 = !DILocation(line: 376, column: 19, scope: !12924)
!12934 = !DILocation(line: 376, column: 22, scope: !12924)
!12935 = !DILocation(line: 378, column: 26, scope: !12924)
!12936 = !DILocation(line: 378, column: 4, scope: !12924)
!12937 = !DILocation(line: 378, column: 50, scope: !12924)
!12938 = !DILocation(line: 377, column: 19, scope: !12924)
!12939 = !DILocation(line: 377, column: 29, scope: !12924)
!12940 = !DILocation(line: 384, column: 1, scope: !12924)
!12941 = distinct !DISubprogram(name: "init_idle_thread", scope: !1844, file: !1844, line: 343, type: !8435, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !12942)
!12942 = !{!12943, !12944, !12945, !12948}
!12943 = !DILocalVariable(name: "i", arg: 1, scope: !12941, file: !1844, line: 343, type: !109)
!12944 = !DILocalVariable(name: "thread", scope: !12941, file: !1844, line: 345, type: !1936)
!12945 = !DILocalVariable(name: "stack", scope: !12941, file: !1844, line: 346, type: !12946)
!12946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12947, size: 32)
!12947 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3329, line: 44, baseType: !2054)
!12948 = !DILocalVariable(name: "tname", scope: !12941, file: !1844, line: 354, type: !285)
!12949 = !DILocation(line: 0, scope: !12941)
!12950 = !DILocation(line: 345, column: 29, scope: !12941)
!12951 = !DILocation(line: 346, column: 28, scope: !12941)
!12952 = !DILocation(line: 362, column: 37, scope: !12941)
!12953 = !DILocation(line: 362, column: 36, scope: !12941)
!12954 = !DILocation(line: 361, column: 2, scope: !12941)
!12955 = !DILocation(line: 365, column: 2, scope: !12941)
!12956 = !DILocation(line: 370, column: 1, scope: !12941)
!12957 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !145, file: !145, line: 331, type: !12958, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !12960)
!12958 = !DISubroutineType(types: !12959)
!12959 = !{!285, !12946}
!12960 = !{!12961}
!12961 = !DILocalVariable(name: "sym", arg: 1, scope: !12957, file: !145, line: 331, type: !12946)
!12962 = !DILocation(line: 0, scope: !12957)
!12963 = !DILocation(line: 333, column: 21, scope: !12957)
!12964 = !DILocation(line: 333, column: 2, scope: !12957)
!12965 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12966, file: !12966, line: 155, type: !12967, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !12969)
!12966 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12967 = !DISubroutineType(types: !12968)
!12968 = !{null, !1936}
!12969 = !{!12970}
!12970 = !DILocalVariable(name: "thread", arg: 1, scope: !12965, file: !12966, line: 155, type: !1936)
!12971 = !DILocation(line: 0, scope: !12965)
!12972 = !DILocation(line: 157, column: 15, scope: !12965)
!12973 = !DILocation(line: 157, column: 28, scope: !12965)
!12974 = !DILocation(line: 158, column: 1, scope: !12965)
!12975 = distinct !DISubprogram(name: "z_cstart", scope: !1844, file: !1844, line: 501, type: !3062, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !12976)
!12976 = !{!12977}
!12977 = !DILocalVariable(name: "dummy_thread", scope: !12975, file: !1844, line: 518, type: !1937)
!12978 = !DILocation(line: 507, column: 2, scope: !12975)
!12979 = !DILocation(line: 43, column: 14, scope: !12980, inlinedAt: !12984)
!12980 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12981, file: !12981, line: 40, type: !3062, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !12982)
!12981 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12982 = !{!12983}
!12983 = !DILocalVariable(name: "msp", scope: !12980, file: !12981, line: 42, type: !110)
!12984 = distinct !DILocation(line: 44, column: 2, scope: !12985, inlinedAt: !12987)
!12985 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12986, file: !12986, line: 42, type: !3062, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !2045)
!12986 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12987 = distinct !DILocation(line: 510, column: 2, scope: !12975)
!12988 = !DILocation(line: 43, column: 3, scope: !12980, inlinedAt: !12984)
!12989 = !DILocation(line: 43, column: 60, scope: !12980, inlinedAt: !12984)
!12990 = !DILocation(line: 0, scope: !12980, inlinedAt: !12984)
!12991 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12992, file: !6388, line: 1153, type: !110)
!12992 = distinct !DISubprogram(name: "__set_MSP", scope: !6388, file: !6388, line: 1153, type: !6074, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !12993)
!12993 = !{!12991}
!12994 = !DILocation(line: 0, scope: !12992, inlinedAt: !12995)
!12995 = distinct !DILocation(line: 46, column: 2, scope: !12980, inlinedAt: !12984)
!12996 = !DILocation(line: 1155, column: 3, scope: !12992, inlinedAt: !12995)
!12997 = !{i64 2467749}
!12998 = !DILocation(line: 62, column: 11, scope: !12980, inlinedAt: !12984)
!12999 = !DILocation(line: 102, column: 2, scope: !13000, inlinedAt: !13001)
!13000 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7399, file: !7399, line: 97, type: !3062, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !2045)
!13001 = distinct !DILocation(line: 45, column: 2, scope: !12985, inlinedAt: !12987)
!13002 = !DILocation(line: 108, column: 2, scope: !13000, inlinedAt: !13001)
!13003 = !DILocation(line: 112, column: 2, scope: !13000, inlinedAt: !13001)
!13004 = !DILocation(line: 113, column: 2, scope: !13000, inlinedAt: !13001)
!13005 = !DILocation(line: 114, column: 2, scope: !13000, inlinedAt: !13001)
!13006 = !DILocation(line: 116, column: 2, scope: !13000, inlinedAt: !13001)
!13007 = !DILocation(line: 123, column: 13, scope: !13000, inlinedAt: !13001)
!13008 = !DILocation(line: 46, column: 2, scope: !12985, inlinedAt: !12987)
!13009 = !DILocation(line: 47, column: 2, scope: !12985, inlinedAt: !12987)
!13010 = !DILocation(line: 174, column: 12, scope: !13011, inlinedAt: !13012)
!13011 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7399, file: !7399, line: 169, type: !3062, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !2045)
!13012 = distinct !DILocation(line: 48, column: 2, scope: !12985, inlinedAt: !12987)
!13013 = !DILocation(line: 179, column: 12, scope: !13011, inlinedAt: !13012)
!13014 = !DILocation(line: 50, column: 2, scope: !12985, inlinedAt: !12987)
!13015 = !DILocation(line: 57, column: 2, scope: !12985, inlinedAt: !12987)
!13016 = !DILocation(line: 518, column: 2, scope: !12975)
!13017 = !DILocation(line: 518, column: 18, scope: !12975)
!13018 = !DILocation(line: 520, column: 2, scope: !12975)
!13019 = !DILocation(line: 523, column: 2, scope: !12975)
!13020 = !DILocation(line: 526, column: 2, scope: !12975)
!13021 = !DILocation(line: 527, column: 2, scope: !12975)
!13022 = !DILocation(line: 543, column: 24, scope: !12975)
!13023 = !DILocation(line: 543, column: 2, scope: !12975)
!13024 = !DILocation(line: 0, scope: !2077)
!13025 = !DILocation(line: 246, column: 15, scope: !2095)
!13026 = !DILocation(line: 246, column: 36, scope: !2094)
!13027 = !DILocation(line: 246, column: 2, scope: !2095)
!13028 = !DILocation(line: 247, column: 37, scope: !2093)
!13029 = !DILocation(line: 0, scope: !2093)
!13030 = !DILocation(line: 248, column: 19, scope: !2093)
!13031 = !DILocation(line: 248, column: 12, scope: !2093)
!13032 = !DILocation(line: 250, column: 11, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !2093, file: !1844, line: 250, column: 7)
!13034 = !DILocation(line: 250, column: 7, scope: !2093)
!13035 = !DILocation(line: 254, column: 11, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13037, file: !1844, line: 254, column: 8)
!13037 = distinct !DILexicalBlock(scope: !13033, file: !1844, line: 250, column: 20)
!13038 = !DILocation(line: 254, column: 8, scope: !13037)
!13039 = !DILocation(line: 255, column: 9, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13036, file: !1844, line: 254, column: 17)
!13041 = !DILocation(line: 258, column: 9, scope: !13040)
!13042 = !DILocation(line: 261, column: 28, scope: !13040)
!13043 = !DILocation(line: 261, column: 10, scope: !13040)
!13044 = !DILocation(line: 261, column: 17, scope: !13040)
!13045 = !DILocation(line: 261, column: 26, scope: !13040)
!13046 = !DILocation(line: 262, column: 4, scope: !13040)
!13047 = !DILocation(line: 263, column: 9, scope: !13037)
!13048 = !DILocation(line: 263, column: 16, scope: !13037)
!13049 = !DILocation(line: 263, column: 28, scope: !13037)
!13050 = !DILocation(line: 264, column: 3, scope: !13037)
!13051 = !DILocation(line: 246, column: 60, scope: !2094)
!13052 = distinct !{!13052, !13027, !13053}
!13053 = !DILocation(line: 265, column: 2, scope: !2095)
!13054 = !DILocation(line: 266, column: 1, scope: !2077)
!13055 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !548, file: !548, line: 1638, type: !6428, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !13056)
!13056 = !{!13057, !13058}
!13057 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13055, file: !548, line: 1638, type: !872)
!13058 = !DILocalVariable(name: "priority", arg: 2, scope: !13055, file: !548, line: 1638, type: !110)
!13059 = !DILocation(line: 0, scope: !13055)
!13060 = !DILocation(line: 1646, column: 48, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13062, file: !548, line: 1645, column: 3)
!13062 = distinct !DILexicalBlock(scope: !13055, file: !548, line: 1640, column: 7)
!13063 = !DILocation(line: 1646, column: 32, scope: !13061)
!13064 = !DILocation(line: 1646, column: 40, scope: !13061)
!13065 = !DILocation(line: 1646, column: 5, scope: !13061)
!13066 = !DILocation(line: 1646, column: 46, scope: !13061)
!13067 = !DILocation(line: 1648, column: 1, scope: !13055)
!13068 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12986, file: !12986, line: 32, type: !3062, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2045)
!13069 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13070, file: !13070, line: 215, type: !12967, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !13071)
!13070 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13071 = !{!13072}
!13072 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13069, file: !13070, line: 215, type: !1936)
!13073 = !DILocation(line: 0, scope: !13069)
!13074 = !DILocation(line: 217, column: 21, scope: !13069)
!13075 = !DILocation(line: 217, column: 34, scope: !13069)
!13076 = !DILocation(line: 221, column: 21, scope: !13069)
!13077 = !DILocation(line: 221, column: 34, scope: !13069)
!13078 = !DILocation(line: 223, column: 27, scope: !13069)
!13079 = !DILocation(line: 223, column: 33, scope: !13069)
!13080 = !DILocation(line: 224, column: 27, scope: !13069)
!13081 = !DILocation(line: 224, column: 32, scope: !13069)
!13082 = !DILocation(line: 232, column: 16, scope: !13069)
!13083 = !DILocation(line: 232, column: 30, scope: !13069)
!13084 = !DILocation(line: 239, column: 24, scope: !13069)
!13085 = !DILocation(line: 240, column: 1, scope: !13069)
!13086 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1844, file: !1844, line: 399, type: !13087, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !13089)
!13087 = !DISubroutineType(types: !13088)
!13088 = !{!285}
!13089 = !{!13090}
!13090 = !DILocalVariable(name: "stack_ptr", scope: !13086, file: !1844, line: 401, type: !285)
!13091 = !DILocation(line: 404, column: 2, scope: !13086)
!13092 = !DILocation(line: 416, column: 24, scope: !13086)
!13093 = !DILocation(line: 418, column: 14, scope: !13086)
!13094 = !DILocation(line: 0, scope: !13086)
!13095 = !DILocation(line: 423, column: 2, scope: !13086)
!13096 = !DILocation(line: 424, column: 2, scope: !13086)
!13097 = !DILocation(line: 426, column: 2, scope: !13086)
!13098 = !DILocation(line: 428, column: 2, scope: !13086)
!13099 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1844, file: !1844, line: 432, type: !13100, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !13102)
!13100 = !DISubroutineType(types: !13101)
!13101 = !{null, !285}
!13102 = !{!13103}
!13103 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13099, file: !1844, line: 432, type: !285)
!13104 = !DILocation(line: 0, scope: !13099)
!13105 = !DILocation(line: 435, column: 2, scope: !13099)
!13106 = !DILocation(line: 445, column: 2, scope: !13099)
!13107 = distinct !DISubprogram(name: "bg_thread_main", scope: !1844, file: !1844, line: 277, type: !3174, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !13108)
!13108 = !{!13109, !13110, !13111}
!13109 = !DILocalVariable(name: "unused1", arg: 1, scope: !13107, file: !1844, line: 277, type: !107)
!13110 = !DILocalVariable(name: "unused2", arg: 2, scope: !13107, file: !1844, line: 277, type: !107)
!13111 = !DILocalVariable(name: "unused3", arg: 3, scope: !13107, file: !1844, line: 277, type: !107)
!13112 = !DILocation(line: 0, scope: !13107)
!13113 = !DILocation(line: 291, column: 20, scope: !13107)
!13114 = !DILocation(line: 293, column: 2, scope: !13107)
!13115 = !DILocation(line: 297, column: 2, scope: !13107)
!13116 = !DILocation(line: 305, column: 2, scope: !13107)
!13117 = !DILocation(line: 307, column: 2, scope: !13107)
!13118 = !DILocation(line: 330, column: 8, scope: !13107)
!13119 = !DILocation(line: 333, column: 34, scope: !13107)
!13120 = !DILocation(line: 339, column: 1, scope: !13107)
!13121 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2106, file: !2106, line: 45, type: !13122, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13130)
!13122 = !DISubroutineType(types: !13123)
!13123 = !{null, !13124, !107}
!13124 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !118, line: 103, baseType: !13125)
!13125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13126, size: 32)
!13126 = !DISubroutineType(types: !13127)
!13127 = !{null, !13128, !107}
!13128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13129, size: 32)
!13129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2111)
!13130 = !{!13131, !13132}
!13131 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13121, file: !2106, line: 45, type: !13124)
!13132 = !DILocalVariable(name: "user_data", arg: 2, scope: !13121, file: !2106, line: 45, type: !107)
!13133 = !DILocation(line: 0, scope: !13121)
!13134 = !DILocation(line: 71, column: 1, scope: !13121)
!13135 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2106, file: !2106, line: 73, type: !13122, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13136)
!13136 = !{!13137, !13138}
!13137 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13135, file: !2106, line: 73, type: !13124)
!13138 = !DILocalVariable(name: "user_data", arg: 2, scope: !13135, file: !2106, line: 73, type: !107)
!13139 = !DILocation(line: 0, scope: !13135)
!13140 = !DILocation(line: 95, column: 1, scope: !13135)
!13141 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2106, file: !2106, line: 97, type: !7400, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !2045)
!13142 = !DILocation(line: 1031, column: 3, scope: !13143, inlinedAt: !13146)
!13143 = distinct !DISubprogram(name: "__get_IPSR", scope: !6388, file: !6388, line: 1027, type: !7393, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13144)
!13144 = !{!13145}
!13145 = !DILocalVariable(name: "result", scope: !13143, file: !6388, line: 1029, type: !110)
!13146 = distinct !DILocation(line: 48, column: 10, scope: !13147, inlinedAt: !13148)
!13147 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7399, file: !7399, line: 46, type: !7400, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !2045)
!13148 = distinct !DILocation(line: 99, column: 9, scope: !13141)
!13149 = !{i64 2473400}
!13150 = !DILocation(line: 0, scope: !13143, inlinedAt: !13146)
!13151 = !DILocation(line: 48, column: 9, scope: !13147, inlinedAt: !13148)
!13152 = !DILocation(line: 99, column: 2, scope: !13141)
!13153 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2106, file: !2106, line: 106, type: !3062, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !2045)
!13154 = !DILocation(line: 108, column: 2, scope: !13153)
!13155 = !DILocation(line: 108, column: 17, scope: !13153)
!13156 = !DILocation(line: 108, column: 30, scope: !13153)
!13157 = !DILocation(line: 109, column: 1, scope: !13153)
!13158 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2106, file: !2106, line: 116, type: !3062, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !2045)
!13159 = !DILocation(line: 118, column: 2, scope: !13158)
!13160 = !DILocation(line: 118, column: 17, scope: !13158)
!13161 = !DILocation(line: 118, column: 30, scope: !13158)
!13162 = !DILocation(line: 119, column: 1, scope: !13158)
!13163 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2106, file: !2106, line: 126, type: !7400, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !2045)
!13164 = !DILocation(line: 128, column: 10, scope: !13163)
!13165 = !DILocation(line: 128, column: 25, scope: !13163)
!13166 = !DILocation(line: 128, column: 38, scope: !13163)
!13167 = !DILocation(line: 128, column: 53, scope: !13163)
!13168 = !DILocation(line: 128, column: 2, scope: !13163)
!13169 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2106, file: !2106, line: 187, type: !13170, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13172)
!13170 = !DISubroutineType(types: !13171)
!13171 = !{!109, !2110, !279}
!13172 = !{!13173, !13174}
!13173 = !DILocalVariable(name: "thread", arg: 1, scope: !13169, file: !2106, line: 187, type: !2110)
!13174 = !DILocalVariable(name: "value", arg: 2, scope: !13169, file: !2106, line: 187, type: !279)
!13175 = !DILocation(line: 0, scope: !13169)
!13176 = !DILocation(line: 190, column: 13, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13169, file: !2106, line: 190, column: 6)
!13178 = !DILocation(line: 190, column: 6, scope: !13169)
!13179 = !DILocation(line: 194, column: 10, scope: !13169)
!13180 = !DILocation(line: 194, column: 2, scope: !13169)
!13181 = !DILocation(line: 195, column: 2, scope: !13169)
!13182 = !DILocation(line: 195, column: 47, scope: !13169)
!13183 = !DILocation(line: 199, column: 2, scope: !13169)
!13184 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2106, file: !2106, line: 238, type: !13185, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13187)
!13185 = !DISubroutineType(types: !13186)
!13186 = !{!279, !2110}
!13187 = !{!13188}
!13188 = !DILocalVariable(name: "thread", arg: 1, scope: !13184, file: !2106, line: 238, type: !2110)
!13189 = !DILocation(line: 0, scope: !13184)
!13190 = !DILocation(line: 241, column: 23, scope: !13184)
!13191 = !DILocation(line: 241, column: 2, scope: !13184)
!13192 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2106, file: !2106, line: 248, type: !13193, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13195)
!13193 = !DISubroutineType(types: !13194)
!13194 = !{!109, !2109, !285, !232}
!13195 = !{!13196, !13197, !13198}
!13196 = !DILocalVariable(name: "thread", arg: 1, scope: !13192, file: !2106, line: 248, type: !2109)
!13197 = !DILocalVariable(name: "buf", arg: 2, scope: !13192, file: !2106, line: 248, type: !285)
!13198 = !DILocalVariable(name: "size", arg: 3, scope: !13192, file: !2106, line: 248, type: !232)
!13199 = !DILocation(line: 0, scope: !13192)
!13200 = !DILocation(line: 251, column: 15, scope: !13192)
!13201 = !DILocation(line: 251, column: 2, scope: !13192)
!13202 = !DILocation(line: 252, column: 2, scope: !13192)
!13203 = !DILocation(line: 0, scope: !2105)
!13204 = !DILocation(line: 281, column: 11, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !2105, file: !2106, line: 281, column: 6)
!13206 = !DILocation(line: 281, column: 20, scope: !13205)
!13207 = !DILocation(line: 275, column: 45, scope: !2105)
!13208 = !DILocation(line: 285, column: 10, scope: !2105)
!13209 = !DILocation(line: 0, scope: !2229)
!13210 = !DILocation(line: 293, column: 39, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !2229, file: !2106, line: 293, column: 2)
!13212 = !DILocation(line: 293, column: 2, scope: !2229)
!13213 = !DILocation(line: 273, column: 14, scope: !2105)
!13214 = !DILocation(line: 309, column: 2, scope: !2105)
!13215 = !DILocation(line: 309, column: 11, scope: !2105)
!13216 = !DILocation(line: 311, column: 2, scope: !2105)
!13217 = !DILocation(line: 293, column: 26, scope: !13211)
!13218 = !DILocation(line: 294, column: 9, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13211, file: !2106, line: 293, column: 54)
!13220 = !DILocation(line: 295, column: 21, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !13219, file: !2106, line: 295, column: 7)
!13222 = !DILocation(line: 295, column: 28, scope: !13221)
!13223 = !DILocation(line: 295, column: 7, scope: !13219)
!13224 = !DILocation(line: 299, column: 25, scope: !13219)
!13225 = !DILocation(line: 299, column: 41, scope: !13219)
!13226 = !DILocation(line: 300, column: 7, scope: !13219)
!13227 = !DILocation(line: 300, column: 26, scope: !13219)
!13228 = !DILocation(line: 299, column: 10, scope: !13219)
!13229 = !DILocation(line: 299, column: 7, scope: !13219)
!13230 = !DILocation(line: 302, column: 16, scope: !13219)
!13231 = !DILocation(line: 304, column: 20, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13219, file: !2106, line: 304, column: 7)
!13233 = !DILocation(line: 304, column: 7, scope: !13219)
!13234 = !DILocation(line: 305, column: 26, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13232, file: !2106, line: 304, column: 26)
!13236 = !DILocation(line: 305, column: 42, scope: !13235)
!13237 = !DILocation(line: 305, column: 11, scope: !13235)
!13238 = !DILocation(line: 305, column: 8, scope: !13235)
!13239 = !DILocation(line: 306, column: 3, scope: !13235)
!13240 = !DILocation(line: 293, column: 50, scope: !13211)
!13241 = !DILocation(line: 312, column: 1, scope: !2105)
!13242 = distinct !DISubprogram(name: "copy_bytes", scope: !2106, file: !2106, line: 261, type: !13243, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13245)
!13243 = !DISubroutineType(types: !13244)
!13244 = !{!232, !285, !232, !279, !232}
!13245 = !{!13246, !13247, !13248, !13249, !13250}
!13246 = !DILocalVariable(name: "dest", arg: 1, scope: !13242, file: !2106, line: 261, type: !285)
!13247 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13242, file: !2106, line: 261, type: !232)
!13248 = !DILocalVariable(name: "src", arg: 3, scope: !13242, file: !2106, line: 261, type: !279)
!13249 = !DILocalVariable(name: "src_size", arg: 4, scope: !13242, file: !2106, line: 261, type: !232)
!13250 = !DILocalVariable(name: "bytes_to_copy", scope: !13242, file: !2106, line: 263, type: !232)
!13251 = !DILocation(line: 0, scope: !13242)
!13252 = !DILocation(line: 265, column: 18, scope: !13242)
!13253 = !DILocation(line: 266, column: 2, scope: !13242)
!13254 = !DILocation(line: 268, column: 2, scope: !13242)
!13255 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2106, file: !2106, line: 383, type: !13256, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13258)
!13256 = !DISubroutineType(types: !13257)
!13257 = !{null, !2110}
!13258 = !{!13259}
!13259 = !DILocalVariable(name: "thread", arg: 1, scope: !13255, file: !2106, line: 383, type: !2110)
!13260 = !DILocation(line: 0, scope: !13255)
!13261 = !DILocation(line: 387, column: 2, scope: !13255)
!13262 = !DILocation(line: 388, column: 1, scope: !13255)
!13263 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2106, file: !2106, line: 528, type: !13264, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13271)
!13264 = !DISubroutineType(types: !13265)
!13265 = !{!285, !2110, !13266, !232, !3330, !107, !107, !107, !109, !110, !279}
!13266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13267, size: 32)
!13267 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3329, line: 44, baseType: !13268)
!13268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !13269)
!13269 = !{!13270}
!13270 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13268, file: !145, line: 48, baseType: !148, size: 8)
!13271 = !{!13272, !13273, !13274, !13275, !13276, !13277, !13278, !13279, !13280, !13281, !13282}
!13272 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13263, file: !2106, line: 528, type: !2110)
!13273 = !DILocalVariable(name: "stack", arg: 2, scope: !13263, file: !2106, line: 529, type: !13266)
!13274 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13263, file: !2106, line: 529, type: !232)
!13275 = !DILocalVariable(name: "entry", arg: 4, scope: !13263, file: !2106, line: 530, type: !3330)
!13276 = !DILocalVariable(name: "p1", arg: 5, scope: !13263, file: !2106, line: 531, type: !107)
!13277 = !DILocalVariable(name: "p2", arg: 6, scope: !13263, file: !2106, line: 531, type: !107)
!13278 = !DILocalVariable(name: "p3", arg: 7, scope: !13263, file: !2106, line: 531, type: !107)
!13279 = !DILocalVariable(name: "prio", arg: 8, scope: !13263, file: !2106, line: 532, type: !109)
!13280 = !DILocalVariable(name: "options", arg: 9, scope: !13263, file: !2106, line: 532, type: !110)
!13281 = !DILocalVariable(name: "name", arg: 10, scope: !13263, file: !2106, line: 532, type: !279)
!13282 = !DILocalVariable(name: "stack_ptr", scope: !13263, file: !2106, line: 534, type: !285)
!13283 = !DILocation(line: 0, scope: !13263)
!13284 = !DILocation(line: 536, column: 2, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13286, file: !2106, line: 536, column: 2)
!13286 = distinct !DILexicalBlock(scope: !13287, file: !2106, line: 536, column: 2)
!13287 = distinct !DILexicalBlock(scope: !13263, file: !2106, line: 536, column: 2)
!13288 = !DILocation(line: 536, column: 2, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13285, file: !2106, line: 536, column: 2)
!13290 = !DILocation(line: 550, column: 28, scope: !13263)
!13291 = !DILocation(line: 550, column: 2, scope: !13263)
!13292 = !DILocation(line: 553, column: 34, scope: !13263)
!13293 = !DILocation(line: 553, column: 2, scope: !13263)
!13294 = !DILocation(line: 554, column: 14, scope: !13263)
!13295 = !DILocation(line: 564, column: 2, scope: !13263)
!13296 = !DILocation(line: 567, column: 14, scope: !13263)
!13297 = !DILocation(line: 567, column: 24, scope: !13263)
!13298 = !DILocation(line: 594, column: 11, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13263, file: !2106, line: 594, column: 6)
!13300 = !DILocation(line: 0, scope: !13299)
!13301 = !DILocation(line: 594, column: 6, scope: !13263)
!13302 = !DILocation(line: 595, column: 3, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13299, file: !2106, line: 594, column: 20)
!13304 = !DILocation(line: 598, column: 3, scope: !13303)
!13305 = !DILocation(line: 598, column: 52, scope: !13303)
!13306 = !DILocation(line: 599, column: 2, scope: !13303)
!13307 = !DILocation(line: 600, column: 23, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13299, file: !2106, line: 599, column: 9)
!13309 = !DILocation(line: 612, column: 7, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13263, file: !2106, line: 612, column: 6)
!13311 = !DILocation(line: 612, column: 6, scope: !13263)
!13312 = !DILocation(line: 627, column: 40, scope: !13263)
!13313 = !DILocation(line: 637, column: 2, scope: !13263)
!13314 = !DILocation(line: 613, column: 15, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13310, file: !2106, line: 612, column: 17)
!13316 = !DILocation(line: 613, column: 29, scope: !13315)
!13317 = !DILocation(line: 638, column: 1, scope: !13263)
!13318 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12966, file: !12966, line: 78, type: !13319, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13321)
!13319 = !DISubroutineType(types: !13320)
!13320 = !{!360, !107}
!13321 = !{!13322}
!13322 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13318, file: !12966, line: 78, type: !107)
!13323 = !DILocation(line: 0, scope: !13318)
!13324 = !DILocation(line: 80, column: 21, scope: !13318)
!13325 = !DILocation(line: 80, column: 2, scope: !13318)
!13326 = distinct !DISubprogram(name: "z_waitq_init", scope: !13327, file: !13327, line: 47, type: !13328, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13330)
!13327 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13328 = !DISubroutineType(types: !13329)
!13329 = !{null, !2141}
!13330 = !{!13331}
!13331 = !DILocalVariable(name: "w", arg: 1, scope: !13326, file: !13327, line: 47, type: !2141)
!13332 = !DILocation(line: 0, scope: !13326)
!13333 = !DILocation(line: 49, column: 21, scope: !13326)
!13334 = !DILocation(line: 49, column: 2, scope: !13326)
!13335 = !DILocation(line: 50, column: 1, scope: !13326)
!13336 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2106, file: !2106, line: 791, type: !13337, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13340)
!13337 = !DISubroutineType(types: !13338)
!13338 = !{null, !13339, !109, !110, !32}
!13339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 32)
!13340 = !{!13341, !13342, !13343, !13344}
!13341 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13336, file: !2106, line: 791, type: !13339)
!13342 = !DILocalVariable(name: "priority", arg: 2, scope: !13336, file: !2106, line: 791, type: !109)
!13343 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13336, file: !2106, line: 792, type: !110)
!13344 = !DILocalVariable(name: "options", arg: 4, scope: !13336, file: !2106, line: 792, type: !32)
!13345 = !DILocation(line: 0, scope: !13336)
!13346 = !DILocation(line: 795, column: 15, scope: !13336)
!13347 = !DILocation(line: 795, column: 25, scope: !13336)
!13348 = !DILocation(line: 796, column: 30, scope: !13336)
!13349 = !DILocation(line: 796, column: 15, scope: !13336)
!13350 = !DILocation(line: 796, column: 28, scope: !13336)
!13351 = !DILocation(line: 797, column: 30, scope: !13336)
!13352 = !DILocation(line: 797, column: 15, scope: !13336)
!13353 = !DILocation(line: 797, column: 28, scope: !13336)
!13354 = !DILocation(line: 799, column: 22, scope: !13336)
!13355 = !DILocation(line: 799, column: 15, scope: !13336)
!13356 = !DILocation(line: 799, column: 20, scope: !13336)
!13357 = !DILocation(line: 801, column: 15, scope: !13336)
!13358 = !DILocation(line: 801, column: 28, scope: !13336)
!13359 = !DILocation(line: 814, column: 2, scope: !13336)
!13360 = !DILocation(line: 815, column: 1, scope: !13336)
!13361 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2106, file: !2106, line: 449, type: !13362, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13364)
!13362 = !DISubroutineType(types: !13363)
!13363 = !{!285, !2110, !13266, !232}
!13364 = !{!13365, !13366, !13367, !13368, !13369, !13370, !13371, !13372}
!13365 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13361, file: !2106, line: 449, type: !2110)
!13366 = !DILocalVariable(name: "stack", arg: 2, scope: !13361, file: !2106, line: 450, type: !13266)
!13367 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13361, file: !2106, line: 450, type: !232)
!13368 = !DILocalVariable(name: "stack_obj_size", scope: !13361, file: !2106, line: 452, type: !232)
!13369 = !DILocalVariable(name: "stack_buf_size", scope: !13361, file: !2106, line: 452, type: !232)
!13370 = !DILocalVariable(name: "stack_ptr", scope: !13361, file: !2106, line: 453, type: !285)
!13371 = !DILocalVariable(name: "stack_buf_start", scope: !13361, file: !2106, line: 453, type: !285)
!13372 = !DILocalVariable(name: "delta", scope: !13361, file: !2106, line: 454, type: !232)
!13373 = !DILocation(line: 0, scope: !13361)
!13374 = !DILocation(line: 465, column: 20, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13361, file: !2106, line: 463, column: 2)
!13376 = !DILocation(line: 466, column: 21, scope: !13375)
!13377 = !DILocation(line: 473, column: 28, scope: !13361)
!13378 = !DILocation(line: 514, column: 33, scope: !13361)
!13379 = !DILocation(line: 514, column: 25, scope: !13361)
!13380 = !DILocation(line: 514, column: 31, scope: !13361)
!13381 = !DILocation(line: 515, column: 25, scope: !13361)
!13382 = !DILocation(line: 515, column: 30, scope: !13361)
!13383 = !DILocation(line: 516, column: 25, scope: !13361)
!13384 = !DILocation(line: 516, column: 31, scope: !13361)
!13385 = !DILocation(line: 520, column: 2, scope: !13361)
!13386 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !145, file: !145, line: 331, type: !13387, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13389)
!13387 = !DISubroutineType(types: !13388)
!13388 = !{!285, !13266}
!13389 = !{!13390}
!13390 = !DILocalVariable(name: "sym", arg: 1, scope: !13386, file: !145, line: 331, type: !13266)
!13391 = !DILocation(line: 0, scope: !13386)
!13392 = !DILocation(line: 333, column: 21, scope: !13386)
!13393 = !DILocation(line: 333, column: 2, scope: !13386)
!13394 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13395, file: !13395, line: 40, type: !13396, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13398)
!13395 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13396 = !DISubroutineType(types: !13397)
!13397 = !{null, !13339}
!13398 = !{!13399}
!13399 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13394, file: !13395, line: 40, type: !13339)
!13400 = !DILocation(line: 0, scope: !13394)
!13401 = !DILocation(line: 42, column: 31, scope: !13394)
!13402 = !DILocation(line: 42, column: 2, scope: !13394)
!13403 = !DILocation(line: 43, column: 1, scope: !13394)
!13404 = distinct !DISubprogram(name: "z_init_timeout", scope: !13395, file: !13395, line: 25, type: !2167, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13405)
!13405 = !{!13406}
!13406 = !DILocalVariable(name: "to", arg: 1, scope: !13404, file: !13395, line: 25, type: !2169)
!13407 = !DILocation(line: 0, scope: !13404)
!13408 = !DILocation(line: 27, column: 22, scope: !13404)
!13409 = !DILocation(line: 27, column: 2, scope: !13404)
!13410 = !DILocation(line: 28, column: 1, scope: !13404)
!13411 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !13412, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13414)
!13412 = !DISubroutineType(types: !13413)
!13413 = !{null, !2216}
!13414 = !{!13415}
!13415 = !DILocalVariable(name: "node", arg: 1, scope: !13411, file: !127, line: 211, type: !2216)
!13416 = !DILocation(line: 0, scope: !13411)
!13417 = !DILocation(line: 213, column: 8, scope: !13411)
!13418 = !DILocation(line: 213, column: 13, scope: !13411)
!13419 = !DILocation(line: 214, column: 8, scope: !13411)
!13420 = !DILocation(line: 214, column: 13, scope: !13411)
!13421 = !DILocation(line: 215, column: 1, scope: !13411)
!13422 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13423, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13426)
!13423 = !DISubroutineType(types: !13424)
!13424 = !{null, !13425}
!13425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 32)
!13426 = !{!13427}
!13427 = !DILocalVariable(name: "list", arg: 1, scope: !13422, file: !127, line: 197, type: !13425)
!13428 = !DILocation(line: 0, scope: !13422)
!13429 = !DILocation(line: 199, column: 8, scope: !13422)
!13430 = !DILocation(line: 199, column: 13, scope: !13422)
!13431 = !DILocation(line: 200, column: 8, scope: !13422)
!13432 = !DILocation(line: 200, column: 13, scope: !13422)
!13433 = !DILocation(line: 201, column: 1, scope: !13422)
!13434 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2106, file: !2106, line: 641, type: !13435, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13441)
!13435 = !DISubroutineType(types: !13436)
!13436 = !{!2109, !2110, !13266, !232, !3330, !107, !107, !107, !109, !110, !13437}
!13437 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13438)
!13438 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13439)
!13439 = !{!13440}
!13440 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13438, file: !104, line: 66, baseType: !103, size: 64)
!13441 = !{!13442, !13443, !13444, !13445, !13446, !13447, !13448, !13449, !13450, !13451}
!13442 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13434, file: !2106, line: 641, type: !2110)
!13443 = !DILocalVariable(name: "stack", arg: 2, scope: !13434, file: !2106, line: 642, type: !13266)
!13444 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13434, file: !2106, line: 643, type: !232)
!13445 = !DILocalVariable(name: "entry", arg: 4, scope: !13434, file: !2106, line: 643, type: !3330)
!13446 = !DILocalVariable(name: "p1", arg: 5, scope: !13434, file: !2106, line: 644, type: !107)
!13447 = !DILocalVariable(name: "p2", arg: 6, scope: !13434, file: !2106, line: 644, type: !107)
!13448 = !DILocalVariable(name: "p3", arg: 7, scope: !13434, file: !2106, line: 644, type: !107)
!13449 = !DILocalVariable(name: "prio", arg: 8, scope: !13434, file: !2106, line: 645, type: !109)
!13450 = !DILocalVariable(name: "options", arg: 9, scope: !13434, file: !2106, line: 645, type: !110)
!13451 = !DILocalVariable(name: "delay", arg: 10, scope: !13434, file: !2106, line: 645, type: !13437)
!13452 = !DILocation(line: 0, scope: !13434)
!13453 = !DILocation(line: 1031, column: 3, scope: !13143, inlinedAt: !13454)
!13454 = distinct !DILocation(line: 48, column: 10, scope: !13147, inlinedAt: !13455)
!13455 = distinct !DILocation(line: 647, column: 2, scope: !13456)
!13456 = distinct !DILexicalBlock(scope: !13457, file: !2106, line: 647, column: 2)
!13457 = distinct !DILexicalBlock(scope: !13434, file: !2106, line: 647, column: 2)
!13458 = !DILocation(line: 0, scope: !13143, inlinedAt: !13454)
!13459 = !DILocation(line: 48, column: 9, scope: !13147, inlinedAt: !13455)
!13460 = !DILocation(line: 647, column: 2, scope: !13457)
!13461 = !DILocation(line: 647, column: 2, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !13456, file: !2106, line: 647, column: 2)
!13463 = !DILocation(line: 649, column: 2, scope: !13434)
!13464 = !DILocation(line: 652, column: 7, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13434, file: !2106, line: 652, column: 6)
!13466 = !DILocation(line: 652, column: 6, scope: !13434)
!13467 = !DILocation(line: 653, column: 3, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13465, file: !2106, line: 652, column: 39)
!13469 = !DILocation(line: 654, column: 2, scope: !13468)
!13470 = !DILocation(line: 656, column: 2, scope: !13434)
!13471 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2106, file: !2106, line: 401, type: !13472, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13474)
!13472 = !DISubroutineType(types: !13473)
!13473 = !{null, !2110, !13437}
!13474 = !{!13475, !13476}
!13475 = !DILocalVariable(name: "thread", arg: 1, scope: !13471, file: !2106, line: 401, type: !2110)
!13476 = !DILocalVariable(name: "delay", arg: 2, scope: !13471, file: !2106, line: 401, type: !13437)
!13477 = !DILocation(line: 0, scope: !13471)
!13478 = !DILocation(line: 404, column: 6, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13471, file: !2106, line: 404, column: 6)
!13480 = !DILocation(line: 404, column: 6, scope: !13471)
!13481 = !DILocation(line: 405, column: 3, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13479, file: !2106, line: 404, column: 38)
!13483 = !DILocation(line: 406, column: 2, scope: !13482)
!13484 = !DILocation(line: 407, column: 3, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13479, file: !2106, line: 406, column: 9)
!13486 = !DILocation(line: 413, column: 1, scope: !13471)
!13487 = distinct !DISubprogram(name: "k_thread_start", scope: !3204, file: !3204, line: 205, type: !13488, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13490)
!13488 = !DISubroutineType(types: !13489)
!13489 = !{null, !2109}
!13490 = !{!13491}
!13491 = !DILocalVariable(name: "thread", arg: 1, scope: !13487, file: !3204, line: 205, type: !2109)
!13492 = !DILocation(line: 0, scope: !13487)
!13493 = !DILocation(line: 214, column: 2, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13487, file: !3204, line: 214, column: 2)
!13495 = !{i64 2152249784}
!13496 = !DILocation(line: 215, column: 2, scope: !13487)
!13497 = !DILocation(line: 216, column: 1, scope: !13487)
!13498 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13395, file: !13395, line: 47, type: !13472, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13499)
!13499 = !{!13500, !13501}
!13500 = !DILocalVariable(name: "thread", arg: 1, scope: !13498, file: !13395, line: 47, type: !2110)
!13501 = !DILocalVariable(name: "ticks", arg: 2, scope: !13498, file: !13395, line: 47, type: !13437)
!13502 = !DILocation(line: 0, scope: !13498)
!13503 = !DILocation(line: 49, column: 30, scope: !13498)
!13504 = !DILocation(line: 49, column: 2, scope: !13498)
!13505 = !DILocation(line: 50, column: 1, scope: !13498)
!13506 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2106, file: !2106, line: 748, type: !3062, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13507)
!13507 = !{!13508, !13526}
!13508 = !DILocalVariable(name: "thread_data", scope: !13509, file: !2106, line: 750, type: !13510)
!13509 = distinct !DILexicalBlock(scope: !13506, file: !2106, line: 750, column: 2)
!13510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13511, size: 32)
!13511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !118, line: 620, size: 384, elements: !13512)
!13512 = !{!13513, !13514, !13515, !13516, !13517, !13518, !13519, !13520, !13521, !13522, !13523, !13525}
!13513 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13511, file: !118, line: 621, baseType: !2110, size: 32)
!13514 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13511, file: !118, line: 622, baseType: !13266, size: 32, offset: 32)
!13515 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13511, file: !118, line: 623, baseType: !32, size: 32, offset: 64)
!13516 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13511, file: !118, line: 624, baseType: !3330, size: 32, offset: 96)
!13517 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13511, file: !118, line: 625, baseType: !107, size: 32, offset: 128)
!13518 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13511, file: !118, line: 626, baseType: !107, size: 32, offset: 160)
!13519 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13511, file: !118, line: 627, baseType: !107, size: 32, offset: 192)
!13520 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13511, file: !118, line: 628, baseType: !109, size: 32, offset: 224)
!13521 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13511, file: !118, line: 629, baseType: !110, size: 32, offset: 256)
!13522 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13511, file: !118, line: 630, baseType: !854, size: 32, offset: 288)
!13523 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13511, file: !118, line: 631, baseType: !13524, size: 32, offset: 320)
!13524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 32)
!13525 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13511, file: !118, line: 632, baseType: !279, size: 32, offset: 352)
!13526 = !DILocalVariable(name: "thread_data", scope: !13527, file: !2106, line: 781, type: !13510)
!13527 = distinct !DILexicalBlock(scope: !13506, file: !2106, line: 781, column: 2)
!13528 = !DILocation(line: 0, scope: !13509)
!13529 = !DILocation(line: 750, column: 2, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13531, file: !2106, line: 750, column: 2)
!13531 = distinct !DILexicalBlock(scope: !13532, file: !2106, line: 750, column: 2)
!13532 = distinct !DILexicalBlock(scope: !13509, file: !2106, line: 750, column: 2)
!13533 = !DILocation(line: 750, column: 2, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13535, file: !2106, line: 750, column: 2)
!13535 = distinct !DILexicalBlock(scope: !13530, file: !2106, line: 750, column: 2)
!13536 = !DILocation(line: 750, column: 2, scope: !13531)
!13537 = !DILocation(line: 750, column: 2, scope: !13509)
!13538 = !DILocation(line: 780, column: 2, scope: !13506)
!13539 = !DILocation(line: 0, scope: !13527)
!13540 = !DILocation(line: 781, column: 2, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13542, file: !2106, line: 781, column: 2)
!13542 = distinct !DILexicalBlock(scope: !13543, file: !2106, line: 781, column: 2)
!13543 = distinct !DILexicalBlock(scope: !13527, file: !2106, line: 781, column: 2)
!13544 = !DILocation(line: 752, column: 17, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13532, file: !2106, line: 750, column: 38)
!13546 = !DILocation(line: 753, column: 17, scope: !13545)
!13547 = !DILocation(line: 754, column: 17, scope: !13545)
!13548 = !DILocation(line: 755, column: 17, scope: !13545)
!13549 = !DILocation(line: 756, column: 17, scope: !13545)
!13550 = !DILocation(line: 757, column: 17, scope: !13545)
!13551 = !DILocation(line: 758, column: 17, scope: !13545)
!13552 = !DILocation(line: 759, column: 17, scope: !13545)
!13553 = !DILocation(line: 760, column: 17, scope: !13545)
!13554 = !DILocation(line: 761, column: 17, scope: !13545)
!13555 = !DILocation(line: 751, column: 3, scope: !13545)
!13556 = !DILocation(line: 763, column: 16, scope: !13545)
!13557 = !DILocation(line: 763, column: 29, scope: !13545)
!13558 = !DILocation(line: 763, column: 39, scope: !13545)
!13559 = !DILocation(line: 750, column: 2, scope: !13532)
!13560 = !DILocation(line: 750, column: 2, scope: !13535)
!13561 = distinct !{!13561, !13537, !13562}
!13562 = !DILocation(line: 764, column: 2, scope: !13509)
!13563 = !DILocation(line: 781, column: 2, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13565, file: !2106, line: 781, column: 2)
!13565 = distinct !DILexicalBlock(scope: !13541, file: !2106, line: 781, column: 2)
!13566 = !DILocation(line: 781, column: 2, scope: !13542)
!13567 = !DILocation(line: 781, column: 2, scope: !13527)
!13568 = !DILocation(line: 787, column: 2, scope: !13506)
!13569 = !DILocation(line: 788, column: 1, scope: !13506)
!13570 = !DILocation(line: 782, column: 20, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13572, file: !2106, line: 782, column: 7)
!13572 = distinct !DILexicalBlock(scope: !13543, file: !2106, line: 781, column: 38)
!13573 = !DILocation(line: 782, column: 31, scope: !13571)
!13574 = !DILocation(line: 782, column: 7, scope: !13572)
!13575 = !DILocation(line: 783, column: 37, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13571, file: !2106, line: 782, column: 51)
!13577 = !DILocation(line: 784, column: 10, scope: !13576)
!13578 = !DILocation(line: 783, column: 4, scope: !13576)
!13579 = !DILocation(line: 785, column: 3, scope: !13576)
!13580 = !DILocation(line: 781, column: 2, scope: !13543)
!13581 = !DILocation(line: 781, column: 2, scope: !13565)
!13582 = distinct !{!13582, !13567, !13583}
!13583 = !DILocation(line: 786, column: 2, scope: !13527)
!13584 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3245, file: !3245, line: 403, type: !3246, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13585)
!13585 = !{!13586}
!13586 = !DILocalVariable(name: "t", arg: 1, scope: !13584, file: !3245, line: 403, type: !111)
!13587 = !DILocation(line: 0, scope: !13584)
!13588 = !DILocalVariable(name: "t", arg: 1, scope: !13589, file: !3245, line: 102, type: !111)
!13589 = distinct !DISubprogram(name: "z_tmcvt", scope: !3245, file: !3245, line: 102, type: !3253, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13590)
!13590 = !{!13588, !13591, !13592, !13593, !13594, !13595, !13596, !13597, !13598, !13599, !13600}
!13591 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13589, file: !3245, line: 102, type: !110)
!13592 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13589, file: !3245, line: 103, type: !110)
!13593 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13589, file: !3245, line: 103, type: !360)
!13594 = !DILocalVariable(name: "result32", arg: 5, scope: !13589, file: !3245, line: 104, type: !360)
!13595 = !DILocalVariable(name: "round_up", arg: 6, scope: !13589, file: !3245, line: 104, type: !360)
!13596 = !DILocalVariable(name: "round_off", arg: 7, scope: !13589, file: !3245, line: 105, type: !360)
!13597 = !DILocalVariable(name: "mul_ratio", scope: !13589, file: !3245, line: 107, type: !360)
!13598 = !DILocalVariable(name: "div_ratio", scope: !13589, file: !3245, line: 109, type: !360)
!13599 = !DILocalVariable(name: "off", scope: !13589, file: !3245, line: 116, type: !111)
!13600 = !DILocalVariable(name: "rdivisor", scope: !13601, file: !3245, line: 119, type: !110)
!13601 = distinct !DILexicalBlock(scope: !13602, file: !3245, line: 118, column: 18)
!13602 = distinct !DILexicalBlock(scope: !13589, file: !3245, line: 118, column: 6)
!13603 = !DILocation(line: 0, scope: !13589, inlinedAt: !13604)
!13604 = distinct !DILocation(line: 406, column: 9, scope: !13584)
!13605 = !DILocation(line: 145, column: 13, scope: !13606, inlinedAt: !13604)
!13606 = distinct !DILexicalBlock(scope: !13607, file: !3245, line: 144, column: 10)
!13607 = distinct !DILexicalBlock(scope: !13608, file: !3245, line: 142, column: 7)
!13608 = distinct !DILexicalBlock(scope: !13609, file: !3245, line: 141, column: 24)
!13609 = distinct !DILexicalBlock(scope: !13610, file: !3245, line: 141, column: 13)
!13610 = distinct !DILexicalBlock(scope: !13589, file: !3245, line: 134, column: 6)
!13611 = !DILocation(line: 406, column: 2, scope: !13584)
!13612 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2106, file: !2106, line: 817, type: !4456, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13613)
!13613 = !{!13614, !13615, !13616, !13617}
!13614 = !DILocalVariable(name: "entry", arg: 1, scope: !13612, file: !2106, line: 817, type: !3330)
!13615 = !DILocalVariable(name: "p1", arg: 2, scope: !13612, file: !2106, line: 818, type: !107)
!13616 = !DILocalVariable(name: "p2", arg: 3, scope: !13612, file: !2106, line: 818, type: !107)
!13617 = !DILocalVariable(name: "p3", arg: 4, scope: !13612, file: !2106, line: 818, type: !107)
!13618 = !DILocation(line: 0, scope: !13612)
!13619 = !DILocation(line: 822, column: 2, scope: !13612)
!13620 = !DILocation(line: 822, column: 17, scope: !13612)
!13621 = !DILocation(line: 822, column: 30, scope: !13612)
!13622 = !DILocation(line: 823, column: 2, scope: !13612)
!13623 = !DILocation(line: 845, column: 2, scope: !13612)
!13624 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2106, file: !2106, line: 853, type: !13625, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13628)
!13625 = !DISubroutineType(types: !13626)
!13626 = !{!360, !13627}
!13627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 32)
!13628 = !{!13629, !13630}
!13629 = !DILocalVariable(name: "l", arg: 1, scope: !13624, file: !2106, line: 853, type: !13627)
!13630 = !DILocalVariable(name: "thread_cpu", scope: !13624, file: !2106, line: 855, type: !22)
!13631 = !DILocation(line: 0, scope: !13624)
!13632 = !DILocation(line: 855, column: 28, scope: !13624)
!13633 = !DILocation(line: 857, column: 17, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13624, file: !2106, line: 857, column: 6)
!13635 = !DILocation(line: 857, column: 6, scope: !13624)
!13636 = !DILocation(line: 858, column: 19, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13638, file: !2106, line: 858, column: 7)
!13638 = distinct !DILexicalBlock(scope: !13634, file: !2106, line: 857, column: 24)
!13639 = !DILocation(line: 858, column: 42, scope: !13637)
!13640 = !DILocation(line: 858, column: 28, scope: !13637)
!13641 = !DILocation(line: 858, column: 25, scope: !13637)
!13642 = !DILocation(line: 858, column: 7, scope: !13638)
!13643 = !DILocation(line: 862, column: 2, scope: !13624)
!13644 = !DILocation(line: 863, column: 1, scope: !13624)
!13645 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2106, file: !2106, line: 865, type: !13625, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13646)
!13646 = !{!13647}
!13647 = !DILocalVariable(name: "l", arg: 1, scope: !13645, file: !2106, line: 865, type: !13627)
!13648 = !DILocation(line: 0, scope: !13645)
!13649 = !DILocation(line: 867, column: 9, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13645, file: !2106, line: 867, column: 6)
!13651 = !DILocation(line: 867, column: 38, scope: !13650)
!13652 = !DILocation(line: 867, column: 24, scope: !13650)
!13653 = !DILocation(line: 867, column: 54, scope: !13650)
!13654 = !DILocation(line: 867, column: 43, scope: !13650)
!13655 = !DILocation(line: 867, column: 41, scope: !13650)
!13656 = !DILocation(line: 867, column: 20, scope: !13650)
!13657 = !DILocation(line: 867, column: 6, scope: !13645)
!13658 = !DILocation(line: 870, column: 16, scope: !13645)
!13659 = !DILocation(line: 871, column: 2, scope: !13645)
!13660 = !DILocation(line: 872, column: 1, scope: !13645)
!13661 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2106, file: !2106, line: 874, type: !13662, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13664)
!13662 = !DISubroutineType(types: !13663)
!13663 = !{null, !13627}
!13664 = !{!13665}
!13665 = !DILocalVariable(name: "l", arg: 1, scope: !13661, file: !2106, line: 874, type: !13627)
!13666 = !DILocation(line: 0, scope: !13661)
!13667 = !DILocation(line: 876, column: 32, scope: !13661)
!13668 = !DILocation(line: 876, column: 18, scope: !13661)
!13669 = !DILocation(line: 876, column: 48, scope: !13661)
!13670 = !DILocation(line: 876, column: 37, scope: !13661)
!13671 = !DILocation(line: 876, column: 35, scope: !13661)
!13672 = !DILocation(line: 876, column: 5, scope: !13661)
!13673 = !DILocation(line: 876, column: 16, scope: !13661)
!13674 = !DILocation(line: 877, column: 1, scope: !13661)
!13675 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2106, file: !2106, line: 888, type: !13676, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13678)
!13676 = !DISubroutineType(types: !13677)
!13677 = !{!109, !2110}
!13678 = !{!13679}
!13679 = !DILocalVariable(name: "thread", arg: 1, scope: !13675, file: !2106, line: 888, type: !2110)
!13680 = !DILocation(line: 0, scope: !13675)
!13681 = !DILocation(line: 893, column: 2, scope: !13675)
!13682 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2106, file: !2106, line: 897, type: !13683, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13685)
!13683 = !DISubroutineType(types: !13684)
!13684 = !{!109, !2110, !32}
!13685 = !{!13686, !13687}
!13686 = !DILocalVariable(name: "thread", arg: 1, scope: !13682, file: !2106, line: 897, type: !2110)
!13687 = !DILocalVariable(name: "options", arg: 2, scope: !13682, file: !2106, line: 897, type: !32)
!13688 = !DILocation(line: 0, scope: !13682)
!13689 = !DILocation(line: 902, column: 2, scope: !13682)
!13690 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2106, file: !2106, line: 1072, type: !13691, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13696)
!13691 = !DISubroutineType(types: !13692)
!13692 = !{!109, !2109, !13693}
!13693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13694, size: 32)
!13694 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !156, line: 234, baseType: !13695)
!13695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !156, line: 192, elements: !2045)
!13696 = !{!13697, !13698}
!13697 = !DILocalVariable(name: "thread", arg: 1, scope: !13690, file: !2106, line: 1072, type: !2109)
!13698 = !DILocalVariable(name: "stats", arg: 2, scope: !13690, file: !2106, line: 1073, type: !13693)
!13699 = !DILocation(line: 0, scope: !13690)
!13700 = !DILocation(line: 1075, column: 14, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13690, file: !2106, line: 1075, column: 6)
!13702 = !DILocation(line: 1075, column: 23, scope: !13701)
!13703 = !DILocation(line: 1086, column: 1, scope: !13690)
!13704 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2106, file: !2106, line: 1088, type: !13705, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !13707)
!13705 = !DISubroutineType(types: !13706)
!13706 = !{!109, !13693}
!13707 = !{!13708}
!13708 = !DILocalVariable(name: "stats", arg: 1, scope: !13704, file: !2106, line: 1088, type: !13693)
!13709 = !DILocation(line: 0, scope: !13704)
!13710 = !DILocation(line: 1094, column: 12, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13704, file: !2106, line: 1094, column: 6)
!13712 = !DILocation(line: 1120, column: 1, scope: !13704)
!13713 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13714, file: !13714, line: 20, type: !3062, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3043, retainedNodes: !2045)
!13714 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13715 = !DILocation(line: 30, column: 2, scope: !13713)
!13716 = !DILocation(line: 31, column: 1, scope: !13713)
!13717 = distinct !DISubprogram(name: "idle", scope: !13714, file: !13714, line: 33, type: !3174, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3043, retainedNodes: !13718)
!13718 = !{!13719, !13720, !13721}
!13719 = !DILocalVariable(name: "unused1", arg: 1, scope: !13717, file: !13714, line: 33, type: !107)
!13720 = !DILocalVariable(name: "unused2", arg: 2, scope: !13717, file: !13714, line: 33, type: !107)
!13721 = !DILocalVariable(name: "unused3", arg: 3, scope: !13717, file: !13714, line: 33, type: !107)
!13722 = !DILocation(line: 0, scope: !13717)
!13723 = !DILocation(line: 39, column: 2, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13725, file: !13714, line: 39, column: 2)
!13725 = distinct !DILexicalBlock(scope: !13717, file: !13714, line: 39, column: 2)
!13726 = !DILocation(line: 39, column: 2, scope: !13725)
!13727 = !DILocation(line: 39, column: 2, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !13724, file: !13714, line: 39, column: 2)
!13729 = !DILocation(line: 55, column: 2, scope: !13730, inlinedAt: !13734)
!13730 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !6051, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3043, retainedNodes: !13731)
!13731 = !{!13732, !13733}
!13732 = !DILocalVariable(name: "key", scope: !13730, file: !6050, line: 44, type: !32)
!13733 = !DILocalVariable(name: "tmp", scope: !13730, file: !6050, line: 53, type: !32)
!13734 = distinct !DILocation(line: 62, column: 10, scope: !13735)
!13735 = distinct !DILexicalBlock(scope: !13717, file: !13714, line: 41, column: 15)
!13736 = !{i64 1652651}
!13737 = !DILocation(line: 0, scope: !13730, inlinedAt: !13734)
!13738 = !DILocation(line: 86, column: 3, scope: !13735)
!13739 = !DILocation(line: 41, column: 2, scope: !13717)
!13740 = distinct !{!13740, !13739, !13741}
!13741 = !DILocation(line: 105, column: 2, scope: !13717)
!13742 = distinct !DISubprogram(name: "k_cpu_idle", scope: !118, file: !118, line: 5627, type: !3062, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3043, retainedNodes: !2045)
!13743 = !DILocation(line: 5629, column: 2, scope: !13742)
!13744 = !DILocation(line: 5630, column: 1, scope: !13742)
!13745 = !DISubprogram(name: "arch_cpu_idle", scope: !3329, file: !3329, line: 167, type: !3062, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2045)
!13746 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2341, file: !2341, line: 49, type: !13747, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !13756)
!13747 = !DISubroutineType(types: !13748)
!13748 = !{!109, !13749}
!13749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13750, size: 32)
!13750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !13751)
!13751 = !{!13752, !13753, !13754, !13755}
!13752 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13750, file: !118, line: 2722, baseType: !2269, size: 64)
!13753 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13750, file: !118, line: 2724, baseType: !2251, size: 32, offset: 64)
!13754 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13750, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!13755 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13750, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!13756 = !{!13757}
!13757 = !DILocalVariable(name: "mutex", arg: 1, scope: !13746, file: !2341, line: 49, type: !13749)
!13758 = !DILocation(line: 0, scope: !13746)
!13759 = !DILocation(line: 51, column: 9, scope: !13746)
!13760 = !DILocation(line: 51, column: 15, scope: !13746)
!13761 = !DILocation(line: 52, column: 9, scope: !13746)
!13762 = !DILocation(line: 52, column: 20, scope: !13746)
!13763 = !DILocation(line: 54, column: 23, scope: !13746)
!13764 = !DILocation(line: 54, column: 2, scope: !13746)
!13765 = !DILocation(line: 60, column: 2, scope: !13746)
!13766 = distinct !DISubprogram(name: "z_waitq_init", scope: !13327, file: !13327, line: 47, type: !13767, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !13769)
!13767 = !DISubroutineType(types: !13768)
!13768 = !{null, !2268}
!13769 = !{!13770}
!13770 = !DILocalVariable(name: "w", arg: 1, scope: !13766, file: !13327, line: 47, type: !2268)
!13771 = !DILocation(line: 0, scope: !13766)
!13772 = !DILocation(line: 49, column: 21, scope: !13766)
!13773 = !DILocation(line: 49, column: 2, scope: !13766)
!13774 = !DILocation(line: 50, column: 1, scope: !13766)
!13775 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13776, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !13779)
!13776 = !DISubroutineType(types: !13777)
!13777 = !{null, !13778}
!13778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 32)
!13779 = !{!13780}
!13780 = !DILocalVariable(name: "list", arg: 1, scope: !13775, file: !127, line: 197, type: !13778)
!13781 = !DILocation(line: 0, scope: !13775)
!13782 = !DILocation(line: 199, column: 8, scope: !13775)
!13783 = !DILocation(line: 199, column: 13, scope: !13775)
!13784 = !DILocation(line: 200, column: 8, scope: !13775)
!13785 = !DILocation(line: 200, column: 13, scope: !13775)
!13786 = !DILocation(line: 201, column: 1, scope: !13775)
!13787 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2341, file: !2341, line: 95, type: !13788, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !13794)
!13788 = !DISubroutineType(types: !13789)
!13789 = !{!109, !13749, !13790}
!13790 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13791)
!13791 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13792)
!13792 = !{!13793}
!13793 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13791, file: !104, line: 66, baseType: !103, size: 64)
!13794 = !{!13795, !13796, !13797, !13798, !13803, !13804, !13805}
!13795 = !DILocalVariable(name: "mutex", arg: 1, scope: !13787, file: !2341, line: 95, type: !13749)
!13796 = !DILocalVariable(name: "timeout", arg: 2, scope: !13787, file: !2341, line: 95, type: !13790)
!13797 = !DILocalVariable(name: "new_prio", scope: !13787, file: !2341, line: 97, type: !109)
!13798 = !DILocalVariable(name: "key", scope: !13787, file: !2341, line: 98, type: !13799)
!13799 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !13800)
!13800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !13801)
!13801 = !{!13802}
!13802 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13800, file: !251, line: 33, baseType: !109, size: 32)
!13803 = !DILocalVariable(name: "resched", scope: !13787, file: !2341, line: 99, type: !360)
!13804 = !DILocalVariable(name: "got_mutex", scope: !13787, file: !2341, line: 146, type: !109)
!13805 = !DILocalVariable(name: "waiter", scope: !13806, file: !2341, line: 169, type: !2251)
!13806 = distinct !DILexicalBlock(scope: !13807, file: !2341, line: 168, column: 36)
!13807 = distinct !DILexicalBlock(scope: !13787, file: !2341, line: 168, column: 6)
!13808 = !DILocation(line: 0, scope: !13787)
!13809 = !DILocation(line: 1031, column: 3, scope: !13810, inlinedAt: !13813)
!13810 = distinct !DISubprogram(name: "__get_IPSR", scope: !6388, file: !6388, line: 1027, type: !7393, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !13811)
!13811 = !{!13812}
!13812 = !DILocalVariable(name: "result", scope: !13810, file: !6388, line: 1029, type: !110)
!13813 = distinct !DILocation(line: 48, column: 10, scope: !13814, inlinedAt: !13815)
!13814 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7399, file: !7399, line: 46, type: !7400, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !2045)
!13815 = distinct !DILocation(line: 101, column: 2, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13817, file: !2341, line: 101, column: 2)
!13817 = distinct !DILexicalBlock(scope: !13787, file: !2341, line: 101, column: 2)
!13818 = !{i64 2450994}
!13819 = !DILocation(line: 0, scope: !13810, inlinedAt: !13813)
!13820 = !DILocation(line: 48, column: 9, scope: !13814, inlinedAt: !13815)
!13821 = !DILocation(line: 101, column: 2, scope: !13817)
!13822 = !DILocation(line: 101, column: 2, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13816, file: !2341, line: 101, column: 2)
!13824 = !DILocalVariable(name: "l", arg: 1, scope: !13825, file: !251, line: 136, type: !13828)
!13825 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !13826, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !13829)
!13826 = !DISubroutineType(types: !13827)
!13827 = !{!13799, !13828}
!13828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 32)
!13829 = !{!13824, !13830}
!13830 = !DILocalVariable(name: "k", scope: !13825, file: !251, line: 139, type: !13799)
!13831 = !DILocation(line: 0, scope: !13825, inlinedAt: !13832)
!13832 = distinct !DILocation(line: 105, column: 8, scope: !13787)
!13833 = !DILocation(line: 55, column: 2, scope: !13834, inlinedAt: !13838)
!13834 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !6051, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !13835)
!13835 = !{!13836, !13837}
!13836 = !DILocalVariable(name: "key", scope: !13834, file: !6050, line: 44, type: !32)
!13837 = !DILocalVariable(name: "tmp", scope: !13834, file: !6050, line: 53, type: !32)
!13838 = distinct !DILocation(line: 145, column: 10, scope: !13825, inlinedAt: !13832)
!13839 = !{i64 1657059}
!13840 = !DILocation(line: 0, scope: !13834, inlinedAt: !13838)
!13841 = !DILocation(line: 148, column: 2, scope: !13842, inlinedAt: !13832)
!13842 = distinct !DILexicalBlock(scope: !13843, file: !251, line: 148, column: 2)
!13843 = distinct !DILexicalBlock(scope: !13825, file: !251, line: 148, column: 2)
!13844 = !DILocation(line: 148, column: 2, scope: !13843, inlinedAt: !13832)
!13845 = !DILocation(line: 148, column: 2, scope: !13846, inlinedAt: !13832)
!13846 = distinct !DILexicalBlock(scope: !13842, file: !251, line: 148, column: 2)
!13847 = !DILocation(line: 160, column: 2, scope: !13825, inlinedAt: !13832)
!13848 = !DILocation(line: 107, column: 6, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13787, file: !2341, line: 107, column: 6)
!13850 = !DILocation(line: 107, column: 6, scope: !13787)
!13851 = !{!"branch_weights", i32 2000, i32 1}
!13852 = !DILocation(line: 110, column: 6, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13849, file: !2341, line: 107, column: 71)
!13854 = !DILocation(line: 110, column: 21, scope: !13853)
!13855 = !DILocation(line: 109, column: 28, scope: !13853)
!13856 = !DILocation(line: 111, column: 13, scope: !13853)
!13857 = !DILocation(line: 114, column: 18, scope: !13853)
!13858 = !DILocation(line: 109, column: 10, scope: !13853)
!13859 = !DILocation(line: 109, column: 26, scope: !13853)
!13860 = !DILocation(line: 113, column: 20, scope: !13853)
!13861 = !DILocation(line: 114, column: 10, scope: !13853)
!13862 = !DILocation(line: 114, column: 16, scope: !13853)
!13863 = !DILocalVariable(name: "key", arg: 2, scope: !13864, file: !251, line: 190, type: !13799)
!13864 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !13865, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !13867)
!13865 = !DISubroutineType(types: !13866)
!13866 = !{null, !13828, !13799}
!13867 = !{!13868, !13863}
!13868 = !DILocalVariable(name: "l", arg: 1, scope: !13864, file: !251, line: 189, type: !13828)
!13869 = !DILocation(line: 0, scope: !13864, inlinedAt: !13870)
!13870 = distinct !DILocation(line: 120, column: 3, scope: !13853)
!13871 = !DILocation(line: 194, column: 2, scope: !13872, inlinedAt: !13870)
!13872 = distinct !DILexicalBlock(scope: !13873, file: !251, line: 194, column: 2)
!13873 = distinct !DILexicalBlock(scope: !13864, file: !251, line: 194, column: 2)
!13874 = !DILocation(line: 194, column: 2, scope: !13873, inlinedAt: !13870)
!13875 = !DILocation(line: 194, column: 2, scope: !13876, inlinedAt: !13870)
!13876 = distinct !DILexicalBlock(scope: !13872, file: !251, line: 194, column: 2)
!13877 = !DILocalVariable(name: "key", arg: 1, scope: !13878, file: !6050, line: 84, type: !32)
!13878 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !6061, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !13879)
!13879 = !{!13877}
!13880 = !DILocation(line: 0, scope: !13878, inlinedAt: !13881)
!13881 = distinct !DILocation(line: 215, column: 2, scope: !13864, inlinedAt: !13870)
!13882 = !DILocation(line: 95, column: 2, scope: !13878, inlinedAt: !13881)
!13883 = !{i64 1657876}
!13884 = !DILocation(line: 124, column: 3, scope: !13853)
!13885 = !DILocation(line: 127, column: 6, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13787, file: !2341, line: 127, column: 6)
!13887 = !DILocation(line: 127, column: 6, scope: !13787)
!13888 = !{!"branch_weights", i32 1, i32 2000}
!13889 = !DILocation(line: 0, scope: !13864, inlinedAt: !13890)
!13890 = distinct !DILocation(line: 128, column: 3, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13886, file: !2341, line: 127, column: 50)
!13892 = !DILocation(line: 194, column: 2, scope: !13872, inlinedAt: !13890)
!13893 = !DILocation(line: 194, column: 2, scope: !13873, inlinedAt: !13890)
!13894 = !DILocation(line: 194, column: 2, scope: !13876, inlinedAt: !13890)
!13895 = !DILocation(line: 0, scope: !13878, inlinedAt: !13896)
!13896 = distinct !DILocation(line: 215, column: 2, scope: !13864, inlinedAt: !13890)
!13897 = !DILocation(line: 95, column: 2, scope: !13878, inlinedAt: !13896)
!13898 = !DILocation(line: 132, column: 3, scope: !13891)
!13899 = !DILocation(line: 137, column: 53, scope: !13787)
!13900 = !DILocation(line: 137, column: 38, scope: !13787)
!13901 = !DILocation(line: 138, column: 29, scope: !13787)
!13902 = !DILocation(line: 138, column: 10, scope: !13787)
!13903 = !DILocation(line: 137, column: 13, scope: !13787)
!13904 = !DILocation(line: 142, column: 6, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13787, file: !2341, line: 142, column: 6)
!13906 = !DILocation(line: 142, column: 6, scope: !13787)
!13907 = !DILocation(line: 143, column: 13, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13905, file: !2341, line: 142, column: 59)
!13909 = !DILocation(line: 144, column: 2, scope: !13908)
!13910 = !DILocation(line: 146, column: 50, scope: !13787)
!13911 = !DILocation(line: 146, column: 18, scope: !13787)
!13912 = !DILocation(line: 153, column: 16, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13787, file: !2341, line: 153, column: 6)
!13914 = !DILocation(line: 153, column: 6, scope: !13787)
!13915 = !DILocation(line: 0, scope: !13825, inlinedAt: !13916)
!13916 = distinct !DILocation(line: 162, column: 8, scope: !13787)
!13917 = !DILocation(line: 55, column: 2, scope: !13834, inlinedAt: !13918)
!13918 = distinct !DILocation(line: 145, column: 10, scope: !13825, inlinedAt: !13916)
!13919 = !DILocation(line: 0, scope: !13834, inlinedAt: !13918)
!13920 = !DILocation(line: 148, column: 2, scope: !13842, inlinedAt: !13916)
!13921 = !DILocation(line: 148, column: 2, scope: !13843, inlinedAt: !13916)
!13922 = !DILocation(line: 148, column: 2, scope: !13846, inlinedAt: !13916)
!13923 = !DILocation(line: 160, column: 2, scope: !13825, inlinedAt: !13916)
!13924 = !DILocation(line: 168, column: 6, scope: !13807)
!13925 = !DILocation(line: 168, column: 6, scope: !13787)
!13926 = !DILocation(line: 169, column: 29, scope: !13806)
!13927 = !DILocation(line: 0, scope: !13806)
!13928 = !DILocation(line: 171, column: 22, scope: !13806)
!13929 = !DILocation(line: 171, column: 14, scope: !13806)
!13930 = !DILocation(line: 172, column: 42, scope: !13806)
!13931 = !DILocation(line: 172, column: 29, scope: !13806)
!13932 = !DILocation(line: 172, column: 55, scope: !13806)
!13933 = !DILocation(line: 172, column: 4, scope: !13806)
!13934 = !DILocation(line: 173, column: 11, scope: !13806)
!13935 = !DILocation(line: 177, column: 13, scope: !13806)
!13936 = !DILocation(line: 177, column: 48, scope: !13806)
!13937 = !DILocation(line: 180, column: 6, scope: !13787)
!13938 = !DILocation(line: 181, column: 3, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13940, file: !2341, line: 180, column: 15)
!13940 = distinct !DILexicalBlock(scope: !13787, file: !2341, line: 180, column: 6)
!13941 = !DILocation(line: 182, column: 2, scope: !13939)
!13942 = !DILocation(line: 0, scope: !13864, inlinedAt: !13943)
!13943 = distinct !DILocation(line: 183, column: 3, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13940, file: !2341, line: 182, column: 9)
!13945 = !DILocation(line: 194, column: 2, scope: !13872, inlinedAt: !13943)
!13946 = !DILocation(line: 194, column: 2, scope: !13873, inlinedAt: !13943)
!13947 = !DILocation(line: 194, column: 2, scope: !13876, inlinedAt: !13943)
!13948 = !DILocation(line: 0, scope: !13878, inlinedAt: !13949)
!13949 = distinct !DILocation(line: 215, column: 2, scope: !13864, inlinedAt: !13943)
!13950 = !DILocation(line: 95, column: 2, scope: !13878, inlinedAt: !13949)
!13951 = !DILocation(line: 189, column: 1, scope: !13787)
!13952 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2341, file: !2341, line: 72, type: !13953, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !13955)
!13953 = !DISubroutineType(types: !13954)
!13954 = !{!854, !854, !854}
!13955 = !{!13956, !13957, !13958}
!13956 = !DILocalVariable(name: "target", arg: 1, scope: !13952, file: !2341, line: 72, type: !854)
!13957 = !DILocalVariable(name: "limit", arg: 2, scope: !13952, file: !2341, line: 72, type: !854)
!13958 = !DILocalVariable(name: "new_prio", scope: !13952, file: !2341, line: 74, type: !109)
!13959 = !DILocation(line: 0, scope: !13952)
!13960 = !DILocation(line: 74, column: 17, scope: !13952)
!13961 = !DILocation(line: 76, column: 13, scope: !13952)
!13962 = !DILocation(line: 78, column: 2, scope: !13952)
!13963 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12966, file: !12966, line: 211, type: !13964, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !13966)
!13964 = !DISubroutineType(types: !13965)
!13965 = !{!360, !109, !109}
!13966 = !{!13967, !13968}
!13967 = !DILocalVariable(name: "prio", arg: 1, scope: !13963, file: !12966, line: 211, type: !109)
!13968 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13963, file: !12966, line: 211, type: !109)
!13969 = !DILocation(line: 0, scope: !13963)
!13970 = !DILocation(line: 213, column: 9, scope: !13963)
!13971 = !DILocation(line: 213, column: 2, scope: !13963)
!13972 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2341, file: !2341, line: 81, type: !13973, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !13975)
!13973 = !DISubroutineType(types: !13974)
!13974 = !{!360, !13749, !854}
!13975 = !{!13976, !13977}
!13976 = !DILocalVariable(name: "mutex", arg: 1, scope: !13972, file: !2341, line: 81, type: !13749)
!13977 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13972, file: !2341, line: 81, type: !854)
!13978 = !DILocation(line: 0, scope: !13972)
!13979 = !DILocation(line: 83, column: 13, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13972, file: !2341, line: 83, column: 6)
!13981 = !DILocation(line: 83, column: 25, scope: !13980)
!13982 = !DILocation(line: 83, column: 6, scope: !13980)
!13983 = !DILocation(line: 83, column: 30, scope: !13980)
!13984 = !DILocation(line: 83, column: 6, scope: !13972)
!13985 = !DILocation(line: 90, column: 10, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13980, file: !2341, line: 83, column: 43)
!13987 = !DILocation(line: 90, column: 3, scope: !13986)
!13988 = !DILocation(line: 93, column: 1, scope: !13972)
!13989 = distinct !DISubprogram(name: "z_waitq_head", scope: !13327, file: !13327, line: 52, type: !13990, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !13992)
!13990 = !DISubroutineType(types: !13991)
!13991 = !{!2251, !2268}
!13992 = !{!13993}
!13993 = !DILocalVariable(name: "w", arg: 1, scope: !13989, file: !13327, line: 52, type: !2268)
!13994 = !DILocation(line: 0, scope: !13989)
!13995 = !DILocation(line: 54, column: 52, scope: !13989)
!13996 = !DILocation(line: 54, column: 28, scope: !13989)
!13997 = !DILocation(line: 54, column: 9, scope: !13989)
!13998 = !DILocation(line: 54, column: 2, scope: !13989)
!13999 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14000, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !14002)
!14000 = !DISubroutineType(types: !14001)
!14001 = !{!2236, !13778}
!14002 = !{!14003}
!14003 = !DILocalVariable(name: "list", arg: 1, scope: !13999, file: !127, line: 294, type: !13778)
!14004 = !DILocation(line: 0, scope: !13999)
!14005 = !DILocation(line: 296, column: 9, scope: !13999)
!14006 = !DILocation(line: 296, column: 49, scope: !13999)
!14007 = !DILocation(line: 296, column: 2, scope: !13999)
!14008 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !14009, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !14011)
!14009 = !DISubroutineType(types: !14010)
!14010 = !{!360, !13778}
!14011 = !{!14012}
!14012 = !DILocalVariable(name: "list", arg: 1, scope: !14008, file: !127, line: 266, type: !13778)
!14013 = !DILocation(line: 0, scope: !14008)
!14014 = !DILocation(line: 268, column: 15, scope: !14008)
!14015 = !DILocation(line: 268, column: 20, scope: !14008)
!14016 = !DILocation(line: 268, column: 2, scope: !14008)
!14017 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12966, file: !12966, line: 206, type: !13964, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !14018)
!14018 = !{!14019, !14020}
!14019 = !DILocalVariable(name: "prio1", arg: 1, scope: !14017, file: !12966, line: 206, type: !109)
!14020 = !DILocalVariable(name: "prio2", arg: 2, scope: !14017, file: !12966, line: 206, type: !109)
!14021 = !DILocation(line: 0, scope: !14017)
!14022 = !DILocation(line: 208, column: 15, scope: !14017)
!14023 = !DILocation(line: 208, column: 2, scope: !14017)
!14024 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12966, file: !12966, line: 186, type: !303, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !14025)
!14025 = !{!14026}
!14026 = !DILocalVariable(name: "prio", arg: 1, scope: !14024, file: !12966, line: 186, type: !109)
!14027 = !DILocation(line: 0, scope: !14024)
!14028 = !DILocation(line: 188, column: 9, scope: !14024)
!14029 = !DILocation(line: 188, column: 2, scope: !14024)
!14030 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12966, file: !12966, line: 181, type: !14031, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !14033)
!14031 = !DISubroutineType(types: !14032)
!14032 = !{!360, !109}
!14033 = !{!14034}
!14034 = !DILocalVariable(name: "prio", arg: 1, scope: !14030, file: !12966, line: 181, type: !109)
!14035 = !DILocation(line: 0, scope: !14030)
!14036 = !DILocation(line: 183, column: 14, scope: !14030)
!14037 = !DILocation(line: 183, column: 2, scope: !14030)
!14038 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2341, file: !2341, line: 201, type: !13747, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !14039)
!14039 = !{!14040, !14041, !14042, !14043}
!14040 = !DILocalVariable(name: "mutex", arg: 1, scope: !14038, file: !2341, line: 201, type: !13749)
!14041 = !DILocalVariable(name: "new_owner", scope: !14038, file: !2341, line: 203, type: !2251)
!14042 = !DILocalVariable(name: "key", scope: !14038, file: !2341, line: 242, type: !13799)
!14043 = !DILabel(scope: !14038, name: "k_mutex_unlock_return", file: !2341, line: 270)
!14044 = !DILocation(line: 0, scope: !14038)
!14045 = !DILocation(line: 1031, column: 3, scope: !13810, inlinedAt: !14046)
!14046 = distinct !DILocation(line: 48, column: 10, scope: !13814, inlinedAt: !14047)
!14047 = distinct !DILocation(line: 205, column: 2, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14049, file: !2341, line: 205, column: 2)
!14049 = distinct !DILexicalBlock(scope: !14038, file: !2341, line: 205, column: 2)
!14050 = !DILocation(line: 0, scope: !13810, inlinedAt: !14046)
!14051 = !DILocation(line: 48, column: 9, scope: !13814, inlinedAt: !14047)
!14052 = !DILocation(line: 205, column: 2, scope: !14049)
!14053 = !DILocation(line: 205, column: 2, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14048, file: !2341, line: 205, column: 2)
!14055 = !DILocation(line: 209, column: 2, scope: !14056)
!14056 = distinct !DILexicalBlock(scope: !14038, file: !2341, line: 209, column: 2)
!14057 = !DILocation(line: 209, column: 2, scope: !14038)
!14058 = !DILocation(line: 217, column: 2, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14038, file: !2341, line: 217, column: 2)
!14060 = !DILocation(line: 217, column: 2, scope: !14038)
!14061 = !DILocation(line: 229, column: 2, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14063, file: !2341, line: 229, column: 2)
!14063 = distinct !DILexicalBlock(scope: !14038, file: !2341, line: 229, column: 2)
!14064 = !DILocation(line: 229, column: 2, scope: !14063)
!14065 = !DILocation(line: 229, column: 2, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14062, file: !2341, line: 229, column: 2)
!14067 = !DILocation(line: 238, column: 20, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14069, file: !2341, line: 237, column: 30)
!14069 = distinct !DILexicalBlock(scope: !14038, file: !2341, line: 237, column: 6)
!14070 = !DILocation(line: 239, column: 3, scope: !14068)
!14071 = !DILocation(line: 0, scope: !13825, inlinedAt: !14072)
!14072 = distinct !DILocation(line: 242, column: 25, scope: !14038)
!14073 = !DILocation(line: 55, column: 2, scope: !13834, inlinedAt: !14074)
!14074 = distinct !DILocation(line: 145, column: 10, scope: !13825, inlinedAt: !14072)
!14075 = !DILocation(line: 0, scope: !13834, inlinedAt: !14074)
!14076 = !DILocation(line: 148, column: 2, scope: !13842, inlinedAt: !14072)
!14077 = !DILocation(line: 148, column: 2, scope: !13843, inlinedAt: !14072)
!14078 = !DILocation(line: 148, column: 2, scope: !13846, inlinedAt: !14072)
!14079 = !DILocation(line: 160, column: 2, scope: !13825, inlinedAt: !14072)
!14080 = !DILocation(line: 244, column: 34, scope: !14038)
!14081 = !DILocation(line: 244, column: 2, scope: !14038)
!14082 = !DILocation(line: 247, column: 44, scope: !14038)
!14083 = !DILocation(line: 247, column: 14, scope: !14038)
!14084 = !DILocation(line: 249, column: 15, scope: !14038)
!14085 = !DILocation(line: 254, column: 16, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14038, file: !2341, line: 254, column: 6)
!14087 = !DILocation(line: 254, column: 6, scope: !14038)
!14088 = !DILocation(line: 260, column: 44, scope: !14089)
!14089 = distinct !DILexicalBlock(scope: !14086, file: !2341, line: 254, column: 25)
!14090 = !DILocation(line: 260, column: 28, scope: !14089)
!14091 = !DILocation(line: 260, column: 26, scope: !14089)
!14092 = !DILocalVariable(name: "thread", arg: 1, scope: !14093, file: !12986, line: 65, type: !2251)
!14093 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12986, file: !12986, line: 65, type: !14094, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2233, retainedNodes: !14096)
!14094 = !DISubroutineType(types: !14095)
!14095 = !{null, !2251, !32}
!14096 = !{!14092, !14097}
!14097 = !DILocalVariable(name: "value", arg: 2, scope: !14093, file: !12986, line: 65, type: !32)
!14098 = !DILocation(line: 0, scope: !14093, inlinedAt: !14099)
!14099 = distinct !DILocation(line: 261, column: 3, scope: !14089)
!14100 = !DILocation(line: 67, column: 15, scope: !14093, inlinedAt: !14099)
!14101 = !DILocation(line: 67, column: 33, scope: !14093, inlinedAt: !14099)
!14102 = !DILocation(line: 262, column: 3, scope: !14089)
!14103 = !DILocation(line: 263, column: 3, scope: !14089)
!14104 = !DILocation(line: 264, column: 2, scope: !14089)
!14105 = !DILocation(line: 265, column: 21, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14086, file: !2341, line: 264, column: 9)
!14107 = !DILocation(line: 0, scope: !13864, inlinedAt: !14108)
!14108 = distinct !DILocation(line: 266, column: 3, scope: !14106)
!14109 = !DILocation(line: 194, column: 2, scope: !13872, inlinedAt: !14108)
!14110 = !DILocation(line: 194, column: 2, scope: !13873, inlinedAt: !14108)
!14111 = !DILocation(line: 194, column: 2, scope: !13876, inlinedAt: !14108)
!14112 = !DILocation(line: 0, scope: !13878, inlinedAt: !14113)
!14113 = distinct !DILocation(line: 215, column: 2, scope: !13864, inlinedAt: !14108)
!14114 = !DILocation(line: 95, column: 2, scope: !13878, inlinedAt: !14113)
!14115 = !DILocation(line: 274, column: 1, scope: !14038)
!14116 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2455, file: !2455, line: 93, type: !14117, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14119)
!14117 = !DISubroutineType(types: !14118)
!14118 = !{!854, !2347, !2347}
!14119 = !{!14120, !14121, !14122, !14123}
!14120 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14116, file: !2455, line: 93, type: !2347)
!14121 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14116, file: !2455, line: 94, type: !2347)
!14122 = !DILocalVariable(name: "b1", scope: !14116, file: !2455, line: 97, type: !854)
!14123 = !DILocalVariable(name: "b2", scope: !14116, file: !2455, line: 98, type: !854)
!14124 = !DILocation(line: 0, scope: !14116)
!14125 = !DILocation(line: 97, column: 30, scope: !14116)
!14126 = !DILocation(line: 98, column: 30, scope: !14116)
!14127 = !DILocation(line: 100, column: 9, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14116, file: !2455, line: 100, column: 6)
!14129 = !DILocation(line: 100, column: 6, scope: !14116)
!14130 = !DILocation(line: 125, column: 1, scope: !14116)
!14131 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2455, file: !2455, line: 428, type: !14132, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14134)
!14132 = !DISubroutineType(types: !14133)
!14133 = !{null, !2347}
!14134 = !{!14135}
!14135 = !DILocalVariable(name: "curr", arg: 1, scope: !14131, file: !2455, line: 428, type: !2347)
!14136 = !DILocation(line: 0, scope: !14131)
!14137 = !DILocation(line: 434, column: 6, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14131, file: !2455, line: 434, column: 6)
!14139 = !DILocation(line: 434, column: 23, scope: !14138)
!14140 = !DILocation(line: 434, column: 6, scope: !14131)
!14141 = !DILocation(line: 435, column: 50, scope: !14142)
!14142 = distinct !DILexicalBlock(scope: !14138, file: !2455, line: 434, column: 29)
!14143 = !DILocation(line: 435, column: 48, scope: !14142)
!14144 = !DILocation(line: 435, column: 29, scope: !14142)
!14145 = !DILocation(line: 436, column: 24, scope: !14142)
!14146 = !DILocation(line: 436, column: 3, scope: !14142)
!14147 = !DILocation(line: 437, column: 2, scope: !14142)
!14148 = !DILocation(line: 438, column: 1, scope: !14131)
!14149 = distinct !DISubprogram(name: "slice_time", scope: !2455, file: !2455, line: 407, type: !14150, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14152)
!14150 = !DISubroutineType(types: !14151)
!14151 = !{!109, !2347}
!14152 = !{!14153, !14154}
!14153 = !DILocalVariable(name: "curr", arg: 1, scope: !14149, file: !2455, line: 407, type: !2347)
!14154 = !DILocalVariable(name: "ret", scope: !14149, file: !2455, line: 409, type: !109)
!14155 = !DILocation(line: 0, scope: !14149)
!14156 = !DILocation(line: 409, column: 12, scope: !14149)
!14157 = !DILocation(line: 416, column: 2, scope: !14149)
!14158 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2455, file: !2455, line: 440, type: !14159, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14161)
!14159 = !DISubroutineType(types: !14160)
!14160 = !{null, !854, !109}
!14161 = !{!14162, !14163, !14164, !14170}
!14162 = !DILocalVariable(name: "slice", arg: 1, scope: !14158, file: !2455, line: 440, type: !854)
!14163 = !DILocalVariable(name: "prio", arg: 2, scope: !14158, file: !2455, line: 440, type: !109)
!14164 = !DILocalVariable(name: "__i", scope: !14165, file: !2455, line: 442, type: !14166)
!14165 = distinct !DILexicalBlock(scope: !14158, file: !2455, line: 442, column: 2)
!14166 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !14167)
!14167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !14168)
!14168 = !{!14169}
!14169 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14167, file: !251, line: 33, baseType: !109, size: 32)
!14170 = !DILocalVariable(name: "__key", scope: !14165, file: !2455, line: 442, type: !14166)
!14171 = !DILocation(line: 0, scope: !14158)
!14172 = !DILocation(line: 0, scope: !14165)
!14173 = !DILocalVariable(name: "l", arg: 1, scope: !14174, file: !251, line: 136, type: !14177)
!14174 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !14175, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14178)
!14175 = !DISubroutineType(types: !14176)
!14176 = !{!14166, !14177}
!14177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 32)
!14178 = !{!14173, !14179}
!14179 = !DILocalVariable(name: "k", scope: !14174, file: !251, line: 139, type: !14166)
!14180 = !DILocation(line: 0, scope: !14174, inlinedAt: !14181)
!14181 = distinct !DILocation(line: 442, column: 2, scope: !14165)
!14182 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !14187)
!14183 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !6051, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14184)
!14184 = !{!14185, !14186}
!14185 = !DILocalVariable(name: "key", scope: !14183, file: !6050, line: 44, type: !32)
!14186 = !DILocalVariable(name: "tmp", scope: !14183, file: !6050, line: 53, type: !32)
!14187 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !14181)
!14188 = !{i64 1696622}
!14189 = !DILocation(line: 0, scope: !14183, inlinedAt: !14187)
!14190 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !14181)
!14191 = distinct !DILexicalBlock(scope: !14192, file: !251, line: 148, column: 2)
!14192 = distinct !DILexicalBlock(scope: !14174, file: !251, line: 148, column: 2)
!14193 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !14181)
!14194 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !14181)
!14195 = distinct !DILexicalBlock(scope: !14191, file: !251, line: 148, column: 2)
!14196 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !14181)
!14197 = !DILocation(line: 443, column: 29, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14199, file: !2455, line: 442, column: 26)
!14199 = distinct !DILexicalBlock(scope: !14165, file: !2455, line: 442, column: 2)
!14200 = !DILocation(line: 444, column: 17, scope: !14198)
!14201 = !DILocation(line: 445, column: 51, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14198, file: !2455, line: 445, column: 7)
!14203 = !DILocation(line: 445, column: 7, scope: !14198)
!14204 = !DILocation(line: 0, scope: !14198)
!14205 = !DILocation(line: 451, column: 18, scope: !14198)
!14206 = !DILocation(line: 452, column: 3, scope: !14198)
!14207 = !DILocalVariable(name: "key", arg: 2, scope: !14208, file: !251, line: 190, type: !14166)
!14208 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !14209, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14211)
!14209 = !DISubroutineType(types: !14210)
!14210 = !{null, !14177, !14166}
!14211 = !{!14212, !14207}
!14212 = !DILocalVariable(name: "l", arg: 1, scope: !14208, file: !251, line: 189, type: !14177)
!14213 = !DILocation(line: 0, scope: !14208, inlinedAt: !14214)
!14214 = distinct !DILocation(line: 442, column: 2, scope: !14199)
!14215 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !14214)
!14216 = distinct !DILexicalBlock(scope: !14217, file: !251, line: 194, column: 2)
!14217 = distinct !DILexicalBlock(scope: !14208, file: !251, line: 194, column: 2)
!14218 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14214)
!14219 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !14214)
!14220 = distinct !DILexicalBlock(scope: !14216, file: !251, line: 194, column: 2)
!14221 = !DILocalVariable(name: "key", arg: 1, scope: !14222, file: !6050, line: 84, type: !32)
!14222 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !6061, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14223)
!14223 = !{!14221}
!14224 = !DILocation(line: 0, scope: !14222, inlinedAt: !14225)
!14225 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !14214)
!14226 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !14225)
!14227 = !{i64 1697439}
!14228 = !DILocation(line: 454, column: 1, scope: !14158)
!14229 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3245, file: !3245, line: 389, type: !7634, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14230)
!14230 = !{!14231}
!14231 = !DILocalVariable(name: "t", arg: 1, scope: !14229, file: !3245, line: 389, type: !110)
!14232 = !DILocation(line: 0, scope: !14229)
!14233 = !DILocalVariable(name: "t", arg: 1, scope: !14234, file: !3245, line: 102, type: !111)
!14234 = distinct !DISubprogram(name: "z_tmcvt", scope: !3245, file: !3245, line: 102, type: !3253, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14235)
!14235 = !{!14233, !14236, !14237, !14238, !14239, !14240, !14241, !14242, !14243, !14244, !14245}
!14236 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14234, file: !3245, line: 102, type: !110)
!14237 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14234, file: !3245, line: 103, type: !110)
!14238 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14234, file: !3245, line: 103, type: !360)
!14239 = !DILocalVariable(name: "result32", arg: 5, scope: !14234, file: !3245, line: 104, type: !360)
!14240 = !DILocalVariable(name: "round_up", arg: 6, scope: !14234, file: !3245, line: 104, type: !360)
!14241 = !DILocalVariable(name: "round_off", arg: 7, scope: !14234, file: !3245, line: 105, type: !360)
!14242 = !DILocalVariable(name: "mul_ratio", scope: !14234, file: !3245, line: 107, type: !360)
!14243 = !DILocalVariable(name: "div_ratio", scope: !14234, file: !3245, line: 109, type: !360)
!14244 = !DILocalVariable(name: "off", scope: !14234, file: !3245, line: 116, type: !111)
!14245 = !DILocalVariable(name: "rdivisor", scope: !14246, file: !3245, line: 119, type: !110)
!14246 = distinct !DILexicalBlock(scope: !14247, file: !3245, line: 118, column: 18)
!14247 = distinct !DILexicalBlock(scope: !14234, file: !3245, line: 118, column: 6)
!14248 = !DILocation(line: 0, scope: !14234, inlinedAt: !14249)
!14249 = distinct !DILocation(line: 392, column: 9, scope: !14229)
!14250 = !DILocation(line: 143, column: 25, scope: !14251, inlinedAt: !14249)
!14251 = distinct !DILexicalBlock(scope: !14252, file: !3245, line: 142, column: 17)
!14252 = distinct !DILexicalBlock(scope: !14253, file: !3245, line: 142, column: 7)
!14253 = distinct !DILexicalBlock(scope: !14254, file: !3245, line: 141, column: 24)
!14254 = distinct !DILexicalBlock(scope: !14255, file: !3245, line: 141, column: 13)
!14255 = distinct !DILexicalBlock(scope: !14234, file: !3245, line: 134, column: 6)
!14256 = !DILocation(line: 392, column: 2, scope: !14229)
!14257 = distinct !DISubprogram(name: "z_time_slice", scope: !2455, file: !2455, line: 502, type: !8435, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14258)
!14258 = !{!14259, !14260}
!14259 = !DILocalVariable(name: "ticks", arg: 1, scope: !14257, file: !2455, line: 502, type: !109)
!14260 = !DILocalVariable(name: "key", scope: !14257, file: !2455, line: 511, type: !14166)
!14261 = !DILocation(line: 0, scope: !14257)
!14262 = !DILocation(line: 0, scope: !14174, inlinedAt: !14263)
!14263 = distinct !DILocation(line: 511, column: 25, scope: !14257)
!14264 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !14265)
!14265 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !14263)
!14266 = !DILocation(line: 0, scope: !14183, inlinedAt: !14265)
!14267 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !14263)
!14268 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !14263)
!14269 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !14263)
!14270 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !14263)
!14271 = !DILocation(line: 514, column: 6, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14257, file: !2455, line: 514, column: 6)
!14273 = !DILocation(line: 514, column: 25, scope: !14272)
!14274 = !DILocation(line: 514, column: 22, scope: !14272)
!14275 = !DILocation(line: 514, column: 6, scope: !14257)
!14276 = !DILocation(line: 515, column: 3, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14272, file: !2455, line: 514, column: 35)
!14278 = !DILocation(line: 0, scope: !14208, inlinedAt: !14279)
!14279 = distinct !DILocation(line: 516, column: 3, scope: !14277)
!14280 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !14279)
!14281 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14279)
!14282 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !14279)
!14283 = !DILocation(line: 0, scope: !14222, inlinedAt: !14284)
!14284 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !14279)
!14285 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !14284)
!14286 = !DILocation(line: 517, column: 3, scope: !14277)
!14287 = !DILocation(line: 519, column: 18, scope: !14257)
!14288 = !DILocation(line: 522, column: 6, scope: !14289)
!14289 = distinct !DILexicalBlock(scope: !14257, file: !2455, line: 522, column: 6)
!14290 = !DILocation(line: 522, column: 27, scope: !14289)
!14291 = !DILocation(line: 522, column: 30, scope: !14289)
!14292 = !DILocation(line: 522, column: 6, scope: !14257)
!14293 = !DILocation(line: 523, column: 30, scope: !14294)
!14294 = distinct !DILexicalBlock(scope: !14295, file: !2455, line: 523, column: 7)
!14295 = distinct !DILexicalBlock(scope: !14289, file: !2455, line: 522, column: 51)
!14296 = !DILocation(line: 523, column: 13, scope: !14294)
!14297 = !DILocation(line: 523, column: 7, scope: !14295)
!14298 = !DILocation(line: 530, column: 10, scope: !14299)
!14299 = distinct !DILexicalBlock(scope: !14294, file: !2455, line: 523, column: 43)
!14300 = !DILocation(line: 531, column: 3, scope: !14299)
!14301 = !DILocation(line: 532, column: 30, scope: !14302)
!14302 = distinct !DILexicalBlock(scope: !14294, file: !2455, line: 531, column: 10)
!14303 = !DILocation(line: 535, column: 29, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14289, file: !2455, line: 534, column: 9)
!14305 = !DILocation(line: 0, scope: !14208, inlinedAt: !14306)
!14306 = distinct !DILocation(line: 537, column: 2, scope: !14257)
!14307 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !14306)
!14308 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14306)
!14309 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !14306)
!14310 = !DILocation(line: 0, scope: !14222, inlinedAt: !14311)
!14311 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !14306)
!14312 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !14311)
!14313 = !DILocation(line: 538, column: 1, scope: !14257)
!14314 = distinct !DISubprogram(name: "sliceable", scope: !2455, file: !2455, line: 468, type: !14315, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14317)
!14315 = !DISubroutineType(types: !14316)
!14316 = !{!360, !2347}
!14317 = !{!14318, !14319}
!14318 = !DILocalVariable(name: "thread", arg: 1, scope: !14314, file: !2455, line: 468, type: !2347)
!14319 = !DILocalVariable(name: "ret", scope: !14314, file: !2455, line: 470, type: !360)
!14320 = !DILocation(line: 0, scope: !14314)
!14321 = !DILocation(line: 470, column: 13, scope: !14314)
!14322 = !DILocation(line: 471, column: 3, scope: !14314)
!14323 = !DILocation(line: 471, column: 7, scope: !14314)
!14324 = !DILocation(line: 472, column: 3, scope: !14314)
!14325 = !DILocation(line: 472, column: 37, scope: !14314)
!14326 = !DILocation(line: 472, column: 24, scope: !14314)
!14327 = !DILocation(line: 472, column: 43, scope: !14314)
!14328 = !DILocation(line: 472, column: 7, scope: !14314)
!14329 = !DILocation(line: 473, column: 3, scope: !14314)
!14330 = !DILocation(line: 473, column: 7, scope: !14314)
!14331 = !DILocation(line: 473, column: 6, scope: !14314)
!14332 = !DILocation(line: 479, column: 2, scope: !14314)
!14333 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2455, file: !2455, line: 482, type: !14334, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14336)
!14334 = !DISubroutineType(types: !14335)
!14335 = !{!14166, !14166}
!14336 = !{!14337, !14338}
!14337 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14333, file: !2455, line: 482, type: !14166)
!14338 = !DILocalVariable(name: "curr", scope: !14333, file: !2455, line: 484, type: !2347)
!14339 = !DILocation(line: 0, scope: !14333)
!14340 = !DILocation(line: 484, column: 26, scope: !14333)
!14341 = !DILocation(line: 493, column: 7, scope: !14342)
!14342 = distinct !DILexicalBlock(scope: !14333, file: !2455, line: 493, column: 6)
!14343 = !DILocation(line: 493, column: 6, scope: !14333)
!14344 = !DILocation(line: 494, column: 3, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14342, file: !2455, line: 493, column: 49)
!14346 = !DILocation(line: 495, column: 2, scope: !14345)
!14347 = !DILocation(line: 496, column: 2, scope: !14333)
!14348 = !DILocation(line: 499, column: 1, scope: !14333)
!14349 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12966, file: !12966, line: 106, type: !14315, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14350)
!14350 = !{!14351, !14352}
!14351 = !DILocalVariable(name: "thread", arg: 1, scope: !14349, file: !12966, line: 106, type: !2347)
!14352 = !DILocalVariable(name: "state", scope: !14349, file: !12966, line: 108, type: !178)
!14353 = !DILocation(line: 0, scope: !14349)
!14354 = !DILocation(line: 108, column: 31, scope: !14349)
!14355 = !DILocation(line: 110, column: 16, scope: !14349)
!14356 = !DILocation(line: 111, column: 41, scope: !14349)
!14357 = !DILocation(line: 110, column: 2, scope: !14349)
!14358 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2455, file: !2455, line: 393, type: !14132, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14359)
!14359 = !{!14360}
!14360 = !DILocalVariable(name: "thread", arg: 1, scope: !14358, file: !2455, line: 393, type: !2347)
!14361 = !DILocation(line: 0, scope: !14358)
!14362 = !DILocation(line: 395, column: 6, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14358, file: !2455, line: 395, column: 6)
!14364 = !DILocation(line: 395, column: 6, scope: !14358)
!14365 = !DILocalVariable(name: "thread", arg: 1, scope: !14366, file: !2455, line: 264, type: !2347)
!14366 = distinct !DISubprogram(name: "dequeue_thread", scope: !2455, file: !2455, line: 264, type: !14132, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14367)
!14367 = !{!14365}
!14368 = !DILocation(line: 0, scope: !14366, inlinedAt: !14369)
!14369 = distinct !DILocation(line: 396, column: 3, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14363, file: !2455, line: 395, column: 34)
!14371 = !DILocation(line: 266, column: 15, scope: !14366, inlinedAt: !14369)
!14372 = !DILocation(line: 266, column: 28, scope: !14366, inlinedAt: !14369)
!14373 = !DILocalVariable(name: "thread", arg: 1, scope: !14374, file: !2455, line: 232, type: !2347)
!14374 = distinct !DISubprogram(name: "runq_remove", scope: !2455, file: !2455, line: 232, type: !14132, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14375)
!14375 = !{!14373}
!14376 = !DILocation(line: 0, scope: !14374, inlinedAt: !14377)
!14377 = distinct !DILocation(line: 268, column: 3, scope: !14378, inlinedAt: !14369)
!14378 = distinct !DILexicalBlock(scope: !14379, file: !2455, line: 267, column: 35)
!14379 = distinct !DILexicalBlock(scope: !14366, file: !2455, line: 267, column: 6)
!14380 = !DILocation(line: 234, column: 2, scope: !14374, inlinedAt: !14377)
!14381 = !DILocation(line: 397, column: 2, scope: !14370)
!14382 = !DILocalVariable(name: "thread", arg: 1, scope: !14383, file: !2455, line: 250, type: !2347)
!14383 = distinct !DISubprogram(name: "queue_thread", scope: !2455, file: !2455, line: 250, type: !14132, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14384)
!14384 = !{!14382}
!14385 = !DILocation(line: 0, scope: !14383, inlinedAt: !14386)
!14386 = distinct !DILocation(line: 398, column: 2, scope: !14358)
!14387 = !DILocation(line: 252, column: 15, scope: !14383, inlinedAt: !14386)
!14388 = !DILocation(line: 252, column: 28, scope: !14383, inlinedAt: !14386)
!14389 = !DILocalVariable(name: "thread", arg: 1, scope: !14390, file: !2455, line: 227, type: !2347)
!14390 = distinct !DISubprogram(name: "runq_add", scope: !2455, file: !2455, line: 227, type: !14132, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14391)
!14391 = !{!14389}
!14392 = !DILocation(line: 0, scope: !14390, inlinedAt: !14393)
!14393 = distinct !DILocation(line: 254, column: 3, scope: !14394, inlinedAt: !14386)
!14394 = distinct !DILexicalBlock(scope: !14395, file: !2455, line: 253, column: 35)
!14395 = distinct !DILexicalBlock(scope: !14383, file: !2455, line: 253, column: 6)
!14396 = !DILocalVariable(name: "pq", arg: 1, scope: !14397, file: !2455, line: 181, type: !14400)
!14397 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2455, file: !2455, line: 181, type: !14398, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14401)
!14398 = !DISubroutineType(types: !14399)
!14399 = !{null, !14400, !2347}
!14400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 32)
!14401 = !{!14396, !14402, !14403}
!14402 = !DILocalVariable(name: "thread", arg: 2, scope: !14397, file: !2455, line: 182, type: !2347)
!14403 = !DILocalVariable(name: "t", scope: !14397, file: !2455, line: 184, type: !2347)
!14404 = !DILocation(line: 0, scope: !14397, inlinedAt: !14405)
!14405 = distinct !DILocation(line: 229, column: 2, scope: !14390, inlinedAt: !14393)
!14406 = !DILocation(line: 186, column: 2, scope: !14407, inlinedAt: !14405)
!14407 = distinct !DILexicalBlock(scope: !14408, file: !2455, line: 186, column: 2)
!14408 = distinct !DILexicalBlock(scope: !14397, file: !2455, line: 186, column: 2)
!14409 = !DILocation(line: 186, column: 2, scope: !14408, inlinedAt: !14405)
!14410 = !DILocation(line: 186, column: 2, scope: !14411, inlinedAt: !14405)
!14411 = distinct !DILexicalBlock(scope: !14407, file: !2455, line: 186, column: 2)
!14412 = !DILocation(line: 188, column: 2, scope: !14413, inlinedAt: !14405)
!14413 = distinct !DILexicalBlock(scope: !14397, file: !2455, line: 188, column: 2)
!14414 = !DILocation(line: 188, column: 2, scope: !14415, inlinedAt: !14405)
!14415 = distinct !DILexicalBlock(scope: !14413, file: !2455, line: 188, column: 2)
!14416 = !DILocation(line: 0, scope: !14413, inlinedAt: !14405)
!14417 = !DILocation(line: 189, column: 7, scope: !14418, inlinedAt: !14405)
!14418 = distinct !DILexicalBlock(scope: !14419, file: !2455, line: 189, column: 7)
!14419 = distinct !DILexicalBlock(scope: !14415, file: !2455, line: 188, column: 56)
!14420 = !DILocation(line: 189, column: 35, scope: !14418, inlinedAt: !14405)
!14421 = !DILocation(line: 189, column: 7, scope: !14419, inlinedAt: !14405)
!14422 = !DILocation(line: 191, column: 21, scope: !14423, inlinedAt: !14405)
!14423 = distinct !DILexicalBlock(scope: !14418, file: !2455, line: 189, column: 40)
!14424 = !DILocation(line: 190, column: 4, scope: !14423, inlinedAt: !14405)
!14425 = !DILocation(line: 192, column: 4, scope: !14423, inlinedAt: !14405)
!14426 = distinct !{!14426, !14412, !14427}
!14427 = !DILocation(line: 194, column: 2, scope: !14413, inlinedAt: !14405)
!14428 = !DILocation(line: 196, column: 37, scope: !14397, inlinedAt: !14405)
!14429 = !DILocation(line: 196, column: 2, scope: !14397, inlinedAt: !14405)
!14430 = !DILocation(line: 197, column: 1, scope: !14397, inlinedAt: !14405)
!14431 = !DILocation(line: 399, column: 25, scope: !14358)
!14432 = !DILocation(line: 399, column: 22, scope: !14358)
!14433 = !DILocation(line: 399, column: 2, scope: !14358)
!14434 = !DILocation(line: 400, column: 1, scope: !14358)
!14435 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12966, file: !12966, line: 136, type: !14315, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14436)
!14436 = !{!14437}
!14437 = !DILocalVariable(name: "thread", arg: 1, scope: !14435, file: !12966, line: 136, type: !2347)
!14438 = !DILocation(line: 0, scope: !14435)
!14439 = !DILocation(line: 138, column: 9, scope: !14435)
!14440 = !DILocation(line: 138, column: 2, scope: !14435)
!14441 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2455, file: !2455, line: 1137, type: !14398, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14442)
!14442 = !{!14443, !14444}
!14443 = !DILocalVariable(name: "pq", arg: 1, scope: !14441, file: !2455, line: 1137, type: !14400)
!14444 = !DILocalVariable(name: "thread", arg: 2, scope: !14441, file: !2455, line: 1137, type: !2347)
!14445 = !DILocation(line: 0, scope: !14441)
!14446 = !DILocation(line: 1139, column: 2, scope: !14447)
!14447 = distinct !DILexicalBlock(scope: !14448, file: !2455, line: 1139, column: 2)
!14448 = distinct !DILexicalBlock(scope: !14441, file: !2455, line: 1139, column: 2)
!14449 = !DILocation(line: 1139, column: 2, scope: !14448)
!14450 = !DILocation(line: 1139, column: 2, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14447, file: !2455, line: 1139, column: 2)
!14452 = !DILocation(line: 1141, column: 33, scope: !14441)
!14453 = !DILocation(line: 1141, column: 2, scope: !14441)
!14454 = !DILocation(line: 1142, column: 1, scope: !14441)
!14455 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12966, file: !12966, line: 83, type: !14315, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14456)
!14456 = !{!14457}
!14457 = !DILocalVariable(name: "thread", arg: 1, scope: !14455, file: !12966, line: 83, type: !2347)
!14458 = !DILocation(line: 0, scope: !14455)
!14459 = !DILocation(line: 89, column: 16, scope: !14455)
!14460 = !DILocation(line: 89, column: 2, scope: !14455)
!14461 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14462, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14464)
!14462 = !DISubroutineType(types: !14463)
!14463 = !{!2451, !14400}
!14464 = !{!14465}
!14465 = !DILocalVariable(name: "list", arg: 1, scope: !14461, file: !127, line: 294, type: !14400)
!14466 = !DILocation(line: 0, scope: !14461)
!14467 = !DILocation(line: 296, column: 9, scope: !14461)
!14468 = !DILocation(line: 296, column: 49, scope: !14461)
!14469 = !DILocation(line: 296, column: 2, scope: !14461)
!14470 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !14471, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14473)
!14471 = !DISubroutineType(types: !14472)
!14472 = !{null, !2451, !2451}
!14473 = !{!14474, !14475, !14476}
!14474 = !DILocalVariable(name: "successor", arg: 1, scope: !14470, file: !127, line: 443, type: !2451)
!14475 = !DILocalVariable(name: "node", arg: 2, scope: !14470, file: !127, line: 443, type: !2451)
!14476 = !DILocalVariable(name: "prev", scope: !14470, file: !127, line: 445, type: !14477)
!14477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2451)
!14478 = !DILocation(line: 0, scope: !14470)
!14479 = !DILocation(line: 445, column: 39, scope: !14470)
!14480 = !DILocation(line: 447, column: 8, scope: !14470)
!14481 = !DILocation(line: 447, column: 13, scope: !14470)
!14482 = !DILocation(line: 448, column: 8, scope: !14470)
!14483 = !DILocation(line: 448, column: 13, scope: !14470)
!14484 = !DILocation(line: 449, column: 8, scope: !14470)
!14485 = !DILocation(line: 449, column: 13, scope: !14470)
!14486 = !DILocation(line: 450, column: 18, scope: !14470)
!14487 = !DILocation(line: 451, column: 1, scope: !14470)
!14488 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !14489, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14491)
!14489 = !DISubroutineType(types: !14490)
!14490 = !{!2451, !14400, !2451}
!14491 = !{!14492, !14493}
!14492 = !DILocalVariable(name: "list", arg: 1, scope: !14488, file: !127, line: 341, type: !14400)
!14493 = !DILocalVariable(name: "node", arg: 2, scope: !14488, file: !127, line: 342, type: !2451)
!14494 = !DILocation(line: 0, scope: !14488)
!14495 = !DILocation(line: 344, column: 15, scope: !14488)
!14496 = !DILocation(line: 344, column: 9, scope: !14488)
!14497 = !DILocation(line: 344, column: 26, scope: !14488)
!14498 = !DILocation(line: 344, column: 2, scope: !14488)
!14499 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !14500, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14502)
!14500 = !DISubroutineType(types: !14501)
!14501 = !{null, !14400, !2451}
!14502 = !{!14503, !14504, !14505}
!14503 = !DILocalVariable(name: "list", arg: 1, scope: !14499, file: !127, line: 404, type: !14400)
!14504 = !DILocalVariable(name: "node", arg: 2, scope: !14499, file: !127, line: 404, type: !2451)
!14505 = !DILocalVariable(name: "tail", scope: !14499, file: !127, line: 406, type: !14477)
!14506 = !DILocation(line: 0, scope: !14499)
!14507 = !DILocation(line: 406, column: 34, scope: !14499)
!14508 = !DILocation(line: 408, column: 8, scope: !14499)
!14509 = !DILocation(line: 408, column: 13, scope: !14499)
!14510 = !DILocation(line: 409, column: 8, scope: !14499)
!14511 = !DILocation(line: 409, column: 13, scope: !14499)
!14512 = !DILocation(line: 411, column: 8, scope: !14499)
!14513 = !DILocation(line: 411, column: 13, scope: !14499)
!14514 = !DILocation(line: 412, column: 13, scope: !14499)
!14515 = !DILocation(line: 413, column: 1, scope: !14499)
!14516 = distinct !DISubprogram(name: "update_cache", scope: !2455, file: !2455, line: 559, type: !8435, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14517)
!14517 = !{!14518, !14519}
!14518 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14516, file: !2455, line: 559, type: !109)
!14519 = !DILocalVariable(name: "thread", scope: !14516, file: !2455, line: 562, type: !2347)
!14520 = !DILocation(line: 0, scope: !14516)
!14521 = !DILocation(line: 239, column: 9, scope: !14522, inlinedAt: !14525)
!14522 = distinct !DISubprogram(name: "runq_best", scope: !2455, file: !2455, line: 237, type: !14523, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !2045)
!14523 = !DISubroutineType(types: !14524)
!14524 = !{!2347}
!14525 = distinct !DILocation(line: 314, column: 28, scope: !14526, inlinedAt: !14529)
!14526 = distinct !DISubprogram(name: "next_up", scope: !2455, file: !2455, line: 312, type: !14523, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14527)
!14527 = !{!14528}
!14528 = !DILocalVariable(name: "thread", scope: !14526, file: !2455, line: 314, type: !2347)
!14529 = distinct !DILocation(line: 562, column: 28, scope: !14516)
!14530 = !DILocation(line: 0, scope: !14526, inlinedAt: !14529)
!14531 = !DILocation(line: 340, column: 17, scope: !14526, inlinedAt: !14529)
!14532 = !DILocation(line: 340, column: 9, scope: !14526, inlinedAt: !14529)
!14533 = !DILocalVariable(name: "thread", arg: 1, scope: !14534, file: !2455, line: 127, type: !2347)
!14534 = distinct !DISubprogram(name: "should_preempt", scope: !2455, file: !2455, line: 127, type: !14535, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14537)
!14535 = !DISubroutineType(types: !14536)
!14536 = !{!360, !2347, !109}
!14537 = !{!14533, !14538}
!14538 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14534, file: !2455, line: 128, type: !109)
!14539 = !DILocation(line: 0, scope: !14534, inlinedAt: !14540)
!14540 = distinct !DILocation(line: 564, column: 6, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !14516, file: !2455, line: 564, column: 6)
!14542 = !DILocation(line: 133, column: 17, scope: !14543, inlinedAt: !14540)
!14543 = distinct !DILexicalBlock(scope: !14534, file: !2455, line: 133, column: 6)
!14544 = !DILocation(line: 0, scope: !14541)
!14545 = !DILocation(line: 133, column: 6, scope: !14534, inlinedAt: !14540)
!14546 = !DILocation(line: 137, column: 2, scope: !14547, inlinedAt: !14540)
!14547 = distinct !DILexicalBlock(scope: !14548, file: !2455, line: 137, column: 2)
!14548 = distinct !DILexicalBlock(scope: !14534, file: !2455, line: 137, column: 2)
!14549 = !DILocation(line: 137, column: 2, scope: !14548, inlinedAt: !14540)
!14550 = !DILocation(line: 137, column: 2, scope: !14551, inlinedAt: !14540)
!14551 = distinct !DILexicalBlock(scope: !14547, file: !2455, line: 137, column: 2)
!14552 = !DILocation(line: 140, column: 6, scope: !14553, inlinedAt: !14540)
!14553 = distinct !DILexicalBlock(scope: !14534, file: !2455, line: 140, column: 6)
!14554 = !DILocation(line: 140, column: 6, scope: !14534, inlinedAt: !14540)
!14555 = !DILocation(line: 150, column: 9, scope: !14556, inlinedAt: !14540)
!14556 = distinct !DILexicalBlock(scope: !14534, file: !2455, line: 149, column: 6)
!14557 = !DILocation(line: 149, column: 6, scope: !14534, inlinedAt: !14540)
!14558 = !DILocation(line: 157, column: 6, scope: !14559, inlinedAt: !14540)
!14559 = distinct !DILexicalBlock(scope: !14534, file: !2455, line: 157, column: 6)
!14560 = !DILocation(line: 564, column: 6, scope: !14516)
!14561 = !DILocation(line: 566, column: 14, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14563, file: !2455, line: 566, column: 7)
!14563 = distinct !DILexicalBlock(scope: !14541, file: !2455, line: 564, column: 42)
!14564 = !DILocation(line: 566, column: 7, scope: !14563)
!14565 = !DILocation(line: 567, column: 4, scope: !14566)
!14566 = distinct !DILexicalBlock(scope: !14562, file: !2455, line: 566, column: 27)
!14567 = !DILocation(line: 568, column: 3, scope: !14566)
!14568 = !DILocation(line: 585, column: 1, scope: !14516)
!14569 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2455, file: !2455, line: 1144, type: !14570, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14572)
!14570 = !DISubroutineType(types: !14571)
!14571 = !{!2347, !14400}
!14572 = !{!14573, !14574, !14575}
!14573 = !DILocalVariable(name: "pq", arg: 1, scope: !14569, file: !2455, line: 1144, type: !14400)
!14574 = !DILocalVariable(name: "thread", scope: !14569, file: !2455, line: 1146, type: !2347)
!14575 = !DILocalVariable(name: "n", scope: !14569, file: !2455, line: 1147, type: !2451)
!14576 = !DILocation(line: 0, scope: !14569)
!14577 = !DILocation(line: 1147, column: 19, scope: !14569)
!14578 = !DILocation(line: 1152, column: 2, scope: !14569)
!14579 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12966, file: !12966, line: 115, type: !14315, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14580)
!14580 = !{!14581}
!14581 = !DILocalVariable(name: "thread", arg: 1, scope: !14579, file: !12966, line: 115, type: !2347)
!14582 = !DILocation(line: 0, scope: !14579)
!14583 = !DILocation(line: 117, column: 46, scope: !14579)
!14584 = !DILocation(line: 117, column: 10, scope: !14579)
!14585 = !DILocation(line: 117, column: 9, scope: !14579)
!14586 = !DILocation(line: 117, column: 2, scope: !14579)
!14587 = distinct !DISubprogram(name: "is_preempt", scope: !2455, file: !2455, line: 62, type: !14150, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14588)
!14588 = !{!14589}
!14589 = !DILocalVariable(name: "thread", arg: 1, scope: !14587, file: !2455, line: 62, type: !2347)
!14590 = !DILocation(line: 0, scope: !14587)
!14591 = !DILocation(line: 65, column: 22, scope: !14587)
!14592 = !DILocation(line: 65, column: 30, scope: !14587)
!14593 = !DILocation(line: 65, column: 2, scope: !14587)
!14594 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13395, file: !13395, line: 35, type: !14595, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14599)
!14595 = !DISubroutineType(types: !14596)
!14596 = !{!360, !14597}
!14597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14598, size: 32)
!14598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2398)
!14599 = !{!14600}
!14600 = !DILocalVariable(name: "to", arg: 1, scope: !14594, file: !13395, line: 35, type: !14597)
!14601 = !DILocation(line: 0, scope: !14594)
!14602 = !DILocation(line: 37, column: 35, scope: !14594)
!14603 = !DILocation(line: 37, column: 10, scope: !14594)
!14604 = !DILocation(line: 37, column: 9, scope: !14594)
!14605 = !DILocation(line: 37, column: 2, scope: !14594)
!14606 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !14607, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14611)
!14607 = !DISubroutineType(types: !14608)
!14608 = !{!360, !14609}
!14609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14610, size: 32)
!14610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2357)
!14611 = !{!14612}
!14612 = !DILocalVariable(name: "node", arg: 1, scope: !14606, file: !127, line: 225, type: !14609)
!14613 = !DILocation(line: 0, scope: !14606)
!14614 = !DILocation(line: 227, column: 15, scope: !14606)
!14615 = !DILocation(line: 227, column: 20, scope: !14606)
!14616 = !DILocation(line: 227, column: 2, scope: !14606)
!14617 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !14489, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14618)
!14618 = !{!14619, !14620}
!14619 = !DILocalVariable(name: "list", arg: 1, scope: !14617, file: !127, line: 325, type: !14400)
!14620 = !DILocalVariable(name: "node", arg: 2, scope: !14617, file: !127, line: 326, type: !2451)
!14621 = !DILocation(line: 0, scope: !14617)
!14622 = !DILocation(line: 328, column: 24, scope: !14617)
!14623 = !DILocation(line: 328, column: 15, scope: !14617)
!14624 = !DILocation(line: 328, column: 9, scope: !14617)
!14625 = !DILocation(line: 328, column: 45, scope: !14617)
!14626 = !DILocation(line: 328, column: 2, scope: !14617)
!14627 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !14628, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14630)
!14628 = !DISubroutineType(types: !14629)
!14629 = !{!360, !14400}
!14630 = !{!14631}
!14631 = !DILocalVariable(name: "list", arg: 1, scope: !14627, file: !127, line: 266, type: !14400)
!14632 = !DILocation(line: 0, scope: !14627)
!14633 = !DILocation(line: 268, column: 15, scope: !14627)
!14634 = !DILocation(line: 268, column: 20, scope: !14627)
!14635 = !DILocation(line: 268, column: 2, scope: !14627)
!14636 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !14637, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14639)
!14637 = !DISubroutineType(types: !14638)
!14638 = !{null, !2451}
!14639 = !{!14640, !14641, !14642}
!14640 = !DILocalVariable(name: "node", arg: 1, scope: !14636, file: !127, line: 496, type: !2451)
!14641 = !DILocalVariable(name: "prev", scope: !14636, file: !127, line: 498, type: !14477)
!14642 = !DILocalVariable(name: "next", scope: !14636, file: !127, line: 499, type: !14477)
!14643 = !DILocation(line: 0, scope: !14636)
!14644 = !DILocation(line: 498, column: 34, scope: !14636)
!14645 = !DILocation(line: 499, column: 34, scope: !14636)
!14646 = !DILocation(line: 501, column: 8, scope: !14636)
!14647 = !DILocation(line: 501, column: 13, scope: !14636)
!14648 = !DILocation(line: 502, column: 8, scope: !14636)
!14649 = !DILocation(line: 502, column: 13, scope: !14636)
!14650 = !DILocation(line: 503, column: 2, scope: !14636)
!14651 = !DILocation(line: 504, column: 1, scope: !14636)
!14652 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !14637, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14653)
!14653 = !{!14654}
!14654 = !DILocalVariable(name: "node", arg: 1, scope: !14652, file: !127, line: 211, type: !2451)
!14655 = !DILocation(line: 0, scope: !14652)
!14656 = !DILocation(line: 213, column: 8, scope: !14652)
!14657 = !DILocation(line: 213, column: 13, scope: !14652)
!14658 = !DILocation(line: 214, column: 8, scope: !14652)
!14659 = !DILocation(line: 214, column: 13, scope: !14652)
!14660 = !DILocation(line: 215, column: 1, scope: !14652)
!14661 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12966, file: !12966, line: 131, type: !14662, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14664)
!14662 = !DISubroutineType(types: !14663)
!14663 = !{!360, !2347, !110}
!14664 = !{!14665, !14666}
!14665 = !DILocalVariable(name: "thread", arg: 1, scope: !14661, file: !12966, line: 131, type: !2347)
!14666 = !DILocalVariable(name: "state", arg: 2, scope: !14661, file: !12966, line: 131, type: !110)
!14667 = !DILocation(line: 0, scope: !14661)
!14668 = !DILocation(line: 133, column: 23, scope: !14661)
!14669 = !DILocation(line: 133, column: 10, scope: !14661)
!14670 = !DILocation(line: 133, column: 36, scope: !14661)
!14671 = !DILocation(line: 133, column: 45, scope: !14661)
!14672 = !DILocation(line: 133, column: 2, scope: !14661)
!14673 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12966, file: !12966, line: 211, type: !13964, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14674)
!14674 = !{!14675, !14676}
!14675 = !DILocalVariable(name: "prio", arg: 1, scope: !14673, file: !12966, line: 211, type: !109)
!14676 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14673, file: !12966, line: 211, type: !109)
!14677 = !DILocation(line: 0, scope: !14673)
!14678 = !DILocation(line: 213, column: 9, scope: !14673)
!14679 = !DILocation(line: 213, column: 2, scope: !14673)
!14680 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12966, file: !12966, line: 206, type: !13964, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14681)
!14681 = !{!14682, !14683}
!14682 = !DILocalVariable(name: "prio1", arg: 1, scope: !14680, file: !12966, line: 206, type: !109)
!14683 = !DILocalVariable(name: "prio2", arg: 2, scope: !14680, file: !12966, line: 206, type: !109)
!14684 = !DILocation(line: 0, scope: !14680)
!14685 = !DILocation(line: 208, column: 15, scope: !14680)
!14686 = !DILocation(line: 208, column: 2, scope: !14680)
!14687 = distinct !DISubprogram(name: "z_ready_thread", scope: !2455, file: !2455, line: 635, type: !14132, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14688)
!14688 = !{!14689, !14690, !14692}
!14689 = !DILocalVariable(name: "thread", arg: 1, scope: !14687, file: !2455, line: 635, type: !2347)
!14690 = !DILocalVariable(name: "__i", scope: !14691, file: !2455, line: 637, type: !14166)
!14691 = distinct !DILexicalBlock(scope: !14687, file: !2455, line: 637, column: 2)
!14692 = !DILocalVariable(name: "__key", scope: !14691, file: !2455, line: 637, type: !14166)
!14693 = !DILocation(line: 0, scope: !14687)
!14694 = !DILocation(line: 0, scope: !14691)
!14695 = !DILocation(line: 0, scope: !14174, inlinedAt: !14696)
!14696 = distinct !DILocation(line: 637, column: 2, scope: !14691)
!14697 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !14698)
!14698 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !14696)
!14699 = !DILocation(line: 0, scope: !14183, inlinedAt: !14698)
!14700 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !14696)
!14701 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !14696)
!14702 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !14696)
!14703 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !14696)
!14704 = !DILocation(line: 639, column: 4, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14706, file: !2455, line: 638, column: 41)
!14706 = distinct !DILexicalBlock(scope: !14707, file: !2455, line: 638, column: 7)
!14707 = distinct !DILexicalBlock(scope: !14708, file: !2455, line: 637, column: 26)
!14708 = distinct !DILexicalBlock(scope: !14691, file: !2455, line: 637, column: 2)
!14709 = !DILocation(line: 0, scope: !14208, inlinedAt: !14710)
!14710 = distinct !DILocation(line: 637, column: 2, scope: !14708)
!14711 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !14710)
!14712 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14710)
!14713 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !14710)
!14714 = !DILocation(line: 0, scope: !14222, inlinedAt: !14715)
!14715 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !14710)
!14716 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !14715)
!14717 = !DILocation(line: 642, column: 1, scope: !14687)
!14718 = distinct !DISubprogram(name: "ready_thread", scope: !2455, file: !2455, line: 617, type: !14132, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14719)
!14719 = !{!14720}
!14720 = !DILocalVariable(name: "thread", arg: 1, scope: !14718, file: !2455, line: 617, type: !2347)
!14721 = !DILocation(line: 0, scope: !14718)
!14722 = !DILocation(line: 626, column: 7, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14718, file: !2455, line: 626, column: 6)
!14724 = !DILocation(line: 626, column: 34, scope: !14723)
!14725 = !DILocation(line: 626, column: 37, scope: !14723)
!14726 = !DILocation(line: 626, column: 6, scope: !14718)
!14727 = !DILocation(line: 0, scope: !14383, inlinedAt: !14728)
!14728 = distinct !DILocation(line: 629, column: 3, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14723, file: !2455, line: 626, column: 64)
!14730 = !DILocation(line: 252, column: 15, scope: !14383, inlinedAt: !14728)
!14731 = !DILocation(line: 252, column: 28, scope: !14383, inlinedAt: !14728)
!14732 = !DILocation(line: 0, scope: !14390, inlinedAt: !14733)
!14733 = distinct !DILocation(line: 254, column: 3, scope: !14394, inlinedAt: !14728)
!14734 = !DILocation(line: 0, scope: !14397, inlinedAt: !14735)
!14735 = distinct !DILocation(line: 229, column: 2, scope: !14390, inlinedAt: !14733)
!14736 = !DILocation(line: 186, column: 2, scope: !14407, inlinedAt: !14735)
!14737 = !DILocation(line: 186, column: 2, scope: !14408, inlinedAt: !14735)
!14738 = !DILocation(line: 186, column: 2, scope: !14411, inlinedAt: !14735)
!14739 = !DILocation(line: 188, column: 2, scope: !14413, inlinedAt: !14735)
!14740 = !DILocation(line: 188, column: 2, scope: !14415, inlinedAt: !14735)
!14741 = !DILocation(line: 0, scope: !14413, inlinedAt: !14735)
!14742 = !DILocation(line: 189, column: 7, scope: !14418, inlinedAt: !14735)
!14743 = !DILocation(line: 189, column: 35, scope: !14418, inlinedAt: !14735)
!14744 = !DILocation(line: 189, column: 7, scope: !14419, inlinedAt: !14735)
!14745 = !DILocation(line: 191, column: 21, scope: !14423, inlinedAt: !14735)
!14746 = !DILocation(line: 190, column: 4, scope: !14423, inlinedAt: !14735)
!14747 = !DILocation(line: 192, column: 4, scope: !14423, inlinedAt: !14735)
!14748 = distinct !{!14748, !14739, !14749}
!14749 = !DILocation(line: 194, column: 2, scope: !14413, inlinedAt: !14735)
!14750 = !DILocation(line: 196, column: 37, scope: !14397, inlinedAt: !14735)
!14751 = !DILocation(line: 196, column: 2, scope: !14397, inlinedAt: !14735)
!14752 = !DILocation(line: 197, column: 1, scope: !14397, inlinedAt: !14735)
!14753 = !DILocation(line: 630, column: 3, scope: !14729)
!14754 = !DILocation(line: 632, column: 2, scope: !14729)
!14755 = !DILocation(line: 633, column: 1, scope: !14718)
!14756 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12966, file: !12966, line: 120, type: !14315, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14757)
!14757 = !{!14758}
!14758 = !DILocalVariable(name: "thread", arg: 1, scope: !14756, file: !12966, line: 120, type: !2347)
!14759 = !DILocation(line: 0, scope: !14756)
!14760 = !DILocation(line: 122, column: 12, scope: !14756)
!14761 = !DILocation(line: 122, column: 62, scope: !14756)
!14762 = !DILocation(line: 123, column: 4, scope: !14756)
!14763 = !DILocation(line: 122, column: 2, scope: !14756)
!14764 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2455, file: !2455, line: 644, type: !14132, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14765)
!14765 = !{!14766, !14767, !14769}
!14766 = !DILocalVariable(name: "thread", arg: 1, scope: !14764, file: !2455, line: 644, type: !2347)
!14767 = !DILocalVariable(name: "__i", scope: !14768, file: !2455, line: 646, type: !14166)
!14768 = distinct !DILexicalBlock(scope: !14764, file: !2455, line: 646, column: 2)
!14769 = !DILocalVariable(name: "__key", scope: !14768, file: !2455, line: 646, type: !14166)
!14770 = !DILocation(line: 0, scope: !14764)
!14771 = !DILocation(line: 0, scope: !14768)
!14772 = !DILocation(line: 0, scope: !14174, inlinedAt: !14773)
!14773 = distinct !DILocation(line: 646, column: 2, scope: !14768)
!14774 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !14775)
!14775 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !14773)
!14776 = !DILocation(line: 0, scope: !14183, inlinedAt: !14775)
!14777 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !14773)
!14778 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !14773)
!14779 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !14773)
!14780 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !14773)
!14781 = !DILocation(line: 647, column: 3, scope: !14782)
!14782 = distinct !DILexicalBlock(scope: !14783, file: !2455, line: 646, column: 26)
!14783 = distinct !DILexicalBlock(scope: !14768, file: !2455, line: 646, column: 2)
!14784 = !DILocation(line: 0, scope: !14208, inlinedAt: !14785)
!14785 = distinct !DILocation(line: 646, column: 2, scope: !14783)
!14786 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !14785)
!14787 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14785)
!14788 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !14785)
!14789 = !DILocation(line: 0, scope: !14222, inlinedAt: !14790)
!14790 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !14785)
!14791 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !14790)
!14792 = !DILocation(line: 649, column: 1, scope: !14764)
!14793 = distinct !DISubprogram(name: "z_sched_start", scope: !2455, file: !2455, line: 651, type: !14132, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14794)
!14794 = !{!14795, !14796}
!14795 = !DILocalVariable(name: "thread", arg: 1, scope: !14793, file: !2455, line: 651, type: !2347)
!14796 = !DILocalVariable(name: "key", scope: !14793, file: !2455, line: 653, type: !14166)
!14797 = !DILocation(line: 0, scope: !14793)
!14798 = !DILocation(line: 0, scope: !14174, inlinedAt: !14799)
!14799 = distinct !DILocation(line: 653, column: 25, scope: !14793)
!14800 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !14801)
!14801 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !14799)
!14802 = !DILocation(line: 0, scope: !14183, inlinedAt: !14801)
!14803 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !14799)
!14804 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !14799)
!14805 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !14799)
!14806 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !14799)
!14807 = !DILocation(line: 655, column: 6, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14793, file: !2455, line: 655, column: 6)
!14809 = !DILocation(line: 655, column: 6, scope: !14793)
!14810 = !DILocation(line: 0, scope: !14208, inlinedAt: !14811)
!14811 = distinct !DILocation(line: 656, column: 3, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14808, file: !2455, line: 655, column: 36)
!14813 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !14811)
!14814 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14811)
!14815 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !14811)
!14816 = !DILocation(line: 0, scope: !14222, inlinedAt: !14817)
!14817 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !14811)
!14818 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !14817)
!14819 = !DILocation(line: 657, column: 3, scope: !14812)
!14820 = !DILocation(line: 660, column: 2, scope: !14793)
!14821 = !DILocation(line: 661, column: 2, scope: !14793)
!14822 = !DILocation(line: 662, column: 2, scope: !14793)
!14823 = !DILocation(line: 663, column: 1, scope: !14793)
!14824 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12966, file: !12966, line: 126, type: !14315, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14825)
!14825 = !{!14826}
!14826 = !DILocalVariable(name: "thread", arg: 1, scope: !14824, file: !12966, line: 126, type: !2347)
!14827 = !DILocation(line: 0, scope: !14824)
!14828 = !DILocation(line: 128, column: 23, scope: !14824)
!14829 = !DILocation(line: 128, column: 36, scope: !14824)
!14830 = !DILocation(line: 128, column: 56, scope: !14824)
!14831 = !DILocation(line: 128, column: 2, scope: !14824)
!14832 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12966, file: !12966, line: 155, type: !14132, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14833)
!14833 = !{!14834}
!14834 = !DILocalVariable(name: "thread", arg: 1, scope: !14832, file: !12966, line: 155, type: !2347)
!14835 = !DILocation(line: 0, scope: !14832)
!14836 = !DILocation(line: 157, column: 15, scope: !14832)
!14837 = !DILocation(line: 157, column: 28, scope: !14832)
!14838 = !DILocation(line: 158, column: 1, scope: !14832)
!14839 = distinct !DISubprogram(name: "z_reschedule", scope: !2455, file: !2455, line: 967, type: !14209, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14840)
!14840 = !{!14841, !14842}
!14841 = !DILocalVariable(name: "lock", arg: 1, scope: !14839, file: !2455, line: 967, type: !14177)
!14842 = !DILocalVariable(name: "key", arg: 2, scope: !14839, file: !2455, line: 967, type: !14166)
!14843 = !DILocation(line: 0, scope: !14839)
!14844 = !DILocation(line: 969, column: 6, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14839, file: !2455, line: 969, column: 6)
!14846 = !DILocation(line: 969, column: 23, scope: !14845)
!14847 = !DILocation(line: 969, column: 26, scope: !14845)
!14848 = !DILocation(line: 969, column: 6, scope: !14839)
!14849 = !DILocalVariable(name: "key", arg: 2, scope: !14850, file: !13070, line: 193, type: !14166)
!14850 = distinct !DISubprogram(name: "z_swap", scope: !13070, file: !13070, line: 193, type: !14851, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14853)
!14851 = !DISubroutineType(types: !14852)
!14852 = !{!109, !14177, !14166}
!14853 = !{!14854, !14849}
!14854 = !DILocalVariable(name: "lock", arg: 1, scope: !14850, file: !13070, line: 193, type: !14177)
!14855 = !DILocation(line: 0, scope: !14850, inlinedAt: !14856)
!14856 = distinct !DILocation(line: 970, column: 3, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14845, file: !2455, line: 969, column: 39)
!14858 = !DILocalVariable(name: "l", arg: 1, scope: !14859, file: !251, line: 221, type: !14177)
!14859 = distinct !DISubprogram(name: "k_spin_release", scope: !251, file: !251, line: 221, type: !14860, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14862)
!14860 = !DISubroutineType(types: !14861)
!14861 = !{null, !14177}
!14862 = !{!14858}
!14863 = !DILocation(line: 0, scope: !14859, inlinedAt: !14864)
!14864 = distinct !DILocation(line: 195, column: 2, scope: !14850, inlinedAt: !14856)
!14865 = !DILocation(line: 225, column: 2, scope: !14866, inlinedAt: !14864)
!14866 = distinct !DILexicalBlock(scope: !14867, file: !251, line: 225, column: 2)
!14867 = distinct !DILexicalBlock(scope: !14859, file: !251, line: 225, column: 2)
!14868 = !DILocation(line: 225, column: 2, scope: !14867, inlinedAt: !14864)
!14869 = !DILocation(line: 225, column: 2, scope: !14870, inlinedAt: !14864)
!14870 = distinct !DILexicalBlock(scope: !14866, file: !251, line: 225, column: 2)
!14871 = !DILocation(line: 196, column: 9, scope: !14850, inlinedAt: !14856)
!14872 = !DILocation(line: 971, column: 2, scope: !14857)
!14873 = !DILocation(line: 0, scope: !14208, inlinedAt: !14874)
!14874 = distinct !DILocation(line: 972, column: 3, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14845, file: !2455, line: 971, column: 9)
!14876 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !14874)
!14877 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14874)
!14878 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !14874)
!14879 = !DILocation(line: 0, scope: !14222, inlinedAt: !14880)
!14880 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !14874)
!14881 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !14880)
!14882 = !DILocation(line: 975, column: 1, scope: !14839)
!14883 = distinct !DISubprogram(name: "resched", scope: !2455, file: !2455, line: 940, type: !14884, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14886)
!14884 = !DISubroutineType(types: !14885)
!14885 = !{!360, !110}
!14886 = !{!14887}
!14887 = !DILocalVariable(name: "key", arg: 1, scope: !14883, file: !2455, line: 940, type: !110)
!14888 = !DILocation(line: 0, scope: !14883)
!14889 = !DILocalVariable(name: "key", arg: 1, scope: !14890, file: !6050, line: 112, type: !32)
!14890 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6050, file: !6050, line: 112, type: !14891, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14893)
!14891 = !DISubroutineType(types: !14892)
!14892 = !{!360, !32}
!14893 = !{!14889}
!14894 = !DILocation(line: 0, scope: !14890, inlinedAt: !14895)
!14895 = distinct !DILocation(line: 946, column: 9, scope: !14883)
!14896 = !DILocation(line: 115, column: 13, scope: !14890, inlinedAt: !14895)
!14897 = !DILocation(line: 946, column: 32, scope: !14883)
!14898 = !DILocation(line: 1031, column: 3, scope: !14899, inlinedAt: !14902)
!14899 = distinct !DISubprogram(name: "__get_IPSR", scope: !6388, file: !6388, line: 1027, type: !7393, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14900)
!14900 = !{!14901}
!14901 = !DILocalVariable(name: "result", scope: !14899, file: !6388, line: 1029, type: !110)
!14902 = distinct !DILocation(line: 48, column: 10, scope: !14903, inlinedAt: !14904)
!14903 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7399, file: !7399, line: 46, type: !7400, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !2045)
!14904 = distinct !DILocation(line: 946, column: 36, scope: !14883)
!14905 = !{i64 2490557}
!14906 = !DILocation(line: 0, scope: !14899, inlinedAt: !14902)
!14907 = !DILocation(line: 48, column: 9, scope: !14903, inlinedAt: !14904)
!14908 = !DILocation(line: 946, column: 2, scope: !14883)
!14909 = distinct !DISubprogram(name: "need_swap", scope: !2455, file: !2455, line: 953, type: !7400, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14910)
!14910 = !{!14911}
!14911 = !DILocalVariable(name: "new_thread", scope: !14909, file: !2455, line: 959, type: !2347)
!14912 = !DILocation(line: 962, column: 31, scope: !14909)
!14913 = !DILocation(line: 0, scope: !14909)
!14914 = !DILocation(line: 963, column: 23, scope: !14909)
!14915 = !DILocation(line: 963, column: 20, scope: !14909)
!14916 = !DILocation(line: 963, column: 2, scope: !14909)
!14917 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13070, file: !13070, line: 181, type: !6398, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14918)
!14918 = !{!14919, !14920}
!14919 = !DILocalVariable(name: "key", arg: 1, scope: !14917, file: !13070, line: 181, type: !32)
!14920 = !DILocalVariable(name: "ret", scope: !14917, file: !13070, line: 183, type: !109)
!14921 = !DILocation(line: 0, scope: !14917)
!14922 = !DILocation(line: 185, column: 8, scope: !14917)
!14923 = !DILocation(line: 186, column: 2, scope: !14917)
!14924 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2455, file: !2455, line: 665, type: !14132, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14925)
!14925 = !{!14926, !14927, !14929}
!14926 = !DILocalVariable(name: "thread", arg: 1, scope: !14924, file: !2455, line: 665, type: !2347)
!14927 = !DILocalVariable(name: "__i", scope: !14928, file: !2455, line: 671, type: !14166)
!14928 = distinct !DILexicalBlock(scope: !14924, file: !2455, line: 671, column: 2)
!14929 = !DILocalVariable(name: "__key", scope: !14928, file: !2455, line: 671, type: !14166)
!14930 = !DILocation(line: 0, scope: !14924)
!14931 = !DILocation(line: 669, column: 8, scope: !14924)
!14932 = !DILocation(line: 0, scope: !14928)
!14933 = !DILocation(line: 0, scope: !14174, inlinedAt: !14934)
!14934 = distinct !DILocation(line: 671, column: 2, scope: !14928)
!14935 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !14936)
!14936 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !14934)
!14937 = !DILocation(line: 0, scope: !14183, inlinedAt: !14936)
!14938 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !14934)
!14939 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !14934)
!14940 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !14934)
!14941 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !14934)
!14942 = !DILocation(line: 672, column: 7, scope: !14943)
!14943 = distinct !DILexicalBlock(scope: !14944, file: !2455, line: 672, column: 7)
!14944 = distinct !DILexicalBlock(scope: !14945, file: !2455, line: 671, column: 26)
!14945 = distinct !DILexicalBlock(scope: !14928, file: !2455, line: 671, column: 2)
!14946 = !DILocation(line: 672, column: 7, scope: !14944)
!14947 = !DILocation(line: 0, scope: !14366, inlinedAt: !14948)
!14948 = distinct !DILocation(line: 673, column: 4, scope: !14949)
!14949 = distinct !DILexicalBlock(scope: !14943, file: !2455, line: 672, column: 35)
!14950 = !DILocation(line: 266, column: 15, scope: !14366, inlinedAt: !14948)
!14951 = !DILocation(line: 266, column: 28, scope: !14366, inlinedAt: !14948)
!14952 = !DILocation(line: 0, scope: !14374, inlinedAt: !14953)
!14953 = distinct !DILocation(line: 268, column: 3, scope: !14378, inlinedAt: !14948)
!14954 = !DILocation(line: 234, column: 2, scope: !14374, inlinedAt: !14953)
!14955 = !DILocation(line: 674, column: 3, scope: !14949)
!14956 = !DILocation(line: 675, column: 3, scope: !14944)
!14957 = !DILocation(line: 676, column: 26, scope: !14944)
!14958 = !DILocation(line: 676, column: 23, scope: !14944)
!14959 = !DILocation(line: 676, column: 3, scope: !14944)
!14960 = !DILocation(line: 0, scope: !14208, inlinedAt: !14961)
!14961 = distinct !DILocation(line: 671, column: 2, scope: !14945)
!14962 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !14961)
!14963 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14961)
!14964 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !14961)
!14965 = !DILocation(line: 0, scope: !14222, inlinedAt: !14966)
!14966 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !14961)
!14967 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !14966)
!14968 = !DILocation(line: 679, column: 16, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14924, file: !2455, line: 679, column: 6)
!14970 = !DILocation(line: 679, column: 13, scope: !14969)
!14971 = !DILocation(line: 679, column: 6, scope: !14924)
!14972 = !DILocation(line: 680, column: 3, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14969, file: !2455, line: 679, column: 26)
!14974 = !DILocation(line: 681, column: 2, scope: !14973)
!14975 = !DILocation(line: 684, column: 1, scope: !14924)
!14976 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13395, file: !13395, line: 52, type: !14150, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14977)
!14977 = !{!14978}
!14978 = !DILocalVariable(name: "thread", arg: 1, scope: !14976, file: !13395, line: 52, type: !2347)
!14979 = !DILocation(line: 0, scope: !14976)
!14980 = !DILocation(line: 54, column: 39, scope: !14976)
!14981 = !DILocation(line: 54, column: 9, scope: !14976)
!14982 = !DILocation(line: 54, column: 2, scope: !14976)
!14983 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12966, file: !12966, line: 141, type: !14132, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14984)
!14984 = !{!14985}
!14985 = !DILocalVariable(name: "thread", arg: 1, scope: !14983, file: !12966, line: 141, type: !2347)
!14986 = !DILocation(line: 0, scope: !14983)
!14987 = !DILocation(line: 143, column: 15, scope: !14983)
!14988 = !DILocation(line: 143, column: 28, scope: !14983)
!14989 = !DILocation(line: 146, column: 1, scope: !14983)
!14990 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12966, file: !12966, line: 73, type: !3062, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !2045)
!14991 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !14992)
!14992 = distinct !DILocation(line: 75, column: 30, scope: !14990)
!14993 = !DILocation(line: 0, scope: !14183, inlinedAt: !14992)
!14994 = !DILocation(line: 75, column: 9, scope: !14990)
!14995 = !DILocation(line: 76, column: 1, scope: !14990)
!14996 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2455, file: !2455, line: 977, type: !6074, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !14997)
!14997 = !{!14998}
!14998 = !DILocalVariable(name: "key", arg: 1, scope: !14996, file: !2455, line: 977, type: !110)
!14999 = !DILocation(line: 0, scope: !14996)
!15000 = !DILocation(line: 979, column: 6, scope: !15001)
!15001 = distinct !DILexicalBlock(scope: !14996, file: !2455, line: 979, column: 6)
!15002 = !DILocation(line: 979, column: 6, scope: !14996)
!15003 = !DILocation(line: 980, column: 3, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !15001, file: !2455, line: 979, column: 20)
!15005 = !DILocation(line: 981, column: 2, scope: !15004)
!15006 = !DILocation(line: 0, scope: !14222, inlinedAt: !15007)
!15007 = distinct !DILocation(line: 982, column: 3, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !15001, file: !2455, line: 981, column: 9)
!15009 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !15007)
!15010 = !DILocation(line: 985, column: 1, scope: !14996)
!15011 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2455, file: !2455, line: 695, type: !14132, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15012)
!15012 = !{!15013, !15014}
!15013 = !DILocalVariable(name: "thread", arg: 1, scope: !15011, file: !2455, line: 695, type: !2347)
!15014 = !DILocalVariable(name: "key", scope: !15011, file: !2455, line: 699, type: !14166)
!15015 = !DILocation(line: 0, scope: !15011)
!15016 = !DILocation(line: 0, scope: !14174, inlinedAt: !15017)
!15017 = distinct !DILocation(line: 699, column: 25, scope: !15011)
!15018 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !15019)
!15019 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !15017)
!15020 = !DILocation(line: 0, scope: !14183, inlinedAt: !15019)
!15021 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !15017)
!15022 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15017)
!15023 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !15017)
!15024 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !15017)
!15025 = !DILocation(line: 702, column: 7, scope: !15026)
!15026 = distinct !DILexicalBlock(scope: !15011, file: !2455, line: 702, column: 6)
!15027 = !DILocation(line: 702, column: 6, scope: !15011)
!15028 = !DILocation(line: 0, scope: !14208, inlinedAt: !15029)
!15029 = distinct !DILocation(line: 703, column: 3, scope: !15030)
!15030 = distinct !DILexicalBlock(scope: !15026, file: !2455, line: 702, column: 38)
!15031 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !15029)
!15032 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15029)
!15033 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !15029)
!15034 = !DILocation(line: 0, scope: !14222, inlinedAt: !15035)
!15035 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !15029)
!15036 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !15035)
!15037 = !DILocation(line: 704, column: 3, scope: !15030)
!15038 = !DILocation(line: 707, column: 2, scope: !15011)
!15039 = !DILocation(line: 708, column: 2, scope: !15011)
!15040 = !DILocation(line: 710, column: 2, scope: !15011)
!15041 = !DILocation(line: 713, column: 1, scope: !15011)
!15042 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12966, file: !12966, line: 96, type: !14315, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15043)
!15043 = !{!15044}
!15044 = !DILocalVariable(name: "thread", arg: 1, scope: !15042, file: !12966, line: 96, type: !2347)
!15045 = !DILocation(line: 0, scope: !15042)
!15046 = !DILocation(line: 98, column: 23, scope: !15042)
!15047 = !DILocation(line: 98, column: 36, scope: !15042)
!15048 = !DILocation(line: 98, column: 57, scope: !15042)
!15049 = !DILocation(line: 98, column: 2, scope: !15042)
!15050 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12966, file: !12966, line: 148, type: !14132, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15051)
!15051 = !{!15052}
!15052 = !DILocalVariable(name: "thread", arg: 1, scope: !15050, file: !12966, line: 148, type: !2347)
!15053 = !DILocation(line: 0, scope: !15050)
!15054 = !DILocation(line: 150, column: 15, scope: !15050)
!15055 = !DILocation(line: 150, column: 28, scope: !15050)
!15056 = !DILocation(line: 153, column: 1, scope: !15050)
!15057 = distinct !DISubprogram(name: "z_pend_thread", scope: !2455, file: !2455, line: 770, type: !15058, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15064)
!15058 = !DISubroutineType(types: !15059)
!15059 = !{null, !2347, !2378, !15060}
!15060 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !15061)
!15061 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !15062)
!15062 = !{!15063}
!15063 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15061, file: !104, line: 66, baseType: !103, size: 64)
!15064 = !{!15065, !15066, !15067, !15068, !15070}
!15065 = !DILocalVariable(name: "thread", arg: 1, scope: !15057, file: !2455, line: 770, type: !2347)
!15066 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15057, file: !2455, line: 770, type: !2378)
!15067 = !DILocalVariable(name: "timeout", arg: 3, scope: !15057, file: !2455, line: 771, type: !15060)
!15068 = !DILocalVariable(name: "__i", scope: !15069, file: !2455, line: 774, type: !14166)
!15069 = distinct !DILexicalBlock(scope: !15057, file: !2455, line: 774, column: 2)
!15070 = !DILocalVariable(name: "__key", scope: !15069, file: !2455, line: 774, type: !14166)
!15071 = !DILocation(line: 0, scope: !15057)
!15072 = !DILocation(line: 773, column: 2, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15074, file: !2455, line: 773, column: 2)
!15074 = distinct !DILexicalBlock(scope: !15057, file: !2455, line: 773, column: 2)
!15075 = !DILocation(line: 773, column: 2, scope: !15074)
!15076 = !DILocation(line: 773, column: 2, scope: !15077)
!15077 = distinct !DILexicalBlock(scope: !15073, file: !2455, line: 773, column: 2)
!15078 = !DILocation(line: 0, scope: !15069)
!15079 = !DILocation(line: 0, scope: !14174, inlinedAt: !15080)
!15080 = distinct !DILocation(line: 774, column: 2, scope: !15069)
!15081 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !15082)
!15082 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !15080)
!15083 = !DILocation(line: 0, scope: !14183, inlinedAt: !15082)
!15084 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !15080)
!15085 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15080)
!15086 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !15080)
!15087 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !15080)
!15088 = !DILocation(line: 775, column: 3, scope: !15089)
!15089 = distinct !DILexicalBlock(scope: !15090, file: !2455, line: 774, column: 26)
!15090 = distinct !DILexicalBlock(scope: !15069, file: !2455, line: 774, column: 2)
!15091 = !DILocation(line: 0, scope: !14208, inlinedAt: !15092)
!15092 = distinct !DILocation(line: 774, column: 2, scope: !15090)
!15093 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !15092)
!15094 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15092)
!15095 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !15092)
!15096 = !DILocation(line: 0, scope: !14222, inlinedAt: !15097)
!15097 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !15092)
!15098 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !15097)
!15099 = !DILocation(line: 777, column: 1, scope: !15057)
!15100 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2455, file: !2455, line: 79, type: !14315, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15101)
!15101 = !{!15102}
!15102 = !DILocalVariable(name: "thread", arg: 1, scope: !15100, file: !2455, line: 79, type: !2347)
!15103 = !DILocation(line: 0, scope: !15100)
!15104 = !DILocation(line: 81, column: 23, scope: !15100)
!15105 = !DILocation(line: 81, column: 36, scope: !15100)
!15106 = !DILocation(line: 81, column: 53, scope: !15100)
!15107 = !DILocation(line: 81, column: 2, scope: !15100)
!15108 = distinct !DISubprogram(name: "pend_locked", scope: !2455, file: !2455, line: 760, type: !15058, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15109)
!15109 = !{!15110, !15111, !15112}
!15110 = !DILocalVariable(name: "thread", arg: 1, scope: !15108, file: !2455, line: 760, type: !2347)
!15111 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15108, file: !2455, line: 760, type: !2378)
!15112 = !DILocalVariable(name: "timeout", arg: 3, scope: !15108, file: !2455, line: 761, type: !15060)
!15113 = !DILocation(line: 0, scope: !15108)
!15114 = !DILocation(line: 766, column: 2, scope: !15108)
!15115 = !DILocation(line: 767, column: 2, scope: !15108)
!15116 = !DILocation(line: 768, column: 1, scope: !15108)
!15117 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2455, file: !2455, line: 740, type: !15118, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15120)
!15118 = !DISubroutineType(types: !15119)
!15119 = !{null, !2347, !2378}
!15120 = !{!15121, !15122}
!15121 = !DILocalVariable(name: "thread", arg: 1, scope: !15117, file: !2455, line: 740, type: !2347)
!15122 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15117, file: !2455, line: 740, type: !2378)
!15123 = !DILocation(line: 0, scope: !15117)
!15124 = !DILocation(line: 742, column: 2, scope: !15117)
!15125 = !DILocation(line: 743, column: 2, scope: !15117)
!15126 = !DILocation(line: 747, column: 13, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !15117, file: !2455, line: 747, column: 6)
!15128 = !DILocation(line: 747, column: 6, scope: !15117)
!15129 = !DILocation(line: 748, column: 16, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15127, file: !2455, line: 747, column: 22)
!15131 = !DILocation(line: 748, column: 26, scope: !15130)
!15132 = !DILocation(line: 749, column: 28, scope: !15130)
!15133 = !DILocation(line: 0, scope: !14397, inlinedAt: !15134)
!15134 = distinct !DILocation(line: 749, column: 3, scope: !15130)
!15135 = !DILocation(line: 186, column: 2, scope: !14407, inlinedAt: !15134)
!15136 = !DILocation(line: 186, column: 2, scope: !14408, inlinedAt: !15134)
!15137 = !DILocation(line: 186, column: 2, scope: !14411, inlinedAt: !15134)
!15138 = !DILocation(line: 188, column: 2, scope: !14413, inlinedAt: !15134)
!15139 = !DILocation(line: 188, column: 2, scope: !14415, inlinedAt: !15134)
!15140 = !DILocation(line: 0, scope: !14413, inlinedAt: !15134)
!15141 = !DILocation(line: 189, column: 7, scope: !14418, inlinedAt: !15134)
!15142 = !DILocation(line: 189, column: 35, scope: !14418, inlinedAt: !15134)
!15143 = !DILocation(line: 189, column: 7, scope: !14419, inlinedAt: !15134)
!15144 = !DILocation(line: 191, column: 21, scope: !14423, inlinedAt: !15134)
!15145 = !DILocation(line: 190, column: 4, scope: !14423, inlinedAt: !15134)
!15146 = !DILocation(line: 192, column: 4, scope: !14423, inlinedAt: !15134)
!15147 = distinct !{!15147, !15138, !15148}
!15148 = !DILocation(line: 194, column: 2, scope: !14413, inlinedAt: !15134)
!15149 = !DILocation(line: 196, column: 37, scope: !14397, inlinedAt: !15134)
!15150 = !DILocation(line: 196, column: 2, scope: !14397, inlinedAt: !15134)
!15151 = !DILocation(line: 197, column: 1, scope: !14397, inlinedAt: !15134)
!15152 = !DILocation(line: 751, column: 1, scope: !15117)
!15153 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2455, file: !2455, line: 753, type: !15154, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15156)
!15154 = !DISubroutineType(types: !15155)
!15155 = !{null, !2347, !15060}
!15156 = !{!15157, !15158}
!15157 = !DILocalVariable(name: "thread", arg: 1, scope: !15153, file: !2455, line: 753, type: !2347)
!15158 = !DILocalVariable(name: "timeout", arg: 2, scope: !15153, file: !2455, line: 753, type: !15060)
!15159 = !DILocation(line: 0, scope: !15153)
!15160 = !DILocation(line: 755, column: 7, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15153, file: !2455, line: 755, column: 6)
!15162 = !DILocation(line: 755, column: 6, scope: !15153)
!15163 = !DILocation(line: 756, column: 3, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15161, file: !2455, line: 755, column: 41)
!15165 = !DILocation(line: 757, column: 2, scope: !15164)
!15166 = !DILocation(line: 758, column: 1, scope: !15153)
!15167 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13395, file: !13395, line: 47, type: !15154, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15168)
!15168 = !{!15169, !15170}
!15169 = !DILocalVariable(name: "thread", arg: 1, scope: !15167, file: !13395, line: 47, type: !2347)
!15170 = !DILocalVariable(name: "ticks", arg: 2, scope: !15167, file: !13395, line: 47, type: !15060)
!15171 = !DILocation(line: 0, scope: !15167)
!15172 = !DILocation(line: 49, column: 30, scope: !15167)
!15173 = !DILocation(line: 49, column: 2, scope: !15167)
!15174 = !DILocation(line: 50, column: 1, scope: !15167)
!15175 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2455, file: !2455, line: 795, type: !2404, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15176)
!15176 = !{!15177, !15178, !15179, !15181, !15182}
!15177 = !DILocalVariable(name: "timeout", arg: 1, scope: !15175, file: !2455, line: 795, type: !2406)
!15178 = !DILocalVariable(name: "thread", scope: !15175, file: !2455, line: 797, type: !2347)
!15179 = !DILocalVariable(name: "__i", scope: !15180, file: !2455, line: 800, type: !14166)
!15180 = distinct !DILexicalBlock(scope: !15175, file: !2455, line: 800, column: 2)
!15181 = !DILocalVariable(name: "__key", scope: !15180, file: !2455, line: 800, type: !14166)
!15182 = !DILocalVariable(name: "killed", scope: !15183, file: !2455, line: 801, type: !360)
!15183 = distinct !DILexicalBlock(scope: !15184, file: !2455, line: 800, column: 26)
!15184 = distinct !DILexicalBlock(scope: !15180, file: !2455, line: 800, column: 2)
!15185 = !DILocation(line: 0, scope: !15175)
!15186 = !DILocation(line: 797, column: 28, scope: !15175)
!15187 = !DILocation(line: 0, scope: !15180)
!15188 = !DILocation(line: 0, scope: !14174, inlinedAt: !15189)
!15189 = distinct !DILocation(line: 800, column: 2, scope: !15180)
!15190 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !15191)
!15191 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !15189)
!15192 = !DILocation(line: 0, scope: !14183, inlinedAt: !15191)
!15193 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !15189)
!15194 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15189)
!15195 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !15189)
!15196 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !15189)
!15197 = !DILocation(line: 801, column: 27, scope: !15183)
!15198 = !DILocation(line: 801, column: 32, scope: !15183)
!15199 = !DILocation(line: 801, column: 61, scope: !15183)
!15200 = !DILocation(line: 0, scope: !15183)
!15201 = !DILocation(line: 804, column: 7, scope: !15183)
!15202 = !DILocation(line: 805, column: 21, scope: !15203)
!15203 = distinct !DILexicalBlock(scope: !15204, file: !2455, line: 805, column: 8)
!15204 = distinct !DILexicalBlock(scope: !15205, file: !2455, line: 804, column: 16)
!15205 = distinct !DILexicalBlock(scope: !15183, file: !2455, line: 804, column: 7)
!15206 = !DILocation(line: 805, column: 31, scope: !15203)
!15207 = !DILocation(line: 805, column: 8, scope: !15204)
!15208 = !DILocation(line: 806, column: 5, scope: !15209)
!15209 = distinct !DILexicalBlock(scope: !15203, file: !2455, line: 805, column: 40)
!15210 = !DILocation(line: 807, column: 4, scope: !15209)
!15211 = !DILocation(line: 808, column: 4, scope: !15204)
!15212 = !DILocation(line: 809, column: 4, scope: !15204)
!15213 = !DILocation(line: 810, column: 4, scope: !15204)
!15214 = !DILocation(line: 811, column: 3, scope: !15204)
!15215 = !DILocation(line: 0, scope: !14208, inlinedAt: !15216)
!15216 = distinct !DILocation(line: 800, column: 2, scope: !15184)
!15217 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !15216)
!15218 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15216)
!15219 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !15216)
!15220 = !DILocation(line: 0, scope: !14222, inlinedAt: !15221)
!15221 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !15216)
!15222 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !15221)
!15223 = !DILocation(line: 813, column: 1, scope: !15175)
!15224 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2455, file: !2455, line: 779, type: !14132, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15225)
!15225 = !{!15226}
!15226 = !DILocalVariable(name: "thread", arg: 1, scope: !15224, file: !2455, line: 779, type: !2347)
!15227 = !DILocation(line: 0, scope: !15224)
!15228 = !DILocation(line: 781, column: 21, scope: !15224)
!15229 = !DILocation(line: 781, column: 2, scope: !15224)
!15230 = !DILocation(line: 782, column: 2, scope: !15224)
!15231 = !DILocation(line: 783, column: 15, scope: !15224)
!15232 = !DILocation(line: 783, column: 25, scope: !15224)
!15233 = !DILocation(line: 784, column: 1, scope: !15224)
!15234 = distinct !DISubprogram(name: "pended_on_thread", scope: !2455, file: !2455, line: 724, type: !15235, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15237)
!15235 = !DISubroutineType(types: !15236)
!15236 = !{!2378, !2347}
!15237 = !{!15238}
!15238 = !DILocalVariable(name: "thread", arg: 1, scope: !15234, file: !2455, line: 724, type: !2347)
!15239 = !DILocation(line: 0, scope: !15234)
!15240 = !DILocation(line: 726, column: 2, scope: !15241)
!15241 = distinct !DILexicalBlock(scope: !15242, file: !2455, line: 726, column: 2)
!15242 = distinct !DILexicalBlock(scope: !15234, file: !2455, line: 726, column: 2)
!15243 = !DILocation(line: 726, column: 2, scope: !15242)
!15244 = !DILocation(line: 726, column: 2, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15241, file: !2455, line: 726, column: 2)
!15246 = !DILocation(line: 728, column: 2, scope: !15234)
!15247 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12966, file: !12966, line: 165, type: !14132, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15248)
!15248 = !{!15249}
!15249 = !DILocalVariable(name: "thread", arg: 1, scope: !15247, file: !12966, line: 165, type: !2347)
!15250 = !DILocation(line: 0, scope: !15247)
!15251 = !DILocation(line: 167, column: 15, scope: !15247)
!15252 = !DILocation(line: 167, column: 28, scope: !15247)
!15253 = !DILocation(line: 168, column: 1, scope: !15247)
!15254 = distinct !DISubprogram(name: "unready_thread", scope: !2455, file: !2455, line: 731, type: !14132, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15255)
!15255 = !{!15256}
!15256 = !DILocalVariable(name: "thread", arg: 1, scope: !15254, file: !2455, line: 731, type: !2347)
!15257 = !DILocation(line: 0, scope: !15254)
!15258 = !DILocation(line: 733, column: 6, scope: !15259)
!15259 = distinct !DILexicalBlock(scope: !15254, file: !2455, line: 733, column: 6)
!15260 = !DILocation(line: 733, column: 6, scope: !15254)
!15261 = !DILocation(line: 0, scope: !14366, inlinedAt: !15262)
!15262 = distinct !DILocation(line: 734, column: 3, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15259, file: !2455, line: 733, column: 34)
!15264 = !DILocation(line: 266, column: 15, scope: !14366, inlinedAt: !15262)
!15265 = !DILocation(line: 266, column: 28, scope: !14366, inlinedAt: !15262)
!15266 = !DILocation(line: 0, scope: !14374, inlinedAt: !15267)
!15267 = distinct !DILocation(line: 268, column: 3, scope: !14378, inlinedAt: !15262)
!15268 = !DILocation(line: 234, column: 2, scope: !14374, inlinedAt: !15267)
!15269 = !DILocation(line: 735, column: 2, scope: !15263)
!15270 = !DILocation(line: 736, column: 25, scope: !15254)
!15271 = !DILocation(line: 736, column: 22, scope: !15254)
!15272 = !DILocation(line: 736, column: 2, scope: !15254)
!15273 = !DILocation(line: 737, column: 1, scope: !15254)
!15274 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12966, file: !12966, line: 160, type: !14132, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15275)
!15275 = !{!15276}
!15276 = !DILocalVariable(name: "thread", arg: 1, scope: !15274, file: !12966, line: 160, type: !2347)
!15277 = !DILocation(line: 0, scope: !15274)
!15278 = !DILocation(line: 162, column: 15, scope: !15274)
!15279 = !DILocation(line: 162, column: 28, scope: !15274)
!15280 = !DILocation(line: 163, column: 1, scope: !15274)
!15281 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2455, file: !2455, line: 786, type: !14132, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15282)
!15282 = !{!15283, !15284, !15286}
!15283 = !DILocalVariable(name: "thread", arg: 1, scope: !15281, file: !2455, line: 786, type: !2347)
!15284 = !DILocalVariable(name: "__i", scope: !15285, file: !2455, line: 788, type: !14166)
!15285 = distinct !DILexicalBlock(scope: !15281, file: !2455, line: 788, column: 2)
!15286 = !DILocalVariable(name: "__key", scope: !15285, file: !2455, line: 788, type: !14166)
!15287 = !DILocation(line: 0, scope: !15281)
!15288 = !DILocation(line: 0, scope: !15285)
!15289 = !DILocation(line: 0, scope: !14174, inlinedAt: !15290)
!15290 = distinct !DILocation(line: 788, column: 2, scope: !15285)
!15291 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !15292)
!15292 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !15290)
!15293 = !DILocation(line: 0, scope: !14183, inlinedAt: !15292)
!15294 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !15290)
!15295 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15290)
!15296 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !15290)
!15297 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !15290)
!15298 = !DILocation(line: 789, column: 3, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15300, file: !2455, line: 788, column: 26)
!15300 = distinct !DILexicalBlock(scope: !15285, file: !2455, line: 788, column: 2)
!15301 = !DILocation(line: 0, scope: !14208, inlinedAt: !15302)
!15302 = distinct !DILocation(line: 788, column: 2, scope: !15300)
!15303 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !15302)
!15304 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15302)
!15305 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !15302)
!15306 = !DILocation(line: 0, scope: !14222, inlinedAt: !15307)
!15307 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !15302)
!15308 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !15307)
!15309 = !DILocation(line: 791, column: 1, scope: !15281)
!15310 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2455, file: !2455, line: 816, type: !15311, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15313)
!15311 = !DISubroutineType(types: !15312)
!15312 = !{!109, !110, !2378, !15060}
!15313 = !{!15314, !15315, !15316, !15317, !15318, !15320}
!15314 = !DILocalVariable(name: "key", arg: 1, scope: !15310, file: !2455, line: 816, type: !110)
!15315 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15310, file: !2455, line: 816, type: !2378)
!15316 = !DILocalVariable(name: "timeout", arg: 3, scope: !15310, file: !2455, line: 816, type: !15060)
!15317 = !DILocalVariable(name: "ret", scope: !15310, file: !2455, line: 828, type: !109)
!15318 = !DILocalVariable(name: "__i", scope: !15319, file: !2455, line: 829, type: !14166)
!15319 = distinct !DILexicalBlock(scope: !15310, file: !2455, line: 829, column: 2)
!15320 = !DILocalVariable(name: "__key", scope: !15319, file: !2455, line: 829, type: !14166)
!15321 = !DILocation(line: 0, scope: !15310)
!15322 = !DILocation(line: 823, column: 14, scope: !15310)
!15323 = !DILocation(line: 823, column: 2, scope: !15310)
!15324 = !DILocation(line: 826, column: 20, scope: !15310)
!15325 = !DILocation(line: 826, column: 18, scope: !15310)
!15326 = !DILocation(line: 828, column: 12, scope: !15310)
!15327 = !DILocation(line: 0, scope: !15319)
!15328 = !DILocation(line: 0, scope: !14174, inlinedAt: !15329)
!15329 = distinct !DILocation(line: 829, column: 2, scope: !15319)
!15330 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !15331)
!15331 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !15329)
!15332 = !DILocation(line: 0, scope: !14183, inlinedAt: !15331)
!15333 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !15329)
!15334 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15329)
!15335 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !15329)
!15336 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !15329)
!15337 = !DILocation(line: 830, column: 7, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15339, file: !2455, line: 830, column: 7)
!15339 = distinct !DILexicalBlock(scope: !15340, file: !2455, line: 829, column: 26)
!15340 = distinct !DILexicalBlock(scope: !15319, file: !2455, line: 829, column: 2)
!15341 = !DILocation(line: 830, column: 26, scope: !15338)
!15342 = !DILocation(line: 830, column: 23, scope: !15338)
!15343 = !DILocation(line: 830, column: 7, scope: !15339)
!15344 = !DILocation(line: 831, column: 20, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15338, file: !2455, line: 830, column: 36)
!15346 = !DILocation(line: 832, column: 3, scope: !15345)
!15347 = !DILocation(line: 0, scope: !14208, inlinedAt: !15348)
!15348 = distinct !DILocation(line: 829, column: 2, scope: !15340)
!15349 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !15348)
!15350 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15348)
!15351 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !15348)
!15352 = !DILocation(line: 0, scope: !14222, inlinedAt: !15353)
!15353 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !15348)
!15354 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !15353)
!15355 = !DILocation(line: 834, column: 2, scope: !15310)
!15356 = distinct !DISubprogram(name: "z_pend_curr", scope: !2455, file: !2455, line: 840, type: !15357, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15359)
!15357 = !DISubroutineType(types: !15358)
!15358 = !{!109, !14177, !14166, !2378, !15060}
!15359 = !{!15360, !15361, !15362, !15363}
!15360 = !DILocalVariable(name: "lock", arg: 1, scope: !15356, file: !2455, line: 840, type: !14177)
!15361 = !DILocalVariable(name: "key", arg: 2, scope: !15356, file: !2455, line: 840, type: !14166)
!15362 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15356, file: !2455, line: 841, type: !2378)
!15363 = !DILocalVariable(name: "timeout", arg: 4, scope: !15356, file: !2455, line: 841, type: !15060)
!15364 = !DILocation(line: 0, scope: !15356)
!15365 = !DILocation(line: 844, column: 20, scope: !15356)
!15366 = !DILocation(line: 844, column: 18, scope: !15356)
!15367 = !DILocation(line: 846, column: 2, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15369, file: !2455, line: 846, column: 2)
!15369 = distinct !DILexicalBlock(scope: !15356, file: !2455, line: 846, column: 2)
!15370 = !DILocation(line: 846, column: 2, scope: !15369)
!15371 = !DILocation(line: 846, column: 2, scope: !15372)
!15372 = distinct !DILexicalBlock(scope: !15368, file: !2455, line: 846, column: 2)
!15373 = !DILocation(line: 0, scope: !14174, inlinedAt: !15374)
!15374 = distinct !DILocation(line: 856, column: 9, scope: !15356)
!15375 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !15376)
!15376 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !15374)
!15377 = !DILocation(line: 0, scope: !14183, inlinedAt: !15376)
!15378 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !15374)
!15379 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15374)
!15380 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !15374)
!15381 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !15374)
!15382 = !DILocation(line: 857, column: 14, scope: !15356)
!15383 = !DILocation(line: 857, column: 2, scope: !15356)
!15384 = !DILocation(line: 0, scope: !14859, inlinedAt: !15385)
!15385 = distinct !DILocation(line: 858, column: 2, scope: !15356)
!15386 = !DILocation(line: 225, column: 2, scope: !14866, inlinedAt: !15385)
!15387 = !DILocation(line: 225, column: 2, scope: !14867, inlinedAt: !15385)
!15388 = !DILocation(line: 225, column: 2, scope: !14870, inlinedAt: !15385)
!15389 = !DILocation(line: 0, scope: !14850, inlinedAt: !15390)
!15390 = distinct !DILocation(line: 859, column: 9, scope: !15356)
!15391 = !DILocation(line: 0, scope: !14859, inlinedAt: !15392)
!15392 = distinct !DILocation(line: 195, column: 2, scope: !14850, inlinedAt: !15390)
!15393 = !DILocation(line: 225, column: 2, scope: !14866, inlinedAt: !15392)
!15394 = !DILocation(line: 225, column: 2, scope: !14867, inlinedAt: !15392)
!15395 = !DILocation(line: 225, column: 2, scope: !14870, inlinedAt: !15392)
!15396 = !DILocation(line: 196, column: 9, scope: !14850, inlinedAt: !15390)
!15397 = !DILocation(line: 859, column: 2, scope: !15356)
!15398 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2455, file: !2455, line: 862, type: !15399, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15401)
!15399 = !DISubroutineType(types: !15400)
!15400 = !{!2347, !2378}
!15401 = !{!15402, !15403, !15404, !15406}
!15402 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15398, file: !2455, line: 862, type: !2378)
!15403 = !DILocalVariable(name: "thread", scope: !15398, file: !2455, line: 864, type: !2347)
!15404 = !DILocalVariable(name: "__i", scope: !15405, file: !2455, line: 866, type: !14166)
!15405 = distinct !DILexicalBlock(scope: !15398, file: !2455, line: 866, column: 2)
!15406 = !DILocalVariable(name: "__key", scope: !15405, file: !2455, line: 866, type: !14166)
!15407 = !DILocation(line: 0, scope: !15398)
!15408 = !DILocation(line: 0, scope: !15405)
!15409 = !DILocation(line: 0, scope: !14174, inlinedAt: !15410)
!15410 = distinct !DILocation(line: 866, column: 2, scope: !15405)
!15411 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !15412)
!15412 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !15410)
!15413 = !DILocation(line: 0, scope: !14183, inlinedAt: !15412)
!15414 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !15410)
!15415 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15410)
!15416 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !15410)
!15417 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !15410)
!15418 = !DILocation(line: 867, column: 12, scope: !15419)
!15419 = distinct !DILexicalBlock(scope: !15420, file: !2455, line: 866, column: 26)
!15420 = distinct !DILexicalBlock(scope: !15405, file: !2455, line: 866, column: 2)
!15421 = !DILocation(line: 869, column: 14, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15419, file: !2455, line: 869, column: 7)
!15423 = !DILocation(line: 869, column: 7, scope: !15419)
!15424 = !DILocation(line: 870, column: 4, scope: !15425)
!15425 = distinct !DILexicalBlock(scope: !15422, file: !2455, line: 869, column: 23)
!15426 = !DILocation(line: 871, column: 3, scope: !15425)
!15427 = !DILocation(line: 0, scope: !14208, inlinedAt: !15428)
!15428 = distinct !DILocation(line: 866, column: 2, scope: !15420)
!15429 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !15428)
!15430 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15428)
!15431 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !15428)
!15432 = !DILocation(line: 0, scope: !14222, inlinedAt: !15433)
!15433 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !15428)
!15434 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !15433)
!15435 = !DILocation(line: 874, column: 2, scope: !15398)
!15436 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2455, file: !2455, line: 877, type: !15399, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15437)
!15437 = !{!15438, !15439, !15440, !15442}
!15438 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15436, file: !2455, line: 877, type: !2378)
!15439 = !DILocalVariable(name: "thread", scope: !15436, file: !2455, line: 879, type: !2347)
!15440 = !DILocalVariable(name: "__i", scope: !15441, file: !2455, line: 881, type: !14166)
!15441 = distinct !DILexicalBlock(scope: !15436, file: !2455, line: 881, column: 2)
!15442 = !DILocalVariable(name: "__key", scope: !15441, file: !2455, line: 881, type: !14166)
!15443 = !DILocation(line: 0, scope: !15436)
!15444 = !DILocation(line: 0, scope: !15441)
!15445 = !DILocation(line: 0, scope: !14174, inlinedAt: !15446)
!15446 = distinct !DILocation(line: 881, column: 2, scope: !15441)
!15447 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !15448)
!15448 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !15446)
!15449 = !DILocation(line: 0, scope: !14183, inlinedAt: !15448)
!15450 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !15446)
!15451 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15446)
!15452 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !15446)
!15453 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !15446)
!15454 = !DILocation(line: 882, column: 12, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15456, file: !2455, line: 881, column: 26)
!15456 = distinct !DILexicalBlock(scope: !15441, file: !2455, line: 881, column: 2)
!15457 = !DILocation(line: 884, column: 14, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15455, file: !2455, line: 884, column: 7)
!15459 = !DILocation(line: 884, column: 7, scope: !15455)
!15460 = !DILocation(line: 885, column: 4, scope: !15461)
!15461 = distinct !DILexicalBlock(scope: !15458, file: !2455, line: 884, column: 23)
!15462 = !DILocation(line: 886, column: 10, scope: !15461)
!15463 = !DILocation(line: 887, column: 3, scope: !15461)
!15464 = !DILocation(line: 0, scope: !14208, inlinedAt: !15465)
!15465 = distinct !DILocation(line: 881, column: 2, scope: !15456)
!15466 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !15465)
!15467 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15465)
!15468 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !15465)
!15469 = !DILocation(line: 0, scope: !14222, inlinedAt: !15470)
!15470 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !15465)
!15471 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !15470)
!15472 = !DILocation(line: 890, column: 2, scope: !15436)
!15473 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2455, file: !2455, line: 893, type: !14132, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15474)
!15474 = !{!15475}
!15475 = !DILocalVariable(name: "thread", arg: 1, scope: !15473, file: !2455, line: 893, type: !2347)
!15476 = !DILocation(line: 0, scope: !15473)
!15477 = !DILocation(line: 0, scope: !15281, inlinedAt: !15478)
!15478 = distinct !DILocation(line: 895, column: 2, scope: !15473)
!15479 = !DILocation(line: 0, scope: !15285, inlinedAt: !15478)
!15480 = !DILocation(line: 0, scope: !14174, inlinedAt: !15481)
!15481 = distinct !DILocation(line: 788, column: 2, scope: !15285, inlinedAt: !15478)
!15482 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !15483)
!15483 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !15481)
!15484 = !DILocation(line: 0, scope: !14183, inlinedAt: !15483)
!15485 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !15481)
!15486 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15481)
!15487 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !15481)
!15488 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !15481)
!15489 = !DILocation(line: 789, column: 3, scope: !15299, inlinedAt: !15478)
!15490 = !DILocation(line: 0, scope: !14208, inlinedAt: !15491)
!15491 = distinct !DILocation(line: 788, column: 2, scope: !15300, inlinedAt: !15478)
!15492 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !15491)
!15493 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15491)
!15494 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !15491)
!15495 = !DILocation(line: 0, scope: !14222, inlinedAt: !15496)
!15496 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !15491)
!15497 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !15496)
!15498 = !DILocation(line: 896, column: 8, scope: !15473)
!15499 = !DILocation(line: 897, column: 1, scope: !15473)
!15500 = distinct !DISubprogram(name: "z_set_prio", scope: !2455, file: !2455, line: 902, type: !14535, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15501)
!15501 = !{!15502, !15503, !15504, !15505, !15507}
!15502 = !DILocalVariable(name: "thread", arg: 1, scope: !15500, file: !2455, line: 902, type: !2347)
!15503 = !DILocalVariable(name: "prio", arg: 2, scope: !15500, file: !2455, line: 902, type: !109)
!15504 = !DILocalVariable(name: "need_sched", scope: !15500, file: !2455, line: 904, type: !360)
!15505 = !DILocalVariable(name: "__i", scope: !15506, file: !2455, line: 906, type: !14166)
!15506 = distinct !DILexicalBlock(scope: !15500, file: !2455, line: 906, column: 2)
!15507 = !DILocalVariable(name: "__key", scope: !15506, file: !2455, line: 906, type: !14166)
!15508 = !DILocation(line: 0, scope: !15500)
!15509 = !DILocation(line: 0, scope: !15506)
!15510 = !DILocation(line: 0, scope: !14174, inlinedAt: !15511)
!15511 = distinct !DILocation(line: 906, column: 2, scope: !15506)
!15512 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !15513)
!15513 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !15511)
!15514 = !DILocation(line: 0, scope: !14183, inlinedAt: !15513)
!15515 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !15511)
!15516 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15511)
!15517 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !15511)
!15518 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !15511)
!15519 = !DILocation(line: 907, column: 16, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15521, file: !2455, line: 906, column: 26)
!15521 = distinct !DILexicalBlock(scope: !15506, file: !2455, line: 906, column: 2)
!15522 = !DILocation(line: 909, column: 7, scope: !15520)
!15523 = !DILocation(line: 0, scope: !14366, inlinedAt: !15524)
!15524 = distinct !DILocation(line: 912, column: 5, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15526, file: !2455, line: 911, column: 63)
!15526 = distinct !DILexicalBlock(scope: !15527, file: !2455, line: 911, column: 8)
!15527 = distinct !DILexicalBlock(scope: !15528, file: !2455, line: 909, column: 19)
!15528 = distinct !DILexicalBlock(scope: !15520, file: !2455, line: 909, column: 7)
!15529 = !DILocation(line: 266, column: 28, scope: !14366, inlinedAt: !15524)
!15530 = !DILocation(line: 0, scope: !14374, inlinedAt: !15531)
!15531 = distinct !DILocation(line: 268, column: 3, scope: !14378, inlinedAt: !15524)
!15532 = !DILocation(line: 234, column: 2, scope: !14374, inlinedAt: !15531)
!15533 = !DILocation(line: 913, column: 23, scope: !15525)
!15534 = !DILocation(line: 0, scope: !14383, inlinedAt: !15535)
!15535 = distinct !DILocation(line: 914, column: 5, scope: !15525)
!15536 = !DILocation(line: 252, column: 28, scope: !14383, inlinedAt: !15535)
!15537 = !DILocation(line: 0, scope: !14390, inlinedAt: !15538)
!15538 = distinct !DILocation(line: 254, column: 3, scope: !14394, inlinedAt: !15535)
!15539 = !DILocation(line: 0, scope: !14397, inlinedAt: !15540)
!15540 = distinct !DILocation(line: 229, column: 2, scope: !14390, inlinedAt: !15538)
!15541 = !DILocation(line: 186, column: 2, scope: !14407, inlinedAt: !15540)
!15542 = !DILocation(line: 186, column: 2, scope: !14408, inlinedAt: !15540)
!15543 = !DILocation(line: 186, column: 2, scope: !14411, inlinedAt: !15540)
!15544 = !DILocation(line: 188, column: 2, scope: !14413, inlinedAt: !15540)
!15545 = !DILocation(line: 188, column: 2, scope: !14415, inlinedAt: !15540)
!15546 = !DILocation(line: 0, scope: !14413, inlinedAt: !15540)
!15547 = !DILocation(line: 189, column: 7, scope: !14418, inlinedAt: !15540)
!15548 = !DILocation(line: 189, column: 35, scope: !14418, inlinedAt: !15540)
!15549 = !DILocation(line: 189, column: 7, scope: !14419, inlinedAt: !15540)
!15550 = !DILocation(line: 190, column: 4, scope: !14423, inlinedAt: !15540)
!15551 = !DILocation(line: 192, column: 4, scope: !14423, inlinedAt: !15540)
!15552 = distinct !{!15552, !15544, !15553}
!15553 = !DILocation(line: 194, column: 2, scope: !14413, inlinedAt: !15540)
!15554 = !DILocation(line: 196, column: 2, scope: !14397, inlinedAt: !15540)
!15555 = !DILocation(line: 197, column: 1, scope: !14397, inlinedAt: !15540)
!15556 = !DILocation(line: 918, column: 4, scope: !15527)
!15557 = !DILocation(line: 919, column: 3, scope: !15527)
!15558 = !DILocation(line: 920, column: 22, scope: !15559)
!15559 = distinct !DILexicalBlock(scope: !15528, file: !2455, line: 919, column: 10)
!15560 = !DILocation(line: 0, scope: !14208, inlinedAt: !15561)
!15561 = distinct !DILocation(line: 906, column: 2, scope: !15521)
!15562 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !15561)
!15563 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15561)
!15564 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !15561)
!15565 = !DILocation(line: 0, scope: !14222, inlinedAt: !15566)
!15566 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !15561)
!15567 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !15566)
!15568 = !DILocation(line: 926, column: 2, scope: !15500)
!15569 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2455, file: !2455, line: 929, type: !15570, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15572)
!15570 = !DISubroutineType(types: !15571)
!15571 = !{null, !2347, !109}
!15572 = !{!15573, !15574, !15575}
!15573 = !DILocalVariable(name: "thread", arg: 1, scope: !15569, file: !2455, line: 929, type: !2347)
!15574 = !DILocalVariable(name: "prio", arg: 2, scope: !15569, file: !2455, line: 929, type: !109)
!15575 = !DILocalVariable(name: "need_sched", scope: !15569, file: !2455, line: 931, type: !360)
!15576 = !DILocation(line: 0, scope: !15569)
!15577 = !DILocation(line: 931, column: 20, scope: !15569)
!15578 = !DILocation(line: 935, column: 17, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15569, file: !2455, line: 935, column: 6)
!15580 = !DILocation(line: 935, column: 20, scope: !15579)
!15581 = !DILocation(line: 935, column: 35, scope: !15579)
!15582 = !DILocation(line: 935, column: 48, scope: !15579)
!15583 = !DILocation(line: 935, column: 6, scope: !15569)
!15584 = !DILocation(line: 936, column: 3, scope: !15585)
!15585 = distinct !DILexicalBlock(scope: !15579, file: !2455, line: 935, column: 55)
!15586 = !DILocation(line: 937, column: 2, scope: !15585)
!15587 = !DILocation(line: 938, column: 1, scope: !15569)
!15588 = distinct !DISubprogram(name: "k_sched_lock", scope: !2455, file: !2455, line: 987, type: !3062, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15589)
!15589 = !{!15590, !15592}
!15590 = !DILocalVariable(name: "__i", scope: !15591, file: !2455, line: 989, type: !14166)
!15591 = distinct !DILexicalBlock(scope: !15588, file: !2455, line: 989, column: 2)
!15592 = !DILocalVariable(name: "__key", scope: !15591, file: !2455, line: 989, type: !14166)
!15593 = !DILocation(line: 0, scope: !15591)
!15594 = !DILocation(line: 0, scope: !14174, inlinedAt: !15595)
!15595 = distinct !DILocation(line: 989, column: 2, scope: !15591)
!15596 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !15597)
!15597 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !15595)
!15598 = !DILocation(line: 0, scope: !14183, inlinedAt: !15597)
!15599 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !15595)
!15600 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15595)
!15601 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !15595)
!15602 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !15595)
!15603 = !DILocation(line: 992, column: 3, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !15605, file: !2455, line: 989, column: 26)
!15605 = distinct !DILexicalBlock(scope: !15591, file: !2455, line: 989, column: 2)
!15606 = !DILocation(line: 0, scope: !14208, inlinedAt: !15607)
!15607 = distinct !DILocation(line: 989, column: 2, scope: !15605)
!15608 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !15607)
!15609 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15607)
!15610 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !15607)
!15611 = !DILocation(line: 0, scope: !14222, inlinedAt: !15612)
!15612 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !15607)
!15613 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !15612)
!15614 = !DILocation(line: 994, column: 1, scope: !15588)
!15615 = distinct !DISubprogram(name: "z_sched_lock", scope: !12966, file: !12966, line: 251, type: !3062, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !2045)
!15616 = !DILocation(line: 1031, column: 3, scope: !14899, inlinedAt: !15617)
!15617 = distinct !DILocation(line: 48, column: 10, scope: !14903, inlinedAt: !15618)
!15618 = distinct !DILocation(line: 253, column: 2, scope: !15619)
!15619 = distinct !DILexicalBlock(scope: !15620, file: !12966, line: 253, column: 2)
!15620 = distinct !DILexicalBlock(scope: !15615, file: !12966, line: 253, column: 2)
!15621 = !DILocation(line: 0, scope: !14899, inlinedAt: !15617)
!15622 = !DILocation(line: 48, column: 9, scope: !14903, inlinedAt: !15618)
!15623 = !DILocation(line: 253, column: 2, scope: !15620)
!15624 = !DILocation(line: 253, column: 2, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15619, file: !12966, line: 253, column: 2)
!15626 = !DILocation(line: 254, column: 2, scope: !15627)
!15627 = distinct !DILexicalBlock(scope: !15628, file: !12966, line: 254, column: 2)
!15628 = distinct !DILexicalBlock(scope: !15615, file: !12966, line: 254, column: 2)
!15629 = !DILocation(line: 254, column: 2, scope: !15628)
!15630 = !DILocation(line: 254, column: 2, scope: !15631)
!15631 = distinct !DILexicalBlock(scope: !15627, file: !12966, line: 254, column: 2)
!15632 = !DILocation(line: 256, column: 2, scope: !15615)
!15633 = !DILocation(line: 258, column: 2, scope: !15634)
!15634 = distinct !DILexicalBlock(scope: !15615, file: !12966, line: 258, column: 2)
!15635 = !{i64 2152351191}
!15636 = !DILocation(line: 259, column: 1, scope: !15615)
!15637 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2455, file: !2455, line: 996, type: !3062, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15638)
!15638 = !{!15639, !15641}
!15639 = !DILocalVariable(name: "__i", scope: !15640, file: !2455, line: 998, type: !14166)
!15640 = distinct !DILexicalBlock(scope: !15637, file: !2455, line: 998, column: 2)
!15641 = !DILocalVariable(name: "__key", scope: !15640, file: !2455, line: 998, type: !14166)
!15642 = !DILocation(line: 0, scope: !15640)
!15643 = !DILocation(line: 0, scope: !14174, inlinedAt: !15644)
!15644 = distinct !DILocation(line: 998, column: 2, scope: !15640)
!15645 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !15646)
!15646 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !15644)
!15647 = !DILocation(line: 0, scope: !14183, inlinedAt: !15646)
!15648 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !15644)
!15649 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15644)
!15650 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !15644)
!15651 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !15644)
!15652 = !DILocation(line: 999, column: 3, scope: !15653)
!15653 = distinct !DILexicalBlock(scope: !15654, file: !2455, line: 999, column: 3)
!15654 = distinct !DILexicalBlock(scope: !15655, file: !2455, line: 999, column: 3)
!15655 = distinct !DILexicalBlock(scope: !15656, file: !2455, line: 998, column: 26)
!15656 = distinct !DILexicalBlock(scope: !15640, file: !2455, line: 998, column: 2)
!15657 = !DILocation(line: 999, column: 3, scope: !15654)
!15658 = !DILocation(line: 999, column: 3, scope: !15659)
!15659 = distinct !DILexicalBlock(scope: !15653, file: !2455, line: 999, column: 3)
!15660 = !DILocation(line: 1031, column: 3, scope: !14899, inlinedAt: !15661)
!15661 = distinct !DILocation(line: 48, column: 10, scope: !14903, inlinedAt: !15662)
!15662 = distinct !DILocation(line: 1000, column: 3, scope: !15663)
!15663 = distinct !DILexicalBlock(scope: !15664, file: !2455, line: 1000, column: 3)
!15664 = distinct !DILexicalBlock(scope: !15655, file: !2455, line: 1000, column: 3)
!15665 = !DILocation(line: 0, scope: !14899, inlinedAt: !15661)
!15666 = !DILocation(line: 48, column: 9, scope: !14903, inlinedAt: !15662)
!15667 = !DILocation(line: 1000, column: 3, scope: !15664)
!15668 = !DILocation(line: 1000, column: 3, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15663, file: !2455, line: 1000, column: 3)
!15670 = !DILocation(line: 1002, column: 5, scope: !15655)
!15671 = !DILocation(line: 1002, column: 20, scope: !15655)
!15672 = !DILocation(line: 1002, column: 3, scope: !15655)
!15673 = !DILocation(line: 1003, column: 3, scope: !15655)
!15674 = !DILocation(line: 0, scope: !14208, inlinedAt: !15675)
!15675 = distinct !DILocation(line: 998, column: 2, scope: !15656)
!15676 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !15675)
!15677 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15675)
!15678 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !15675)
!15679 = !DILocation(line: 0, scope: !14222, inlinedAt: !15680)
!15680 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !15675)
!15681 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !15680)
!15682 = !DILocation(line: 1011, column: 2, scope: !15637)
!15683 = !DILocation(line: 1012, column: 1, scope: !15637)
!15684 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2455, file: !2455, line: 1014, type: !14523, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !2045)
!15685 = !DILocation(line: 1028, column: 25, scope: !15684)
!15686 = !DILocation(line: 1028, column: 2, scope: !15684)
!15687 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2455, file: !2455, line: 1155, type: !15688, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15690)
!15688 = !DISubroutineType(types: !15689)
!15689 = !{!360, !2376, !2376}
!15690 = !{!15691, !15692, !15693, !15694, !15695}
!15691 = !DILocalVariable(name: "a", arg: 1, scope: !15687, file: !2455, line: 1155, type: !2376)
!15692 = !DILocalVariable(name: "b", arg: 2, scope: !15687, file: !2455, line: 1155, type: !2376)
!15693 = !DILocalVariable(name: "thread_a", scope: !15687, file: !2455, line: 1157, type: !2347)
!15694 = !DILocalVariable(name: "thread_b", scope: !15687, file: !2455, line: 1157, type: !2347)
!15695 = !DILocalVariable(name: "cmp", scope: !15687, file: !2455, line: 1158, type: !854)
!15696 = !DILocation(line: 0, scope: !15687)
!15697 = !DILocation(line: 1160, column: 13, scope: !15687)
!15698 = !DILocation(line: 1161, column: 13, scope: !15687)
!15699 = !DILocation(line: 1163, column: 8, scope: !15687)
!15700 = !DILocation(line: 1165, column: 10, scope: !15701)
!15701 = distinct !DILexicalBlock(scope: !15687, file: !2455, line: 1165, column: 6)
!15702 = !DILocation(line: 1165, column: 6, scope: !15687)
!15703 = !DILocation(line: 1167, column: 17, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15701, file: !2455, line: 1167, column: 13)
!15705 = !DILocation(line: 1167, column: 13, scope: !15701)
!15706 = !DILocation(line: 1170, column: 25, scope: !15707)
!15707 = distinct !DILexicalBlock(scope: !15704, file: !2455, line: 1169, column: 9)
!15708 = !DILocation(line: 1170, column: 52, scope: !15707)
!15709 = !DILocation(line: 1170, column: 35, scope: !15707)
!15710 = !DILocation(line: 1170, column: 3, scope: !15707)
!15711 = !DILocation(line: 0, scope: !15701)
!15712 = !DILocation(line: 1173, column: 1, scope: !15687)
!15713 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2455, file: !2455, line: 1175, type: !15714, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15729)
!15714 = !DISubroutineType(types: !15715)
!15715 = !{null, !15716, !2347}
!15716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15717, size: 32)
!15717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15718, line: 37, size: 128, elements: !15719)
!15718 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15719 = !{!15720, !15728}
!15720 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15717, file: !15718, line: 38, baseType: !15721, size: 96)
!15721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !168, line: 83, size: 96, elements: !15722)
!15722 = !{!15723, !15724, !15727}
!15723 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15721, file: !168, line: 84, baseType: !2376, size: 32)
!15724 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15721, file: !168, line: 85, baseType: !15725, size: 32, offset: 32)
!15725 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !168, line: 81, baseType: !15726)
!15726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15688, size: 32)
!15727 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15721, file: !168, line: 86, baseType: !109, size: 32, offset: 64)
!15728 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15717, file: !15718, line: 39, baseType: !109, size: 32, offset: 96)
!15729 = !{!15730, !15731, !15732, !15733, !15742}
!15730 = !DILocalVariable(name: "pq", arg: 1, scope: !15713, file: !2455, line: 1175, type: !15716)
!15731 = !DILocalVariable(name: "thread", arg: 2, scope: !15713, file: !2455, line: 1175, type: !2347)
!15732 = !DILocalVariable(name: "t", scope: !15713, file: !2455, line: 1177, type: !2347)
!15733 = !DILocalVariable(name: "__f", scope: !15734, file: !2455, line: 1190, type: !15737)
!15734 = distinct !DILexicalBlock(scope: !15735, file: !2455, line: 1190, column: 3)
!15735 = distinct !DILexicalBlock(scope: !15736, file: !2455, line: 1189, column: 27)
!15736 = distinct !DILexicalBlock(scope: !15713, file: !2455, line: 1189, column: 6)
!15737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !168, line: 155, size: 96, elements: !15738)
!15738 = !{!15739, !15740, !15741}
!15739 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15737, file: !168, line: 156, baseType: !2450, size: 32)
!15740 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15737, file: !168, line: 157, baseType: !286, size: 32, offset: 32)
!15741 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15737, file: !168, line: 158, baseType: !854, size: 32, offset: 64)
!15742 = !DILocalVariable(name: "n", scope: !15743, file: !2455, line: 1190, type: !2376)
!15743 = distinct !DILexicalBlock(scope: !15744, file: !2455, line: 1190, column: 3)
!15744 = distinct !DILexicalBlock(scope: !15734, file: !2455, line: 1190, column: 3)
!15745 = !DILocation(line: 0, scope: !15713)
!15746 = !DILocation(line: 1179, column: 2, scope: !15747)
!15747 = distinct !DILexicalBlock(scope: !15748, file: !2455, line: 1179, column: 2)
!15748 = distinct !DILexicalBlock(scope: !15713, file: !2455, line: 1179, column: 2)
!15749 = !DILocation(line: 1179, column: 2, scope: !15748)
!15750 = !DILocation(line: 1179, column: 2, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15747, file: !2455, line: 1179, column: 2)
!15752 = !DILocation(line: 1181, column: 31, scope: !15713)
!15753 = !DILocation(line: 1181, column: 45, scope: !15713)
!15754 = !DILocation(line: 1181, column: 15, scope: !15713)
!15755 = !DILocation(line: 1181, column: 25, scope: !15713)
!15756 = !DILocation(line: 1189, column: 11, scope: !15736)
!15757 = !DILocation(line: 1189, column: 7, scope: !15736)
!15758 = !DILocation(line: 1189, column: 6, scope: !15713)
!15759 = !DILocation(line: 1190, column: 3, scope: !15734)
!15760 = !DILocation(line: 1190, column: 3, scope: !15743)
!15761 = !DILocation(line: 0, scope: !15743)
!15762 = !DILocation(line: 1190, column: 3, scope: !15744)
!15763 = !DILocation(line: 1193, column: 2, scope: !15735)
!15764 = !DILocation(line: 1191, column: 42, scope: !15765)
!15765 = distinct !DILexicalBlock(scope: !15744, file: !2455, line: 1190, column: 54)
!15766 = !DILocation(line: 1191, column: 12, scope: !15765)
!15767 = !DILocation(line: 1191, column: 22, scope: !15765)
!15768 = distinct !{!15768, !15759, !15769}
!15769 = !DILocation(line: 1192, column: 3, scope: !15734)
!15770 = !DILocation(line: 1195, column: 17, scope: !15713)
!15771 = !DILocation(line: 1195, column: 37, scope: !15713)
!15772 = !DILocation(line: 1195, column: 2, scope: !15713)
!15773 = !DILocation(line: 1196, column: 1, scope: !15713)
!15774 = !DISubprogram(name: "z_rb_foreach_next", scope: !168, file: !168, line: 176, type: !15775, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2045)
!15775 = !DISubroutineType(types: !15776)
!15776 = !{!2376, !15777, !15778}
!15777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15721, size: 32)
!15778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15737, size: 32)
!15779 = !DISubprogram(name: "rb_insert", scope: !168, file: !168, line: 105, type: !15780, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2045)
!15780 = !DISubroutineType(types: !15781)
!15781 = !{null, !15777, !2376}
!15782 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2455, file: !2455, line: 1198, type: !15714, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15783)
!15783 = !{!15784, !15785}
!15784 = !DILocalVariable(name: "pq", arg: 1, scope: !15782, file: !2455, line: 1198, type: !15716)
!15785 = !DILocalVariable(name: "thread", arg: 2, scope: !15782, file: !2455, line: 1198, type: !2347)
!15786 = !DILocation(line: 0, scope: !15782)
!15787 = !DILocation(line: 1200, column: 2, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15789, file: !2455, line: 1200, column: 2)
!15789 = distinct !DILexicalBlock(scope: !15782, file: !2455, line: 1200, column: 2)
!15790 = !DILocation(line: 1200, column: 2, scope: !15789)
!15791 = !DILocation(line: 1200, column: 2, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !15788, file: !2455, line: 1200, column: 2)
!15793 = !DILocation(line: 1202, column: 17, scope: !15782)
!15794 = !DILocation(line: 1202, column: 37, scope: !15782)
!15795 = !DILocation(line: 1202, column: 2, scope: !15782)
!15796 = !DILocation(line: 1204, column: 16, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15782, file: !2455, line: 1204, column: 6)
!15798 = !DILocation(line: 1204, column: 7, scope: !15797)
!15799 = !DILocation(line: 1204, column: 6, scope: !15782)
!15800 = !DILocation(line: 1205, column: 7, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15797, file: !2455, line: 1204, column: 22)
!15802 = !DILocation(line: 1205, column: 22, scope: !15801)
!15803 = !DILocation(line: 1206, column: 2, scope: !15801)
!15804 = !DILocation(line: 1207, column: 1, scope: !15782)
!15805 = !DISubprogram(name: "rb_remove", scope: !168, file: !168, line: 110, type: !15780, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2045)
!15806 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2455, file: !2455, line: 1209, type: !15807, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15809)
!15807 = !DISubroutineType(types: !15808)
!15808 = !{!2347, !15716}
!15809 = !{!15810, !15811, !15812}
!15810 = !DILocalVariable(name: "pq", arg: 1, scope: !15806, file: !2455, line: 1209, type: !15716)
!15811 = !DILocalVariable(name: "thread", scope: !15806, file: !2455, line: 1211, type: !2347)
!15812 = !DILocalVariable(name: "n", scope: !15806, file: !2455, line: 1212, type: !2376)
!15813 = !DILocation(line: 0, scope: !15806)
!15814 = !DILocation(line: 1212, column: 37, scope: !15806)
!15815 = !DILocation(line: 1212, column: 21, scope: !15806)
!15816 = !DILocation(line: 1217, column: 2, scope: !15806)
!15817 = distinct !DISubprogram(name: "rb_get_min", scope: !168, file: !168, line: 115, type: !15818, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15820)
!15818 = !DISubroutineType(types: !15819)
!15819 = !{!2376, !15777}
!15820 = !{!15821}
!15821 = !DILocalVariable(name: "tree", arg: 1, scope: !15817, file: !168, line: 115, type: !15777)
!15822 = !DILocation(line: 0, scope: !15817)
!15823 = !DILocation(line: 117, column: 9, scope: !15817)
!15824 = !DILocation(line: 117, column: 2, scope: !15817)
!15825 = !DISubprogram(name: "z_rb_get_minmax", scope: !168, file: !168, line: 100, type: !15826, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2045)
!15826 = !DISubroutineType(types: !15827)
!15827 = !{!2376, !15777, !178}
!15828 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2455, file: !2455, line: 1246, type: !15829, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15837)
!15829 = !DISubroutineType(types: !15830)
!15830 = !{!2347, !15831}
!15831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15832, size: 32)
!15832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15718, line: 53, size: 2080, elements: !15833)
!15833 = !{!15834, !15836}
!15834 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15832, file: !15718, line: 54, baseType: !15835, size: 2048)
!15835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2383, size: 2048, elements: !224)
!15836 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15832, file: !15718, line: 55, baseType: !32, size: 32, offset: 2048)
!15837 = !{!15838, !15839, !15840, !15841}
!15838 = !DILocalVariable(name: "pq", arg: 1, scope: !15828, file: !2455, line: 1246, type: !15831)
!15839 = !DILocalVariable(name: "thread", scope: !15828, file: !2455, line: 1252, type: !2347)
!15840 = !DILocalVariable(name: "l", scope: !15828, file: !2455, line: 1253, type: !14400)
!15841 = !DILocalVariable(name: "n", scope: !15828, file: !2455, line: 1254, type: !2451)
!15842 = !DILocation(line: 0, scope: !15828)
!15843 = !DILocation(line: 1248, column: 11, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15828, file: !2455, line: 1248, column: 6)
!15845 = !DILocation(line: 1248, column: 7, scope: !15844)
!15846 = !DILocation(line: 1248, column: 6, scope: !15828)
!15847 = !DILocation(line: 1253, column: 31, scope: !15828)
!15848 = !DILocation(line: 1253, column: 20, scope: !15828)
!15849 = !DILocation(line: 1254, column: 19, scope: !15828)
!15850 = !DILocation(line: 1260, column: 1, scope: !15828)
!15851 = distinct !DISubprogram(name: "z_unpend_all", scope: !2455, file: !2455, line: 1262, type: !15852, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15854)
!15852 = !DISubroutineType(types: !15853)
!15853 = !{!109, !2378}
!15854 = !{!15855, !15856, !15857}
!15855 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15851, file: !2455, line: 1262, type: !2378)
!15856 = !DILocalVariable(name: "need_sched", scope: !15851, file: !2455, line: 1264, type: !109)
!15857 = !DILocalVariable(name: "thread", scope: !15851, file: !2455, line: 1265, type: !2347)
!15858 = !DILocation(line: 0, scope: !15851)
!15859 = !DILocation(line: 1267, column: 19, scope: !15851)
!15860 = !DILocation(line: 1267, column: 41, scope: !15851)
!15861 = !DILocation(line: 1267, column: 2, scope: !15851)
!15862 = !DILocation(line: 1268, column: 3, scope: !15863)
!15863 = distinct !DILexicalBlock(scope: !15851, file: !2455, line: 1267, column: 50)
!15864 = !DILocation(line: 1269, column: 3, scope: !15863)
!15865 = distinct !{!15865, !15861, !15866}
!15866 = !DILocation(line: 1271, column: 2, scope: !15851)
!15867 = !DILocation(line: 1273, column: 2, scope: !15851)
!15868 = distinct !DISubprogram(name: "z_waitq_head", scope: !13327, file: !13327, line: 52, type: !15399, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15869)
!15869 = !{!15870}
!15870 = !DILocalVariable(name: "w", arg: 1, scope: !15868, file: !13327, line: 52, type: !2378)
!15871 = !DILocation(line: 0, scope: !15868)
!15872 = !DILocation(line: 54, column: 52, scope: !15868)
!15873 = !DILocation(line: 54, column: 28, scope: !15868)
!15874 = !DILocation(line: 54, column: 9, scope: !15868)
!15875 = !DILocation(line: 54, column: 2, scope: !15868)
!15876 = distinct !DISubprogram(name: "init_ready_q", scope: !2455, file: !2455, line: 1276, type: !15877, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15884)
!15877 = !DISubroutineType(types: !15878)
!15878 = !{null, !15879}
!15879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15880, size: 32)
!15880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !15881)
!15881 = !{!15882, !15883}
!15882 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15880, file: !122, line: 86, baseType: !2347, size: 32)
!15883 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15880, file: !122, line: 90, baseType: !2383, size: 64, offset: 32)
!15884 = !{!15885}
!15885 = !DILocalVariable(name: "rq", arg: 1, scope: !15876, file: !2455, line: 1276, type: !15879)
!15886 = !DILocation(line: 0, scope: !15876)
!15887 = !DILocation(line: 1289, column: 22, scope: !15876)
!15888 = !DILocation(line: 1289, column: 2, scope: !15876)
!15889 = !DILocation(line: 1291, column: 1, scope: !15876)
!15890 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !15891, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15893)
!15891 = !DISubroutineType(types: !15892)
!15892 = !{null, !14400}
!15893 = !{!15894}
!15894 = !DILocalVariable(name: "list", arg: 1, scope: !15890, file: !127, line: 197, type: !14400)
!15895 = !DILocation(line: 0, scope: !15890)
!15896 = !DILocation(line: 199, column: 8, scope: !15890)
!15897 = !DILocation(line: 199, column: 13, scope: !15890)
!15898 = !DILocation(line: 200, column: 8, scope: !15890)
!15899 = !DILocation(line: 200, column: 13, scope: !15890)
!15900 = !DILocation(line: 201, column: 1, scope: !15890)
!15901 = distinct !DISubprogram(name: "z_sched_init", scope: !2455, file: !2455, line: 1293, type: !3062, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !2045)
!15902 = !DILocation(line: 1302, column: 2, scope: !15901)
!15903 = !DILocation(line: 1306, column: 2, scope: !15901)
!15904 = !DILocation(line: 1309, column: 1, scope: !15901)
!15905 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2455, file: !2455, line: 1311, type: !15906, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15909)
!15906 = !DISubroutineType(types: !15907)
!15907 = !{!109, !15908}
!15908 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !2347)
!15909 = !{!15910}
!15910 = !DILocalVariable(name: "thread", arg: 1, scope: !15905, file: !2455, line: 1311, type: !15908)
!15911 = !DILocation(line: 0, scope: !15905)
!15912 = !DILocation(line: 1313, column: 22, scope: !15905)
!15913 = !DILocation(line: 1313, column: 9, scope: !15905)
!15914 = !DILocation(line: 1313, column: 2, scope: !15905)
!15915 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2455, file: !2455, line: 1325, type: !15916, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15918)
!15916 = !DISubroutineType(types: !15917)
!15917 = !{null, !15908, !109}
!15918 = !{!15919, !15920, !15921}
!15919 = !DILocalVariable(name: "thread", arg: 1, scope: !15915, file: !2455, line: 1325, type: !15908)
!15920 = !DILocalVariable(name: "prio", arg: 2, scope: !15915, file: !2455, line: 1325, type: !109)
!15921 = !DILocalVariable(name: "th", scope: !15915, file: !2455, line: 1334, type: !2347)
!15922 = !DILocation(line: 0, scope: !15915)
!15923 = !DILocation(line: 1331, column: 2, scope: !15924)
!15924 = distinct !DILexicalBlock(scope: !15925, file: !2455, line: 1331, column: 2)
!15925 = distinct !DILexicalBlock(scope: !15926, file: !2455, line: 1331, column: 2)
!15926 = distinct !DILexicalBlock(scope: !15915, file: !2455, line: 1331, column: 2)
!15927 = !DILocation(line: 1331, column: 2, scope: !15928)
!15928 = distinct !DILexicalBlock(scope: !15924, file: !2455, line: 1331, column: 2)
!15929 = !DILocation(line: 1031, column: 3, scope: !14899, inlinedAt: !15930)
!15930 = distinct !DILocation(line: 48, column: 10, scope: !14903, inlinedAt: !15931)
!15931 = distinct !DILocation(line: 1332, column: 2, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15933, file: !2455, line: 1332, column: 2)
!15933 = distinct !DILexicalBlock(scope: !15915, file: !2455, line: 1332, column: 2)
!15934 = !DILocation(line: 0, scope: !14899, inlinedAt: !15930)
!15935 = !DILocation(line: 48, column: 9, scope: !14903, inlinedAt: !15931)
!15936 = !DILocation(line: 1332, column: 2, scope: !15933)
!15937 = !DILocation(line: 1332, column: 2, scope: !15938)
!15938 = distinct !DILexicalBlock(scope: !15932, file: !2455, line: 1332, column: 2)
!15939 = !DILocation(line: 1336, column: 2, scope: !15915)
!15940 = !DILocation(line: 1337, column: 1, scope: !15915)
!15941 = distinct !DISubprogram(name: "k_can_yield", scope: !2455, file: !2455, line: 1384, type: !7400, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !2045)
!15942 = !DILocation(line: 1386, column: 11, scope: !15941)
!15943 = !DILocation(line: 1386, column: 29, scope: !15941)
!15944 = !DILocation(line: 1386, column: 32, scope: !15941)
!15945 = !DILocation(line: 1386, column: 46, scope: !15941)
!15946 = !DILocation(line: 1387, column: 28, scope: !15941)
!15947 = !DILocation(line: 1387, column: 4, scope: !15941)
!15948 = !DILocation(line: 1386, column: 2, scope: !15941)
!15949 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !118, file: !118, line: 989, type: !7400, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !2045)
!15950 = !DILocation(line: 993, column: 10, scope: !15949)
!15951 = !DILocation(line: 993, column: 2, scope: !15949)
!15952 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2455, file: !2455, line: 1390, type: !3062, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !15953)
!15953 = !{!15954}
!15954 = !DILocalVariable(name: "key", scope: !15952, file: !2455, line: 1396, type: !14166)
!15955 = !DILocation(line: 1031, column: 3, scope: !14899, inlinedAt: !15956)
!15956 = distinct !DILocation(line: 48, column: 10, scope: !14903, inlinedAt: !15957)
!15957 = distinct !DILocation(line: 1392, column: 2, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15959, file: !2455, line: 1392, column: 2)
!15959 = distinct !DILexicalBlock(scope: !15952, file: !2455, line: 1392, column: 2)
!15960 = !DILocation(line: 0, scope: !14899, inlinedAt: !15956)
!15961 = !DILocation(line: 48, column: 9, scope: !14903, inlinedAt: !15957)
!15962 = !DILocation(line: 1392, column: 2, scope: !15959)
!15963 = !DILocation(line: 1392, column: 2, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15958, file: !2455, line: 1392, column: 2)
!15965 = !DILocation(line: 0, scope: !14174, inlinedAt: !15966)
!15966 = distinct !DILocation(line: 1396, column: 25, scope: !15952)
!15967 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !15968)
!15968 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !15966)
!15969 = !DILocation(line: 0, scope: !14183, inlinedAt: !15968)
!15970 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !15966)
!15971 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15966)
!15972 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !15966)
!15973 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !15966)
!15974 = !DILocation(line: 0, scope: !15952)
!15975 = !DILocation(line: 1400, column: 18, scope: !15976)
!15976 = distinct !DILexicalBlock(scope: !15977, file: !2455, line: 1399, column: 36)
!15977 = distinct !DILexicalBlock(scope: !15952, file: !2455, line: 1398, column: 6)
!15978 = !DILocation(line: 0, scope: !14366, inlinedAt: !15979)
!15979 = distinct !DILocation(line: 1400, column: 3, scope: !15976)
!15980 = !DILocation(line: 266, column: 15, scope: !14366, inlinedAt: !15979)
!15981 = !DILocation(line: 266, column: 28, scope: !14366, inlinedAt: !15979)
!15982 = !DILocation(line: 0, scope: !14374, inlinedAt: !15983)
!15983 = distinct !DILocation(line: 268, column: 3, scope: !14378, inlinedAt: !15979)
!15984 = !DILocation(line: 234, column: 2, scope: !14374, inlinedAt: !15983)
!15985 = !DILocation(line: 1402, column: 15, scope: !15952)
!15986 = !DILocation(line: 0, scope: !14383, inlinedAt: !15987)
!15987 = distinct !DILocation(line: 1402, column: 2, scope: !15952)
!15988 = !DILocation(line: 252, column: 15, scope: !14383, inlinedAt: !15987)
!15989 = !DILocation(line: 252, column: 28, scope: !14383, inlinedAt: !15987)
!15990 = !DILocation(line: 0, scope: !14390, inlinedAt: !15991)
!15991 = distinct !DILocation(line: 254, column: 3, scope: !14394, inlinedAt: !15987)
!15992 = !DILocation(line: 0, scope: !14397, inlinedAt: !15993)
!15993 = distinct !DILocation(line: 229, column: 2, scope: !14390, inlinedAt: !15991)
!15994 = !DILocation(line: 186, column: 2, scope: !14407, inlinedAt: !15993)
!15995 = !DILocation(line: 186, column: 2, scope: !14408, inlinedAt: !15993)
!15996 = !DILocation(line: 186, column: 2, scope: !14411, inlinedAt: !15993)
!15997 = !DILocation(line: 188, column: 2, scope: !14413, inlinedAt: !15993)
!15998 = !DILocation(line: 188, column: 2, scope: !14415, inlinedAt: !15993)
!15999 = !DILocation(line: 0, scope: !14413, inlinedAt: !15993)
!16000 = !DILocation(line: 189, column: 7, scope: !14418, inlinedAt: !15993)
!16001 = !DILocation(line: 189, column: 35, scope: !14418, inlinedAt: !15993)
!16002 = !DILocation(line: 189, column: 7, scope: !14419, inlinedAt: !15993)
!16003 = !DILocation(line: 191, column: 21, scope: !14423, inlinedAt: !15993)
!16004 = !DILocation(line: 190, column: 4, scope: !14423, inlinedAt: !15993)
!16005 = !DILocation(line: 192, column: 4, scope: !14423, inlinedAt: !15993)
!16006 = distinct !{!16006, !15997, !16007}
!16007 = !DILocation(line: 194, column: 2, scope: !14413, inlinedAt: !15993)
!16008 = !DILocation(line: 196, column: 37, scope: !14397, inlinedAt: !15993)
!16009 = !DILocation(line: 196, column: 2, scope: !14397, inlinedAt: !15993)
!16010 = !DILocation(line: 197, column: 1, scope: !14397, inlinedAt: !15993)
!16011 = !DILocation(line: 1403, column: 2, scope: !15952)
!16012 = !DILocation(line: 0, scope: !14850, inlinedAt: !16013)
!16013 = distinct !DILocation(line: 1404, column: 2, scope: !15952)
!16014 = !DILocation(line: 0, scope: !14859, inlinedAt: !16015)
!16015 = distinct !DILocation(line: 195, column: 2, scope: !14850, inlinedAt: !16013)
!16016 = !DILocation(line: 225, column: 2, scope: !14866, inlinedAt: !16015)
!16017 = !DILocation(line: 225, column: 2, scope: !14867, inlinedAt: !16015)
!16018 = !DILocation(line: 225, column: 2, scope: !14870, inlinedAt: !16015)
!16019 = !DILocation(line: 196, column: 9, scope: !14850, inlinedAt: !16013)
!16020 = !DILocation(line: 1405, column: 1, scope: !15952)
!16021 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2455, file: !2455, line: 1459, type: !16022, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16024)
!16022 = !DISubroutineType(types: !16023)
!16023 = !{!854, !15060}
!16024 = !{!16025, !16026, !16027}
!16025 = !DILocalVariable(name: "timeout", arg: 1, scope: !16021, file: !2455, line: 1459, type: !15060)
!16026 = !DILocalVariable(name: "ticks", scope: !16021, file: !2455, line: 1461, type: !103)
!16027 = !DILocalVariable(name: "ret", scope: !16021, file: !2455, line: 1480, type: !854)
!16028 = !DILocation(line: 0, scope: !16021)
!16029 = !DILocation(line: 1031, column: 3, scope: !14899, inlinedAt: !16030)
!16030 = distinct !DILocation(line: 48, column: 10, scope: !14903, inlinedAt: !16031)
!16031 = distinct !DILocation(line: 1463, column: 2, scope: !16032)
!16032 = distinct !DILexicalBlock(scope: !16033, file: !2455, line: 1463, column: 2)
!16033 = distinct !DILexicalBlock(scope: !16021, file: !2455, line: 1463, column: 2)
!16034 = !DILocation(line: 0, scope: !14899, inlinedAt: !16030)
!16035 = !DILocation(line: 48, column: 9, scope: !14903, inlinedAt: !16031)
!16036 = !DILocation(line: 1463, column: 2, scope: !16033)
!16037 = !DILocation(line: 1463, column: 2, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16032, file: !2455, line: 1463, column: 2)
!16039 = !DILocation(line: 1468, column: 6, scope: !16040)
!16040 = distinct !DILexicalBlock(scope: !16021, file: !2455, line: 1468, column: 6)
!16041 = !DILocation(line: 1468, column: 6, scope: !16021)
!16042 = !DILocation(line: 1469, column: 20, scope: !16043)
!16043 = distinct !DILexicalBlock(scope: !16040, file: !2455, line: 1468, column: 40)
!16044 = !DILocation(line: 1469, column: 3, scope: !16043)
!16045 = !DILocation(line: 1473, column: 3, scope: !16043)
!16046 = !DILocation(line: 1478, column: 10, scope: !16021)
!16047 = !DILocation(line: 1480, column: 16, scope: !16021)
!16048 = !DILocation(line: 1485, column: 1, scope: !16021)
!16049 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3204, file: !3204, line: 310, type: !16050, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16052)
!16050 = !DISubroutineType(types: !16051)
!16051 = !{null, !15908}
!16052 = !{!16053}
!16053 = !DILocalVariable(name: "thread", arg: 1, scope: !16049, file: !3204, line: 310, type: !15908)
!16054 = !DILocation(line: 0, scope: !16049)
!16055 = !DILocation(line: 319, column: 2, scope: !16056)
!16056 = distinct !DILexicalBlock(scope: !16049, file: !3204, line: 319, column: 2)
!16057 = !{i64 2152267349}
!16058 = !DILocation(line: 320, column: 2, scope: !16049)
!16059 = !DILocation(line: 321, column: 1, scope: !16049)
!16060 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2455, file: !2455, line: 1415, type: !16061, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16063)
!16061 = !DISubroutineType(types: !16062)
!16062 = !{!854, !103}
!16063 = !{!16064, !16065, !16066, !16067}
!16064 = !DILocalVariable(name: "ticks", arg: 1, scope: !16060, file: !2455, line: 1415, type: !103)
!16065 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16060, file: !2455, line: 1418, type: !110)
!16066 = !DILocalVariable(name: "timeout", scope: !16060, file: !2455, line: 1430, type: !15060)
!16067 = !DILocalVariable(name: "key", scope: !16060, file: !2455, line: 1437, type: !14166)
!16068 = !DILocation(line: 0, scope: !16060)
!16069 = !DILocation(line: 1031, column: 3, scope: !14899, inlinedAt: !16070)
!16070 = distinct !DILocation(line: 48, column: 10, scope: !14903, inlinedAt: !16071)
!16071 = distinct !DILocation(line: 1420, column: 2, scope: !16072)
!16072 = distinct !DILexicalBlock(scope: !16073, file: !2455, line: 1420, column: 2)
!16073 = distinct !DILexicalBlock(scope: !16060, file: !2455, line: 1420, column: 2)
!16074 = !DILocation(line: 0, scope: !14899, inlinedAt: !16070)
!16075 = !DILocation(line: 48, column: 9, scope: !14903, inlinedAt: !16071)
!16076 = !DILocation(line: 1420, column: 2, scope: !16073)
!16077 = !DILocation(line: 1420, column: 2, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16072, file: !2455, line: 1420, column: 2)
!16079 = !DILocation(line: 1425, column: 12, scope: !16080)
!16080 = distinct !DILexicalBlock(scope: !16060, file: !2455, line: 1425, column: 6)
!16081 = !DILocation(line: 1425, column: 6, scope: !16060)
!16082 = !DILocation(line: 1426, column: 3, scope: !16083)
!16083 = distinct !DILexicalBlock(scope: !16080, file: !2455, line: 1425, column: 18)
!16084 = !DILocation(line: 1427, column: 3, scope: !16083)
!16085 = !DILocation(line: 1431, column: 24, scope: !16086)
!16086 = distinct !DILexicalBlock(scope: !16060, file: !2455, line: 1431, column: 6)
!16087 = !DILocation(line: 1431, column: 6, scope: !16060)
!16088 = !DILocation(line: 1432, column: 35, scope: !16089)
!16089 = distinct !DILexicalBlock(scope: !16086, file: !2455, line: 1431, column: 30)
!16090 = !DILocation(line: 1432, column: 27, scope: !16089)
!16091 = !DILocation(line: 1433, column: 2, scope: !16089)
!16092 = !DILocation(line: 1434, column: 27, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !16086, file: !2455, line: 1433, column: 9)
!16094 = !DILocation(line: 0, scope: !16086)
!16095 = !DILocation(line: 0, scope: !14174, inlinedAt: !16096)
!16096 = distinct !DILocation(line: 1437, column: 25, scope: !16060)
!16097 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !16098)
!16098 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !16096)
!16099 = !DILocation(line: 0, scope: !14183, inlinedAt: !16098)
!16100 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !16096)
!16101 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !16096)
!16102 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !16096)
!16103 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !16096)
!16104 = !DILocation(line: 1440, column: 20, scope: !16060)
!16105 = !DILocation(line: 1440, column: 18, scope: !16060)
!16106 = !DILocation(line: 1442, column: 2, scope: !16060)
!16107 = !DILocation(line: 1443, column: 23, scope: !16060)
!16108 = !DILocation(line: 1443, column: 2, scope: !16060)
!16109 = !DILocation(line: 1444, column: 29, scope: !16060)
!16110 = !DILocation(line: 1444, column: 2, scope: !16060)
!16111 = !DILocation(line: 0, scope: !14850, inlinedAt: !16112)
!16112 = distinct !DILocation(line: 1446, column: 8, scope: !16060)
!16113 = !DILocation(line: 0, scope: !14859, inlinedAt: !16114)
!16114 = distinct !DILocation(line: 195, column: 2, scope: !14850, inlinedAt: !16112)
!16115 = !DILocation(line: 225, column: 2, scope: !14866, inlinedAt: !16114)
!16116 = !DILocation(line: 225, column: 2, scope: !14867, inlinedAt: !16114)
!16117 = !DILocation(line: 225, column: 2, scope: !14870, inlinedAt: !16114)
!16118 = !DILocation(line: 196, column: 9, scope: !14850, inlinedAt: !16112)
!16119 = !DILocation(line: 1448, column: 2, scope: !16120)
!16120 = distinct !DILexicalBlock(scope: !16121, file: !2455, line: 1448, column: 2)
!16121 = distinct !DILexicalBlock(scope: !16060, file: !2455, line: 1448, column: 2)
!16122 = !DILocation(line: 1448, column: 2, scope: !16121)
!16123 = !DILocation(line: 1448, column: 2, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !16120, file: !2455, line: 1448, column: 2)
!16125 = !DILocation(line: 1450, column: 10, scope: !16060)
!16126 = !DILocation(line: 1450, column: 45, scope: !16060)
!16127 = !DILocation(line: 1450, column: 43, scope: !16060)
!16128 = !DILocation(line: 1451, column: 6, scope: !16060)
!16129 = !DILocation(line: 1457, column: 1, scope: !16060)
!16130 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3245, file: !3245, line: 1103, type: !3246, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16131)
!16131 = !{!16132}
!16132 = !DILocalVariable(name: "t", arg: 1, scope: !16130, file: !3245, line: 1103, type: !111)
!16133 = !DILocation(line: 0, scope: !16130)
!16134 = !DILocation(line: 0, scope: !14234, inlinedAt: !16135)
!16135 = distinct !DILocation(line: 1106, column: 9, scope: !16130)
!16136 = !DILocation(line: 139, column: 13, scope: !16137, inlinedAt: !16135)
!16137 = distinct !DILexicalBlock(scope: !16138, file: !3245, line: 138, column: 10)
!16138 = distinct !DILexicalBlock(scope: !16139, file: !3245, line: 136, column: 7)
!16139 = distinct !DILexicalBlock(scope: !14255, file: !3245, line: 134, column: 17)
!16140 = !DILocation(line: 1106, column: 2, scope: !16130)
!16141 = distinct !DISubprogram(name: "k_yield", scope: !3204, file: !3204, line: 140, type: !3062, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !2045)
!16142 = !DILocation(line: 148, column: 2, scope: !16143)
!16143 = distinct !DILexicalBlock(scope: !16141, file: !3204, line: 148, column: 2)
!16144 = !{i64 2152266669}
!16145 = !DILocation(line: 149, column: 2, scope: !16141)
!16146 = !DILocation(line: 150, column: 1, scope: !16141)
!16147 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2455, file: !2455, line: 1495, type: !16148, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16150)
!16148 = !DISubroutineType(types: !16149)
!16149 = !{!854, !109}
!16150 = !{!16151, !16152}
!16151 = !DILocalVariable(name: "us", arg: 1, scope: !16147, file: !2455, line: 1495, type: !109)
!16152 = !DILocalVariable(name: "ticks", scope: !16147, file: !2455, line: 1497, type: !854)
!16153 = !DILocation(line: 0, scope: !16147)
!16154 = !DILocation(line: 1501, column: 31, scope: !16147)
!16155 = !DILocation(line: 1501, column: 10, scope: !16147)
!16156 = !DILocation(line: 1502, column: 23, scope: !16147)
!16157 = !DILocation(line: 1502, column: 10, scope: !16147)
!16158 = !DILocation(line: 1506, column: 31, scope: !16147)
!16159 = !DILocation(line: 1506, column: 9, scope: !16147)
!16160 = !DILocation(line: 1506, column: 2, scope: !16147)
!16161 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3245, file: !3245, line: 571, type: !3246, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16162)
!16162 = !{!16163}
!16163 = !DILocalVariable(name: "t", arg: 1, scope: !16161, file: !3245, line: 571, type: !111)
!16164 = !DILocation(line: 0, scope: !16161)
!16165 = !DILocation(line: 0, scope: !14234, inlinedAt: !16166)
!16166 = distinct !DILocation(line: 574, column: 9, scope: !16161)
!16167 = !DILocation(line: 135, column: 5, scope: !16139, inlinedAt: !16166)
!16168 = !DILocation(line: 139, column: 13, scope: !16137, inlinedAt: !16166)
!16169 = !DILocation(line: 574, column: 2, scope: !16161)
!16170 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3245, file: !3245, line: 1187, type: !3246, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16171)
!16171 = !{!16172}
!16172 = !DILocalVariable(name: "t", arg: 1, scope: !16170, file: !3245, line: 1187, type: !111)
!16173 = !DILocation(line: 0, scope: !16170)
!16174 = !DILocation(line: 0, scope: !14234, inlinedAt: !16175)
!16175 = distinct !DILocation(line: 1190, column: 9, scope: !16170)
!16176 = !DILocation(line: 145, column: 13, scope: !16177, inlinedAt: !16175)
!16177 = distinct !DILexicalBlock(scope: !14252, file: !3245, line: 144, column: 10)
!16178 = !DILocation(line: 1190, column: 2, scope: !16170)
!16179 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2455, file: !2455, line: 1517, type: !16050, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16180)
!16180 = !{!16181}
!16181 = !DILocalVariable(name: "thread", arg: 1, scope: !16179, file: !2455, line: 1517, type: !15908)
!16182 = !DILocation(line: 0, scope: !16179)
!16183 = !DILocation(line: 1521, column: 6, scope: !16184)
!16184 = distinct !DILexicalBlock(scope: !16179, file: !2455, line: 1521, column: 6)
!16185 = !DILocation(line: 1521, column: 6, scope: !16179)
!16186 = !DILocation(line: 1525, column: 6, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16179, file: !2455, line: 1525, column: 6)
!16188 = !DILocation(line: 1525, column: 37, scope: !16187)
!16189 = !DILocation(line: 1525, column: 6, scope: !16179)
!16190 = !DILocation(line: 1527, column: 20, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16192, file: !2455, line: 1527, column: 7)
!16192 = distinct !DILexicalBlock(scope: !16187, file: !2455, line: 1525, column: 42)
!16193 = !DILocation(line: 1527, column: 33, scope: !16191)
!16194 = !DILocation(line: 1527, column: 7, scope: !16192)
!16195 = !DILocation(line: 1532, column: 2, scope: !16179)
!16196 = !DILocation(line: 1533, column: 2, scope: !16179)
!16197 = !DILocation(line: 1031, column: 3, scope: !14899, inlinedAt: !16198)
!16198 = distinct !DILocation(line: 48, column: 10, scope: !14903, inlinedAt: !16199)
!16199 = distinct !DILocation(line: 1537, column: 7, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16179, file: !2455, line: 1537, column: 6)
!16201 = !DILocation(line: 0, scope: !14899, inlinedAt: !16198)
!16202 = !DILocation(line: 48, column: 9, scope: !14903, inlinedAt: !16199)
!16203 = !DILocation(line: 1537, column: 6, scope: !16179)
!16204 = !DILocation(line: 1538, column: 3, scope: !16205)
!16205 = distinct !DILexicalBlock(scope: !16200, file: !2455, line: 1537, column: 25)
!16206 = !DILocation(line: 1539, column: 2, scope: !16205)
!16207 = !DILocation(line: 1540, column: 1, scope: !16179)
!16208 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12966, file: !12966, line: 101, type: !14315, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16209)
!16209 = !{!16210}
!16210 = !DILocalVariable(name: "thread", arg: 1, scope: !16208, file: !12966, line: 101, type: !2347)
!16211 = !DILocation(line: 0, scope: !16208)
!16212 = !DILocation(line: 103, column: 23, scope: !16208)
!16213 = !DILocation(line: 103, column: 36, scope: !16208)
!16214 = !DILocation(line: 103, column: 55, scope: !16208)
!16215 = !DILocation(line: 103, column: 2, scope: !16208)
!16216 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2455, file: !2455, line: 1567, type: !16217, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16219)
!16217 = !DISubroutineType(types: !16218)
!16218 = !{!15908}
!16219 = !{!16220}
!16220 = !DILocalVariable(name: "ret", scope: !16216, file: !2455, line: 1577, type: !15908)
!16221 = !DILocation(line: 1577, column: 30, scope: !16216)
!16222 = !DILocation(line: 0, scope: !16216)
!16223 = !DILocation(line: 1582, column: 2, scope: !16216)
!16224 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2455, file: !2455, line: 1593, type: !7703, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !2045)
!16225 = !DILocation(line: 1031, column: 3, scope: !14899, inlinedAt: !16226)
!16226 = distinct !DILocation(line: 48, column: 10, scope: !14903, inlinedAt: !16227)
!16227 = distinct !DILocation(line: 1595, column: 10, scope: !16224)
!16228 = !DILocation(line: 0, scope: !14899, inlinedAt: !16226)
!16229 = !DILocation(line: 48, column: 9, scope: !14903, inlinedAt: !16227)
!16230 = !DILocation(line: 1595, column: 27, scope: !16224)
!16231 = !DILocation(line: 1595, column: 41, scope: !16224)
!16232 = !DILocation(line: 1595, column: 30, scope: !16224)
!16233 = !DILocation(line: 1595, column: 2, scope: !16224)
!16234 = distinct !DISubprogram(name: "z_thread_abort", scope: !2455, file: !2455, line: 1725, type: !14132, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16235)
!16235 = !{!16236, !16237}
!16236 = !DILocalVariable(name: "thread", arg: 1, scope: !16234, file: !2455, line: 1725, type: !2347)
!16237 = !DILocalVariable(name: "key", scope: !16234, file: !2455, line: 1727, type: !14166)
!16238 = !DILocation(line: 0, scope: !16234)
!16239 = !DILocation(line: 0, scope: !14174, inlinedAt: !16240)
!16240 = distinct !DILocation(line: 1727, column: 25, scope: !16234)
!16241 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !16242)
!16242 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !16240)
!16243 = !DILocation(line: 0, scope: !14183, inlinedAt: !16242)
!16244 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !16240)
!16245 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !16240)
!16246 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !16240)
!16247 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !16240)
!16248 = !DILocation(line: 1729, column: 20, scope: !16249)
!16249 = distinct !DILexicalBlock(scope: !16234, file: !2455, line: 1729, column: 6)
!16250 = !DILocation(line: 1729, column: 33, scope: !16249)
!16251 = !DILocation(line: 1729, column: 48, scope: !16249)
!16252 = !DILocation(line: 1729, column: 6, scope: !16234)
!16253 = !DILocation(line: 0, scope: !14208, inlinedAt: !16254)
!16254 = distinct !DILocation(line: 1730, column: 3, scope: !16255)
!16255 = distinct !DILexicalBlock(scope: !16249, file: !2455, line: 1729, column: 54)
!16256 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !16254)
!16257 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !16254)
!16258 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !16254)
!16259 = !DILocation(line: 0, scope: !14222, inlinedAt: !16260)
!16260 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !16254)
!16261 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !16260)
!16262 = !DILocation(line: 1731, column: 3, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !16264, file: !2455, line: 1731, column: 3)
!16264 = distinct !DILexicalBlock(scope: !16265, file: !2455, line: 1731, column: 3)
!16265 = distinct !DILexicalBlock(scope: !16255, file: !2455, line: 1731, column: 3)
!16266 = !DILocation(line: 1736, column: 20, scope: !16267)
!16267 = distinct !DILexicalBlock(scope: !16234, file: !2455, line: 1736, column: 6)
!16268 = !DILocation(line: 1736, column: 33, scope: !16267)
!16269 = !DILocation(line: 1736, column: 49, scope: !16267)
!16270 = !DILocation(line: 1736, column: 6, scope: !16234)
!16271 = !DILocation(line: 0, scope: !14208, inlinedAt: !16272)
!16272 = distinct !DILocation(line: 1737, column: 3, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16267, file: !2455, line: 1736, column: 56)
!16274 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !16272)
!16275 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !16272)
!16276 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !16272)
!16277 = !DILocation(line: 0, scope: !14222, inlinedAt: !16278)
!16278 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !16272)
!16279 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !16278)
!16280 = !DILocation(line: 1738, column: 3, scope: !16273)
!16281 = !DILocation(line: 1775, column: 2, scope: !16234)
!16282 = !DILocation(line: 1776, column: 16, scope: !16283)
!16283 = distinct !DILexicalBlock(scope: !16234, file: !2455, line: 1776, column: 6)
!16284 = !DILocation(line: 1776, column: 13, scope: !16283)
!16285 = !DILocation(line: 1776, column: 25, scope: !16283)
!16286 = !DILocation(line: 1031, column: 3, scope: !14899, inlinedAt: !16287)
!16287 = distinct !DILocation(line: 48, column: 10, scope: !14903, inlinedAt: !16288)
!16288 = distinct !DILocation(line: 1776, column: 29, scope: !16283)
!16289 = !DILocation(line: 0, scope: !14899, inlinedAt: !16287)
!16290 = !DILocation(line: 48, column: 9, scope: !14903, inlinedAt: !16288)
!16291 = !DILocation(line: 1776, column: 6, scope: !16234)
!16292 = !DILocation(line: 0, scope: !14850, inlinedAt: !16293)
!16293 = distinct !DILocation(line: 1777, column: 3, scope: !16294)
!16294 = distinct !DILexicalBlock(scope: !16283, file: !2455, line: 1776, column: 47)
!16295 = !DILocation(line: 0, scope: !14859, inlinedAt: !16296)
!16296 = distinct !DILocation(line: 195, column: 2, scope: !14850, inlinedAt: !16293)
!16297 = !DILocation(line: 225, column: 2, scope: !14866, inlinedAt: !16296)
!16298 = !DILocation(line: 225, column: 2, scope: !14867, inlinedAt: !16296)
!16299 = !DILocation(line: 225, column: 2, scope: !14870, inlinedAt: !16296)
!16300 = !DILocation(line: 196, column: 9, scope: !14850, inlinedAt: !16293)
!16301 = !DILocation(line: 1778, column: 3, scope: !16302)
!16302 = distinct !DILexicalBlock(scope: !16303, file: !2455, line: 1778, column: 3)
!16303 = distinct !DILexicalBlock(scope: !16304, file: !2455, line: 1778, column: 3)
!16304 = distinct !DILexicalBlock(scope: !16294, file: !2455, line: 1778, column: 3)
!16305 = !DILocation(line: 0, scope: !14208, inlinedAt: !16306)
!16306 = distinct !DILocation(line: 1780, column: 2, scope: !16234)
!16307 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !16306)
!16308 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !16306)
!16309 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !16306)
!16310 = !DILocation(line: 0, scope: !14222, inlinedAt: !16311)
!16311 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !16306)
!16312 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !16311)
!16313 = !DILocation(line: 1781, column: 1, scope: !16234)
!16314 = distinct !DISubprogram(name: "end_thread", scope: !2455, file: !2455, line: 1690, type: !14132, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16315)
!16315 = !{!16316}
!16316 = !DILocalVariable(name: "thread", arg: 1, scope: !16314, file: !2455, line: 1690, type: !2347)
!16317 = !DILocation(line: 0, scope: !16314)
!16318 = !DILocation(line: 1695, column: 20, scope: !16319)
!16319 = distinct !DILexicalBlock(scope: !16314, file: !2455, line: 1695, column: 6)
!16320 = !DILocation(line: 1695, column: 33, scope: !16319)
!16321 = !DILocation(line: 1695, column: 49, scope: !16319)
!16322 = !DILocation(line: 1695, column: 6, scope: !16314)
!16323 = !DILocation(line: 1697, column: 29, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16319, file: !2455, line: 1695, column: 56)
!16325 = !DILocation(line: 1698, column: 7, scope: !16326)
!16326 = distinct !DILexicalBlock(scope: !16324, file: !2455, line: 1698, column: 7)
!16327 = !DILocation(line: 1698, column: 7, scope: !16324)
!16328 = !DILocation(line: 0, scope: !14366, inlinedAt: !16329)
!16329 = distinct !DILocation(line: 1699, column: 4, scope: !16330)
!16330 = distinct !DILexicalBlock(scope: !16326, file: !2455, line: 1698, column: 35)
!16331 = !DILocation(line: 266, column: 28, scope: !14366, inlinedAt: !16329)
!16332 = !DILocation(line: 0, scope: !14374, inlinedAt: !16333)
!16333 = distinct !DILocation(line: 268, column: 3, scope: !14378, inlinedAt: !16329)
!16334 = !DILocation(line: 234, column: 2, scope: !14374, inlinedAt: !16333)
!16335 = !DILocation(line: 1700, column: 3, scope: !16330)
!16336 = !DILocation(line: 1701, column: 20, scope: !16337)
!16337 = distinct !DILexicalBlock(scope: !16324, file: !2455, line: 1701, column: 7)
!16338 = !DILocation(line: 1701, column: 30, scope: !16337)
!16339 = !DILocation(line: 1701, column: 7, scope: !16324)
!16340 = !DILocation(line: 1702, column: 4, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16337, file: !2455, line: 1701, column: 39)
!16342 = !DILocation(line: 1703, column: 3, scope: !16341)
!16343 = !DILocation(line: 1704, column: 9, scope: !16324)
!16344 = !DILocation(line: 1705, column: 23, scope: !16324)
!16345 = !DILocation(line: 1705, column: 3, scope: !16324)
!16346 = !DILocation(line: 1706, column: 3, scope: !16324)
!16347 = !DILocation(line: 1722, column: 2, scope: !16324)
!16348 = !DILocation(line: 1723, column: 1, scope: !16314)
!16349 = distinct !DISubprogram(name: "unpend_all", scope: !2455, file: !2455, line: 1674, type: !16350, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16352)
!16350 = !DISubroutineType(types: !16351)
!16351 = !{null, !2378}
!16352 = !{!16353, !16354}
!16353 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16349, file: !2455, line: 1674, type: !2378)
!16354 = !DILocalVariable(name: "thread", scope: !16349, file: !2455, line: 1676, type: !2347)
!16355 = !DILocation(line: 0, scope: !16349)
!16356 = !DILocation(line: 1678, column: 19, scope: !16349)
!16357 = !DILocation(line: 1678, column: 41, scope: !16349)
!16358 = !DILocation(line: 1678, column: 2, scope: !16349)
!16359 = !DILocation(line: 1679, column: 3, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16349, file: !2455, line: 1678, column: 50)
!16361 = !DILocation(line: 1680, column: 9, scope: !16360)
!16362 = !DILocalVariable(name: "thread", arg: 1, scope: !16363, file: !12986, line: 65, type: !2347)
!16363 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12986, file: !12986, line: 65, type: !16364, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16366)
!16364 = !DISubroutineType(types: !16365)
!16365 = !{null, !2347, !32}
!16366 = !{!16362, !16367}
!16367 = !DILocalVariable(name: "value", arg: 2, scope: !16363, file: !12986, line: 65, type: !32)
!16368 = !DILocation(line: 0, scope: !16363, inlinedAt: !16369)
!16369 = distinct !DILocation(line: 1681, column: 3, scope: !16360)
!16370 = !DILocation(line: 67, column: 15, scope: !16363, inlinedAt: !16369)
!16371 = !DILocation(line: 67, column: 33, scope: !16363, inlinedAt: !16369)
!16372 = !DILocation(line: 1682, column: 3, scope: !16360)
!16373 = distinct !{!16373, !16358, !16374}
!16374 = !DILocation(line: 1683, column: 2, scope: !16349)
!16375 = !DILocation(line: 1684, column: 1, scope: !16349)
!16376 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2455, file: !2455, line: 1794, type: !16377, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16379)
!16377 = !DISubroutineType(types: !16378)
!16378 = !{!109, !2347, !15060}
!16379 = !{!16380, !16381, !16382, !16383}
!16380 = !DILocalVariable(name: "thread", arg: 1, scope: !16376, file: !2455, line: 1794, type: !2347)
!16381 = !DILocalVariable(name: "timeout", arg: 2, scope: !16376, file: !2455, line: 1794, type: !15060)
!16382 = !DILocalVariable(name: "key", scope: !16376, file: !2455, line: 1796, type: !14166)
!16383 = !DILocalVariable(name: "ret", scope: !16376, file: !2455, line: 1797, type: !109)
!16384 = !DILocation(line: 0, scope: !16376)
!16385 = !DILocation(line: 0, scope: !14174, inlinedAt: !16386)
!16386 = distinct !DILocation(line: 1796, column: 25, scope: !16376)
!16387 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !16388)
!16388 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !16386)
!16389 = !DILocation(line: 0, scope: !14183, inlinedAt: !16388)
!16390 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !16386)
!16391 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !16386)
!16392 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !16386)
!16393 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !16386)
!16394 = !DILocation(line: 1801, column: 20, scope: !16395)
!16395 = distinct !DILexicalBlock(scope: !16376, file: !2455, line: 1801, column: 6)
!16396 = !DILocation(line: 1801, column: 33, scope: !16395)
!16397 = !DILocation(line: 1801, column: 49, scope: !16395)
!16398 = !DILocation(line: 1801, column: 6, scope: !16376)
!16399 = !DILocation(line: 1803, column: 13, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16395, file: !2455, line: 1803, column: 13)
!16401 = !DILocation(line: 1803, column: 13, scope: !16395)
!16402 = !DILocation(line: 1805, column: 24, scope: !16403)
!16403 = distinct !DILexicalBlock(scope: !16400, file: !2455, line: 1805, column: 13)
!16404 = !DILocation(line: 1805, column: 21, scope: !16403)
!16405 = !DILocation(line: 1805, column: 34, scope: !16403)
!16406 = !DILocation(line: 1806, column: 20, scope: !16403)
!16407 = !DILocation(line: 1806, column: 44, scope: !16403)
!16408 = !DILocation(line: 1806, column: 30, scope: !16403)
!16409 = !DILocation(line: 1805, column: 13, scope: !16400)
!16410 = !DILocation(line: 1031, column: 3, scope: !14899, inlinedAt: !16411)
!16411 = distinct !DILocation(line: 48, column: 10, scope: !14903, inlinedAt: !16412)
!16412 = distinct !DILocation(line: 1809, column: 3, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16414, file: !2455, line: 1809, column: 3)
!16414 = distinct !DILexicalBlock(scope: !16415, file: !2455, line: 1809, column: 3)
!16415 = distinct !DILexicalBlock(scope: !16403, file: !2455, line: 1808, column: 9)
!16416 = !DILocation(line: 0, scope: !14899, inlinedAt: !16411)
!16417 = !DILocation(line: 48, column: 9, scope: !14903, inlinedAt: !16412)
!16418 = !DILocation(line: 1809, column: 3, scope: !16414)
!16419 = !DILocation(line: 1809, column: 3, scope: !16420)
!16420 = distinct !DILexicalBlock(scope: !16413, file: !2455, line: 1809, column: 3)
!16421 = !DILocation(line: 1810, column: 23, scope: !16415)
!16422 = !DILocation(line: 1810, column: 42, scope: !16415)
!16423 = !DILocation(line: 1810, column: 3, scope: !16415)
!16424 = !DILocation(line: 1811, column: 22, scope: !16415)
!16425 = !DILocation(line: 1811, column: 3, scope: !16415)
!16426 = !DILocation(line: 0, scope: !14850, inlinedAt: !16427)
!16427 = distinct !DILocation(line: 1814, column: 9, scope: !16415)
!16428 = !DILocation(line: 0, scope: !14859, inlinedAt: !16429)
!16429 = distinct !DILocation(line: 195, column: 2, scope: !14850, inlinedAt: !16427)
!16430 = !DILocation(line: 225, column: 2, scope: !14866, inlinedAt: !16429)
!16431 = !DILocation(line: 225, column: 2, scope: !14867, inlinedAt: !16429)
!16432 = !DILocation(line: 225, column: 2, scope: !14870, inlinedAt: !16429)
!16433 = !DILocation(line: 196, column: 9, scope: !14850, inlinedAt: !16427)
!16434 = !DILocation(line: 1817, column: 3, scope: !16415)
!16435 = !DILocation(line: 0, scope: !16395)
!16436 = !DILocation(line: 0, scope: !14208, inlinedAt: !16437)
!16437 = distinct !DILocation(line: 1822, column: 2, scope: !16376)
!16438 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !16437)
!16439 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !16437)
!16440 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !16437)
!16441 = !DILocation(line: 0, scope: !14222, inlinedAt: !16442)
!16442 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !16437)
!16443 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !16442)
!16444 = !DILocation(line: 1823, column: 2, scope: !16376)
!16445 = !DILocation(line: 1824, column: 1, scope: !16376)
!16446 = distinct !DISubprogram(name: "z_sched_wake", scope: !2455, file: !2455, line: 1882, type: !16447, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16449)
!16447 = !DISubroutineType(types: !16448)
!16448 = !{!360, !2378, !109, !107}
!16449 = !{!16450, !16451, !16452, !16453, !16454, !16455, !16457}
!16450 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16446, file: !2455, line: 1882, type: !2378)
!16451 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16446, file: !2455, line: 1882, type: !109)
!16452 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16446, file: !2455, line: 1882, type: !107)
!16453 = !DILocalVariable(name: "thread", scope: !16446, file: !2455, line: 1884, type: !2347)
!16454 = !DILocalVariable(name: "ret", scope: !16446, file: !2455, line: 1885, type: !360)
!16455 = !DILocalVariable(name: "__i", scope: !16456, file: !2455, line: 1887, type: !14166)
!16456 = distinct !DILexicalBlock(scope: !16446, file: !2455, line: 1887, column: 2)
!16457 = !DILocalVariable(name: "__key", scope: !16456, file: !2455, line: 1887, type: !14166)
!16458 = !DILocation(line: 0, scope: !16446)
!16459 = !DILocation(line: 0, scope: !16456)
!16460 = !DILocation(line: 0, scope: !14174, inlinedAt: !16461)
!16461 = distinct !DILocation(line: 1887, column: 2, scope: !16456)
!16462 = !DILocation(line: 55, column: 2, scope: !14183, inlinedAt: !16463)
!16463 = distinct !DILocation(line: 145, column: 10, scope: !14174, inlinedAt: !16461)
!16464 = !DILocation(line: 0, scope: !14183, inlinedAt: !16463)
!16465 = !DILocation(line: 148, column: 2, scope: !14191, inlinedAt: !16461)
!16466 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !16461)
!16467 = !DILocation(line: 148, column: 2, scope: !14195, inlinedAt: !16461)
!16468 = !DILocation(line: 160, column: 2, scope: !14174, inlinedAt: !16461)
!16469 = !DILocation(line: 1888, column: 12, scope: !16470)
!16470 = distinct !DILexicalBlock(scope: !16471, file: !2455, line: 1887, column: 26)
!16471 = distinct !DILexicalBlock(scope: !16456, file: !2455, line: 1887, column: 2)
!16472 = !DILocation(line: 1890, column: 14, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16470, file: !2455, line: 1890, column: 7)
!16474 = !DILocation(line: 1890, column: 7, scope: !16470)
!16475 = !DILocalVariable(name: "thread", arg: 1, scope: !16476, file: !16477, line: 134, type: !2347)
!16476 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16477, file: !16477, line: 134, type: !16478, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16480)
!16477 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16478 = !DISubroutineType(types: !16479)
!16479 = !{null, !2347, !32, !107}
!16480 = !{!16475, !16481, !16482}
!16481 = !DILocalVariable(name: "value", arg: 2, scope: !16476, file: !16477, line: 135, type: !32)
!16482 = !DILocalVariable(name: "data", arg: 3, scope: !16476, file: !16477, line: 136, type: !107)
!16483 = !DILocation(line: 0, scope: !16476, inlinedAt: !16484)
!16484 = distinct !DILocation(line: 1891, column: 4, scope: !16485)
!16485 = distinct !DILexicalBlock(scope: !16473, file: !2455, line: 1890, column: 23)
!16486 = !DILocation(line: 0, scope: !16363, inlinedAt: !16487)
!16487 = distinct !DILocation(line: 138, column: 2, scope: !16476, inlinedAt: !16484)
!16488 = !DILocation(line: 67, column: 15, scope: !16363, inlinedAt: !16487)
!16489 = !DILocation(line: 67, column: 33, scope: !16363, inlinedAt: !16487)
!16490 = !DILocation(line: 139, column: 15, scope: !16476, inlinedAt: !16484)
!16491 = !DILocation(line: 139, column: 25, scope: !16476, inlinedAt: !16484)
!16492 = !DILocation(line: 1894, column: 4, scope: !16485)
!16493 = !DILocation(line: 1895, column: 10, scope: !16485)
!16494 = !DILocation(line: 1896, column: 4, scope: !16485)
!16495 = !DILocation(line: 1898, column: 3, scope: !16485)
!16496 = !DILocation(line: 0, scope: !14208, inlinedAt: !16497)
!16497 = distinct !DILocation(line: 1887, column: 2, scope: !16471)
!16498 = !DILocation(line: 194, column: 2, scope: !14216, inlinedAt: !16497)
!16499 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !16497)
!16500 = !DILocation(line: 194, column: 2, scope: !14220, inlinedAt: !16497)
!16501 = !DILocation(line: 0, scope: !14222, inlinedAt: !16502)
!16502 = distinct !DILocation(line: 215, column: 2, scope: !14208, inlinedAt: !16497)
!16503 = !DILocation(line: 95, column: 2, scope: !14222, inlinedAt: !16502)
!16504 = !DILocation(line: 1901, column: 2, scope: !16446)
!16505 = distinct !DISubprogram(name: "z_sched_wait", scope: !2455, file: !2455, line: 1904, type: !16506, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !16509)
!16506 = !DISubroutineType(types: !16507)
!16507 = !{!109, !14177, !14166, !2378, !15060, !16508}
!16508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!16509 = !{!16510, !16511, !16512, !16513, !16514, !16515}
!16510 = !DILocalVariable(name: "lock", arg: 1, scope: !16505, file: !2455, line: 1904, type: !14177)
!16511 = !DILocalVariable(name: "key", arg: 2, scope: !16505, file: !2455, line: 1904, type: !14166)
!16512 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16505, file: !2455, line: 1905, type: !2378)
!16513 = !DILocalVariable(name: "timeout", arg: 4, scope: !16505, file: !2455, line: 1905, type: !15060)
!16514 = !DILocalVariable(name: "data", arg: 5, scope: !16505, file: !2455, line: 1905, type: !16508)
!16515 = !DILocalVariable(name: "ret", scope: !16505, file: !2455, line: 1907, type: !109)
!16516 = !DILocation(line: 0, scope: !16505)
!16517 = !DILocation(line: 1907, column: 12, scope: !16505)
!16518 = !DILocation(line: 1909, column: 11, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16505, file: !2455, line: 1909, column: 6)
!16520 = !DILocation(line: 1909, column: 6, scope: !16505)
!16521 = !DILocation(line: 1910, column: 11, scope: !16522)
!16522 = distinct !DILexicalBlock(scope: !16519, file: !2455, line: 1909, column: 20)
!16523 = !DILocation(line: 1910, column: 26, scope: !16522)
!16524 = !DILocation(line: 1910, column: 9, scope: !16522)
!16525 = !DILocation(line: 1911, column: 2, scope: !16522)
!16526 = !DILocation(line: 1912, column: 2, scope: !16505)
!16527 = distinct !DISubprogram(name: "z_impl_k_condvar_init", scope: !2481, file: !2481, line: 16, type: !16528, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !16539)
!16528 = !DISubroutineType(types: !16529)
!16529 = !{!109, !16530}
!16530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16531, size: 32)
!16531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !16532)
!16532 = !{!16533}
!16533 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16531, file: !118, line: 2829, baseType: !16534, size: 64)
!16534 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !16535)
!16535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !16536)
!16536 = !{!16537}
!16537 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16535, file: !122, line: 232, baseType: !16538, size: 64)
!16538 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2467)
!16539 = !{!16540}
!16540 = !DILocalVariable(name: "condvar", arg: 1, scope: !16527, file: !2481, line: 16, type: !16530)
!16541 = !DILocation(line: 0, scope: !16527)
!16542 = !DILocation(line: 18, column: 25, scope: !16527)
!16543 = !DILocation(line: 18, column: 2, scope: !16527)
!16544 = !DILocation(line: 23, column: 2, scope: !16527)
!16545 = distinct !DISubprogram(name: "z_waitq_init", scope: !13327, file: !13327, line: 47, type: !16546, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !16549)
!16546 = !DISubroutineType(types: !16547)
!16547 = !{null, !16548}
!16548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16534, size: 32)
!16549 = !{!16550}
!16550 = !DILocalVariable(name: "w", arg: 1, scope: !16545, file: !13327, line: 47, type: !16548)
!16551 = !DILocation(line: 0, scope: !16545)
!16552 = !DILocation(line: 49, column: 21, scope: !16545)
!16553 = !DILocation(line: 49, column: 2, scope: !16545)
!16554 = !DILocation(line: 50, column: 1, scope: !16545)
!16555 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !16556, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !16559)
!16556 = !DISubroutineType(types: !16557)
!16557 = !{null, !16558}
!16558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16538, size: 32)
!16559 = !{!16560}
!16560 = !DILocalVariable(name: "list", arg: 1, scope: !16555, file: !127, line: 197, type: !16558)
!16561 = !DILocation(line: 0, scope: !16555)
!16562 = !DILocation(line: 199, column: 8, scope: !16555)
!16563 = !DILocation(line: 199, column: 13, scope: !16555)
!16564 = !DILocation(line: 200, column: 8, scope: !16555)
!16565 = !DILocation(line: 200, column: 13, scope: !16555)
!16566 = !DILocation(line: 201, column: 1, scope: !16555)
!16567 = distinct !DISubprogram(name: "z_impl_k_condvar_signal", scope: !2481, file: !2481, line: 35, type: !16528, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !16568)
!16568 = !{!16569, !16570, !16575}
!16569 = !DILocalVariable(name: "condvar", arg: 1, scope: !16567, file: !2481, line: 35, type: !16530)
!16570 = !DILocalVariable(name: "key", scope: !16567, file: !2481, line: 37, type: !16571)
!16571 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !16572)
!16572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !16573)
!16573 = !{!16574}
!16574 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16572, file: !251, line: 33, baseType: !109, size: 32)
!16575 = !DILocalVariable(name: "thread", scope: !16567, file: !2481, line: 41, type: !16576)
!16576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16577, size: 32)
!16577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !16578)
!16578 = !{!16579, !16617, !16629, !16630, !16631, !16632, !16633, !16639, !16651}
!16579 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !16577, file: !156, line: 247, baseType: !16580, size: 384)
!16580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !16581)
!16581 = !{!16582, !16592, !16593, !16594, !16595, !16604, !16605, !16606}
!16582 = !DIDerivedType(tag: DW_TAG_member, scope: !16580, file: !156, line: 60, baseType: !16583, size: 64)
!16583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16580, file: !156, line: 60, size: 64, elements: !16584)
!16584 = !{!16585, !16586}
!16585 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !16583, file: !156, line: 61, baseType: !2466, size: 64)
!16586 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !16583, file: !156, line: 62, baseType: !16587, size: 64)
!16587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !16588)
!16588 = !{!16589}
!16589 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !16587, file: !168, line: 50, baseType: !16590, size: 64)
!16590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16591, size: 64, elements: !173)
!16591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16587, size: 32)
!16592 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !16580, file: !156, line: 68, baseType: !16548, size: 32, offset: 64)
!16593 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !16580, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!16594 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !16580, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!16595 = !DIDerivedType(tag: DW_TAG_member, scope: !16580, file: !156, line: 90, baseType: !16596, size: 16, offset: 112)
!16596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16580, file: !156, line: 90, size: 16, elements: !16597)
!16597 = !{!16598, !16603}
!16598 = !DIDerivedType(tag: DW_TAG_member, scope: !16596, file: !156, line: 91, baseType: !16599, size: 16)
!16599 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16596, file: !156, line: 91, size: 16, elements: !16600)
!16600 = !{!16601, !16602}
!16601 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !16599, file: !156, line: 96, baseType: !188, size: 8)
!16602 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !16599, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!16603 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !16596, file: !156, line: 100, baseType: !192, size: 16)
!16604 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !16580, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!16605 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !16580, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!16606 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !16580, file: !156, line: 131, baseType: !16607, size: 192, offset: 192)
!16607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !16608)
!16608 = !{!16609, !16610, !16616}
!16609 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !16607, file: !122, line: 245, baseType: !2466, size: 64)
!16610 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !16607, file: !122, line: 246, baseType: !16611, size: 32, offset: 64)
!16611 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !16612)
!16612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16613, size: 32)
!16613 = !DISubroutineType(types: !16614)
!16614 = !{null, !16615}
!16615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16607, size: 32)
!16616 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !16607, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!16617 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !16577, file: !156, line: 250, baseType: !16618, size: 288, offset: 384)
!16618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !16619)
!16619 = !{!16620, !16621, !16622, !16623, !16624, !16625, !16626, !16627, !16628}
!16620 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !16618, file: !209, line: 26, baseType: !110, size: 32)
!16621 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !16618, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!16622 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !16618, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!16623 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !16618, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!16624 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !16618, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!16625 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !16618, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!16626 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !16618, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!16627 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !16618, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!16628 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !16618, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!16629 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !16577, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!16630 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !16577, file: !156, line: 256, baseType: !16534, size: 64, offset: 704)
!16631 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !16577, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!16632 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !16577, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!16633 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !16577, file: !156, line: 300, baseType: !16634, size: 96, offset: 1056)
!16634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !16635)
!16635 = !{!16636, !16637, !16638}
!16636 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !16634, file: !156, line: 153, baseType: !22, size: 32)
!16637 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16634, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!16638 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !16634, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!16639 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !16577, file: !156, line: 325, baseType: !16640, size: 32, offset: 1152)
!16640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16641, size: 32)
!16641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !16642)
!16642 = !{!16643, !16649, !16650}
!16643 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16641, file: !118, line: 5074, baseType: !16644, size: 96)
!16644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !16645)
!16645 = !{!16646, !16647, !16648}
!16646 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16644, file: !241, line: 57, baseType: !244, size: 32)
!16647 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16644, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!16648 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16644, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!16649 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16641, file: !118, line: 5075, baseType: !16534, size: 64, offset: 96)
!16650 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16641, file: !118, line: 5076, baseType: !2482, size: 32, offset: 160)
!16651 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !16577, file: !156, line: 343, baseType: !16652, size: 64, offset: 1184)
!16652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !16653)
!16653 = !{!16654, !16655}
!16654 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !16652, file: !209, line: 63, baseType: !110, size: 32)
!16655 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !16652, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!16656 = !DILocation(line: 0, scope: !16567)
!16657 = !DILocalVariable(name: "l", arg: 1, scope: !16658, file: !251, line: 136, type: !16661)
!16658 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !16659, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !16662)
!16659 = !DISubroutineType(types: !16660)
!16660 = !{!16571, !16661}
!16661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 32)
!16662 = !{!16657, !16663}
!16663 = !DILocalVariable(name: "k", scope: !16658, file: !251, line: 139, type: !16571)
!16664 = !DILocation(line: 0, scope: !16658, inlinedAt: !16665)
!16665 = distinct !DILocation(line: 37, column: 25, scope: !16567)
!16666 = !DILocation(line: 55, column: 2, scope: !16667, inlinedAt: !16671)
!16667 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !6051, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !16668)
!16668 = !{!16669, !16670}
!16669 = !DILocalVariable(name: "key", scope: !16667, file: !6050, line: 44, type: !32)
!16670 = !DILocalVariable(name: "tmp", scope: !16667, file: !6050, line: 53, type: !32)
!16671 = distinct !DILocation(line: 145, column: 10, scope: !16658, inlinedAt: !16665)
!16672 = !{i64 1652558}
!16673 = !DILocation(line: 0, scope: !16667, inlinedAt: !16671)
!16674 = !DILocation(line: 148, column: 2, scope: !16675, inlinedAt: !16665)
!16675 = distinct !DILexicalBlock(scope: !16676, file: !251, line: 148, column: 2)
!16676 = distinct !DILexicalBlock(scope: !16658, file: !251, line: 148, column: 2)
!16677 = !DILocation(line: 148, column: 2, scope: !16676, inlinedAt: !16665)
!16678 = !DILocation(line: 148, column: 2, scope: !16679, inlinedAt: !16665)
!16679 = distinct !DILexicalBlock(scope: !16675, file: !251, line: 148, column: 2)
!16680 = !DILocation(line: 160, column: 2, scope: !16658, inlinedAt: !16665)
!16681 = !DILocation(line: 41, column: 60, scope: !16567)
!16682 = !DILocation(line: 41, column: 28, scope: !16567)
!16683 = !DILocation(line: 43, column: 13, scope: !16684)
!16684 = distinct !DILexicalBlock(scope: !16567, file: !2481, line: 43, column: 6)
!16685 = !DILocation(line: 43, column: 6, scope: !16567)
!16686 = !DILocalVariable(name: "thread", arg: 1, scope: !16687, file: !12986, line: 65, type: !16576)
!16687 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12986, file: !12986, line: 65, type: !16688, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !16690)
!16688 = !DISubroutineType(types: !16689)
!16689 = !{null, !16576, !32}
!16690 = !{!16686, !16691}
!16691 = !DILocalVariable(name: "value", arg: 2, scope: !16687, file: !12986, line: 65, type: !32)
!16692 = !DILocation(line: 0, scope: !16687, inlinedAt: !16693)
!16693 = distinct !DILocation(line: 46, column: 3, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16684, file: !2481, line: 43, column: 22)
!16695 = !DILocation(line: 67, column: 15, scope: !16687, inlinedAt: !16693)
!16696 = !DILocation(line: 67, column: 33, scope: !16687, inlinedAt: !16693)
!16697 = !DILocation(line: 47, column: 3, scope: !16694)
!16698 = !DILocation(line: 48, column: 3, scope: !16694)
!16699 = !DILocation(line: 49, column: 2, scope: !16694)
!16700 = !DILocalVariable(name: "key", arg: 2, scope: !16701, file: !251, line: 190, type: !16571)
!16701 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !16702, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !16704)
!16702 = !DISubroutineType(types: !16703)
!16703 = !{null, !16661, !16571}
!16704 = !{!16705, !16700}
!16705 = !DILocalVariable(name: "l", arg: 1, scope: !16701, file: !251, line: 189, type: !16661)
!16706 = !DILocation(line: 0, scope: !16701, inlinedAt: !16707)
!16707 = distinct !DILocation(line: 50, column: 3, scope: !16708)
!16708 = distinct !DILexicalBlock(scope: !16684, file: !2481, line: 49, column: 9)
!16709 = !DILocation(line: 194, column: 2, scope: !16710, inlinedAt: !16707)
!16710 = distinct !DILexicalBlock(scope: !16711, file: !251, line: 194, column: 2)
!16711 = distinct !DILexicalBlock(scope: !16701, file: !251, line: 194, column: 2)
!16712 = !DILocation(line: 194, column: 2, scope: !16711, inlinedAt: !16707)
!16713 = !DILocation(line: 194, column: 2, scope: !16714, inlinedAt: !16707)
!16714 = distinct !DILexicalBlock(scope: !16710, file: !251, line: 194, column: 2)
!16715 = !DILocalVariable(name: "key", arg: 1, scope: !16716, file: !6050, line: 84, type: !32)
!16716 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !6061, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !16717)
!16717 = !{!16715}
!16718 = !DILocation(line: 0, scope: !16716, inlinedAt: !16719)
!16719 = distinct !DILocation(line: 215, column: 2, scope: !16701, inlinedAt: !16707)
!16720 = !DILocation(line: 95, column: 2, scope: !16716, inlinedAt: !16719)
!16721 = !{i64 1653375}
!16722 = !DILocation(line: 55, column: 2, scope: !16567)
!16723 = distinct !DISubprogram(name: "z_impl_k_condvar_broadcast", scope: !2481, file: !2481, line: 67, type: !16528, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !16724)
!16724 = !{!16725, !16726, !16727, !16728}
!16725 = !DILocalVariable(name: "condvar", arg: 1, scope: !16723, file: !2481, line: 67, type: !16530)
!16726 = !DILocalVariable(name: "pending_thread", scope: !16723, file: !2481, line: 69, type: !16576)
!16727 = !DILocalVariable(name: "key", scope: !16723, file: !2481, line: 70, type: !16571)
!16728 = !DILocalVariable(name: "woken", scope: !16723, file: !2481, line: 71, type: !109)
!16729 = !DILocation(line: 0, scope: !16723)
!16730 = !DILocation(line: 0, scope: !16658, inlinedAt: !16731)
!16731 = distinct !DILocation(line: 73, column: 8, scope: !16723)
!16732 = !DILocation(line: 55, column: 2, scope: !16667, inlinedAt: !16733)
!16733 = distinct !DILocation(line: 145, column: 10, scope: !16658, inlinedAt: !16731)
!16734 = !DILocation(line: 0, scope: !16667, inlinedAt: !16733)
!16735 = !DILocation(line: 148, column: 2, scope: !16675, inlinedAt: !16731)
!16736 = !DILocation(line: 148, column: 2, scope: !16676, inlinedAt: !16731)
!16737 = !DILocation(line: 148, column: 2, scope: !16679, inlinedAt: !16731)
!16738 = !DILocation(line: 160, column: 2, scope: !16658, inlinedAt: !16731)
!16739 = !DILocation(line: 78, column: 27, scope: !16723)
!16740 = !DILocation(line: 78, column: 68, scope: !16723)
!16741 = !DILocation(line: 78, column: 2, scope: !16723)
!16742 = !DILocation(line: 80, column: 8, scope: !16743)
!16743 = distinct !DILexicalBlock(scope: !16723, file: !2481, line: 79, column: 15)
!16744 = !DILocation(line: 0, scope: !16687, inlinedAt: !16745)
!16745 = distinct !DILocation(line: 81, column: 3, scope: !16743)
!16746 = !DILocation(line: 67, column: 15, scope: !16687, inlinedAt: !16745)
!16747 = !DILocation(line: 67, column: 33, scope: !16687, inlinedAt: !16745)
!16748 = !DILocation(line: 82, column: 3, scope: !16743)
!16749 = distinct !{!16749, !16741, !16750}
!16750 = !DILocation(line: 83, column: 2, scope: !16723)
!16751 = !DILocation(line: 87, column: 2, scope: !16723)
!16752 = !DILocation(line: 89, column: 2, scope: !16723)
!16753 = distinct !DISubprogram(name: "z_impl_k_condvar_wait", scope: !2481, file: !2481, line: 100, type: !16754, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !16767)
!16754 = !DISubroutineType(types: !16755)
!16755 = !{!109, !16530, !16756, !16763}
!16756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16757, size: 32)
!16757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !16758)
!16758 = !{!16759, !16760, !16761, !16762}
!16759 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16757, file: !118, line: 2722, baseType: !16534, size: 64)
!16760 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !16757, file: !118, line: 2724, baseType: !16576, size: 32, offset: 64)
!16761 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !16757, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!16762 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !16757, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!16763 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16764)
!16764 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16765)
!16765 = !{!16766}
!16766 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16764, file: !104, line: 66, baseType: !103, size: 64)
!16767 = !{!16768, !16769, !16770, !16771, !16772}
!16768 = !DILocalVariable(name: "condvar", arg: 1, scope: !16753, file: !2481, line: 100, type: !16530)
!16769 = !DILocalVariable(name: "mutex", arg: 2, scope: !16753, file: !2481, line: 100, type: !16756)
!16770 = !DILocalVariable(name: "timeout", arg: 3, scope: !16753, file: !2481, line: 101, type: !16763)
!16771 = !DILocalVariable(name: "key", scope: !16753, file: !2481, line: 103, type: !16571)
!16772 = !DILocalVariable(name: "ret", scope: !16753, file: !2481, line: 104, type: !109)
!16773 = !DILocation(line: 0, scope: !16753)
!16774 = !DILocation(line: 0, scope: !16658, inlinedAt: !16775)
!16775 = distinct !DILocation(line: 108, column: 8, scope: !16753)
!16776 = !DILocation(line: 55, column: 2, scope: !16667, inlinedAt: !16777)
!16777 = distinct !DILocation(line: 145, column: 10, scope: !16658, inlinedAt: !16775)
!16778 = !DILocation(line: 0, scope: !16667, inlinedAt: !16777)
!16779 = !DILocation(line: 148, column: 2, scope: !16675, inlinedAt: !16775)
!16780 = !DILocation(line: 148, column: 2, scope: !16676, inlinedAt: !16775)
!16781 = !DILocation(line: 148, column: 2, scope: !16679, inlinedAt: !16775)
!16782 = !DILocation(line: 160, column: 2, scope: !16658, inlinedAt: !16775)
!16783 = !DILocation(line: 109, column: 2, scope: !16753)
!16784 = !DILocation(line: 111, column: 42, scope: !16753)
!16785 = !DILocation(line: 111, column: 8, scope: !16753)
!16786 = !DILocation(line: 112, column: 2, scope: !16753)
!16787 = !DILocation(line: 116, column: 2, scope: !16753)
!16788 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3204, file: !3204, line: 944, type: !16789, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !16791)
!16789 = !DISubroutineType(types: !16790)
!16790 = !{!109, !16756}
!16791 = !{!16792}
!16792 = !DILocalVariable(name: "mutex", arg: 1, scope: !16788, file: !3204, line: 944, type: !16756)
!16793 = !DILocation(line: 0, scope: !16788)
!16794 = !DILocation(line: 952, column: 2, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16788, file: !3204, line: 952, column: 2)
!16796 = !{i64 2152225837}
!16797 = !DILocation(line: 953, column: 9, scope: !16788)
!16798 = !DILocation(line: 953, column: 2, scope: !16788)
!16799 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3204, file: !3204, line: 927, type: !16800, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !16802)
!16800 = !DISubroutineType(types: !16801)
!16801 = !{!109, !16756, !16763}
!16802 = !{!16803, !16804}
!16803 = !DILocalVariable(name: "mutex", arg: 1, scope: !16799, file: !3204, line: 927, type: !16756)
!16804 = !DILocalVariable(name: "timeout", arg: 2, scope: !16799, file: !3204, line: 927, type: !16763)
!16805 = !DILocation(line: 0, scope: !16799)
!16806 = !DILocation(line: 936, column: 2, scope: !16807)
!16807 = distinct !DILexicalBlock(scope: !16799, file: !3204, line: 936, column: 2)
!16808 = !{i64 2152225769}
!16809 = !DILocation(line: 937, column: 9, scope: !16799)
!16810 = !DILocation(line: 937, column: 2, scope: !16799)
!16811 = distinct !DISubprogram(name: "z_data_copy", scope: !16812, file: !16812, line: 22, type: !3062, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2045)
!16812 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16813 = !DILocation(line: 24, column: 2, scope: !16811)
!16814 = !DILocation(line: 27, column: 2, scope: !16811)
!16815 = !DILocation(line: 71, column: 1, scope: !16811)
!16816 = distinct !DISubprogram(name: "z_add_timeout", scope: !2517, file: !2517, line: 88, type: !16817, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16823)
!16817 = !DISubroutineType(types: !16818)
!16818 = !{null, !2490, !2509, !16819}
!16819 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16820)
!16820 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16821)
!16821 = !{!16822}
!16822 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16820, file: !104, line: 66, baseType: !103, size: 64)
!16823 = !{!16824, !16825, !16826, !16827, !16833, !16834, !16837, !16840}
!16824 = !DILocalVariable(name: "to", arg: 1, scope: !16816, file: !2517, line: 88, type: !2490)
!16825 = !DILocalVariable(name: "fn", arg: 2, scope: !16816, file: !2517, line: 88, type: !2509)
!16826 = !DILocalVariable(name: "timeout", arg: 3, scope: !16816, file: !2517, line: 89, type: !16819)
!16827 = !DILocalVariable(name: "__i", scope: !16828, file: !2517, line: 102, type: !16829)
!16828 = distinct !DILexicalBlock(scope: !16816, file: !2517, line: 102, column: 2)
!16829 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !16830)
!16830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !16831)
!16831 = !{!16832}
!16832 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16830, file: !251, line: 33, baseType: !109, size: 32)
!16833 = !DILocalVariable(name: "__key", scope: !16828, file: !2517, line: 102, type: !16829)
!16834 = !DILocalVariable(name: "t", scope: !16835, file: !2517, line: 103, type: !2490)
!16835 = distinct !DILexicalBlock(scope: !16836, file: !2517, line: 102, column: 24)
!16836 = distinct !DILexicalBlock(scope: !16828, file: !2517, line: 102, column: 2)
!16837 = !DILocalVariable(name: "ticks", scope: !16838, file: !2517, line: 107, type: !103)
!16838 = distinct !DILexicalBlock(scope: !16839, file: !2517, line: 106, column: 39)
!16839 = distinct !DILexicalBlock(scope: !16835, file: !2517, line: 105, column: 7)
!16840 = !DILocalVariable(name: "next_time", scope: !16841, file: !2517, line: 137, type: !854)
!16841 = distinct !DILexicalBlock(scope: !16842, file: !2517, line: 127, column: 22)
!16842 = distinct !DILexicalBlock(scope: !16835, file: !2517, line: 127, column: 7)
!16843 = !DILocation(line: 0, scope: !16816)
!16844 = !DILocation(line: 91, column: 6, scope: !16845)
!16845 = distinct !DILexicalBlock(scope: !16816, file: !2517, line: 91, column: 6)
!16846 = !DILocation(line: 91, column: 6, scope: !16816)
!16847 = !DILocation(line: 99, column: 2, scope: !16848)
!16848 = distinct !DILexicalBlock(scope: !16849, file: !2517, line: 99, column: 2)
!16849 = distinct !DILexicalBlock(scope: !16816, file: !2517, line: 99, column: 2)
!16850 = !DILocation(line: 99, column: 2, scope: !16849)
!16851 = !DILocation(line: 99, column: 2, scope: !16852)
!16852 = distinct !DILexicalBlock(scope: !16848, file: !2517, line: 99, column: 2)
!16853 = !DILocation(line: 100, column: 6, scope: !16816)
!16854 = !DILocation(line: 100, column: 9, scope: !16816)
!16855 = !DILocation(line: 0, scope: !16828)
!16856 = !DILocalVariable(name: "l", arg: 1, scope: !16857, file: !251, line: 136, type: !16860)
!16857 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !16858, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16861)
!16858 = !DISubroutineType(types: !16859)
!16859 = !{!16829, !16860}
!16860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 32)
!16861 = !{!16856, !16862}
!16862 = !DILocalVariable(name: "k", scope: !16857, file: !251, line: 139, type: !16829)
!16863 = !DILocation(line: 0, scope: !16857, inlinedAt: !16864)
!16864 = distinct !DILocation(line: 102, column: 2, scope: !16828)
!16865 = !DILocation(line: 55, column: 2, scope: !16866, inlinedAt: !16870)
!16866 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !6051, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16867)
!16867 = !{!16868, !16869}
!16868 = !DILocalVariable(name: "key", scope: !16866, file: !6050, line: 44, type: !32)
!16869 = !DILocalVariable(name: "tmp", scope: !16866, file: !6050, line: 53, type: !32)
!16870 = distinct !DILocation(line: 145, column: 10, scope: !16857, inlinedAt: !16864)
!16871 = !{i64 1658164}
!16872 = !DILocation(line: 0, scope: !16866, inlinedAt: !16870)
!16873 = !DILocation(line: 148, column: 2, scope: !16874, inlinedAt: !16864)
!16874 = distinct !DILexicalBlock(scope: !16875, file: !251, line: 148, column: 2)
!16875 = distinct !DILexicalBlock(scope: !16857, file: !251, line: 148, column: 2)
!16876 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !16864)
!16877 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !16864)
!16878 = distinct !DILexicalBlock(scope: !16874, file: !251, line: 148, column: 2)
!16879 = !DILocation(line: 160, column: 2, scope: !16857, inlinedAt: !16864)
!16880 = !DILocation(line: 106, column: 33, scope: !16839)
!16881 = !DILocation(line: 105, column: 7, scope: !16835)
!16882 = !DILocation(line: 107, column: 50, scope: !16838)
!16883 = !DILocation(line: 107, column: 48, scope: !16838)
!16884 = !DILocation(line: 0, scope: !16838)
!16885 = !DILocation(line: 109, column: 17, scope: !16838)
!16886 = !DILocation(line: 110, column: 3, scope: !16838)
!16887 = !DILocation(line: 111, column: 31, scope: !16888)
!16888 = distinct !DILexicalBlock(scope: !16839, file: !2517, line: 110, column: 10)
!16889 = !DILocation(line: 111, column: 37, scope: !16888)
!16890 = !DILocation(line: 111, column: 35, scope: !16888)
!16891 = !DILocation(line: 0, scope: !16839)
!16892 = !DILocation(line: 109, column: 8, scope: !16838)
!16893 = !DILocation(line: 109, column: 15, scope: !16838)
!16894 = !DILocation(line: 114, column: 12, scope: !16895)
!16895 = distinct !DILexicalBlock(scope: !16835, file: !2517, line: 114, column: 3)
!16896 = !DILocation(line: 0, scope: !16835)
!16897 = !DILocation(line: 114, column: 3, scope: !16895)
!16898 = !DILocation(line: 115, column: 24, scope: !16899)
!16899 = distinct !DILexicalBlock(scope: !16900, file: !2517, line: 115, column: 8)
!16900 = distinct !DILexicalBlock(scope: !16901, file: !2517, line: 114, column: 45)
!16901 = distinct !DILexicalBlock(scope: !16895, file: !2517, line: 114, column: 3)
!16902 = !DILocation(line: 115, column: 11, scope: !16899)
!16903 = !DILocation(line: 115, column: 18, scope: !16899)
!16904 = !DILocation(line: 115, column: 8, scope: !16900)
!16905 = !DILocation(line: 116, column: 15, scope: !16906)
!16906 = distinct !DILexicalBlock(scope: !16899, file: !2517, line: 115, column: 32)
!16907 = !DILocation(line: 117, column: 26, scope: !16906)
!16908 = !DILocation(line: 117, column: 5, scope: !16906)
!16909 = !DILocation(line: 123, column: 7, scope: !16835)
!16910 = !DILocation(line: 120, column: 15, scope: !16900)
!16911 = !DILocation(line: 114, column: 36, scope: !16901)
!16912 = distinct !{!16912, !16897, !16913}
!16913 = !DILocation(line: 121, column: 3, scope: !16895)
!16914 = !DILocation(line: 124, column: 4, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16916, file: !2517, line: 123, column: 18)
!16916 = distinct !DILexicalBlock(scope: !16835, file: !2517, line: 123, column: 7)
!16917 = !DILocation(line: 125, column: 3, scope: !16915)
!16918 = !DILocation(line: 127, column: 13, scope: !16842)
!16919 = !DILocation(line: 127, column: 10, scope: !16842)
!16920 = !DILocation(line: 127, column: 7, scope: !16835)
!16921 = !DILocation(line: 137, column: 24, scope: !16841)
!16922 = !DILocation(line: 0, scope: !16841)
!16923 = !DILocation(line: 139, column: 18, scope: !16924)
!16924 = distinct !DILexicalBlock(scope: !16841, file: !2517, line: 139, column: 8)
!16925 = !DILocation(line: 139, column: 23, scope: !16924)
!16926 = !DILocation(line: 141, column: 5, scope: !16927)
!16927 = distinct !DILexicalBlock(scope: !16924, file: !2517, line: 140, column: 48)
!16928 = !DILocation(line: 142, column: 4, scope: !16927)
!16929 = !DILocalVariable(name: "key", arg: 2, scope: !16930, file: !251, line: 190, type: !16829)
!16930 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !16931, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16933)
!16931 = !DISubroutineType(types: !16932)
!16932 = !{null, !16860, !16829}
!16933 = !{!16934, !16929}
!16934 = !DILocalVariable(name: "l", arg: 1, scope: !16930, file: !251, line: 189, type: !16860)
!16935 = !DILocation(line: 0, scope: !16930, inlinedAt: !16936)
!16936 = distinct !DILocation(line: 102, column: 2, scope: !16836)
!16937 = !DILocation(line: 194, column: 2, scope: !16938, inlinedAt: !16936)
!16938 = distinct !DILexicalBlock(scope: !16939, file: !251, line: 194, column: 2)
!16939 = distinct !DILexicalBlock(scope: !16930, file: !251, line: 194, column: 2)
!16940 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !16936)
!16941 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !16936)
!16942 = distinct !DILexicalBlock(scope: !16938, file: !251, line: 194, column: 2)
!16943 = !DILocalVariable(name: "key", arg: 1, scope: !16944, file: !6050, line: 84, type: !32)
!16944 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !6061, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16945)
!16945 = !{!16943}
!16946 = !DILocation(line: 0, scope: !16944, inlinedAt: !16947)
!16947 = distinct !DILocation(line: 215, column: 2, scope: !16930, inlinedAt: !16936)
!16948 = !DILocation(line: 95, column: 2, scope: !16944, inlinedAt: !16947)
!16949 = !{i64 1658981}
!16950 = !DILocation(line: 148, column: 1, scope: !16816)
!16951 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !16952, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16956)
!16952 = !DISubroutineType(types: !16953)
!16953 = !{!360, !16954}
!16954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16955, size: 32)
!16955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2494)
!16956 = !{!16957}
!16957 = !DILocalVariable(name: "node", arg: 1, scope: !16951, file: !127, line: 225, type: !16954)
!16958 = !DILocation(line: 0, scope: !16951)
!16959 = !DILocation(line: 227, column: 15, scope: !16951)
!16960 = !DILocation(line: 227, column: 20, scope: !16951)
!16961 = !DILocation(line: 227, column: 2, scope: !16951)
!16962 = distinct !DISubprogram(name: "elapsed", scope: !2517, file: !2517, line: 62, type: !16963, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2045)
!16963 = !DISubroutineType(types: !16964)
!16964 = !{!854}
!16965 = !DILocation(line: 64, column: 9, scope: !16962)
!16966 = !DILocation(line: 64, column: 28, scope: !16962)
!16967 = !DILocation(line: 64, column: 35, scope: !16962)
!16968 = !DILocation(line: 64, column: 2, scope: !16962)
!16969 = distinct !DISubprogram(name: "first", scope: !2517, file: !2517, line: 39, type: !16970, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16972)
!16970 = !DISubroutineType(types: !16971)
!16971 = !{!2490}
!16972 = !{!16973}
!16973 = !DILocalVariable(name: "t", scope: !16969, file: !2517, line: 41, type: !16974)
!16974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 32)
!16975 = !DILocation(line: 41, column: 19, scope: !16969)
!16976 = !DILocation(line: 0, scope: !16969)
!16977 = !DILocation(line: 43, column: 9, scope: !16969)
!16978 = !DILocation(line: 43, column: 2, scope: !16969)
!16979 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !16980, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16982)
!16980 = !DISubroutineType(types: !16981)
!16981 = !{null, !16974, !16974}
!16982 = !{!16983, !16984, !16985}
!16983 = !DILocalVariable(name: "successor", arg: 1, scope: !16979, file: !127, line: 443, type: !16974)
!16984 = !DILocalVariable(name: "node", arg: 2, scope: !16979, file: !127, line: 443, type: !16974)
!16985 = !DILocalVariable(name: "prev", scope: !16979, file: !127, line: 445, type: !16986)
!16986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16974)
!16987 = !DILocation(line: 0, scope: !16979)
!16988 = !DILocation(line: 445, column: 39, scope: !16979)
!16989 = !DILocation(line: 447, column: 8, scope: !16979)
!16990 = !DILocation(line: 447, column: 13, scope: !16979)
!16991 = !DILocation(line: 448, column: 8, scope: !16979)
!16992 = !DILocation(line: 448, column: 13, scope: !16979)
!16993 = !DILocation(line: 449, column: 8, scope: !16979)
!16994 = !DILocation(line: 449, column: 13, scope: !16979)
!16995 = !DILocation(line: 450, column: 18, scope: !16979)
!16996 = !DILocation(line: 451, column: 1, scope: !16979)
!16997 = distinct !DISubprogram(name: "next", scope: !2517, file: !2517, line: 46, type: !16998, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17000)
!16998 = !DISubroutineType(types: !16999)
!16999 = !{!2490, !2490}
!17000 = !{!17001, !17002}
!17001 = !DILocalVariable(name: "t", arg: 1, scope: !16997, file: !2517, line: 46, type: !2490)
!17002 = !DILocalVariable(name: "n", scope: !16997, file: !2517, line: 48, type: !16974)
!17003 = !DILocation(line: 0, scope: !16997)
!17004 = !DILocation(line: 48, column: 58, scope: !16997)
!17005 = !DILocation(line: 48, column: 19, scope: !16997)
!17006 = !DILocation(line: 50, column: 9, scope: !16997)
!17007 = !DILocation(line: 50, column: 2, scope: !16997)
!17008 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !17009, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17012)
!17009 = !DISubroutineType(types: !17010)
!17010 = !{null, !17011, !16974}
!17011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 32)
!17012 = !{!17013, !17014, !17015}
!17013 = !DILocalVariable(name: "list", arg: 1, scope: !17008, file: !127, line: 404, type: !17011)
!17014 = !DILocalVariable(name: "node", arg: 2, scope: !17008, file: !127, line: 404, type: !16974)
!17015 = !DILocalVariable(name: "tail", scope: !17008, file: !127, line: 406, type: !16986)
!17016 = !DILocation(line: 0, scope: !17008)
!17017 = !DILocation(line: 406, column: 34, scope: !17008)
!17018 = !DILocation(line: 408, column: 8, scope: !17008)
!17019 = !DILocation(line: 408, column: 13, scope: !17008)
!17020 = !DILocation(line: 409, column: 8, scope: !17008)
!17021 = !DILocation(line: 409, column: 13, scope: !17008)
!17022 = !DILocation(line: 411, column: 8, scope: !17008)
!17023 = !DILocation(line: 411, column: 13, scope: !17008)
!17024 = !DILocation(line: 412, column: 13, scope: !17008)
!17025 = !DILocation(line: 413, column: 1, scope: !17008)
!17026 = distinct !DISubprogram(name: "next_timeout", scope: !2517, file: !2517, line: 67, type: !16963, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17027)
!17027 = !{!17028, !17029, !17030}
!17028 = !DILocalVariable(name: "to", scope: !17026, file: !2517, line: 69, type: !2490)
!17029 = !DILocalVariable(name: "ticks_elapsed", scope: !17026, file: !2517, line: 70, type: !854)
!17030 = !DILocalVariable(name: "ret", scope: !17026, file: !2517, line: 71, type: !854)
!17031 = !DILocation(line: 69, column: 24, scope: !17026)
!17032 = !DILocation(line: 0, scope: !17026)
!17033 = !DILocation(line: 70, column: 26, scope: !17026)
!17034 = !DILocation(line: 73, column: 10, scope: !17035)
!17035 = distinct !DILexicalBlock(scope: !17026, file: !2517, line: 73, column: 6)
!17036 = !DILocation(line: 73, column: 19, scope: !17035)
!17037 = !DILocation(line: 74, column: 21, scope: !17035)
!17038 = !DILocation(line: 74, column: 30, scope: !17035)
!17039 = !DILocation(line: 74, column: 28, scope: !17035)
!17040 = !DILocation(line: 74, column: 45, scope: !17035)
!17041 = !DILocation(line: 73, column: 6, scope: !17026)
!17042 = !DILocation(line: 77, column: 9, scope: !17043)
!17043 = distinct !DILexicalBlock(scope: !17035, file: !2517, line: 76, column: 9)
!17044 = !DILocation(line: 0, scope: !17035)
!17045 = !DILocation(line: 81, column: 20, scope: !17046)
!17046 = distinct !DILexicalBlock(scope: !17026, file: !2517, line: 81, column: 6)
!17047 = !DILocation(line: 81, column: 6, scope: !17046)
!17048 = !DILocation(line: 81, column: 32, scope: !17046)
!17049 = !DILocation(line: 85, column: 2, scope: !17026)
!17050 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !17051, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17053)
!17051 = !DISubroutineType(types: !17052)
!17052 = !{!16974, !17011, !16974}
!17053 = !{!17054, !17055}
!17054 = !DILocalVariable(name: "list", arg: 1, scope: !17050, file: !127, line: 341, type: !17011)
!17055 = !DILocalVariable(name: "node", arg: 2, scope: !17050, file: !127, line: 342, type: !16974)
!17056 = !DILocation(line: 0, scope: !17050)
!17057 = !DILocation(line: 344, column: 15, scope: !17050)
!17058 = !DILocation(line: 344, column: 9, scope: !17050)
!17059 = !DILocation(line: 344, column: 26, scope: !17050)
!17060 = !DILocation(line: 344, column: 2, scope: !17050)
!17061 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !17051, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17062)
!17062 = !{!17063, !17064}
!17063 = !DILocalVariable(name: "list", arg: 1, scope: !17061, file: !127, line: 325, type: !17011)
!17064 = !DILocalVariable(name: "node", arg: 2, scope: !17061, file: !127, line: 326, type: !16974)
!17065 = !DILocation(line: 0, scope: !17061)
!17066 = !DILocation(line: 328, column: 24, scope: !17061)
!17067 = !DILocation(line: 328, column: 15, scope: !17061)
!17068 = !DILocation(line: 328, column: 9, scope: !17061)
!17069 = !DILocation(line: 328, column: 45, scope: !17061)
!17070 = !DILocation(line: 328, column: 2, scope: !17061)
!17071 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !17072, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17074)
!17072 = !DISubroutineType(types: !17073)
!17073 = !{!16974, !17011}
!17074 = !{!17075}
!17075 = !DILocalVariable(name: "list", arg: 1, scope: !17071, file: !127, line: 294, type: !17011)
!17076 = !DILocation(line: 0, scope: !17071)
!17077 = !DILocation(line: 296, column: 9, scope: !17071)
!17078 = !DILocation(line: 296, column: 2, scope: !17071)
!17079 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !17080, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17082)
!17080 = !DISubroutineType(types: !17081)
!17081 = !{!360, !17011}
!17082 = !{!17083}
!17083 = !DILocalVariable(name: "list", arg: 1, scope: !17079, file: !127, line: 266, type: !17011)
!17084 = !DILocation(line: 0, scope: !17079)
!17085 = !DILocation(line: 268, column: 15, scope: !17079)
!17086 = !DILocation(line: 268, column: 20, scope: !17079)
!17087 = !DILocation(line: 268, column: 2, scope: !17079)
!17088 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2517, file: !2517, line: 150, type: !17089, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17091)
!17089 = !DISubroutineType(types: !17090)
!17090 = !{!109, !2490}
!17091 = !{!17092, !17093, !17094, !17096}
!17092 = !DILocalVariable(name: "to", arg: 1, scope: !17088, file: !2517, line: 150, type: !2490)
!17093 = !DILocalVariable(name: "ret", scope: !17088, file: !2517, line: 152, type: !109)
!17094 = !DILocalVariable(name: "__i", scope: !17095, file: !2517, line: 154, type: !16829)
!17095 = distinct !DILexicalBlock(scope: !17088, file: !2517, line: 154, column: 2)
!17096 = !DILocalVariable(name: "__key", scope: !17095, file: !2517, line: 154, type: !16829)
!17097 = !DILocation(line: 0, scope: !17088)
!17098 = !DILocation(line: 0, scope: !17095)
!17099 = !DILocation(line: 0, scope: !16857, inlinedAt: !17100)
!17100 = distinct !DILocation(line: 154, column: 2, scope: !17095)
!17101 = !DILocation(line: 55, column: 2, scope: !16866, inlinedAt: !17102)
!17102 = distinct !DILocation(line: 145, column: 10, scope: !16857, inlinedAt: !17100)
!17103 = !DILocation(line: 0, scope: !16866, inlinedAt: !17102)
!17104 = !DILocation(line: 148, column: 2, scope: !16874, inlinedAt: !17100)
!17105 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17100)
!17106 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17100)
!17107 = !DILocation(line: 160, column: 2, scope: !16857, inlinedAt: !17100)
!17108 = !DILocation(line: 155, column: 7, scope: !17109)
!17109 = distinct !DILexicalBlock(scope: !17110, file: !2517, line: 155, column: 7)
!17110 = distinct !DILexicalBlock(scope: !17111, file: !2517, line: 154, column: 24)
!17111 = distinct !DILexicalBlock(scope: !17095, file: !2517, line: 154, column: 2)
!17112 = !DILocation(line: 155, column: 7, scope: !17110)
!17113 = !DILocation(line: 156, column: 4, scope: !17114)
!17114 = distinct !DILexicalBlock(scope: !17109, file: !2517, line: 155, column: 39)
!17115 = !DILocation(line: 158, column: 3, scope: !17114)
!17116 = !DILocation(line: 0, scope: !16930, inlinedAt: !17117)
!17117 = distinct !DILocation(line: 154, column: 2, scope: !17111)
!17118 = !DILocation(line: 194, column: 2, scope: !16938, inlinedAt: !17117)
!17119 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17117)
!17120 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17117)
!17121 = !DILocation(line: 0, scope: !16944, inlinedAt: !17122)
!17122 = distinct !DILocation(line: 215, column: 2, scope: !16930, inlinedAt: !17117)
!17123 = !DILocation(line: 95, column: 2, scope: !16944, inlinedAt: !17122)
!17124 = !DILocation(line: 161, column: 2, scope: !17088)
!17125 = distinct !DISubprogram(name: "remove_timeout", scope: !2517, file: !2517, line: 53, type: !2511, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17126)
!17126 = !{!17127}
!17127 = !DILocalVariable(name: "t", arg: 1, scope: !17125, file: !2517, line: 53, type: !2490)
!17128 = !DILocation(line: 0, scope: !17125)
!17129 = !DILocation(line: 55, column: 6, scope: !17130)
!17130 = distinct !DILexicalBlock(scope: !17125, file: !2517, line: 55, column: 6)
!17131 = !DILocation(line: 55, column: 14, scope: !17130)
!17132 = !DILocation(line: 55, column: 6, scope: !17125)
!17133 = !DILocation(line: 56, column: 25, scope: !17134)
!17134 = distinct !DILexicalBlock(scope: !17130, file: !2517, line: 55, column: 23)
!17135 = !DILocation(line: 56, column: 12, scope: !17134)
!17136 = !DILocation(line: 56, column: 19, scope: !17134)
!17137 = !DILocation(line: 57, column: 2, scope: !17134)
!17138 = !DILocation(line: 59, column: 23, scope: !17125)
!17139 = !DILocation(line: 59, column: 2, scope: !17125)
!17140 = !DILocation(line: 60, column: 1, scope: !17125)
!17141 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !17142, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17144)
!17142 = !DISubroutineType(types: !17143)
!17143 = !{null, !16974}
!17144 = !{!17145, !17146, !17147}
!17145 = !DILocalVariable(name: "node", arg: 1, scope: !17141, file: !127, line: 496, type: !16974)
!17146 = !DILocalVariable(name: "prev", scope: !17141, file: !127, line: 498, type: !16986)
!17147 = !DILocalVariable(name: "next", scope: !17141, file: !127, line: 499, type: !16986)
!17148 = !DILocation(line: 0, scope: !17141)
!17149 = !DILocation(line: 498, column: 34, scope: !17141)
!17150 = !DILocation(line: 499, column: 34, scope: !17141)
!17151 = !DILocation(line: 501, column: 8, scope: !17141)
!17152 = !DILocation(line: 501, column: 13, scope: !17141)
!17153 = !DILocation(line: 502, column: 8, scope: !17141)
!17154 = !DILocation(line: 502, column: 13, scope: !17141)
!17155 = !DILocation(line: 503, column: 2, scope: !17141)
!17156 = !DILocation(line: 504, column: 1, scope: !17141)
!17157 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !17142, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17158)
!17158 = !{!17159}
!17159 = !DILocalVariable(name: "node", arg: 1, scope: !17157, file: !127, line: 211, type: !16974)
!17160 = !DILocation(line: 0, scope: !17157)
!17161 = !DILocation(line: 213, column: 8, scope: !17157)
!17162 = !DILocation(line: 213, column: 13, scope: !17157)
!17163 = !DILocation(line: 214, column: 8, scope: !17157)
!17164 = !DILocation(line: 214, column: 13, scope: !17157)
!17165 = !DILocation(line: 215, column: 1, scope: !17157)
!17166 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2517, file: !2517, line: 183, type: !17167, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17171)
!17167 = !DISubroutineType(types: !17168)
!17168 = !{!103, !17169}
!17169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17170, size: 32)
!17170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2491)
!17171 = !{!17172, !17173, !17174, !17176}
!17172 = !DILocalVariable(name: "timeout", arg: 1, scope: !17166, file: !2517, line: 183, type: !17169)
!17173 = !DILocalVariable(name: "ticks", scope: !17166, file: !2517, line: 185, type: !103)
!17174 = !DILocalVariable(name: "__i", scope: !17175, file: !2517, line: 187, type: !16829)
!17175 = distinct !DILexicalBlock(scope: !17166, file: !2517, line: 187, column: 2)
!17176 = !DILocalVariable(name: "__key", scope: !17175, file: !2517, line: 187, type: !16829)
!17177 = !DILocation(line: 0, scope: !17166)
!17178 = !DILocation(line: 0, scope: !17175)
!17179 = !DILocation(line: 0, scope: !16857, inlinedAt: !17180)
!17180 = distinct !DILocation(line: 187, column: 2, scope: !17175)
!17181 = !DILocation(line: 55, column: 2, scope: !16866, inlinedAt: !17182)
!17182 = distinct !DILocation(line: 145, column: 10, scope: !16857, inlinedAt: !17180)
!17183 = !DILocation(line: 0, scope: !16866, inlinedAt: !17182)
!17184 = !DILocation(line: 148, column: 2, scope: !16874, inlinedAt: !17180)
!17185 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17180)
!17186 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17180)
!17187 = !DILocation(line: 160, column: 2, scope: !16857, inlinedAt: !17180)
!17188 = !DILocation(line: 188, column: 11, scope: !17189)
!17189 = distinct !DILexicalBlock(scope: !17190, file: !2517, line: 187, column: 24)
!17190 = distinct !DILexicalBlock(scope: !17175, file: !2517, line: 187, column: 2)
!17191 = !DILocation(line: 0, scope: !16930, inlinedAt: !17192)
!17192 = distinct !DILocation(line: 187, column: 2, scope: !17190)
!17193 = !DILocation(line: 194, column: 2, scope: !16938, inlinedAt: !17192)
!17194 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17192)
!17195 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17192)
!17196 = !DILocation(line: 0, scope: !16944, inlinedAt: !17197)
!17197 = distinct !DILocation(line: 215, column: 2, scope: !16930, inlinedAt: !17192)
!17198 = !DILocation(line: 95, column: 2, scope: !16944, inlinedAt: !17197)
!17199 = !DILocation(line: 191, column: 2, scope: !17166)
!17200 = distinct !DISubprogram(name: "timeout_rem", scope: !2517, file: !2517, line: 165, type: !17167, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17201)
!17201 = !{!17202, !17203, !17204}
!17202 = !DILocalVariable(name: "timeout", arg: 1, scope: !17200, file: !2517, line: 165, type: !17169)
!17203 = !DILocalVariable(name: "ticks", scope: !17200, file: !2517, line: 167, type: !103)
!17204 = !DILocalVariable(name: "t", scope: !17205, file: !2517, line: 173, type: !2490)
!17205 = distinct !DILexicalBlock(scope: !17200, file: !2517, line: 173, column: 2)
!17206 = !DILocation(line: 0, scope: !17200)
!17207 = !DILocation(line: 169, column: 6, scope: !17208)
!17208 = distinct !DILexicalBlock(scope: !17200, file: !2517, line: 169, column: 6)
!17209 = !DILocation(line: 169, column: 6, scope: !17200)
!17210 = !DILocation(line: 173, column: 28, scope: !17205)
!17211 = !DILocation(line: 0, scope: !17205)
!17212 = !DILocation(line: 173, column: 39, scope: !17213)
!17213 = distinct !DILexicalBlock(scope: !17205, file: !2517, line: 173, column: 2)
!17214 = !DILocation(line: 173, column: 2, scope: !17205)
!17215 = !DILocation(line: 174, column: 15, scope: !17216)
!17216 = distinct !DILexicalBlock(scope: !17213, file: !2517, line: 173, column: 61)
!17217 = !DILocation(line: 174, column: 9, scope: !17216)
!17218 = !DILocation(line: 175, column: 15, scope: !17219)
!17219 = distinct !DILexicalBlock(scope: !17216, file: !2517, line: 175, column: 7)
!17220 = !DILocation(line: 175, column: 7, scope: !17216)
!17221 = !DILocation(line: 173, column: 52, scope: !17213)
!17222 = distinct !{!17222, !17214, !17223}
!17223 = !DILocation(line: 178, column: 2, scope: !17205)
!17224 = !DILocation(line: 180, column: 17, scope: !17200)
!17225 = !DILocation(line: 180, column: 15, scope: !17200)
!17226 = !DILocation(line: 180, column: 2, scope: !17200)
!17227 = !DILocation(line: 181, column: 1, scope: !17200)
!17228 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13395, file: !13395, line: 35, type: !17229, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17231)
!17229 = !DISubroutineType(types: !17230)
!17230 = !{!360, !17169}
!17231 = !{!17232}
!17232 = !DILocalVariable(name: "to", arg: 1, scope: !17228, file: !13395, line: 35, type: !17169)
!17233 = !DILocation(line: 0, scope: !17228)
!17234 = !DILocation(line: 37, column: 35, scope: !17228)
!17235 = !DILocation(line: 37, column: 10, scope: !17228)
!17236 = !DILocation(line: 37, column: 9, scope: !17228)
!17237 = !DILocation(line: 37, column: 2, scope: !17228)
!17238 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2517, file: !2517, line: 194, type: !17167, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17239)
!17239 = !{!17240, !17241, !17242, !17244}
!17240 = !DILocalVariable(name: "timeout", arg: 1, scope: !17238, file: !2517, line: 194, type: !17169)
!17241 = !DILocalVariable(name: "ticks", scope: !17238, file: !2517, line: 196, type: !103)
!17242 = !DILocalVariable(name: "__i", scope: !17243, file: !2517, line: 198, type: !16829)
!17243 = distinct !DILexicalBlock(scope: !17238, file: !2517, line: 198, column: 2)
!17244 = !DILocalVariable(name: "__key", scope: !17243, file: !2517, line: 198, type: !16829)
!17245 = !DILocation(line: 0, scope: !17238)
!17246 = !DILocation(line: 0, scope: !17243)
!17247 = !DILocation(line: 0, scope: !16857, inlinedAt: !17248)
!17248 = distinct !DILocation(line: 198, column: 2, scope: !17243)
!17249 = !DILocation(line: 55, column: 2, scope: !16866, inlinedAt: !17250)
!17250 = distinct !DILocation(line: 145, column: 10, scope: !16857, inlinedAt: !17248)
!17251 = !DILocation(line: 0, scope: !16866, inlinedAt: !17250)
!17252 = !DILocation(line: 148, column: 2, scope: !16874, inlinedAt: !17248)
!17253 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17248)
!17254 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17248)
!17255 = !DILocation(line: 160, column: 2, scope: !16857, inlinedAt: !17248)
!17256 = !DILocation(line: 199, column: 11, scope: !17257)
!17257 = distinct !DILexicalBlock(scope: !17258, file: !2517, line: 198, column: 24)
!17258 = distinct !DILexicalBlock(scope: !17243, file: !2517, line: 198, column: 2)
!17259 = !DILocation(line: 199, column: 23, scope: !17257)
!17260 = !DILocation(line: 0, scope: !16930, inlinedAt: !17261)
!17261 = distinct !DILocation(line: 198, column: 2, scope: !17258)
!17262 = !DILocation(line: 194, column: 2, scope: !16938, inlinedAt: !17261)
!17263 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17261)
!17264 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17261)
!17265 = !DILocation(line: 0, scope: !16944, inlinedAt: !17266)
!17266 = distinct !DILocation(line: 215, column: 2, scope: !16930, inlinedAt: !17261)
!17267 = !DILocation(line: 95, column: 2, scope: !16944, inlinedAt: !17266)
!17268 = !DILocation(line: 199, column: 21, scope: !17257)
!17269 = !DILocation(line: 202, column: 2, scope: !17238)
!17270 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2517, file: !2517, line: 205, type: !16963, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17271)
!17271 = !{!17272, !17273, !17275}
!17272 = !DILocalVariable(name: "ret", scope: !17270, file: !2517, line: 207, type: !854)
!17273 = !DILocalVariable(name: "__i", scope: !17274, file: !2517, line: 209, type: !16829)
!17274 = distinct !DILexicalBlock(scope: !17270, file: !2517, line: 209, column: 2)
!17275 = !DILocalVariable(name: "__key", scope: !17274, file: !2517, line: 209, type: !16829)
!17276 = !DILocation(line: 0, scope: !17270)
!17277 = !DILocation(line: 0, scope: !17274)
!17278 = !DILocation(line: 0, scope: !16857, inlinedAt: !17279)
!17279 = distinct !DILocation(line: 209, column: 2, scope: !17274)
!17280 = !DILocation(line: 55, column: 2, scope: !16866, inlinedAt: !17281)
!17281 = distinct !DILocation(line: 145, column: 10, scope: !16857, inlinedAt: !17279)
!17282 = !DILocation(line: 0, scope: !16866, inlinedAt: !17281)
!17283 = !DILocation(line: 148, column: 2, scope: !16874, inlinedAt: !17279)
!17284 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17279)
!17285 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17279)
!17286 = !DILocation(line: 160, column: 2, scope: !16857, inlinedAt: !17279)
!17287 = !DILocation(line: 210, column: 9, scope: !17288)
!17288 = distinct !DILexicalBlock(scope: !17289, file: !2517, line: 209, column: 24)
!17289 = distinct !DILexicalBlock(scope: !17274, file: !2517, line: 209, column: 2)
!17290 = !DILocation(line: 0, scope: !16930, inlinedAt: !17291)
!17291 = distinct !DILocation(line: 209, column: 2, scope: !17289)
!17292 = !DILocation(line: 194, column: 2, scope: !16938, inlinedAt: !17291)
!17293 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17291)
!17294 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17291)
!17295 = !DILocation(line: 0, scope: !16944, inlinedAt: !17296)
!17296 = distinct !DILocation(line: 215, column: 2, scope: !16930, inlinedAt: !17291)
!17297 = !DILocation(line: 95, column: 2, scope: !16944, inlinedAt: !17296)
!17298 = !DILocation(line: 212, column: 2, scope: !17270)
!17299 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2517, file: !2517, line: 215, type: !10699, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17300)
!17300 = !{!17301, !17302, !17303, !17305, !17306, !17309, !17310}
!17301 = !DILocalVariable(name: "ticks", arg: 1, scope: !17299, file: !2517, line: 215, type: !854)
!17302 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17299, file: !2517, line: 215, type: !360)
!17303 = !DILocalVariable(name: "__i", scope: !17304, file: !2517, line: 217, type: !16829)
!17304 = distinct !DILexicalBlock(scope: !17299, file: !2517, line: 217, column: 2)
!17305 = !DILocalVariable(name: "__key", scope: !17304, file: !2517, line: 217, type: !16829)
!17306 = !DILocalVariable(name: "next_to", scope: !17307, file: !2517, line: 218, type: !109)
!17307 = distinct !DILexicalBlock(scope: !17308, file: !2517, line: 217, column: 24)
!17308 = distinct !DILexicalBlock(scope: !17304, file: !2517, line: 217, column: 2)
!17309 = !DILocalVariable(name: "sooner", scope: !17307, file: !2517, line: 219, type: !360)
!17310 = !DILocalVariable(name: "imminent", scope: !17307, file: !2517, line: 221, type: !360)
!17311 = !DILocation(line: 0, scope: !17299)
!17312 = !DILocation(line: 0, scope: !17304)
!17313 = !DILocation(line: 0, scope: !16857, inlinedAt: !17314)
!17314 = distinct !DILocation(line: 217, column: 2, scope: !17304)
!17315 = !DILocation(line: 55, column: 2, scope: !16866, inlinedAt: !17316)
!17316 = distinct !DILocation(line: 145, column: 10, scope: !16857, inlinedAt: !17314)
!17317 = !DILocation(line: 0, scope: !16866, inlinedAt: !17316)
!17318 = !DILocation(line: 148, column: 2, scope: !16874, inlinedAt: !17314)
!17319 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17314)
!17320 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17314)
!17321 = !DILocation(line: 160, column: 2, scope: !16857, inlinedAt: !17314)
!17322 = !DILocation(line: 218, column: 17, scope: !17307)
!17323 = !DILocation(line: 0, scope: !17307)
!17324 = !DILocation(line: 221, column: 27, scope: !17307)
!17325 = !DILocation(line: 233, column: 17, scope: !17326)
!17326 = distinct !DILexicalBlock(scope: !17307, file: !2517, line: 233, column: 7)
!17327 = !DILocation(line: 234, column: 26, scope: !17328)
!17328 = distinct !DILexicalBlock(scope: !17326, file: !2517, line: 233, column: 56)
!17329 = !DILocation(line: 234, column: 4, scope: !17328)
!17330 = !DILocation(line: 235, column: 3, scope: !17328)
!17331 = !DILocation(line: 0, scope: !16930, inlinedAt: !17332)
!17332 = distinct !DILocation(line: 217, column: 2, scope: !17308)
!17333 = !DILocation(line: 194, column: 2, scope: !16938, inlinedAt: !17332)
!17334 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17332)
!17335 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17332)
!17336 = !DILocation(line: 0, scope: !16944, inlinedAt: !17337)
!17337 = distinct !DILocation(line: 215, column: 2, scope: !16930, inlinedAt: !17332)
!17338 = !DILocation(line: 95, column: 2, scope: !16944, inlinedAt: !17337)
!17339 = !DILocation(line: 237, column: 1, scope: !17299)
!17340 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2517, file: !2517, line: 239, type: !17341, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17343)
!17341 = !DISubroutineType(types: !17342)
!17342 = !{null, !854}
!17343 = !{!17344, !17345, !17346, !17348}
!17344 = !DILocalVariable(name: "ticks", arg: 1, scope: !17340, file: !2517, line: 239, type: !854)
!17345 = !DILocalVariable(name: "key", scope: !17340, file: !2517, line: 245, type: !16829)
!17346 = !DILocalVariable(name: "t", scope: !17347, file: !2517, line: 262, type: !2490)
!17347 = distinct !DILexicalBlock(scope: !17340, file: !2517, line: 261, column: 67)
!17348 = !DILocalVariable(name: "dt", scope: !17347, file: !2517, line: 263, type: !109)
!17349 = !DILocation(line: 0, scope: !17340)
!17350 = !DILocation(line: 242, column: 2, scope: !17340)
!17351 = !DILocation(line: 0, scope: !16857, inlinedAt: !17352)
!17352 = distinct !DILocation(line: 245, column: 25, scope: !17340)
!17353 = !DILocation(line: 55, column: 2, scope: !16866, inlinedAt: !17354)
!17354 = distinct !DILocation(line: 145, column: 10, scope: !16857, inlinedAt: !17352)
!17355 = !DILocation(line: 0, scope: !16866, inlinedAt: !17354)
!17356 = !DILocation(line: 148, column: 2, scope: !16874, inlinedAt: !17352)
!17357 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17352)
!17358 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17352)
!17359 = !DILocation(line: 160, column: 2, scope: !16857, inlinedAt: !17352)
!17360 = !DILocation(line: 261, column: 9, scope: !17340)
!17361 = !DILocation(line: 261, column: 17, scope: !17340)
!17362 = !DILocation(line: 261, column: 25, scope: !17340)
!17363 = !DILocation(line: 261, column: 37, scope: !17340)
!17364 = !DILocation(line: 261, column: 47, scope: !17340)
!17365 = !DILocation(line: 261, column: 44, scope: !17340)
!17366 = !DILocation(line: 261, column: 2, scope: !17340)
!17367 = !DILocation(line: 0, scope: !17347)
!17368 = !DILocation(line: 263, column: 12, scope: !17347)
!17369 = !DILocation(line: 265, column: 16, scope: !17347)
!17370 = !DILocation(line: 265, column: 13, scope: !17347)
!17371 = !DILocation(line: 266, column: 13, scope: !17347)
!17372 = !DILocation(line: 267, column: 3, scope: !17347)
!17373 = !DILocation(line: 0, scope: !16930, inlinedAt: !17374)
!17374 = distinct !DILocation(line: 269, column: 3, scope: !17347)
!17375 = !DILocation(line: 194, column: 2, scope: !16938, inlinedAt: !17374)
!17376 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17374)
!17377 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17374)
!17378 = !DILocation(line: 0, scope: !16944, inlinedAt: !17379)
!17379 = distinct !DILocation(line: 215, column: 2, scope: !16930, inlinedAt: !17374)
!17380 = !DILocation(line: 95, column: 2, scope: !16944, inlinedAt: !17379)
!17381 = !DILocation(line: 270, column: 6, scope: !17347)
!17382 = !DILocation(line: 270, column: 3, scope: !17347)
!17383 = !DILocation(line: 0, scope: !16857, inlinedAt: !17384)
!17384 = distinct !DILocation(line: 271, column: 9, scope: !17347)
!17385 = !DILocation(line: 55, column: 2, scope: !16866, inlinedAt: !17386)
!17386 = distinct !DILocation(line: 145, column: 10, scope: !16857, inlinedAt: !17384)
!17387 = !DILocation(line: 0, scope: !16866, inlinedAt: !17386)
!17388 = !DILocation(line: 148, column: 2, scope: !16874, inlinedAt: !17384)
!17389 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17384)
!17390 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17384)
!17391 = !DILocation(line: 160, column: 2, scope: !16857, inlinedAt: !17384)
!17392 = !DILocation(line: 272, column: 22, scope: !17347)
!17393 = distinct !{!17393, !17366, !17394}
!17394 = !DILocation(line: 273, column: 2, scope: !17340)
!17395 = !DILocation(line: 276, column: 19, scope: !17396)
!17396 = distinct !DILexicalBlock(scope: !17397, file: !2517, line: 275, column: 23)
!17397 = distinct !DILexicalBlock(scope: !17340, file: !2517, line: 275, column: 6)
!17398 = !DILocation(line: 277, column: 2, scope: !17396)
!17399 = !DILocation(line: 279, column: 15, scope: !17340)
!17400 = !DILocation(line: 279, column: 12, scope: !17340)
!17401 = !DILocation(line: 280, column: 21, scope: !17340)
!17402 = !DILocation(line: 282, column: 24, scope: !17340)
!17403 = !DILocation(line: 282, column: 2, scope: !17340)
!17404 = !DILocation(line: 0, scope: !16930, inlinedAt: !17405)
!17405 = distinct !DILocation(line: 284, column: 2, scope: !17340)
!17406 = !DILocation(line: 194, column: 2, scope: !16938, inlinedAt: !17405)
!17407 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17405)
!17408 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17405)
!17409 = !DILocation(line: 0, scope: !16944, inlinedAt: !17410)
!17410 = distinct !DILocation(line: 215, column: 2, scope: !16930, inlinedAt: !17405)
!17411 = !DILocation(line: 95, column: 2, scope: !16944, inlinedAt: !17410)
!17412 = !DILocation(line: 285, column: 1, scope: !17340)
!17413 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2517, file: !2517, line: 287, type: !17414, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17416)
!17414 = !DISubroutineType(types: !17415)
!17415 = !{!105}
!17416 = !{!17417, !17418, !17420}
!17417 = !DILocalVariable(name: "t", scope: !17413, file: !2517, line: 289, type: !111)
!17418 = !DILocalVariable(name: "__i", scope: !17419, file: !2517, line: 291, type: !16829)
!17419 = distinct !DILexicalBlock(scope: !17413, file: !2517, line: 291, column: 2)
!17420 = !DILocalVariable(name: "__key", scope: !17419, file: !2517, line: 291, type: !16829)
!17421 = !DILocation(line: 0, scope: !17413)
!17422 = !DILocation(line: 0, scope: !17419)
!17423 = !DILocation(line: 0, scope: !16857, inlinedAt: !17424)
!17424 = distinct !DILocation(line: 291, column: 2, scope: !17419)
!17425 = !DILocation(line: 55, column: 2, scope: !16866, inlinedAt: !17426)
!17426 = distinct !DILocation(line: 145, column: 10, scope: !16857, inlinedAt: !17424)
!17427 = !DILocation(line: 0, scope: !16866, inlinedAt: !17426)
!17428 = !DILocation(line: 148, column: 2, scope: !16874, inlinedAt: !17424)
!17429 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17424)
!17430 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17424)
!17431 = !DILocation(line: 160, column: 2, scope: !16857, inlinedAt: !17424)
!17432 = !DILocation(line: 292, column: 7, scope: !17433)
!17433 = distinct !DILexicalBlock(scope: !17434, file: !2517, line: 291, column: 24)
!17434 = distinct !DILexicalBlock(scope: !17419, file: !2517, line: 291, column: 2)
!17435 = !DILocation(line: 292, column: 19, scope: !17433)
!17436 = !DILocation(line: 0, scope: !16930, inlinedAt: !17437)
!17437 = distinct !DILocation(line: 291, column: 2, scope: !17434)
!17438 = !DILocation(line: 194, column: 2, scope: !16938, inlinedAt: !17437)
!17439 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17437)
!17440 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17437)
!17441 = !DILocation(line: 0, scope: !16944, inlinedAt: !17442)
!17442 = distinct !DILocation(line: 215, column: 2, scope: !16930, inlinedAt: !17437)
!17443 = !DILocation(line: 95, column: 2, scope: !16944, inlinedAt: !17442)
!17444 = !DILocation(line: 292, column: 17, scope: !17433)
!17445 = !DILocation(line: 294, column: 2, scope: !17413)
!17446 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2517, file: !2517, line: 297, type: !7393, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2045)
!17447 = !DILocation(line: 300, column: 19, scope: !17446)
!17448 = !DILocation(line: 300, column: 9, scope: !17446)
!17449 = !DILocation(line: 300, column: 2, scope: !17446)
!17450 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2517, file: !2517, line: 306, type: !17414, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2045)
!17451 = !DILocation(line: 308, column: 9, scope: !17450)
!17452 = !DILocation(line: 308, column: 2, scope: !17450)
!17453 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2517, file: !2517, line: 319, type: !6074, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17454)
!17454 = !{!17455, !17456, !17457, !17458}
!17455 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17453, file: !2517, line: 319, type: !110)
!17456 = !DILocalVariable(name: "start_cycles", scope: !17453, file: !2517, line: 328, type: !110)
!17457 = !DILocalVariable(name: "cycles_to_wait", scope: !17453, file: !2517, line: 331, type: !110)
!17458 = !DILocalVariable(name: "current_cycles", scope: !17459, file: !2517, line: 338, type: !110)
!17459 = distinct !DILexicalBlock(scope: !17460, file: !2517, line: 337, column: 11)
!17460 = distinct !DILexicalBlock(scope: !17461, file: !2517, line: 337, column: 2)
!17461 = distinct !DILexicalBlock(scope: !17453, file: !2517, line: 337, column: 2)
!17462 = !DILocation(line: 0, scope: !17453)
!17463 = !DILocation(line: 322, column: 19, scope: !17464)
!17464 = distinct !DILexicalBlock(scope: !17453, file: !2517, line: 322, column: 6)
!17465 = !DILocation(line: 322, column: 6, scope: !17453)
!17466 = !DILocation(line: 328, column: 26, scope: !17453)
!17467 = !DILocation(line: 333, column: 43, scope: !17453)
!17468 = !DILocation(line: 337, column: 2, scope: !17453)
!17469 = !DILocation(line: 338, column: 29, scope: !17459)
!17470 = !DILocation(line: 0, scope: !17459)
!17471 = !DILocation(line: 341, column: 23, scope: !17472)
!17472 = distinct !DILexicalBlock(scope: !17459, file: !2517, line: 341, column: 7)
!17473 = !DILocation(line: 341, column: 39, scope: !17472)
!17474 = !DILocation(line: 349, column: 1, scope: !17453)
!17475 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !118, file: !118, line: 1675, type: !7393, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2045)
!17476 = !DILocation(line: 1677, column: 9, scope: !17475)
!17477 = !DILocation(line: 1677, column: 2, scope: !17475)
!17478 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17479, file: !17479, line: 24, type: !7393, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2045)
!17479 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17480 = !DILocation(line: 26, column: 9, scope: !17478)
!17481 = !DILocation(line: 26, column: 2, scope: !17478)
!17482 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2517, file: !2517, line: 364, type: !17483, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !17485)
!17483 = !DISubroutineType(types: !17484)
!17484 = !{!111, !16819}
!17485 = !{!17486, !17487}
!17486 = !DILocalVariable(name: "timeout", arg: 1, scope: !17482, file: !2517, line: 364, type: !16819)
!17487 = !DILocalVariable(name: "dt", scope: !17482, file: !2517, line: 366, type: !103)
!17488 = !DILocation(line: 0, scope: !17482)
!17489 = !DILocation(line: 368, column: 6, scope: !17482)
!17490 = !DILocation(line: 371, column: 10, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17492, file: !2517, line: 370, column: 47)
!17492 = distinct !DILexicalBlock(scope: !17493, file: !2517, line: 370, column: 13)
!17493 = distinct !DILexicalBlock(scope: !17482, file: !2517, line: 368, column: 6)
!17494 = !DILocation(line: 371, column: 3, scope: !17491)
!17495 = !DILocation(line: 376, column: 58, scope: !17496)
!17496 = distinct !DILexicalBlock(scope: !17497, file: !2517, line: 376, column: 7)
!17497 = distinct !DILexicalBlock(scope: !17492, file: !2517, line: 372, column: 9)
!17498 = !DILocation(line: 376, column: 7, scope: !17497)
!17499 = !DILocation(line: 376, column: 43, scope: !17496)
!17500 = !DILocation(line: 377, column: 4, scope: !17501)
!17501 = distinct !DILexicalBlock(scope: !17496, file: !2517, line: 376, column: 64)
!17502 = !DILocation(line: 379, column: 10, scope: !17497)
!17503 = !DILocation(line: 379, column: 33, scope: !17497)
!17504 = !DILocation(line: 379, column: 31, scope: !17497)
!17505 = !DILocation(line: 379, column: 3, scope: !17497)
!17506 = !DILocation(line: 0, scope: !17493)
!17507 = !DILocation(line: 381, column: 1, scope: !17482)
!17508 = distinct !DISubprogram(name: "boot_banner", scope: !17509, file: !17509, line: 26, type: !3062, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2045)
!17509 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17510 = !DILocation(line: 34, column: 2, scope: !17508)
!17511 = !DILocation(line: 36, column: 1, scope: !17508)
