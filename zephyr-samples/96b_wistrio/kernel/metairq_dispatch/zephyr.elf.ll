; ModuleID = 'build/96b_wistrio/metairq_dispatch/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.k_sem = type { %union.anon, i32, i32 }
%struct.thread_rec = type { %struct.k_thread, %struct.k_msgq, [16 x %struct.msg] }
%struct.k_msgq = type { %union.anon, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.msg = type { i32, i32, i32, i32, i32 }
%struct.anon.3 = type { i32, [40 x i32], [4 x %struct.anon.4] }
%struct.anon.4 = type { i32, [20 x i32] }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238228 to i8*), void (i8*)* inttoptr (i32 134236913 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238228 to i8*), void (i8*)* inttoptr (i32 134236903 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238228 to i8*), void (i8*)* inttoptr (i32 134236893 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238228 to i8*), void (i8*)* inttoptr (i32 134236883 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238228 to i8*), void (i8*)* inttoptr (i32 134236873 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238228 to i8*), void (i8*)* inttoptr (i32 134236863 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238228 to i8*), void (i8*)* inttoptr (i32 134236853 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [41 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_metairq_thread to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.k_sem* @report_cookie to i8*), i8* bitcast (%struct.k_msgq* @hw_msgs to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 3 }, section ".log_const_main", align 4, !dbg !25
@_k_thread_obj_metairq_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !324
@_k_thread_stack_metairq_thread = dso_local global [2112 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !320
@.str.1 = private unnamed_addr constant [15 x i8] c"metairq_thread\00", align 1
@_k_thread_data_metairq_thread = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_metairq_thread, %struct.z_thread_stack_element* getelementptr inbounds ([2112 x %struct.z_thread_stack_element], [2112 x %struct.z_thread_stack_element]* @_k_thread_stack_metairq_thread, i32 0, i32 0), i32 2048, void (i8*, i8*, i8*)* @metairq_fn, i8* null, i8* null, i8* null, i32 -16, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_metairq_thread", align 4, !dbg !118
@metairq_thread = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_metairq_thread, align 4, !dbg !271
@report_cookie = dso_local global %struct.k_sem { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) } } }, i32 1, i32 1 }, section "._k_sem.static.report_cookie", align 4, !dbg !275
@threads = internal global [4 x %struct.thread_rec] zeroinitializer, align 8, !dbg !282
@thread_stacks = dso_local global [4 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !315
@stats = dso_local global %struct.anon.3 zeroinitializer, align 4, !dbg !326
@.str.2 = private unnamed_addr constant [46 x i8] c"%c: Thread %d queue full, message %d dropped\0A\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"%c: Starting Thread%d at priority %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"%c: M%d T%d mirq %d disp %d proc %d real %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"%c:         ---------- Latency (cyc) ----------\0A\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"%c:             Best    Worst     Mean    Stdev\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"%c: MetaIRQ %8d %8d %8d %8d\0A\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"%c: No events for thread %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"%c: Thread%d %8d %8d %8d %8d\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: MetaIRQ Test Complete\0A\00", align 1
@hw_msgs = dso_local global %struct.k_msgq { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 20, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i64 1, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.hw_msgs", align 4, !dbg !352
@_k_fifo_buf_hw_msgs = internal global [40 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/msgdev.c\22.0", align 4, !dbg !389
@max_duty_cyc = dso_local local_unnamed_addr global i32 0, align 4, !dbg !385
@timeout = internal global %struct._timeout zeroinitializer, align 8, !dbg !358
@.str.14 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.24 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.2.16 = private unnamed_addr constant [30 x i8] c"CMAKE_SOURCE_DIR/src/msgdev.c\00", align 1
@msg_seq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !387
@.str.3.15 = private unnamed_addr constant [14 x i8] c"t == &timeout\00", align 1
@.str.4.19 = private unnamed_addr constant [35 x i8] c"ERROR: Queue full, event dropped!\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 0, align 8, !dbg !392
@.str.25 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !418
@.str.1.27 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.28 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.29 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.30 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.31 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.32 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.33 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.34 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.35 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.36 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11.37 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12.38 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !440
@.str.43 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.45 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.46 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.47 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.48 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.49 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.50 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.52 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.53 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.54 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.55 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13.56 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !450
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !514
@.str.69 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.71 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.72 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.70 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.74 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.75 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.73 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.76 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.77 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.78 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.79 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.80 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.81 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.82 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.83 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.86 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.87 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.88 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.89 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.101 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.93 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.94 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.95 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.96 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.97 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.98 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.99 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.100 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.91 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14.92 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.25.90 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.26 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.29 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.31 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.32 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.33 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.34 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.37 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !543
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !676
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !549
@.str.113 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.114 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.115 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.116 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.121 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.122 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !685
@.str.6.123 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.124 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.117 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.118 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !721
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i32 0, i32 0), %struct.k_spinlock { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.134, i32 0, i32 0), %struct.k_spinlock { i32 285933596 } }], align 4, !dbg !731
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !736
@.str.133 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.134 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !756
@.str.136 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.138 = private unnamed_addr constant [42 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio.h\00", align 1
@.str.10.149 = private unnamed_addr constant [62 x i8] c"(cfg->port_pin_mask & (gpio_port_pins_t)(1UL << (pin))) != 0U\00", align 1
@.str.11.150 = private unnamed_addr constant [18 x i8] c"\09Unsupported pin\0A\00", align 1
@.str.12.137 = private unnamed_addr constant [93 x i8] c"(flags & ((1U << 21) | (1U << 22) | (1U << 23) | (1U << 24) | (1U << 25) | (1U << 26))) == 0\00", align 1
@.str.13.139 = private unnamed_addr constant [36 x i8] c"\09Interrupt flags are not supported\0A\00", align 1
@.str.14.140 = private unnamed_addr constant [57 x i8] c"(flags & ((1 << 4) | (1 << 5))) != ((1 << 4) | (1 << 5))\00", align 1
@.str.15.141 = private unnamed_addr constant [61 x i8] c"\09Pull Up and Pull Down should not be enabled simultaneously\0A\00", align 1
@.str.16.142 = private unnamed_addr constant [53 x i8] c"(flags & (1U << 17)) != 0 || (flags & (1 << 1)) == 0\00", align 1
@.str.17.143 = private unnamed_addr constant [82 x i8] c"\09Output needs to be enabled for 'Open Drain', 'Open Source' mode to be supported\0A\00", align 1
@.str.18.144 = private unnamed_addr constant [51 x i8] c"(flags & (1 << 1)) != 0 || (flags & (1 << 2)) == 0\00", align 1
@.str.19.145 = private unnamed_addr constant [70 x i8] c"(flags & ((1U << 18) | (1U << 19))) == 0 || (flags & (1U << 17)) != 0\00", align 1
@.str.20.146 = private unnamed_addr constant [59 x i8] c"\09Output needs to be enabled to be initialized low or high\0A\00", align 1
@.str.21.147 = private unnamed_addr constant [65 x i8] c"(flags & ((1U << 18) | (1U << 19))) != ((1U << 18) | (1U << 19))\00", align 1
@.str.22.148 = private unnamed_addr constant [44 x i8] c"\09Output cannot be initialized low and high\0A\00", align 1
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !864
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1012
@.str.4.151 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !982
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !967
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.151, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !940
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !956
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !984
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !997
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !999
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1001
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1003
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1005
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1007
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1017
@.str.153 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1042
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1119
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1108
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1160
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1033
@.str.164 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !1226
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1472
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1450
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1436
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1384
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1031
@.str.1.174 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1474
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1454
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1452
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1401
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1029
@.str.2.175 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1487
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1458
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1456
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1410
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1027
@.str.3.176 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1489
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1462
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1460
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1419
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1025
@.str.4.177 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1491
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1466
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1464
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1425
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1023
@.str.5.178 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1493
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1470
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1468
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1434
@.str.6.165 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.29.171 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.30.167 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.31.170 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.32.166 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.33.168 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.34.169 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.182 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.182, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1495
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1037
@.str.1.183 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !1655
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1710
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1651
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1712
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.183, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1636
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1638
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1035
@.str.2.192 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1718
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1653
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1728
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.192, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1647
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1649
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !1699
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1702
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1704
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1707
@.str.3.185 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.4.186 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.187 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.6.188 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.7.189 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.8.195 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.9.197 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.10.198 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.153, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1092
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !1720
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1722
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1724
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1726
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.11 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1735
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1846
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1848
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1844
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1839
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1813
@.str.202 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.203 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.204 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.205 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.206 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.207 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1850
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.164, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1382
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.174, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1399
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.175, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1408
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.176, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1417
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.177, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1423
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.178, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1432
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1937
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !1961
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !1964
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1968
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1972
@.str.240 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.244 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.245 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.246 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.247 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.248 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.249 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.250 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.254 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.255 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.256 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.257 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.258 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.253 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.252 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.254, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.255, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.256, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.257, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.258, i32 0, i32 0)], align 4
@.str.260 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.260, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1979
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2204
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2191
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2199
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2210
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2215
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.269 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.275, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.276, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.277, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.278, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.279, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.280, i32 0, i32 0)], align 4, !dbg !2243
@.str.274 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.275 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.276 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.277 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.278 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.279 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.273 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.280 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2357
@.str.8.272 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.283 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.284 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.285 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.286 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.290 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.291 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.294 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.295 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.304 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.305 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.306 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.313 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.314 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.315 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.316 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.317 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.318 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.319 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.320 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.321 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@lock.326 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2370
@.str.327 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.333 = private unnamed_addr constant [78 x i8] c"((arch_is_in_isr() == 0) || ((timeout).ticks == (((k_timeout_t) {0})).ticks))\00", align 1
@.str.2.334 = private unnamed_addr constant [25 x i8] c"ZEPHYR_BASE/kernel/sem.c\00", align 1
@.str.3.335 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.328 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.329 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.330 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.336 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.337 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2395
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2505
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2508
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2510
@.str.338 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.358 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.345 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.365 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.375 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.348 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.370 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.344 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.382 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.383 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.391 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.392 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.393 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.394 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.339 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.340 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.341 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.342 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.343 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.347 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.362 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.371 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.372 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2201
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2208
@.str.23.386 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.400 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.401 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.402 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.403 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2512
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2542
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2547
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2066
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2545
@.str.4.404 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.405 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.406 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.410 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.411 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.431 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2553
@.str.433 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.442 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.435 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.443 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.434 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.436 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.439 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.440 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.441 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.444 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.445 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3258 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #26, !dbg !3260, !srcloc !3261
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #26, !dbg !3262, !srcloc !3263
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #26, !dbg !3264, !srcloc !3265
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -26) #26, !dbg !3266, !srcloc !3267
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -29) #26, !dbg !3268, !srcloc !3269
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #26, !dbg !3270, !srcloc !3271
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -29) #26, !dbg !3272, !srcloc !3273
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #26, !dbg !3274, !srcloc !3275
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -41) #26, !dbg !3276, !srcloc !3277
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #26, !dbg !3278, !srcloc !3279
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #26, !dbg !3280, !srcloc !3281
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #26, !dbg !3282, !srcloc !3283
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #26, !dbg !3284, !srcloc !3285
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #26, !dbg !3286, !srcloc !3287
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #26, !dbg !3288, !srcloc !3289
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #26, !dbg !3290, !srcloc !3291
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #26, !dbg !3292, !srcloc !3293
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #26, !dbg !3294, !srcloc !3295
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3296, !srcloc !3297
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #26, !dbg !3298, !srcloc !3299
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #26, !dbg !3300, !srcloc !3301
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3302, !srcloc !3303
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #26, !dbg !3304, !srcloc !3305
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #26, !dbg !3306, !srcloc !3307
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #26, !dbg !3308, !srcloc !3309
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #26, !dbg !3310, !srcloc !3311
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #26, !dbg !3312, !srcloc !3313
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #26, !dbg !3314, !srcloc !3317
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #26, !dbg !3318, !srcloc !3319
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3320, !srcloc !3321
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3322, !srcloc !3323
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3324, !srcloc !3325
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3326, !srcloc !3327
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #26, !dbg !3328, !srcloc !3329
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #26, !dbg !3330, !srcloc !3331
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #26, !dbg !3332, !srcloc !3333
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #26, !dbg !3334, !srcloc !3335
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3336, !srcloc !3337
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #26, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #26, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #26, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #26, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #26, !dbg !3356, !srcloc !3357
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #26, !dbg !3358, !srcloc !3359
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #26, !dbg !3362, !srcloc !3363
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3364, !srcloc !3365
  ret void, !dbg !3366
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @metairq_fn(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !3369 {
  %4 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3371, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata i8* %1, metadata !3372, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata i8* %2, metadata !3373, metadata !DIExpression()), !dbg !3377
  %5 = bitcast %struct.msg* %4 to i8*
  %6 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %8 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2
  %9 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  br label %10, !dbg !3378

10:                                               ; preds = %3, %23
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #26, !dbg !3379
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !3374, metadata !DIExpression()), !dbg !3380
  call void @message_dev_fetch(%struct.msg* noundef nonnull %4) #27, !dbg !3381
  %11 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3382
  %12 = load i32, i32* %6, align 4, !dbg !3383
  %13 = sub i32 %11, %12, !dbg !3384
  store i32 %13, i32* %7, align 4, !dbg !3385
  %14 = load i32, i32* %8, align 4, !dbg !3386
  %15 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %14, i32 1, !dbg !3387
  %16 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %15, i8* noundef nonnull %5) #28, !dbg !3388
  call void @llvm.dbg.value(metadata i32 %16, metadata !3376, metadata !DIExpression()), !dbg !3389
  %17 = icmp eq i32 %16, 0, !dbg !3390
  br i1 %17, label %23, label %18, !dbg !3392

18:                                               ; preds = %10
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3393
  %20 = zext i8 %19 to i32, !dbg !3393
  %21 = load i32, i32* %8, align 4, !dbg !3393
  %22 = load i32, i32* %9, align 4, !dbg !3393
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i32 0, i32 0), i32 noundef %20, i32 noundef %21, i32 noundef %22) #27, !dbg !3393
  br label %23, !dbg !3399

23:                                               ; preds = %18, %10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #26, !dbg !3400
  br label %10, !dbg !3378, !llvm.loop !3401
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !3402 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #28, !dbg !3403
  ret i32 %1, !dbg !3404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3405 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3417, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !3415, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i8* %1, metadata !3416, metadata !DIExpression()), !dbg !3418
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3419, !srcloc !3421
  %3 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] zeroinitializer) #27, !dbg !3422
  ret i32 %3, !dbg !3423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !3424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3429, metadata !DIExpression()), !dbg !3430
  %2 = icmp eq i32 %0, 2, !dbg !3431
  %3 = select i1 %2, i8 87, i8 63, !dbg !3431
  %4 = icmp eq i32 %0, 3, !dbg !3431
  %5 = select i1 %4, i8 73, i8 %3, !dbg !3431
  ret i8 %5, !dbg !3432
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !3433 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !3435
  ret i32 %1, !dbg !3436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3437 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3439, metadata !DIExpression()), !dbg !3444
  br label %2, !dbg !3445

1:                                                ; preds = %2
  tail call void @message_dev_init() #27, !dbg !3446
  ret void, !dbg !3447

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %11, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !3439, metadata !DIExpression()), !dbg !3444
  %4 = add nsw i32 %3, -2, !dbg !3448
  call void @llvm.dbg.value(metadata i32 %4, metadata !3441, metadata !DIExpression()), !dbg !3449
  %5 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 1, !dbg !3450
  %6 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 2, i32 0, !dbg !3451
  %7 = bitcast %struct.msg* %6 to i8*, !dbg !3452
  tail call void @k_msgq_init(%struct.k_msgq* noundef nonnull %5, i8* noundef nonnull %7, i32 noundef 20, i32 noundef 16) #27, !dbg !3453
  %8 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 0, !dbg !3454
  %9 = getelementptr inbounds [4 x [2112 x %struct.z_thread_stack_element]], [4 x [2112 x %struct.z_thread_stack_element]]* @thread_stacks, i32 0, i32 %3, i32 0, !dbg !3455
  %10 = inttoptr i32 %3 to i8*, !dbg !3456
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %8, %struct.z_thread_stack_element* noundef nonnull %9, i8* noundef %10, i32 noundef %4) #28, !dbg !3457
  %11 = add nuw nsw i32 %3, 1, !dbg !3458
  call void @llvm.dbg.value(metadata i32 %11, metadata !3439, metadata !DIExpression()), !dbg !3444
  %12 = icmp eq i32 %11, 4, !dbg !3459
  br i1 %12, label %1, label %2, !dbg !3445, !llvm.loop !3460
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3462 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3475, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3466, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3467, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.value(metadata i32 2048, metadata !3468, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @thread_fn, metadata !3469, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.value(metadata i8* %2, metadata !3470, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.value(metadata i8* null, metadata !3471, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.value(metadata i8* null, metadata !3472, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.value(metadata i32 %3, metadata !3473, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.value(metadata i32 0, metadata !3474, metadata !DIExpression()), !dbg !3476
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3477, !srcloc !3479
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 2048, void (i8*, i8*, i8*)* noundef nonnull @thread_fn, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef %3, i32 noundef 0, [1 x i64] zeroinitializer) #27, !dbg !3480
  ret void, !dbg !3481
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @thread_fn(i8* noundef %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !3482 {
  %4 = alloca %struct.msg, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3484, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata i8* %1, metadata !3485, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata i8* %2, metadata !3486, metadata !DIExpression()), !dbg !3497
  %6 = ptrtoint i8* %0 to i32, !dbg !3498
  call void @llvm.dbg.value(metadata i32 %6, metadata !3487, metadata !DIExpression()), !dbg !3497
  %7 = bitcast %struct.msg* %4 to i8*, !dbg !3499
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3499
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !3488, metadata !DIExpression()), !dbg !3500
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3501
  %9 = zext i8 %8 to i32, !dbg !3501
  %10 = tail call fastcc %struct.k_thread* @k_current_get() #29, !dbg !3501
  %11 = tail call fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %10) #28, !dbg !3501
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i32 0, i32 0), i32 noundef %9, i32 noundef %6, i32 noundef %11) #27, !dbg !3501
  %12 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %6, i32 1
  %13 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #28, !dbg !3506
  call void @llvm.dbg.value(metadata i32 %13, metadata !3489, metadata !DIExpression()), !dbg !3507
  %14 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3508
  call void @llvm.dbg.value(metadata i32 %14, metadata !3491, metadata !DIExpression()), !dbg !3507
  %15 = icmp eq i32 %13, 0, !dbg !3509
  br i1 %15, label %16, label %28, !dbg !3512

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  %19 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %21 = bitcast i32* %5 to i8*
  br label %22, !dbg !3512

22:                                               ; preds = %16, %42
  %23 = phi i32 [ %14, %16 ], [ %53, %42 ]
  %24 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3513
  %25 = sub i32 %24, %23, !dbg !3514
  %26 = load i32, i32* %17, align 4, !dbg !3515
  %27 = icmp ult i32 %25, %26, !dbg !3516
  br i1 %27, label %29, label %42, !dbg !3517

28:                                               ; preds = %42, %3
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #27, !dbg !3518
  call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #27, !dbg !3518
  unreachable, !dbg !3518

29:                                               ; preds = %22, %32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !3520
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3492, metadata !DIExpression()), !dbg !3521
  store volatile i32 0, i32* %5, align 4, !dbg !3521
  %30 = load volatile i32, i32* %5, align 4, !dbg !3522
  %31 = icmp slt i32 %30, 100, !dbg !3524
  br i1 %31, label %37, label %32, !dbg !3525

32:                                               ; preds = %37, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21), !dbg !3526
  %33 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3513
  %34 = sub i32 %33, %23, !dbg !3514
  %35 = load i32, i32* %17, align 4, !dbg !3515
  %36 = icmp ult i32 %34, %35, !dbg !3516
  br i1 %36, label %29, label %42, !dbg !3517, !llvm.loop !3527

37:                                               ; preds = %29, %37
  %38 = load volatile i32, i32* %5, align 4, !dbg !3529
  %39 = add nsw i32 %38, 1, !dbg !3529
  store volatile i32 %39, i32* %5, align 4, !dbg !3529
  %40 = load volatile i32, i32* %5, align 4, !dbg !3522
  %41 = icmp slt i32 %40, 100, !dbg !3524
  br i1 %41, label %37, label %32, !dbg !3525, !llvm.loop !3530

42:                                               ; preds = %32, %22
  %43 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3532
  %44 = sub i32 %43, %23, !dbg !3533
  call void @llvm.dbg.value(metadata i32 %44, metadata !3496, metadata !DIExpression()), !dbg !3507
  %45 = load i32, i32* %18, align 4, !dbg !3534
  %46 = load i32, i32* %19, align 4, !dbg !3534
  %47 = load i32, i32* %20, align 4, !dbg !3534
  %48 = sub i32 %23, %47, !dbg !3534
  %49 = load i32, i32* %17, align 4, !dbg !3534
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i32 0, i32 0), i32 noundef %9, i32 noundef %45, i32 noundef %6, i32 noundef %46, i32 noundef %48, i32 noundef %49, i32 noundef %44) #27, !dbg !3534
  %50 = load i32, i32* %20, align 4, !dbg !3539
  %51 = sub i32 %23, %50, !dbg !3540
  call fastcc void @record_latencies(%struct.msg* noundef nonnull %4, i32 noundef %51) #28, !dbg !3541
  %52 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #28, !dbg !3506
  call void @llvm.dbg.value(metadata i32 %52, metadata !3489, metadata !DIExpression()), !dbg !3507
  %53 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3508
  call void @llvm.dbg.value(metadata i32 %53, metadata !3491, metadata !DIExpression()), !dbg !3507
  %54 = icmp eq i32 %52, 0, !dbg !3509
  br i1 %54, label %22, label %28, !dbg !3512, !llvm.loop !3542
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #6 !dbg !3545 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #29, !dbg !3548
  ret %struct.k_thread* %1, !dbg !3549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3554, metadata !DIExpression()), !dbg !3555
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3556, !srcloc !3558
  %2 = tail call i32 @z_impl_k_thread_priority_get(%struct.k_thread* noundef %0) #27, !dbg !3559
  ret i32 %2, !dbg !3560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3561 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3567, metadata !DIExpression()), !dbg !3568
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !3565, metadata !DIExpression()), !dbg !3568
  call void @llvm.dbg.value(metadata i8* %1, metadata !3566, metadata !DIExpression()), !dbg !3568
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3569, !srcloc !3571
  %3 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] [i64 -1]) #27, !dbg !3572
  ret i32 %3, !dbg !3573
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @record_latencies(%struct.msg* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !3574 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !3579, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata i32 %1, metadata !3580, metadata !DIExpression()), !dbg !3592
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !3593
  %8 = load i32, i32* %7, align 4, !dbg !3593
  %9 = icmp ugt i32 %8, 39, !dbg !3595
  br i1 %9, label %60, label %10, !dbg !3596

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !3597
  %12 = load i32, i32* %11, align 4, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %12, metadata !3581, metadata !DIExpression()), !dbg !3592
  %13 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 0, !dbg !3598
  %14 = load i32, i32* %13, align 4, !dbg !3599
  %15 = add i32 %14, 1, !dbg !3599
  store i32 %15, i32* %13, align 4, !dbg !3599
  call void @llvm.dbg.value(metadata i32 %14, metadata !3582, metadata !DIExpression()), !dbg !3592
  %16 = icmp ult i32 %14, 20, !dbg !3600
  br i1 %16, label %17, label %19, !dbg !3602

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 1, i32 %14, !dbg !3603
  store i32 %1, i32* %18, align 4, !dbg !3605
  br label %19, !dbg !3606

19:                                               ; preds = %17, %10
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !3607
  %21 = load i32, i32* %20, align 4, !dbg !3607
  %22 = tail call fastcc i32 @atomic_inc() #28, !dbg !3608
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 %22, !dbg !3609
  store i32 %21, i32* %23, align 4, !dbg !3610
  %24 = load i32, i32* %7, align 4, !dbg !3611
  %25 = icmp eq i32 %24, 39, !dbg !3612
  br i1 %25, label %26, label %60, !dbg !3613

26:                                               ; preds = %19
  %27 = bitcast i32* %3 to i8*, !dbg !3614
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #26, !dbg !3614
  %28 = bitcast i32* %4 to i8*, !dbg !3614
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #26, !dbg !3614
  %29 = bitcast i32* %5 to i8*, !dbg !3614
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #26, !dbg !3614
  %30 = bitcast i32* %6 to i8*, !dbg !3614
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #26, !dbg !3614
  %31 = tail call fastcc i32 @k_sem_take() #28, !dbg !3615
  call void @llvm.dbg.value(metadata i32 %31, metadata !3589, metadata !DIExpression()), !dbg !3616
  %32 = icmp eq i32 %31, 0, !dbg !3617
  br i1 %32, label %34, label %33, !dbg !3620

33:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #27, !dbg !3621
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #27, !dbg !3621
  unreachable, !dbg !3621

34:                                               ; preds = %26
  tail call fastcc void @k_msleep() #28, !dbg !3623
  %35 = load i32, i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), align 4, !dbg !3624
  call void @llvm.dbg.value(metadata i32* %3, metadata !3583, metadata !DIExpression(DW_OP_deref)), !dbg !3616
  call void @llvm.dbg.value(metadata i32* %4, metadata !3586, metadata !DIExpression(DW_OP_deref)), !dbg !3616
  call void @llvm.dbg.value(metadata i32* %5, metadata !3587, metadata !DIExpression(DW_OP_deref)), !dbg !3616
  call void @llvm.dbg.value(metadata i32* %6, metadata !3588, metadata !DIExpression(DW_OP_deref)), !dbg !3616
  call fastcc void @calc_stats(i32* noundef getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 0), i32 noundef %35, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #28, !dbg !3625
  %36 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3626
  %37 = zext i8 %36 to i32, !dbg !3626
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i32 0, i32 0), i32 noundef %37) #27, !dbg !3626
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 noundef %37) #27, !dbg !3631
  %38 = load i32, i32* %4, align 4, !dbg !3636
  call void @llvm.dbg.value(metadata i32 %38, metadata !3586, metadata !DIExpression()), !dbg !3616
  %39 = load i32, i32* %3, align 4, !dbg !3636
  call void @llvm.dbg.value(metadata i32 %39, metadata !3583, metadata !DIExpression()), !dbg !3616
  %40 = load i32, i32* %5, align 4, !dbg !3636
  call void @llvm.dbg.value(metadata i32 %40, metadata !3587, metadata !DIExpression()), !dbg !3616
  %41 = load i32, i32* %6, align 4, !dbg !3636
  call void @llvm.dbg.value(metadata i32 %41, metadata !3588, metadata !DIExpression()), !dbg !3616
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i32 0, i32 0), i32 noundef %37, i32 noundef %38, i32 noundef %39, i32 noundef %40, i32 noundef %41) #27, !dbg !3636
  call void @llvm.dbg.value(metadata i32 0, metadata !3590, metadata !DIExpression()), !dbg !3641
  br label %43, !dbg !3642

42:                                               ; preds = %57
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef %37) #27, !dbg !3643
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #26, !dbg !3648
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #26, !dbg !3648
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #26, !dbg !3648
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #26, !dbg !3648
  br label %60, !dbg !3649

43:                                               ; preds = %34, %57
  %44 = phi i32 [ 0, %34 ], [ %58, %57 ]
  call void @llvm.dbg.value(metadata i32 %44, metadata !3590, metadata !DIExpression()), !dbg !3641
  %45 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 0, !dbg !3650
  %46 = load i32, i32* %45, align 4, !dbg !3650
  %47 = icmp eq i32 %46, 0, !dbg !3654
  br i1 %47, label %48, label %51, !dbg !3655

48:                                               ; preds = %43
  %49 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 2) #28, !dbg !3656
  %50 = zext i8 %49 to i32, !dbg !3656
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i32 0, i32 0), i32 noundef %50, i32 noundef %44) #27, !dbg !3656
  br label %57, !dbg !3662

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 1, i32 0, !dbg !3663
  call void @llvm.dbg.value(metadata i32* %3, metadata !3583, metadata !DIExpression(DW_OP_deref)), !dbg !3616
  call void @llvm.dbg.value(metadata i32* %4, metadata !3586, metadata !DIExpression(DW_OP_deref)), !dbg !3616
  call void @llvm.dbg.value(metadata i32* %5, metadata !3587, metadata !DIExpression(DW_OP_deref)), !dbg !3616
  call void @llvm.dbg.value(metadata i32* %6, metadata !3588, metadata !DIExpression(DW_OP_deref)), !dbg !3616
  call fastcc void @calc_stats(i32* noundef nonnull %52, i32 noundef %46, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #28, !dbg !3664
  %53 = load i32, i32* %4, align 4, !dbg !3665
  call void @llvm.dbg.value(metadata i32 %53, metadata !3586, metadata !DIExpression()), !dbg !3616
  %54 = load i32, i32* %3, align 4, !dbg !3665
  call void @llvm.dbg.value(metadata i32 %54, metadata !3583, metadata !DIExpression()), !dbg !3616
  %55 = load i32, i32* %5, align 4, !dbg !3665
  call void @llvm.dbg.value(metadata i32 %55, metadata !3587, metadata !DIExpression()), !dbg !3616
  %56 = load i32, i32* %6, align 4, !dbg !3665
  call void @llvm.dbg.value(metadata i32 %56, metadata !3588, metadata !DIExpression()), !dbg !3616
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i32 noundef %37, i32 noundef %44, i32 noundef %53, i32 noundef %54, i32 noundef %55, i32 noundef %56) #27, !dbg !3665
  br label %57, !dbg !3670

57:                                               ; preds = %51, %48
  %58 = add nuw nsw i32 %44, 1, !dbg !3671
  call void @llvm.dbg.value(metadata i32 %58, metadata !3590, metadata !DIExpression()), !dbg !3641
  %59 = icmp eq i32 %58, 4, !dbg !3672
  br i1 %59, label %42, label %43, !dbg !3642, !llvm.loop !3673

60:                                               ; preds = %19, %42, %2
  ret void, !dbg !3675
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_inc() unnamed_addr #7 !dbg !3676 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3683, metadata !DIExpression()), !dbg !3684
  %1 = tail call fastcc i32 @atomic_add() #28, !dbg !3685
  ret i32 %1, !dbg !3686
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take() unnamed_addr #1 !dbg !3687 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3693, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.value(metadata %struct.k_sem* @report_cookie, metadata !3692, metadata !DIExpression()), !dbg !3694
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3695, !srcloc !3697
  %1 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef nonnull @report_cookie, [1 x i64] [i64 -1]) #27, !dbg !3698
  ret i32 %1, !dbg !3699
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3700 {
  call void @llvm.dbg.value(metadata i32 100, metadata !3704, metadata !DIExpression()), !dbg !3705
  tail call fastcc void @k_sleep([1 x i64] [i64 1000]) #28, !dbg !3706
  ret void, !dbg !3707
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc void @calc_stats(i32* nocapture noundef readonly %0, i32 noundef %1, i32* nocapture noundef %2, i32* nocapture noundef %3, i32* nocapture noundef %4, i32* nocapture noundef writeonly %5) unnamed_addr #8 !dbg !3708 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3714, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i32 %1, metadata !3715, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i32* %2, metadata !3716, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i32* %3, metadata !3717, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i32* %4, metadata !3718, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i32* %5, metadata !3719, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i64 0, metadata !3720, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i64 0, metadata !3721, metadata !DIExpression()), !dbg !3729
  store i32 2147483647, i32* %2, align 4, !dbg !3730
  store i32 0, i32* %3, align 4, !dbg !3731
  call void @llvm.dbg.value(metadata i32 0, metadata !3722, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i64 0, metadata !3720, metadata !DIExpression()), !dbg !3729
  %7 = icmp eq i32 %1, 0, !dbg !3733
  br i1 %7, label %8, label %21, !dbg !3735

8:                                                ; preds = %6
  %9 = lshr i32 %1, 1, !dbg !3736
  %10 = trunc i32 %9 to i8, !dbg !3737
  %11 = trunc i32 %1 to i8, !dbg !3737
  %12 = udiv i8 %10, %11, !dbg !3737
  %13 = zext i8 %12 to i32, !dbg !3738
  store i32 %13, i32* %4, align 4, !dbg !3739
  call void @llvm.dbg.value(metadata i32 0, metadata !3724, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i64 0, metadata !3721, metadata !DIExpression()), !dbg !3729
  br label %38, !dbg !3741

14:                                               ; preds = %21
  %15 = lshr i32 %1, 1, !dbg !3736
  %16 = zext i32 %15 to i64, !dbg !3742
  %17 = add i64 %35, %16, !dbg !3743
  %18 = zext i32 %1 to i64, !dbg !3744
  %19 = udiv i64 %17, %18, !dbg !3737
  %20 = trunc i64 %19 to i32, !dbg !3738
  store i32 %20, i32* %4, align 4, !dbg !3739
  call void @llvm.dbg.value(metadata i32 0, metadata !3724, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i64 0, metadata !3721, metadata !DIExpression()), !dbg !3729
  br i1 %7, label %38, label %45, !dbg !3741

21:                                               ; preds = %6, %21
  %22 = phi i64 [ %35, %21 ], [ 0, %6 ]
  %23 = phi i32 [ %36, %21 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3720, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i32 %23, metadata !3722, metadata !DIExpression()), !dbg !3732
  %24 = load i32, i32* %2, align 4, !dbg !3745
  %25 = getelementptr inbounds i32, i32* %0, i32 %23, !dbg !3745
  %26 = load i32, i32* %25, align 4, !dbg !3745
  %27 = icmp ult i32 %24, %26, !dbg !3745
  %28 = select i1 %27, i32 %24, i32 %26, !dbg !3745
  store i32 %28, i32* %2, align 4, !dbg !3747
  %29 = load i32, i32* %3, align 4, !dbg !3748
  %30 = load i32, i32* %25, align 4, !dbg !3748
  %31 = icmp ugt i32 %29, %30, !dbg !3748
  %32 = select i1 %31, i32 %29, i32 %30, !dbg !3748
  store i32 %32, i32* %3, align 4, !dbg !3749
  %33 = load i32, i32* %25, align 4, !dbg !3750
  %34 = zext i32 %33 to i64, !dbg !3750
  %35 = add i64 %22, %34, !dbg !3751
  call void @llvm.dbg.value(metadata i64 %35, metadata !3720, metadata !DIExpression()), !dbg !3729
  %36 = add nuw nsw i32 %23, 1, !dbg !3752
  call void @llvm.dbg.value(metadata i32 %36, metadata !3722, metadata !DIExpression()), !dbg !3732
  %37 = icmp eq i32 %36, %1, !dbg !3733
  br i1 %37, label %14, label %21, !dbg !3735, !llvm.loop !3753

38:                                               ; preds = %45, %8, %14
  %39 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %18, %45 ]
  %40 = phi i64 [ %16, %14 ], [ 0, %8 ], [ %16, %45 ]
  %41 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %53, %45 ], !dbg !3729
  %42 = add i64 %41, %40, !dbg !3755
  %43 = udiv i64 %42, %39, !dbg !3756
  %44 = tail call fastcc i32 @isqrt(i64 noundef %43) #28, !dbg !3757
  store i32 %44, i32* %5, align 4, !dbg !3758
  ret void, !dbg !3759

45:                                               ; preds = %14, %45
  %46 = phi i32 [ %54, %45 ], [ 0, %14 ]
  %47 = phi i64 [ %53, %45 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !3724, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i64 %47, metadata !3721, metadata !DIExpression()), !dbg !3729
  %48 = getelementptr inbounds i32, i32* %0, i32 %46, !dbg !3760
  %49 = load i32, i32* %48, align 4, !dbg !3760
  %50 = sub i32 %49, %20, !dbg !3761
  %51 = sext i32 %50 to i64, !dbg !3762
  call void @llvm.dbg.value(metadata i64 %51, metadata !3726, metadata !DIExpression()), !dbg !3763
  %52 = mul nsw i64 %51, %51, !dbg !3764
  %53 = add i64 %52, %47, !dbg !3765
  call void @llvm.dbg.value(metadata i64 %53, metadata !3721, metadata !DIExpression()), !dbg !3729
  %54 = add nuw nsw i32 %46, 1, !dbg !3766
  call void @llvm.dbg.value(metadata i32 %54, metadata !3724, metadata !DIExpression()), !dbg !3740
  %55 = icmp eq i32 %54, %1, !dbg !3767
  br i1 %55, label %38, label %45, !dbg !3741, !llvm.loop !3768
}

; Function Attrs: nofree noinline nosync nounwind optsize readnone
define internal fastcc i32 @isqrt(i64 noundef %0) unnamed_addr #9 !dbg !3770 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3774, metadata !DIExpression()), !dbg !3779
  %2 = icmp ugt i64 %0, 1, !dbg !3780
  %3 = trunc i64 %0 to i32, !dbg !3781
  br i1 %2, label %6, label %4, !dbg !3781

4:                                                ; preds = %1, %6
  %5 = phi i32 [ %15, %6 ], [ %3, %1 ]
  ret i32 %5, !dbg !3782

6:                                                ; preds = %1
  %7 = lshr i64 %0, 2, !dbg !3783
  %8 = tail call fastcc i32 @isqrt(i64 noundef %7) #28, !dbg !3784
  %9 = shl i32 %8, 1, !dbg !3785
  %10 = zext i32 %9 to i64, !dbg !3784
  call void @llvm.dbg.value(metadata i64 %10, metadata !3775, metadata !DIExpression()), !dbg !3786
  %11 = or i64 %10, 1, !dbg !3787
  call void @llvm.dbg.value(metadata i64 %11, metadata !3778, metadata !DIExpression()), !dbg !3786
  %12 = mul nuw i64 %11, %11, !dbg !3788
  %13 = icmp ugt i64 %12, %0, !dbg !3789
  %14 = select i1 %13, i64 %10, i64 %11, !dbg !3790
  %15 = trunc i64 %14 to i32
  br label %4
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3791 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3795, metadata !DIExpression()), !dbg !3796
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3797, !srcloc !3799
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #27, !dbg !3800
  ret void, !dbg !3801
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_add() unnamed_addr #7 !dbg !3802 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3806, metadata !DIExpression()), !dbg !3808
  call void @llvm.dbg.value(metadata i32 1, metadata !3807, metadata !DIExpression()), !dbg !3808
  %1 = atomicrmw add i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), i32 1 seq_cst, align 4, !dbg !3809
  ret i32 %1, !dbg !3810
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #6 !dbg !3811 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3812, !srcloc !3814
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !3815
  ret %struct.k_thread* %1, !dbg !3816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_init() local_unnamed_addr #1 !dbg !3817 {
  call void @llvm.dbg.value(metadata i64 3200, metadata !3819, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i64 4, metadata !3820, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i64 12800, metadata !3821, metadata !DIExpression()), !dbg !3822
  store i32 15360, i32* @max_duty_cyc, align 4, !dbg !3823
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] zeroinitializer) #27, !dbg !3824
  ret void, !dbg !3825
}

; Function Attrs: noinline nounwind optsize
define internal void @dev_timer_expired(%struct._timeout* noundef readnone %0) #1 !dbg !3826 {
  %2 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !3828, metadata !DIExpression()), !dbg !3839
  %3 = icmp eq %struct._timeout* %0, @timeout, !dbg !3840
  br i1 %3, label %5, label %4, !dbg !3843

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #27, !dbg !3844
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #27, !dbg !3844
  unreachable, !dbg !3844

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @k_cycle_get_32.17() #28, !dbg !3846
  call void @llvm.dbg.value(metadata i32 %6, metadata !3829, metadata !DIExpression()), !dbg !3839
  %7 = bitcast %struct.msg* %2 to i8*, !dbg !3847
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3847
  call void @llvm.dbg.declare(metadata %struct.msg* %2, metadata !3830, metadata !DIExpression()), !dbg !3848
  %8 = load i32, i32* @msg_seq, align 4, !dbg !3849
  %9 = add i32 %8, 1, !dbg !3849
  store i32 %9, i32* @msg_seq, align 4, !dbg !3849
  %10 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 0, !dbg !3850
  store i32 %8, i32* %10, align 4, !dbg !3851
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 1, !dbg !3852
  store i32 %6, i32* %11, align 4, !dbg !3853
  %12 = tail call fastcc i32 @rand32() #28, !dbg !3854
  %13 = and i32 %12, 3, !dbg !3855
  %14 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 2, !dbg !3856
  store i32 %13, i32* %14, align 4, !dbg !3857
  %15 = tail call fastcc i32 @rand32() #28, !dbg !3858
  %16 = load i32, i32* @max_duty_cyc, align 4, !dbg !3859
  %17 = urem i32 %15, %16, !dbg !3860
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 3, !dbg !3861
  store i32 %17, i32* %18, align 4, !dbg !3862
  %19 = call fastcc i32 @k_msgq_put.18(i8* noundef nonnull %7) #28, !dbg !3863
  call void @llvm.dbg.value(metadata i32 %19, metadata !3838, metadata !DIExpression()), !dbg !3839
  %20 = icmp eq i32 %19, 0, !dbg !3864
  br i1 %20, label %22, label %21, !dbg !3866

21:                                               ; preds = %5
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.19, i32 0, i32 0)) #27, !dbg !3867
  br label %22, !dbg !3869

22:                                               ; preds = %21, %5
  %23 = load i32, i32* %10, align 4, !dbg !3870
  %24 = icmp ult i32 %23, 40, !dbg !3872
  br i1 %24, label %25, label %26, !dbg !3873

25:                                               ; preds = %22
  call fastcc void @timeout_reset() #28, !dbg !3874
  br label %26, !dbg !3876

26:                                               ; preds = %25, %22
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3877
  ret void, !dbg !3877
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.17() unnamed_addr #1 !dbg !3878 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.20() #28, !dbg !3879
  ret i32 %1, !dbg !3880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @rand32() unnamed_addr #1 !dbg !394 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !3881
  %2 = icmp eq i64 %1, 0, !dbg !3881
  br i1 %2, label %3, label %7, !dbg !3883

3:                                                ; preds = %0
  %4 = tail call fastcc i32 @k_cycle_get_32.17() #28, !dbg !3884
  %5 = zext i32 %4 to i64, !dbg !3886
  %6 = shl nuw nsw i64 %5, 16, !dbg !3887
  br label %7, !dbg !3888

7:                                                ; preds = %3, %0
  %8 = phi i64 [ %6, %3 ], [ %1, %0 ], !dbg !3889
  %9 = mul i64 %8, 6364136223846793005, !dbg !3890
  %10 = add i64 %9, 1442695040888963407, !dbg !3891
  store i64 %10, i64* @rand32.state, align 8, !dbg !3892
  %11 = lshr i64 %10, 32, !dbg !3893
  %12 = trunc i64 %11 to i32, !dbg !3894
  ret i32 %12, !dbg !3895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put.18(i8* noundef %0) unnamed_addr #1 !dbg !3896 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3907, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3905, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata i8* %0, metadata !3906, metadata !DIExpression()), !dbg !3908
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3909, !srcloc !3911
  %2 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] zeroinitializer) #27, !dbg !3912
  ret i32 %2, !dbg !3913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @timeout_reset() unnamed_addr #1 !dbg !3914 {
  %1 = tail call fastcc i32 @rand32() #28, !dbg !3917
  %2 = and i32 %1, 7, !dbg !3918
  call void @llvm.dbg.value(metadata i32 %2, metadata !3916, metadata !DIExpression()), !dbg !3919
  %3 = zext i32 %2 to i64, !dbg !3920
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3921
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] %4) #27, !dbg !3921
  ret void, !dbg !3922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.20() unnamed_addr #1 !dbg !3923 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !3924
  ret i32 %1, !dbg !3925
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_fetch(%struct.msg* noundef %0) local_unnamed_addr #1 !dbg !3926 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !3931, metadata !DIExpression()), !dbg !3933
  %2 = bitcast %struct.msg* %0 to i8*, !dbg !3934
  %3 = tail call fastcc i32 @k_msgq_get.23(i8* noundef %2) #28, !dbg !3935
  call void @llvm.dbg.value(metadata i32 %3, metadata !3932, metadata !DIExpression()), !dbg !3933
  %4 = icmp eq i32 %3, 0, !dbg !3936
  br i1 %4, label %6, label %5, !dbg !3939

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #27, !dbg !3940
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #27, !dbg !3940
  unreachable, !dbg !3940

6:                                                ; preds = %1
  ret void, !dbg !3942
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get.23(i8* noundef %0) unnamed_addr #1 !dbg !3943 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3949, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3947, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8* %0, metadata !3948, metadata !DIExpression()), !dbg !3950
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3951, !srcloc !3953
  %2 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] [i64 -1]) #27, !dbg !3954
  ret i32 %2, !dbg !3955
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3956 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3971, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %0, metadata !3967, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %1, metadata !3968, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %2, metadata !3969, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %3, metadata !3970, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %0, metadata !3972, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %0, metadata !3973, metadata !DIExpression()), !dbg !4034
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4035
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4035
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3976, metadata !DIExpression()), !dbg !4036
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4037
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4037
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3978, metadata !DIExpression()), !dbg !4038
  call void @llvm.dbg.value(metadata i32 0, metadata !3979, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 0, metadata !3980, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 0, metadata !3981, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 -1, metadata !3982, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 0, metadata !3985, metadata !DIExpression()), !dbg !4034
  %12 = and i32 %2, 4, !dbg !4039
  %13 = icmp eq i32 %12, 0, !dbg !4040
  call void @llvm.dbg.value(metadata i1 %13, metadata !3986, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4034
  %14 = lshr i32 %2, 3, !dbg !4041
  %15 = and i32 %14, 7, !dbg !4041
  %16 = add nuw nsw i32 %15, 1, !dbg !4042
  call void @llvm.dbg.value(metadata i32 %16, metadata !3987, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 0, metadata !3988, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %0, metadata !3989, metadata !DIExpression()), !dbg !4034
  %17 = ptrtoint i8* %0 to i32, !dbg !4043
  %18 = and i32 %17, 3, !dbg !4045
  %19 = icmp eq i32 %18, 0, !dbg !4045
  br i1 %19, label %20, label %320, !dbg !4046

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4047
  call void @llvm.dbg.value(metadata i8* %21, metadata !3973, metadata !DIExpression()), !dbg !4034
  %22 = icmp eq i8* %0, null, !dbg !4048
  %23 = and i32 %1, 7, !dbg !4050
  %24 = sub nuw nsw i32 8, %23, !dbg !4050
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4050
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4050
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %27, metadata !3968, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %26, metadata !3973, metadata !DIExpression()), !dbg !4034
  br i1 %22, label %33, label %28, !dbg !4051

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4053
  %30 = sub i32 4, %17, !dbg !4053
  %31 = add i32 %30, %29, !dbg !4054
  %32 = icmp ugt i32 %31, %27, !dbg !4055
  br i1 %32, label %320, label %33, !dbg !4056

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4057
  call void @llvm.dbg.value(metadata i8* %34, metadata !3970, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %3, metadata !3984, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 4, metadata !3975, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 4, metadata !3974, metadata !DIExpression()), !dbg !4034
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4058

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3971, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %42, metadata !3970, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %43, metadata !3973, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %44, metadata !3974, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %45, metadata !3975, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %72, metadata !3982, metadata !DIExpression()), !dbg !4034
  br i1 %46, label %73, label %47, !dbg !4059

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4060
  %49 = zext i1 %48 to i32, !dbg !4064
  %50 = add nsw i32 %72, %49, !dbg !4064
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4064
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4064
  call void @llvm.dbg.value(metadata i32 %52, metadata !3974, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %51, metadata !3975, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 poison, metadata !3985, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %50, metadata !3982, metadata !DIExpression()), !dbg !4034
  br label %53, !dbg !4065

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3971, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %40, metadata !3970, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %58, metadata !3973, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %57, metadata !3974, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %56, metadata !3975, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 poison, metadata !3985, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %54, metadata !3982, metadata !DIExpression()), !dbg !4034
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4066
  call void @llvm.dbg.value(metadata i8* %60, metadata !3970, metadata !DIExpression()), !dbg !4034
  %61 = load i8, i8* %60, align 1, !dbg !4068
  %62 = icmp eq i8 %61, 0, !dbg !4069
  br i1 %62, label %226, label %63, !dbg !4070, !llvm.loop !4071

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !4059

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4074

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3985, metadata !DIExpression()), !dbg !4034
  %75 = add nsw i32 %72, -1, !dbg !4075
  call void @llvm.dbg.value(metadata i32 %75, metadata !3982, metadata !DIExpression()), !dbg !4034
  br label %53, !dbg !4076

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4077

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3975, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 4, metadata !3974, metadata !DIExpression()), !dbg !4034
  br label %53, !dbg !4078

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3975, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 4, metadata !3974, metadata !DIExpression()), !dbg !4034
  br label %53, !dbg !4079

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4080
  %81 = icmp eq i8 %80, 108, !dbg !4082
  br i1 %81, label %82, label %109, !dbg !4083

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4084
  %84 = load i8, i8* %83, align 1, !dbg !4084
  %85 = icmp eq i8 %84, 108, !dbg !4087
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4088
  %89 = add i32 %88, 7, !dbg !4088
  %90 = and i32 %89, -8, !dbg !4088
  %91 = inttoptr i32 %90 to i8*, !dbg !4088
  %92 = inttoptr i32 %90 to double*, !dbg !4088
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4088
  %94 = load double, double* %92, align 8, !dbg !4088
  call void @llvm.dbg.value(metadata i8* %93, metadata !3971, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 8, metadata !3974, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 8, metadata !3975, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata double %94, metadata !4002, metadata !DIExpression()), !dbg !4090
  %95 = ptrtoint i8* %43 to i32, !dbg !4091
  %96 = add i32 %95, 7, !dbg !4091
  %97 = and i32 %96, -8, !dbg !4091
  %98 = inttoptr i32 %97 to i8*, !dbg !4092
  call void @llvm.dbg.value(metadata i8* %98, metadata !3973, metadata !DIExpression()), !dbg !4034
  br i1 %22, label %104, label %99, !dbg !4093

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4094
  %101 = icmp ugt i32 %100, %196, !dbg !4098
  br i1 %101, label %320, label %102, !dbg !4099

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4100
  store double %94, double* %103, align 8, !dbg !4100
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4103
  call void @llvm.dbg.value(metadata i8* %105, metadata !3973, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 poison, metadata !3985, metadata !DIExpression()), !dbg !4034
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3985, metadata !DIExpression()), !dbg !4034
  br label %53, !dbg !4104

107:                                              ; preds = %73, %73
  br label %109, !dbg !4105

108:                                              ; preds = %73
  br label %109, !dbg !4105

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4034
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4034
  call void @llvm.dbg.value(metadata i32 %113, metadata !3974, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %112, metadata !3975, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 poison, metadata !3988, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 poison, metadata !3985, metadata !DIExpression()), !dbg !4034
  %114 = ptrtoint i8* %43 to i32, !dbg !4105
  %115 = add i32 %114, -1, !dbg !4105
  %116 = add i32 %115, %112, !dbg !4105
  %117 = sub i32 0, %112, !dbg !4105
  %118 = and i32 %116, %117, !dbg !4105
  %119 = inttoptr i32 %118 to i8*, !dbg !4106
  call void @llvm.dbg.value(metadata i8* %119, metadata !3973, metadata !DIExpression()), !dbg !4034
  br i1 %22, label %124, label %120, !dbg !4107

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4109
  %122 = add i32 %121, %118, !dbg !4110
  %123 = icmp ugt i32 %122, %196, !dbg !4111
  br i1 %123, label %320, label %124, !dbg !4112

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !4113

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4106
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4114
  call void @llvm.dbg.value(metadata i8* %127, metadata !3971, metadata !DIExpression()), !dbg !4034
  %128 = bitcast i8* %41 to i8**, !dbg !4114
  %129 = load i8*, i8** %128, align 4, !dbg !4114
  call void @llvm.dbg.value(metadata i8* %129, metadata !3984, metadata !DIExpression()), !dbg !4034
  br label %130, !dbg !4115

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4034
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4116
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4034
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !4117
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4034
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !4034
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4034
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4034
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4034
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4034
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !4118
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3971, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %142, metadata !3968, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %141, metadata !3970, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %140, metadata !3973, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %139, metadata !3974, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %138, metadata !3975, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %137, metadata !3979, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %136, metadata !3987, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %135, metadata !3980, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 poison, metadata !3985, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %133, metadata !3984, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %132, metadata !3982, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %131, metadata !3981, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.label(metadata !4033), !dbg !4120
  br i1 %22, label %146, label %144, !dbg !4121

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4122
  store i8* %133, i8** %145, align 4, !dbg !4125
  br label %146, !dbg !4126

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4127
  call void @llvm.dbg.value(metadata i32 %147, metadata !3987, metadata !DIExpression()), !dbg !4034
  %148 = icmp sgt i32 %136, 0, !dbg !4128
  br i1 %148, label %152, label %149, !dbg !4129

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #28, !dbg !4130
  %151 = zext i1 %150 to i32, !dbg !4130
  br label %152, !dbg !4129

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4129
  %154 = icmp eq i32 %153, 0, !dbg !4129
  call void @llvm.dbg.value(metadata i1 %154, metadata !4011, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4131
  call void @llvm.dbg.value(metadata i1 %36, metadata !4014, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4131
  %155 = or i1 %36, %154, !dbg !4132
  br i1 %155, label %156, label %192, !dbg !4132

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4133
  %158 = sub i32 %157, %17, !dbg !4133
  %159 = lshr i32 %158, 2, !dbg !4134
  call void @llvm.dbg.value(metadata i32 %159, metadata !4015, metadata !DIExpression()), !dbg !4135
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4136
  br i1 %161, label %162, label %163, !dbg !4136

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #27, !dbg !4138
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.30, i32 0, i32 0)) #27, !dbg !4138
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #27, !dbg !4138
  unreachable, !dbg !4138

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !4143
  br i1 %164, label %165, label %166, !dbg !4145

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #27, !dbg !4146
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.31, i32 0, i32 0)) #27, !dbg !4146
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #27, !dbg !4146
  unreachable, !dbg !4146

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !4151

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !4152
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4155
  store i8 %168, i8* %169, align 1, !dbg !4156
  %170 = trunc i32 %132 to i8, !dbg !4157
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4158
  store i8 %170, i8* %171, align 1, !dbg !4159
  br i1 %154, label %175, label %172, !dbg !4160

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !4161
  store i8 %173, i8* %169, align 1, !dbg !4161
  %174 = add i32 %131, 1, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %174, metadata !3981, metadata !DIExpression()), !dbg !4034
  br label %187, !dbg !4165

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !4166
  call void @llvm.dbg.value(metadata i32 %176, metadata !3980, metadata !DIExpression()), !dbg !4034
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4168

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4169
  call void @llvm.dbg.value(metadata i32 %179, metadata !3968, metadata !DIExpression()), !dbg !4034
  br label %187, !dbg !4172

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4173

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %182, metadata !3968, metadata !DIExpression()), !dbg !4034
  br label %187, !dbg !4177

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !4178
  %185 = add i32 %142, 2, !dbg !4180
  %186 = add i32 %185, %184, !dbg !4181
  call void @llvm.dbg.value(metadata i32 %186, metadata !3968, metadata !DIExpression()), !dbg !4034
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !4034
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !4034
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !4034
  call void @llvm.dbg.value(metadata i32 %190, metadata !3968, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %189, metadata !3980, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %188, metadata !3981, metadata !DIExpression()), !dbg !4034
  %191 = add nuw nsw i32 %137, 1, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %191, metadata !3979, metadata !DIExpression()), !dbg !4034
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !4034
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !4117
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !4034
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !4118
  call void @llvm.dbg.value(metadata i32 %196, metadata !3968, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %195, metadata !3979, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %194, metadata !3980, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %193, metadata !3981, metadata !DIExpression()), !dbg !4034
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4183
  call void @llvm.dbg.value(metadata i8* %197, metadata !3973, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %143, metadata !3971, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %141, metadata !3970, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %139, metadata !3974, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %138, metadata !3975, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 poison, metadata !3988, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 poison, metadata !3985, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %132, metadata !3982, metadata !DIExpression()), !dbg !4034
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4066
  call void @llvm.dbg.value(metadata i8* %198, metadata !3970, metadata !DIExpression()), !dbg !4034
  %199 = load i8, i8* %198, align 1, !dbg !4068
  %200 = icmp eq i8 %199, 0, !dbg !4069
  br i1 %200, label %226, label %63, !dbg !4070

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4184

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4185
  call void @llvm.dbg.value(metadata i8* %203, metadata !3971, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 undef, metadata !4018, metadata !DIExpression()), !dbg !4186
  br i1 %22, label %219, label %204, !dbg !4187

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4185
  %206 = load i32, i32* %205, align 4, !dbg !4185
  call void @llvm.dbg.value(metadata i32 %206, metadata !4018, metadata !DIExpression()), !dbg !4186
  %207 = inttoptr i32 %118 to i32*, !dbg !4188
  store i32 %206, i32* %207, align 4, !dbg !4191
  br label %219, !dbg !4192

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4193
  %210 = add i32 %209, 7, !dbg !4193
  %211 = and i32 %210, -8, !dbg !4193
  %212 = inttoptr i32 %211 to i8*, !dbg !4193
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4193
  call void @llvm.dbg.value(metadata i8* %213, metadata !3971, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i64 undef, metadata !4024, metadata !DIExpression()), !dbg !4194
  br i1 %22, label %219, label %214, !dbg !4195

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4193
  %216 = load i64, i64* %215, align 8, !dbg !4193
  call void @llvm.dbg.value(metadata i64 %216, metadata !4024, metadata !DIExpression()), !dbg !4194
  %217 = inttoptr i32 %118 to i64*, !dbg !4196
  store i64 %216, i64* %217, align 8, !dbg !4201
  br label %219, !dbg !4202

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #27, !dbg !4203
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.32, i32 0, i32 0), i32 noundef %113) #27, !dbg !4203
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #27, !dbg !4203
  unreachable, !dbg !4203

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4208
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4208
  call void @llvm.dbg.value(metadata i8* %221, metadata !3971, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %40, metadata !3970, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %222, metadata !3973, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %113, metadata !3974, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %112, metadata !3975, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 poison, metadata !3988, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 poison, metadata !3985, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %72, metadata !3982, metadata !DIExpression()), !dbg !4034
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4066
  call void @llvm.dbg.value(metadata i8* %223, metadata !3970, metadata !DIExpression()), !dbg !4034
  %224 = load i8, i8* %223, align 1, !dbg !4068
  %225 = icmp eq i8 %224, 0, !dbg !4069
  br i1 %225, label %226, label %38, !dbg !4070

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4209
  %228 = ptrtoint i8* %227 to i32, !dbg !4210
  %229 = sub i32 %228, %17, !dbg !4210
  %230 = lshr i32 %229, 2, !dbg !4212
  %231 = icmp ugt i32 %229, 1023, !dbg !4213
  br i1 %231, label %232, label %233, !dbg !4214

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #27, !dbg !4215
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.33, i32 0, i32 0)) #27, !dbg !4215
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #27, !dbg !4215
  unreachable, !dbg !4215

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4220

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4221
  %236 = add i32 %235, %229, !dbg !4224
  br label %320, !dbg !4225

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4226
  store i8 %238, i8* %0, align 1, !dbg !4227
  %239 = trunc i32 %194 to i8, !dbg !4228
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4230
  store i8 %240, i8* %242, align 1, !dbg !4232
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4233
  store i8 %241, i8* %243, align 1, !dbg !4234
  %244 = trunc i32 %193 to i8, !dbg !4235
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4236
  store i8 %244, i8* %245, align 1, !dbg !4237
  %246 = icmp eq i32 %193, 0, !dbg !4238
  %247 = xor i1 %246, true, !dbg !4239
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4239
  call void @llvm.dbg.value(metadata i8* %227, metadata !3973, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 0, metadata !3983, metadata !DIExpression()), !dbg !4034
  br i1 %249, label %250, label %269, !dbg !4239

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4240

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3973, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %254, metadata !3983, metadata !DIExpression()), !dbg !4034
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4241
  %256 = load i8, i8* %255, align 1, !dbg !4241
  %257 = icmp sgt i8 %256, -1, !dbg !4243
  br i1 %257, label %265, label %258, !dbg !4244

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !4027, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4245
  %259 = ptrtoint i8* %253 to i32, !dbg !4246
  %260 = add i32 %251, %259, !dbg !4248
  %261 = icmp ugt i32 %260, %196, !dbg !4249
  br i1 %261, label %320, label %262, !dbg !4250

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4251
  call void @llvm.dbg.value(metadata i8 %263, metadata !4027, metadata !DIExpression()), !dbg !4245
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4252
  call void @llvm.dbg.value(metadata i8* %264, metadata !3973, metadata !DIExpression()), !dbg !4034
  store i8 %263, i8* %253, align 1, !dbg !4253
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4183
  call void @llvm.dbg.value(metadata i8* %266, metadata !3973, metadata !DIExpression()), !dbg !4034
  %267 = add nuw i32 %254, 1, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %267, metadata !3983, metadata !DIExpression()), !dbg !4034
  %268 = icmp eq i32 %267, %195, !dbg !4255
  br i1 %268, label %269, label %252, !dbg !4240, !llvm.loop !4256

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4183
  call void @llvm.dbg.value(metadata i8* %270, metadata !3973, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 0, metadata !3983, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %133, metadata !3984, metadata !DIExpression()), !dbg !4034
  %271 = icmp eq i32 %195, 0, !dbg !4258
  br i1 %271, label %316, label %272, !dbg !4261

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4261

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3973, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %276, metadata !3984, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %277, metadata !3983, metadata !DIExpression()), !dbg !4034
  br i1 %246, label %282, label %278, !dbg !4262

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4265
  %280 = load i8, i8* %279, align 1, !dbg !4265
  %281 = icmp sgt i8 %280, -1, !dbg !4266
  br i1 %281, label %282, label %311, !dbg !4267

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4268

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3974, metadata !DIExpression()), !dbg !4034
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4269
  %285 = load i8, i8* %284, align 1, !dbg !4269
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4272
  call void @llvm.dbg.value(metadata i8* %286, metadata !3973, metadata !DIExpression()), !dbg !4034
  store i8 %285, i8* %275, align 1, !dbg !4273
  br label %297, !dbg !4274

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4275
  %289 = load i8, i8* %288, align 1, !dbg !4275
  %290 = zext i8 %289 to i32, !dbg !4275
  %291 = shl nuw nsw i32 %290, 2, !dbg !4277
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4278
  %293 = bitcast i8* %292 to i8**, !dbg !4279
  %294 = load i8*, i8** %293, align 4, !dbg !4279
  call void @llvm.dbg.value(metadata i8* %294, metadata !3984, metadata !DIExpression()), !dbg !4034
  store i8* null, i8** %293, align 4, !dbg !4280
  %295 = tail call i32 @strlen(i8* noundef %294) #27, !dbg !4281
  %296 = add i32 %295, 1, !dbg !4282
  call void @llvm.dbg.value(metadata i32 %296, metadata !3974, metadata !DIExpression()), !dbg !4034
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !4034
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4283
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !4034
  call void @llvm.dbg.value(metadata i8* %300, metadata !3973, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %299, metadata !3974, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %298, metadata !3984, metadata !DIExpression()), !dbg !4034
  %301 = ptrtoint i8* %300 to i32, !dbg !4284
  %302 = add i32 %273, %299, !dbg !4286
  %303 = add i32 %302, %301, !dbg !4287
  %304 = icmp ugt i32 %303, %196, !dbg !4288
  br i1 %304, label %320, label %305, !dbg !4289

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4290
  %307 = load i8, i8* %306, align 1, !dbg !4290
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4291
  call void @llvm.dbg.value(metadata i8* %308, metadata !3973, metadata !DIExpression()), !dbg !4034
  store i8 %307, i8* %300, align 1, !dbg !4292
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #27, !dbg !4293
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4294
  call void @llvm.dbg.value(metadata i8* %310, metadata !3973, metadata !DIExpression()), !dbg !4034
  br label %311, !dbg !4295

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4296
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !4034
  call void @llvm.dbg.value(metadata i8* %313, metadata !3973, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8* %312, metadata !3984, metadata !DIExpression()), !dbg !4034
  %314 = add nuw i32 %277, 1, !dbg !4297
  call void @llvm.dbg.value(metadata i32 %314, metadata !3983, metadata !DIExpression()), !dbg !4034
  %315 = icmp eq i32 %314, %195, !dbg !4258
  br i1 %315, label %316, label %274, !dbg !4261, !llvm.loop !4298

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4183
  %318 = ptrtoint i8* %317 to i32, !dbg !4300
  %319 = sub i32 %318, %17, !dbg !4300
  br label %320, !dbg !4301

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4302
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4302
  ret i32 %321, !dbg !4302
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4303 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4307, metadata !DIExpression()), !dbg !4308
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #28, !dbg !4309
  ret i1 %2, !dbg !4310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4311 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4316, metadata !DIExpression()), !dbg !4317
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4318
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4319
  %4 = and i1 %2, %3, !dbg !4319
  ret i1 %4, !dbg !4320
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4321 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4325, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i32 %1, metadata !4326, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i32 %2, metadata !4327, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i8* %3, metadata !4328, metadata !DIExpression()), !dbg !4331
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4332
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4332
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4329, metadata !DIExpression()), !dbg !4333
  call void @llvm.va_start(i8* nonnull %6), !dbg !4334
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4335
  %8 = load i32, i32* %7, align 4, !dbg !4335
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4335
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #28, !dbg !4335
  call void @llvm.dbg.value(metadata i32 %10, metadata !4330, metadata !DIExpression()), !dbg !4331
  call void @llvm.va_end(i8* nonnull %6), !dbg !4336
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4337
  ret i32 %10, !dbg !4338
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #10

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4339 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4351, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4352, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i8* %2, metadata !4353, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i8* %3, metadata !4354, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i8* %3, metadata !4355, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i8* %3, metadata !4356, metadata !DIExpression()), !dbg !4370
  %5 = icmp eq i8* %3, null, !dbg !4371
  br i1 %5, label %45, label %6, !dbg !4373

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4365, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4370
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4374
  %8 = load i8, i8* %7, align 1, !dbg !4374
  %9 = zext i8 %8 to i32, !dbg !4375
  call void @llvm.dbg.value(metadata i32 %9, metadata !4366, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i8 undef, metadata !4367, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4370
  call void @llvm.dbg.value(metadata i8 undef, metadata !4368, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4370
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4362, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4370
  call void @llvm.dbg.value(metadata i32 0, metadata !4364, metadata !DIExpression()), !dbg !4370
  %10 = icmp eq i8 %8, 0, !dbg !4376
  br i1 %10, label %39, label %11, !dbg !4379

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4380
  call void @llvm.dbg.value(metadata i8 %12, metadata !4365, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4370
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4362, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4370
  %13 = zext i8 %12 to i32, !dbg !4381
  call void @llvm.dbg.value(metadata i32 %13, metadata !4365, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4370
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4362, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4370
  %14 = shl nuw nsw i32 %13, 2, !dbg !4382
  call void @llvm.dbg.value(metadata i32 %14, metadata !4365, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4362, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4370
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4383
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4362, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4370
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4384
  %17 = load i8, i8* %16, align 1, !dbg !4384
  call void @llvm.dbg.value(metadata i8 %17, metadata !4367, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4370
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4362, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4370
  %18 = zext i8 %17 to i32, !dbg !4385
  call void @llvm.dbg.value(metadata i32 %18, metadata !4367, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4362, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4370
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4386
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4362, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4370
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4387
  %21 = load i8, i8* %20, align 1, !dbg !4387
  call void @llvm.dbg.value(metadata i8 %21, metadata !4368, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4370
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4362, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4370
  %22 = zext i8 %21 to i32, !dbg !4388
  call void @llvm.dbg.value(metadata i32 %22, metadata !4368, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4362, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4370
  %23 = shl nuw nsw i32 %22, 1, !dbg !4389
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4362, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4370
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4390
  call void @llvm.dbg.value(metadata i8* %24, metadata !4362, metadata !DIExpression()), !dbg !4370
  br label %25, !dbg !4379

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4362, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i32 %27, metadata !4364, metadata !DIExpression()), !dbg !4370
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4391
  call void @llvm.dbg.value(metadata i8* %28, metadata !4362, metadata !DIExpression()), !dbg !4370
  %29 = load i8, i8* %26, align 1, !dbg !4393
  %30 = zext i8 %29 to i32, !dbg !4393
  call void @llvm.dbg.value(metadata i32 %30, metadata !4369, metadata !DIExpression()), !dbg !4370
  %31 = shl nuw nsw i32 %30, 2, !dbg !4394
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4395
  %33 = bitcast i8* %32 to i8**, !dbg !4396
  call void @llvm.dbg.value(metadata i8** %33, metadata !4363, metadata !DIExpression()), !dbg !4370
  store i8* %28, i8** %33, align 4, !dbg !4397
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4398
  %35 = add i32 %34, 1, !dbg !4399
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4400
  call void @llvm.dbg.value(metadata i8* %36, metadata !4362, metadata !DIExpression()), !dbg !4370
  %37 = add nuw nsw i32 %27, 1, !dbg !4401
  call void @llvm.dbg.value(metadata i32 %37, metadata !4364, metadata !DIExpression()), !dbg !4370
  %38 = icmp eq i32 %37, %9, !dbg !4376
  br i1 %38, label %39, label %25, !dbg !4379, !llvm.loop !4402

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4404
  call void @llvm.dbg.value(metadata i8* %40, metadata !4355, metadata !DIExpression()), !dbg !4370
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4405
  %42 = bitcast i8* %41 to i8**, !dbg !4405
  %43 = load i8*, i8** %42, align 1, !dbg !4405
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #28, !dbg !4406
  br label %45, !dbg !4407

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4370
  ret i32 %46, !dbg !4408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4409 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4413, metadata !DIExpression()), !dbg !4423
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4414, metadata !DIExpression()), !dbg !4423
  call void @llvm.dbg.value(metadata i8* %2, metadata !4415, metadata !DIExpression()), !dbg !4423
  call void @llvm.dbg.value(metadata i8* %3, metadata !4416, metadata !DIExpression()), !dbg !4423
  call void @llvm.dbg.value(metadata i8* %4, metadata !4417, metadata !DIExpression()), !dbg !4423
  call void @llvm.dbg.value(metadata i8* %4, metadata !4418, metadata !DIExpression()), !dbg !4423
  %6 = ptrtoint i8* %4 to i32, !dbg !4424
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4424
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4424
  ret i32 %8, !dbg !4425
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !4426 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4430, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 %1, metadata !4431, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8 0, metadata !4433, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i32 0, metadata !4434, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8 poison, metadata !4433, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8* %0, metadata !4430, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4435
  %3 = load i8, i8* %0, align 1, !dbg !4436
  call void @llvm.dbg.value(metadata i8 %3, metadata !4432, metadata !DIExpression()), !dbg !4435
  %4 = icmp eq i8 %3, 0, !dbg !4437
  br i1 %4, label %29, label %5, !dbg !4438

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4439
  call void @llvm.dbg.value(metadata i32 %8, metadata !4434, metadata !DIExpression()), !dbg !4435
  br i1 %9, label %11, label %22, !dbg !4440

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4442
  br i1 %12, label %13, label %17, !dbg !4446

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4447
  br i1 %14, label %29, label %15, !dbg !4450

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #28, !dbg !4451
  br i1 %16, label %29, label %22, !dbg !4453

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #28, !dbg !4454
  %19 = xor i1 %18, true, !dbg !4456
  %20 = zext i1 %18 to i32, !dbg !4456
  %21 = add nsw i32 %8, %20, !dbg !4456
  br label %22, !dbg !4456

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4435
  call void @llvm.dbg.value(metadata i32 %24, metadata !4434, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8 poison, metadata !4433, metadata !DIExpression()), !dbg !4435
  %25 = icmp eq i8 %6, 37, !dbg !4457
  %26 = xor i1 %25, %23, !dbg !4459
  call void @llvm.dbg.value(metadata i8* %10, metadata !4430, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8* %10, metadata !4430, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4435
  %27 = load i8, i8* %10, align 1, !dbg !4436
  call void @llvm.dbg.value(metadata i8 %27, metadata !4432, metadata !DIExpression()), !dbg !4435
  %28 = icmp eq i8 %27, 0, !dbg !4437
  br i1 %28, label %29, label %5, !dbg !4438, !llvm.loop !4460

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4435
  ret i1 %30, !dbg !4462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4463 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4467, metadata !DIExpression()), !dbg !4468
  %2 = add i8 %0, -64, !dbg !4469
  %3 = icmp ult i8 %2, 59, !dbg !4469
  ret i1 %3, !dbg !4470
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4471 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4479, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %1, metadata !4480, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4481, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i8* %3, metadata !4482, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %4, metadata !4483, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i16* %5, metadata !4484, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %6, metadata !4485, metadata !DIExpression()), !dbg !4548
  %11 = icmp eq i8* %0, null, !dbg !4549
  br i1 %11, label %12, label %13, !dbg !4552

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #27, !dbg !4553
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #27, !dbg !4553
  unreachable, !dbg !4553

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4486, metadata !DIExpression()), !dbg !4548
  %14 = bitcast i8* %0 to i32*, !dbg !4555
  call void @llvm.dbg.value(metadata i32* %14, metadata !4487, metadata !DIExpression()), !dbg !4548
  %15 = and i32 %4, 8, !dbg !4556
  %16 = icmp eq i32 %15, 0, !dbg !4557
  call void @llvm.dbg.value(metadata i1 %16, metadata !4491, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4548
  call void @llvm.dbg.value(metadata i8* %0, metadata !4494, metadata !DIExpression()), !dbg !4548
  %17 = icmp eq i32 %1, 0, !dbg !4558
  br i1 %17, label %18, label %20, !dbg !4559

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #28, !dbg !4560
  br label %20, !dbg !4559

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4559
  call void @llvm.dbg.value(metadata i32 %21, metadata !4480, metadata !DIExpression()), !dbg !4548
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4561
  %23 = load i8, i8* %22, align 1, !dbg !4561
  %24 = zext i8 %23 to i32, !dbg !4562
  call void @llvm.dbg.value(metadata i32 %24, metadata !4489, metadata !DIExpression()), !dbg !4548
  %25 = icmp ne i8 %23, 0, !dbg !4563
  %26 = and i32 %4, 1, !dbg !4564
  %27 = icmp ne i32 %26, 0, !dbg !4564
  %28 = and i1 %27, %25, !dbg !4564
  call void @llvm.dbg.value(metadata i1 %28, metadata !4493, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4548
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4565
  %30 = load i8, i8* %29, align 1, !dbg !4565
  %31 = zext i8 %30 to i32, !dbg !4566
  call void @llvm.dbg.value(metadata i32 %31, metadata !4490, metadata !DIExpression()), !dbg !4548
  %32 = icmp ne i8 %30, 0, !dbg !4567
  %33 = and i32 %4, 2, !dbg !4568
  %34 = icmp ne i32 %33, 0, !dbg !4568
  %35 = and i1 %34, %32, !dbg !4568
  call void @llvm.dbg.value(metadata i1 %35, metadata !4492, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4548
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4569
  br i1 %36, label %41, label %37, !dbg !4569

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4571
  br i1 %38, label %287, label %39, !dbg !4574

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #27, !dbg !4575
  br label %287, !dbg !4577

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4578
  %43 = zext i8 %42 to i32, !dbg !4579
  %44 = shl nuw nsw i32 %43, 2, !dbg !4580
  call void @llvm.dbg.value(metadata i32 %44, metadata !4488, metadata !DIExpression()), !dbg !4548
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4581
  %46 = bitcast i8* %45 to i8**, !dbg !4582
  %47 = load i8*, i8** %46, align 4, !dbg !4582
  call void @llvm.dbg.value(metadata i8* %47, metadata !4497, metadata !DIExpression()), !dbg !4548
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4583
  call void @llvm.dbg.value(metadata i8* %48, metadata !4498, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 0, metadata !4499, metadata !DIExpression()), !dbg !4548
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4584
  br i1 %49, label %50, label %135, !dbg !4585

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !4496, metadata !DIExpression()), !dbg !4548
  br i1 %28, label %51, label %76, !dbg !4586

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !4496, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i8* %48, metadata !4498, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 0, metadata !4499, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 0, metadata !4500, metadata !DIExpression()), !dbg !4587
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4588

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !4496, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i8* %55, metadata !4498, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %56, metadata !4499, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %57, metadata !4500, metadata !DIExpression()), !dbg !4587
  %58 = load i8, i8* %55, align 1, !dbg !4589
  %59 = zext i8 %58 to i32, !dbg !4590
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4590
  %61 = bitcast i32* %60 to i8**, !dbg !4591
  %62 = load i8*, i8** %61, align 4, !dbg !4591
  call void @llvm.dbg.value(metadata i8* %62, metadata !4506, metadata !DIExpression()), !dbg !4592
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #28, !dbg !4593
  call void @llvm.dbg.value(metadata i32 %63, metadata !4509, metadata !DIExpression()), !dbg !4592
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4594
  br i1 %65, label %66, label %70, !dbg !4594

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4596
  %68 = add nuw i32 %56, 1, !dbg !4598
  call void @llvm.dbg.value(metadata i32 %68, metadata !4499, metadata !DIExpression()), !dbg !4548
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4599
  store i16 %67, i16* %69, align 2, !dbg !4600
  br label %70, !dbg !4601

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4548
  call void @llvm.dbg.value(metadata i32 %71, metadata !4499, metadata !DIExpression()), !dbg !4548
  %72 = add nsw i32 %63, %54, !dbg !4602
  call void @llvm.dbg.value(metadata i32 %72, metadata !4496, metadata !DIExpression()), !dbg !4548
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4603
  call void @llvm.dbg.value(metadata i8* %73, metadata !4498, metadata !DIExpression()), !dbg !4548
  %74 = add nuw nsw i32 %57, 1, !dbg !4604
  call void @llvm.dbg.value(metadata i32 %74, metadata !4500, metadata !DIExpression()), !dbg !4587
  %75 = icmp eq i32 %74, %24, !dbg !4605
  br i1 %75, label %82, label %53, !dbg !4588, !llvm.loop !4606

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4608
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4608
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4608
  br label %82, !dbg !4608

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4611
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4548
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4612
  call void @llvm.dbg.value(metadata i1 undef, metadata !4510, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4613
  call void @llvm.dbg.value(metadata i32 0, metadata !4511, metadata !DIExpression()), !dbg !4614
  call void @llvm.dbg.value(metadata i32 %85, metadata !4496, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i8* %84, metadata !4498, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %83, metadata !4499, metadata !DIExpression()), !dbg !4548
  %86 = icmp eq i8 %30, 0, !dbg !4615
  br i1 %86, label %287, label %87, !dbg !4616

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4617
  %89 = icmp eq i32 %88, 0, !dbg !4618
  call void @llvm.dbg.value(metadata i1 %89, metadata !4510, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4613
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4616

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !4496, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i8* %96, metadata !4498, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %97, metadata !4499, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %98, metadata !4511, metadata !DIExpression()), !dbg !4614
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4619
  call void @llvm.dbg.value(metadata i8* %99, metadata !4498, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i8 undef, metadata !4513, metadata !DIExpression()), !dbg !4620
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4621
  call void @llvm.dbg.value(metadata i8* %100, metadata !4498, metadata !DIExpression()), !dbg !4548
  %101 = load i8, i8* %99, align 1, !dbg !4622
  call void @llvm.dbg.value(metadata i8 %101, metadata !4516, metadata !DIExpression()), !dbg !4620
  %102 = zext i8 %101 to i32, !dbg !4623
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4623
  %104 = bitcast i32* %103 to i8**, !dbg !4624
  %105 = load i8*, i8** %104, align 4, !dbg !4624
  call void @llvm.dbg.value(metadata i8* %105, metadata !4517, metadata !DIExpression()), !dbg !4620
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #28, !dbg !4625
  call void @llvm.dbg.value(metadata i1 %106, metadata !4518, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4620
  br i1 %16, label %113, label %107, !dbg !4626

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4628
  call void @llvm.dbg.value(metadata i8 %108, metadata !4513, metadata !DIExpression()), !dbg !4620
  %109 = zext i8 %108 to i32, !dbg !4629
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #28, !dbg !4630
  br i1 %110, label %111, label %113, !dbg !4631

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.35, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #27, !dbg !4632
  %112 = add nsw i32 %95, -2, !dbg !4638
  call void @llvm.dbg.value(metadata i32 %112, metadata !4496, metadata !DIExpression()), !dbg !4548
  br label %130, !dbg !4639

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4640

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4641

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4643
  call void @llvm.dbg.value(metadata i32 %116, metadata !4496, metadata !DIExpression()), !dbg !4548
  br label %130, !dbg !4646

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4647

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4544), !dbg !4648
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #28, !dbg !4649
  call void @llvm.dbg.value(metadata i32 %119, metadata !4519, metadata !DIExpression()), !dbg !4620
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4650
  br i1 %121, label %122, label %126, !dbg !4650

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4652
  %124 = add nuw i32 %97, 1, !dbg !4654
  call void @llvm.dbg.value(metadata i32 %124, metadata !4499, metadata !DIExpression()), !dbg !4548
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4655
  store i16 %123, i16* %125, align 2, !dbg !4656
  br label %126, !dbg !4657

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4548
  call void @llvm.dbg.value(metadata i32 %127, metadata !4499, metadata !DIExpression()), !dbg !4548
  %128 = add i32 %95, -1, !dbg !4658
  %129 = add i32 %128, %119, !dbg !4659
  call void @llvm.dbg.value(metadata i32 %129, metadata !4496, metadata !DIExpression()), !dbg !4548
  br label %130, !dbg !4660

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4548
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4620
  call void @llvm.dbg.value(metadata i32 %132, metadata !4496, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %131, metadata !4499, metadata !DIExpression()), !dbg !4548
  %133 = add nuw nsw i32 %98, 1, !dbg !4661
  call void @llvm.dbg.value(metadata i8* %100, metadata !4498, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %133, metadata !4511, metadata !DIExpression()), !dbg !4614
  %134 = icmp eq i32 %133, %31, !dbg !4615
  br i1 %134, label %287, label %94, !dbg !4616, !llvm.loop !4662

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4521, metadata !DIExpression()), !dbg !4664
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4522, metadata !DIExpression()), !dbg !4665
  br i1 %28, label %136, label %138, !dbg !4666

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4523, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i8 0, metadata !4524, metadata !DIExpression()), !dbg !4548
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4667
  call void @llvm.dbg.value(metadata i8* %137, metadata !4525, metadata !DIExpression()), !dbg !4548
  br label %143, !dbg !4670

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4671
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4671

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4525, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i8 undef, metadata !4524, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i8 0, metadata !4523, metadata !DIExpression()), !dbg !4548
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #27, !dbg !4673
  br label %148, !dbg !4676

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4677
  call void @llvm.dbg.value(metadata i8* %151, metadata !4498, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 0, metadata !4527, metadata !DIExpression()), !dbg !4678
  call void @llvm.dbg.value(metadata i8 %149, metadata !4524, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i8 %150, metadata !4523, metadata !DIExpression()), !dbg !4548
  %152 = icmp eq i8 %30, 0, !dbg !4679
  br i1 %152, label %153, label %155, !dbg !4680

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4681
  br label %160, !dbg !4680

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4680

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4681
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4682
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4683
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4548
  call void @llvm.dbg.value(metadata i8 undef, metadata !4520, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4548
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4684
  %166 = load i8, i8* %165, align 1, !dbg !4684
  %167 = zext i8 %162 to i32, !dbg !4685
  %168 = add i8 %166, %162, !dbg !4686
  call void @llvm.dbg.value(metadata i8 %168, metadata !4520, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4548
  %169 = icmp eq i32 %33, 0, !dbg !4687
  %170 = lshr i8 %163, 1, !dbg !4688
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4688
  call void @llvm.dbg.value(metadata i8 %171, metadata !4520, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4548
  %172 = icmp eq i32 %26, 0, !dbg !4689
  %173 = icmp eq i32 %161, 0, !dbg !4681
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4681
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4681
  call void @llvm.dbg.value(metadata i8 %175, metadata !4520, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4548
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4535, metadata !DIExpression()), !dbg !4690
  %176 = load i32, i32* %14, align 1, !dbg !4691
  store i8 %168, i8* %165, align 1, !dbg !4692
  store i8 %175, i8* %22, align 1, !dbg !4692
  store i8 %171, i8* %29, align 1, !dbg !4692
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #27, !dbg !4693
  call void @llvm.dbg.value(metadata i32 %177, metadata !4526, metadata !DIExpression()), !dbg !4548
  %178 = icmp slt i32 %177, 0, !dbg !4694
  br i1 %178, label %287, label %240, !dbg !4696

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !4498, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %181, metadata !4527, metadata !DIExpression()), !dbg !4678
  call void @llvm.dbg.value(metadata i8 %182, metadata !4524, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i8 %183, metadata !4523, metadata !DIExpression()), !dbg !4548
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4697
  call void @llvm.dbg.value(metadata i8* %184, metadata !4498, metadata !DIExpression()), !dbg !4548
  %185 = load i8, i8* %180, align 1, !dbg !4698
  call void @llvm.dbg.value(metadata i8 %185, metadata !4529, metadata !DIExpression()), !dbg !4699
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4700
  call void @llvm.dbg.value(metadata i8* %186, metadata !4498, metadata !DIExpression()), !dbg !4548
  %187 = load i8, i8* %184, align 1, !dbg !4701
  call void @llvm.dbg.value(metadata i8 %187, metadata !4532, metadata !DIExpression()), !dbg !4699
  %188 = zext i8 %187 to i32, !dbg !4702
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4702
  %190 = bitcast i32* %189 to i8**, !dbg !4703
  %191 = load i8*, i8** %190, align 4, !dbg !4703
  call void @llvm.dbg.value(metadata i8* %191, metadata !4533, metadata !DIExpression()), !dbg !4699
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #28, !dbg !4704
  call void @llvm.dbg.value(metadata i1 %192, metadata !4534, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4699
  br i1 %16, label %196, label %193, !dbg !4705

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4707
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #28, !dbg !4708
  br i1 %195, label %235, label %196, !dbg !4709

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4710

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4711

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4714
  br i1 %199, label %201, label %200, !dbg !4719

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #27, !dbg !4720
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #27, !dbg !4720
  unreachable, !dbg !4720

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4714
  %203 = add nuw nsw i8 %183, 1, !dbg !4722
  call void @llvm.dbg.value(metadata i8 %203, metadata !4523, metadata !DIExpression()), !dbg !4548
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4723
  br label %231, !dbg !4724

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4725

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4726
  br i1 %207, label %209, label %208, !dbg !4731

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #27, !dbg !4732
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #27, !dbg !4732
  unreachable, !dbg !4732

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4726
  %211 = add nuw nsw i8 %182, 1, !dbg !4734
  call void @llvm.dbg.value(metadata i8 %211, metadata !4524, metadata !DIExpression()), !dbg !4548
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4735
  br label %231, !dbg !4736

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4737

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4739
  br i1 %215, label %217, label %216, !dbg !4744

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #27, !dbg !4745
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #27, !dbg !4745
  unreachable, !dbg !4745

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4739
  %219 = add nuw nsw i8 %183, 1, !dbg !4747
  call void @llvm.dbg.value(metadata i8 %219, metadata !4523, metadata !DIExpression()), !dbg !4548
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4748
  br label %231, !dbg !4749

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4750
  br i1 %222, label %224, label %223, !dbg !4754

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #27, !dbg !4755
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #27, !dbg !4755
  unreachable, !dbg !4755

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4750
  %226 = add nuw nsw i8 %182, 1, !dbg !4757
  call void @llvm.dbg.value(metadata i8 %226, metadata !4524, metadata !DIExpression()), !dbg !4548
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4758
  store i8 %185, i8* %227, align 1, !dbg !4759
  %228 = add nuw nsw i8 %182, 2, !dbg !4760
  call void @llvm.dbg.value(metadata i8 %228, metadata !4524, metadata !DIExpression()), !dbg !4548
  %229 = zext i8 %226 to i32, !dbg !4761
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4761
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4762
  br label %235, !dbg !4763

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4548
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4683
  call void @llvm.dbg.value(metadata i8 %237, metadata !4524, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i8 %236, metadata !4523, metadata !DIExpression()), !dbg !4548
  %238 = add nuw nsw i32 %181, 1, !dbg !4763
  call void @llvm.dbg.value(metadata i8* %186, metadata !4498, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %238, metadata !4527, metadata !DIExpression()), !dbg !4678
  %239 = icmp eq i32 %238, %31, !dbg !4679
  br i1 %239, label %160, label %179, !dbg !4680, !llvm.loop !4764

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4688
  call void @llvm.dbg.value(metadata i32 %177, metadata !4496, metadata !DIExpression()), !dbg !4548
  store i32 %176, i32* %14, align 1, !dbg !4766
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4767
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #27, !dbg !4768
  call void @llvm.dbg.value(metadata i32 %243, metadata !4526, metadata !DIExpression()), !dbg !4548
  %244 = icmp slt i32 %243, 0, !dbg !4769
  br i1 %244, label %287, label %245, !dbg !4771

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !4496, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4548
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4772
  %248 = add nuw nsw i32 %44, %24, !dbg !4772
  %249 = sub i32 %247, %248, !dbg !4772
  call void @llvm.dbg.value(metadata i32 %249, metadata !4536, metadata !DIExpression()), !dbg !4548
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #27, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %250, metadata !4526, metadata !DIExpression()), !dbg !4548
  %251 = icmp slt i32 %250, 0, !dbg !4774
  br i1 %251, label %287, label %252, !dbg !4776

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4777
  call void @llvm.dbg.value(metadata i32 %253, metadata !4496, metadata !DIExpression()), !dbg !4548
  %254 = add nuw nsw i32 %253, %250, !dbg !4778
  call void @llvm.dbg.value(metadata i32 %254, metadata !4496, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 0, metadata !4537, metadata !DIExpression()), !dbg !4779
  %255 = icmp eq i8 %162, 0, !dbg !4780
  br i1 %255, label %284, label %256, !dbg !4781

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4781

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4537, metadata !DIExpression()), !dbg !4779
  call void @llvm.dbg.value(metadata i32 %260, metadata !4496, metadata !DIExpression()), !dbg !4548
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4782
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4783
  %262 = load i8, i8* %261, align 1, !dbg !4783
  call void @llvm.dbg.value(metadata i8 %262, metadata !4539, metadata !DIExpression()), !dbg !4784
  store i8 %262, i8* %10, align 1, !dbg !4785
  %263 = zext i8 %262 to i32, !dbg !4786
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4786
  %265 = bitcast i32* %264 to i8**, !dbg !4787
  %266 = load i8*, i8** %265, align 4, !dbg !4787
  call void @llvm.dbg.value(metadata i8* %266, metadata !4542, metadata !DIExpression()), !dbg !4784
  br i1 %257, label %270, label %267, !dbg !4788

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4789
  %269 = load i16, i16* %268, align 2, !dbg !4789
  br label %270, !dbg !4788

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4788
  call void @llvm.dbg.value(metadata i32 undef, metadata !4543, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4784
  call void @llvm.dbg.value(metadata i8* %10, metadata !4539, metadata !DIExpression(DW_OP_deref)), !dbg !4784
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4790
  call void @llvm.dbg.value(metadata i32 %272, metadata !4526, metadata !DIExpression()), !dbg !4548
  %273 = icmp slt i32 %272, 0, !dbg !4791
  br i1 %273, label %277, label %274, !dbg !4793

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4543, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !4496, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4548
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #28, !dbg !4794
  call void @llvm.dbg.value(metadata i32 %275, metadata !4526, metadata !DIExpression()), !dbg !4548
  %276 = icmp slt i32 %275, 0, !dbg !4795
  br i1 %276, label %277, label %279, !dbg !4797

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4496, metadata !DIExpression()), !dbg !4548
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4798
  call void @llvm.dbg.value(metadata i32 undef, metadata !4496, metadata !DIExpression()), !dbg !4548
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4799
  call void @llvm.dbg.value(metadata i32 %280, metadata !4496, metadata !DIExpression()), !dbg !4548
  %281 = add nsw i32 %280, %275, !dbg !4800
  call void @llvm.dbg.value(metadata i32 %281, metadata !4496, metadata !DIExpression()), !dbg !4548
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4798
  %282 = add nuw nsw i32 %259, 1, !dbg !4801
  call void @llvm.dbg.value(metadata i32 %282, metadata !4537, metadata !DIExpression()), !dbg !4779
  %283 = icmp eq i32 %282, %167, !dbg !4780
  br i1 %283, label %284, label %258, !dbg !4781, !llvm.loop !4802

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4778
  call void @llvm.dbg.value(metadata i32 %285, metadata !4496, metadata !DIExpression()), !dbg !4548
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !4804
  br label %287, !dbg !4805

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4548
  ret i32 %288, !dbg !4806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4807 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4811, metadata !DIExpression()), !dbg !4819
  %2 = icmp eq i8* %0, null, !dbg !4820
  br i1 %2, label %3, label %4, !dbg !4823

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #27, !dbg !4824
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #27, !dbg !4824
  unreachable, !dbg !4824

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4812, metadata !DIExpression()), !dbg !4819
  call void @llvm.dbg.value(metadata i8* %0, metadata !4813, metadata !DIExpression()), !dbg !4819
  %5 = load i8, i8* %0, align 1, !dbg !4826
  %6 = zext i8 %5 to i32, !dbg !4826
  %7 = shl nuw nsw i32 %6, 2, !dbg !4827
  call void @llvm.dbg.value(metadata i32 %7, metadata !4814, metadata !DIExpression()), !dbg !4819
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4828
  %9 = load i8, i8* %8, align 1, !dbg !4828
  %10 = zext i8 %9 to i32, !dbg !4828
  call void @llvm.dbg.value(metadata i32 %10, metadata !4815, metadata !DIExpression()), !dbg !4819
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4829
  %12 = load i8, i8* %11, align 1, !dbg !4829
  %13 = zext i8 %12 to i32, !dbg !4829
  call void @llvm.dbg.value(metadata i32 %13, metadata !4816, metadata !DIExpression()), !dbg !4819
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4830
  call void @llvm.dbg.value(metadata i8* %14, metadata !4812, metadata !DIExpression()), !dbg !4819
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4831
  call void @llvm.dbg.value(metadata i8* %15, metadata !4812, metadata !DIExpression()), !dbg !4819
  call void @llvm.dbg.value(metadata i32 0, metadata !4817, metadata !DIExpression()), !dbg !4832
  %16 = icmp eq i8 %9, 0, !dbg !4833
  br i1 %16, label %17, label %22, !dbg !4835

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4819
  %19 = ptrtoint i8* %18 to i32, !dbg !4836
  %20 = ptrtoint i8* %0 to i32, !dbg !4836
  %21 = sub i32 %19, %20, !dbg !4836
  ret i32 %21, !dbg !4837

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4817, metadata !DIExpression()), !dbg !4832
  call void @llvm.dbg.value(metadata i8* %24, metadata !4812, metadata !DIExpression()), !dbg !4819
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4838
  call void @llvm.dbg.value(metadata i8* %25, metadata !4812, metadata !DIExpression()), !dbg !4819
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #27, !dbg !4840
  %27 = add i32 %26, 1, !dbg !4841
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4842
  call void @llvm.dbg.value(metadata i8* %28, metadata !4812, metadata !DIExpression()), !dbg !4819
  %29 = add nuw nsw i32 %23, 1, !dbg !4843
  call void @llvm.dbg.value(metadata i32 %29, metadata !4817, metadata !DIExpression()), !dbg !4832
  %30 = icmp eq i32 %29, %10, !dbg !4833
  br i1 %30, label %17, label %22, !dbg !4835, !llvm.loop !4844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4846 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4850, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.value(metadata i8* %1, metadata !4851, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.value(metadata i8* %2, metadata !4852, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.value(metadata i16 %3, metadata !4853, metadata !DIExpression()), !dbg !4854
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4855
  br i1 %5, label %6, label %9, !dbg !4857

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4858
  %8 = add i32 %7, 1, !dbg !4860
  br label %20, !dbg !4861

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4862
  br i1 %10, label %13, label %11, !dbg !4863

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4863
  br label %16, !dbg !4863

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4864
  %15 = add i32 %14, 1, !dbg !4865
  br label %16, !dbg !4863

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4863
  %18 = and i32 %17, 65535, !dbg !4866
  call void @llvm.dbg.value(metadata i32 %17, metadata !4853, metadata !DIExpression()), !dbg !4854
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !4867
  br label %20, !dbg !4868

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4854
  ret i32 %21, !dbg !4869
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4872, metadata !DIExpression()), !dbg !4873
  ret i32 0, !dbg !4874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !4875 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4879, metadata !DIExpression()), !dbg !4880
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4881
  ret void, !dbg !4882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #13 !dbg !4883 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4886
  ret i8* %1, !dbg !4887
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4888 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4899, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i8* %0, metadata !4898, metadata !DIExpression()), !dbg !4908
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #28, !dbg !4909
  ret void, !dbg !4911
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4912 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4916, metadata !DIExpression()), !dbg !4918
  call void @llvm.dbg.value(metadata i8* %1, metadata !4917, metadata !DIExpression()), !dbg !4918
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4919
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !4919
  ret i32 %4, !dbg !4920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4921 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4928, metadata !DIExpression()), !dbg !4929
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4925, metadata !DIExpression()), !dbg !4929
  call void @llvm.dbg.value(metadata i8* %1, metadata !4926, metadata !DIExpression()), !dbg !4929
  call void @llvm.dbg.value(metadata i8* %2, metadata !4927, metadata !DIExpression()), !dbg !4929
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !4930
  ret void, !dbg !4931
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4932 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4936, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.value(metadata i32 %1, metadata !4937, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.value(metadata i32 0, metadata !4938, metadata !DIExpression()), !dbg !4939
  %3 = icmp eq i32 %1, 0, !dbg !4940
  br i1 %3, label %13, label %4, !dbg !4943

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4938, metadata !DIExpression()), !dbg !4939
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4944
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4946
  %8 = load i8, i8* %7, align 1, !dbg !4946
  %9 = zext i8 %8 to i32, !dbg !4946
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !4944
  %11 = add nuw i32 %5, 1, !dbg !4947
  call void @llvm.dbg.value(metadata i32 %11, metadata !4938, metadata !DIExpression()), !dbg !4939
  %12 = icmp eq i32 %11, %1, !dbg !4940
  br i1 %12, label %13, label %4, !dbg !4943, !llvm.loop !4948

13:                                               ; preds = %4, %2
  ret void, !dbg !4950
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4951 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4955, metadata !DIExpression()), !dbg !4957
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4958
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !4958
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4956, metadata !DIExpression()), !dbg !4959
  call void @llvm.va_start(i8* nonnull %3), !dbg !4960
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4961
  %5 = load i32, i32* %4, align 4, !dbg !4961
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4961
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #28, !dbg !4961
  call void @llvm.va_end(i8* nonnull %3), !dbg !4962
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !4963
  ret void, !dbg !4963
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4964 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4968, metadata !DIExpression()), !dbg !4973
  call void @llvm.dbg.value(metadata i32 %1, metadata !4969, metadata !DIExpression()), !dbg !4973
  call void @llvm.dbg.value(metadata i8* %2, metadata !4970, metadata !DIExpression()), !dbg !4973
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4974
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !4974
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4971, metadata !DIExpression()), !dbg !4975
  call void @llvm.va_start(i8* nonnull %5), !dbg !4976
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4977
  %7 = load i32, i32* %6, align 4, !dbg !4977
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4977
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #28, !dbg !4977
  call void @llvm.dbg.value(metadata i32 %9, metadata !4972, metadata !DIExpression()), !dbg !4973
  call void @llvm.va_end(i8* nonnull %5), !dbg !4978
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !4979
  ret i32 %9, !dbg !4980
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4981 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4988, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata i8* %0, metadata !4985, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata i32 %1, metadata !4986, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata i8* %2, metadata !4987, metadata !DIExpression()), !dbg !4995
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4996
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #26, !dbg !4996
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4989, metadata !DIExpression()), !dbg !4997
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4998
  store i8* %0, i8** %7, align 4, !dbg !4998
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4998
  store i32 %1, i32* %8, align 4, !dbg !4998
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4998
  store i32 0, i32* %9, align 4, !dbg !4998
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #28, !dbg !4999
  %10 = load i32, i32* %9, align 4, !dbg !5000
  %11 = load i32, i32* %8, align 4, !dbg !5002
  %12 = icmp slt i32 %10, %11, !dbg !5003
  br i1 %12, label %13, label %15, !dbg !5004

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5005
  store i8 0, i8* %14, align 1, !dbg !5007
  br label %15, !dbg !5008

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #26, !dbg !5009
  ret i32 %10, !dbg !5010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #14 !dbg !5011 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5016, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5017, metadata !DIExpression()), !dbg !5018
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5019
  %4 = load i8*, i8** %3, align 4, !dbg !5019
  %5 = icmp eq i8* %4, null, !dbg !5021
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5022
  br i1 %5, label %12, label %8, !dbg !5023

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5024
  %10 = load i32, i32* %9, align 4, !dbg !5024
  %11 = icmp slt i32 %7, %10, !dbg !5025
  br i1 %11, label %15, label %12, !dbg !5026

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5027
  %14 = add nsw i32 %7, 1, !dbg !5029
  store i32 %14, i32* %13, align 4, !dbg !5029
  br label %25, !dbg !5030

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5031
  %17 = icmp eq i32 %7, %16, !dbg !5033
  br i1 %17, label %18, label %21, !dbg !5034

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5035
  store i32 %19, i32* %6, align 4, !dbg !5035
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5037
  store i8 0, i8* %20, align 1, !dbg !5038
  br label %25, !dbg !5039

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5040
  %23 = add nsw i32 %7, 1, !dbg !5042
  store i32 %23, i32* %6, align 4, !dbg !5042
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5043
  store i8 %22, i8* %24, align 1, !dbg !5044
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5045
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !5046 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5051, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i8* %1, metadata !5052, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i8* %2, metadata !5053, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i8* %3, metadata !5054, metadata !DIExpression()), !dbg !5055
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !5056
  %5 = tail call fastcc %struct.k_thread* @k_current_get.41() #29, !dbg !5057
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #28, !dbg !5058
  unreachable, !dbg !5059
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.41() unnamed_addr #6 !dbg !5060 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.42() #29, !dbg !5166
  ret %struct.k_thread* %1, !dbg !5167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5168 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5172, metadata !DIExpression()), !dbg !5173
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !5174, !srcloc !5176
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !5177
  ret void, !dbg !5178
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.42() unnamed_addr #6 !dbg !5179 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !5180, !srcloc !5182
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !5183
  ret %struct.k_thread* %1, !dbg !5184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5185 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5196, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.value(metadata i8* %1, metadata !5197, metadata !DIExpression()), !dbg !5200
  %3 = icmp eq i8* %1, null, !dbg !5201
  br i1 %3, label %16, label %4, !dbg !5203

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5204
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5204
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5198, metadata !DIExpression()), !dbg !5200
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #28, !dbg !5205, !range !5206
  call void @llvm.dbg.value(metadata i32 %7, metadata !5199, metadata !DIExpression()), !dbg !5200
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5207
  br i1 %8, label %10, label %9, !dbg !5210

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #27, !dbg !5211
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.46, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !5211
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #27, !dbg !5211
  unreachable, !dbg !5211

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5213
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #28, !dbg !5213
  %13 = icmp eq i32 %12, %7, !dbg !5213
  br i1 %13, label %15, label %14, !dbg !5216

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #27, !dbg !5217
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.48, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !5217
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #27, !dbg !5217
  unreachable, !dbg !5217

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #28, !dbg !5219
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5220
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !5222 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5226, metadata !DIExpression()), !dbg !5230
  call void @llvm.dbg.value(metadata i8* %1, metadata !5227, metadata !DIExpression()), !dbg !5230
  call void @llvm.dbg.value(metadata i8* %1, metadata !5228, metadata !DIExpression()), !dbg !5230
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5231
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5229, metadata !DIExpression()), !dbg !5230
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5232
  %5 = ptrtoint i8* %4 to i32, !dbg !5233
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5233
  %7 = sub i32 %5, %6, !dbg !5233
  %8 = lshr i32 %7, 3, !dbg !5234
  ret i32 %8, !dbg !5235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5236 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5240, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %1, metadata !5241, metadata !DIExpression()), !dbg !5242
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #28, !dbg !5243
  %4 = and i32 %3, 1, !dbg !5244
  %5 = icmp ne i32 %4, 0, !dbg !5243
  ret i1 %5, !dbg !5245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5246 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5250, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.value(metadata i32 %1, metadata !5251, metadata !DIExpression()), !dbg !5252
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5253
  %4 = add i32 %3, %1, !dbg !5254
  ret i32 %4, !dbg !5255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5256 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5258, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata i32 %1, metadata !5259, metadata !DIExpression()), !dbg !5260
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #28, !dbg !5261
  %4 = sub i32 %1, %3, !dbg !5262
  ret i32 %4, !dbg !5263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !5264 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5268, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.value(metadata i32 %1, metadata !5269, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.value(metadata i1 %2, metadata !5270, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5273
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5274
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5271, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5272, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5273
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5275
  %6 = bitcast i8* %5 to i16*, !dbg !5275
  %7 = load i16, i16* %6, align 2, !dbg !5275
  %8 = and i16 %7, -2, !dbg !5279
  %9 = zext i1 %2 to i16, !dbg !5279
  %10 = or i16 %8, %9, !dbg !5279
  store i16 %10, i16* %6, align 2, !dbg !5275
  ret void, !dbg !5280
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5281 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5285, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.value(metadata i32 %1, metadata !5286, metadata !DIExpression()), !dbg !5287
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5288
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5290
  br i1 %4, label %7, label %5, !dbg !5291

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5292
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5294
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #28, !dbg !5295
  br label %7, !dbg !5296

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5297
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #28, !dbg !5299
  br i1 %9, label %13, label %10, !dbg !5300

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #28, !dbg !5301
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5303
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #28, !dbg !5304
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5305
  call void @llvm.dbg.value(metadata i32 %12, metadata !5286, metadata !DIExpression()), !dbg !5287
  br label %13, !dbg !5306

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5286, metadata !DIExpression()), !dbg !5287
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #28, !dbg !5307
  ret void, !dbg !5308
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5309 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5311, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.value(metadata i32 %1, metadata !5312, metadata !DIExpression()), !dbg !5316
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5317, !range !5318
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5319
  call void @llvm.dbg.value(metadata i32 %4, metadata !5313, metadata !DIExpression()), !dbg !5320
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #28, !dbg !5321
  ret void, !dbg !5322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5323 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5327, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.value(metadata i32 %1, metadata !5328, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.value(metadata i32 %2, metadata !5329, metadata !DIExpression()), !dbg !5332
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5333
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5334
  %6 = add i32 %5, %4, !dbg !5335
  call void @llvm.dbg.value(metadata i32 %6, metadata !5330, metadata !DIExpression()), !dbg !5332
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #28, !dbg !5336
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5337
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #28, !dbg !5338
  ret void, !dbg !5339
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5340 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5342, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.value(metadata i32 %1, metadata !5343, metadata !DIExpression()), !dbg !5347
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5348, !range !5318
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5349
  call void @llvm.dbg.value(metadata i32 %4, metadata !5344, metadata !DIExpression()), !dbg !5350
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #28, !dbg !5351
  ret void, !dbg !5352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5353 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5357, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata i32 %1, metadata !5358, metadata !DIExpression()), !dbg !5359
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #28, !dbg !5360
  %4 = lshr i32 %3, 1, !dbg !5361
  ret i32 %4, !dbg !5362
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !5363 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5367, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata i32 %1, metadata !5368, metadata !DIExpression()), !dbg !5370
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #28, !dbg !5371
  %4 = add i32 %1, 1, !dbg !5372
  %5 = sub i32 %4, %3, !dbg !5373
  call void @llvm.dbg.value(metadata i32 %5, metadata !5369, metadata !DIExpression()), !dbg !5370
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5374, !range !5375
  %7 = sub nsw i32 31, %6, !dbg !5376
  ret i32 %7, !dbg !5377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5378 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5382, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 %1, metadata !5383, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 %2, metadata !5384, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5391
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5392
  %5 = load i32, i32* %4, align 4, !dbg !5392
  %6 = icmp eq i32 %5, 0, !dbg !5393
  br i1 %6, label %7, label %12, !dbg !5394

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5395
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5397
  %10 = load i32, i32* %9, align 4, !dbg !5398
  %11 = or i32 %10, %8, !dbg !5398
  store i32 %11, i32* %9, align 4, !dbg !5398
  store i32 %1, i32* %4, align 4, !dbg !5399
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #28, !dbg !5400
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #28, !dbg !5401
  br label %14, !dbg !5402

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5387, metadata !DIExpression()), !dbg !5403
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #28, !dbg !5404, !range !5405
  call void @llvm.dbg.value(metadata i32 %13, metadata !5390, metadata !DIExpression()), !dbg !5403
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #28, !dbg !5406
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #28, !dbg !5407
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #28, !dbg !5408
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #28, !dbg !5409
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5411 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5413, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.value(metadata i32 %1, metadata !5414, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.value(metadata i32 %2, metadata !5415, metadata !DIExpression()), !dbg !5416
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #28, !dbg !5417
  ret void, !dbg !5418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5419 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5421, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %1, metadata !5422, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %2, metadata !5423, metadata !DIExpression()), !dbg !5424
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #28, !dbg !5425
  ret void, !dbg !5426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5427 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5429, metadata !DIExpression()), !dbg !5431
  call void @llvm.dbg.value(metadata i32 %1, metadata !5430, metadata !DIExpression()), !dbg !5431
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #28, !dbg !5432
  ret i32 %3, !dbg !5433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !5434 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5438, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.value(metadata i32 %1, metadata !5439, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.value(metadata i32 %2, metadata !5440, metadata !DIExpression()), !dbg !5443
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5444
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5441, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5442, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5443
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5442, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5443
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5445
  call void @llvm.dbg.value(metadata i8* %5, metadata !5442, metadata !DIExpression()), !dbg !5443
  %6 = bitcast i8* %5 to i16*, !dbg !5446
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5449
  %8 = load i16, i16* %7, align 2, !dbg !5449
  %9 = zext i16 %8 to i32, !dbg !5449
  ret i32 %9, !dbg !5450
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5451 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5455, metadata !DIExpression()), !dbg !5456
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5457
  ret %struct.chunk_unit_t* %2, !dbg !5458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #12 !dbg !5459 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5463, metadata !DIExpression()), !dbg !5469
  call void @llvm.dbg.value(metadata i32 %1, metadata !5464, metadata !DIExpression()), !dbg !5469
  call void @llvm.dbg.value(metadata i32 %2, metadata !5465, metadata !DIExpression()), !dbg !5469
  call void @llvm.dbg.value(metadata i32 %3, metadata !5466, metadata !DIExpression()), !dbg !5469
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5470
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5467, metadata !DIExpression()), !dbg !5469
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5469
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5471
  call void @llvm.dbg.value(metadata i8* %6, metadata !5468, metadata !DIExpression()), !dbg !5469
  %7 = trunc i32 %3 to i16, !dbg !5472
  %8 = bitcast i8* %6 to i16*, !dbg !5475
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5476
  store i16 %7, i16* %9, align 2, !dbg !5477
  ret void, !dbg !5478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5479 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5483, metadata !DIExpression()), !dbg !5484
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #28, !dbg !5485
  ret i32 %2, !dbg !5486
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5487 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %1, metadata !5492, metadata !DIExpression()), !dbg !5493
  %3 = add i32 %1, 4, !dbg !5494
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #28, !dbg !5495
  ret i32 %4, !dbg !5496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5497 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5501, metadata !DIExpression()), !dbg !5502
  %2 = add i32 %0, 7, !dbg !5503
  %3 = lshr i32 %2, 3, !dbg !5504
  ret i32 %3, !dbg !5505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5506 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5510, metadata !DIExpression()), !dbg !5513
  call void @llvm.dbg.value(metadata i32 %1, metadata !5511, metadata !DIExpression()), !dbg !5513
  call void @llvm.dbg.value(metadata i32 %2, metadata !5512, metadata !DIExpression()), !dbg !5513
  %4 = shl i32 %2, 1, !dbg !5514
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #28, !dbg !5515
  ret void, !dbg !5516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5517 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5519, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.value(metadata i32 %1, metadata !5520, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.value(metadata i32 %2, metadata !5521, metadata !DIExpression()), !dbg !5522
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #28, !dbg !5523
  ret void, !dbg !5524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5525 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5527, metadata !DIExpression()), !dbg !5535
  call void @llvm.dbg.value(metadata i32 %1, metadata !5528, metadata !DIExpression()), !dbg !5535
  call void @llvm.dbg.value(metadata i32 %2, metadata !5529, metadata !DIExpression()), !dbg !5535
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5536
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !5530, metadata !DIExpression()), !dbg !5535
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5537
  %6 = icmp eq i32 %5, %1, !dbg !5538
  br i1 %6, label %7, label %14, !dbg !5539

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5540
  %9 = xor i32 %8, -1, !dbg !5542
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5543
  %11 = load i32, i32* %10, align 4, !dbg !5544
  %12 = and i32 %11, %9, !dbg !5544
  store i32 %12, i32* %10, align 4, !dbg !5544
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5545
  store i32 0, i32* %13, align 4, !dbg !5546
  br label %17, !dbg !5547

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5548
  call void @llvm.dbg.value(metadata i32 %15, metadata !5531, metadata !DIExpression()), !dbg !5549
  call void @llvm.dbg.value(metadata i32 %5, metadata !5534, metadata !DIExpression()), !dbg !5549
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5550
  store i32 %5, i32* %16, align 4, !dbg !5551
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #28, !dbg !5552
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #28, !dbg !5553
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5555 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5557, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 %1, metadata !5558, metadata !DIExpression()), !dbg !5559
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #28, !dbg !5560
  ret i32 %3, !dbg !5561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #13 !dbg !5562 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5566, metadata !DIExpression()), !dbg !5573
  call void @llvm.dbg.value(metadata i8* %1, metadata !5567, metadata !DIExpression()), !dbg !5573
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5574
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5574
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5568, metadata !DIExpression()), !dbg !5573
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #28, !dbg !5575
  call void @llvm.dbg.value(metadata i32 %5, metadata !5569, metadata !DIExpression()), !dbg !5573
  %6 = ptrtoint i8* %1 to i32, !dbg !5576
  call void @llvm.dbg.value(metadata i32 %6, metadata !5570, metadata !DIExpression()), !dbg !5573
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #28, !dbg !5577
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5577
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5578
  call void @llvm.dbg.value(metadata i32 %9, metadata !5571, metadata !DIExpression()), !dbg !5573
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #28, !dbg !5579
  %11 = shl i32 %10, 3, !dbg !5580
  call void @llvm.dbg.value(metadata i32 %11, metadata !5572, metadata !DIExpression()), !dbg !5573
  %12 = sub i32 %9, %6, !dbg !5581
  %13 = add i32 %12, %11, !dbg !5582
  ret i32 %13, !dbg !5583
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !5584 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5588, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.value(metadata i32 %1, metadata !5589, metadata !DIExpression()), !dbg !5594
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5595
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5595
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5590, metadata !DIExpression()), !dbg !5594
  %5 = icmp eq i32 %1, 0, !dbg !5596
  br i1 %5, label %19, label %6, !dbg !5598

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #28, !dbg !5599
  br i1 %7, label %19, label %8, !dbg !5600

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #28, !dbg !5601, !range !5206
  call void @llvm.dbg.value(metadata i32 %9, metadata !5592, metadata !DIExpression()), !dbg !5594
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #28, !dbg !5602
  call void @llvm.dbg.value(metadata i32 %10, metadata !5593, metadata !DIExpression()), !dbg !5594
  %11 = icmp eq i32 %10, 0, !dbg !5603
  br i1 %11, label %19, label %12, !dbg !5605

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #28, !dbg !5606
  %14 = icmp ugt i32 %13, %9, !dbg !5608
  br i1 %14, label %15, label %17, !dbg !5609

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5610
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #28, !dbg !5612
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #28, !dbg !5613
  br label %17, !dbg !5614

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #28, !dbg !5615
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #28, !dbg !5616
  call void @llvm.dbg.value(metadata i8* %18, metadata !5591, metadata !DIExpression()), !dbg !5594
  br label %19, !dbg !5617

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5594
  ret i8* %20, !dbg !5618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5619 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5623, metadata !DIExpression()), !dbg !5625
  call void @llvm.dbg.value(metadata i32 %1, metadata !5624, metadata !DIExpression()), !dbg !5625
  %3 = lshr i32 %1, 3, !dbg !5626
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5627
  %5 = load i32, i32* %4, align 4, !dbg !5627
  %6 = icmp uge i32 %3, %5, !dbg !5628
  ret i1 %6, !dbg !5629
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5630 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5634, metadata !DIExpression()), !dbg !5649
  call void @llvm.dbg.value(metadata i32 %1, metadata !5635, metadata !DIExpression()), !dbg !5649
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5650
  call void @llvm.dbg.value(metadata i32 %3, metadata !5636, metadata !DIExpression()), !dbg !5649
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5637, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5649
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5651
  %5 = load i32, i32* %4, align 4, !dbg !5651
  %6 = icmp eq i32 %5, 0, !dbg !5652
  br i1 %6, label %19, label %7, !dbg !5653

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5654
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5655
  call void @llvm.dbg.value(metadata i32 %9, metadata !5641, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.value(metadata i32 %8, metadata !5642, metadata !DIExpression()), !dbg !5656
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #28, !dbg !5657
  %11 = icmp ult i32 %10, %1, !dbg !5659
  br i1 %11, label %13, label %12, !dbg !5660

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #28, !dbg !5661
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #28, !dbg !5663
  store i32 %14, i32* %4, align 4, !dbg !5664
  %15 = add nsw i32 %9, -1, !dbg !5665
  call void @llvm.dbg.value(metadata i32 %15, metadata !5641, metadata !DIExpression()), !dbg !5655
  %16 = icmp eq i32 %15, 0, !dbg !5665
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5666
  br i1 %18, label %19, label %7, !dbg !5666, !llvm.loop !5667

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5670
  %21 = load i32, i32* %20, align 4, !dbg !5670
  %22 = add nsw i32 %3, 1, !dbg !5671
  %23 = shl nsw i32 -1, %22, !dbg !5671
  %24 = and i32 %21, %23, !dbg !5672
  call void @llvm.dbg.value(metadata i32 %24, metadata !5644, metadata !DIExpression()), !dbg !5649
  %25 = icmp eq i32 %24, 0, !dbg !5673
  br i1 %25, label %30, label %26, !dbg !5674

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5675, !range !5375
  call void @llvm.dbg.value(metadata i32 %27, metadata !5645, metadata !DIExpression()), !dbg !5676
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5677
  %29 = load i32, i32* %28, align 4, !dbg !5677
  call void @llvm.dbg.value(metadata i32 %29, metadata !5648, metadata !DIExpression()), !dbg !5676
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #28, !dbg !5678
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5649
  ret i32 %31, !dbg !5679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5680 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5682, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i32 %1, metadata !5683, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i32 %2, metadata !5684, metadata !DIExpression()), !dbg !5688
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5689
  call void @llvm.dbg.value(metadata i32 %4, metadata !5685, metadata !DIExpression()), !dbg !5688
  %5 = sub i32 %2, %1, !dbg !5690
  call void @llvm.dbg.value(metadata i32 %5, metadata !5686, metadata !DIExpression()), !dbg !5688
  %6 = sub i32 %4, %5, !dbg !5691
  call void @llvm.dbg.value(metadata i32 %6, metadata !5687, metadata !DIExpression()), !dbg !5688
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #28, !dbg !5692
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #28, !dbg !5693
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #28, !dbg !5694
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5695
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #28, !dbg !5696
  ret void, !dbg !5697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5698 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5702, metadata !DIExpression()), !dbg !5706
  call void @llvm.dbg.value(metadata i32 %1, metadata !5703, metadata !DIExpression()), !dbg !5706
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5707
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5704, metadata !DIExpression()), !dbg !5706
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5708
  call void @llvm.dbg.value(metadata i8* %4, metadata !5705, metadata !DIExpression()), !dbg !5706
  ret i8* %4, !dbg !5709
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5710 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5714, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.value(metadata i32 %1, metadata !5715, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.value(metadata i32 %2, metadata !5716, metadata !DIExpression()), !dbg !5726
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5727
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5727
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5717, metadata !DIExpression()), !dbg !5726
  %6 = sub i32 0, %1, !dbg !5728
  %7 = and i32 %6, %1, !dbg !5729
  call void @llvm.dbg.value(metadata i32 %7, metadata !5719, metadata !DIExpression()), !dbg !5726
  %8 = icmp eq i32 %7, %1, !dbg !5730
  br i1 %8, label %13, label %9, !dbg !5732

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5733
  call void @llvm.dbg.value(metadata i32 %10, metadata !5715, metadata !DIExpression()), !dbg !5726
  %11 = icmp ult i32 %7, 4, !dbg !5735
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5735
  br label %17, !dbg !5735

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5736
  br i1 %14, label %15, label %17, !dbg !5739

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #28, !dbg !5740
  br label %61, !dbg !5742

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5726
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5743
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5715, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.value(metadata i32 %19, metadata !5718, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.value(metadata i32 %18, metadata !5719, metadata !DIExpression()), !dbg !5726
  %21 = add i32 %20, -1, !dbg !5744
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !5744, !range !5375
  %23 = icmp ult i32 %22, 2, !dbg !5744
  br i1 %23, label %25, label %24, !dbg !5747

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #27, !dbg !5748
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #27, !dbg !5748
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #27, !dbg !5748
  unreachable, !dbg !5748

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !5750
  br i1 %26, label %61, label %27, !dbg !5752

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #28, !dbg !5753
  br i1 %28, label %61, label %29, !dbg !5754

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !5755
  %31 = add i32 %30, %20, !dbg !5756
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #28, !dbg !5757, !range !5206
  call void @llvm.dbg.value(metadata i32 %32, metadata !5720, metadata !DIExpression()), !dbg !5726
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #28, !dbg !5758
  call void @llvm.dbg.value(metadata i32 %33, metadata !5721, metadata !DIExpression()), !dbg !5726
  %34 = icmp eq i32 %33, 0, !dbg !5759
  br i1 %34, label %61, label %35, !dbg !5761

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #28, !dbg !5762
  call void @llvm.dbg.value(metadata i8* %36, metadata !5722, metadata !DIExpression()), !dbg !5726
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !5763
  %38 = ptrtoint i8* %37 to i32, !dbg !5763
  %39 = add i32 %21, %38, !dbg !5763
  %40 = sub i32 0, %20, !dbg !5763
  %41 = and i32 %39, %40, !dbg !5763
  %42 = inttoptr i32 %41 to i8*, !dbg !5764
  %43 = sub i32 0, %18, !dbg !5765
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !5765
  call void @llvm.dbg.value(metadata i8* %44, metadata !5722, metadata !DIExpression()), !dbg !5726
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !5766
  %46 = ptrtoint i8* %45 to i32, !dbg !5766
  %47 = add i32 %46, 7, !dbg !5766
  %48 = and i32 %47, -8, !dbg !5766
  call void @llvm.dbg.value(metadata i32 %48, metadata !5723, metadata !DIExpression()), !dbg !5726
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #28, !dbg !5767
  call void @llvm.dbg.value(metadata i32 %49, metadata !5724, metadata !DIExpression()), !dbg !5726
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #28, !dbg !5768
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !5769
  %52 = sub i32 %48, %51, !dbg !5769
  %53 = ashr exact i32 %52, 3, !dbg !5769
  call void @llvm.dbg.value(metadata i32 %53, metadata !5725, metadata !DIExpression()), !dbg !5726
  %54 = icmp ugt i32 %49, %33, !dbg !5770
  br i1 %54, label %55, label %56, !dbg !5772

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #28, !dbg !5773
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #28, !dbg !5775
  br label %56, !dbg !5776

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #28, !dbg !5777
  %58 = icmp ugt i32 %57, %53, !dbg !5779
  br i1 %58, label %59, label %60, !dbg !5780

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #28, !dbg !5781
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #28, !dbg !5783
  br label %60, !dbg !5784

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #28, !dbg !5785
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !5726
  ret i8* %62, !dbg !5786
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5787 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5791, metadata !DIExpression()), !dbg !5810
  call void @llvm.dbg.value(metadata i8* %1, metadata !5792, metadata !DIExpression()), !dbg !5810
  call void @llvm.dbg.value(metadata i32 %2, metadata !5793, metadata !DIExpression()), !dbg !5810
  call void @llvm.dbg.value(metadata i32 %3, metadata !5794, metadata !DIExpression()), !dbg !5810
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5811
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5811
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5795, metadata !DIExpression()), !dbg !5810
  %7 = icmp eq i8* %1, null, !dbg !5812
  br i1 %7, label %8, label %10, !dbg !5814

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #28, !dbg !5815
  br label %63, !dbg !5817

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5818
  br i1 %11, label %12, label %13, !dbg !5820

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #28, !dbg !5821
  br label %63, !dbg !5823

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !5824
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !5824, !range !5375
  %16 = icmp ult i32 %15, 2, !dbg !5824
  br i1 %16, label %18, label %17, !dbg !5827

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #27, !dbg !5828
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #27, !dbg !5828
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #27, !dbg !5828
  unreachable, !dbg !5828

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #28, !dbg !5830
  br i1 %19, label %63, label %20, !dbg !5832

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #28, !dbg !5833, !range !5206
  call void @llvm.dbg.value(metadata i32 %21, metadata !5796, metadata !DIExpression()), !dbg !5810
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5834
  call void @llvm.dbg.value(metadata i32 %22, metadata !5797, metadata !DIExpression()), !dbg !5810
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5835
  %24 = ptrtoint i8* %1 to i32, !dbg !5836
  %25 = ptrtoint i8* %23 to i32, !dbg !5836
  %26 = sub i32 %24, %25, !dbg !5836
  call void @llvm.dbg.value(metadata i32 %26, metadata !5798, metadata !DIExpression()), !dbg !5810
  %27 = add i32 %26, %3, !dbg !5837
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #28, !dbg !5838
  call void @llvm.dbg.value(metadata i32 %28, metadata !5799, metadata !DIExpression()), !dbg !5810
  %29 = icmp eq i32 %2, 0, !dbg !5839
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !5840
  br i1 %32, label %33, label %53, !dbg !5840

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5841
  %35 = icmp eq i32 %28, %34, !dbg !5842
  br i1 %35, label %63, label %36, !dbg !5843

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !5844
  br i1 %37, label %38, label %40, !dbg !5845

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !5846
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #28, !dbg !5848
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #28, !dbg !5849
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #28, !dbg !5850
  br label %63, !dbg !5851

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5852
  br i1 %41, label %53, label %42, !dbg !5853

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5854
  %44 = add i32 %43, %34, !dbg !5855
  %45 = icmp ult i32 %44, %28, !dbg !5856
  br i1 %45, label %53, label %46, !dbg !5857

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !5858
  call void @llvm.dbg.value(metadata i32 %47, metadata !5800, metadata !DIExpression()), !dbg !5859
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5860
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5861
  %49 = icmp ult i32 %47, %48, !dbg !5863
  br i1 %49, label %50, label %52, !dbg !5864

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !5865
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #28, !dbg !5867
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #28, !dbg !5868
  br label %52, !dbg !5869

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #28, !dbg !5870
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #28, !dbg !5871
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #28, !dbg !5872
  call void @llvm.dbg.value(metadata i8* %54, metadata !5806, metadata !DIExpression()), !dbg !5810
  %55 = icmp eq i8* %54, null, !dbg !5873
  br i1 %55, label %63, label %56, !dbg !5874

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5875, !range !5318
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #28, !dbg !5876
  %59 = sub i32 %58, %26, !dbg !5877
  call void @llvm.dbg.value(metadata i32 %59, metadata !5807, metadata !DIExpression()), !dbg !5878
  %60 = icmp ult i32 %59, %3, !dbg !5879
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !5879
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #27, !dbg !5880
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #28, !dbg !5881
  br label %63, !dbg !5882

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !5810
  ret i8* %64, !dbg !5883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5884 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5888, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.value(metadata i32 %1, metadata !5889, metadata !DIExpression()), !dbg !5890
  %3 = shl i32 %1, 3, !dbg !5891
  %4 = add i32 %3, -4, !dbg !5892
  ret i32 %4, !dbg !5893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5894 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5898, metadata !DIExpression()), !dbg !5909
  call void @llvm.dbg.value(metadata i8* %1, metadata !5899, metadata !DIExpression()), !dbg !5909
  call void @llvm.dbg.value(metadata i32 %2, metadata !5900, metadata !DIExpression()), !dbg !5909
  %4 = icmp ult i32 %2, 262144, !dbg !5910
  br i1 %4, label %6, label %5, !dbg !5915

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.51, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #27, !dbg !5916
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.52, i32 0, i32 0)) #27, !dbg !5916
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #27, !dbg !5916
  unreachable, !dbg !5916

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !5918
  br i1 %7, label %9, label %8, !dbg !5921

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #27, !dbg !5922
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !5922
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #27, !dbg !5922
  unreachable, !dbg !5922

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !5924
  call void @llvm.dbg.value(metadata i32 %10, metadata !5900, metadata !DIExpression()), !dbg !5909
  %11 = ptrtoint i8* %1 to i32, !dbg !5925
  %12 = add i32 %11, 7, !dbg !5925
  %13 = and i32 %12, -8, !dbg !5925
  call void @llvm.dbg.value(metadata i32 %13, metadata !5901, metadata !DIExpression()), !dbg !5909
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !5926
  %15 = ptrtoint i8* %14 to i32, !dbg !5926
  %16 = and i32 %15, -8, !dbg !5926
  call void @llvm.dbg.value(metadata i32 %16, metadata !5902, metadata !DIExpression()), !dbg !5909
  %17 = sub i32 %16, %13, !dbg !5927
  %18 = lshr exact i32 %17, 3, !dbg !5928
  call void @llvm.dbg.value(metadata i32 %18, metadata !5903, metadata !DIExpression()), !dbg !5909
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #28, !dbg !5929
  %20 = icmp ugt i32 %18, %19, !dbg !5929
  br i1 %20, label %22, label %21, !dbg !5932

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #27, !dbg !5933
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !5933
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #27, !dbg !5933
  unreachable, !dbg !5933

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !5935
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !5904, metadata !DIExpression()), !dbg !5909
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5936
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !5937
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !5938
  store i32 %18, i32* %25, align 8, !dbg !5939
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !5940
  store i32 0, i32* %26, align 4, !dbg !5941
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #28, !dbg !5942
  call void @llvm.dbg.value(metadata i32 %27, metadata !5905, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5909
  %28 = shl i32 %27, 2, !dbg !5943
  %29 = add i32 %28, 20, !dbg !5944
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #28, !dbg !5945
  call void @llvm.dbg.value(metadata i32 %30, metadata !5906, metadata !DIExpression()), !dbg !5909
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #28, !dbg !5946
  %32 = add i32 %31, %30, !dbg !5946
  %33 = icmp ugt i32 %32, %18, !dbg !5946
  br i1 %33, label %36, label %34, !dbg !5949

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !5907, metadata !DIExpression()), !dbg !5950
  %35 = icmp slt i32 %27, 0, !dbg !5951
  br i1 %35, label %37, label %39, !dbg !5953

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #27, !dbg !5954
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !5954
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #27, !dbg !5954
  unreachable, !dbg !5954

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #28, !dbg !5956
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #28, !dbg !5957
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #28, !dbg !5958
  %38 = sub i32 %18, %30, !dbg !5959
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #28, !dbg !5960
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #28, !dbg !5961
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #28, !dbg !5962
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #28, !dbg !5963
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #28, !dbg !5964
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #28, !dbg !5965
  ret void, !dbg !5966

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !5907, metadata !DIExpression()), !dbg !5950
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !5967
  store i32 0, i32* %41, align 4, !dbg !5969
  %42 = add nuw i32 %40, 1, !dbg !5970
  call void @llvm.dbg.value(metadata i32 %42, metadata !5907, metadata !DIExpression()), !dbg !5950
  %43 = icmp eq i32 %40, %27, !dbg !5951
  br i1 %43, label %37, label %39, !dbg !5953, !llvm.loop !5971
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5973 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5986, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5983, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i8* %1, metadata !5984, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i8* %2, metadata !5985, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %4, metadata !5987, metadata !DIExpression()), !dbg !6112
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !6113
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6113
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5988, metadata !DIExpression()), !dbg !6114
  call void @llvm.dbg.value(metadata i32 0, metadata !5992, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i1 undef, metadata !5994, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6112
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !6115

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !6115

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !6116
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5986, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i8* %30, metadata !5985, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %29, metadata !5992, metadata !DIExpression()), !dbg !6112
  %31 = load i8, i8* %30, align 1, !dbg !6117
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !6115

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !6117
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6118
  call void @llvm.dbg.value(metadata i8* %34, metadata !5985, metadata !DIExpression()), !dbg !6112
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !6118
  call void @llvm.dbg.value(metadata i32 %35, metadata !5996, metadata !DIExpression()), !dbg !6119
  %36 = icmp slt i32 %35, 0, !dbg !6120
  %37 = add i32 %29, 1, !dbg !6118
  call void @llvm.dbg.value(metadata i32 undef, metadata !5992, metadata !DIExpression()), !dbg !6112
  br i1 %36, label %365, label %28, !llvm.loop !6122

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6124
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !6001, metadata !DIExpression()), !dbg !6125
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6125
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !6044, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !6047, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8* %30, metadata !6050, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i32 -1, metadata !6051, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i32 -1, metadata !6052, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8* null, metadata !6053, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8* %14, metadata !6054, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8 0, metadata !6055, metadata !DIExpression()), !dbg !6126
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #28, !dbg !6127
  call void @llvm.dbg.value(metadata i8* %39, metadata !5985, metadata !DIExpression()), !dbg !6112
  %40 = load i24, i24* %15, align 8, !dbg !6128
  %41 = and i24 %40, 256, !dbg !6128
  %42 = icmp eq i24 %41, 0, !dbg !6128
  br i1 %42, label %51, label %43, !dbg !6130

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6131
  call void @llvm.dbg.value(metadata i8* %44, metadata !5986, metadata !DIExpression()), !dbg !6112
  %45 = bitcast i8* %27 to i32*, !dbg !6131
  %46 = load i32, i32* %45, align 4, !dbg !6131
  call void @llvm.dbg.value(metadata i32 %46, metadata !6051, metadata !DIExpression()), !dbg !6126
  %47 = icmp slt i32 %46, 0, !dbg !6133
  br i1 %47, label %48, label %56, !dbg !6135

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6136
  store i24 %49, i24* %15, align 8, !dbg !6136
  %50 = sub nsw i32 0, %46, !dbg !6138
  call void @llvm.dbg.value(metadata i32 %50, metadata !6051, metadata !DIExpression()), !dbg !6126
  br label %56, !dbg !6139

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6140
  %53 = icmp eq i24 %52, 0, !dbg !6140
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6142
  br label %56, !dbg !6142

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6143
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6126
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5986, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %58, metadata !6051, metadata !DIExpression()), !dbg !6126
  %60 = and i24 %57, 1024, !dbg !6143
  %61 = icmp eq i24 %60, 0, !dbg !6143
  br i1 %61, label %69, label %62, !dbg !6144

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6145
  call void @llvm.dbg.value(metadata i8* %63, metadata !5986, metadata !DIExpression()), !dbg !6112
  %64 = bitcast i8* %59 to i32*, !dbg !6145
  %65 = load i32, i32* %64, align 4, !dbg !6145
  call void @llvm.dbg.value(metadata i32 %65, metadata !6056, metadata !DIExpression()), !dbg !6146
  %66 = icmp slt i32 %65, 0, !dbg !6147
  br i1 %66, label %67, label %74, !dbg !6149

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6150
  store i24 %68, i24* %15, align 8, !dbg !6150
  br label %74, !dbg !6152

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6153
  %71 = icmp eq i24 %70, 0, !dbg !6153
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6155
  br label %74, !dbg !6155

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6156
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6126
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6126
  call void @llvm.dbg.value(metadata i8* %77, metadata !5986, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %76, metadata !6052, metadata !DIExpression()), !dbg !6126
  store i32 0, i32* %16, align 4, !dbg !6157
  store i32 0, i32* %17, align 8, !dbg !6158
  %78 = lshr i24 %75, 16, !dbg !6156
  call void @llvm.dbg.value(metadata i24 %78, metadata !6059, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6126
  %79 = lshr i24 %75, 11, !dbg !6159
  %80 = and i24 %79, 15, !dbg !6159
  %81 = zext i24 %80 to i32, !dbg !6159
  call void @llvm.dbg.value(metadata i32 %81, metadata !6060, metadata !DIExpression()), !dbg !6126
  %82 = trunc i24 %78 to i3, !dbg !6160
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6160

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6161

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6164
  call void @llvm.dbg.value(metadata i8* %85, metadata !5986, metadata !DIExpression()), !dbg !6112
  %86 = bitcast i8* %77 to i32*, !dbg !6164
  %87 = load i32, i32* %86, align 4, !dbg !6164
  %88 = sext i32 %87 to i64, !dbg !6164
  store i64 %88, i64* %20, align 8, !dbg !6166
  br label %115, !dbg !6167

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6168
  call void @llvm.dbg.value(metadata i8* %90, metadata !5986, metadata !DIExpression()), !dbg !6112
  %91 = bitcast i8* %77 to i32*, !dbg !6168
  %92 = load i32, i32* %91, align 4, !dbg !6168
  %93 = sext i32 %92 to i64, !dbg !6168
  store i64 %93, i64* %20, align 8, !dbg !6171
  br label %115, !dbg !6172

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6173
  %96 = add i32 %95, 7, !dbg !6173
  %97 = and i32 %96, -8, !dbg !6173
  %98 = inttoptr i32 %97 to i8*, !dbg !6173
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6173
  call void @llvm.dbg.value(metadata i8* %99, metadata !5986, metadata !DIExpression()), !dbg !6112
  %100 = inttoptr i32 %97 to i64*, !dbg !6173
  %101 = load i64, i64* %100, align 8, !dbg !6173
  store i64 %101, i64* %20, align 8, !dbg !6174
  br label %115, !dbg !6175

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6176
  %104 = add i32 %103, 7, !dbg !6176
  %105 = and i32 %104, -8, !dbg !6176
  %106 = inttoptr i32 %105 to i8*, !dbg !6176
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6176
  call void @llvm.dbg.value(metadata i8* %107, metadata !5986, metadata !DIExpression()), !dbg !6112
  %108 = inttoptr i32 %105 to i64*, !dbg !6176
  %109 = load i64, i64* %108, align 8, !dbg !6176
  store i64 %109, i64* %20, align 8, !dbg !6177
  br label %115, !dbg !6178

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6179
  call void @llvm.dbg.value(metadata i8* %111, metadata !5986, metadata !DIExpression()), !dbg !6112
  %112 = bitcast i8* %77 to i32*, !dbg !6179
  %113 = load i32, i32* %112, align 4, !dbg !6179
  %114 = sext i32 %113 to i64, !dbg !6180
  store i64 %114, i64* %20, align 8, !dbg !6181
  br label %115, !dbg !6182

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6183
  call void @llvm.dbg.value(metadata i8* %117, metadata !5986, metadata !DIExpression()), !dbg !6112
  %118 = trunc i24 %79 to i4, !dbg !6184
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6184

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6185
  %121 = ashr exact i64 %120, 56, !dbg !6185
  store i64 %121, i64* %20, align 8, !dbg !6188
  br label %177, !dbg !6189

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6190
  %124 = ashr exact i64 %123, 48, !dbg !6190
  store i64 %124, i64* %20, align 8, !dbg !6193
  br label %177, !dbg !6194

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6195

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6198
  call void @llvm.dbg.value(metadata i8* %127, metadata !5986, metadata !DIExpression()), !dbg !6112
  %128 = bitcast i8* %77 to i32*, !dbg !6198
  %129 = load i32, i32* %128, align 4, !dbg !6198
  %130 = zext i32 %129 to i64, !dbg !6198
  store i64 %130, i64* %20, align 8, !dbg !6200
  br label %157, !dbg !6201

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6202
  call void @llvm.dbg.value(metadata i8* %132, metadata !5986, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i8* %132, metadata !5986, metadata !DIExpression()), !dbg !6112
  %133 = bitcast i8* %77 to i32*, !dbg !6202
  %134 = load i32, i32* %133, align 4, !dbg !6202
  %135 = zext i32 %134 to i64, !dbg !6202
  store i64 %135, i64* %20, align 8, !dbg !6202
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6204
  %138 = add i32 %137, 7, !dbg !6204
  %139 = and i32 %138, -8, !dbg !6204
  %140 = inttoptr i32 %139 to i8*, !dbg !6204
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6204
  call void @llvm.dbg.value(metadata i8* %141, metadata !5986, metadata !DIExpression()), !dbg !6112
  %142 = inttoptr i32 %139 to i64*, !dbg !6204
  %143 = load i64, i64* %142, align 8, !dbg !6204
  store i64 %143, i64* %20, align 8, !dbg !6205
  br label %157, !dbg !6206

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6207
  %146 = add i32 %145, 7, !dbg !6207
  %147 = and i32 %146, -8, !dbg !6207
  %148 = inttoptr i32 %147 to i8*, !dbg !6207
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6207
  call void @llvm.dbg.value(metadata i8* %149, metadata !5986, metadata !DIExpression()), !dbg !6112
  %150 = inttoptr i32 %147 to i64*, !dbg !6207
  %151 = load i64, i64* %150, align 8, !dbg !6207
  store i64 %151, i64* %20, align 8, !dbg !6208
  br label %157, !dbg !6209

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6210
  call void @llvm.dbg.value(metadata i8* %153, metadata !5986, metadata !DIExpression()), !dbg !6112
  %154 = bitcast i8* %77 to i32*, !dbg !6210
  %155 = load i32, i32* %154, align 4, !dbg !6210
  %156 = zext i32 %155 to i64, !dbg !6211
  store i64 %156, i64* %20, align 8, !dbg !6212
  br label %157, !dbg !6213

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6214
  call void @llvm.dbg.value(metadata i8* %159, metadata !5986, metadata !DIExpression()), !dbg !6112
  %160 = trunc i24 %79 to i4, !dbg !6215
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6215

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6216
  store i64 %162, i64* %20, align 8, !dbg !6219
  br label %177, !dbg !6220

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6221
  store i64 %164, i64* %20, align 8, !dbg !6224
  br label %177, !dbg !6225

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6226
  %167 = add i32 %166, 7, !dbg !6226
  %168 = and i32 %167, -8, !dbg !6226
  %169 = inttoptr i32 %168 to i8*, !dbg !6226
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6226
  call void @llvm.dbg.value(metadata i8* %170, metadata !5986, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i8* %170, metadata !5986, metadata !DIExpression()), !dbg !6112
  %171 = inttoptr i32 %168 to double*, !dbg !6226
  %172 = load double, double* %171, align 8, !dbg !6226
  store double %172, double* %19, align 8, !dbg !6226
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6230
  call void @llvm.dbg.value(metadata i8* %174, metadata !5986, metadata !DIExpression()), !dbg !6112
  %175 = bitcast i8* %77 to i8**, !dbg !6230
  %176 = load i8*, i8** %175, align 4, !dbg !6230
  store i8* %176, i8** %18, align 8, !dbg !6233
  br label %177, !dbg !6234

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6126
  call void @llvm.dbg.value(metadata i8* %178, metadata !5986, metadata !DIExpression()), !dbg !6112
  %179 = and i24 %75, 3, !dbg !6235
  %180 = icmp eq i24 %179, 0, !dbg !6235
  br i1 %180, label %185, label %181, !dbg !6235

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #28, !dbg !6236
  call void @llvm.dbg.value(metadata i32 %182, metadata !6061, metadata !DIExpression()), !dbg !6237
  %183 = icmp slt i32 %182, 0, !dbg !6238
  %184 = add i32 %182, %29, !dbg !6236
  call void @llvm.dbg.value(metadata i32 undef, metadata !5992, metadata !DIExpression()), !dbg !6112
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6240
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6241

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !6242
  call void @llvm.dbg.value(metadata i32 %188, metadata !6065, metadata !DIExpression()), !dbg !6243
  %189 = icmp slt i32 %188, 0, !dbg !6244
  %190 = add i32 %29, 1, !dbg !6242
  call void @llvm.dbg.value(metadata i32 undef, metadata !5992, metadata !DIExpression()), !dbg !6112
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6246
  call void @llvm.dbg.value(metadata i8* %192, metadata !6053, metadata !DIExpression()), !dbg !6126
  %193 = icmp sgt i32 %76, -1, !dbg !6247
  br i1 %193, label %194, label %196, !dbg !6249

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !6250
  call void @llvm.dbg.value(metadata i32 %195, metadata !6068, metadata !DIExpression()), !dbg !6252
  br label %241, !dbg !6253

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !6254
  call void @llvm.dbg.value(metadata i32 %197, metadata !6068, metadata !DIExpression()), !dbg !6252
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !6053, metadata !DIExpression()), !dbg !6126
  %199 = load i64, i64* %20, align 8, !dbg !6256
  %200 = trunc i64 %199 to i8, !dbg !6257
  store i8 %200, i8* %10, align 1, !dbg !6258
  call void @llvm.dbg.value(metadata i8* %23, metadata !6054, metadata !DIExpression()), !dbg !6126
  br label %245, !dbg !6259

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6260
  %203 = icmp eq i24 %202, 0, !dbg !6260
  %204 = trunc i24 %75 to i8, !dbg !6262
  %205 = shl i8 %204, 1, !dbg !6262
  %206 = and i8 %205, 32, !dbg !6262
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6262
  call void @llvm.dbg.value(metadata i8 %207, metadata !6055, metadata !DIExpression()), !dbg !6126
  %208 = load i64, i64* %20, align 8, !dbg !6263
  call void @llvm.dbg.value(metadata i64 %208, metadata !5993, metadata !DIExpression()), !dbg !6112
  %209 = icmp slt i64 %208, 0, !dbg !6264
  br i1 %209, label %210, label %212, !dbg !6266

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !6055, metadata !DIExpression()), !dbg !6126
  %211 = sub nsw i64 0, %208, !dbg !6267
  store i64 %211, i64* %20, align 8, !dbg !6269
  br label %212, !dbg !6270

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6126
  call void @llvm.dbg.value(metadata i8 %213, metadata !6055, metadata !DIExpression()), !dbg !6126
  %214 = load i64, i64* %20, align 8, !dbg !6271
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #28, !dbg !6272
  call void @llvm.dbg.value(metadata i8* %215, metadata !6053, metadata !DIExpression()), !dbg !6126
  br label %216, !dbg !6273

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6274
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6275
  call void @llvm.dbg.value(metadata i8* %218, metadata !6053, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8 %217, metadata !6055, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.label(metadata !6111), !dbg !6276
  %219 = icmp sgt i32 %76, -1, !dbg !6277
  br i1 %219, label %222, label %220, !dbg !6278

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6279
  br label %245, !dbg !6278

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6281
  %224 = sub i32 %22, %223, !dbg !6281
  call void @llvm.dbg.value(metadata i32 %224, metadata !6070, metadata !DIExpression()), !dbg !6282
  %225 = load i24, i24* %15, align 8, !dbg !6283
  %226 = and i24 %225, -65, !dbg !6283
  store i24 %226, i24* %15, align 8, !dbg !6283
  %227 = icmp ugt i32 %76, %224, !dbg !6284
  br i1 %227, label %228, label %245, !dbg !6286

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6287
  store i32 %229, i32* %16, align 4, !dbg !6289
  br label %245, !dbg !6290

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6291
  %232 = icmp eq i8* %231, null, !dbg !6293
  br i1 %232, label %245, label %233, !dbg !6294

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6295
  %235 = zext i32 %234 to i64, !dbg !6295
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #28, !dbg !6297
  call void @llvm.dbg.value(metadata i8* %236, metadata !6053, metadata !DIExpression()), !dbg !6126
  %237 = load i24, i24* %15, align 8, !dbg !6298
  %238 = or i24 %237, 1048576, !dbg !6298
  store i24 %238, i24* %15, align 8, !dbg !6298
  store i8 120, i8* %21, align 1, !dbg !6299
  br label %216, !dbg !6300

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6301
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #28, !dbg !6304
  br label %363, !dbg !6305

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6306
  call void @llvm.dbg.value(metadata i32 %242, metadata !6068, metadata !DIExpression()), !dbg !6252
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6307
  call void @llvm.dbg.value(metadata i32 -1, metadata !6052, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i32 %29, metadata !5992, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i8* %192, metadata !6053, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8* %243, metadata !6054, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8 0, metadata !6055, metadata !DIExpression()), !dbg !6126
  %244 = icmp eq i8* %192, null, !dbg !6308
  br i1 %244, label %363, label %245, !dbg !6310, !llvm.loop !6122

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6279
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !6073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6126
  call void @llvm.dbg.value(metadata i32 0, metadata !6074, metadata !DIExpression()), !dbg !6126
  %250 = zext i8 %249 to i32, !dbg !6311
  %251 = icmp eq i8 %249, 0, !dbg !6313
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !6073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6126
  call void @llvm.dbg.value(metadata i32 undef, metadata !6073, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !6073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6126
  call void @llvm.dbg.value(metadata i32 undef, metadata !6073, metadata !DIExpression()), !dbg !6126
  %252 = icmp sgt i32 %58, 0, !dbg !6314
  br i1 %252, label %253, label %302, !dbg !6315

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6279
  %255 = icmp eq i24 %254, 0, !dbg !6279
  %256 = ptrtoint i8* %248 to i32, !dbg !6316
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !6073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6126
  %257 = ptrtoint i8* %247 to i32, !dbg !6316
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !6073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6126
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !6073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6126
  %258 = xor i1 %251, true, !dbg !6317
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6126
  %259 = sext i1 %258 to i32, !dbg !6317
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6126
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !6073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6126
  %260 = lshr i24 %246, 19, !dbg !6318
  %261 = and i24 %260, 1, !dbg !6318
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6318
  %263 = zext i24 %262 to i32, !dbg !6318
  %264 = add i32 %257, %259, !dbg !6318
  %265 = add i32 %256, %263, !dbg !6318
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !6073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6126
  %266 = and i24 %246, 4194304, !dbg !6319
  %267 = icmp eq i24 %266, 0, !dbg !6319
  %268 = load i32, i32* %16, align 4, !dbg !6321
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !6073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6126
  call void @llvm.dbg.value(metadata i32 undef, metadata !6073, metadata !DIExpression()), !dbg !6126
  %269 = load i32, i32* %17, align 8, !dbg !6322
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6322
  call void @llvm.dbg.value(metadata i32 undef, metadata !6073, metadata !DIExpression()), !dbg !6126
  %271 = add i32 %264, %58, !dbg !6322
  %272 = add i32 %265, %268, !dbg !6322
  %273 = add i32 %272, %270, !dbg !6323
  %274 = sub i32 %271, %273, !dbg !6323
  call void @llvm.dbg.value(metadata i32 %274, metadata !6051, metadata !DIExpression()), !dbg !6126
  %275 = and i24 %246, 4, !dbg !6324
  %276 = icmp eq i24 %275, 0, !dbg !6324
  br i1 %276, label %277, label %302, !dbg !6325

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !6075, metadata !DIExpression()), !dbg !6326
  %278 = and i24 %246, 64, !dbg !6327
  %279 = icmp eq i24 %278, 0, !dbg !6327
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6328
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6328
  %282 = select i1 %279, i32 32, i32 48, !dbg !6328
  br i1 %280, label %287, label %283, !dbg !6328

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !6329
  call void @llvm.dbg.value(metadata i32 %284, metadata !6080, metadata !DIExpression()), !dbg !6330
  %285 = icmp slt i32 %284, 0, !dbg !6331
  %286 = add i32 %29, 1, !dbg !6329
  call void @llvm.dbg.value(metadata i32 undef, metadata !5992, metadata !DIExpression()), !dbg !6112
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6126
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !6116
  call void @llvm.dbg.value(metadata i32 %290, metadata !5992, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i8 undef, metadata !6075, metadata !DIExpression()), !dbg !6326
  call void @llvm.dbg.value(metadata i8 %288, metadata !6055, metadata !DIExpression()), !dbg !6126
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6333
  %292 = add i32 %291, -1, !dbg !6333
  br label %293, !dbg !6333

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6334
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !6116
  call void @llvm.dbg.value(metadata i32 %295, metadata !5992, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %294, metadata !6051, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i32 %294, metadata !6051, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6126
  %296 = icmp sgt i32 %294, 0, !dbg !6335
  br i1 %296, label %297, label %302, !dbg !6333

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6336
  call void @llvm.dbg.value(metadata i32 %298, metadata !6051, metadata !DIExpression()), !dbg !6126
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !6337
  call void @llvm.dbg.value(metadata i32 %299, metadata !6086, metadata !DIExpression()), !dbg !6338
  %300 = icmp slt i32 %299, 0, !dbg !6339
  %301 = add i32 %295, 1, !dbg !6337
  call void @llvm.dbg.value(metadata i32 undef, metadata !5992, metadata !DIExpression()), !dbg !6112
  br i1 %300, label %361, label %293, !llvm.loop !6341

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6126
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6126
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !6116
  call void @llvm.dbg.value(metadata i32 %305, metadata !5992, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %304, metadata !6051, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8 %303, metadata !6055, metadata !DIExpression()), !dbg !6126
  %306 = icmp eq i8 %303, 0, !dbg !6343
  br i1 %306, label %312, label %307, !dbg !6344

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6345
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !6346
  call void @llvm.dbg.value(metadata i32 %309, metadata !6089, metadata !DIExpression()), !dbg !6347
  %310 = icmp slt i32 %309, 0, !dbg !6348
  %311 = add i32 %305, 1, !dbg !6346
  call void @llvm.dbg.value(metadata i32 undef, metadata !5992, metadata !DIExpression()), !dbg !6112
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !6116
  call void @llvm.dbg.value(metadata i32 %313, metadata !5992, metadata !DIExpression()), !dbg !6112
  %314 = lshr i24 %246, 20, !dbg !6350
  %315 = lshr i24 %246, 19, !dbg !6351
  %316 = or i24 %314, %315, !dbg !6352
  %317 = and i24 %316, 1, !dbg !6352
  %318 = icmp eq i24 %317, 0, !dbg !6352
  br i1 %318, label %323, label %319, !dbg !6353

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !6354
  call void @llvm.dbg.value(metadata i32 %320, metadata !6093, metadata !DIExpression()), !dbg !6355
  %321 = icmp slt i32 %320, 0, !dbg !6356
  %322 = add i32 %313, 1, !dbg !6354
  call void @llvm.dbg.value(metadata i32 undef, metadata !5992, metadata !DIExpression()), !dbg !6112
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !6116
  call void @llvm.dbg.value(metadata i32 %324, metadata !5992, metadata !DIExpression()), !dbg !6112
  %325 = and i24 %246, 1048576, !dbg !6358
  %326 = icmp eq i24 %325, 0, !dbg !6358
  br i1 %326, label %333, label %327, !dbg !6359

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6360
  %329 = zext i8 %328 to i32, !dbg !6360
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !6360
  call void @llvm.dbg.value(metadata i32 %330, metadata !6099, metadata !DIExpression()), !dbg !6361
  %331 = icmp slt i32 %330, 0, !dbg !6362
  %332 = add i32 %324, 1, !dbg !6360
  call void @llvm.dbg.value(metadata i32 undef, metadata !5992, metadata !DIExpression()), !dbg !6112
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !6116
  call void @llvm.dbg.value(metadata i32 %334, metadata !5992, metadata !DIExpression()), !dbg !6112
  %335 = load i32, i32* %16, align 4, !dbg !6364
  call void @llvm.dbg.value(metadata i32 %335, metadata !6074, metadata !DIExpression()), !dbg !6126
  br label %336, !dbg !6365

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6366
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !6116
  call void @llvm.dbg.value(metadata i32 %338, metadata !5992, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %337, metadata !6074, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6126
  %339 = icmp sgt i32 %337, 0, !dbg !6367
  br i1 %339, label %340, label %345, !dbg !6365

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6368
  call void @llvm.dbg.value(metadata i32 %341, metadata !6074, metadata !DIExpression()), !dbg !6126
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !6369
  call void @llvm.dbg.value(metadata i32 %342, metadata !6103, metadata !DIExpression()), !dbg !6370
  %343 = icmp slt i32 %342, 0, !dbg !6371
  %344 = add i32 %338, 1, !dbg !6369
  call void @llvm.dbg.value(metadata i32 undef, metadata !5992, metadata !DIExpression()), !dbg !6112
  br i1 %343, label %361, label %336, !llvm.loop !6373

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #28, !dbg !6375
  call void @llvm.dbg.value(metadata i32 %346, metadata !6106, metadata !DIExpression()), !dbg !6376
  %347 = icmp slt i32 %346, 0, !dbg !6377
  call void @llvm.dbg.value(metadata i32 undef, metadata !5992, metadata !DIExpression()), !dbg !6112
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6375
  call void @llvm.dbg.value(metadata i32 %349, metadata !5992, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %304, metadata !6051, metadata !DIExpression()), !dbg !6126
  %350 = icmp sgt i32 %304, 0, !dbg !6379
  br i1 %350, label %351, label %363, !dbg !6380

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6380
  %353 = add i32 %352, %338, !dbg !6380
  br label %354, !dbg !6380

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5992, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %355, metadata !6051, metadata !DIExpression()), !dbg !6126
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !6381
  call void @llvm.dbg.value(metadata i32 %356, metadata !6108, metadata !DIExpression()), !dbg !6382
  %357 = icmp slt i32 %356, 0, !dbg !6383
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6385
  call void @llvm.dbg.value(metadata i32 undef, metadata !5992, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %359, metadata !6051, metadata !DIExpression()), !dbg !6126
  %360 = icmp sgt i32 %355, 1, !dbg !6379
  br i1 %360, label %354, label %363, !dbg !6380, !llvm.loop !6386

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5992, metadata !DIExpression()), !dbg !6112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6123
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !6116
  call void @llvm.dbg.value(metadata i32 %364, metadata !5992, metadata !DIExpression()), !dbg !6112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6123
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !6112
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6388
  ret i32 %366, !dbg !6388
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #16

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6389 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6393, metadata !DIExpression()), !dbg !6395
  call void @llvm.dbg.value(metadata i8* %1, metadata !6394, metadata !DIExpression()), !dbg !6395
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6396
  store i24 0, i24* %3, align 4, !dbg !6396
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6396
  store i8 0, i8* %4, align 1, !dbg !6396
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6396
  store i32 0, i32* %5, align 4, !dbg !6396
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6396
  store i32 0, i32* %6, align 4, !dbg !6396
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6397
  call void @llvm.dbg.value(metadata i8* %7, metadata !6394, metadata !DIExpression()), !dbg !6395
  %8 = load i8, i8* %7, align 1, !dbg !6398
  %9 = icmp eq i8 %8, 37, !dbg !6400
  br i1 %9, label %10, label %12, !dbg !6401

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6402
  call void @llvm.dbg.value(metadata i8* %11, metadata !6394, metadata !DIExpression()), !dbg !6395
  store i8 37, i8* %4, align 1, !dbg !6404
  br label %18, !dbg !6405

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #28, !dbg !6406
  call void @llvm.dbg.value(metadata i8* %13, metadata !6394, metadata !DIExpression()), !dbg !6395
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #28, !dbg !6407
  call void @llvm.dbg.value(metadata i8* %14, metadata !6394, metadata !DIExpression()), !dbg !6395
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #28, !dbg !6408
  call void @llvm.dbg.value(metadata i8* %15, metadata !6394, metadata !DIExpression()), !dbg !6395
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #28, !dbg !6409
  call void @llvm.dbg.value(metadata i8* %16, metadata !6394, metadata !DIExpression()), !dbg !6395
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #28, !dbg !6410
  call void @llvm.dbg.value(metadata i8* %17, metadata !6394, metadata !DIExpression()), !dbg !6395
  br label %18, !dbg !6411

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6395
  ret i8* %19, !dbg !6412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6413 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6417, metadata !DIExpression()), !dbg !6424
  call void @llvm.dbg.value(metadata i8* %1, metadata !6418, metadata !DIExpression()), !dbg !6424
  call void @llvm.dbg.value(metadata i8* %2, metadata !6419, metadata !DIExpression()), !dbg !6424
  call void @llvm.dbg.value(metadata i8* %3, metadata !6420, metadata !DIExpression()), !dbg !6424
  call void @llvm.dbg.value(metadata i32 0, metadata !6421, metadata !DIExpression()), !dbg !6424
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6425

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6426
  call void @llvm.dbg.value(metadata i32 %9, metadata !6421, metadata !DIExpression()), !dbg !6424
  call void @llvm.dbg.value(metadata i8* %8, metadata !6419, metadata !DIExpression()), !dbg !6424
  %10 = icmp ult i8* %8, %3, !dbg !6427
  br i1 %10, label %11, label %13, !dbg !6428

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6429
  br label %17, !dbg !6428

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6430

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6431
  %16 = icmp eq i8 %15, 0, !dbg !6430
  br i1 %16, label %24, label %17, !dbg !6425

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6429
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6432
  call void @llvm.dbg.value(metadata i8* %19, metadata !6419, metadata !DIExpression()), !dbg !6424
  %20 = zext i8 %18 to i32, !dbg !6433
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !6434
  call void @llvm.dbg.value(metadata i32 %21, metadata !6422, metadata !DIExpression()), !dbg !6435
  %22 = icmp slt i32 %21, 0, !dbg !6436
  %23 = add i32 %9, 1, !dbg !6438
  call void @llvm.dbg.value(metadata i32 undef, metadata !6421, metadata !DIExpression()), !dbg !6424
  br i1 %22, label %24, label %7, !llvm.loop !6439

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6424
  ret i32 %25, !dbg !6441
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #17 !dbg !6442 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6446, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6447, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.value(metadata i8* %2, metadata !6448, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.value(metadata i8* %3, metadata !6449, metadata !DIExpression()), !dbg !6456
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6457
  %6 = load i8, i8* %5, align 1, !dbg !6457
  %7 = zext i8 %6 to i32, !dbg !6458
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #28, !dbg !6459
  %9 = icmp eq i32 %8, 0, !dbg !6459
  call void @llvm.dbg.value(metadata i1 %9, metadata !6450, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6456
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #28, !dbg !6460
  call void @llvm.dbg.value(metadata i32 %10, metadata !6451, metadata !DIExpression()), !dbg !6456
  %11 = ptrtoint i8* %3 to i32, !dbg !6461
  %12 = ptrtoint i8* %2 to i32, !dbg !6461
  %13 = sub i32 %11, %12, !dbg !6461
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6462
  call void @llvm.dbg.value(metadata i8* %14, metadata !6453, metadata !DIExpression()), !dbg !6456
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6463

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6456
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6446, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.value(metadata i8* %18, metadata !6453, metadata !DIExpression()), !dbg !6456
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6464
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6465
  call void @llvm.dbg.value(metadata i32 %25, metadata !6454, metadata !DIExpression()), !dbg !6466
  %26 = icmp ult i32 %25, 10, !dbg !6467
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6468
  %28 = add i32 %27, %25, !dbg !6466
  %29 = trunc i32 %28 to i8, !dbg !6468
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6469
  call void @llvm.dbg.value(metadata i8* %30, metadata !6453, metadata !DIExpression()), !dbg !6456
  store i8 %29, i8* %30, align 1, !dbg !6470
  call void @llvm.dbg.value(metadata i64 %22, metadata !6446, metadata !DIExpression()), !dbg !6456
  %31 = icmp uge i64 %19, %15, !dbg !6471
  %32 = icmp ugt i8* %30, %2, !dbg !6472
  %33 = and i1 %31, %32, !dbg !6472
  br i1 %33, label %17, label %34, !dbg !6473, !llvm.loop !6474

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6476
  %36 = load i24, i24* %35, align 4, !dbg !6476
  %37 = and i24 %36, 32, !dbg !6476
  %38 = icmp eq i24 %37, 0, !dbg !6476
  br i1 %38, label %44, label %39, !dbg !6478

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6479

40:                                               ; preds = %39
  br label %41, !dbg !6481

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6485
  store i24 %43, i24* %35, align 4, !dbg !6485
  br label %44, !dbg !6486

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #14 !dbg !6487 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6493, metadata !DIExpression()), !dbg !6496
  call void @llvm.dbg.value(metadata i8* %1, metadata !6494, metadata !DIExpression()), !dbg !6496
  call void @llvm.dbg.value(metadata i32 %2, metadata !6495, metadata !DIExpression()), !dbg !6496
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6497
  %5 = load i24, i24* %4, align 4, !dbg !6497
  %6 = lshr i24 %5, 11, !dbg !6497
  %7 = and i24 %6, 15, !dbg !6497
  %8 = zext i24 %7 to i32, !dbg !6497
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6498

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6499
  store i32 %2, i32* %10, align 4, !dbg !6501
  br label %28, !dbg !6502

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6503
  store i8 %12, i8* %1, align 1, !dbg !6504
  br label %28, !dbg !6505

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6506
  %15 = bitcast i8* %1 to i16*, !dbg !6507
  store i16 %14, i16* %15, align 2, !dbg !6508
  br label %28, !dbg !6509

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6510
  store i32 %2, i32* %17, align 4, !dbg !6511
  br label %28, !dbg !6512

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6513
  %20 = bitcast i8* %1 to i64*, !dbg !6514
  store i64 %19, i64* %20, align 8, !dbg !6515
  br label %28, !dbg !6516

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6517
  %23 = bitcast i8* %1 to i64*, !dbg !6518
  store i64 %22, i64* %23, align 8, !dbg !6519
  br label %28, !dbg !6520

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6521
  store i32 %2, i32* %25, align 4, !dbg !6522
  br label %28, !dbg !6523

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6524
  store i32 %2, i32* %27, align 4, !dbg !6525
  br label %28, !dbg !6526

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6527
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6531, metadata !DIExpression()), !dbg !6532
  %2 = add i32 %0, -65, !dbg !6533
  %3 = icmp ult i32 %2, 26, !dbg !6534
  %4 = zext i1 %3 to i32, !dbg !6534
  ret i32 %4, !dbg !6535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6536 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6540, metadata !DIExpression()), !dbg !6541
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6542

2:                                                ; preds = %1
  br label %4, !dbg !6543

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6545

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6546
  ret i32 %5, !dbg !6547
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #17 !dbg !6548 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6550, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.value(metadata i8* %1, metadata !6551, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.value(metadata i8 1, metadata !6552, metadata !DIExpression()), !dbg !6553
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6554

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6552, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.value(metadata i8* %5, metadata !6551, metadata !DIExpression()), !dbg !6553
  %6 = load i8, i8* %5, align 1, !dbg !6555
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6557

7:                                                ; preds = %4
  br label %11, !dbg !6558

8:                                                ; preds = %4
  br label %11, !dbg !6560

9:                                                ; preds = %4
  br label %11, !dbg !6561

10:                                               ; preds = %4
  br label %11, !dbg !6562

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6563
  %14 = or i24 %13, %12, !dbg !6563
  store i24 %14, i24* %3, align 4, !dbg !6563
  call void @llvm.dbg.value(metadata i8 poison, metadata !6552, metadata !DIExpression()), !dbg !6553
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6551, metadata !DIExpression()), !dbg !6553
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6552, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.value(metadata i8* %15, metadata !6551, metadata !DIExpression()), !dbg !6553
  %17 = load i24, i24* %3, align 4, !dbg !6564
  %18 = and i24 %17, 68, !dbg !6566
  %19 = icmp eq i24 %18, 68, !dbg !6566
  br i1 %19, label %20, label %22, !dbg !6566

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6567
  store i24 %21, i24* %3, align 4, !dbg !6567
  br label %22, !dbg !6569

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6570
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6571 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6573, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.value(metadata i8* %1, metadata !6574, metadata !DIExpression()), !dbg !6577
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6578
  %5 = load i24, i24* %4, align 4, !dbg !6579
  %6 = or i24 %5, 128, !dbg !6579
  store i24 %6, i24* %4, align 4, !dbg !6579
  call void @llvm.dbg.value(metadata i8* %1, metadata !6574, metadata !DIExpression()), !dbg !6577
  %7 = load i8, i8* %1, align 1, !dbg !6580
  %8 = icmp eq i8 %7, 42, !dbg !6582
  br i1 %8, label %9, label %12, !dbg !6583

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6584
  store i24 %10, i24* %4, align 4, !dbg !6584
  call void @llvm.dbg.value(metadata i8* %1, metadata !6574, metadata !DIExpression()), !dbg !6577
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6586
  call void @llvm.dbg.value(metadata i8* %11, metadata !6574, metadata !DIExpression()), !dbg !6577
  store i8* %11, i8** %3, align 4, !dbg !6586
  br label %29, !dbg !6587

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6575, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.value(metadata i8** %3, metadata !6574, metadata !DIExpression(DW_OP_deref)), !dbg !6577
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #28, !dbg !6588
  call void @llvm.dbg.value(metadata i32 %13, metadata !6576, metadata !DIExpression()), !dbg !6577
  %14 = load i8*, i8** %3, align 4, !dbg !6589
  call void @llvm.dbg.value(metadata i8* %14, metadata !6574, metadata !DIExpression()), !dbg !6577
  %15 = icmp eq i8* %14, %1, !dbg !6591
  br i1 %15, label %29, label %16, !dbg !6592

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6593
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6595
  store i32 %13, i32* %18, align 4, !dbg !6596
  %19 = lshr i32 %13, 31, !dbg !6597
  %20 = lshr i24 %17, 1, !dbg !6598
  %21 = and i24 %20, 1, !dbg !6598
  %22 = zext i24 %21 to i32, !dbg !6598
  %23 = or i32 %19, %22, !dbg !6598
  %24 = trunc i32 %23 to i24, !dbg !6598
  %25 = shl nuw nsw i24 %24, 1, !dbg !6598
  %26 = and i24 %17, -131, !dbg !6598
  %27 = or i24 %26, 128, !dbg !6598
  %28 = or i24 %25, %27, !dbg !6598
  store i24 %28, i24* %4, align 4, !dbg !6598
  br label %29, !dbg !6599

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6577
  ret i8* %30, !dbg !6600
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6601 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6603, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.value(metadata i8* %1, metadata !6604, metadata !DIExpression()), !dbg !6606
  %4 = load i8, i8* %1, align 1, !dbg !6607
  %5 = icmp eq i8 %4, 46, !dbg !6608
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6609
  %7 = load i24, i24* %6, align 4, !dbg !6610
  %8 = select i1 %5, i24 512, i24 0, !dbg !6610
  %9 = and i24 %7, -513, !dbg !6610
  %10 = or i24 %9, %8, !dbg !6610
  store i24 %10, i24* %6, align 4, !dbg !6610
  br i1 %5, label %11, label %32, !dbg !6611

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6604, metadata !DIExpression()), !dbg !6606
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6612
  call void @llvm.dbg.value(metadata i8* %12, metadata !6604, metadata !DIExpression()), !dbg !6606
  store i8* %12, i8** %3, align 4, !dbg !6612
  %13 = load i8, i8* %12, align 1, !dbg !6613
  %14 = icmp eq i8 %13, 42, !dbg !6615
  br i1 %14, label %15, label %18, !dbg !6616

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6617
  store i24 %16, i24* %6, align 4, !dbg !6617
  call void @llvm.dbg.value(metadata i8* %12, metadata !6604, metadata !DIExpression()), !dbg !6606
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6619
  call void @llvm.dbg.value(metadata i8* %17, metadata !6604, metadata !DIExpression()), !dbg !6606
  store i8* %17, i8** %3, align 4, !dbg !6619
  br label %32, !dbg !6620

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6604, metadata !DIExpression(DW_OP_deref)), !dbg !6606
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #28, !dbg !6621
  call void @llvm.dbg.value(metadata i32 %19, metadata !6605, metadata !DIExpression()), !dbg !6606
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6622
  store i32 %19, i32* %20, align 4, !dbg !6623
  %21 = lshr i32 %19, 31, !dbg !6624
  %22 = load i24, i24* %6, align 4, !dbg !6625
  %23 = lshr i24 %22, 1, !dbg !6625
  %24 = and i24 %23, 1, !dbg !6625
  %25 = zext i24 %24 to i32, !dbg !6625
  %26 = or i32 %21, %25, !dbg !6625
  %27 = trunc i32 %26 to i24, !dbg !6625
  %28 = shl nuw nsw i24 %27, 1, !dbg !6625
  %29 = and i24 %22, -3, !dbg !6625
  %30 = or i24 %28, %29, !dbg !6625
  store i24 %30, i24* %6, align 4, !dbg !6625
  %31 = load i8*, i8** %3, align 4, !dbg !6626
  call void @llvm.dbg.value(metadata i8* %31, metadata !6604, metadata !DIExpression()), !dbg !6606
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6606
  ret i8* %33, !dbg !6627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6628 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6630, metadata !DIExpression()), !dbg !6632
  call void @llvm.dbg.value(metadata i8* %1, metadata !6631, metadata !DIExpression()), !dbg !6632
  %3 = load i8, i8* %1, align 1, !dbg !6633
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6634

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6635
  call void @llvm.dbg.value(metadata i8* %5, metadata !6631, metadata !DIExpression()), !dbg !6632
  %6 = load i8, i8* %5, align 1, !dbg !6638
  %7 = icmp eq i8 %6, 104, !dbg !6639
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6640
  %9 = load i24, i24* %8, align 4, !dbg !6640
  %10 = and i24 %9, -30721, !dbg !6640
  br i1 %7, label %11, label %14, !dbg !6641

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6642
  store i24 %12, i24* %8, align 4, !dbg !6642
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6644
  call void @llvm.dbg.value(metadata i8* %13, metadata !6631, metadata !DIExpression()), !dbg !6632
  br label %56, !dbg !6645

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6646
  store i24 %15, i24* %8, align 4, !dbg !6646
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6648
  call void @llvm.dbg.value(metadata i8* %17, metadata !6631, metadata !DIExpression()), !dbg !6632
  %18 = load i8, i8* %17, align 1, !dbg !6650
  %19 = icmp eq i8 %18, 108, !dbg !6651
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6652
  %21 = load i24, i24* %20, align 4, !dbg !6652
  %22 = and i24 %21, -30721, !dbg !6652
  br i1 %19, label %23, label %26, !dbg !6653

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6654
  store i24 %24, i24* %20, align 4, !dbg !6654
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6656
  call void @llvm.dbg.value(metadata i8* %25, metadata !6631, metadata !DIExpression()), !dbg !6632
  br label %56, !dbg !6657

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6658
  store i24 %27, i24* %20, align 4, !dbg !6658
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6660
  %30 = load i24, i24* %29, align 4, !dbg !6661
  %31 = and i24 %30, -30721, !dbg !6661
  %32 = or i24 %31, 10240, !dbg !6661
  store i24 %32, i24* %29, align 4, !dbg !6661
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6662
  call void @llvm.dbg.value(metadata i8* %33, metadata !6631, metadata !DIExpression()), !dbg !6632
  br label %56, !dbg !6663

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6664
  %36 = load i24, i24* %35, align 4, !dbg !6665
  %37 = and i24 %36, -30721, !dbg !6665
  %38 = or i24 %37, 12288, !dbg !6665
  store i24 %38, i24* %35, align 4, !dbg !6665
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6666
  call void @llvm.dbg.value(metadata i8* %39, metadata !6631, metadata !DIExpression()), !dbg !6632
  br label %56, !dbg !6667

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6668
  %42 = load i24, i24* %41, align 4, !dbg !6669
  %43 = and i24 %42, -30721, !dbg !6669
  %44 = or i24 %43, 14336, !dbg !6669
  store i24 %44, i24* %41, align 4, !dbg !6669
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6670
  call void @llvm.dbg.value(metadata i8* %45, metadata !6631, metadata !DIExpression()), !dbg !6632
  br label %56, !dbg !6671

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6672
  %48 = load i24, i24* %47, align 4, !dbg !6673
  %49 = and i24 %48, -30723, !dbg !6673
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6674
  call void @llvm.dbg.value(metadata i8* %50, metadata !6631, metadata !DIExpression()), !dbg !6632
  %51 = or i24 %49, 16386, !dbg !6675
  store i24 %51, i24* %47, align 4, !dbg !6675
  br label %56, !dbg !6676

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6677
  %54 = load i24, i24* %53, align 4, !dbg !6678
  %55 = and i24 %54, -30721, !dbg !6678
  store i24 %55, i24* %53, align 4, !dbg !6678
  br label %56, !dbg !6679

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6631, metadata !DIExpression()), !dbg !6632
  ret i8* %57, !dbg !6680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6681 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6683, metadata !DIExpression()), !dbg !6688
  call void @llvm.dbg.value(metadata i8* %1, metadata !6684, metadata !DIExpression()), !dbg !6688
  call void @llvm.dbg.value(metadata i8 0, metadata !6685, metadata !DIExpression()), !dbg !6688
  call void @llvm.dbg.value(metadata i8* %1, metadata !6684, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6688
  %3 = load i8, i8* %1, align 1, !dbg !6689
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6690
  store i8 %3, i8* %4, align 1, !dbg !6691
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6692

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6693

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6694
  %9 = load i24, i24* %8, align 4, !dbg !6694
  %10 = and i24 %9, -458753, !dbg !6694
  %11 = or i24 %10, %7, !dbg !6694
  call void @llvm.dbg.label(metadata !6686), !dbg !6695
  %12 = and i24 %9, 30720, !dbg !6696
  %13 = icmp eq i24 %12, 16384, !dbg !6696
  %14 = zext i1 %13 to i24, !dbg !6698
  %15 = or i24 %11, %14, !dbg !6698
  %16 = icmp eq i8 %3, 99, !dbg !6699
  br i1 %16, label %17, label %43, !dbg !6701

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6702
  %19 = icmp ne i24 %18, 0, !dbg !6702
  call void @llvm.dbg.value(metadata i1 %19, metadata !6685, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6688
  br label %43, !dbg !6704

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6705
  %22 = load i24, i24* %21, align 4, !dbg !6706
  %23 = and i24 %22, -458753, !dbg !6706
  %24 = or i24 %23, 262144, !dbg !6706
  call void @llvm.dbg.value(metadata i8 1, metadata !6685, metadata !DIExpression()), !dbg !6688
  br label %43, !dbg !6707

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6710
  %27 = load i24, i24* %26, align 4, !dbg !6711
  %28 = and i24 %27, -458753, !dbg !6711
  %29 = or i24 %28, 196608, !dbg !6711
  %30 = and i24 %27, 30720, !dbg !6712
  %31 = icmp eq i24 %30, 16384, !dbg !6712
  br label %43, !dbg !6714

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6715
  %34 = load i24, i24* %33, align 4, !dbg !6716
  %35 = and i24 %34, -458753, !dbg !6716
  %36 = or i24 %35, 196608, !dbg !6716
  %37 = and i24 %34, 30720, !dbg !6717
  %38 = icmp ne i24 %37, 0, !dbg !6717
  br label %43, !dbg !6719

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6720
  %41 = load i24, i24* %40, align 4, !dbg !6721
  %42 = or i24 %41, 1, !dbg !6721
  br label %43, !dbg !6722

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6723
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6724
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6725
  call void @llvm.dbg.value(metadata i8* %48, metadata !6684, metadata !DIExpression()), !dbg !6688
  call void @llvm.dbg.value(metadata i8 poison, metadata !6685, metadata !DIExpression()), !dbg !6688
  %49 = lshr i24 %44, 1, !dbg !6723
  %50 = and i24 %49, 1, !dbg !6723
  %51 = zext i24 %50 to i32, !dbg !6723
  %52 = or i32 %51, %47, !dbg !6723
  %53 = trunc i32 %52 to i24, !dbg !6723
  %54 = shl nuw nsw i24 %53, 1, !dbg !6723
  %55 = and i24 %44, -3, !dbg !6723
  %56 = or i24 %54, %55, !dbg !6723
  store i24 %56, i24* %46, align 4, !dbg !6723
  ret i8* %48, !dbg !6726
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #17 !dbg !6727 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6731, metadata !DIExpression()), !dbg !6734
  %2 = load i8*, i8** %0, align 4, !dbg !6735
  call void @llvm.dbg.value(metadata i8* %2, metadata !6732, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.value(metadata i32 0, metadata !6733, metadata !DIExpression()), !dbg !6734
  %3 = load i8, i8* %2, align 1, !dbg !6736
  %4 = zext i8 %3 to i32, !dbg !6737
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #28, !dbg !6738
  %6 = icmp eq i32 %5, 0, !dbg !6739
  br i1 %6, label %19, label %7, !dbg !6739

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6733, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.value(metadata i8* %10, metadata !6732, metadata !DIExpression()), !dbg !6734
  %11 = mul i32 %9, 10, !dbg !6740
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6742
  call void @llvm.dbg.value(metadata i8* %12, metadata !6732, metadata !DIExpression()), !dbg !6734
  %13 = add i32 %11, -48, !dbg !6743
  %14 = add i32 %13, %8, !dbg !6744
  call void @llvm.dbg.value(metadata i32 %14, metadata !6733, metadata !DIExpression()), !dbg !6734
  %15 = load i8, i8* %12, align 1, !dbg !6736
  %16 = zext i8 %15 to i32, !dbg !6737
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #28, !dbg !6738
  %18 = icmp eq i32 %17, 0, !dbg !6739
  br i1 %18, label %19, label %7, !dbg !6739, !llvm.loop !6745

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6734
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6734
  store i8* %20, i8** %0, align 4, !dbg !6747
  ret i32 %21, !dbg !6748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6751, metadata !DIExpression()), !dbg !6752
  %2 = add i32 %0, -48, !dbg !6753
  %3 = icmp ult i32 %2, 10, !dbg !6754
  %4 = zext i1 %3 to i32, !dbg !6754
  ret i32 %4, !dbg !6755
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6756 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6761, metadata !DIExpression()), !dbg !6763
  call void @llvm.dbg.value(metadata i32 %1, metadata !6762, metadata !DIExpression()), !dbg !6763
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #26, !dbg !6764, !srcloc !6766
  ret void, !dbg !6767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6768 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6770, metadata !DIExpression()), !dbg !6778
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6779
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !6779
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6771, metadata !DIExpression()), !dbg !6780
  call void @llvm.va_start(i8* nonnull %3), !dbg !6781
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6782
  %5 = load i32, i32* %4, align 4, !dbg !6782
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6782
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !6782
  call void @llvm.va_end(i8* nonnull %3), !dbg !6783
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !6784
  ret void, !dbg !6784
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6785 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #26, !dbg !6787, !srcloc !6788
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #26, !dbg !6789, !srcloc !6790
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #26, !dbg !6791, !srcloc !6792
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #26, !dbg !6793, !srcloc !6794
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #26, !dbg !6795, !srcloc !6796
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #26, !dbg !6797, !srcloc !6798
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #26, !dbg !6799, !srcloc !6800
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #26, !dbg !6801, !srcloc !6802
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #26, !dbg !6803, !srcloc !6804
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #26, !dbg !6805, !srcloc !6806
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #26, !dbg !6807, !srcloc !6808
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #26, !dbg !6809, !srcloc !6810
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #26, !dbg !6811, !srcloc !6812
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #26, !dbg !6813, !srcloc !6814
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #26, !dbg !6815, !srcloc !6816
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #26, !dbg !6817, !srcloc !6818
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #26, !dbg !6819, !srcloc !6820
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #26, !dbg !6821, !srcloc !6822
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #26, !dbg !6823, !srcloc !6824
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #26, !dbg !6825, !srcloc !6826
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #26, !dbg !6827, !srcloc !6828
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #26, !dbg !6829, !srcloc !6830
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #26, !dbg !6831, !srcloc !6832
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #26, !dbg !6833, !srcloc !6834
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #26, !dbg !6835, !srcloc !6836
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #26, !dbg !6837, !srcloc !6838
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #26, !dbg !6839, !srcloc !6840
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #26, !dbg !6841, !srcloc !6842
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #26, !dbg !6843, !srcloc !6844
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #26, !dbg !6845, !srcloc !6846
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #26, !dbg !6847, !srcloc !6848
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #26, !dbg !6849, !srcloc !6850
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #26, !dbg !6851, !srcloc !6852
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #26, !dbg !6853, !srcloc !6854
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #26, !dbg !6855, !srcloc !6856
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #26, !dbg !6857, !srcloc !6858
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6859, !srcloc !6860
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #26, !dbg !6861, !srcloc !6862
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #26, !dbg !6863, !srcloc !6864
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #26, !dbg !6865, !srcloc !6866
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #26, !dbg !6867, !srcloc !6868
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6869, !srcloc !6870
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #26, !dbg !6871, !srcloc !6872
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #26, !dbg !6873, !srcloc !6874
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6875, !srcloc !6876
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #26, !dbg !6877, !srcloc !6878
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #26, !dbg !6879, !srcloc !6880
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #26, !dbg !6881, !srcloc !6882
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #26, !dbg !6883, !srcloc !6884
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #26, !dbg !6885, !srcloc !6886
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #26, !dbg !6887, !srcloc !6888
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #26, !dbg !6889, !srcloc !6890
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6891, !srcloc !6892
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #26, !dbg !6893, !srcloc !6894
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #26, !dbg !6895, !srcloc !6896
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #26, !dbg !6897, !srcloc !6898
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #26, !dbg !6899, !srcloc !6900
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #26, !dbg !6901, !srcloc !6902
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #26, !dbg !6903, !srcloc !6904
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #26, !dbg !6905, !srcloc !6906
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #26, !dbg !6907, !srcloc !6908
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #26, !dbg !6909, !srcloc !6910
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #26, !dbg !6911, !srcloc !6912
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #26, !dbg !6913, !srcloc !6914
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #26, !dbg !6915, !srcloc !6916
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #26, !dbg !6917, !srcloc !6918
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #26, !dbg !6919, !srcloc !6920
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #26, !dbg !6921, !srcloc !6922
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #26, !dbg !6923, !srcloc !6924
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #26, !dbg !6925, !srcloc !6926
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #26, !dbg !6927, !srcloc !6928
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #26, !dbg !6929, !srcloc !6930
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #26, !dbg !6931, !srcloc !6932
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #26, !dbg !6933, !srcloc !6934
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #26, !dbg !6935, !srcloc !6936
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #26, !dbg !6937, !srcloc !6938
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #26, !dbg !6939, !srcloc !6940
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #26, !dbg !6941, !srcloc !6942
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #26, !dbg !6943, !srcloc !6944
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #26, !dbg !6945, !srcloc !6946
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #26, !dbg !6947, !srcloc !6948
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #26, !dbg !6949, !srcloc !6950
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #26, !dbg !6951, !srcloc !6952
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #26, !dbg !6953, !srcloc !6954
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #26, !dbg !6955, !srcloc !6956
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #26, !dbg !6957, !srcloc !6958
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #26, !dbg !6959, !srcloc !6960
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #26, !dbg !6961, !srcloc !6962
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #26, !dbg !6963, !srcloc !6964
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #26, !dbg !6965, !srcloc !6966
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #26, !dbg !6967, !srcloc !6968
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #26, !dbg !6969, !srcloc !6970
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #26, !dbg !6971, !srcloc !6972
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #26, !dbg !6973, !srcloc !6974
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #26, !dbg !6975, !srcloc !6976
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #26, !dbg !6977, !srcloc !6978
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #26, !dbg !6979, !srcloc !6980
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #26, !dbg !6981, !srcloc !6982
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #26, !dbg !6983, !srcloc !6984
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #26, !dbg !6985, !srcloc !6986
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #26, !dbg !6987, !srcloc !6988
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #26, !dbg !6989, !srcloc !6990
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #26, !dbg !6991, !srcloc !6992
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #26, !dbg !6993, !srcloc !6994
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #26, !dbg !6995, !srcloc !6996
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #26, !dbg !6997, !srcloc !6998
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #26, !dbg !6999, !srcloc !7000
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #26, !dbg !7001, !srcloc !7002
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #26, !dbg !7003, !srcloc !7004
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #26, !dbg !7005, !srcloc !7006
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #26, !dbg !7007, !srcloc !7008
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #26, !dbg !7009, !srcloc !7010
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #26, !dbg !7011, !srcloc !7012
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #26, !dbg !7013, !srcloc !7014
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #26, !dbg !7015, !srcloc !7016
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #26, !dbg !7017, !srcloc !7018
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #26, !dbg !7019, !srcloc !7020
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #26, !dbg !7021, !srcloc !7022
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #26, !dbg !7023, !srcloc !7024
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #26, !dbg !7025, !srcloc !7026
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #26, !dbg !7027, !srcloc !7028
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #26, !dbg !7029, !srcloc !7030
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #26, !dbg !7031, !srcloc !7032
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #26, !dbg !7033, !srcloc !7034
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #26, !dbg !7035, !srcloc !7036
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #26, !dbg !7037, !srcloc !7038
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #26, !dbg !7039, !srcloc !7040
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #26, !dbg !7041, !srcloc !7042
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #26, !dbg !7043, !srcloc !7044
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #26, !dbg !7045, !srcloc !7046
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #26, !dbg !7047, !srcloc !7048
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #26, !dbg !7049, !srcloc !7050
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #26, !dbg !7051, !srcloc !7052
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #26, !dbg !7053, !srcloc !7054
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #26, !dbg !7055, !srcloc !7056
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #26, !dbg !7057, !srcloc !7058
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #26, !dbg !7059, !srcloc !7060
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #26, !dbg !7061, !srcloc !7062
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #26, !dbg !7063, !srcloc !7064
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #26, !dbg !7065, !srcloc !7066
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #26, !dbg !7067, !srcloc !7068
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #26, !dbg !7069, !srcloc !7070
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #26, !dbg !7071, !srcloc !7072
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #26, !dbg !7073, !srcloc !7074
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #26, !dbg !7075, !srcloc !7076
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #26, !dbg !7077, !srcloc !7078
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #26, !dbg !7079, !srcloc !7080
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #26, !dbg !7081, !srcloc !7082
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #26, !dbg !7083, !srcloc !7084
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #26, !dbg !7085, !srcloc !7086
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7087, !srcloc !7088
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #26, !dbg !7089, !srcloc !7090
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #26, !dbg !7091, !srcloc !7092
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #26, !dbg !7093, !srcloc !7094
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #26, !dbg !7095, !srcloc !7096
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #26, !dbg !7097, !srcloc !7098
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #26, !dbg !7099, !srcloc !7100
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #26, !dbg !7101, !srcloc !7102
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #26, !dbg !7103, !srcloc !7104
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #26, !dbg !7105, !srcloc !7106
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #26, !dbg !7107, !srcloc !7108
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7109, !srcloc !7110
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #26, !dbg !7111, !srcloc !7112
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #26, !dbg !7113, !srcloc !7114
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #26, !dbg !7115, !srcloc !7116
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #26, !dbg !7117, !srcloc !7118
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #26, !dbg !7119, !srcloc !7120
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #26, !dbg !7121, !srcloc !7122
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #26, !dbg !7123, !srcloc !7124
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #26, !dbg !7125, !srcloc !7126
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,1\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #26, !dbg !7127, !srcloc !7128
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #26, !dbg !7129, !srcloc !7130
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #26, !dbg !7131, !srcloc !7132
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #26, !dbg !7133, !srcloc !7134
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #26, !dbg !7135, !srcloc !7136
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #26, !dbg !7137, !srcloc !7138
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #26, !dbg !7139, !srcloc !7140
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #26, !dbg !7141, !srcloc !7142
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #26, !dbg !7143, !srcloc !7144
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #26, !dbg !7145, !srcloc !7146
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #26, !dbg !7147, !srcloc !7148
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #26, !dbg !7149, !srcloc !7150
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #26, !dbg !7151, !srcloc !7152
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #26, !dbg !7153, !srcloc !7154
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #26, !dbg !7155, !srcloc !7156
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #26, !dbg !7157, !srcloc !7158
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #26, !dbg !7159, !srcloc !7160
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #26, !dbg !7161, !srcloc !7162
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #26, !dbg !7163, !srcloc !7164
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #26, !dbg !7165, !srcloc !7166
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #26, !dbg !7167, !srcloc !7168
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #26, !dbg !7169, !srcloc !7170
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #26, !dbg !7171, !srcloc !7172
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #26, !dbg !7173, !srcloc !7174
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #26, !dbg !7175, !srcloc !7176
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #26, !dbg !7177, !srcloc !7178
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #26, !dbg !7179, !srcloc !7180
  tail call void asm sideeffect ".globl\09CONFIG_STACK_POINTER_RANDOM\0A\09.equ\09CONFIG_STACK_POINTER_RANDOM,0\0A\09.type\09CONFIG_STACK_POINTER_RANDOM,%object", ""() #26, !dbg !7181, !srcloc !7182
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #26, !dbg !7183, !srcloc !7184
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #26, !dbg !7185, !srcloc !7186
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7187, !srcloc !7188
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #26, !dbg !7189, !srcloc !7190
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #26, !dbg !7191, !srcloc !7192
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #26, !dbg !7193, !srcloc !7194
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #26, !dbg !7195, !srcloc !7196
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #26, !dbg !7197, !srcloc !7198
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #26, !dbg !7199, !srcloc !7200
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #26, !dbg !7201, !srcloc !7202
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #26, !dbg !7203, !srcloc !7204
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #26, !dbg !7205, !srcloc !7206
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #26, !dbg !7207, !srcloc !7208
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #26, !dbg !7209, !srcloc !7210
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #26, !dbg !7211, !srcloc !7212
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #26, !dbg !7213, !srcloc !7214
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #26, !dbg !7215, !srcloc !7216
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #26, !dbg !7217, !srcloc !7218
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #26, !dbg !7219, !srcloc !7220
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7221, !srcloc !7222
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #26, !dbg !7223, !srcloc !7224
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #26, !dbg !7225, !srcloc !7226
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #26, !dbg !7227, !srcloc !7228
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #26, !dbg !7229, !srcloc !7230
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #26, !dbg !7231, !srcloc !7232
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #26, !dbg !7233, !srcloc !7234
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #26, !dbg !7235, !srcloc !7236
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #26, !dbg !7237, !srcloc !7238
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #26, !dbg !7239, !srcloc !7240
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #26, !dbg !7241, !srcloc !7242
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #26, !dbg !7243, !srcloc !7244
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #26, !dbg !7245, !srcloc !7246
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #26, !dbg !7247, !srcloc !7248
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #26, !dbg !7249, !srcloc !7250
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #26, !dbg !7251, !srcloc !7252
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #26, !dbg !7253, !srcloc !7254
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #26, !dbg !7255, !srcloc !7256
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #26, !dbg !7257, !srcloc !7258
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7259, !srcloc !7260
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #26, !dbg !7261, !srcloc !7262
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #26, !dbg !7263, !srcloc !7264
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #26, !dbg !7265, !srcloc !7266
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #26, !dbg !7267, !srcloc !7268
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7269, !srcloc !7270
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #26, !dbg !7271, !srcloc !7272
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #26, !dbg !7273, !srcloc !7274
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #26, !dbg !7275, !srcloc !7276
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7277, !srcloc !7278
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #26, !dbg !7279, !srcloc !7280
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #26, !dbg !7281, !srcloc !7282
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #26, !dbg !7283, !srcloc !7284
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #26, !dbg !7285, !srcloc !7286
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #26, !dbg !7287, !srcloc !7288
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #26, !dbg !7289, !srcloc !7290
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #26, !dbg !7291, !srcloc !7292
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #26, !dbg !7293, !srcloc !7294
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #26, !dbg !7295, !srcloc !7296
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #26, !dbg !7297, !srcloc !7298
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #26, !dbg !7299, !srcloc !7300
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #26, !dbg !7301, !srcloc !7302
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #26, !dbg !7303, !srcloc !7304
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #26, !dbg !7305, !srcloc !7306
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #26, !dbg !7307, !srcloc !7308
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #26, !dbg !7309, !srcloc !7310
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #26, !dbg !7311, !srcloc !7312
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #26, !dbg !7313, !srcloc !7314
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #26, !dbg !7315, !srcloc !7316
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #26, !dbg !7317, !srcloc !7318
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #26, !dbg !7319, !srcloc !7320
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #26, !dbg !7321, !srcloc !7322
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #26, !dbg !7323, !srcloc !7324
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #26, !dbg !7325, !srcloc !7326
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #26, !dbg !7327, !srcloc !7328
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #26, !dbg !7329, !srcloc !7330
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #26, !dbg !7331, !srcloc !7332
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #26, !dbg !7333, !srcloc !7334
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #26, !dbg !7335, !srcloc !7336
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #26, !dbg !7337, !srcloc !7338
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #26, !dbg !7339, !srcloc !7340
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #26, !dbg !7341, !srcloc !7342
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #26, !dbg !7343, !srcloc !7344
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #26, !dbg !7345, !srcloc !7346
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #26, !dbg !7347, !srcloc !7348
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #26, !dbg !7349, !srcloc !7350
  tail call void asm sideeffect ".globl\09CONFIG_TEST_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TEST_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TEST_RANDOM_GENERATOR,%object", ""() #26, !dbg !7351, !srcloc !7352
  tail call void asm sideeffect ".globl\09CONFIG_TIMER_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TIMER_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TIMER_RANDOM_GENERATOR,%object", ""() #26, !dbg !7353, !srcloc !7354
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #26, !dbg !7355, !srcloc !7356
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #26, !dbg !7357, !srcloc !7358
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7359, !srcloc !7360
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #26, !dbg !7361, !srcloc !7362
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !7363, !srcloc !7364
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !7365, !srcloc !7366
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #26, !dbg !7367, !srcloc !7368
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #26, !dbg !7369, !srcloc !7370
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #26, !dbg !7371, !srcloc !7372
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #26, !dbg !7373, !srcloc !7374
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #26, !dbg !7375, !srcloc !7376
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #26, !dbg !7377, !srcloc !7378
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #26, !dbg !7379, !srcloc !7380
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #26, !dbg !7381, !srcloc !7382
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #26, !dbg !7383, !srcloc !7384
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #26, !dbg !7385, !srcloc !7386
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #26, !dbg !7387, !srcloc !7388
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #26, !dbg !7389, !srcloc !7390
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #26, !dbg !7391, !srcloc !7392
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #26, !dbg !7393, !srcloc !7394
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #26, !dbg !7395, !srcloc !7396
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #26, !dbg !7397, !srcloc !7398
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #26, !dbg !7399, !srcloc !7400
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #26, !dbg !7401, !srcloc !7402
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #26, !dbg !7403, !srcloc !7404
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #26, !dbg !7405, !srcloc !7406
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #26, !dbg !7407, !srcloc !7408
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #26, !dbg !7409, !srcloc !7410
  ret void, !dbg !7411
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7412 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7414, metadata !DIExpression()), !dbg !7416
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !7417, !srcloc !7426
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7417
  call void @llvm.dbg.value(metadata i32 %3, metadata !7423, metadata !DIExpression()) #26, !dbg !7427
  call void @llvm.dbg.value(metadata i32 undef, metadata !7424, metadata !DIExpression()) #26, !dbg !7427
  call void @llvm.dbg.value(metadata i32 %3, metadata !7415, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.value(metadata i32 %3, metadata !7428, metadata !DIExpression()) #26, !dbg !7433
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !7435, !srcloc !7436
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !7437
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #28, !dbg !7438
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #28, !dbg !7439
  ret i32 0, !dbg !7440
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #18 !dbg !7441 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !7446, metadata !DIExpression()), !dbg !7448
  %2 = bitcast i32* %1 to i8*, !dbg !7449
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !7449
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7447, metadata !DIExpression()), !dbg !7450
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !7451
  %4 = or i32 %3, 268435456, !dbg !7451
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !7451
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !7452
  %6 = and i32 %5, 268435456, !dbg !7452
  store volatile i32 %6, i32* %1, align 4, !dbg !7453
  %7 = load volatile i32, i32* %1, align 4, !dbg !7454
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !7455
  ret void, !dbg !7455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #19 !dbg !7456 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !7459, metadata !DIExpression()), !dbg !7460
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !7461
  %2 = and i32 %1, -6145, !dbg !7461
  %3 = or i32 %2, 2048, !dbg !7461
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !7461
  ret void, !dbg !7462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !7463 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7465, metadata !DIExpression()), !dbg !7466
  ret i32 0, !dbg !7467
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7468 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7471, metadata !DIExpression()), !dbg !7479
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7480
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7480
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7472, metadata !DIExpression()), !dbg !7481
  call void @llvm.va_start(i8* nonnull %3), !dbg !7482
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7483
  %5 = load i32, i32* %4, align 4, !dbg !7483
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7483
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !7483
  call void @llvm.va_end(i8* nonnull %3), !dbg !7484
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7485
  ret void, !dbg !7485
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7486 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7491, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i8* %0, metadata !7490, metadata !DIExpression()), !dbg !7492
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !7493
  ret void, !dbg !7494
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7499, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.value(metadata i8* %1, metadata !7500, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.value(metadata i32 %2, metadata !7501, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.value(metadata i8* %1, metadata !7502, metadata !DIExpression()), !dbg !7503
  %4 = icmp eq i32 %2, 0, !dbg !7504
  br i1 %4, label %14, label %5, !dbg !7505

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.68(i32 noundef %0) #28, !dbg !7503
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7505

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7502, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.value(metadata i32 %10, metadata !7501, metadata !DIExpression()), !dbg !7503
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), i32 noundef %7) #27, !dbg !7506
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #28, !dbg !7508
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7509
  call void @llvm.dbg.value(metadata i32 %11, metadata !7501, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.value(metadata i8* %12, metadata !7502, metadata !DIExpression()), !dbg !7503
  br i1 %13, label %14, label %8, !dbg !7509, !llvm.loop !7510

14:                                               ; preds = %8, %3
  ret void, !dbg !7512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.68(i32 noundef %0) unnamed_addr #5 !dbg !7513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7515, metadata !DIExpression()), !dbg !7516
  %2 = add i32 %0, -1, !dbg !7517
  %3 = icmp ult i32 %2, 4, !dbg !7517
  %4 = shl i32 %2, 3, !dbg !7517
  %5 = lshr i32 1145657157, %4, !dbg !7517
  %6 = trunc i32 %5 to i8, !dbg !7517
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7517
  ret i8 %7, !dbg !7518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7519 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7523, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i32 %1, metadata !7524, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i32 0, metadata !7525, metadata !DIExpression()), !dbg !7535
  br label %4, !dbg !7536

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.70, i32 0, i32 0)) #27, !dbg !7537
  call void @llvm.dbg.value(metadata i32 0, metadata !7527, metadata !DIExpression()), !dbg !7538
  br label %16, !dbg !7539

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7525, metadata !DIExpression()), !dbg !7535
  %6 = icmp ult i32 %5, %1, !dbg !7540
  br i1 %6, label %7, label %11, !dbg !7544

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7545
  %9 = load i8, i8* %8, align 1, !dbg !7545
  %10 = zext i8 %9 to i32, !dbg !7547
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.71, i32 0, i32 0), i32 noundef %10) #27, !dbg !7548
  br label %12, !dbg !7549

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.72, i32 0, i32 0)) #27, !dbg !7550
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7552
  call void @llvm.dbg.value(metadata i32 %13, metadata !7525, metadata !DIExpression()), !dbg !7535
  %14 = icmp eq i32 %13, 8, !dbg !7553
  br i1 %14, label %3, label %4, !dbg !7536, !llvm.loop !7554

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.73, i32 0, i32 0)) #27, !dbg !7556
  ret void, !dbg !7557

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7527, metadata !DIExpression()), !dbg !7538
  %18 = icmp ult i32 %17, %1, !dbg !7558
  br i1 %18, label %19, label %26, !dbg !7559

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7560
  %21 = load i8, i8* %20, align 1, !dbg !7560
  call void @llvm.dbg.value(metadata i8 %21, metadata !7529, metadata !DIExpression()), !dbg !7561
  %22 = zext i8 %21 to i32, !dbg !7562
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #28, !dbg !7563
  %24 = icmp eq i32 %23, 0, !dbg !7564
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7563
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.74, i32 0, i32 0), i32 noundef %25) #27, !dbg !7565
  br label %27, !dbg !7566

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.75, i32 0, i32 0)) #27, !dbg !7567
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7569
  call void @llvm.dbg.value(metadata i32 %28, metadata !7527, metadata !DIExpression()), !dbg !7538
  %29 = icmp eq i32 %28, 8, !dbg !7570
  br i1 %29, label %15, label %16, !dbg !7539, !llvm.loop !7571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7575, metadata !DIExpression()), !dbg !7576
  %2 = add i32 %0, -32, !dbg !7577
  %3 = icmp ult i32 %2, 95, !dbg !7577
  %4 = zext i1 %3 to i32, !dbg !7577
  ret i32 %4, !dbg !7578
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7579 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7628, metadata !DIExpression()), !dbg !7630
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7629, metadata !DIExpression()), !dbg !7630
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7631
  br i1 %3, label %5, label %4, !dbg !7633

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #28, !dbg !7634
  br label %5, !dbg !7636

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !7637
  ret void, !dbg !7638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7639 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7643, metadata !DIExpression()), !dbg !7644
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7645
  %3 = load i32, i32* %2, align 4, !dbg !7645
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7645
  %5 = load i32, i32* %4, align 4, !dbg !7645
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7645
  %7 = load i32, i32* %6, align 4, !dbg !7645
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.76, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !7645
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7650
  %9 = load i32, i32* %8, align 4, !dbg !7650
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7650
  %11 = load i32, i32* %10, align 4, !dbg !7650
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7650
  %13 = load i32, i32* %12, align 4, !dbg !7650
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.77, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !7650
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7655
  %15 = load i32, i32* %14, align 4, !dbg !7655
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !7655
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7660
  %17 = load i32, i32* %16, align 4, !dbg !7660
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.79, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !7660
  ret void, !dbg !7665
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7666 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7683, metadata !DIExpression()), !dbg !7686
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7684, metadata !DIExpression()), !dbg !7686
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7687
  %4 = load i32, i32* %3, align 4, !dbg !7687
  call void @llvm.dbg.value(metadata i32 %4, metadata !7685, metadata !DIExpression()), !dbg !7686
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #28, !dbg !7688
  ret void, !dbg !7689
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !7690 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7694, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i8* %0, metadata !7695, metadata !DIExpression()), !dbg !7697
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7698
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #26, !dbg !7698
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7696, metadata !DIExpression()), !dbg !7699
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7699
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7700
  %5 = bitcast i8* %4 to i32*, !dbg !7700
  %6 = load i32, i32* %5, align 4, !dbg !7700
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7701
  store i32 %6, i32* %7, align 4, !dbg !7702
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #28, !dbg !7703
  unreachable, !dbg !7704
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7708, metadata !DIExpression()), !dbg !7709
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #28, !dbg !7710
  ret void, !dbg !7711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7716, metadata !DIExpression()), !dbg !7717
  %2 = icmp sgt i32 %0, -1, !dbg !7718
  br i1 %2, label %3, label %8, !dbg !7720

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7721, !srcloc !7723
  %4 = and i32 %0, 31, !dbg !7724
  %5 = shl nuw i32 1, %4, !dbg !7725
  %6 = lshr i32 %0, 5, !dbg !7726
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7727
  store volatile i32 %5, i32* %7, align 4, !dbg !7728
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7729, !srcloc !7730
  br label %8, !dbg !7731

8:                                                ; preds = %3, %1
  ret void, !dbg !7732
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7735, metadata !DIExpression()), !dbg !7736
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #28, !dbg !7737
  ret void, !dbg !7738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7741, metadata !DIExpression()), !dbg !7742
  %2 = icmp sgt i32 %0, -1, !dbg !7743
  br i1 %2, label %3, label %8, !dbg !7745

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7746
  %5 = shl nuw i32 1, %4, !dbg !7748
  %6 = lshr i32 %0, 5, !dbg !7749
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7750
  store volatile i32 %5, i32* %7, align 4, !dbg !7751
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7752, !srcloc !7756
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7757, !srcloc !7760
  br label %8, !dbg !7761

8:                                                ; preds = %3, %1
  ret void, !dbg !7762
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #7 !dbg !7763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7767, metadata !DIExpression()), !dbg !7768
  %2 = lshr i32 %0, 5, !dbg !7769
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7770
  %4 = load volatile i32, i32* %3, align 4, !dbg !7770
  %5 = and i32 %0, 31, !dbg !7771
  %6 = shl nuw i32 1, %5, !dbg !7771
  %7 = and i32 %4, %6, !dbg !7772
  ret i32 %7, !dbg !7773
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7778, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata i32 %1, metadata !7779, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata i32 %2, metadata !7780, metadata !DIExpression()), !dbg !7781
  %4 = add i32 %1, 1, !dbg !7782
  call void @llvm.dbg.value(metadata i32 %4, metadata !7779, metadata !DIExpression()), !dbg !7781
  %5 = icmp ult i32 %4, 16, !dbg !7785
  br i1 %5, label %7, label %6, !dbg !7788

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.81, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.82, i32 0, i32 0), i32 noundef 94) #27, !dbg !7789
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.83, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #27, !dbg !7789
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.82, i32 0, i32 0), i32 noundef 94) #27, !dbg !7789
  unreachable, !dbg !7789

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #28, !dbg !7791
  ret void, !dbg !7792
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #19 !dbg !7793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7797, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i32 %1, metadata !7798, metadata !DIExpression()), !dbg !7799
  %3 = trunc i32 %1 to i8, !dbg !7800
  %4 = shl i8 %3, 4, !dbg !7800
  %5 = and i32 %0, 15, !dbg !7802
  %6 = add nsw i32 %5, -4, !dbg !7802
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7802
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7802
  %9 = icmp slt i32 %0, 0, !dbg !7802
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7802
  store volatile i8 %4, i8* %10, align 1, !dbg !7800
  ret void, !dbg !7803
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7804 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7806, metadata !DIExpression()), !dbg !7807
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !7808
  ret void, !dbg !7809
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7810 {
  tail call void @z_SysNmiOnReset() #27, !dbg !7812
  tail call void @z_arm_int_exit() #27, !dbg !7813
  ret void, !dbg !7814
}

; Function Attrs: optsize
declare !dbg !7815 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7816 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7818 {
  tail call fastcc void @relocate_vector_table() #28, !dbg !7820
  tail call void @z_bss_zero() #27, !dbg !7821
  tail call void @z_data_copy() #27, !dbg !7822
  tail call void @z_arm_interrupt_init() #27, !dbg !7823
  tail call void @z_cstart() #30, !dbg !7824
  unreachable, !dbg !7824
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7825 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7826
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7827, !srcloc !7830
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7831, !srcloc !7834
  ret void, !dbg !7835
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7836 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7839, metadata !DIExpression()), !dbg !7840
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7841
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7842
  store i32 %0, i32* %3, align 4, !dbg !7843
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7844
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7845
  store i32 %4, i32* %5, align 4, !dbg !7846
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7847
  %7 = or i32 %6, 268435456, !dbg !7847
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7847
  call void @llvm.dbg.value(metadata i32 0, metadata !7848, metadata !DIExpression()) #26, !dbg !7851
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !7853, !srcloc !7854
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7855
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7856
  %10 = load i32, i32* %9, align 4, !dbg !7856
  ret i32 %10, !dbg !7857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #12 !dbg !7858 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7970, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7971, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %2, metadata !7972, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7973, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %4, metadata !7974, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %5, metadata !7975, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %6, metadata !7976, metadata !DIExpression()), !dbg !7978
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7979
  call void @llvm.dbg.value(metadata i8* %8, metadata !7977, metadata !DIExpression()), !dbg !7978
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7980
  %10 = bitcast i8* %9 to i32*, !dbg !7980
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7981
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7982
  %12 = bitcast i8* %8 to i32*, !dbg !7983
  store i32 %11, i32* %12, align 4, !dbg !7984
  %13 = ptrtoint i8* %4 to i32, !dbg !7985
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7986
  %15 = bitcast i8* %14 to i32*, !dbg !7986
  store i32 %13, i32* %15, align 4, !dbg !7987
  %16 = ptrtoint i8* %5 to i32, !dbg !7988
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7989
  %18 = bitcast i8* %17 to i32*, !dbg !7989
  store i32 %16, i32* %18, align 4, !dbg !7990
  %19 = ptrtoint i8* %6 to i32, !dbg !7991
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7992
  %21 = bitcast i8* %20 to i32*, !dbg !7992
  store i32 %19, i32* %21, align 4, !dbg !7993
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7994
  %23 = bitcast i8* %22 to i32*, !dbg !7994
  store i32 16777216, i32* %23, align 4, !dbg !7995
  %24 = ptrtoint i8* %8 to i32, !dbg !7996
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7997
  store i32 %24, i32* %25, align 8, !dbg !7998
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7999
  store i32 0, i32* %26, align 4, !dbg !8000
  ret void, !dbg !8001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !8002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8006, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 %1, metadata !8007, metadata !DIExpression()), !dbg !8012
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8013
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8008, metadata !DIExpression()), !dbg !8012
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8014
  br i1 %4, label %19, label %5, !dbg !8016

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8011, metadata !DIExpression()), !dbg !8012
  %6 = icmp eq i32 %0, -22, !dbg !8017
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8017
  %8 = load i32, i32* %7, align 4, !dbg !8017
  br i1 %6, label %16, label %9, !dbg !8019

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8017
  %11 = icmp ule i32 %10, %0, !dbg !8017
  %12 = icmp ugt i32 %8, %0, !dbg !8017
  %13 = and i1 %12, %11, !dbg !8017
  %14 = icmp ugt i32 %8, %1, !dbg !8017
  %15 = and i1 %14, %13, !dbg !8017
  br i1 %15, label %18, label %19, !dbg !8017

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8017
  br i1 %17, label %18, label %19, !dbg !8019

18:                                               ; preds = %9, %16
  br label %19, !dbg !8020

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8012
  ret i32 %20, !dbg !8022
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !8023 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8027, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i8* %1, metadata !8028, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8029, metadata !DIExpression()), !dbg !8030
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8031
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !8032
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #26, !dbg !8033, !srcloc !8034
  unreachable, !dbg !8035
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8036 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8054, metadata !DIExpression()), !dbg !8064
  call void @llvm.dbg.value(metadata i32 %1, metadata !8055, metadata !DIExpression()), !dbg !8064
  call void @llvm.dbg.value(metadata i32 %2, metadata !8056, metadata !DIExpression()), !dbg !8064
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8057, metadata !DIExpression()), !dbg !8064
  call void @llvm.dbg.value(metadata i32 0, metadata !8058, metadata !DIExpression()), !dbg !8064
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8065
  call void @llvm.dbg.value(metadata i32 %8, metadata !8059, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !8064
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #26, !dbg !8066
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #26, !dbg !8066
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !8067
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #26, !dbg !8067
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8063, metadata !DIExpression()), !dbg !8068
  call void @llvm.dbg.value(metadata i32 0, metadata !8069, metadata !DIExpression()) #26, !dbg !8072
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !8074, !srcloc !8075
  call void @llvm.dbg.value(metadata i8* %6, metadata !8061, metadata !DIExpression(DW_OP_deref)), !dbg !8064
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #28, !dbg !8076
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !8062, metadata !DIExpression()), !dbg !8064
  %11 = icmp eq %struct.__esf* %10, null, !dbg !8077
  br i1 %11, label %12, label %13, !dbg !8080

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.87, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 1057) #27, !dbg !8081
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.89, i32 0, i32 0)) #27, !dbg !8081
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 1057) #27, !dbg !8081
  unreachable, !dbg !8081

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !8083
  call void @llvm.dbg.value(metadata i32 %14, metadata !8059, metadata !DIExpression()), !dbg !8064
  call void @llvm.dbg.value(metadata i8* %5, metadata !8060, metadata !DIExpression(DW_OP_deref)), !dbg !8064
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #28, !dbg !8084
  call void @llvm.dbg.value(metadata i32 %15, metadata !8058, metadata !DIExpression()), !dbg !8064
  %16 = load i8, i8* %5, align 1, !dbg !8085, !range !8087
  call void @llvm.dbg.value(metadata i8 %16, metadata !8060, metadata !DIExpression()), !dbg !8064
  %17 = icmp eq i8 %16, 0, !dbg !8085
  br i1 %17, label %18, label %35, !dbg !8088

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !8089
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #27, !dbg !8090
  %21 = load i8, i8* %6, align 1, !dbg !8091, !range !8087
  call void @llvm.dbg.value(metadata i8 %21, metadata !8061, metadata !DIExpression()), !dbg !8064
  %22 = icmp eq i8 %21, 0, !dbg !8091
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8093
  %24 = load i32, i32* %23, align 4, !dbg !8093
  br i1 %22, label %30, label %25, !dbg !8094

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !8095
  %27 = icmp eq i32 %26, 0, !dbg !8098
  br i1 %27, label %28, label %34, !dbg !8099

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !8100
  br label %32, !dbg !8102

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !8103
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !8093
  br label %34, !dbg !8105

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #27, !dbg !8105
  br label %35, !dbg !8106

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #26, !dbg !8106
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #26, !dbg !8106
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #26, !dbg !8106
  ret void, !dbg !8106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8112, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i32 %1, metadata !8113, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i32 %2, metadata !8114, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i8* %3, metadata !8115, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i8 0, metadata !8116, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8117, metadata !DIExpression()), !dbg !8118
  store i8 0, i8* %3, align 1, !dbg !8119
  %5 = icmp ugt i32 %2, -16777217, !dbg !8120
  br i1 %5, label %6, label %17, !dbg !8122

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8123
  %8 = icmp eq i32 %7, 8, !dbg !8123
  br i1 %8, label %9, label %10, !dbg !8123

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.101, i32 0, i32 0), i32 noundef 69) #27, !dbg !8125
  br label %17, !dbg !8131

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8132
  %12 = icmp eq i32 %11, 0, !dbg !8132
  br i1 %12, label %13, label %14, !dbg !8133

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8117, metadata !DIExpression()), !dbg !8118
  store i8 1, i8* %3, align 1, !dbg !8136
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8118
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8117, metadata !DIExpression()), !dbg !8118
  br label %17, !dbg !8139

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8118
  ret %struct.__esf* %18, !dbg !8140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8141 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8145, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.value(metadata i32 %1, metadata !8146, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.value(metadata i8* %2, metadata !8147, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.value(metadata i32 0, metadata !8148, metadata !DIExpression()), !dbg !8149
  store i8 0, i8* %2, align 1, !dbg !8150
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8151

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #28, !dbg !8152
  call void @llvm.dbg.value(metadata i32 %5, metadata !8148, metadata !DIExpression()), !dbg !8149
  br label %12, !dbg !8154

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #28, !dbg !8155
  call void @llvm.dbg.value(metadata i32 %7, metadata !8148, metadata !DIExpression()), !dbg !8149
  br label %12, !dbg !8156

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #28, !dbg !8157
  call void @llvm.dbg.value(metadata i32 0, metadata !8148, metadata !DIExpression()), !dbg !8149
  br label %12, !dbg !8158

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #28, !dbg !8159
  call void @llvm.dbg.value(metadata i32 0, metadata !8148, metadata !DIExpression()), !dbg !8149
  br label %12, !dbg !8160

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #28, !dbg !8161
  br label %12, !dbg !8162

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #28, !dbg !8163
  br label %12, !dbg !8164

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8149
  call void @llvm.dbg.value(metadata i32 %13, metadata !8148, metadata !DIExpression()), !dbg !8149
  ret i32 %13, !dbg !8165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8166 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8170, metadata !DIExpression()), !dbg !8173
  call void @llvm.dbg.value(metadata i8* %1, metadata !8171, metadata !DIExpression()), !dbg !8173
  call void @llvm.dbg.value(metadata i32 0, metadata !8172, metadata !DIExpression()), !dbg !8173
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8174
  store i8 0, i8* %1, align 1, !dbg !8179
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8180
  %4 = and i32 %3, 2, !dbg !8182
  %5 = icmp eq i32 %4, 0, !dbg !8183
  br i1 %5, label %7, label %6, !dbg !8184

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.94, i32 0, i32 0), i32 noundef 69) #27, !dbg !8185
  br label %38, !dbg !8191

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8192
  %9 = icmp sgt i32 %8, -1, !dbg !8194
  br i1 %9, label %11, label %10, !dbg !8195

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.95, i32 0, i32 0), i32 noundef 69) #27, !dbg !8196
  br label %38, !dbg !8202

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8203
  %13 = and i32 %12, 1073741824, !dbg !8205
  %14 = icmp eq i32 %13, 0, !dbg !8206
  br i1 %14, label %37, label %15, !dbg !8207

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.96, i32 0, i32 0), i32 noundef 69) #27, !dbg !8208
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #28, !dbg !8214
  br i1 %16, label %17, label %21, !dbg !8216

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8217
  %19 = load i32, i32* %18, align 4, !dbg !8217
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.97, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !8217
  %20 = load i32, i32* %18, align 4, !dbg !8223
  call void @llvm.dbg.value(metadata i32 %20, metadata !8172, metadata !DIExpression()), !dbg !8173
  br label %38, !dbg !8224

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8225
  %23 = and i32 %22, 255, !dbg !8227
  %24 = icmp eq i32 %23, 0, !dbg !8228
  br i1 %24, label %27, label %25, !dbg !8229

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #28, !dbg !8230
  call void @llvm.dbg.value(metadata i32 %26, metadata !8172, metadata !DIExpression()), !dbg !8173
  br label %38, !dbg !8232

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8233
  %29 = and i32 %28, 65280, !dbg !8235
  %30 = icmp eq i32 %29, 0, !dbg !8236
  br i1 %30, label %32, label %31, !dbg !8237

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #28, !dbg !8238
  call void @llvm.dbg.value(metadata i32 0, metadata !8172, metadata !DIExpression()), !dbg !8173
  br label %38, !dbg !8240

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8241
  %34 = icmp ult i32 %33, 65536, !dbg !8243
  br i1 %34, label %36, label %35, !dbg !8244

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #28, !dbg !8245
  call void @llvm.dbg.value(metadata i32 0, metadata !8172, metadata !DIExpression()), !dbg !8173
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.98, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 755) #27, !dbg !8247
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.99, i32 0, i32 0)) #27, !dbg !8247
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 755) #27, !dbg !8247
  unreachable, !dbg !8247

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.98, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 760) #27, !dbg !8252
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.100, i32 0, i32 0)) #27, !dbg !8252
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 760) #27, !dbg !8252
  unreachable, !dbg !8252

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !8173
  call void @llvm.dbg.value(metadata i32 %39, metadata !8172, metadata !DIExpression()), !dbg !8173
  ret i32 %39, !dbg !8257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8258 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8260, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.value(metadata i32 %1, metadata !8261, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.value(metadata i8* %2, metadata !8262, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.value(metadata i32 0, metadata !8263, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.value(metadata i32 -22, metadata !8264, metadata !DIExpression()), !dbg !8273
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.91, i32 0, i32 0), i32 noundef 69) #27, !dbg !8274
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8279
  %5 = and i32 %4, 16, !dbg !8281
  %6 = icmp eq i32 %5, 0, !dbg !8282
  br i1 %6, label %8, label %7, !dbg !8283

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14.92, i32 0, i32 0), i32 noundef 69) #27, !dbg !8284
  br label %8, !dbg !8290

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8291
  %10 = and i32 %9, 8, !dbg !8293
  %11 = icmp eq i32 %10, 0, !dbg !8294
  br i1 %11, label %13, label %12, !dbg !8295

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #27, !dbg !8296
  br label %13, !dbg !8302

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8303
  %15 = and i32 %14, 2, !dbg !8304
  %16 = icmp eq i32 %15, 0, !dbg !8305
  br i1 %16, label %27, label %17, !dbg !8306

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #27, !dbg !8307
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8312
  call void @llvm.dbg.value(metadata i32 %18, metadata !8265, metadata !DIExpression()), !dbg !8313
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8314
  %20 = and i32 %19, 128, !dbg !8316
  %21 = icmp eq i32 %20, 0, !dbg !8317
  br i1 %21, label %27, label %22, !dbg !8318

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8264, metadata !DIExpression()), !dbg !8273
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !8319
  %23 = icmp eq i32 %1, 0, !dbg !8325
  br i1 %23, label %27, label %24, !dbg !8327

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8328
  %26 = and i32 %25, -129, !dbg !8328
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8328
  br label %27, !dbg !8330

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8273
  call void @llvm.dbg.value(metadata i32 %28, metadata !8264, metadata !DIExpression()), !dbg !8273
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8331
  %30 = and i32 %29, 1, !dbg !8333
  %31 = icmp eq i32 %30, 0, !dbg !8334
  br i1 %31, label %33, label %32, !dbg !8335

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #27, !dbg !8336
  br label %33, !dbg !8342

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8343
  %35 = and i32 %34, 16, !dbg !8344
  %36 = icmp eq i32 %35, 0, !dbg !8344
  br i1 %36, label %37, label %41, !dbg !8345

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8346
  %39 = and i32 %38, 2, !dbg !8347
  %40 = icmp eq i32 %39, 0, !dbg !8347
  br i1 %40, label %55, label %41, !dbg !8348

41:                                               ; preds = %37, %33
  %42 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8349
  %43 = and i32 %42, 2048, !dbg !8350
  %44 = icmp eq i32 %43, 0, !dbg !8350
  br i1 %44, label %55, label %45, !dbg !8351

45:                                               ; preds = %41
  %46 = ptrtoint %struct.__esf* %0 to i32, !dbg !8352
  %47 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %46) #27, !dbg !8353
  call void @llvm.dbg.value(metadata i32 %47, metadata !8268, metadata !DIExpression()), !dbg !8354
  %48 = icmp eq i32 %47, 0, !dbg !8355
  br i1 %48, label %50, label %49, !dbg !8357

49:                                               ; preds = %45
  call void @llvm.dbg.value(metadata i32 %47, metadata !8358, metadata !DIExpression()) #26, !dbg !8361
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %47) #26, !dbg !8364, !srcloc !8365
  call void @llvm.dbg.value(metadata i32 2, metadata !8263, metadata !DIExpression()), !dbg !8273
  br label %55, !dbg !8366

50:                                               ; preds = %45
  %51 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8367
  %52 = and i32 %51, 16, !dbg !8367
  %53 = icmp eq i32 %52, 0, !dbg !8367
  br i1 %53, label %55, label %54, !dbg !8371

54:                                               ; preds = %50
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 343) #27, !dbg !8372
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i32 0, i32 0)) #27, !dbg !8372
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 343) #27, !dbg !8372
  unreachable, !dbg !8372

55:                                               ; preds = %49, %50, %41, %37
  %56 = phi i32 [ 0, %41 ], [ 0, %37 ], [ 2, %49 ], [ 0, %50 ], !dbg !8273
  call void @llvm.dbg.value(metadata i32 %56, metadata !8263, metadata !DIExpression()), !dbg !8273
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8374
  %58 = or i32 %57, 255, !dbg !8374
  store volatile i32 %58, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8374
  store i8 0, i8* %2, align 1, !dbg !8375
  ret i32 %56, !dbg !8376
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8377 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8381, metadata !DIExpression()), !dbg !8388
  call void @llvm.dbg.value(metadata i32 %0, metadata !8382, metadata !DIExpression()), !dbg !8388
  call void @llvm.dbg.value(metadata i8* %1, metadata !8383, metadata !DIExpression()), !dbg !8388
  call void @llvm.dbg.value(metadata i32 0, metadata !8384, metadata !DIExpression()), !dbg !8388
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #27, !dbg !8389
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8394
  %4 = and i32 %3, 4096, !dbg !8396
  %5 = icmp eq i32 %4, 0, !dbg !8396
  br i1 %5, label %7, label %6, !dbg !8397

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #27, !dbg !8398
  br label %7, !dbg !8404

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8405
  %9 = and i32 %8, 2048, !dbg !8407
  %10 = icmp eq i32 %9, 0, !dbg !8407
  br i1 %10, label %12, label %11, !dbg !8408

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #27, !dbg !8409
  br label %12, !dbg !8415

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8416
  %14 = and i32 %13, 512, !dbg !8417
  %15 = icmp eq i32 %14, 0, !dbg !8417
  br i1 %15, label %26, label %16, !dbg !8418

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #27, !dbg !8419
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8424
  call void @llvm.dbg.value(metadata i32 %17, metadata !8385, metadata !DIExpression()), !dbg !8425
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8426
  %19 = and i32 %18, 32768, !dbg !8428
  %20 = icmp eq i32 %19, 0, !dbg !8429
  br i1 %20, label %26, label %21, !dbg !8430

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8431
  %22 = icmp eq i32 %0, 0, !dbg !8437
  br i1 %22, label %26, label %23, !dbg !8439

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8440
  %25 = and i32 %24, -32769, !dbg !8440
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8440
  br label %26, !dbg !8442

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8443
  %28 = and i32 %27, 1024, !dbg !8445
  %29 = icmp eq i32 %28, 0, !dbg !8445
  br i1 %29, label %31, label %30, !dbg !8446

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25.90, i32 0, i32 0), i32 noundef 69) #27, !dbg !8447
  br label %31, !dbg !8453

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8454
  %33 = and i32 %32, 256, !dbg !8456
  %34 = icmp eq i32 %33, 0, !dbg !8457
  br i1 %34, label %36, label %35, !dbg !8458

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #27, !dbg !8459
  br label %36, !dbg !8465

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8466
  %38 = or i32 %37, 65280, !dbg !8466
  store volatile i32 %38, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8466
  store i8 0, i8* %1, align 1, !dbg !8467
  ret void, !dbg !8468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8469 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8475, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i32 0, metadata !8476, metadata !DIExpression()), !dbg !8477
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69) #27, !dbg !8478
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8483
  %2 = and i32 %1, 33554432, !dbg !8485
  %3 = icmp eq i32 %2, 0, !dbg !8486
  br i1 %3, label %5, label %4, !dbg !8487

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #27, !dbg !8488
  br label %5, !dbg !8494

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8495
  %7 = and i32 %6, 16777216, !dbg !8497
  %8 = icmp eq i32 %7, 0, !dbg !8498
  br i1 %8, label %10, label %9, !dbg !8499

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #27, !dbg !8500
  br label %10, !dbg !8506

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8507
  %12 = and i32 %11, 524288, !dbg !8509
  %13 = icmp eq i32 %12, 0, !dbg !8510
  br i1 %13, label %15, label %14, !dbg !8511

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #27, !dbg !8512
  br label %15, !dbg !8518

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8519
  %17 = and i32 %16, 262144, !dbg !8521
  %18 = icmp eq i32 %17, 0, !dbg !8522
  br i1 %18, label %20, label %19, !dbg !8523

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #27, !dbg !8524
  br label %20, !dbg !8530

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8531
  %22 = and i32 %21, 131072, !dbg !8533
  %23 = icmp eq i32 %22, 0, !dbg !8534
  br i1 %23, label %25, label %24, !dbg !8535

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #27, !dbg !8536
  br label %25, !dbg !8542

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8543
  %27 = and i32 %26, 65536, !dbg !8545
  %28 = icmp eq i32 %27, 0, !dbg !8546
  br i1 %28, label %30, label %29, !dbg !8547

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #27, !dbg !8548
  br label %30, !dbg !8554

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8555
  %32 = or i32 %31, -65536, !dbg !8555
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8555
  ret void, !dbg !8556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8557 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8561, metadata !DIExpression()), !dbg !8563
  call void @llvm.dbg.value(metadata i8* %0, metadata !8562, metadata !DIExpression()), !dbg !8563
  store i8 0, i8* %0, align 1, !dbg !8564
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #27, !dbg !8565
  ret void, !dbg !8570
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8571 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8575, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.value(metadata i32 %0, metadata !8576, metadata !DIExpression()), !dbg !8577
  %2 = icmp slt i32 %0, 16, !dbg !8578
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.37, i32 0, i32 0), !dbg !8578
  %4 = add nsw i32 %0, -16, !dbg !8578
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !8578
  ret void, !dbg !8583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8584 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8588, metadata !DIExpression()), !dbg !8591
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8592
  %3 = load i32, i32* %2, align 4, !dbg !8592
  %4 = inttoptr i32 %3 to i16*, !dbg !8593
  call void @llvm.dbg.value(metadata i16* %4, metadata !8589, metadata !DIExpression()), !dbg !8591
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8594
  %6 = or i32 %5, 256, !dbg !8594
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8594
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8595, !srcloc !8598
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8599, !srcloc !8602
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8603
  %8 = load i16, i16* %7, align 2, !dbg !8604
  call void @llvm.dbg.value(metadata i16 %8, metadata !8590, metadata !DIExpression()), !dbg !8591
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8605
  %10 = and i32 %9, -257, !dbg !8605
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8605
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8606, !srcloc !8598
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8608, !srcloc !8602
  %11 = icmp eq i16 %8, -8446, !dbg !8610
  ret i1 %11, !dbg !8612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #19 !dbg !8613 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8614
  %2 = or i32 %1, 16, !dbg !8614
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8614
  ret void, !dbg !8615
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #19 !dbg !8616 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8619, metadata !DIExpression()), !dbg !8620
  br label %1, !dbg !8621

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8619, metadata !DIExpression()), !dbg !8620
  tail call fastcc void @__NVIC_SetPriority.104(i32 noundef %2) #28, !dbg !8623
  %3 = add nuw nsw i32 %2, 1, !dbg !8626
  call void @llvm.dbg.value(metadata i32 %3, metadata !8619, metadata !DIExpression()), !dbg !8620
  %4 = icmp eq i32 %3, 45, !dbg !8627
  br i1 %4, label %5, label %1, !dbg !8621, !llvm.loop !8628

5:                                                ; preds = %1
  ret void, !dbg !8630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.104(i32 noundef %0) unnamed_addr #19 !dbg !8631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8633, metadata !DIExpression()), !dbg !8635
  call void @llvm.dbg.value(metadata i32 1, metadata !8634, metadata !DIExpression()), !dbg !8635
  %2 = and i32 %0, 15, !dbg !8636
  %3 = add nsw i32 %2, -4, !dbg !8636
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8636
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8636
  %6 = icmp slt i32 %0, 0, !dbg !8636
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8636
  store volatile i8 16, i8* %7, align 1, !dbg !8637
  ret void, !dbg !8639
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8640 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8748, metadata !DIExpression()), !dbg !8749
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8750
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8752
  br i1 %3, label %4, label %12, !dbg !8753

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !8754, !srcloc !8766
  call void @llvm.dbg.value(metadata i32 %5, metadata !8757, metadata !DIExpression()) #26, !dbg !8767
  %6 = icmp eq i32 %5, 0, !dbg !8768
  br i1 %6, label %12, label %7, !dbg !8769

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8770
  %9 = or i32 %8, 268435456, !dbg !8770
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8770
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8772
  %11 = and i32 %10, -32769, !dbg !8772
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8772
  br label %12, !dbg !8773

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !8774
  ret void, !dbg !8775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8776 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !8777
  ret void, !dbg !8778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !551 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !658, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.value(metadata i8 0, metadata !659, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.value(metadata i32 64, metadata !661, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.value(metadata i32 undef, metadata !660, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8779
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8780
  %3 = load i32, i32* %2, align 4, !dbg !8780
  call void @llvm.dbg.value(metadata i32 %3, metadata !660, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8779
  %4 = add i32 %3, -64, !dbg !8782
  call void @llvm.dbg.value(metadata i32 %4, metadata !660, metadata !DIExpression()), !dbg !8779
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8783
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8784
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8785
  call void @llvm.dbg.value(metadata i8 1, metadata !659, metadata !DIExpression()), !dbg !8779
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !8786
  ret void, !dbg !8787
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8788 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8789
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8790, !srcloc !8793
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8794, !srcloc !8797
  ret void, !dbg !8798
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8799 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #26, !dbg !8800, !srcloc !8803
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8804
  ret void, !dbg !8805
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8806 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8821, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.value(metadata i8 %1, metadata !8822, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.value(metadata i32 %2, metadata !8823, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.value(metadata i32 %3, metadata !8824, metadata !DIExpression()), !dbg !8825
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #28, !dbg !8826
  %6 = icmp eq i32 %5, -22, !dbg !8828
  br i1 %6, label %7, label %9, !dbg !8829

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 283) #27, !dbg !8830
  %8 = zext i8 %1 to i32, !dbg !8830
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef %8) #27, !dbg !8830
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 283) #27, !dbg !8830
  unreachable, !dbg !8830

9:                                                ; preds = %4
  ret void, !dbg !8835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8836 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8841, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata i8 %1, metadata !8842, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata i32 undef, metadata !8843, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata i32 undef, metadata !8844, metadata !DIExpression()), !dbg !8846
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8847
  call void @llvm.dbg.value(metadata i8 %3, metadata !8845, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8846
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #28, !dbg !8848
  call void @llvm.dbg.value(metadata i32 %4, metadata !8845, metadata !DIExpression()), !dbg !8846
  %5 = trunc i32 %4 to i8, !dbg !8849
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8850
  ret i32 %4, !dbg !8851
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8852 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8856, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i8 %1, metadata !8857, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i8 %2, metadata !8858, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i1 %3, metadata !8859, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8862
  %5 = zext i8 %2 to i32, !dbg !8863
  call void @llvm.dbg.value(metadata i32 %5, metadata !8861, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i32 0, metadata !8860, metadata !DIExpression()), !dbg !8862
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8861, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i32 0, metadata !8860, metadata !DIExpression()), !dbg !8862
  %7 = icmp eq i8 %1, 0, !dbg !8864
  br i1 %7, label %30, label %8, !dbg !8867

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8861, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i32 %10, metadata !8860, metadata !DIExpression()), !dbg !8862
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8868
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8871
  %13 = load i32, i32* %12, align 4, !dbg !8871
  %14 = icmp eq i32 %13, 0, !dbg !8872
  br i1 %14, label %26, label %15, !dbg !8873

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8874

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #28, !dbg !8876
  %18 = icmp eq i32 %17, 0, !dbg !8876
  br i1 %18, label %19, label %20, !dbg !8877

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.117, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !8878
  br label %30, !dbg !8884

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8885
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #28, !dbg !8886
  call void @llvm.dbg.value(metadata i32 %22, metadata !8861, metadata !DIExpression()), !dbg !8862
  %23 = icmp eq i32 %22, -22, !dbg !8887
  br i1 %23, label %30, label %24, !dbg !8889

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8890
  call void @llvm.dbg.value(metadata i32 %25, metadata !8861, metadata !DIExpression()), !dbg !8862
  br label %26, !dbg !8891

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8862
  call void @llvm.dbg.value(metadata i32 %27, metadata !8861, metadata !DIExpression()), !dbg !8862
  %28 = add nuw nsw i32 %10, 1, !dbg !8892
  call void @llvm.dbg.value(metadata i32 %28, metadata !8860, metadata !DIExpression()), !dbg !8862
  %29 = icmp eq i32 %28, %6, !dbg !8864
  br i1 %29, label %30, label %8, !dbg !8867, !llvm.loop !8893

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8862
  ret i32 %31, !dbg !8895
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #20 !dbg !8896 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8900, metadata !DIExpression()), !dbg !8902
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8903
  %3 = load i32, i32* %2, align 4, !dbg !8903
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8904, !range !5375
  %5 = icmp ult i32 %4, 2, !dbg !8904
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8905
  br i1 %7, label %8, label %15, !dbg !8905

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8906
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8907
  %11 = load i32, i32* %10, align 4, !dbg !8907
  %12 = and i32 %11, %9, !dbg !8908
  %13 = icmp eq i32 %12, 0, !dbg !8909
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8901, metadata !DIExpression()), !dbg !8902
  ret i32 %16, !dbg !8910
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8911 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8915, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8916, metadata !DIExpression()), !dbg !8918
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8919
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #26, !dbg !8919
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8917, metadata !DIExpression()), !dbg !8920
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8921
  %6 = load i32, i32* %5, align 4, !dbg !8921
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8922
  store i32 %6, i32* %7, align 4, !dbg !8923
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8924
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8925
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8926
  %11 = load i32, i32* %10, align 4, !dbg !8926
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #28, !dbg !8927
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #28, !dbg !8928
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #26, !dbg !8929
  ret i32 %12, !dbg !8930
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #15 !dbg !8931 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !8938, metadata !DIExpression()), !dbg !8942
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !8939, metadata !DIExpression()), !dbg !8942
  call void @llvm.dbg.value(metadata i32 undef, metadata !8940, metadata !DIExpression()), !dbg !8942
  call void @llvm.dbg.value(metadata i32 %2, metadata !8941, metadata !DIExpression()), !dbg !8942
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !8943
  %5 = load i32, i32* %4, align 4, !dbg !8943
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #28, !dbg !8944
  %7 = or i32 %6, %5, !dbg !8945
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !8946
  store i32 %7, i32* %8, align 4, !dbg !8947
  ret void, !dbg !8948
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8949 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8953, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8954, metadata !DIExpression()), !dbg !8955
  %3 = zext i8 %0 to i32, !dbg !8956
  %4 = icmp ugt i8 %0, 7, !dbg !8958
  br i1 %4, label %5, label %6, !dbg !8959

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.118, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !8960
  br label %7, !dbg !8966

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #28, !dbg !8967
  br label %7, !dbg !8968

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8955
  ret i32 %8, !dbg !8969
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #19 !dbg !8970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8974, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8975, metadata !DIExpression()), !dbg !8976
  tail call fastcc void @set_region_number(i32 noundef %0) #28, !dbg !8977
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8978
  %4 = load i32, i32* %3, align 4, !dbg !8978
  %5 = and i32 %4, -32, !dbg !8979
  %6 = or i32 %5, %0, !dbg !8980
  %7 = or i32 %6, 16, !dbg !8980
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8981
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8982
  %9 = load i32, i32* %8, align 4, !dbg !8982
  %10 = or i32 %9, 1, !dbg !8983
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8984
  ret void, !dbg !8985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #19 !dbg !8986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8989, metadata !DIExpression()), !dbg !8990
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8991
  ret void, !dbg !8992
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #6 !dbg !8993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8997, metadata !DIExpression()), !dbg !8998
  %2 = icmp ult i32 %0, 33, !dbg !8999
  br i1 %2, label %11, label %3, !dbg !9001

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9002
  br i1 %4, label %11, label %5, !dbg !9004

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9005
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9006, !range !5375
  %8 = mul nsw i32 %7, -2, !dbg !9007
  %9 = add nsw i32 %8, 62, !dbg !9007
  %10 = and i32 %9, 62, !dbg !9008
  br label %11, !dbg !9009

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8998
  ret i32 %12, !dbg !9010
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9011 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9015, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i8 %1, metadata !9016, metadata !DIExpression()), !dbg !9017
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #28, !dbg !9018
  %4 = icmp eq i32 %3, -22, !dbg !9020
  br i1 %4, label %5, label %7, !dbg !9021

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 314) #27, !dbg !9022
  %6 = zext i8 %1 to i32, !dbg !9022
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.121, i32 0, i32 0), i32 noundef %6) #27, !dbg !9022
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 314) #27, !dbg !9022
  unreachable, !dbg !9022

7:                                                ; preds = %2
  ret void, !dbg !9027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9028 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9032, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.value(metadata i8 %1, metadata !9033, metadata !DIExpression()), !dbg !9039
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9040
  call void @llvm.dbg.value(metadata i8 %3, metadata !9034, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9039
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #28, !dbg !9041
  call void @llvm.dbg.value(metadata i32 %4, metadata !9034, metadata !DIExpression()), !dbg !9039
  %5 = icmp ne i32 %4, -22, !dbg !9042
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9043
  call void @llvm.dbg.value(metadata i32 %4, metadata !9035, metadata !DIExpression()), !dbg !9044
  br i1 %7, label %8, label %12, !dbg !9043

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9035, metadata !DIExpression()), !dbg !9044
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #28, !dbg !9045
  %10 = add i32 %9, 1, !dbg !9048
  call void @llvm.dbg.value(metadata i32 %10, metadata !9035, metadata !DIExpression()), !dbg !9044
  %11 = icmp eq i32 %10, 8, !dbg !9049
  br i1 %11, label %12, label %8, !dbg !9050, !llvm.loop !9051

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !9053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #19 !dbg !9054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9057, metadata !DIExpression()), !dbg !9058
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9059
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9060
  ret void, !dbg !9061
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9062 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9067
  %2 = icmp ugt i32 %1, 8, !dbg !9069
  br i1 %2, label %3, label %4, !dbg !9070

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 341) #27, !dbg !9071
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.122, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #27, !dbg !9071
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 341) #27, !dbg !9071
  unreachable, !dbg !9071

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #28, !dbg !9076
  call void @llvm.dbg.value(metadata i32 0, metadata !9066, metadata !DIExpression()), !dbg !9077
  %5 = icmp eq i32 %1, 0, !dbg !9078
  br i1 %5, label %13, label %6, !dbg !9081

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !9081

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9066, metadata !DIExpression()), !dbg !9077
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !9082
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #28, !dbg !9084
  %11 = add nuw i32 %9, 1, !dbg !9085
  call void @llvm.dbg.value(metadata i32 %11, metadata !9066, metadata !DIExpression()), !dbg !9077
  %12 = icmp eq i32 %11, %1, !dbg !9078
  br i1 %12, label %13, label %8, !dbg !9081, !llvm.loop !9086

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !9088
  store i8 %14, i8* @static_regions_num, align 1, !dbg !9089
  tail call void @arm_core_mpu_enable() #28, !dbg !9090
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !9091
  %16 = and i32 %15, 65280, !dbg !9091
  %17 = icmp eq i32 %16, 2048, !dbg !9091
  br i1 %17, label %19, label %18, !dbg !9094

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 435) #27, !dbg !9095
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.124, i32 0, i32 0)) #27, !dbg !9095
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 435) #27, !dbg !9095
  unreachable, !dbg !9095

19:                                               ; preds = %13
  ret i32 0, !dbg !9097
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !9098 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9105, metadata !DIExpression()), !dbg !9108
  call void @llvm.dbg.value(metadata i8* %1, metadata !9106, metadata !DIExpression()), !dbg !9108
  call void @llvm.dbg.value(metadata i8* %0, metadata !9107, metadata !DIExpression()), !dbg !9108
  %3 = load i8, i8* %1, align 1, !dbg !9109
  %4 = icmp eq i8 %3, 0, !dbg !9110
  br i1 %4, label %13, label %5, !dbg !9111

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9105, metadata !DIExpression()), !dbg !9108
  call void @llvm.dbg.value(metadata i8* %8, metadata !9106, metadata !DIExpression()), !dbg !9108
  store i8 %6, i8* %7, align 1, !dbg !9112
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9114
  call void @llvm.dbg.value(metadata i8* %9, metadata !9105, metadata !DIExpression()), !dbg !9108
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9115
  call void @llvm.dbg.value(metadata i8* %10, metadata !9106, metadata !DIExpression()), !dbg !9108
  %11 = load i8, i8* %10, align 1, !dbg !9109
  %12 = icmp eq i8 %11, 0, !dbg !9110
  br i1 %12, label %13, label %5, !dbg !9111, !llvm.loop !9116

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9118
  ret i8* %0, !dbg !9119
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9120 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9124, metadata !DIExpression()), !dbg !9128
  call void @llvm.dbg.value(metadata i8* %1, metadata !9125, metadata !DIExpression()), !dbg !9128
  call void @llvm.dbg.value(metadata i32 %2, metadata !9126, metadata !DIExpression()), !dbg !9128
  call void @llvm.dbg.value(metadata i8* %0, metadata !9127, metadata !DIExpression()), !dbg !9128
  %4 = icmp eq i32 %2, 0, !dbg !9129
  br i1 %4, label %22, label %5, !dbg !9130

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9124, metadata !DIExpression()), !dbg !9128
  call void @llvm.dbg.value(metadata i32 %7, metadata !9126, metadata !DIExpression()), !dbg !9128
  call void @llvm.dbg.value(metadata i8* %8, metadata !9125, metadata !DIExpression()), !dbg !9128
  %9 = load i8, i8* %8, align 1, !dbg !9131
  %10 = icmp eq i8 %9, 0, !dbg !9132
  br i1 %10, label %16, label %11, !dbg !9133

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9134
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9136
  call void @llvm.dbg.value(metadata i8* %12, metadata !9125, metadata !DIExpression()), !dbg !9128
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9137
  call void @llvm.dbg.value(metadata i8* %13, metadata !9124, metadata !DIExpression()), !dbg !9128
  %14 = add i32 %7, -1, !dbg !9138
  call void @llvm.dbg.value(metadata i32 %14, metadata !9126, metadata !DIExpression()), !dbg !9128
  %15 = icmp eq i32 %14, 0, !dbg !9129
  br i1 %15, label %22, label %5, !dbg !9130, !llvm.loop !9139

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9124, metadata !DIExpression()), !dbg !9128
  call void @llvm.dbg.value(metadata i32 %18, metadata !9126, metadata !DIExpression()), !dbg !9128
  store i8 0, i8* %17, align 1, !dbg !9141
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9143
  call void @llvm.dbg.value(metadata i8* %19, metadata !9124, metadata !DIExpression()), !dbg !9128
  %20 = add i32 %18, -1, !dbg !9144
  call void @llvm.dbg.value(metadata i32 %20, metadata !9126, metadata !DIExpression()), !dbg !9128
  %21 = icmp eq i32 %20, 0, !dbg !9145
  br i1 %21, label %22, label %16, !dbg !9146, !llvm.loop !9147

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9149
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9150 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9154, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata i32 %1, metadata !9155, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata i32 %1, metadata !9156, metadata !DIExpression()), !dbg !9157
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9158

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9154, metadata !DIExpression()), !dbg !9157
  %6 = load i8, i8* %5, align 1, !dbg !9159
  %7 = icmp eq i8 %6, %3, !dbg !9160
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9161
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9162
  call void @llvm.dbg.value(metadata i8* %10, metadata !9154, metadata !DIExpression()), !dbg !9157
  br i1 %9, label %11, label %4, !dbg !9161, !llvm.loop !9164

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9166
  ret i8* %12, !dbg !9167
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9168 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9170, metadata !DIExpression()), !dbg !9173
  call void @llvm.dbg.value(metadata i32 %1, metadata !9171, metadata !DIExpression()), !dbg !9173
  call void @llvm.dbg.value(metadata i8* null, metadata !9172, metadata !DIExpression()), !dbg !9173
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9174

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9173
  call void @llvm.dbg.value(metadata i8* %6, metadata !9172, metadata !DIExpression()), !dbg !9173
  call void @llvm.dbg.value(metadata i8* %5, metadata !9170, metadata !DIExpression()), !dbg !9173
  %7 = load i8, i8* %5, align 1, !dbg !9175
  %8 = icmp eq i8 %7, %3, !dbg !9178
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9179
  call void @llvm.dbg.value(metadata i8* %9, metadata !9172, metadata !DIExpression()), !dbg !9173
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9180
  call void @llvm.dbg.value(metadata i8* %10, metadata !9170, metadata !DIExpression()), !dbg !9173
  %11 = icmp eq i8 %7, 0, !dbg !9181
  br i1 %11, label %12, label %4, !dbg !9181, !llvm.loop !9182

12:                                               ; preds = %4
  ret i8* %9, !dbg !9184
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !9185 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9189, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i32 0, metadata !9190, metadata !DIExpression()), !dbg !9191
  %2 = load i8, i8* %0, align 1, !dbg !9192
  %3 = icmp eq i8 %2, 0, !dbg !9193
  br i1 %3, label %11, label %4, !dbg !9194

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9190, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i8* %6, metadata !9189, metadata !DIExpression()), !dbg !9191
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9195
  call void @llvm.dbg.value(metadata i8* %7, metadata !9189, metadata !DIExpression()), !dbg !9191
  %8 = add i32 %5, 1, !dbg !9197
  call void @llvm.dbg.value(metadata i32 %8, metadata !9190, metadata !DIExpression()), !dbg !9191
  %9 = load i8, i8* %7, align 1, !dbg !9192
  %10 = icmp eq i8 %9, 0, !dbg !9193
  br i1 %10, label %11, label %4, !dbg !9194, !llvm.loop !9198

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9191
  ret i32 %12, !dbg !9200
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9201 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9205, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata i32 %1, metadata !9206, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata i32 0, metadata !9207, metadata !DIExpression()), !dbg !9208
  %3 = load i8, i8* %0, align 1, !dbg !9209
  %4 = icmp ne i8 %3, 0, !dbg !9210
  %5 = icmp ne i32 %1, 0, !dbg !9211
  %6 = and i1 %4, %5, !dbg !9211
  br i1 %6, label %7, label %16, !dbg !9212

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9207, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata i8* %9, metadata !9205, metadata !DIExpression()), !dbg !9208
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9213
  call void @llvm.dbg.value(metadata i8* %10, metadata !9205, metadata !DIExpression()), !dbg !9208
  %11 = add nuw i32 %8, 1, !dbg !9215
  call void @llvm.dbg.value(metadata i32 %11, metadata !9207, metadata !DIExpression()), !dbg !9208
  %12 = load i8, i8* %10, align 1, !dbg !9209
  %13 = icmp ne i8 %12, 0, !dbg !9210
  %14 = icmp ult i32 %11, %1, !dbg !9211
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9211
  br i1 %15, label %7, label %16, !dbg !9212, !llvm.loop !9216

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9208
  ret i32 %17, !dbg !9218
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !9219 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9223, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata i8* %1, metadata !9224, metadata !DIExpression()), !dbg !9225
  %3 = load i8, i8* %0, align 1, !dbg !9226
  %4 = load i8, i8* %1, align 1, !dbg !9227
  %5 = icmp ne i8 %3, %4, !dbg !9228
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9229
  br i1 %7, label %18, label %8, !dbg !9229

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9224, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata i8* %10, metadata !9223, metadata !DIExpression()), !dbg !9225
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9230
  call void @llvm.dbg.value(metadata i8* %11, metadata !9223, metadata !DIExpression()), !dbg !9225
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9232
  call void @llvm.dbg.value(metadata i8* %12, metadata !9224, metadata !DIExpression()), !dbg !9225
  %13 = load i8, i8* %11, align 1, !dbg !9226
  %14 = load i8, i8* %12, align 1, !dbg !9227
  %15 = icmp ne i8 %13, %14, !dbg !9228
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9229
  br i1 %17, label %18, label %8, !dbg !9229, !llvm.loop !9233

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9226
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9227
  %21 = zext i8 %19 to i32, !dbg !9236
  %22 = zext i8 %20 to i32, !dbg !9237
  %23 = sub nsw i32 %21, %22, !dbg !9238
  ret i32 %23, !dbg !9239
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9240 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9244, metadata !DIExpression()), !dbg !9247
  call void @llvm.dbg.value(metadata i8* %1, metadata !9245, metadata !DIExpression()), !dbg !9247
  call void @llvm.dbg.value(metadata i32 %2, metadata !9246, metadata !DIExpression()), !dbg !9247
  %4 = icmp eq i32 %2, 0, !dbg !9248
  br i1 %4, label %23, label %5, !dbg !9248

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9246, metadata !DIExpression()), !dbg !9247
  call void @llvm.dbg.value(metadata i8* %7, metadata !9245, metadata !DIExpression()), !dbg !9247
  call void @llvm.dbg.value(metadata i8* %8, metadata !9244, metadata !DIExpression()), !dbg !9247
  %9 = load i8, i8* %8, align 1, !dbg !9249
  %10 = load i8, i8* %7, align 1, !dbg !9250
  %11 = icmp ne i8 %9, %10, !dbg !9251
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9252
  br i1 %13, label %19, label %14, !dbg !9252

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9253
  call void @llvm.dbg.value(metadata i8* %15, metadata !9244, metadata !DIExpression()), !dbg !9247
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9255
  call void @llvm.dbg.value(metadata i8* %16, metadata !9245, metadata !DIExpression()), !dbg !9247
  %17 = add i32 %6, -1, !dbg !9256
  call void @llvm.dbg.value(metadata i32 %17, metadata !9246, metadata !DIExpression()), !dbg !9247
  %18 = icmp eq i32 %17, 0, !dbg !9248
  br i1 %18, label %23, label %5, !dbg !9248, !llvm.loop !9257

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9260
  %21 = zext i8 %10 to i32, !dbg !9261
  %22 = sub nsw i32 %20, %21, !dbg !9262
  br label %23, !dbg !9263

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9263
  ret i32 %24, !dbg !9264
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #17 !dbg !9265 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9269, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata i8* %1, metadata !9270, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata i8** %2, metadata !9271, metadata !DIExpression()), !dbg !9274
  %4 = icmp eq i8* %0, null, !dbg !9275
  br i1 %4, label %5, label %7, !dbg !9275

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9276
  br label %7, !dbg !9275

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9275
  call void @llvm.dbg.value(metadata i8* %8, metadata !9272, metadata !DIExpression()), !dbg !9274
  %9 = load i8, i8* %8, align 1, !dbg !9277
  %10 = icmp eq i8 %9, 0, !dbg !9277
  br i1 %10, label %33, label %11, !dbg !9278

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9272, metadata !DIExpression()), !dbg !9274
  %14 = zext i8 %12 to i32, !dbg !9277
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #28, !dbg !9279
  %16 = icmp eq i8* %15, null, !dbg !9278
  br i1 %16, label %21, label %17, !dbg !9280

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9281
  call void @llvm.dbg.value(metadata i8* %18, metadata !9272, metadata !DIExpression()), !dbg !9274
  %19 = load i8, i8* %18, align 1, !dbg !9277
  %20 = icmp eq i8 %19, 0, !dbg !9277
  br i1 %20, label %33, label %11, !dbg !9278, !llvm.loop !9283

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9273, metadata !DIExpression()), !dbg !9274
  %24 = zext i8 %22 to i32, !dbg !9285
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #28, !dbg !9286
  %26 = icmp eq i8* %25, null, !dbg !9287
  br i1 %26, label %27, label %31, !dbg !9288

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9289
  call void @llvm.dbg.value(metadata i8* %28, metadata !9273, metadata !DIExpression()), !dbg !9274
  %29 = load i8, i8* %28, align 1, !dbg !9285
  %30 = icmp eq i8 %29, 0, !dbg !9285
  br i1 %30, label %33, label %21, !dbg !9291, !llvm.loop !9292

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9294
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9297
  br label %33, !dbg !9298

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9274
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9274
  store i8* %34, i8** %2, align 4, !dbg !9274
  ret i8* %35, !dbg !9299
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !9300 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9302, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.value(metadata i8* %1, metadata !9303, metadata !DIExpression()), !dbg !9304
  %3 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9305
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9306
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #28, !dbg !9307
  ret i8* %0, !dbg !9308
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9309 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9311, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i8* %1, metadata !9312, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %2, metadata !9313, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i8* %0, metadata !9314, metadata !DIExpression()), !dbg !9316
  %4 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9317
  call void @llvm.dbg.value(metadata i32 %4, metadata !9315, metadata !DIExpression()), !dbg !9316
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9318
  call void @llvm.dbg.value(metadata i8* %5, metadata !9311, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i8* %1, metadata !9312, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %2, metadata !9313, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %2, metadata !9313, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9316
  %6 = icmp eq i32 %2, 0, !dbg !9319
  br i1 %6, label %18, label %7, !dbg !9320

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9321
  call void @llvm.dbg.value(metadata i8* %9, metadata !9311, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i8* %10, metadata !9312, metadata !DIExpression()), !dbg !9316
  %12 = load i8, i8* %10, align 1, !dbg !9322
  %13 = icmp eq i8 %12, 0, !dbg !9323
  br i1 %13, label %18, label %14, !dbg !9324

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9325
  call void @llvm.dbg.value(metadata i8* %15, metadata !9312, metadata !DIExpression()), !dbg !9316
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9327
  call void @llvm.dbg.value(metadata i8* %16, metadata !9311, metadata !DIExpression()), !dbg !9316
  store i8 %12, i8* %9, align 1, !dbg !9328
  call void @llvm.dbg.value(metadata i32 %11, metadata !9313, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %11, metadata !9313, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9316
  %17 = icmp eq i32 %11, 0, !dbg !9319
  br i1 %17, label %18, label %7, !dbg !9320, !llvm.loop !9329

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9316
  store i8 0, i8* %19, align 1, !dbg !9331
  ret i8* %0, !dbg !9332
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9333 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9337, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i8* %1, metadata !9338, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i32 %2, metadata !9339, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i8* %0, metadata !9340, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i8* %1, metadata !9341, metadata !DIExpression()), !dbg !9342
  %4 = icmp eq i32 %2, 0, !dbg !9343
  br i1 %4, label %31, label %5, !dbg !9345

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9341, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i8* %0, metadata !9340, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i32 %2, metadata !9339, metadata !DIExpression()), !dbg !9342
  %6 = add i32 %2, -1, !dbg !9346
  call void @llvm.dbg.value(metadata i32 %6, metadata !9339, metadata !DIExpression()), !dbg !9342
  %7 = icmp eq i32 %6, 0, !dbg !9347
  br i1 %7, label %23, label %8, !dbg !9348

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9349
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9349
  br label %11, !dbg !9349

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9341, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i8* %14, metadata !9340, metadata !DIExpression()), !dbg !9342
  %15 = load i8, i8* %14, align 1, !dbg !9350
  %16 = load i8, i8* %13, align 1, !dbg !9351
  %17 = icmp eq i8 %15, %16, !dbg !9352
  br i1 %17, label %18, label %23, !dbg !9349

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9353
  call void @llvm.dbg.value(metadata i8* %19, metadata !9340, metadata !DIExpression()), !dbg !9342
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9355
  call void @llvm.dbg.value(metadata i8* %20, metadata !9341, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i32 %12, metadata !9339, metadata !DIExpression()), !dbg !9342
  %21 = add i32 %12, -1, !dbg !9346
  call void @llvm.dbg.value(metadata i32 %21, metadata !9339, metadata !DIExpression()), !dbg !9342
  %22 = icmp eq i32 %21, 0, !dbg !9347
  br i1 %22, label %23, label %11, !dbg !9348, !llvm.loop !9356

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9342
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9342
  %26 = load i8, i8* %24, align 1, !dbg !9358
  %27 = zext i8 %26 to i32, !dbg !9358
  %28 = load i8, i8* %25, align 1, !dbg !9359
  %29 = zext i8 %28 to i32, !dbg !9359
  %30 = sub nsw i32 %27, %29, !dbg !9360
  br label %31, !dbg !9361

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9342
  ret i32 %32, !dbg !9362
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9363 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9367, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata i8* %1, metadata !9368, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata i32 %2, metadata !9369, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata i8* %0, metadata !9370, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata i8* %1, metadata !9371, metadata !DIExpression()), !dbg !9372
  %4 = ptrtoint i8* %0 to i32, !dbg !9373
  %5 = ptrtoint i8* %1 to i32, !dbg !9373
  %6 = sub i32 %4, %5, !dbg !9373
  %7 = icmp ult i32 %6, %2, !dbg !9375
  br i1 %7, label %10, label %8, !dbg !9376

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9371, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata i8* %0, metadata !9370, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata i32 %2, metadata !9369, metadata !DIExpression()), !dbg !9372
  %9 = icmp eq i32 %2, 0, !dbg !9377
  br i1 %9, label %26, label %17, !dbg !9379

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9369, metadata !DIExpression()), !dbg !9372
  %12 = add i32 %11, -1, !dbg !9380
  call void @llvm.dbg.value(metadata i32 %12, metadata !9369, metadata !DIExpression()), !dbg !9372
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9383
  %14 = load i8, i8* %13, align 1, !dbg !9383
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9384
  store i8 %14, i8* %15, align 1, !dbg !9385
  %16 = icmp eq i32 %12, 0, !dbg !9386
  br i1 %16, label %26, label %10, !dbg !9387, !llvm.loop !9388

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9371, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata i8* %19, metadata !9370, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata i32 %20, metadata !9369, metadata !DIExpression()), !dbg !9372
  %21 = load i8, i8* %18, align 1, !dbg !9390
  store i8 %21, i8* %19, align 1, !dbg !9392
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9393
  call void @llvm.dbg.value(metadata i8* %22, metadata !9370, metadata !DIExpression()), !dbg !9372
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9394
  call void @llvm.dbg.value(metadata i8* %23, metadata !9371, metadata !DIExpression()), !dbg !9372
  %24 = add i32 %20, -1, !dbg !9395
  call void @llvm.dbg.value(metadata i32 %24, metadata !9369, metadata !DIExpression()), !dbg !9372
  %25 = icmp eq i32 %24, 0, !dbg !9377
  br i1 %25, label %26, label %17, !dbg !9379, !llvm.loop !9396

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9398
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9399 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9405, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %1, metadata !9406, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i32 %2, metadata !9407, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %0, metadata !9408, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %1, metadata !9409, metadata !DIExpression()), !dbg !9410
  %4 = icmp eq i32 %2, 0, !dbg !9411
  br i1 %4, label %14, label %5, !dbg !9412

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9409, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %7, metadata !9408, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i32 %8, metadata !9407, metadata !DIExpression()), !dbg !9410
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9413
  call void @llvm.dbg.value(metadata i8* %9, metadata !9409, metadata !DIExpression()), !dbg !9410
  %10 = load i8, i8* %6, align 1, !dbg !9415
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9416
  call void @llvm.dbg.value(metadata i8* %11, metadata !9408, metadata !DIExpression()), !dbg !9410
  store i8 %10, i8* %7, align 1, !dbg !9417
  %12 = add i32 %8, -1, !dbg !9418
  call void @llvm.dbg.value(metadata i32 %12, metadata !9407, metadata !DIExpression()), !dbg !9410
  %13 = icmp eq i32 %12, 0, !dbg !9411
  br i1 %13, label %14, label %5, !dbg !9412, !llvm.loop !9419

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9421
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #21 !dbg !9422 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9426, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i32 %1, metadata !9427, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i32 %2, metadata !9428, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i8* %0, metadata !9429, metadata !DIExpression()), !dbg !9431
  %4 = trunc i32 %1 to i8, !dbg !9432
  call void @llvm.dbg.value(metadata i8 %4, metadata !9430, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i32 %2, metadata !9428, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i8* %0, metadata !9429, metadata !DIExpression()), !dbg !9431
  %5 = icmp eq i32 %2, 0, !dbg !9433
  br i1 %5, label %12, label %6, !dbg !9434

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9428, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i8* %8, metadata !9429, metadata !DIExpression()), !dbg !9431
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9435
  call void @llvm.dbg.value(metadata i8* %9, metadata !9429, metadata !DIExpression()), !dbg !9431
  store i8 %4, i8* %8, align 1, !dbg !9437
  %10 = add i32 %7, -1, !dbg !9438
  call void @llvm.dbg.value(metadata i32 %10, metadata !9428, metadata !DIExpression()), !dbg !9431
  %11 = icmp eq i32 %10, 0, !dbg !9433
  br i1 %11, label %12, label %6, !dbg !9434, !llvm.loop !9439

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9441
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9442 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9446, metadata !DIExpression()), !dbg !9452
  call void @llvm.dbg.value(metadata i32 %1, metadata !9447, metadata !DIExpression()), !dbg !9452
  call void @llvm.dbg.value(metadata i32 %2, metadata !9448, metadata !DIExpression()), !dbg !9452
  %4 = icmp eq i32 %2, 0, !dbg !9453
  br i1 %4, label %17, label %5, !dbg !9454

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9455

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9456
  call void @llvm.dbg.value(metadata i8* %9, metadata !9449, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.value(metadata i32 %8, metadata !9448, metadata !DIExpression()), !dbg !9452
  call void @llvm.dbg.value(metadata i8* %9, metadata !9449, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9456
  %10 = load i8, i8* %9, align 1, !dbg !9457
  %11 = icmp eq i8 %10, %6, !dbg !9460
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9461
  call void @llvm.dbg.value(metadata i8* %12, metadata !9449, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.value(metadata i32 %13, metadata !9448, metadata !DIExpression()), !dbg !9452
  br i1 %15, label %16, label %7, !dbg !9461, !llvm.loop !9462

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9464

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9452
  ret i8* %19, !dbg !9465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !9466 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9468, metadata !DIExpression()), !dbg !9469
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9470
  ret void, !dbg !9471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9474, metadata !DIExpression()), !dbg !9475
  ret i32 -1, !dbg !9476
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9477 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9481, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.value(metadata i32* %1, metadata !9482, metadata !DIExpression()), !dbg !9483
  %3 = ptrtoint i32* %1 to i32, !dbg !9484
  %4 = and i32 %3, -2, !dbg !9484
  %5 = icmp eq i32 %4, 2, !dbg !9484
  br i1 %5, label %6, label %9, !dbg !9484

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9485
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !9485
  br label %9, !dbg !9486

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9486
  ret i32 %10, !dbg !9487
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9488 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9490, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.value(metadata i32* %1, metadata !9491, metadata !DIExpression()), !dbg !9492
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #28, !dbg !9493
  ret i32 %3, !dbg !9494
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9498, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32* %1, metadata !9499, metadata !DIExpression()), !dbg !9500
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9501, !srcloc !9503
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #28, !dbg !9504
  ret i32 %3, !dbg !9505
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9506 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9511, metadata !DIExpression()), !dbg !9515
  call void @llvm.dbg.value(metadata i32* %1, metadata !9512, metadata !DIExpression()), !dbg !9515
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9516
  call void @llvm.dbg.value(metadata i32 %3, metadata !9513, metadata !DIExpression()), !dbg !9515
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #28, !dbg !9517
  call void @llvm.dbg.value(metadata i32 %4, metadata !9514, metadata !DIExpression()), !dbg !9515
  %5 = icmp ne i32 %3, %4, !dbg !9518
  %6 = sext i1 %5 to i32, !dbg !9519
  ret i32 %6, !dbg !9520
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9521 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9525, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %1, metadata !9526, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %2, metadata !9527, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32* %3, metadata !9528, metadata !DIExpression()), !dbg !9529
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #28, !dbg !9530
  ret i32 %5, !dbg !9531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9532 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9534, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i32 %1, metadata !9535, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i32 %2, metadata !9536, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i32* %3, metadata !9537, metadata !DIExpression()), !dbg !9538
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9539, !srcloc !9541
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #28, !dbg !9542
  ret i32 %5, !dbg !9543
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9544 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9546, metadata !DIExpression()), !dbg !9554
  call void @llvm.dbg.value(metadata i32 %1, metadata !9547, metadata !DIExpression()), !dbg !9554
  call void @llvm.dbg.value(metadata i32 %2, metadata !9548, metadata !DIExpression()), !dbg !9554
  call void @llvm.dbg.value(metadata i32* %3, metadata !9549, metadata !DIExpression()), !dbg !9554
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9555
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9557
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9557
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9557
  br i1 %11, label %33, label %12, !dbg !9557

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9554
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9554
  call void @llvm.dbg.value(metadata i8* %14, metadata !9552, metadata !DIExpression()), !dbg !9554
  call void @llvm.dbg.value(metadata i32 %13, metadata !9550, metadata !DIExpression()), !dbg !9554
  call void @llvm.dbg.value(metadata i32 %1, metadata !9551, metadata !DIExpression()), !dbg !9554
  br label %15, !dbg !9558

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9560
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9554
  call void @llvm.dbg.value(metadata i8* %17, metadata !9552, metadata !DIExpression()), !dbg !9554
  call void @llvm.dbg.value(metadata i32 %16, metadata !9551, metadata !DIExpression()), !dbg !9554
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9561
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9564
  call void @llvm.dbg.value(metadata i8* %19, metadata !9552, metadata !DIExpression()), !dbg !9554
  %20 = load i8, i8* %17, align 1, !dbg !9565
  %21 = zext i8 %20 to i32, !dbg !9566
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !9561
  %23 = icmp eq i32 %22, -1, !dbg !9567
  br i1 %23, label %30, label %24, !dbg !9568

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9569
  call void @llvm.dbg.value(metadata i32 %25, metadata !9551, metadata !DIExpression()), !dbg !9554
  %26 = icmp eq i32 %25, 0, !dbg !9570
  br i1 %26, label %27, label %15, !dbg !9571, !llvm.loop !9572

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9574
  call void @llvm.dbg.value(metadata i32 %28, metadata !9550, metadata !DIExpression()), !dbg !9554
  %29 = icmp eq i32 %28, 0, !dbg !9575
  br i1 %29, label %30, label %12, !dbg !9576, !llvm.loop !9577

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9554
  call void @llvm.dbg.value(metadata i32 %31, metadata !9550, metadata !DIExpression()), !dbg !9554
  call void @llvm.dbg.label(metadata !9553), !dbg !9580
  %32 = sub i32 %2, %31, !dbg !9581
  br label %33, !dbg !9582

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9554
  ret i32 %34, !dbg !9583
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9584 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9588, metadata !DIExpression()), !dbg !9589
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #28, !dbg !9590
  %3 = icmp eq i32 %2, -1, !dbg !9592
  br i1 %3, label %8, label %4, !dbg !9593

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #28, !dbg !9594
  %6 = icmp eq i32 %5, -1, !dbg !9595
  %7 = sext i1 %6 to i32, !dbg !9594
  br label %8, !dbg !9596

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9589
  ret i32 %9, !dbg !9597
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9598 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9600, metadata !DIExpression()), !dbg !9611
  %8 = bitcast i64* %2 to i8*, !dbg !9612
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #26, !dbg !9612
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !9601, metadata !DIExpression()), !dbg !9613
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !9613
  store i64 %9, i64* %2, align 8, !dbg !9613
  %10 = bitcast i64* %4 to i8*, !dbg !9614
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #26, !dbg !9614
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !9609, metadata !DIExpression()), !dbg !9615
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !9615
  store i64 %11, i64* %4, align 8, !dbg !9615
  %12 = bitcast i64* %6 to i8*, !dbg !9616
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #26, !dbg !9616
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !9610, metadata !DIExpression()), !dbg !9617
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !9617
  store i64 %13, i64* %6, align 8, !dbg !9617
  %14 = trunc i64 %9 to i32, !dbg !9618
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !9618
  %16 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %15) #28, !dbg !9620
  %17 = trunc i64 %13 to i32, !dbg !9621
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !9621
  br i1 %16, label %19, label %26, !dbg !9621

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !9621
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !9621
  %22 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %21) #28, !dbg !9622
  br i1 %22, label %23, label %26, !dbg !9623

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %18) #28, !dbg !9624
  br i1 %24, label %25, label %26, !dbg !9625

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #28, !dbg !9626
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #28, !dbg !9627
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #28, !dbg !9628
  br label %26, !dbg !9629

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !9611
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #26, !dbg !9630
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #26, !dbg !9630
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #26, !dbg !9630
  ret i32 %27, !dbg !9630
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !9631 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9636, metadata !DIExpression()), !dbg !9637
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9638, !srcloc !9640
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #28, !dbg !9641
  ret i1 %2, !dbg !9642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9643 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !9648, metadata !DIExpression()), !dbg !9650
  call void @llvm.dbg.value(metadata i32 %1, metadata !9649, metadata !DIExpression()), !dbg !9650
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !9651
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !9651
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !9652
  %6 = load i8, i8* %5, align 4, !dbg !9652
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !9653
  %8 = load i16, i16* %7, align 2, !dbg !9653
  %9 = zext i16 %8 to i32, !dbg !9654
  %10 = or i32 %9, %1, !dbg !9655
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #28, !dbg !9656
  ret void, !dbg !9657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !9658 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9661, metadata !DIExpression()), !dbg !9664
  call void @llvm.dbg.value(metadata i8 %1, metadata !9662, metadata !DIExpression()), !dbg !9664
  call void @llvm.dbg.value(metadata i32 %2, metadata !9663, metadata !DIExpression()), !dbg !9664
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9665, !srcloc !9667
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #28, !dbg !9668
  ret void, !dbg !9669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !9670 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9672, metadata !DIExpression()), !dbg !9679
  call void @llvm.dbg.value(metadata i8 %1, metadata !9673, metadata !DIExpression()), !dbg !9679
  call void @llvm.dbg.value(metadata i32 %2, metadata !9674, metadata !DIExpression()), !dbg !9679
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9680
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !9680
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !9680
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !9675, metadata !DIExpression()), !dbg !9679
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9681
  %8 = bitcast i8** %7 to %struct.k_spinlock**, !dbg !9681
  %9 = load %struct.k_spinlock*, %struct.k_spinlock** %8, align 4, !dbg !9681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !9676, metadata !DIExpression()), !dbg !9679
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9682
  %11 = bitcast i8** %10 to %struct.k_spinlock**, !dbg !9682
  %12 = load %struct.k_spinlock*, %struct.k_spinlock** %11, align 4, !dbg !9682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %12, metadata !9678, metadata !DIExpression()), !dbg !9679
  %13 = and i32 %2, 132120576, !dbg !9683
  %14 = icmp eq i32 %13, 0, !dbg !9683
  br i1 %14, label %16, label %15, !dbg !9686

15:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef 679) #27, !dbg !9687
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13.139, i32 0, i32 0)) #27, !dbg !9687
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef 679) #27, !dbg !9687
  unreachable, !dbg !9687

16:                                               ; preds = %3
  %17 = and i32 %2, 48, !dbg !9689
  %18 = icmp eq i32 %17, 48, !dbg !9689
  br i1 %18, label %19, label %20, !dbg !9692

19:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.14.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef 683) #27, !dbg !9693
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.15.141, i32 0, i32 0)) #27, !dbg !9693
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef 683) #27, !dbg !9693
  unreachable, !dbg !9693

20:                                               ; preds = %16
  %21 = and i32 %2, 131072, !dbg !9695
  %22 = icmp ne i32 %21, 0, !dbg !9695
  %23 = and i32 %2, 131074, !dbg !9695
  %24 = icmp eq i32 %23, 2, !dbg !9695
  br i1 %24, label %25, label %26, !dbg !9695

25:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16.142, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef 687) #27, !dbg !9698
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.17.143, i32 0, i32 0)) #27, !dbg !9698
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef 687) #27, !dbg !9698
  unreachable, !dbg !9698

26:                                               ; preds = %20
  %27 = and i32 %2, 6, !dbg !9700
  %28 = icmp eq i32 %27, 4, !dbg !9700
  br i1 %28, label %29, label %30, !dbg !9700

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef 690) #27, !dbg !9703
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef 690) #27, !dbg !9703
  unreachable, !dbg !9703

30:                                               ; preds = %26
  %31 = and i32 %2, 786432, !dbg !9705
  %32 = icmp eq i32 %31, 0, !dbg !9705
  %33 = or i1 %32, %22, !dbg !9705
  br i1 %33, label %35, label %34, !dbg !9705

34:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef 694) #27, !dbg !9708
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20.146, i32 0, i32 0)) #27, !dbg !9708
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef 694) #27, !dbg !9708
  unreachable, !dbg !9708

35:                                               ; preds = %30
  %36 = icmp eq i32 %31, 786432, !dbg !9710
  br i1 %36, label %37, label %38, !dbg !9713

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.21.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef 698) #27, !dbg !9714
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22.148, i32 0, i32 0)) #27, !dbg !9714
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef 698) #27, !dbg !9714
  unreachable, !dbg !9714

38:                                               ; preds = %35
  %39 = and i32 %2, 1048577, !dbg !9716
  %40 = icmp ne i32 %39, 1048577, !dbg !9716
  %41 = or i1 %40, %32, !dbg !9716
  %42 = xor i32 %2, 786432, !dbg !9716
  %43 = select i1 %41, i32 %2, i32 %42, !dbg !9716
  call void @llvm.dbg.value(metadata i32 %43, metadata !9674, metadata !DIExpression()), !dbg !9679
  call void @llvm.dbg.value(metadata i32 %43, metadata !9674, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !9679
  %44 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %9, i32 0, i32 0, !dbg !9718
  %45 = load i32, i32* %44, align 4, !dbg !9718
  %46 = zext i8 %1 to i32, !dbg !9718
  %47 = shl nuw i32 1, %46, !dbg !9718
  %48 = and i32 %45, %47, !dbg !9718
  %49 = icmp eq i32 %48, 0, !dbg !9718
  br i1 %49, label %50, label %51, !dbg !9721

50:                                               ; preds = %38
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10.149, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef 709) #27, !dbg !9722
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.150, i32 0, i32 0)) #27, !dbg !9722
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef 709) #27, !dbg !9722
  unreachable, !dbg !9722

51:                                               ; preds = %38
  %52 = and i32 %43, 1, !dbg !9724
  %53 = icmp eq i32 %52, 0, !dbg !9726
  br i1 %53, label %58, label %54, !dbg !9727

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !9728
  %56 = load i32, i32* %55, align 4, !dbg !9730
  %57 = or i32 %56, %47, !dbg !9730
  store i32 %57, i32* %55, align 4, !dbg !9730
  br label %63, !dbg !9731

58:                                               ; preds = %51
  %59 = xor i32 %47, -1, !dbg !9732
  %60 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !9734
  %61 = load i32, i32* %60, align 4, !dbg !9735
  %62 = and i32 %61, %59, !dbg !9735
  store i32 %62, i32* %60, align 4, !dbg !9735
  br label %63

63:                                               ; preds = %58, %54
  %64 = and i32 %43, -1048577, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %64, metadata !9674, metadata !DIExpression()), !dbg !9679
  %65 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !9737
  %66 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %65, align 4, !dbg !9737
  %67 = tail call i32 %66(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %64) #27, !dbg !9738
  ret void, !dbg !9739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !9740 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9742, metadata !DIExpression()), !dbg !9743
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !9744
  ret i1 %2, !dbg !9745
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9746 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9748, metadata !DIExpression()), !dbg !9749
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #28, !dbg !9750
  ret void, !dbg !9751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9756, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata i32 %1, metadata !9757, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9758, metadata !DIExpression()), !dbg !9762
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9763
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9763
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9763
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9759, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata i32 %0, metadata !9761, metadata !DIExpression()), !dbg !9762
  %7 = icmp slt i32 %0, %1, !dbg !9764
  br i1 %7, label %8, label %22, !dbg !9767

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9761, metadata !DIExpression()), !dbg !9762
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #28, !dbg !9768
  %11 = icmp eq i32 %10, 0, !dbg !9768
  br i1 %11, label %19, label %12, !dbg !9771

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #28, !dbg !9772
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9774
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9774
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9776
  br i1 %15, label %19, label %16, !dbg !9777

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9778
  %18 = load i8*, i8** %17, align 4, !dbg !9778
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !9779
  br label %19, !dbg !9780

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9781
  call void @llvm.dbg.value(metadata i32 %20, metadata !9761, metadata !DIExpression()), !dbg !9762
  %21 = icmp eq i32 %20, %1, !dbg !9764
  br i1 %21, label %22, label %8, !dbg !9767, !llvm.loop !9782

22:                                               ; preds = %19, %3
  ret void, !dbg !9784
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #7 !dbg !9785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9787, metadata !DIExpression()), !dbg !9788
  %2 = shl nuw i32 1, %0, !dbg !9789
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #28, !dbg !9792
  ret i32 %3, !dbg !9793
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #19 !dbg !9794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9798, metadata !DIExpression()), !dbg !9799
  %2 = shl nuw i32 1, %0, !dbg !9800
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #28, !dbg !9803
  ret void, !dbg !9804
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #19 !dbg !9805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9808, metadata !DIExpression()), !dbg !9809
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !9810
  ret void, !dbg !9811
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #7 !dbg !9812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9814, metadata !DIExpression()), !dbg !9815
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !9816
  %3 = and i32 %2, %0, !dbg !9816
  %4 = icmp eq i32 %3, %0, !dbg !9817
  %5 = zext i1 %4 to i32, !dbg !9817
  ret i32 %5, !dbg !9818
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9819 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9821, metadata !DIExpression()), !dbg !9822
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #28, !dbg !9823
  ret void, !dbg !9824
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9825 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9827, metadata !DIExpression()), !dbg !9828
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #28, !dbg !9829
  ret void, !dbg !9830
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9831 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9833, metadata !DIExpression()), !dbg !9834
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #28, !dbg !9835
  ret void, !dbg !9836
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9837 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9839, metadata !DIExpression()), !dbg !9840
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #28, !dbg !9841
  ret void, !dbg !9842
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9843 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9845, metadata !DIExpression()), !dbg !9846
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #28, !dbg !9847
  ret void, !dbg !9848
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9849 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9851, metadata !DIExpression()), !dbg !9852
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #28, !dbg !9853
  ret void, !dbg !9854
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9855 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9857, metadata !DIExpression()), !dbg !9858
  tail call fastcc void @__stm32_exti_connect_irqs() #28, !dbg !9859
  ret i32 0, !dbg !9860
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !986 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !990, metadata !DIExpression()), !dbg !9861
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !9862
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !9864
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !9866
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !9868
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !9870
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !9872
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !9874
  ret void, !dbg !9876
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9879, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i32 0, metadata !9880, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i32 undef, metadata !9880, metadata !DIExpression()), !dbg !9881
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9882
  %3 = load i32, i32* %2, align 4, !dbg !9882
  call void @llvm.dbg.value(metadata i32 %3, metadata !9880, metadata !DIExpression()), !dbg !9881
  %4 = shl nuw i32 1, %0, !dbg !9883
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #28, !dbg !9884
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !9885
  ret void, !dbg !9886
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #19 !dbg !9887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9889, metadata !DIExpression()), !dbg !9890
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9891
  %3 = or i32 %2, %0, !dbg !9891
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9891
  ret void, !dbg !9892
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #19 !dbg !9893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9895, metadata !DIExpression()), !dbg !9896
  %2 = icmp slt i32 %0, 32, !dbg !9897
  br i1 %2, label %3, label %5, !dbg !9899

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9900
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #28, !dbg !9902
  br label %5, !dbg !9903

5:                                                ; preds = %1, %3
  ret void, !dbg !9904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #19 !dbg !9905 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9907, metadata !DIExpression()), !dbg !9908
  %2 = xor i32 %0, -1, !dbg !9909
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9909
  %4 = and i32 %3, %2, !dbg !9909
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9909
  ret void, !dbg !9910
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #19 !dbg !9911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9915, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i32 %1, metadata !9916, metadata !DIExpression()), !dbg !9917
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9918

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9919
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #28, !dbg !9921
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #28, !dbg !9922
  br label %11, !dbg !9923

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9924
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #28, !dbg !9925
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #28, !dbg !9926
  br label %11, !dbg !9927

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9928
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #28, !dbg !9929
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #28, !dbg !9930
  br label %11, !dbg !9931

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9932
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #28, !dbg !9933
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #28, !dbg !9934
  br label %11, !dbg !9935

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #19 !dbg !9937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9939, metadata !DIExpression()), !dbg !9940
  %2 = xor i32 %0, -1, !dbg !9941
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9941
  %4 = and i32 %3, %2, !dbg !9941
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9941
  ret void, !dbg !9942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #19 !dbg !9943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9945, metadata !DIExpression()), !dbg !9946
  %2 = xor i32 %0, -1, !dbg !9947
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9947
  %4 = and i32 %3, %2, !dbg !9947
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9947
  ret void, !dbg !9948
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #19 !dbg !9949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9951, metadata !DIExpression()), !dbg !9952
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9953
  %3 = or i32 %2, %0, !dbg !9953
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9953
  ret void, !dbg !9954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #19 !dbg !9955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9957, metadata !DIExpression()), !dbg !9958
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9959
  %3 = or i32 %2, %0, !dbg !9959
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9959
  ret void, !dbg !9960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #14 !dbg !9961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9965, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9966, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i8* %2, metadata !9967, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !9968, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9970, metadata !DIExpression()), !dbg !9971
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9972
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9972
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9974
  br i1 %6, label %7, label %9, !dbg !9975

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9976
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9977
  store i8* %2, i8** %8, align 4, !dbg !9978
  br label %9, !dbg !9979

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9971
  ret i32 %10, !dbg !9980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #12 !dbg !9981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9983, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !9984, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9985, metadata !DIExpression()), !dbg !9986
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9987
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9988
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9989
  store i8* null, i8** %3, align 4, !dbg !9990
  ret void, !dbg !9991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #19 !dbg !9992 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9994, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.value(metadata i8* %1, metadata !9995, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.value(metadata i8* %1, metadata !9996, metadata !DIExpression()), !dbg !9999
  %3 = bitcast i8* %1 to i32*, !dbg !10000
  %4 = load i32, i32* %3, align 4, !dbg !10000
  %5 = add i32 %4, -37, !dbg !10000
  %6 = icmp ult i32 %5, -9, !dbg !10000
  br i1 %6, label %15, label %7, !dbg !10002

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10003
  %9 = inttoptr i32 %8 to i32*, !dbg !10004
  call void @llvm.dbg.value(metadata i32* %9, metadata !9997, metadata !DIExpression()), !dbg !9999
  %10 = load volatile i32, i32* %9, align 4, !dbg !10005
  call void @llvm.dbg.value(metadata i32 %10, metadata !9998, metadata !DIExpression()), !dbg !9999
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10006
  %12 = bitcast i8* %11 to i32*, !dbg !10006
  %13 = load i32, i32* %12, align 4, !dbg !10006
  %14 = or i32 %13, %10, !dbg !10007
  call void @llvm.dbg.value(metadata i32 %14, metadata !9998, metadata !DIExpression()), !dbg !9999
  store volatile i32 %14, i32* %9, align 4, !dbg !10008
  br label %15, !dbg !10009

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9999
  ret i32 %16, !dbg !10010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #19 !dbg !10011 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10013, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.value(metadata i8* %1, metadata !10014, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.value(metadata i8* %1, metadata !10015, metadata !DIExpression()), !dbg !10018
  %3 = bitcast i8* %1 to i32*, !dbg !10019
  %4 = load i32, i32* %3, align 4, !dbg !10019
  %5 = add i32 %4, -37, !dbg !10019
  %6 = icmp ult i32 %5, -9, !dbg !10019
  br i1 %6, label %16, label %7, !dbg !10021

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10022
  %9 = inttoptr i32 %8 to i32*, !dbg !10023
  call void @llvm.dbg.value(metadata i32* %9, metadata !10016, metadata !DIExpression()), !dbg !10018
  %10 = load volatile i32, i32* %9, align 4, !dbg !10024
  call void @llvm.dbg.value(metadata i32 %10, metadata !10017, metadata !DIExpression()), !dbg !10018
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10025
  %12 = bitcast i8* %11 to i32*, !dbg !10025
  %13 = load i32, i32* %12, align 4, !dbg !10025
  %14 = xor i32 %13, -1, !dbg !10026
  %15 = and i32 %10, %14, !dbg !10027
  call void @llvm.dbg.value(metadata i32 %15, metadata !10017, metadata !DIExpression()), !dbg !10018
  store volatile i32 %15, i32* %9, align 4, !dbg !10028
  br label %16, !dbg !10029

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10018
  ret i32 %17, !dbg !10030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #14 !dbg !10031 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10033, metadata !DIExpression()), !dbg !10040
  call void @llvm.dbg.value(metadata i8* %1, metadata !10034, metadata !DIExpression()), !dbg !10040
  call void @llvm.dbg.value(metadata i32* %2, metadata !10035, metadata !DIExpression()), !dbg !10040
  call void @llvm.dbg.value(metadata i8* %1, metadata !10036, metadata !DIExpression()), !dbg !10040
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10041
  call void @llvm.dbg.value(metadata i32 %4, metadata !10037, metadata !DIExpression()), !dbg !10040
  call void @llvm.dbg.value(metadata i32 %4, metadata !10038, metadata !DIExpression()), !dbg !10040
  call void @llvm.dbg.value(metadata i32 %4, metadata !10039, metadata !DIExpression()), !dbg !10040
  %5 = bitcast i8* %1 to i32*, !dbg !10042
  %6 = load i32, i32* %5, align 4, !dbg !10042
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !10043

7:                                                ; preds = %3
  br label %10, !dbg !10044

8:                                                ; preds = %3
  br label %10, !dbg !10046

9:                                                ; preds = %3
  br label %10, !dbg !10047

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !10048
  br label %12, !dbg !10049

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !10040
  ret i32 %13, !dbg !10049
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #19 !dbg !10050 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10052, metadata !DIExpression()), !dbg !10060
  call void @llvm.dbg.value(metadata i8* %1, metadata !10053, metadata !DIExpression()), !dbg !10060
  call void @llvm.dbg.value(metadata i8* %2, metadata !10054, metadata !DIExpression()), !dbg !10060
  call void @llvm.dbg.value(metadata i8* %1, metadata !10055, metadata !DIExpression()), !dbg !10060
  %4 = bitcast i8* %1 to i32*, !dbg !10061
  %5 = load i32, i32* %4, align 4, !dbg !10061
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #28, !dbg !10062
  call void @llvm.dbg.value(metadata i32 %6, metadata !10059, metadata !DIExpression()), !dbg !10060
  %7 = icmp slt i32 %6, 0, !dbg !10063
  br i1 %7, label %22, label %8, !dbg !10065

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10055, metadata !DIExpression()), !dbg !10060
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10066
  %10 = bitcast i8* %9 to i32*, !dbg !10066
  %11 = load i32, i32* %10, align 4, !dbg !10066
  %12 = lshr i32 %11, 16, !dbg !10066
  %13 = and i32 %12, 7, !dbg !10066
  %14 = lshr i32 %11, 8, !dbg !10067
  %15 = and i32 %14, 31, !dbg !10067
  %16 = shl i32 %13, %15, !dbg !10068
  call void @llvm.dbg.value(metadata i32 %16, metadata !10058, metadata !DIExpression()), !dbg !10060
  %17 = and i32 %11, 255, !dbg !10069
  %18 = or i32 %17, 1073887232, !dbg !10070
  %19 = inttoptr i32 %18 to i32*, !dbg !10071
  call void @llvm.dbg.value(metadata i32* %19, metadata !10056, metadata !DIExpression()), !dbg !10060
  %20 = load volatile i32, i32* %19, align 4, !dbg !10072
  call void @llvm.dbg.value(metadata i32 %20, metadata !10057, metadata !DIExpression()), !dbg !10060
  %21 = or i32 %16, %20, !dbg !10073
  call void @llvm.dbg.value(metadata i32 %21, metadata !10057, metadata !DIExpression()), !dbg !10060
  store volatile i32 %21, i32* %19, align 4, !dbg !10074
  br label %22, !dbg !10075

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10060
  ret i32 %23, !dbg !10076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !10077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10081, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.value(metadata i32 0, metadata !10082, metadata !DIExpression()), !dbg !10083
  %2 = add i32 %0, -1, !dbg !10084
  %3 = icmp ult i32 %2, 4, !dbg !10084
  br i1 %3, label %4, label %7, !dbg !10084

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10084
  %6 = load i32, i32* %5, align 4, !dbg !10084
  call void @llvm.dbg.value(metadata i32 %6, metadata !10082, metadata !DIExpression()), !dbg !10083
  br label %7, !dbg !10085

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10083
  ret i32 %8, !dbg !10086
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10087 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10089, metadata !DIExpression()), !dbg !10092
  tail call void @config_enable_default_clocks() #27, !dbg !10093
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !10094
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #28, !dbg !10094
  %4 = lshr i32 %3, 4, !dbg !10094
  %5 = and i32 %4, 15, !dbg !10094
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10094
  %7 = load i8, i8* %6, align 1, !dbg !10094
  %8 = zext i8 %7 to i32, !dbg !10094
  %9 = lshr i32 %2, %8, !dbg !10094
  call void @llvm.dbg.value(metadata i32 %9, metadata !10090, metadata !DIExpression()), !dbg !10092
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !10091, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10092
  %10 = icmp ult i32 %9, 32000000, !dbg !10095
  br i1 %10, label %11, label %13, !dbg !10097

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #27, !dbg !10098
  br label %13, !dbg !10100

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #28, !dbg !10101
  tail call fastcc void @set_up_plls() #28, !dbg !10102
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #28, !dbg !10103
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #28, !dbg !10106
  br label %14, !dbg !10107

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10108
  %16 = icmp eq i32 %15, 12, !dbg !10109
  br i1 %16, label %17, label %14, !dbg !10107, !llvm.loop !10110

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !10112
  br i1 %18, label %19, label %21, !dbg !10114

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #27, !dbg !10115
  br label %21, !dbg !10117

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !10118
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #28, !dbg !10119
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #28, !dbg !10120
  ret i32 0, !dbg !10121
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #7 !dbg !10122 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10124
  %2 = and i32 %1, 240, !dbg !10124
  ret i32 %2, !dbg !10125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #19 !dbg !10126 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10127
  %2 = icmp eq i32 %1, 1, !dbg !10131
  br i1 %2, label %7, label %3, !dbg !10132

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #28, !dbg !10133
  br label %4, !dbg !10135

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10136
  %6 = icmp eq i32 %5, 1, !dbg !10137
  br i1 %6, label %7, label %4, !dbg !10135, !llvm.loop !10138

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #28, !dbg !10140
  br label %8, !dbg !10143

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #28, !dbg !10144
  %10 = icmp eq i32 %9, 1, !dbg !10145
  br i1 %10, label %11, label %8, !dbg !10143, !llvm.loop !10146

11:                                               ; preds = %8
  ret void, !dbg !10148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10149 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10150
  %2 = icmp eq i32 %1, 12, !dbg !10152
  br i1 %2, label %3, label %4, !dbg !10153

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #28, !dbg !10154
  tail call fastcc void @stm32_clock_switch_to_hsi() #28, !dbg !10156
  br label %4, !dbg !10157

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #28, !dbg !10158
  tail call void @config_pll_sysclock() #27, !dbg !10159
  tail call fastcc void @LL_RCC_PLL_Enable() #28, !dbg !10160
  br label %5, !dbg !10161

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #28, !dbg !10162
  %7 = icmp eq i32 %6, 1, !dbg !10163
  br i1 %7, label %8, label %5, !dbg !10161, !llvm.loop !10164

8:                                                ; preds = %5
  ret void, !dbg !10166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #19 !dbg !10167 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10169, metadata !DIExpression()), !dbg !10170
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10171
  %2 = and i32 %1, -241, !dbg !10171
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10171
  ret void, !dbg !10172
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #19 !dbg !10173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10175, metadata !DIExpression()), !dbg !10176
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10177
  %3 = and i32 %2, -4, !dbg !10177
  %4 = or i32 %3, %0, !dbg !10177
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10177
  ret void, !dbg !10178
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #7 !dbg !10179 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10180
  %2 = and i32 %1, 12, !dbg !10180
  ret i32 %2, !dbg !10181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #19 !dbg !10182 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10184, metadata !DIExpression()), !dbg !10185
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10186
  %2 = and i32 %1, -1793, !dbg !10186
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10186
  ret void, !dbg !10187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #19 !dbg !10188 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10190, metadata !DIExpression()), !dbg !10191
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10192
  %2 = and i32 %1, -14337, !dbg !10192
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10192
  ret void, !dbg !10193
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #19 !dbg !10194 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10195
  %2 = icmp eq i32 %1, 1, !dbg !10197
  br i1 %2, label %7, label %3, !dbg !10198

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #28, !dbg !10199
  br label %4, !dbg !10201

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10202
  %6 = icmp eq i32 %5, 1, !dbg !10203
  br i1 %6, label %7, label %4, !dbg !10201, !llvm.loop !10204

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #28, !dbg !10206
  br label %8, !dbg !10207

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10208
  %10 = icmp eq i32 %9, 4, !dbg !10209
  br i1 %10, label %11, label %8, !dbg !10207, !llvm.loop !10210

11:                                               ; preds = %8
  ret void, !dbg !10212
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #19 !dbg !10213 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10214
  %2 = and i32 %1, -16777217, !dbg !10214
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10214
  ret void, !dbg !10215
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #19 !dbg !10216 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10217
  %2 = or i32 %1, 16777216, !dbg !10217
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10217
  ret void, !dbg !10218
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #7 !dbg !10219 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10220
  %2 = lshr i32 %1, 25, !dbg !10221
  %3 = and i32 %2, 1, !dbg !10221
  ret i32 %3, !dbg !10222
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #7 !dbg !10223 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10224
  %2 = lshr i32 %1, 1, !dbg !10225
  %3 = and i32 %2, 1, !dbg !10225
  ret i32 %3, !dbg !10226
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #19 !dbg !10227 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10228
  %2 = or i32 %1, 1, !dbg !10228
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10228
  ret void, !dbg !10229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #19 !dbg !10230 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10231
  %2 = or i32 %1, 1, !dbg !10231
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10231
  ret void, !dbg !10232
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #7 !dbg !10233 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10234
  %2 = lshr i32 %1, 1, !dbg !10235
  %3 = and i32 %2, 1, !dbg !10235
  ret i32 %3, !dbg !10236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10237 {
  ret i32 16000000, !dbg !10239
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #19 !dbg !10242 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #28, !dbg !10243
  ret void, !dbg !10244
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #19 !dbg !10245 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10249, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata i32 262144, metadata !10250, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10251, metadata !DIExpression()), !dbg !10252
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10253
  %2 = and i32 %1, -16580609, !dbg !10253
  %3 = or i32 %2, 4456448, !dbg !10253
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10253
  ret void, !dbg !10254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #5 !dbg !10255 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !10256
  %2 = zext i8 %1 to i32, !dbg !10256
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !10256
  ret i32 %3, !dbg !10257
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #18 !dbg !10258 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #28, !dbg !10259
  ret void, !dbg !10260
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #18 !dbg !10261 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !10263, metadata !DIExpression()), !dbg !10265
  %2 = bitcast i32* %1 to i8*, !dbg !10266
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10266
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10264, metadata !DIExpression()), !dbg !10267
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10268
  %4 = or i32 %3, 1, !dbg !10268
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10268
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10269
  %6 = and i32 %5, 1, !dbg !10269
  store volatile i32 %6, i32* %1, align 4, !dbg !10270
  %7 = load volatile i32, i32* %1, align 4, !dbg !10271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10272
  ret void, !dbg !10272
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10273 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10275, metadata !DIExpression()), !dbg !10276
  %2 = tail call fastcc zeroext i1 @device_is_ready.160() #28, !dbg !10277
  br i1 %2, label %3, label %4, !dbg !10279

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #28, !dbg !10280
  br label %4, !dbg !10281

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10276
  ret i32 %5, !dbg !10282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.160() unnamed_addr #1 !dbg !10283 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10287, metadata !DIExpression()), !dbg !10288
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10289, !srcloc !10291
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.161() #28, !dbg !10292
  ret i1 %1, !dbg !10293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10294 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10295
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10296
  ret void, !dbg !10297
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10300, metadata !DIExpression()), !dbg !10301
  %2 = icmp eq i32 %0, 10, !dbg !10302
  br i1 %2, label %3, label %4, !dbg !10304

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #28, !dbg !10305
  br label %4, !dbg !10307

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10308
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #28, !dbg !10309
  ret i32 %0, !dbg !10310
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10311 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10314, metadata !DIExpression()), !dbg !10316
  call void @llvm.dbg.value(metadata i8 %0, metadata !10315, metadata !DIExpression()), !dbg !10316
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10317, !srcloc !10319
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #28, !dbg !10320
  ret void, !dbg !10321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10322 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10324, metadata !DIExpression()), !dbg !10327
  call void @llvm.dbg.value(metadata i8 %0, metadata !10325, metadata !DIExpression()), !dbg !10327
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10328
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10326, metadata !DIExpression()), !dbg !10327
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10329
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10329
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #27, !dbg !10330
  ret void, !dbg !10331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.161() unnamed_addr #1 !dbg !10332 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10334, metadata !DIExpression()), !dbg !10335
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #27, !dbg !10336
  ret i1 %1, !dbg !10337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10338 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10387, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10388, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10389, metadata !DIExpression()), !dbg !10390
  ret void, !dbg !10391
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10392 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10394, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata i8 %1, metadata !10395, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata i32 %2, metadata !10396, metadata !DIExpression()), !dbg !10399
  %5 = bitcast i32* %4 to i8*, !dbg !10400
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10400
  call void @llvm.dbg.value(metadata i32* %4, metadata !10398, metadata !DIExpression(DW_OP_deref)), !dbg !10399
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #28, !dbg !10401
  call void @llvm.dbg.value(metadata i32 %6, metadata !10397, metadata !DIExpression()), !dbg !10399
  %7 = icmp eq i32 %6, 0, !dbg !10402
  br i1 %7, label %8, label %31, !dbg !10404

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10397, metadata !DIExpression()), !dbg !10399
  %9 = and i32 %2, 131072, !dbg !10405
  %10 = icmp eq i32 %9, 0, !dbg !10407
  br i1 %10, label %28, label %11, !dbg !10408

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10409
  %13 = icmp eq i32 %12, 0, !dbg !10412
  br i1 %13, label %18, label %14, !dbg !10413

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10414
  %16 = shl nuw i32 1, %15, !dbg !10414
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #28, !dbg !10416
  br label %25, !dbg !10417

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10418
  %20 = icmp eq i32 %19, 0, !dbg !10420
  %21 = zext i8 %1 to i32, !dbg !10399
  br i1 %20, label %25, label %22, !dbg !10421

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10422
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #28, !dbg !10424
  br label %25, !dbg !10425

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10426
  %27 = load i32, i32* %4, align 4, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %30, metadata !10398, metadata !DIExpression()), !dbg !10399
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #28, !dbg !10428
  br label %31, !dbg !10429

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10426
  %30 = load i32, i32* %4, align 4, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %30, metadata !10398, metadata !DIExpression()), !dbg !10399
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #28, !dbg !10428
  call void @llvm.dbg.value(metadata i32 0, metadata !10397, metadata !DIExpression()), !dbg !10399
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10430
  ret i32 %6, !dbg !10430
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #7 !dbg !10431 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10435, metadata !DIExpression()), !dbg !10440
  call void @llvm.dbg.value(metadata i32* %1, metadata !10436, metadata !DIExpression()), !dbg !10440
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10441
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10441
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10441
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10437, metadata !DIExpression()), !dbg !10440
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10442
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10442
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10442
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10439, metadata !DIExpression()), !dbg !10440
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #28, !dbg !10443
  store i32 %9, i32* %1, align 4, !dbg !10444
  ret i32 0, !dbg !10445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #19 !dbg !10446 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10448, metadata !DIExpression()), !dbg !10454
  call void @llvm.dbg.value(metadata i32 %1, metadata !10449, metadata !DIExpression()), !dbg !10454
  call void @llvm.dbg.value(metadata i32 %2, metadata !10450, metadata !DIExpression()), !dbg !10454
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10455
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10455
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10455
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10451, metadata !DIExpression()), !dbg !10454
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10456
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10456
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10456
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10452, metadata !DIExpression()), !dbg !10454
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #28, !dbg !10457
  call void @llvm.dbg.value(metadata i32 %10, metadata !10453, metadata !DIExpression()), !dbg !10454
  %11 = xor i32 %1, -1, !dbg !10458
  %12 = and i32 %10, %11, !dbg !10459
  %13 = and i32 %2, %1, !dbg !10460
  %14 = or i32 %12, %13, !dbg !10461
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #28, !dbg !10462
  ret i32 0, !dbg !10463
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #19 !dbg !10464 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10466, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %1, metadata !10467, metadata !DIExpression()), !dbg !10470
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10471
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10471
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10471
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10468, metadata !DIExpression()), !dbg !10470
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10472
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10472
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10472
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10469, metadata !DIExpression()), !dbg !10470
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10473
  store volatile i32 %1, i32* %9, align 4, !dbg !10473
  ret i32 0, !dbg !10474
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #19 !dbg !10475 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10477, metadata !DIExpression()), !dbg !10481
  call void @llvm.dbg.value(metadata i32 %1, metadata !10478, metadata !DIExpression()), !dbg !10481
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10482
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10482
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10482
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10479, metadata !DIExpression()), !dbg !10481
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10483
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10483
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10483
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10480, metadata !DIExpression()), !dbg !10481
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #28, !dbg !10484
  ret i32 0, !dbg !10485
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #19 !dbg !10486 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10488, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.value(metadata i32 %1, metadata !10489, metadata !DIExpression()), !dbg !10492
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10493
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10493
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10493
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10490, metadata !DIExpression()), !dbg !10492
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10494
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10494
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10494
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10491, metadata !DIExpression()), !dbg !10492
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10495
  %10 = load volatile i32, i32* %9, align 4, !dbg !10495
  %11 = xor i32 %10, %1, !dbg !10495
  store volatile i32 %11, i32* %9, align 4, !dbg !10495
  ret i32 0, !dbg !10496
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10497 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10499, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata i8 %1, metadata !10500, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata i32 %2, metadata !10501, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata i32 %3, metadata !10502, metadata !DIExpression()), !dbg !10509
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10510
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10510
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10510
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10503, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata i8* undef, metadata !10504, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata i32 0, metadata !10506, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata i32 0, metadata !10507, metadata !DIExpression()), !dbg !10509
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10511

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10512
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #28, !dbg !10516
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10517
  %12 = load i32, i32* %11, align 4, !dbg !10517
  %13 = icmp eq i32 %10, %12, !dbg !10518
  br i1 %13, label %14, label %29, !dbg !10519

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !10520
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !10522
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !10523
  br label %29, !dbg !10524

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10525
  %17 = load i8*, i8** %16, align 4, !dbg !10525
  call void @llvm.dbg.value(metadata i8* %17, metadata !10504, metadata !DIExpression()), !dbg !10509
  %18 = zext i8 %1 to i32, !dbg !10526
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !10528
  %20 = icmp eq i32 %19, 0, !dbg !10529
  br i1 %20, label %21, label %29, !dbg !10530

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10531
  %23 = load i32, i32* %22, align 4, !dbg !10531
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #28, !dbg !10532
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10533

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10506, metadata !DIExpression()), !dbg !10509
  br label %27, !dbg !10534

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10506, metadata !DIExpression()), !dbg !10509
  br label %27, !dbg !10536

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10506, metadata !DIExpression()), !dbg !10509
  br label %27, !dbg !10537

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10509
  call void @llvm.dbg.value(metadata i32 %28, metadata !10506, metadata !DIExpression()), !dbg !10509
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !10538
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !10539
  br label %29, !dbg !10539

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10509
  call void @llvm.dbg.value(metadata i32 %30, metadata !10507, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.label(metadata !10508), !dbg !10540
  ret i32 %30, !dbg !10541
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10542 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10544, metadata !DIExpression()), !dbg !10548
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10545, metadata !DIExpression()), !dbg !10548
  call void @llvm.dbg.value(metadata i1 %2, metadata !10546, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10548
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10549
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10549
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10549
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10547, metadata !DIExpression()), !dbg !10548
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10550
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #28, !dbg !10551
  ret i32 %8, !dbg !10552
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10553 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10559, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10560, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i1 %2, metadata !10561, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10562
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10563
  br i1 %4, label %5, label %6, !dbg !10566

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32.166, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.167, i32 0, i32 0), i32 noundef 42) #27, !dbg !10567
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33.168, i32 0, i32 0)) #27, !dbg !10567
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.167, i32 0, i32 0), i32 noundef 42) #27, !dbg !10567
  unreachable, !dbg !10567

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10569
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10569
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10569
  br i1 %9, label %10, label %11, !dbg !10572

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.167, i32 0, i32 0), i32 noundef 43) #27, !dbg !10573
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.170, i32 0, i32 0)) #27, !dbg !10573
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.167, i32 0, i32 0), i32 noundef 43) #27, !dbg !10573
  unreachable, !dbg !10573

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #28, !dbg !10575
  br i1 %12, label %18, label %13, !dbg !10577

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10578
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #28, !dbg !10581
  %16 = or i1 %15, %2, !dbg !10582
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10582
  br i1 %2, label %19, label %21, !dbg !10582

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10583

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10584
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #28, !dbg !10587
  br label %21, !dbg !10588

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10562
  ret i32 %22, !dbg !10589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10590 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10594, metadata !DIExpression()), !dbg !10595
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10596
  %3 = icmp eq %struct._snode* %2, null, !dbg !10596
  ret i1 %3, !dbg !10596
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #17 !dbg !10597 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10601, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10602, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10603, metadata !DIExpression()), !dbg !10605
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10606
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10604, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10603, metadata !DIExpression()), !dbg !10605
  %4 = icmp eq %struct._snode* %3, null, !dbg !10608
  br i1 %4, label %15, label %5, !dbg !10606

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10604, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10603, metadata !DIExpression()), !dbg !10605
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10610
  br i1 %6, label %9, label %11, !dbg !10613

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10604, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10603, metadata !DIExpression()), !dbg !10605
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10610
  br i1 %8, label %9, label %11, !dbg !10613, !llvm.loop !10614

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #28, !dbg !10615
  br label %15, !dbg !10615

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10604, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10603, metadata !DIExpression()), !dbg !10605
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #28, !dbg !10608
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10604, metadata !DIExpression()), !dbg !10605
  %14 = icmp eq %struct._snode* %13, null, !dbg !10608
  br i1 %14, label %15, label %7, !dbg !10606, !llvm.loop !10614

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10618 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10622, metadata !DIExpression()), !dbg !10624
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10623, metadata !DIExpression()), !dbg !10624
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10625
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #28, !dbg !10625
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #28, !dbg !10625
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10626
  %5 = icmp eq %struct._snode* %4, null, !dbg !10626
  br i1 %5, label %6, label %8, !dbg !10625

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10628
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #28, !dbg !10628
  br label %8, !dbg !10628

8:                                                ; preds = %6, %2
  ret void, !dbg !10625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10630 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10634, metadata !DIExpression()), !dbg !10635
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10636
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10636
  ret %struct._snode* %3, !dbg !10637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10638 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10642, metadata !DIExpression()), !dbg !10644
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10643, metadata !DIExpression()), !dbg !10644
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10645
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10646
  ret void, !dbg !10647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10648 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10650, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10651, metadata !DIExpression()), !dbg !10652
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10653
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10654
  ret void, !dbg !10655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10656 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10658, metadata !DIExpression()), !dbg !10659
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10660
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10660
  ret %struct._snode* %3, !dbg !10661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10662 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10664, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10665, metadata !DIExpression()), !dbg !10666
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10667
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10668
  ret void, !dbg !10669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #14 !dbg !10670 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10674, metadata !DIExpression()), !dbg !10677
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10675, metadata !DIExpression()), !dbg !10677
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10676, metadata !DIExpression()), !dbg !10677
  %4 = icmp eq %struct._snode* %1, null, !dbg !10678
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #28, !dbg !10680
  br i1 %4, label %6, label %11, !dbg !10681

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #28, !dbg !10682
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10684
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10684
  br i1 %8, label %9, label %15, !dbg !10682

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10686
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #28, !dbg !10686
  br label %15, !dbg !10686

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #28, !dbg !10688
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10690
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10690
  br i1 %13, label %14, label %15, !dbg !10688

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #28, !dbg !10692
  br label %15, !dbg !10692

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #28, !dbg !10681
  ret void, !dbg !10681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #13 !dbg !10694 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10698, metadata !DIExpression()), !dbg !10699
  %2 = icmp eq %struct._snode* %0, null, !dbg !10700
  br i1 %2, label %5, label %3, !dbg !10700

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #28, !dbg !10700
  br label %5, !dbg !10700

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10700
  ret %struct._snode* %6, !dbg !10700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10701 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10703, metadata !DIExpression()), !dbg !10704
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #28, !dbg !10705
  ret %struct._snode* %2, !dbg !10705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10706 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10708, metadata !DIExpression()), !dbg !10709
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10710
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10710
  ret %struct._snode* %3, !dbg !10711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10714, metadata !DIExpression()), !dbg !10717
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #28, !dbg !10718, !range !10719
  call void @llvm.dbg.value(metadata i32 %2, metadata !10715, metadata !DIExpression()), !dbg !10717
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #28, !dbg !10720
  call void @llvm.dbg.value(metadata i32 %3, metadata !10716, metadata !DIExpression()), !dbg !10717
  ret i32 %3, !dbg !10721
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10724, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i8* %1, metadata !10725, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i8* %1, metadata !10726, metadata !DIExpression()), !dbg !10727
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10728
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10728
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10729
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10729
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10729
  %8 = shl nuw i32 1, %0, !dbg !10730
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #28, !dbg !10731
  ret void, !dbg !10732
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10733 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10737, metadata !DIExpression()), !dbg !10743
  call void @llvm.dbg.value(metadata i32 %1, metadata !10738, metadata !DIExpression()), !dbg !10743
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10739, metadata !DIExpression()), !dbg !10743
  %4 = bitcast i64* %3 to i8*, !dbg !10744
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10744
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !10741, metadata !DIExpression()), !dbg !10743
  store i64 4294967328, i64* %3, align 8, !dbg !10745
  call void @llvm.dbg.value(metadata i64* %3, metadata !10741, metadata !DIExpression(DW_OP_deref)), !dbg !10743
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #28, !dbg !10746
  call void @llvm.dbg.value(metadata i32 %5, metadata !10742, metadata !DIExpression()), !dbg !10743
  %6 = icmp eq i32 %5, 0, !dbg !10747
  br i1 %6, label %7, label %8, !dbg !10749

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #28, !dbg !10750
  br label %8, !dbg !10751

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10752
  ret void, !dbg !10752
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10753 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10755, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.value(metadata i8* %0, metadata !10756, metadata !DIExpression()), !dbg !10758
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10759
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10757, metadata !DIExpression()), !dbg !10758
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10760
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10760
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #27, !dbg !10761
  ret i32 %5, !dbg !10762
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10765, metadata !DIExpression()), !dbg !10768
  call void @llvm.dbg.value(metadata i32 %1, metadata !10766, metadata !DIExpression()), !dbg !10768
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #28, !dbg !10769
  call void @llvm.dbg.value(metadata i32 %3, metadata !10767, metadata !DIExpression()), !dbg !10768
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #28, !dbg !10770
  ret void, !dbg !10771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10776, metadata !DIExpression()), !dbg !10777
  %2 = sdiv i32 %0, 4, !dbg !10778
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10779
  %6 = add nsw i32 %5, 16, !dbg !10780
  %7 = shl i32 15, %6, !dbg !10781
  %8 = or i32 %7, %2, !dbg !10782
  ret i32 %8, !dbg !10783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10789, metadata !DIExpression()), !dbg !10791
  call void @llvm.dbg.value(metadata i32 %1, metadata !10790, metadata !DIExpression()), !dbg !10791
  %3 = and i32 %1, 3, !dbg !10792
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !10792
  %5 = load volatile i32, i32* %4, align 4, !dbg !10792
  %6 = lshr i32 %1, 16, !dbg !10792
  %7 = xor i32 %6, -1, !dbg !10792
  %8 = and i32 %5, %7, !dbg !10792
  call void @llvm.dbg.value(metadata i32 %6, metadata !10793, metadata !DIExpression()) #26, !dbg !10797
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !10799, !srcloc !10800
  call void @llvm.dbg.value(metadata i32 %9, metadata !10796, metadata !DIExpression()) #26, !dbg !10797
  call void @llvm.dbg.value(metadata i32 %9, metadata !10801, metadata !DIExpression()) #26, !dbg !10806
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #26, !dbg !10808, !range !5375
  %11 = shl i32 %0, %10, !dbg !10792
  %12 = or i32 %11, %8, !dbg !10792
  store volatile i32 %12, i32* %4, align 4, !dbg !10792
  ret void, !dbg !10809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10810 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10814, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10815, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.value(metadata i32 %2, metadata !10816, metadata !DIExpression()), !dbg !10819
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10820
  %5 = icmp eq %struct._snode* %4, null, !dbg !10820
  br i1 %5, label %24, label %6, !dbg !10820

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #28, !dbg !10822
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10818, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10817, metadata !DIExpression()), !dbg !10819
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10823
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10823
  %12 = load i32, i32* %11, align 4, !dbg !10823
  %13 = and i32 %12, %2, !dbg !10827
  %14 = icmp eq i32 %13, 0, !dbg !10827
  br i1 %14, label %22, label %15, !dbg !10828

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10829
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10829
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10829
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10829
  br i1 %19, label %20, label %21, !dbg !10833

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.167, i32 0, i32 0), i32 noundef 77) #27, !dbg !10834
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.170, i32 0, i32 0)) #27, !dbg !10834
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.167, i32 0, i32 0), i32 noundef 77) #27, !dbg !10834
  unreachable, !dbg !10834

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #27, !dbg !10836
  br label %22, !dbg !10837

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10817, metadata !DIExpression()), !dbg !10819
  %23 = icmp eq %struct._snode* %8, null, !dbg !10838
  br i1 %23, label %24, label %6, !dbg !10838

24:                                               ; preds = %22, %3
  ret void, !dbg !10839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10842, metadata !DIExpression()), !dbg !10843
  %2 = and i32 %0, 3, !dbg !10844
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !10844
  %4 = load volatile i32, i32* %3, align 4, !dbg !10844
  %5 = lshr i32 %0, 16, !dbg !10844
  %6 = and i32 %4, %5, !dbg !10844
  call void @llvm.dbg.value(metadata i32 %5, metadata !10793, metadata !DIExpression()) #26, !dbg !10845
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #31, !dbg !10847, !srcloc !10800
  call void @llvm.dbg.value(metadata i32 %7, metadata !10796, metadata !DIExpression()) #26, !dbg !10845
  call void @llvm.dbg.value(metadata i32 %7, metadata !10801, metadata !DIExpression()) #26, !dbg !10848
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !10850, !range !5375
  %9 = lshr i32 %6, %8, !dbg !10851
  ret i32 %9, !dbg !10852
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #19 !dbg !10853 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10858, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.value(metadata i32 %1, metadata !10859, metadata !DIExpression()), !dbg !10860
  %3 = shl i32 %1, 16, !dbg !10861
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10861
  store volatile i32 %3, i32* %4, align 4, !dbg !10861
  ret void, !dbg !10862
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #7 !dbg !10863 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10867, metadata !DIExpression()), !dbg !10868
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10869
  %3 = load volatile i32, i32* %2, align 4, !dbg !10869
  ret i32 %3, !dbg !10870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #19 !dbg !10871 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10873, metadata !DIExpression()), !dbg !10875
  call void @llvm.dbg.value(metadata i32 %1, metadata !10874, metadata !DIExpression()), !dbg !10875
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10876
  store volatile i32 %1, i32* %3, align 4, !dbg !10876
  ret void, !dbg !10877
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #7 !dbg !10878 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10880, metadata !DIExpression()), !dbg !10881
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10882
  %3 = load volatile i32, i32* %2, align 4, !dbg !10882
  ret i32 %3, !dbg !10883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #14 !dbg !10884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10888, metadata !DIExpression()), !dbg !10890
  call void @llvm.dbg.value(metadata i32* %1, metadata !10889, metadata !DIExpression()), !dbg !10890
  %3 = and i32 %0, 131072, !dbg !10891
  %4 = icmp eq i32 %3, 0, !dbg !10893
  br i1 %4, label %22, label %5, !dbg !10894

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10895
  %6 = and i32 %0, 2, !dbg !10897
  %7 = icmp eq i32 %6, 0, !dbg !10899
  br i1 %7, label %11, label %8, !dbg !10900

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10901
  %10 = icmp eq i32 %9, 0, !dbg !10901
  br i1 %10, label %33, label %11, !dbg !10904

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10905
  store i32 %12, i32* %1, align 4, !dbg !10905
  %13 = and i32 %0, 16, !dbg !10906
  %14 = icmp eq i32 %13, 0, !dbg !10908
  br i1 %14, label %17, label %15, !dbg !10909

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10910
  br label %31, !dbg !10912

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10913
  %19 = icmp eq i32 %18, 0, !dbg !10915
  br i1 %19, label %33, label %20, !dbg !10916

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10917
  br label %31, !dbg !10919

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10920
  %24 = icmp eq i32 %23, 0, !dbg !10922
  br i1 %24, label %31, label %25, !dbg !10923

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10924
  %27 = icmp eq i32 %26, 0, !dbg !10927
  br i1 %27, label %28, label %31, !dbg !10928

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10929
  br label %33, !dbg !10930

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10890
  ret i32 %34, !dbg !10930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10931 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10935, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.value(metadata i32 %1, metadata !10936, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.value(metadata i32 %2, metadata !10937, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.value(metadata i32 %3, metadata !10938, metadata !DIExpression()), !dbg !10946
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10947
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10947
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10947
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10939, metadata !DIExpression()), !dbg !10946
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10948
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10948
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10948
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10940, metadata !DIExpression()), !dbg !10946
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #28, !dbg !10949
  call void @llvm.dbg.value(metadata i32 %11, metadata !10941, metadata !DIExpression()), !dbg !10946
  %12 = and i32 %2, 48, !dbg !10950
  call void @llvm.dbg.value(metadata i32 %12, metadata !10942, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.value(metadata i32 %2, metadata !10943, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10946
  call void @llvm.dbg.value(metadata i32 %2, metadata !10944, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10946
  call void @llvm.dbg.value(metadata i32 %2, metadata !10945, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10946
  %13 = lshr i32 %2, 6, !dbg !10951
  %14 = and i32 %13, 1, !dbg !10951
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #28, !dbg !10952
  %15 = lshr i32 %2, 7, !dbg !10953
  %16 = and i32 %15, 3, !dbg !10953
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #28, !dbg !10954
  %17 = lshr i32 %2, 9, !dbg !10955
  %18 = and i32 %17, 3, !dbg !10955
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #28, !dbg !10956
  %19 = icmp eq i32 %12, 32, !dbg !10957
  br i1 %19, label %20, label %24, !dbg !10959

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10960
  br i1 %21, label %22, label %23, !dbg !10963

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #28, !dbg !10964
  br label %24, !dbg !10966

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #28, !dbg !10967
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10969
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #28, !dbg !10970
  ret void, !dbg !10971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !10972 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10974, metadata !DIExpression()), !dbg !10976
  %2 = shl nuw i32 1, %0, !dbg !10977
  call void @llvm.dbg.value(metadata i32 %2, metadata !10975, metadata !DIExpression()), !dbg !10976
  ret i32 %2, !dbg !10978
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #19 !dbg !10979 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10983, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 %1, metadata !10984, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 %2, metadata !10985, metadata !DIExpression()), !dbg !10986
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10987
  %5 = load volatile i32, i32* %4, align 4, !dbg !10987
  %6 = xor i32 %1, -1, !dbg !10987
  %7 = and i32 %5, %6, !dbg !10987
  %8 = mul i32 %2, %1, !dbg !10987
  %9 = or i32 %7, %8, !dbg !10987
  store volatile i32 %9, i32* %4, align 4, !dbg !10987
  ret void, !dbg !10988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10989 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10991, metadata !DIExpression()), !dbg !10994
  call void @llvm.dbg.value(metadata i32 %1, metadata !10992, metadata !DIExpression()), !dbg !10994
  call void @llvm.dbg.value(metadata i32 %2, metadata !10993, metadata !DIExpression()), !dbg !10994
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10995
  %5 = load volatile i32, i32* %4, align 4, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %1, metadata !10793, metadata !DIExpression()) #26, !dbg !10996
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !10998, !srcloc !10800
  call void @llvm.dbg.value(metadata i32 %6, metadata !10796, metadata !DIExpression()) #26, !dbg !10996
  call void @llvm.dbg.value(metadata i32 %6, metadata !10801, metadata !DIExpression()) #26, !dbg !10999
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11001, !range !5375
  %8 = shl nuw nsw i32 %7, 1, !dbg !10995
  %9 = shl i32 3, %8, !dbg !10995
  %10 = xor i32 %9, -1, !dbg !10995
  %11 = and i32 %5, %10, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %1, metadata !10793, metadata !DIExpression()) #26, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %6, metadata !10796, metadata !DIExpression()) #26, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %6, metadata !10801, metadata !DIExpression()) #26, !dbg !11004
  %12 = shl i32 %2, %8, !dbg !10995
  %13 = or i32 %11, %12, !dbg !10995
  store volatile i32 %13, i32* %4, align 4, !dbg !10995
  ret void, !dbg !11006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11007 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11009, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata i32 %1, metadata !11010, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata i32 %2, metadata !11011, metadata !DIExpression()), !dbg !11012
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11013
  %5 = load volatile i32, i32* %4, align 4, !dbg !11013
  call void @llvm.dbg.value(metadata i32 %1, metadata !10793, metadata !DIExpression()) #26, !dbg !11014
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11016, !srcloc !10800
  call void @llvm.dbg.value(metadata i32 %6, metadata !10796, metadata !DIExpression()) #26, !dbg !11014
  call void @llvm.dbg.value(metadata i32 %6, metadata !10801, metadata !DIExpression()) #26, !dbg !11017
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11019, !range !5375
  %8 = shl nuw nsw i32 %7, 1, !dbg !11013
  %9 = shl i32 3, %8, !dbg !11013
  %10 = xor i32 %9, -1, !dbg !11013
  %11 = and i32 %5, %10, !dbg !11013
  call void @llvm.dbg.value(metadata i32 %1, metadata !10793, metadata !DIExpression()) #26, !dbg !11020
  call void @llvm.dbg.value(metadata i32 %6, metadata !10796, metadata !DIExpression()) #26, !dbg !11020
  call void @llvm.dbg.value(metadata i32 %6, metadata !10801, metadata !DIExpression()) #26, !dbg !11022
  %12 = shl i32 %2, %8, !dbg !11013
  %13 = or i32 %11, %12, !dbg !11013
  store volatile i32 %13, i32* %4, align 4, !dbg !11013
  ret void, !dbg !11024
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11025 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11027, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.value(metadata i32 %1, metadata !11028, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.value(metadata i32 %2, metadata !11029, metadata !DIExpression()), !dbg !11030
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11031
  %5 = load volatile i32, i32* %4, align 4, !dbg !11031
  call void @llvm.dbg.value(metadata i32 %1, metadata !10793, metadata !DIExpression()) #26, !dbg !11032
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11034, !srcloc !10800
  call void @llvm.dbg.value(metadata i32 %6, metadata !10796, metadata !DIExpression()) #26, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %6, metadata !10801, metadata !DIExpression()) #26, !dbg !11035
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11037, !range !5375
  %8 = shl nuw nsw i32 %7, 2, !dbg !11031
  %9 = shl i32 15, %8, !dbg !11031
  %10 = xor i32 %9, -1, !dbg !11031
  %11 = and i32 %5, %10, !dbg !11031
  call void @llvm.dbg.value(metadata i32 %1, metadata !10793, metadata !DIExpression()) #26, !dbg !11038
  call void @llvm.dbg.value(metadata i32 %6, metadata !10796, metadata !DIExpression()) #26, !dbg !11038
  call void @llvm.dbg.value(metadata i32 %6, metadata !10801, metadata !DIExpression()) #26, !dbg !11040
  %12 = shl i32 %2, %8, !dbg !11031
  %13 = or i32 %11, %12, !dbg !11031
  store volatile i32 %13, i32* %4, align 4, !dbg !11031
  ret void, !dbg !11042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11043 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11045, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.value(metadata i32 %1, metadata !11046, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.value(metadata i32 %2, metadata !11047, metadata !DIExpression()), !dbg !11048
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11049
  %5 = load volatile i32, i32* %4, align 4, !dbg !11049
  %6 = lshr i32 %1, 8, !dbg !11049
  call void @llvm.dbg.value(metadata i32 %6, metadata !10793, metadata !DIExpression()) #26, !dbg !11050
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !11052, !srcloc !10800
  call void @llvm.dbg.value(metadata i32 %7, metadata !10796, metadata !DIExpression()) #26, !dbg !11050
  call void @llvm.dbg.value(metadata i32 %7, metadata !10801, metadata !DIExpression()) #26, !dbg !11053
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !11055, !range !5375
  %9 = shl nuw nsw i32 %8, 2, !dbg !11049
  %10 = shl i32 15, %9, !dbg !11049
  %11 = xor i32 %10, -1, !dbg !11049
  %12 = and i32 %5, %11, !dbg !11049
  call void @llvm.dbg.value(metadata i32 %6, metadata !10793, metadata !DIExpression()) #26, !dbg !11056
  call void @llvm.dbg.value(metadata i32 %7, metadata !10796, metadata !DIExpression()) #26, !dbg !11056
  call void @llvm.dbg.value(metadata i32 %7, metadata !10801, metadata !DIExpression()) #26, !dbg !11058
  %13 = shl i32 %2, %9, !dbg !11049
  %14 = or i32 %12, %13, !dbg !11049
  store volatile i32 %14, i32* %4, align 4, !dbg !11049
  ret void, !dbg !11060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11061 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11063, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 %1, metadata !11064, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 %2, metadata !11065, metadata !DIExpression()), !dbg !11066
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11067
  %5 = load volatile i32, i32* %4, align 4, !dbg !11067
  call void @llvm.dbg.value(metadata i32 %1, metadata !10793, metadata !DIExpression()) #26, !dbg !11068
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11070, !srcloc !10800
  call void @llvm.dbg.value(metadata i32 %6, metadata !10796, metadata !DIExpression()) #26, !dbg !11068
  call void @llvm.dbg.value(metadata i32 %6, metadata !10801, metadata !DIExpression()) #26, !dbg !11071
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11073, !range !5375
  %8 = shl nuw nsw i32 %7, 1, !dbg !11067
  %9 = shl i32 3, %8, !dbg !11067
  %10 = xor i32 %9, -1, !dbg !11067
  %11 = and i32 %5, %10, !dbg !11067
  call void @llvm.dbg.value(metadata i32 %1, metadata !10793, metadata !DIExpression()) #26, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %6, metadata !10796, metadata !DIExpression()) #26, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %6, metadata !10801, metadata !DIExpression()) #26, !dbg !11076
  %12 = shl i32 %2, %8, !dbg !11067
  %13 = or i32 %11, %12, !dbg !11067
  store volatile i32 %13, i32* %4, align 4, !dbg !11067
  ret void, !dbg !11078
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11079 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11081, metadata !DIExpression()), !dbg !11084
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11085
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11085
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11085
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11082, metadata !DIExpression()), !dbg !11084
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11086
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11087
  %6 = tail call fastcc zeroext i1 @device_is_ready.180() #28, !dbg !11088
  br i1 %6, label %7, label %11, !dbg !11090

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #28, !dbg !11091
  call void @llvm.dbg.value(metadata i32 %8, metadata !11083, metadata !DIExpression()), !dbg !11084
  %9 = icmp slt i32 %8, 0, !dbg !11092
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11094
  br label %11, !dbg !11094

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11084
  ret i32 %12, !dbg !11095
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.180() unnamed_addr #1 !dbg !11096 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11100, metadata !DIExpression()), !dbg !11101
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11102, !srcloc !11104
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.181() #28, !dbg !11105
  ret i1 %1, !dbg !11106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !11107 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11111, metadata !DIExpression()), !dbg !11116
  call void @llvm.dbg.value(metadata i8 1, metadata !11112, metadata !DIExpression()), !dbg !11116
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11117
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11117
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11117
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11113, metadata !DIExpression()), !dbg !11116
  call void @llvm.dbg.value(metadata i32 0, metadata !11114, metadata !DIExpression()), !dbg !11116
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11115, metadata !DIExpression()), !dbg !11116
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11118
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11121
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #28, !dbg !11122
  call void @llvm.dbg.value(metadata i32 %7, metadata !11114, metadata !DIExpression()), !dbg !11116
  ret i32 %7, !dbg !11123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.181() unnamed_addr #1 !dbg !11124 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11126, metadata !DIExpression()), !dbg !11127
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #27, !dbg !11128
  ret i1 %1, !dbg !11129
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11130 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11134, metadata !DIExpression()), !dbg !11142
  call void @llvm.dbg.value(metadata i32 %1, metadata !11135, metadata !DIExpression()), !dbg !11142
  call void @llvm.dbg.value(metadata i32 %2, metadata !11136, metadata !DIExpression()), !dbg !11142
  call void @llvm.dbg.value(metadata i32 %3, metadata !11137, metadata !DIExpression()), !dbg !11142
  call void @llvm.dbg.value(metadata i32 0, metadata !11138, metadata !DIExpression()), !dbg !11142
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #28, !dbg !11143
  %5 = icmp eq i32 %3, 17, !dbg !11144
  br i1 %5, label %6, label %14, !dbg !11145

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11146
  call void @llvm.dbg.value(metadata i32 %7, metadata !11139, metadata !DIExpression()), !dbg !11147
  %8 = icmp eq i32 %7, 0, !dbg !11148
  %9 = shl nuw i32 1, %1, !dbg !11150
  br i1 %8, label %12, label %10, !dbg !11151

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #28, !dbg !11152
  br label %14, !dbg !11154

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #28, !dbg !11155
  br label %14, !dbg !11158

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11159
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #18 !dbg !11160 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11162, metadata !DIExpression()), !dbg !11166
  call void @llvm.dbg.value(metadata i8* %1, metadata !11163, metadata !DIExpression()), !dbg !11166
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11167
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11167
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11167
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11164, metadata !DIExpression()), !dbg !11166
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11168
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11168
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #28, !dbg !11170
  %9 = icmp eq i32 %8, 0, !dbg !11170
  br i1 %9, label %12, label %10, !dbg !11171

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11172
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #28, !dbg !11174
  br label %12, !dbg !11175

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11176
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #28, !dbg !11178
  %15 = icmp eq i32 %14, 0, !dbg !11178
  br i1 %15, label %19, label %16, !dbg !11179

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11180
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #28, !dbg !11181
  store i8 %18, i8* %1, align 1, !dbg !11182
  br label %19, !dbg !11183

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11166
  ret i32 %20, !dbg !11184
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11185 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11187, metadata !DIExpression()), !dbg !11191
  call void @llvm.dbg.value(metadata i8 %1, metadata !11188, metadata !DIExpression()), !dbg !11191
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11192
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11192
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11192
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11189, metadata !DIExpression()), !dbg !11191
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11193

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11194
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #28, !dbg !11197
  %10 = icmp eq i32 %9, 0, !dbg !11197
  br i1 %10, label %18, label %11, !dbg !11198

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !11199, !srcloc !11206
  call void @llvm.dbg.value(metadata i32 undef, metadata !11202, metadata !DIExpression()) #26, !dbg !11207
  call void @llvm.dbg.value(metadata i32 undef, metadata !11203, metadata !DIExpression()) #26, !dbg !11207
  call void @llvm.dbg.value(metadata i32 undef, metadata !11190, metadata !DIExpression()), !dbg !11191
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11208
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #28, !dbg !11210
  %15 = icmp eq i32 %14, 0, !dbg !11210
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11199
  br i1 %15, label %17, label %19, !dbg !11211

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11202, metadata !DIExpression()) #26, !dbg !11207
  call void @llvm.dbg.value(metadata i32 %16, metadata !11190, metadata !DIExpression()), !dbg !11191
  call void @llvm.dbg.value(metadata i32 undef, metadata !11212, metadata !DIExpression()) #26, !dbg !11215
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !11217, !srcloc !11218
  br label %18, !dbg !11219

18:                                               ; preds = %17, %7
  br label %7, !dbg !11194, !llvm.loop !11220

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11199
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11222
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #28, !dbg !11223
  call void @llvm.dbg.value(metadata i32 %20, metadata !11212, metadata !DIExpression()) #26, !dbg !11224
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !11226, !srcloc !11218
  ret void, !dbg !11227
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #18 !dbg !11228 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11230, metadata !DIExpression()), !dbg !11233
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11234
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11234
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11234
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11231, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.value(metadata i32 0, metadata !11232, metadata !DIExpression()), !dbg !11233
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11235
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11235
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #28, !dbg !11237
  %8 = icmp ne i32 %7, 0, !dbg !11237
  %9 = zext i1 %8 to i32, !dbg !11238
  call void @llvm.dbg.value(metadata i32 %9, metadata !11232, metadata !DIExpression()), !dbg !11233
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11239
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #28, !dbg !11241
  %12 = icmp eq i32 %11, 0, !dbg !11241
  %13 = or i32 %9, 2, !dbg !11242
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11242
  call void @llvm.dbg.value(metadata i32 %14, metadata !11232, metadata !DIExpression()), !dbg !11233
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11243
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #28, !dbg !11245
  %17 = icmp eq i32 %16, 0, !dbg !11245
  %18 = or i32 %14, 4, !dbg !11246
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11246
  call void @llvm.dbg.value(metadata i32 %19, metadata !11232, metadata !DIExpression()), !dbg !11233
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11247
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #28, !dbg !11249
  %22 = icmp eq i32 %21, 0, !dbg !11249
  %23 = or i32 %19, 8, !dbg !11250
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11250
  call void @llvm.dbg.value(metadata i32 %24, metadata !11232, metadata !DIExpression()), !dbg !11233
  %25 = and i32 %24, 8, !dbg !11251
  %26 = icmp eq i32 %25, 0, !dbg !11251
  br i1 %26, label %29, label %27, !dbg !11253

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11254
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #28, !dbg !11256
  br label %29, !dbg !11257

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11258
  %31 = icmp eq i32 %30, 0, !dbg !11258
  br i1 %31, label %34, label %32, !dbg !11260

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11261
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #28, !dbg !11263
  br label %34, !dbg !11264

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11265
  %36 = icmp eq i32 %35, 0, !dbg !11265
  br i1 %36, label %39, label %37, !dbg !11267

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11268
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #28, !dbg !11270
  br label %39, !dbg !11271

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11272
  %41 = icmp eq i32 %40, 0, !dbg !11272
  br i1 %41, label %44, label %42, !dbg !11274

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11275
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #28, !dbg !11277
  br label %44, !dbg !11278

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11279
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #28, !dbg !11280
  ret i32 %24, !dbg !11281
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11282 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11284, metadata !DIExpression()), !dbg !11293
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11285, metadata !DIExpression()), !dbg !11293
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11294
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11294
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11294
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11286, metadata !DIExpression()), !dbg !11293
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11295
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11295
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11295
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11287, metadata !DIExpression()), !dbg !11293
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11296
  %10 = load i8, i8* %9, align 4, !dbg !11296
  %11 = zext i8 %10 to i32, !dbg !11297
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #28, !dbg !11298
  call void @llvm.dbg.value(metadata i32 %12, metadata !11289, metadata !DIExpression()), !dbg !11293
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11299
  %14 = load i8, i8* %13, align 1, !dbg !11299
  %15 = zext i8 %14 to i32, !dbg !11300
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #28, !dbg !11301
  call void @llvm.dbg.value(metadata i32 %16, metadata !11290, metadata !DIExpression()), !dbg !11293
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11302
  %18 = load i8, i8* %17, align 2, !dbg !11302
  %19 = zext i8 %18 to i32, !dbg !11303
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #28, !dbg !11304
  call void @llvm.dbg.value(metadata i32 %20, metadata !11291, metadata !DIExpression()), !dbg !11293
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11305
  %22 = load i8, i8* %21, align 1, !dbg !11305
  %23 = zext i8 %22 to i32, !dbg !11306
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #28, !dbg !11307
  call void @llvm.dbg.value(metadata i32 %24, metadata !11292, metadata !DIExpression()), !dbg !11293
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11308

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11310
  br i1 %26, label %69, label %27, !dbg !11312

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11313

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11314
  br i1 %29, label %65, label %30, !dbg !11314

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11316
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11293
  br i1 %31, label %38, label %34, !dbg !11318

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11319
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !11319

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11322
  br i1 %37, label %38, label %69, !dbg !11323

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11324
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #28, !dbg !11325
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #28, !dbg !11326
  %41 = icmp eq i32 %12, %40, !dbg !11328
  br i1 %41, label %43, label %42, !dbg !11329

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #28, !dbg !11330
  br label %43, !dbg !11332

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #28, !dbg !11333
  %45 = icmp eq i32 %16, %44, !dbg !11335
  br i1 %45, label %47, label %46, !dbg !11336

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #28, !dbg !11337
  br label %47, !dbg !11339

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #28, !dbg !11340
  %49 = icmp eq i32 %20, %48, !dbg !11342
  br i1 %49, label %51, label %50, !dbg !11343

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #28, !dbg !11344
  br label %51, !dbg !11346

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #28, !dbg !11347
  %53 = icmp eq i32 %24, %52, !dbg !11349
  br i1 %53, label %55, label %54, !dbg !11350

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #28, !dbg !11351
  br label %55, !dbg !11353

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11354
  %57 = load i32, i32* %56, align 4, !dbg !11354
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11356
  %59 = load i32, i32* %58, align 4, !dbg !11356
  %60 = icmp eq i32 %57, %59, !dbg !11357
  br i1 %60, label %63, label %61, !dbg !11358

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #28, !dbg !11359
  %62 = load i32, i32* %56, align 4, !dbg !11361
  store i32 %62, i32* %58, align 4, !dbg !11362
  br label %63, !dbg !11363

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11364
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #28, !dbg !11365
  br label %69, !dbg !11366

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11314
  %67 = and i8 %66, 1, !dbg !11314
  %68 = icmp eq i8 %67, 0, !dbg !11314
  br i1 %68, label %30, label %69, !dbg !11314

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11293
  ret i32 %70, !dbg !11367
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !11368 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11370, metadata !DIExpression()), !dbg !11373
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11371, metadata !DIExpression()), !dbg !11373
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11374
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11374
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11374
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11372, metadata !DIExpression()), !dbg !11373
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11375
  %7 = load i32, i32* %6, align 4, !dbg !11375
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11376
  store i32 %7, i32* %8, align 4, !dbg !11377
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #28, !dbg !11378, !range !11379
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #28, !dbg !11380
  %11 = trunc i32 %10 to i8, !dbg !11380
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11381
  store i8 %11, i8* %12, align 4, !dbg !11382
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #28, !dbg !11383, !range !11384
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #28, !dbg !11385
  %15 = trunc i32 %14 to i8, !dbg !11385
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11386
  store i8 %15, i8* %16, align 1, !dbg !11387
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #28, !dbg !11388
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #28, !dbg !11389, !range !11379
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #28, !dbg !11390
  %20 = trunc i32 %19 to i8, !dbg !11390
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11391
  store i8 %20, i8* %21, align 2, !dbg !11392
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #28, !dbg !11393, !range !11394
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #28, !dbg !11395
  %24 = trunc i32 %23 to i8, !dbg !11395
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11396
  store i8 %24, i8* %25, align 1, !dbg !11397
  ret i32 0, !dbg !11398
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11399 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11403, metadata !DIExpression()), !dbg !11405
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11406
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11406
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11406
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11404, metadata !DIExpression()), !dbg !11405
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11407
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11407
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #28, !dbg !11408
  ret i32 %7, !dbg !11409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11414, metadata !DIExpression()), !dbg !11415
  %2 = icmp eq i32 %0, 1024, !dbg !11416
  %3 = select i1 %2, i32 2, i32 0, !dbg !11416
  %4 = icmp eq i32 %0, 1536, !dbg !11416
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11416
  ret i32 %5, !dbg !11417
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11418 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11420, metadata !DIExpression()), !dbg !11422
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11423
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11423
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11423
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11421, metadata !DIExpression()), !dbg !11422
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11424
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11424
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #28, !dbg !11425
  ret i32 %7, !dbg !11426
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #6 !dbg !11427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11431, metadata !DIExpression()), !dbg !11432
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11433
  %3 = icmp ult i32 %2, 4, !dbg !11433
  br i1 %3, label %4, label %7, !dbg !11433

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11433
  %6 = load i32, i32* %5, align 4, !dbg !11433
  br label %7, !dbg !11433

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11434
  ret i32 %8, !dbg !11436
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11437 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11439, metadata !DIExpression()), !dbg !11441
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11442
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11442
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11442
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11440, metadata !DIExpression()), !dbg !11441
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11443
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11443
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #28, !dbg !11444
  ret i32 %7, !dbg !11445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11450, metadata !DIExpression()), !dbg !11452
  call void @llvm.dbg.value(metadata i32 %1, metadata !11451, metadata !DIExpression()), !dbg !11452
  %3 = icmp eq i32 %0, 4096, !dbg !11453
  %4 = icmp eq i32 %1, 0, !dbg !11453
  %5 = select i1 %4, i32 4, i32 3, !dbg !11453
  %6 = select i1 %4, i32 3, i32 2, !dbg !11453
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11453
  ret i32 %7, !dbg !11454
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11455 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11457, metadata !DIExpression()), !dbg !11459
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11460
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11460
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11460
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11458, metadata !DIExpression()), !dbg !11459
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11461
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11461
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #28, !dbg !11462
  ret i32 %7, !dbg !11463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11468, metadata !DIExpression()), !dbg !11469
  %2 = icmp eq i32 %0, 768, !dbg !11470
  %3 = zext i1 %2 to i32, !dbg !11469
  ret i32 %3, !dbg !11472
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11473 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11478, metadata !DIExpression()), !dbg !11479
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11480
  %3 = load volatile i32, i32* %2, align 4, !dbg !11480
  %4 = and i32 %3, 768, !dbg !11480
  ret i32 %4, !dbg !11481
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11482 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11484, metadata !DIExpression()), !dbg !11485
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11486
  %3 = load volatile i32, i32* %2, align 4, !dbg !11486
  %4 = and i32 %3, 4096, !dbg !11486
  ret i32 %4, !dbg !11487
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11488 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11490, metadata !DIExpression()), !dbg !11491
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11492
  %3 = load volatile i32, i32* %2, align 4, !dbg !11492
  %4 = and i32 %3, 12288, !dbg !11492
  ret i32 %4, !dbg !11493
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11494 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11496, metadata !DIExpression()), !dbg !11497
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11498
  %3 = load volatile i32, i32* %2, align 4, !dbg !11498
  %4 = and i32 %3, 1536, !dbg !11498
  ret i32 %4, !dbg !11499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11504, metadata !DIExpression()), !dbg !11505
  %2 = icmp eq i32 %0, 2, !dbg !11506
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11506
  %4 = icmp eq i32 %0, 1, !dbg !11506
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11506
  ret i32 %5, !dbg !11507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11508 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11512, metadata !DIExpression()), !dbg !11513
  %2 = icmp ult i32 %0, 3, !dbg !11514
  br i1 %2, label %3, label %6, !dbg !11514

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11514
  %5 = load i32, i32* %4, align 4, !dbg !11514
  br label %6, !dbg !11514

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11515
  ret i32 %7, !dbg !11517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11522, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i32 %1, metadata !11523, metadata !DIExpression()), !dbg !11524
  %3 = icmp eq i32 %0, 4, !dbg !11525
  %4 = icmp eq i32 %1, 0, !dbg !11525
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11525
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11525
  ret i32 %6, !dbg !11526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11531, metadata !DIExpression()), !dbg !11532
  %2 = icmp eq i32 %0, 1, !dbg !11533
  %3 = select i1 %2, i32 768, i32 0, !dbg !11532
  ret i32 %3, !dbg !11535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11536 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11540, metadata !DIExpression()), !dbg !11541
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11542
  %3 = load volatile i32, i32* %2, align 4, !dbg !11542
  %4 = and i32 %3, -8193, !dbg !11542
  store volatile i32 %4, i32* %2, align 4, !dbg !11542
  ret void, !dbg !11543
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #19 !dbg !11544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11548, metadata !DIExpression()), !dbg !11551
  call void @llvm.dbg.value(metadata i32 %1, metadata !11549, metadata !DIExpression()), !dbg !11551
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11552
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11552
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11552
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11550, metadata !DIExpression()), !dbg !11551
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11553
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11553
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11554
  ret void, !dbg !11555
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #19 !dbg !11556 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11558, metadata !DIExpression()), !dbg !11561
  call void @llvm.dbg.value(metadata i32 %1, metadata !11559, metadata !DIExpression()), !dbg !11561
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11562
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11562
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11562
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11560, metadata !DIExpression()), !dbg !11561
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11563
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11563
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11564
  ret void, !dbg !11565
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #19 !dbg !11566 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11568, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i32 %1, metadata !11569, metadata !DIExpression()), !dbg !11571
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11572
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11572
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11572
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11570, metadata !DIExpression()), !dbg !11571
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11573
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11573
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11574
  ret void, !dbg !11575
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #19 !dbg !11576 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11578, metadata !DIExpression()), !dbg !11581
  call void @llvm.dbg.value(metadata i32 %1, metadata !11579, metadata !DIExpression()), !dbg !11581
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11582
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11582
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11582
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11580, metadata !DIExpression()), !dbg !11581
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11583
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11583
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11584
  ret void, !dbg !11585
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11586 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11588, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.value(metadata i32 %1, metadata !11589, metadata !DIExpression()), !dbg !11593
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11594
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11594
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11594
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11590, metadata !DIExpression()), !dbg !11593
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11595
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11595
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11595
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11591, metadata !DIExpression()), !dbg !11593
  %10 = bitcast i32* %3 to i8*, !dbg !11596
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11596
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11597
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11597
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11601
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11601
  %15 = load i8*, i8** %14, align 4, !dbg !11601
  call void @llvm.dbg.value(metadata i32* %3, metadata !11592, metadata !DIExpression(DW_OP_deref)), !dbg !11593
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #28, !dbg !11602
  %17 = icmp slt i32 %16, 0, !dbg !11603
  br i1 %17, label %18, label %21, !dbg !11604

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #28, !dbg !11605
  %20 = zext i8 %19 to i32, !dbg !11605
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.185, i32 0, i32 0), i32 noundef %20) #27, !dbg !11605
  br label %31, !dbg !11611

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11612
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11612
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #28, !dbg !11613
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11614
  %25 = load i32, i32* %3, align 4, !dbg !11615
  call void @llvm.dbg.value(metadata i32 %25, metadata !11592, metadata !DIExpression()), !dbg !11593
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #28, !dbg !11616
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11617
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11617
  %28 = load volatile i32, i32* %27, align 4, !dbg !11617
  %29 = icmp ugt i32 %28, 16, !dbg !11617
  br i1 %29, label %31, label %30, !dbg !11620

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.188, i32 0, i32 0), i32 noundef 190) #27, !dbg !11621
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.189, i32 0, i32 0)) #27, !dbg !11621
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.188, i32 0, i32 0), i32 noundef 190) #27, !dbg !11621
  unreachable, !dbg !11621

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11623
  ret void, !dbg !11623
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11624 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11626, metadata !DIExpression()), !dbg !11627
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11628
  %3 = load volatile i32, i32* %2, align 4, !dbg !11628
  %4 = or i32 %3, 8192, !dbg !11628
  store volatile i32 %4, i32* %2, align 4, !dbg !11628
  ret void, !dbg !11629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11630 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11632, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata i8* %1, metadata !11633, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata i32* %2, metadata !11634, metadata !DIExpression()), !dbg !11636
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11637
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11637
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11637
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11635, metadata !DIExpression()), !dbg !11636
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11638
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11638
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11640
  br i1 %9, label %12, label %10, !dbg !11641

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !11642
  br label %12, !dbg !11643

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11636
  ret i32 %13, !dbg !11644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef %0) unnamed_addr #5 !dbg !11645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11647, metadata !DIExpression()), !dbg !11648
  %2 = icmp eq i32 %0, 2, !dbg !11649
  %3 = select i1 %2, i8 87, i8 63, !dbg !11649
  %4 = icmp eq i32 %0, 1, !dbg !11649
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11649
  ret i8 %5, !dbg !11650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11651 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11655, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.value(metadata i32 0, metadata !11656, metadata !DIExpression()), !dbg !11657
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11658
  %3 = load volatile i32, i32* %2, align 4, !dbg !11658
  %4 = and i32 %3, -32769, !dbg !11658
  store volatile i32 %4, i32* %2, align 4, !dbg !11658
  ret void, !dbg !11659
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #19 !dbg !11660 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11664, metadata !DIExpression()), !dbg !11668
  call void @llvm.dbg.value(metadata i32 %1, metadata !11665, metadata !DIExpression()), !dbg !11668
  call void @llvm.dbg.value(metadata i32 0, metadata !11666, metadata !DIExpression()), !dbg !11668
  call void @llvm.dbg.value(metadata i32 %2, metadata !11667, metadata !DIExpression()), !dbg !11668
  %4 = mul i32 %1, 25, !dbg !11669
  %5 = shl i32 %2, 2, !dbg !11669
  %6 = udiv i32 %4, %5, !dbg !11669
  %7 = udiv i32 %6, 100, !dbg !11669
  %8 = shl nuw nsw i32 %7, 4, !dbg !11669
  %9 = mul i32 %7, -100, !dbg !11669
  %10 = add i32 %9, %6, !dbg !11669
  %11 = shl i32 %10, 4, !dbg !11669
  %12 = add i32 %11, 50, !dbg !11669
  %13 = udiv i32 %12, 100, !dbg !11669
  %14 = and i32 %13, 240, !dbg !11669
  %15 = add nuw nsw i32 %14, %8, !dbg !11669
  %16 = and i32 %13, 15, !dbg !11669
  %17 = and i32 %15, 65520, !dbg !11672
  %18 = or i32 %17, %16, !dbg !11672
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11673
  store volatile i32 %18, i32* %19, align 4, !dbg !11674
  ret void, !dbg !11675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #19 !dbg !11676 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11678, metadata !DIExpression()), !dbg !11680
  call void @llvm.dbg.value(metadata i32 %1, metadata !11679, metadata !DIExpression()), !dbg !11680
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11681
  %4 = load volatile i32, i32* %3, align 4, !dbg !11681
  %5 = and i32 %4, -769, !dbg !11681
  %6 = or i32 %5, %1, !dbg !11681
  store volatile i32 %6, i32* %3, align 4, !dbg !11681
  ret void, !dbg !11682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #19 !dbg !11683 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11685, metadata !DIExpression()), !dbg !11687
  call void @llvm.dbg.value(metadata i32 %1, metadata !11686, metadata !DIExpression()), !dbg !11687
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11688
  %4 = load volatile i32, i32* %3, align 4, !dbg !11688
  %5 = and i32 %4, -4097, !dbg !11688
  %6 = or i32 %5, %1, !dbg !11688
  store volatile i32 %6, i32* %3, align 4, !dbg !11688
  ret void, !dbg !11689
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #19 !dbg !11690 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11692, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata i32 %1, metadata !11693, metadata !DIExpression()), !dbg !11694
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11695
  %4 = load volatile i32, i32* %3, align 4, !dbg !11695
  %5 = and i32 %4, -12289, !dbg !11695
  %6 = or i32 %5, %1, !dbg !11695
  store volatile i32 %6, i32* %3, align 4, !dbg !11695
  ret void, !dbg !11696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #19 !dbg !11697 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11699, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %1, metadata !11700, metadata !DIExpression()), !dbg !11701
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11702
  %4 = load volatile i32, i32* %3, align 4, !dbg !11702
  %5 = and i32 %4, -1537, !dbg !11702
  %6 = or i32 %5, %1, !dbg !11702
  store volatile i32 %6, i32* %3, align 4, !dbg !11702
  ret void, !dbg !11703
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11704 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11706, metadata !DIExpression()), !dbg !11707
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11708
  %3 = load volatile i32, i32* %2, align 4, !dbg !11708
  %4 = lshr i32 %3, 3, !dbg !11709
  %5 = and i32 %4, 1, !dbg !11709
  ret i32 %5, !dbg !11710
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11711 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11713, metadata !DIExpression()), !dbg !11714
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11715
  %3 = load volatile i32, i32* %2, align 4, !dbg !11715
  %4 = and i32 %3, 1, !dbg !11715
  ret i32 %4, !dbg !11716
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11717 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11719, metadata !DIExpression()), !dbg !11720
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11721
  %3 = load volatile i32, i32* %2, align 4, !dbg !11721
  %4 = lshr i32 %3, 1, !dbg !11722
  %5 = and i32 %4, 1, !dbg !11722
  ret i32 %5, !dbg !11723
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11724 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11726, metadata !DIExpression()), !dbg !11727
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11728
  %3 = load volatile i32, i32* %2, align 4, !dbg !11728
  %4 = lshr i32 %3, 8, !dbg !11729
  %5 = and i32 %4, 1, !dbg !11729
  ret i32 %5, !dbg !11730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11731 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11733, metadata !DIExpression()), !dbg !11734
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11735
  store volatile i32 -257, i32* %2, align 4, !dbg !11735
  ret void, !dbg !11736
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11737 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11739, metadata !DIExpression()), !dbg !11741
  %3 = bitcast i32* %2 to i8*, !dbg !11742
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11742
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11740, metadata !DIExpression()), !dbg !11743
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11744
  %5 = load volatile i32, i32* %4, align 4, !dbg !11744
  store volatile i32 %5, i32* %2, align 4, !dbg !11745
  %6 = load volatile i32, i32* %2, align 4, !dbg !11746
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11747
  %8 = load volatile i32, i32* %7, align 4, !dbg !11747
  store volatile i32 %8, i32* %2, align 4, !dbg !11748
  %9 = load volatile i32, i32* %2, align 4, !dbg !11749
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11750
  ret void, !dbg !11750
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11751 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11753, metadata !DIExpression()), !dbg !11755
  %3 = bitcast i32* %2 to i8*, !dbg !11756
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11756
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11754, metadata !DIExpression()), !dbg !11757
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11758
  %5 = load volatile i32, i32* %4, align 4, !dbg !11758
  store volatile i32 %5, i32* %2, align 4, !dbg !11759
  %6 = load volatile i32, i32* %2, align 4, !dbg !11760
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11761
  %8 = load volatile i32, i32* %7, align 4, !dbg !11761
  store volatile i32 %8, i32* %2, align 4, !dbg !11762
  %9 = load volatile i32, i32* %2, align 4, !dbg !11763
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11764
  ret void, !dbg !11764
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11765 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11767, metadata !DIExpression()), !dbg !11769
  %3 = bitcast i32* %2 to i8*, !dbg !11770
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11770
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11768, metadata !DIExpression()), !dbg !11771
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11772
  %5 = load volatile i32, i32* %4, align 4, !dbg !11772
  store volatile i32 %5, i32* %2, align 4, !dbg !11773
  %6 = load volatile i32, i32* %2, align 4, !dbg !11774
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11775
  %8 = load volatile i32, i32* %7, align 4, !dbg !11775
  store volatile i32 %8, i32* %2, align 4, !dbg !11776
  %9 = load volatile i32, i32* %2, align 4, !dbg !11777
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11778
  ret void, !dbg !11778
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11779 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11781, metadata !DIExpression()), !dbg !11783
  %3 = bitcast i32* %2 to i8*, !dbg !11784
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11784
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11782, metadata !DIExpression()), !dbg !11785
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11786
  %5 = load volatile i32, i32* %4, align 4, !dbg !11786
  store volatile i32 %5, i32* %2, align 4, !dbg !11787
  %6 = load volatile i32, i32* %2, align 4, !dbg !11788
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11789
  %8 = load volatile i32, i32* %7, align 4, !dbg !11789
  store volatile i32 %8, i32* %2, align 4, !dbg !11790
  %9 = load volatile i32, i32* %2, align 4, !dbg !11791
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11792
  ret void, !dbg !11792
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11793 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11795, metadata !DIExpression()), !dbg !11796
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11797
  %3 = load volatile i32, i32* %2, align 4, !dbg !11797
  %4 = lshr i32 %3, 7, !dbg !11798
  %5 = and i32 %4, 1, !dbg !11798
  ret i32 %5, !dbg !11799
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #19 !dbg !11800 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11804, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i8 %1, metadata !11805, metadata !DIExpression()), !dbg !11806
  %3 = zext i8 %1 to i32, !dbg !11807
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11808
  store volatile i32 %3, i32* %4, align 4, !dbg !11809
  ret void, !dbg !11810
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11811 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11813, metadata !DIExpression()), !dbg !11814
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11815
  %3 = load volatile i32, i32* %2, align 4, !dbg !11815
  %4 = lshr i32 %3, 5, !dbg !11816
  %5 = and i32 %4, 1, !dbg !11816
  ret i32 %5, !dbg !11817
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11818 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11822, metadata !DIExpression()), !dbg !11823
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11824
  %3 = load volatile i32, i32* %2, align 4, !dbg !11824
  %4 = trunc i32 %3 to i8, !dbg !11825
  ret i8 %4, !dbg !11826
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11827 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11829, metadata !DIExpression()), !dbg !11835
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11836
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11836
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11836
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11830, metadata !DIExpression()), !dbg !11835
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11837
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11837
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11837
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11831, metadata !DIExpression()), !dbg !11835
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #28, !dbg !11838
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11839
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11839
  %10 = tail call fastcc zeroext i1 @device_is_ready.194(%struct.device* noundef %9) #28, !dbg !11841
  br i1 %10, label %14, label %11, !dbg !11842

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #28, !dbg !11843
  %13 = zext i8 %12 to i32, !dbg !11843
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.195, i32 0, i32 0), i32 noundef %13) #27, !dbg !11843
  br label %62, !dbg !11849

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11850
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11851
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11851
  %18 = load i8*, i8** %17, align 4, !dbg !11851
  %19 = tail call fastcc i32 @clock_control_on.196(%struct.device* noundef %15, i8* noundef %18) #28, !dbg !11852
  call void @llvm.dbg.value(metadata i32 %19, metadata !11834, metadata !DIExpression()), !dbg !11835
  %20 = icmp eq i32 %19, 0, !dbg !11853
  br i1 %20, label %24, label %21, !dbg !11855

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #28, !dbg !11856
  %23 = zext i8 %22 to i32, !dbg !11856
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9.197, i32 0, i32 0), i32 noundef %23) #27, !dbg !11856
  br label %62, !dbg !11862

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11863
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11863
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #28, !dbg !11864
  call void @llvm.dbg.value(metadata i32 %27, metadata !11834, metadata !DIExpression()), !dbg !11835
  %28 = icmp slt i32 %27, 0, !dbg !11865
  br i1 %28, label %62, label %29, !dbg !11867

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11868
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11868
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #28, !dbg !11869
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11870
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #28, !dbg !11871
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11872
  %34 = load i32, i32* %33, align 4, !dbg !11872
  %35 = icmp ult i32 %34, 3, !dbg !11874
  br i1 %35, label %39, label %36, !dbg !11874

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 2) #28, !dbg !11875
  %38 = zext i8 %37 to i32, !dbg !11875
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10.198, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !11875
  call void @llvm.dbg.value(metadata i32 0, metadata !11832, metadata !DIExpression()), !dbg !11835
  call void @llvm.dbg.value(metadata i32 0, metadata !11833, metadata !DIExpression()), !dbg !11835
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11874
  %41 = load i32, i32* %40, align 4, !dbg !11874
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.11, i32 0, i32 %34, !dbg !11874
  %43 = load i32, i32* %42, align 4, !dbg !11874
  br label %44, !dbg !11874

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11884
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11884
  call void @llvm.dbg.value(metadata i32 %46, metadata !11833, metadata !DIExpression()), !dbg !11835
  call void @llvm.dbg.value(metadata i32 %45, metadata !11832, metadata !DIExpression()), !dbg !11835
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11885
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #28, !dbg !11886
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11887
  %49 = load i8, i8* %48, align 4, !dbg !11887, !range !8087
  %50 = icmp eq i8 %49, 0, !dbg !11887
  br i1 %50, label %52, label %51, !dbg !11889

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #28, !dbg !11890
  br label %52, !dbg !11892

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11893
  %54 = load i32, i32* %53, align 4, !dbg !11893
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #28, !dbg !11894
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11895
  %56 = load i8, i8* %55, align 4, !dbg !11895, !range !8087
  %57 = icmp eq i8 %56, 0, !dbg !11895
  br i1 %57, label %60, label %58, !dbg !11897

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11898
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #28, !dbg !11900
  br label %60, !dbg !11901

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11902
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #28, !dbg !11903
  br label %62, !dbg !11904

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11835
  ret i32 %63, !dbg !11905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !11906 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11910, metadata !DIExpression()), !dbg !11914
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11915
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11915
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11915
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11911, metadata !DIExpression()), !dbg !11914
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11912, metadata !DIExpression()), !dbg !11914
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11916
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11917
  ret void, !dbg !11918
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.194(%struct.device* noundef %0) unnamed_addr #1 !dbg !11919 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11923, metadata !DIExpression()), !dbg !11924
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11925, !srcloc !11927
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.199(%struct.device* noundef %0) #28, !dbg !11928
  ret i1 %2, !dbg !11929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.196(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11930 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11932, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.value(metadata i8* %1, metadata !11933, metadata !DIExpression()), !dbg !11935
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11936
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11936
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11936
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11934, metadata !DIExpression()), !dbg !11935
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11937
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11937
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !11938
  ret i32 %8, !dbg !11939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11940 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11944, metadata !DIExpression()), !dbg !11948
  call void @llvm.dbg.value(metadata i8 0, metadata !11945, metadata !DIExpression()), !dbg !11948
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11949
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !11949
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11947, metadata !DIExpression(DW_OP_deref)), !dbg !11948
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !11950
  call void @llvm.dbg.value(metadata i32 %4, metadata !11946, metadata !DIExpression()), !dbg !11948
  %5 = icmp slt i32 %4, 0, !dbg !11951
  br i1 %5, label %9, label %6, !dbg !11953

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11954
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11947, metadata !DIExpression()), !dbg !11948
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #28, !dbg !11955
  br label %9, !dbg !11956

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11948
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !11957
  ret i32 %10, !dbg !11957
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11958 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11960, metadata !DIExpression()), !dbg !11962
  call void @llvm.dbg.value(metadata i32 12, metadata !11961, metadata !DIExpression()), !dbg !11962
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11963
  %3 = load volatile i32, i32* %2, align 4, !dbg !11963
  %4 = or i32 %3, 12, !dbg !11963
  store volatile i32 %4, i32* %2, align 4, !dbg !11963
  ret void, !dbg !11964
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #19 !dbg !11965 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11967, metadata !DIExpression()), !dbg !11971
  call void @llvm.dbg.value(metadata i32 %1, metadata !11968, metadata !DIExpression()), !dbg !11971
  call void @llvm.dbg.value(metadata i32 %2, metadata !11969, metadata !DIExpression()), !dbg !11971
  call void @llvm.dbg.value(metadata i32 0, metadata !11970, metadata !DIExpression()), !dbg !11971
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11972
  %5 = load volatile i32, i32* %4, align 4, !dbg !11972
  %6 = and i32 %5, -5633, !dbg !11972
  %7 = or i32 %2, %1, !dbg !11972
  %8 = or i32 %7, %6, !dbg !11972
  store volatile i32 %8, i32* %4, align 4, !dbg !11972
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11973
  %10 = load volatile i32, i32* %9, align 4, !dbg !11973
  %11 = and i32 %10, -12289, !dbg !11973
  store volatile i32 %11, i32* %9, align 4, !dbg !11973
  ret void, !dbg !11974
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11975 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11977, metadata !DIExpression()), !dbg !11978
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11979
  %3 = load volatile i32, i32* %2, align 4, !dbg !11979
  %4 = or i32 %3, 8, !dbg !11979
  store volatile i32 %4, i32* %2, align 4, !dbg !11979
  ret void, !dbg !11980
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11981 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11985, metadata !DIExpression()), !dbg !11988
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11986, metadata !DIExpression()), !dbg !11988
  call void @llvm.dbg.value(metadata i32 0, metadata !11987, metadata !DIExpression()), !dbg !11988
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11989
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11989
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11990
  %5 = load i8, i8* %4, align 4, !dbg !11990
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !11991
  ret i32 %6, !dbg !11992
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.199(%struct.device* noundef %0) unnamed_addr #1 !dbg !11993 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11995, metadata !DIExpression()), !dbg !11996
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !11997
  ret i1 %2, !dbg !11998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #19 !dbg !11999 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12001, metadata !DIExpression()), !dbg !12002
  tail call fastcc void @__NVIC_SetPriority.201() #28, !dbg !12003
  store i32 3199, i32* @last_load, align 4, !dbg !12004
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12005
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12006
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12007
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12008
  %3 = or i32 %2, 7, !dbg !12008
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12008
  ret i32 0, !dbg !12009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.201() unnamed_addr #19 !dbg !12010 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12012, metadata !DIExpression()), !dbg !12014
  call void @llvm.dbg.value(metadata i32 1, metadata !12013, metadata !DIExpression()), !dbg !12014
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12015
  ret void, !dbg !12018
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12019 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12021, metadata !DIExpression()), !dbg !12023
  %2 = tail call fastcc i32 @elapsed() #28, !dbg !12024
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12025
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12026
  %5 = add i32 %4, %3, !dbg !12026
  store i32 %5, i32* @cycle_count, align 4, !dbg !12026
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12027
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12028
  %7 = sub i32 %5, %6, !dbg !12031
  %8 = udiv i32 %7, 3200, !dbg !12032
  call void @llvm.dbg.value(metadata i32 %8, metadata !12022, metadata !DIExpression()), !dbg !12023
  %9 = mul nuw i32 %8, 3200, !dbg !12033
  %10 = add i32 %9, %6, !dbg !12034
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12034
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !12035
  tail call void @z_arm_int_exit() #27, !dbg !12036
  ret void, !dbg !12037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #19 !dbg !12038 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12043
  call void @llvm.dbg.value(metadata i32 %1, metadata !12040, metadata !DIExpression()), !dbg !12044
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12045
  call void @llvm.dbg.value(metadata i32 %2, metadata !12041, metadata !DIExpression()), !dbg !12044
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12046
  call void @llvm.dbg.value(metadata i32 %3, metadata !12042, metadata !DIExpression()), !dbg !12044
  %4 = and i32 %2, 65536, !dbg !12047
  %5 = icmp ne i32 %4, 0, !dbg !12047
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12049
  %8 = load i32, i32* @last_load, align 4, !dbg !12044
  br i1 %7, label %9, label %13, !dbg !12049

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12050
  %11 = add i32 %10, %8, !dbg !12050
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12050
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12052
  br label %13, !dbg !12053

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12054
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12055
  %16 = add i32 %14, %15, !dbg !12056
  ret i32 %16, !dbg !12057
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12062, metadata !DIExpression()), !dbg !12075
  call void @llvm.dbg.value(metadata i1 %1, metadata !12063, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12075
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12076
  br i1 %4, label %5, label %8, !dbg !12076

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12078
  %7 = and i32 %6, -2, !dbg !12078
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12078
  store i32 -16777216, i32* @last_load, align 4, !dbg !12080
  br label %60, !dbg !12081

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12082
  call void @llvm.dbg.value(metadata i32 %9, metadata !12067, metadata !DIExpression()), !dbg !12075
  br i1 %3, label %18, label %10, !dbg !12083

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12083
  call void @llvm.dbg.value(metadata i32 undef, metadata !12062, metadata !DIExpression()), !dbg !12075
  %12 = icmp slt i32 %11, 1, !dbg !12084
  br i1 %12, label %18, label %13, !dbg !12084

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !12084
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !12084
  %16 = mul nuw nsw i32 %15, 3200, !dbg !12084
  %17 = add nuw nsw i32 %16, 3199, !dbg !12084
  br label %18, !dbg !12084

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12062, metadata !DIExpression()), !dbg !12075
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12085, metadata !DIExpression()) #26, !dbg !12092
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12094, !srcloc !12100
  call void @llvm.dbg.value(metadata i32 undef, metadata !12097, metadata !DIExpression()) #26, !dbg !12101
  call void @llvm.dbg.value(metadata i32 undef, metadata !12098, metadata !DIExpression()) #26, !dbg !12101
  call void @llvm.dbg.value(metadata i32 undef, metadata !12091, metadata !DIExpression()) #26, !dbg !12092
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12102
  br i1 %21, label %23, label %22, !dbg !12105

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.203, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.204, i32 0, i32 0), i32 noundef 148) #27, !dbg !12106
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.205, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12106
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.204, i32 0, i32 0), i32 noundef 148) #27, !dbg !12106
  unreachable, !dbg !12106

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !12094
  call void @llvm.dbg.value(metadata i32 %24, metadata !12097, metadata !DIExpression()) #26, !dbg !12101
  call void @llvm.dbg.value(metadata i32 %24, metadata !12091, metadata !DIExpression()) #26, !dbg !12092
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12108
  call void @llvm.dbg.value(metadata i32 %24, metadata !12068, metadata !DIExpression()), !dbg !12075
  %25 = tail call fastcc i32 @elapsed() #28, !dbg !12109
  call void @llvm.dbg.value(metadata i32 %25, metadata !12073, metadata !DIExpression()), !dbg !12075
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12110
  call void @llvm.dbg.value(metadata i32 %26, metadata !12065, metadata !DIExpression()), !dbg !12075
  %27 = load i32, i32* @cycle_count, align 4, !dbg !12111
  %28 = add i32 %27, %25, !dbg !12111
  store i32 %28, i32* @cycle_count, align 4, !dbg !12111
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12112
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !12113
  %30 = sub i32 %28, %29, !dbg !12114
  call void @llvm.dbg.value(metadata i32 %30, metadata !12074, metadata !DIExpression()), !dbg !12075
  %31 = icmp slt i32 %30, 0, !dbg !12115
  br i1 %31, label %41, label %32, !dbg !12117

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !12064, metadata !DIExpression()), !dbg !12075
  call void @llvm.dbg.value(metadata i32 undef, metadata !12064, metadata !DIExpression()), !dbg !12075
  %33 = add nuw i32 %19, %30, !dbg !12118
  %34 = urem i32 %33, 3200, !dbg !12120
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !12064, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12075
  %35 = sub nuw nsw i32 %19, %34, !dbg !12121
  call void @llvm.dbg.value(metadata i32 %35, metadata !12064, metadata !DIExpression()), !dbg !12075
  %36 = icmp ugt i32 %35, 1024, !dbg !12122
  br i1 %36, label %37, label %39, !dbg !12122

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !12064, metadata !DIExpression()), !dbg !12075
  %38 = icmp ugt i32 %35, 16771200, !dbg !12123
  br i1 %38, label %41, label %39, !dbg !12125

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16771200, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !12126
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12127
  call void @llvm.dbg.value(metadata i32 %43, metadata !12066, metadata !DIExpression()), !dbg !12075
  %44 = add nsw i32 %42, -1, !dbg !12128
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12129
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12130
  %45 = icmp ult i32 %26, %43, !dbg !12131
  br i1 %45, label %46, label %51, !dbg !12133

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !12134
  %48 = add i32 %26, %9, !dbg !12136
  %49 = sub i32 %48, %43, !dbg !12137
  %50 = add i32 %49, %47, !dbg !12134
  br label %55, !dbg !12138

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !12139
  %53 = load i32, i32* @cycle_count, align 4, !dbg !12141
  %54 = add i32 %52, %53, !dbg !12141
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !12142
  store i32 %56, i32* @cycle_count, align 4, !dbg !12142
  call void @llvm.dbg.value(metadata i32 undef, metadata !12143, metadata !DIExpression()) #26, !dbg !12149
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12148, metadata !DIExpression()) #26, !dbg !12149
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12151
  br i1 %57, label %59, label %58, !dbg !12154

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.206, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.204, i32 0, i32 0), i32 noundef 194) #27, !dbg !12155
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.207, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12155
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.204, i32 0, i32 0), i32 noundef 194) #27, !dbg !12155
  unreachable, !dbg !12155

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !12143, metadata !DIExpression()) #26, !dbg !12149
  call void @llvm.dbg.value(metadata i32 %24, metadata !12157, metadata !DIExpression()) #26, !dbg !12160
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #26, !dbg !12162, !srcloc !12163
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !12164
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12165 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12085, metadata !DIExpression()) #26, !dbg !12169
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12171, !srcloc !12100
  call void @llvm.dbg.value(metadata i32 undef, metadata !12097, metadata !DIExpression()) #26, !dbg !12173
  call void @llvm.dbg.value(metadata i32 undef, metadata !12098, metadata !DIExpression()) #26, !dbg !12173
  call void @llvm.dbg.value(metadata i32 undef, metadata !12091, metadata !DIExpression()) #26, !dbg !12169
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12174
  br i1 %2, label %4, label %3, !dbg !12175

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.203, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.204, i32 0, i32 0), i32 noundef 148) #27, !dbg !12176
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.205, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12176
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.204, i32 0, i32 0), i32 noundef 148) #27, !dbg !12176
  unreachable, !dbg !12176

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12097, metadata !DIExpression()) #26, !dbg !12173
  call void @llvm.dbg.value(metadata i32 undef, metadata !12091, metadata !DIExpression()) #26, !dbg !12169
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12177
  call void @llvm.dbg.value(metadata i32 undef, metadata !12167, metadata !DIExpression()), !dbg !12178
  %5 = tail call fastcc i32 @elapsed() #28, !dbg !12179
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12180
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !12181
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !12168, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12178
  call void @llvm.dbg.value(metadata i32 undef, metadata !12143, metadata !DIExpression()) #26, !dbg !12182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12148, metadata !DIExpression()) #26, !dbg !12182
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12184
  br i1 %8, label %10, label %9, !dbg !12185

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.206, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.204, i32 0, i32 0), i32 noundef 194) #27, !dbg !12186
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.207, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12186
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.204, i32 0, i32 0), i32 noundef 194) #27, !dbg !12186
  unreachable, !dbg !12186

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !12187
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !12168, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12178
  %12 = sub i32 %11, %7, !dbg !12188
  call void @llvm.dbg.value(metadata i32 %12, metadata !12168, metadata !DIExpression()), !dbg !12178
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !12171
  call void @llvm.dbg.value(metadata i32 %13, metadata !12097, metadata !DIExpression()) #26, !dbg !12173
  call void @llvm.dbg.value(metadata i32 %13, metadata !12091, metadata !DIExpression()) #26, !dbg !12169
  call void @llvm.dbg.value(metadata i32 %13, metadata !12167, metadata !DIExpression()), !dbg !12178
  call void @llvm.dbg.value(metadata i32 undef, metadata !12143, metadata !DIExpression()) #26, !dbg !12182
  call void @llvm.dbg.value(metadata i32 undef, metadata !12157, metadata !DIExpression()) #26, !dbg !12189
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #26, !dbg !12191, !srcloc !12163
  %14 = udiv i32 %12, 3200, !dbg !12192
  ret i32 %14, !dbg !12193
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12194 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12085, metadata !DIExpression()) #26, !dbg !12198
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12200, !srcloc !12100
  call void @llvm.dbg.value(metadata i32 undef, metadata !12097, metadata !DIExpression()) #26, !dbg !12202
  call void @llvm.dbg.value(metadata i32 undef, metadata !12098, metadata !DIExpression()) #26, !dbg !12202
  call void @llvm.dbg.value(metadata i32 undef, metadata !12091, metadata !DIExpression()) #26, !dbg !12198
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12203
  br i1 %2, label %4, label %3, !dbg !12204

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.203, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.204, i32 0, i32 0), i32 noundef 148) #27, !dbg !12205
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.205, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12205
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.204, i32 0, i32 0), i32 noundef 148) #27, !dbg !12205
  unreachable, !dbg !12205

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12097, metadata !DIExpression()) #26, !dbg !12202
  call void @llvm.dbg.value(metadata i32 undef, metadata !12091, metadata !DIExpression()) #26, !dbg !12198
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12206
  call void @llvm.dbg.value(metadata i32 undef, metadata !12196, metadata !DIExpression()), !dbg !12207
  %5 = tail call fastcc i32 @elapsed() #28, !dbg !12208
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12209
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !12197, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !12207
  call void @llvm.dbg.value(metadata i32 undef, metadata !12143, metadata !DIExpression()) #26, !dbg !12210
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12148, metadata !DIExpression()) #26, !dbg !12210
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12212
  br i1 %7, label %9, label %8, !dbg !12213

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.206, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.204, i32 0, i32 0), i32 noundef 194) #27, !dbg !12214
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.207, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12214
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.204, i32 0, i32 0), i32 noundef 194) #27, !dbg !12214
  unreachable, !dbg !12214

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !12215
  call void @llvm.dbg.value(metadata i32 %10, metadata !12197, metadata !DIExpression()), !dbg !12207
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !12200
  call void @llvm.dbg.value(metadata i32 %11, metadata !12097, metadata !DIExpression()) #26, !dbg !12202
  call void @llvm.dbg.value(metadata i32 %11, metadata !12091, metadata !DIExpression()) #26, !dbg !12198
  call void @llvm.dbg.value(metadata i32 %11, metadata !12196, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.value(metadata i32 undef, metadata !12143, metadata !DIExpression()) #26, !dbg !12210
  call void @llvm.dbg.value(metadata i32 undef, metadata !12157, metadata !DIExpression()) #26, !dbg !12216
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #26, !dbg !12218, !srcloc !12163
  ret i32 %10, !dbg !12219
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #19 !dbg !12220 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12221
  %2 = icmp eq i32 %1, -16777216, !dbg !12223
  br i1 %2, label %3, label %6, !dbg !12224

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12225
  %5 = or i32 %4, 1, !dbg !12225
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12225
  br label %6, !dbg !12227

6:                                                ; preds = %3, %0
  ret void, !dbg !12228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #19 !dbg !12229 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12230
  %2 = and i32 %1, -2, !dbg !12230
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12230
  ret void, !dbg !12231
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #17 !dbg !12232 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12258, metadata !DIExpression()), !dbg !12261
  call void @llvm.dbg.value(metadata i8 %1, metadata !12259, metadata !DIExpression()), !dbg !12261
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12260, metadata !DIExpression()), !dbg !12261
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12262
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12262
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12261
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12263
  %8 = load i8, i8* %6, align 4, !dbg !12264
  %9 = zext i8 %8 to i32, !dbg !12265
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12265
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12266
  br i1 %11, label %18, label %24, !dbg !12267

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12261
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12263
  %14 = load i8, i8* %6, align 4, !dbg !12264
  %15 = zext i8 %14 to i32, !dbg !12265
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12265
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12266
  br i1 %17, label %18, label %24, !dbg !12267, !llvm.loop !12268

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12270
  %21 = load i8, i8* %20, align 1, !dbg !12270
  %22 = icmp eq i8 %21, %1, !dbg !12273
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12274
  br i1 %22, label %24, label %12, !dbg !12275

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12261
  ret i32 %25, !dbg !12276
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12277 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12288, metadata !DIExpression()), !dbg !12304
  call void @llvm.dbg.value(metadata i8 %1, metadata !12289, metadata !DIExpression()), !dbg !12304
  call void @llvm.dbg.value(metadata i32 %2, metadata !12290, metadata !DIExpression()), !dbg !12304
  call void @llvm.dbg.value(metadata i32 0, metadata !12293, metadata !DIExpression()), !dbg !12304
  call void @llvm.dbg.value(metadata i32 0, metadata !12294, metadata !DIExpression()), !dbg !12304
  call void @llvm.dbg.value(metadata i8 0, metadata !12295, metadata !DIExpression()), !dbg !12305
  %4 = icmp eq i8 %1, 0, !dbg !12306
  br i1 %4, label %35, label %5, !dbg !12307

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12306
  br label %9, !dbg !12307

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12295, metadata !DIExpression()), !dbg !12305
  call void @llvm.dbg.value(metadata i32 %29, metadata !12293, metadata !DIExpression()), !dbg !12304
  %8 = icmp eq i32 %34, %6, !dbg !12306
  br i1 %8, label %35, label %9, !dbg !12307, !llvm.loop !12308

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12295, metadata !DIExpression()), !dbg !12305
  call void @llvm.dbg.value(metadata i32 %11, metadata !12293, metadata !DIExpression()), !dbg !12304
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12310
  %13 = load i32, i32* %12, align 4, !dbg !12310
  call void @llvm.dbg.value(metadata i32 %13, metadata !12292, metadata !DIExpression()), !dbg !12304
  %14 = and i32 %13, 31, !dbg !12311
  %15 = icmp ult i32 %14, 16, !dbg !12312
  br i1 %15, label %16, label %20, !dbg !12313

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12314
  %18 = load i32, i32* %17, align 4, !dbg !12314
  %19 = or i32 %18, 32, !dbg !12316
  call void @llvm.dbg.value(metadata i32 %19, metadata !12293, metadata !DIExpression()), !dbg !12304
  br label %28, !dbg !12317

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12318

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12319
  %23 = load i32, i32* %22, align 4, !dbg !12319
  call void @llvm.dbg.value(metadata i32 %23, metadata !12297, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12320
  %24 = lshr i32 %23, 7, !dbg !12321
  %25 = and i32 %24, 16, !dbg !12321
  %26 = or i32 %25, %23, !dbg !12321
  call void @llvm.dbg.value(metadata i32 %26, metadata !12293, metadata !DIExpression()), !dbg !12304
  br label %28, !dbg !12322

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !12304
  call void @llvm.dbg.value(metadata i32 %29, metadata !12293, metadata !DIExpression()), !dbg !12304
  %30 = lshr i32 %13, 5, !dbg !12323
  %31 = and i32 %30, 255, !dbg !12323
  call void @llvm.dbg.value(metadata i32 %31, metadata !12291, metadata !DIExpression()), !dbg !12304
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #28, !dbg !12324
  call void @llvm.dbg.value(metadata i32 %32, metadata !12294, metadata !DIExpression()), !dbg !12304
  %33 = icmp slt i32 %32, 0, !dbg !12325
  %34 = add nuw nsw i32 %10, 1, !dbg !12327
  call void @llvm.dbg.value(metadata i32 %34, metadata !12295, metadata !DIExpression()), !dbg !12305
  br i1 %33, label %35, label %7, !dbg !12328

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12334, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i32 %1, metadata !12335, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i32 %2, metadata !12336, metadata !DIExpression()), !dbg !12338
  %4 = icmp ugt i32 %0, 175, !dbg !12339
  br i1 %4, label %17, label %5, !dbg !12341

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12342
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12343
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12343
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12337, metadata !DIExpression()), !dbg !12338
  %9 = lshr i32 1888, %6, !dbg !12344
  %10 = and i32 %9, 1, !dbg !12344
  %11 = icmp eq i32 %10, 0, !dbg !12344
  br i1 %11, label %12, label %17, !dbg !12346

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.214(%struct.device* noundef %8) #28, !dbg !12347
  br i1 %13, label %14, label %17, !dbg !12348

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !12349
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #27, !dbg !12350
  br label %17, !dbg !12351

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !12338
  ret i32 %18, !dbg !12352
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.214(%struct.device* noundef %0) unnamed_addr #1 !dbg !12353 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12357, metadata !DIExpression()), !dbg !12358
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !12359, !srcloc !12361
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.215(%struct.device* noundef %0) #28, !dbg !12362
  ret i1 %2, !dbg !12363
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.215(%struct.device* noundef %0) unnamed_addr #1 !dbg !12364 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12366, metadata !DIExpression()), !dbg !12367
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12368
  ret i1 %2, !dbg !12369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12370 {
  ret void, !dbg !12371
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #7 !dbg !12372 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12374, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32 0, metadata !12375, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32 0, metadata !12376, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32 0, metadata !12377, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32 0, metadata !12378, metadata !DIExpression()), !dbg !12379
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12380
  call void @llvm.dbg.value(metadata i32 %1, metadata !12374, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !12379
  %2 = lshr i32 %1, 2, !dbg !12381
  %3 = and i32 %2, 3, !dbg !12381
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !12381

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12382
  %6 = lshr i32 %5, 13, !dbg !12384
  %7 = and i32 %6, 7, !dbg !12384
  call void @llvm.dbg.value(metadata i32 %7, metadata !12378, metadata !DIExpression()), !dbg !12379
  %8 = shl nuw nsw i32 65536, %7, !dbg !12385
  br label %31, !dbg !12386

9:                                                ; preds = %0
  br label %31, !dbg !12387

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12388
  call void @llvm.dbg.value(metadata i32 %11, metadata !12375, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !12379
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12389
  call void @llvm.dbg.value(metadata i32 %12, metadata !12376, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !12379
  %13 = lshr i32 %11, 18, !dbg !12390
  %14 = and i32 %13, 15, !dbg !12390
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !12391
  %16 = load i8, i8* %15, align 1, !dbg !12391
  %17 = zext i8 %16 to i32, !dbg !12391
  call void @llvm.dbg.value(metadata i32 %17, metadata !12375, metadata !DIExpression()), !dbg !12379
  %18 = lshr i32 %12, 22, !dbg !12392
  %19 = and i32 %18, 3, !dbg !12392
  %20 = add nuw nsw i32 %19, 1, !dbg !12393
  call void @llvm.dbg.value(metadata i32 %20, metadata !12376, metadata !DIExpression()), !dbg !12379
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12394
  %22 = and i32 %21, 65536, !dbg !12395
  call void @llvm.dbg.value(metadata i32 %22, metadata !12377, metadata !DIExpression()), !dbg !12379
  %23 = icmp eq i32 %22, 0, !dbg !12396
  br i1 %23, label %24, label %27, !dbg !12398

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !12399
  %26 = udiv i32 %25, %20, !dbg !12401
  br label %31, !dbg !12402

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !12403
  %29 = udiv i32 %28, %20, !dbg !12405
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !12406
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12407
  %34 = lshr i32 %33, 4, !dbg !12408
  %35 = and i32 %34, 15, !dbg !12408
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !12409
  %37 = load i8, i8* %36, align 1, !dbg !12409
  %38 = zext i8 %37 to i32, !dbg !12409
  call void @llvm.dbg.value(metadata i32 %38, metadata !12374, metadata !DIExpression()), !dbg !12379
  %39 = lshr i32 %32, %38, !dbg !12410
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !12410
  ret void, !dbg !12411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12412 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12420
  %2 = and i32 %1, 16711935, !dbg !12420
  %3 = or i32 %2, 45056, !dbg !12420
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12420
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12421
  %5 = or i32 %4, 256, !dbg !12421
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12421
  %6 = tail call i32 @HAL_GetTick() #27, !dbg !12422
  call void @llvm.dbg.value(metadata i32 %6, metadata !12418, metadata !DIExpression()), !dbg !12423
  br label %7, !dbg !12424

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12425
  %9 = and i32 %8, 512, !dbg !12425
  %10 = icmp eq i32 %9, 0, !dbg !12426
  br i1 %10, label %11, label %15, !dbg !12424

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #27, !dbg !12427
  %13 = sub i32 %12, %6, !dbg !12430
  %14 = icmp ugt i32 %13, 2, !dbg !12431
  br i1 %14, label %47, label %7, !dbg !12432, !llvm.loop !12433

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12435
  %17 = and i32 %16, -4, !dbg !12435
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12435
  br label %18, !dbg !12436

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12437
  %20 = and i32 %19, 12, !dbg !12437
  %21 = icmp eq i32 %20, 0, !dbg !12438
  br i1 %21, label %26, label %22, !dbg !12436

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #27, !dbg !12439
  %24 = sub i32 %23, %6, !dbg !12442
  %25 = icmp ugt i32 %24, 5000, !dbg !12443
  br i1 %25, label %47, label %18, !dbg !12444, !llvm.loop !12445

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !12447
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !12448
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #27, !dbg !12449
  call void @llvm.dbg.value(metadata i32 %28, metadata !12419, metadata !DIExpression()), !dbg !12423
  %29 = icmp eq i32 %28, 0, !dbg !12450
  br i1 %29, label %30, label %47, !dbg !12452

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12453
  %32 = and i32 %31, -285278210, !dbg !12453
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12453
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12454
  %34 = and i32 %33, -262145, !dbg !12454
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12454
  %35 = tail call i32 @HAL_GetTick() #27, !dbg !12455
  call void @llvm.dbg.value(metadata i32 %35, metadata !12418, metadata !DIExpression()), !dbg !12423
  br label %36, !dbg !12456

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12457
  %38 = and i32 %37, 33554432, !dbg !12457
  %39 = icmp eq i32 %38, 0, !dbg !12458
  br i1 %39, label %44, label %40, !dbg !12456

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #27, !dbg !12459
  %42 = sub i32 %41, %35, !dbg !12462
  %43 = icmp ugt i32 %42, 2, !dbg !12463
  br i1 %43, label %47, label %36, !dbg !12464, !llvm.loop !12465

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12467
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12468
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12469
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12470
  %46 = or i32 %45, 16777216, !dbg !12470
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12470
  br label %47, !dbg !12471

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !12423
  ret i32 %48, !dbg !12472
}

; Function Attrs: optsize
declare !dbg !12473 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !12475 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12478 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12504, metadata !DIExpression()), !dbg !12517
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12518
  br i1 %3, label %385, label %4, !dbg !12520

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12521
  %6 = and i32 %5, 12, !dbg !12521
  call void @llvm.dbg.value(metadata i32 %6, metadata !12507, metadata !DIExpression()), !dbg !12517
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12522
  %8 = and i32 %7, 65536, !dbg !12522
  call void @llvm.dbg.value(metadata i32 %8, metadata !12508, metadata !DIExpression()), !dbg !12517
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12523
  %10 = load i32, i32* %9, align 4, !dbg !12523
  %11 = and i32 %10, 1, !dbg !12525
  %12 = icmp eq i32 %11, 0, !dbg !12526
  br i1 %12, label %69, label %13, !dbg !12527

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !12528
  br i1 %14, label %19, label %15, !dbg !12531

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !12532
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !12533
  br i1 %18, label %19, label %27, !dbg !12533

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12534
  %21 = and i32 %20, 131072, !dbg !12534
  %22 = icmp eq i32 %21, 0, !dbg !12537
  br i1 %22, label %69, label %23, !dbg !12538

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12539
  %25 = load i32, i32* %24, align 4, !dbg !12539
  %26 = icmp eq i32 %25, 0, !dbg !12540
  br i1 %26, label %385, label %69, !dbg !12541

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12542
  %29 = load i32, i32* %28, align 4, !dbg !12542
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !12546

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12547
  %32 = or i32 %31, 65536, !dbg !12547
  br label %48, !dbg !12547

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12549
  %35 = and i32 %34, -65537, !dbg !12549
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12549
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12549
  %37 = and i32 %36, -262145, !dbg !12549
  br label %48, !dbg !12549

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12552
  %40 = or i32 %39, 262144, !dbg !12552
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12552
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12552
  %42 = or i32 %41, 65536, !dbg !12552
  br label %48, !dbg !12552

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12555
  %45 = and i32 %44, -65537, !dbg !12555
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12555
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12555
  %47 = and i32 %46, -262145, !dbg !12555
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12557
  %50 = load i32, i32* %28, align 4, !dbg !12558
  %51 = icmp eq i32 %50, 0, !dbg !12560
  %52 = tail call i32 @HAL_GetTick() #27, !dbg !12561
  call void @llvm.dbg.value(metadata i32 %52, metadata !12505, metadata !DIExpression()), !dbg !12517
  call void @llvm.dbg.value(metadata i32 %52, metadata !12505, metadata !DIExpression()), !dbg !12517
  br i1 %51, label %61, label %53, !dbg !12562

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12563
  %55 = and i32 %54, 131072, !dbg !12563
  %56 = icmp eq i32 %55, 0, !dbg !12565
  br i1 %56, label %57, label %69, !dbg !12566

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #27, !dbg !12567
  %59 = sub i32 %58, %52, !dbg !12570
  %60 = icmp ugt i32 %59, 100, !dbg !12571
  br i1 %60, label %385, label %53, !dbg !12572, !llvm.loop !12573

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12575
  %63 = and i32 %62, 131072, !dbg !12575
  %64 = icmp eq i32 %63, 0, !dbg !12577
  br i1 %64, label %69, label %65, !dbg !12578

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #27, !dbg !12579
  %67 = sub i32 %66, %52, !dbg !12582
  %68 = icmp ugt i32 %67, 100, !dbg !12583
  br i1 %68, label %385, label %61, !dbg !12584, !llvm.loop !12585

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !12587
  %71 = and i32 %70, 2, !dbg !12589
  %72 = icmp eq i32 %71, 0, !dbg !12590
  br i1 %72, label %118, label %73, !dbg !12591

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !12592
  br i1 %74, label %79, label %75, !dbg !12595

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !12596
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !12597
  br i1 %78, label %79, label %87, !dbg !12597

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12598
  %81 = and i32 %80, 2, !dbg !12598
  %82 = icmp eq i32 %81, 0, !dbg !12601
  br i1 %82, label %111, label %83, !dbg !12602

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12603
  %85 = load i32, i32* %84, align 4, !dbg !12603
  %86 = icmp eq i32 %85, 1, !dbg !12604
  br i1 %86, label %111, label %385, !dbg !12605

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12606
  %89 = load i32, i32* %88, align 4, !dbg !12606
  %90 = icmp eq i32 %89, 0, !dbg !12609
  br i1 %90, label %101, label %91, !dbg !12610

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12611
  %92 = tail call i32 @HAL_GetTick() #27, !dbg !12613
  call void @llvm.dbg.value(metadata i32 %92, metadata !12505, metadata !DIExpression()), !dbg !12517
  br label %93, !dbg !12614

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12615
  %95 = and i32 %94, 2, !dbg !12615
  %96 = icmp eq i32 %95, 0, !dbg !12616
  br i1 %96, label %97, label %111, !dbg !12614

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #27, !dbg !12617
  %99 = sub i32 %98, %92, !dbg !12620
  %100 = icmp ugt i32 %99, 2, !dbg !12621
  br i1 %100, label %385, label %93, !dbg !12622, !llvm.loop !12623

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12625
  %102 = tail call i32 @HAL_GetTick() #27, !dbg !12627
  call void @llvm.dbg.value(metadata i32 %102, metadata !12505, metadata !DIExpression()), !dbg !12517
  br label %103, !dbg !12628

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12629
  %105 = and i32 %104, 2, !dbg !12629
  %106 = icmp eq i32 %105, 0, !dbg !12630
  br i1 %106, label %118, label %107, !dbg !12628

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #27, !dbg !12631
  %109 = sub i32 %108, %102, !dbg !12634
  %110 = icmp ugt i32 %109, 2, !dbg !12635
  br i1 %110, label %385, label %103, !dbg !12636, !llvm.loop !12637

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12639
  %113 = and i32 %112, -7937, !dbg !12639
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12639
  %115 = load i32, i32* %114, align 4, !dbg !12639
  %116 = shl i32 %115, 8, !dbg !12639
  %117 = or i32 %116, %113, !dbg !12639
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12639
  br label %118, !dbg !12640

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !12640
  %120 = and i32 %119, 16, !dbg !12642
  %121 = icmp eq i32 %120, 0, !dbg !12643
  br i1 %121, label %215, label %122, !dbg !12644

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !12645
  br i1 %123, label %124, label %179, !dbg !12648

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12649
  %126 = and i32 %125, 512, !dbg !12649
  %127 = icmp eq i32 %126, 0, !dbg !12652
  br i1 %127, label %132, label %128, !dbg !12653

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12654
  %130 = load i32, i32* %129, align 4, !dbg !12654
  %131 = icmp eq i32 %130, 0, !dbg !12655
  br i1 %131, label %385, label %132, !dbg !12656

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12657
  %134 = load i32, i32* %133, align 4, !dbg !12657
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12660
  %136 = and i32 %135, 57344, !dbg !12660
  %137 = icmp ugt i32 %134, %136, !dbg !12661
  br i1 %137, label %138, label %152, !dbg !12662

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #28, !dbg !12663
  %140 = icmp eq i32 %139, 0, !dbg !12666
  br i1 %140, label %141, label %385, !dbg !12667

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12668
  %143 = and i32 %142, -57345, !dbg !12668
  %144 = load i32, i32* %133, align 4, !dbg !12668
  %145 = or i32 %143, %144, !dbg !12668
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12668
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12669
  %147 = and i32 %146, 16777215, !dbg !12669
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12669
  %149 = load i32, i32* %148, align 4, !dbg !12669
  %150 = shl i32 %149, 24, !dbg !12669
  %151 = or i32 %150, %147, !dbg !12669
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12669
  br label %165, !dbg !12670

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12671
  %154 = and i32 %153, -57345, !dbg !12671
  %155 = or i32 %154, %134, !dbg !12671
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12671
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12673
  %157 = and i32 %156, 16777215, !dbg !12673
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12673
  %159 = load i32, i32* %158, align 4, !dbg !12673
  %160 = shl i32 %159, 24, !dbg !12673
  %161 = or i32 %160, %157, !dbg !12673
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12673
  %162 = load i32, i32* %133, align 4, !dbg !12674
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #28, !dbg !12676
  %164 = icmp eq i32 %163, 0, !dbg !12677
  br i1 %164, label %165, label %385, !dbg !12678

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !12679
  %167 = lshr i32 %166, 13, !dbg !12680
  %168 = shl i32 65536, %167, !dbg !12681
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12682
  %170 = lshr i32 %169, 4, !dbg !12683
  %171 = and i32 %170, 15, !dbg !12683
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !12684
  %173 = load i8, i8* %172, align 1, !dbg !12684
  %174 = zext i8 %173 to i32, !dbg !12684
  %175 = lshr i32 %168, %174, !dbg !12685
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !12686
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !12687
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #27, !dbg !12688
  call void @llvm.dbg.value(metadata i32 %177, metadata !12506, metadata !DIExpression()), !dbg !12517
  %178 = icmp eq i32 %177, 0, !dbg !12689
  br i1 %178, label %215, label %385, !dbg !12691

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12692
  %181 = load i32, i32* %180, align 4, !dbg !12692
  %182 = icmp eq i32 %181, 0, !dbg !12695
  br i1 %182, label %205, label %183, !dbg !12696

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !12697
  %184 = tail call i32 @HAL_GetTick() #27, !dbg !12699
  call void @llvm.dbg.value(metadata i32 %184, metadata !12505, metadata !DIExpression()), !dbg !12517
  br label %185, !dbg !12700

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12701
  %187 = and i32 %186, 512, !dbg !12701
  %188 = icmp eq i32 %187, 0, !dbg !12702
  br i1 %188, label %189, label %193, !dbg !12700

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #27, !dbg !12703
  %191 = sub i32 %190, %184, !dbg !12706
  %192 = icmp ugt i32 %191, 2, !dbg !12707
  br i1 %192, label %385, label %185, !dbg !12708, !llvm.loop !12709

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12711
  %195 = and i32 %194, -57345, !dbg !12711
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12711
  %197 = load i32, i32* %196, align 4, !dbg !12711
  %198 = or i32 %195, %197, !dbg !12711
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12711
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12712
  %200 = and i32 %199, 16777215, !dbg !12712
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12712
  %202 = load i32, i32* %201, align 4, !dbg !12712
  %203 = shl i32 %202, 24, !dbg !12712
  %204 = or i32 %203, %200, !dbg !12712
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12712
  br label %215, !dbg !12713

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !12714
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !12716
  call void @llvm.dbg.value(metadata i32 %206, metadata !12505, metadata !DIExpression()), !dbg !12517
  br label %207, !dbg !12717

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12718
  %209 = and i32 %208, 512, !dbg !12718
  %210 = icmp eq i32 %209, 0, !dbg !12719
  br i1 %210, label %215, label %211, !dbg !12717

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #27, !dbg !12720
  %213 = sub i32 %212, %206, !dbg !12723
  %214 = icmp ugt i32 %213, 2, !dbg !12724
  br i1 %214, label %385, label %207, !dbg !12725, !llvm.loop !12726

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !12728
  %217 = and i32 %216, 8, !dbg !12730
  %218 = icmp eq i32 %217, 0, !dbg !12731
  br i1 %218, label %243, label %219, !dbg !12732

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12733
  %221 = load i32, i32* %220, align 4, !dbg !12733
  %222 = icmp eq i32 %221, 0, !dbg !12736
  br i1 %222, label %233, label %223, !dbg !12737

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !12738
  %224 = tail call i32 @HAL_GetTick() #27, !dbg !12740
  call void @llvm.dbg.value(metadata i32 %224, metadata !12505, metadata !DIExpression()), !dbg !12517
  br label %225, !dbg !12741

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12742
  %227 = and i32 %226, 2, !dbg !12742
  %228 = icmp eq i32 %227, 0, !dbg !12743
  br i1 %228, label %229, label %243, !dbg !12741

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #27, !dbg !12744
  %231 = sub i32 %230, %224, !dbg !12747
  %232 = icmp ugt i32 %231, 2, !dbg !12748
  br i1 %232, label %385, label %225, !dbg !12749, !llvm.loop !12750

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !12752
  %234 = tail call i32 @HAL_GetTick() #27, !dbg !12754
  call void @llvm.dbg.value(metadata i32 %234, metadata !12505, metadata !DIExpression()), !dbg !12517
  br label %235, !dbg !12755

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12756
  %237 = and i32 %236, 2, !dbg !12756
  %238 = icmp eq i32 %237, 0, !dbg !12757
  br i1 %238, label %243, label %239, !dbg !12755

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #27, !dbg !12758
  %241 = sub i32 %240, %234, !dbg !12761
  %242 = icmp ugt i32 %241, 2, !dbg !12762
  br i1 %242, label %385, label %235, !dbg !12763, !llvm.loop !12764

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !12766
  %245 = and i32 %244, 4, !dbg !12767
  %246 = icmp eq i32 %245, 0, !dbg !12768
  br i1 %246, label %320, label %247, !dbg !12769

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !12509, metadata !DIExpression()), !dbg !12770
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12771
  %249 = and i32 %248, 268435456, !dbg !12771
  %250 = icmp eq i32 %249, 0, !dbg !12771
  br i1 %250, label %251, label %258, !dbg !12772

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !12773
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !12773
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12513, metadata !DIExpression()), !dbg !12773
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12773
  %254 = or i32 %253, 268435456, !dbg !12773
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12773
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12773
  %256 = and i32 %255, 268435456, !dbg !12773
  store volatile i32 %256, i32* %2, align 4, !dbg !12773
  %257 = load volatile i32, i32* %2, align 4, !dbg !12773
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !12774
  call void @llvm.dbg.value(metadata i32 1, metadata !12509, metadata !DIExpression()), !dbg !12770
  br label %258, !dbg !12775

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !12509, metadata !DIExpression()), !dbg !12770
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12776
  %260 = and i32 %259, 256, !dbg !12776
  %261 = icmp eq i32 %260, 0, !dbg !12776
  br i1 %261, label %262, label %274, !dbg !12778

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12779
  %264 = or i32 %263, 256, !dbg !12779
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12779
  %265 = tail call i32 @HAL_GetTick() #27, !dbg !12781
  call void @llvm.dbg.value(metadata i32 %265, metadata !12505, metadata !DIExpression()), !dbg !12517
  br label %266, !dbg !12782

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12783
  %268 = and i32 %267, 256, !dbg !12783
  %269 = icmp eq i32 %268, 0, !dbg !12783
  br i1 %269, label %270, label %274, !dbg !12782

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #27, !dbg !12784
  %272 = sub i32 %271, %265, !dbg !12787
  %273 = icmp ugt i32 %272, 100, !dbg !12788
  br i1 %273, label %385, label %266, !dbg !12789, !llvm.loop !12790

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12792
  %276 = load i32, i32* %275, align 4, !dbg !12792
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !12795

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12796
  %279 = or i32 %278, 256, !dbg !12796
  br label %295, !dbg !12796

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12798
  %282 = and i32 %281, -257, !dbg !12798
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12798
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12798
  %284 = and i32 %283, -1025, !dbg !12798
  br label %295, !dbg !12798

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12801
  %287 = or i32 %286, 1024, !dbg !12801
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12801
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12801
  %289 = or i32 %288, 256, !dbg !12801
  br label %295, !dbg !12801

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12804
  %292 = and i32 %291, -257, !dbg !12804
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12804
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12804
  %294 = and i32 %293, -1025, !dbg !12804
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12806
  %297 = load i32, i32* %275, align 4, !dbg !12807
  %298 = icmp eq i32 %297, 0, !dbg !12809
  %299 = tail call i32 @HAL_GetTick() #27, !dbg !12810
  call void @llvm.dbg.value(metadata i32 %299, metadata !12505, metadata !DIExpression()), !dbg !12517
  call void @llvm.dbg.value(metadata i32 %299, metadata !12505, metadata !DIExpression()), !dbg !12517
  br i1 %298, label %308, label %300, !dbg !12811

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12812
  %302 = and i32 %301, 512, !dbg !12812
  %303 = icmp eq i32 %302, 0, !dbg !12814
  br i1 %303, label %304, label %316, !dbg !12815

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #27, !dbg !12816
  %306 = sub i32 %305, %299, !dbg !12819
  %307 = icmp ugt i32 %306, 5000, !dbg !12820
  br i1 %307, label %385, label %300, !dbg !12821, !llvm.loop !12822

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12824
  %310 = and i32 %309, 512, !dbg !12824
  %311 = icmp eq i32 %310, 0, !dbg !12826
  br i1 %311, label %316, label %312, !dbg !12827

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #27, !dbg !12828
  %314 = sub i32 %313, %299, !dbg !12831
  %315 = icmp ugt i32 %314, 5000, !dbg !12832
  br i1 %315, label %385, label %308, !dbg !12833, !llvm.loop !12834

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !12836

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12837
  %319 = and i32 %318, -268435457, !dbg !12837
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12837
  br label %320, !dbg !12840

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !12841
  %322 = load i32, i32* %321, align 4, !dbg !12841
  %323 = icmp eq i32 %322, 0, !dbg !12843
  br i1 %323, label %384, label %324, !dbg !12844

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !12845
  br i1 %325, label %366, label %326, !dbg !12848

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !12849
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12852
  %328 = tail call i32 @HAL_GetTick() #27, !dbg !12852
  call void @llvm.dbg.value(metadata i32 %328, metadata !12505, metadata !DIExpression()), !dbg !12517
  call void @llvm.dbg.value(metadata i32 %328, metadata !12505, metadata !DIExpression()), !dbg !12517
  br i1 %327, label %329, label %358, !dbg !12853

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12854
  %331 = and i32 %330, 33554432, !dbg !12854
  %332 = icmp eq i32 %331, 0, !dbg !12856
  br i1 %332, label %337, label %333, !dbg !12857

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #27, !dbg !12858
  %335 = sub i32 %334, %328, !dbg !12861
  %336 = icmp ugt i32 %335, 2, !dbg !12862
  br i1 %336, label %385, label %329, !dbg !12863, !llvm.loop !12864

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12866
  %339 = and i32 %338, -16580609, !dbg !12866
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12866
  %341 = load i32, i32* %340, align 4, !dbg !12866
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12866
  %343 = load i32, i32* %342, align 4, !dbg !12866
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12866
  %345 = load i32, i32* %344, align 4, !dbg !12866
  %346 = or i32 %339, %341, !dbg !12866
  %347 = or i32 %346, %343, !dbg !12866
  %348 = or i32 %347, %345, !dbg !12866
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12866
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12867
  %349 = tail call i32 @HAL_GetTick() #27, !dbg !12868
  call void @llvm.dbg.value(metadata i32 %349, metadata !12505, metadata !DIExpression()), !dbg !12517
  br label %350, !dbg !12869

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12870
  %352 = and i32 %351, 33554432, !dbg !12870
  %353 = icmp eq i32 %352, 0, !dbg !12871
  br i1 %353, label %354, label %384, !dbg !12869

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #27, !dbg !12872
  %356 = sub i32 %355, %349, !dbg !12875
  %357 = icmp ugt i32 %356, 2, !dbg !12876
  br i1 %357, label %385, label %350, !dbg !12877, !llvm.loop !12878

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12880
  %360 = and i32 %359, 33554432, !dbg !12880
  %361 = icmp eq i32 %360, 0, !dbg !12882
  br i1 %361, label %384, label %362, !dbg !12883

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #27, !dbg !12884
  %364 = sub i32 %363, %328, !dbg !12887
  %365 = icmp ugt i32 %364, 2, !dbg !12888
  br i1 %365, label %385, label %358, !dbg !12889, !llvm.loop !12890

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !12892
  br i1 %367, label %385, label %368, !dbg !12895

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12896
  call void @llvm.dbg.value(metadata i32 %369, metadata !12508, metadata !DIExpression()), !dbg !12517
  %370 = and i32 %369, 65536, !dbg !12898
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12900
  %372 = load i32, i32* %371, align 4, !dbg !12900
  %373 = icmp eq i32 %370, %372, !dbg !12901
  br i1 %373, label %374, label %385, !dbg !12902

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !12903
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12904
  %377 = load i32, i32* %376, align 4, !dbg !12904
  %378 = icmp eq i32 %375, %377, !dbg !12905
  br i1 %378, label %379, label %385, !dbg !12906

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !12907
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12908
  %382 = load i32, i32* %381, align 4, !dbg !12908
  %383 = icmp eq i32 %380, %382, !dbg !12909
  br i1 %383, label %384, label %385, !dbg !12910

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !12911

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !12517
  ret i32 %386, !dbg !12912
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #18 !dbg !12913 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12915, metadata !DIExpression()), !dbg !12924
  call void @llvm.dbg.value(metadata i32 0, metadata !12917, metadata !DIExpression()), !dbg !12924
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12925
  %4 = and i32 %3, 240, !dbg !12925
  %5 = icmp eq i32 %4, 0, !dbg !12926
  br i1 %5, label %6, label %31, !dbg !12927

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12928
  %8 = and i32 %7, 268435456, !dbg !12928
  %9 = icmp eq i32 %8, 0, !dbg !12928
  br i1 %9, label %12, label %10, !dbg !12929

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12930
  call void @llvm.dbg.value(metadata i32 %11, metadata !12916, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !12924
  br label %22, !dbg !12932

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !12933
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !12933
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12918, metadata !DIExpression()), !dbg !12933
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12933
  %15 = or i32 %14, 268435456, !dbg !12933
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12933
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12933
  %17 = and i32 %16, 268435456, !dbg !12933
  store volatile i32 %17, i32* %2, align 4, !dbg !12933
  %18 = load volatile i32, i32* %2, align 4, !dbg !12933
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !12934
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12935
  call void @llvm.dbg.value(metadata i32 %19, metadata !12916, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !12924
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12936
  %21 = and i32 %20, -268435457, !dbg !12936
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12936
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !12937
  call void @llvm.dbg.value(metadata i32 %24, metadata !12916, metadata !DIExpression()), !dbg !12924
  %25 = icmp eq i32 %24, 6144, !dbg !12938
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !12940
  call void @llvm.dbg.value(metadata i32 undef, metadata !12917, metadata !DIExpression()), !dbg !12924
  br i1 %27, label %28, label %31, !dbg !12941

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12943
  %30 = or i32 %29, 4, !dbg !12943
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12943
  br label %31, !dbg !12943

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12941
  %34 = and i32 %33, -2, !dbg !12941
  %35 = or i32 %34, %32, !dbg !12941
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12941
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12946
  %37 = and i32 %36, 1, !dbg !12946
  %38 = xor i32 %37, %32, !dbg !12924
  ret i32 %38, !dbg !12948
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.msg* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12949 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !12962, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i32 %1, metadata !12963, metadata !DIExpression()), !dbg !12966
  %3 = icmp eq %struct.msg* %0, null, !dbg !12967
  br i1 %3, label %136, label %4, !dbg !12969

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12970
  %6 = and i32 %5, 1, !dbg !12970
  %7 = icmp ult i32 %6, %1, !dbg !12972
  br i1 %7, label %8, label %20, !dbg !12973

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !12974
  br i1 %9, label %10, label %13, !dbg !12978

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12979
  %12 = or i32 %11, 4, !dbg !12979
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12979
  br label %13, !dbg !12979

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12978
  %15 = and i32 %14, -2, !dbg !12978
  %16 = or i32 %15, %1, !dbg !12978
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12978
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12981
  %18 = and i32 %17, 1, !dbg !12981
  %19 = icmp eq i32 %18, %1, !dbg !12983
  br i1 %19, label %20, label %136, !dbg !12984

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !12985
  %22 = load i32, i32* %21, align 4, !dbg !12985
  %23 = and i32 %22, 2, !dbg !12987
  %24 = icmp eq i32 %23, 0, !dbg !12988
  br i1 %24, label %32, label %25, !dbg !12989

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12990
  %27 = and i32 %26, -241, !dbg !12990
  %28 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !12990
  %29 = load i32, i32* %28, align 4, !dbg !12990
  %30 = or i32 %27, %29, !dbg !12990
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12990
  %31 = load i32, i32* %21, align 4, !dbg !12992
  br label %32, !dbg !12994

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !12992
  %34 = and i32 %33, 1, !dbg !12995
  %35 = icmp eq i32 %34, 0, !dbg !12996
  br i1 %35, label %93, label %36, !dbg !12997

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 1, !dbg !12998
  %38 = load i32, i32* %37, align 4, !dbg !12998
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !13001

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13002
  %41 = and i32 %40, 131072, !dbg !13002
  %42 = icmp eq i32 %41, 0, !dbg !13005
  br i1 %42, label %136, label %55, !dbg !13006

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13007
  %45 = and i32 %44, 33554432, !dbg !13007
  %46 = icmp eq i32 %45, 0, !dbg !13011
  br i1 %46, label %136, label %55, !dbg !13012

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13013
  %49 = and i32 %48, 2, !dbg !13013
  %50 = icmp eq i32 %49, 0, !dbg !13017
  br i1 %50, label %136, label %55, !dbg !13018

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13019
  %53 = and i32 %52, 512, !dbg !13019
  %54 = icmp eq i32 %53, 0, !dbg !13022
  br i1 %54, label %136, label %55, !dbg !13023

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13024
  %57 = and i32 %56, -4, !dbg !13024
  %58 = or i32 %57, %38, !dbg !13024
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13024
  %59 = tail call i32 @HAL_GetTick() #27, !dbg !13025
  call void @llvm.dbg.value(metadata i32 %59, metadata !12964, metadata !DIExpression()), !dbg !12966
  %60 = load i32, i32* %37, align 4, !dbg !13026
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !13028

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13029
  %63 = and i32 %62, 12, !dbg !13029
  %64 = icmp eq i32 %63, 8, !dbg !13031
  br i1 %64, label %93, label %65, !dbg !13032

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #27, !dbg !13033
  %67 = sub i32 %66, %59, !dbg !13036
  %68 = icmp ugt i32 %67, 5000, !dbg !13037
  br i1 %68, label %136, label %61, !dbg !13038, !llvm.loop !13039

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13041
  %71 = and i32 %70, 12, !dbg !13041
  %72 = icmp eq i32 %71, 12, !dbg !13044
  br i1 %72, label %93, label %73, !dbg !13045

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #27, !dbg !13046
  %75 = sub i32 %74, %59, !dbg !13049
  %76 = icmp ugt i32 %75, 5000, !dbg !13050
  br i1 %76, label %136, label %69, !dbg !13051, !llvm.loop !13052

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13054
  %79 = and i32 %78, 12, !dbg !13054
  %80 = icmp eq i32 %79, 4, !dbg !13057
  br i1 %80, label %93, label %81, !dbg !13058

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #27, !dbg !13059
  %83 = sub i32 %82, %59, !dbg !13062
  %84 = icmp ugt i32 %83, 5000, !dbg !13063
  br i1 %84, label %136, label %77, !dbg !13064, !llvm.loop !13065

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13067
  %87 = and i32 %86, 12, !dbg !13067
  %88 = icmp eq i32 %87, 0, !dbg !13069
  br i1 %88, label %93, label %89, !dbg !13070

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #27, !dbg !13071
  %91 = sub i32 %90, %59, !dbg !13074
  %92 = icmp ugt i32 %91, 5000, !dbg !13075
  br i1 %92, label %136, label %85, !dbg !13076, !llvm.loop !13077

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13079
  %95 = and i32 %94, 1, !dbg !13079
  %96 = icmp ugt i32 %95, %1, !dbg !13081
  br i1 %96, label %97, label %103, !dbg !13082

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13083
  %99 = and i32 %98, -2, !dbg !13083
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13083
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13086
  %101 = and i32 %100, 1, !dbg !13086
  %102 = icmp eq i32 %101, 0, !dbg !13088
  br i1 %102, label %103, label %136, !dbg !13089

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !13090
  %105 = and i32 %104, 4, !dbg !13092
  %106 = icmp eq i32 %105, 0, !dbg !13093
  br i1 %106, label %114, label %107, !dbg !13094

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13095
  %109 = and i32 %108, -1793, !dbg !13095
  %110 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 3, !dbg !13095
  %111 = load i32, i32* %110, align 4, !dbg !13095
  %112 = or i32 %109, %111, !dbg !13095
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13095
  %113 = load i32, i32* %21, align 4, !dbg !13097
  br label %114, !dbg !13099

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !13097
  %116 = and i32 %115, 8, !dbg !13100
  %117 = icmp eq i32 %116, 0, !dbg !13101
  br i1 %117, label %125, label %118, !dbg !13102

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13103
  %120 = and i32 %119, -14337, !dbg !13103
  %121 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !13103
  %122 = load i32, i32* %121, align 4, !dbg !13103
  %123 = shl i32 %122, 3, !dbg !13103
  %124 = or i32 %123, %120, !dbg !13103
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13103
  br label %125, !dbg !13105

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #28, !dbg !13106
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13107
  %128 = lshr i32 %127, 4, !dbg !13108
  %129 = and i32 %128, 15, !dbg !13108
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !13109
  %131 = load i8, i8* %130, align 1, !dbg !13109
  %132 = zext i8 %131 to i32, !dbg !13109
  %133 = lshr i32 %126, %132, !dbg !13110
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !13111
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !13112
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #27, !dbg !13113
  call void @llvm.dbg.value(metadata i32 %135, metadata !12965, metadata !DIExpression()), !dbg !12966
  br label %136, !dbg !13114

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !12966
  ret i32 %137, !dbg !13115
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #7 !dbg !13116 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13124
  call void @llvm.dbg.value(metadata i32 %1, metadata !13118, metadata !DIExpression()), !dbg !13125
  %2 = lshr i32 %1, 2, !dbg !13126
  %3 = and i32 %2, 3, !dbg !13126
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !13126

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !13123, metadata !DIExpression()), !dbg !13125
  br label %26, !dbg !13127

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !13130
  %7 = and i32 %6, 15, !dbg !13130
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !13132
  %9 = load i8, i8* %8, align 1, !dbg !13132
  call void @llvm.dbg.value(metadata i8 %9, metadata !13119, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13125
  %10 = lshr i32 %1, 22, !dbg !13133
  %11 = and i32 %10, 3, !dbg !13133
  %12 = add nuw nsw i32 %11, 1, !dbg !13134
  call void @llvm.dbg.value(metadata i32 %12, metadata !13120, metadata !DIExpression()), !dbg !13125
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13135
  %14 = and i32 %13, 65536, !dbg !13135
  %15 = icmp eq i32 %14, 0, !dbg !13137
  %16 = zext i8 %9 to i32, !dbg !13138
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !13138
  %18 = mul nuw i32 %17, %16, !dbg !13138
  %19 = udiv i32 %18, %12, !dbg !13139
  call void @llvm.dbg.value(metadata i32 %19, metadata !13121, metadata !DIExpression()), !dbg !13125
  call void @llvm.dbg.value(metadata i32 %19, metadata !13123, metadata !DIExpression()), !dbg !13125
  br label %26, !dbg !13140

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13141
  %23 = lshr i32 %22, 13, !dbg !13143
  %24 = and i32 %23, 7, !dbg !13143
  call void @llvm.dbg.value(metadata i32 %24, metadata !13122, metadata !DIExpression()), !dbg !13125
  %25 = shl nuw nsw i32 65536, %24, !dbg !13144
  call void @llvm.dbg.value(metadata i32 %25, metadata !13123, metadata !DIExpression()), !dbg !13125
  br label %26, !dbg !13145

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !13146
  call void @llvm.dbg.value(metadata i32 %27, metadata !13123, metadata !DIExpression()), !dbg !13125
  ret i32 %27, !dbg !13147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13148 {
  %4 = alloca %struct.msg, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13150, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.value(metadata i32 %1, metadata !13151, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.value(metadata i32 %2, metadata !13152, metadata !DIExpression()), !dbg !13165
  %6 = bitcast %struct.msg* %4 to i8*, !dbg !13166
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #26, !dbg !13166
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !13153, metadata !DIExpression()), !dbg !13167
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1, !dbg !13168
  store i32 2, i32* %7, align 4, !dbg !13169
  %8 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3, !dbg !13170
  store i32 2, i32* %8, align 4, !dbg !13171
  %9 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2, !dbg !13172
  store i32 0, i32* %9, align 4, !dbg !13173
  %10 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0, !dbg !13174
  store i32 256, i32* %10, align 4, !dbg !13175
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4, !dbg !13176
  store i32 0, i32* %11, align 4, !dbg !13177
  %12 = bitcast i32* %5 to i8*, !dbg !13178
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !13178
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13163, metadata !DIExpression()), !dbg !13178
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !13178
  %14 = or i32 %13, 1, !dbg !13178
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !13178
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !13178
  %16 = and i32 %15, 1, !dbg !13178
  store volatile i32 %16, i32* %5, align 4, !dbg !13178
  %17 = load volatile i32, i32* %5, align 4, !dbg !13178
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !13179
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.msg* noundef nonnull %4) #27, !dbg !13180
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13181
  %19 = and i32 %18, -1996488705, !dbg !13181
  %20 = or i32 %2, %1, !dbg !13181
  %21 = or i32 %20, %19, !dbg !13181
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13181
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #26, !dbg !13182
  ret void, !dbg !13182
}

; Function Attrs: optsize
declare !dbg !13183 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.msg* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #19 !dbg !13187 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13188
  ret void, !dbg !13189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #19 !dbg !13190 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13191
  ret void, !dbg !13192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #13 !dbg !13193 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13194
  ret i32 %1, !dbg !13195
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #7 !dbg !13196 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #28, !dbg !13197
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13198
  %3 = lshr i32 %2, 8, !dbg !13199
  %4 = and i32 %3, 7, !dbg !13199
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13200
  %6 = load i8, i8* %5, align 1, !dbg !13200
  %7 = zext i8 %6 to i32, !dbg !13200
  %8 = lshr i32 %1, %7, !dbg !13201
  ret i32 %8, !dbg !13202
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #7 !dbg !13203 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #28, !dbg !13204
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13205
  %3 = lshr i32 %2, 11, !dbg !13206
  %4 = and i32 %3, 7, !dbg !13206
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13207
  %6 = load i8, i8* %5, align 1, !dbg !13207
  %7 = zext i8 %6 to i32, !dbg !13207
  %8 = lshr i32 %1, %7, !dbg !13208
  ret i32 %8, !dbg !13209
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #7 !dbg !13210 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13214, metadata !DIExpression()), !dbg !13215
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13216
  store i32 31, i32* %2, align 4, !dbg !13217
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13218
  %4 = and i32 %3, 262144, !dbg !13220
  %5 = icmp eq i32 %4, 0, !dbg !13221
  br i1 %5, label %8, label %6, !dbg !13222

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13223
  store i32 5, i32* %7, align 4, !dbg !13225
  br label %15, !dbg !13226

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13227
  %10 = and i32 %9, 65536, !dbg !13229
  %11 = icmp eq i32 %10, 0, !dbg !13230
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13231
  br i1 %11, label %14, label %13, !dbg !13232

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !13233
  br label %15, !dbg !13235

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13236
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13238
  %17 = and i32 %16, 1, !dbg !13240
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13241
  store i32 %17, i32* %18, align 4, !dbg !13243
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13244
  %20 = lshr i32 %19, 8, !dbg !13245
  %21 = and i32 %20, 31, !dbg !13245
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13246
  store i32 %21, i32* %22, align 4, !dbg !13247
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13248
  %24 = lshr i32 %23, 8, !dbg !13250
  %25 = and i32 %24, 1, !dbg !13250
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !13251
  store i32 %25, i32* %26, align 4, !dbg !13253
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13254
  %28 = lshr i32 %27, 24, !dbg !13255
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !13256
  store i32 %28, i32* %29, align 4, !dbg !13257
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13258
  %31 = and i32 %30, 57344, !dbg !13259
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !13260
  store i32 %31, i32* %32, align 4, !dbg !13261
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13262
  %34 = and i32 %33, 1024, !dbg !13264
  %35 = icmp eq i32 %34, 0, !dbg !13265
  br i1 %35, label %38, label %36, !dbg !13266

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13267
  store i32 5, i32* %37, align 4, !dbg !13269
  br label %45, !dbg !13270

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13271
  %40 = and i32 %39, 256, !dbg !13273
  %41 = icmp eq i32 %40, 0, !dbg !13274
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13275
  br i1 %41, label %44, label %43, !dbg !13276

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !13277
  br label %45, !dbg !13279

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !13280
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13282
  %47 = and i32 %46, 1, !dbg !13284
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13285
  store i32 %47, i32* %48, align 4, !dbg !13287
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13288
  %50 = and i32 %49, 16777216, !dbg !13290
  %51 = icmp eq i32 %50, 0, !dbg !13291
  %52 = select i1 %51, i32 1, i32 2, !dbg !13292
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !13293
  store i32 %52, i32* %53, align 4, !dbg !13295
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13296
  %55 = and i32 %54, 65536, !dbg !13297
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !13298
  store i32 %55, i32* %56, align 4, !dbg !13299
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13300
  %58 = and i32 %57, 3932160, !dbg !13301
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !13302
  store i32 %58, i32* %59, align 4, !dbg !13303
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13304
  %61 = and i32 %60, 12582912, !dbg !13305
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !13306
  store i32 %61, i32* %62, align 4, !dbg !13307
  ret void, !dbg !13308
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.msg* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !13309 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !13313, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata i32* %1, metadata !13314, metadata !DIExpression()), !dbg !13315
  %3 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !13316
  store i32 15, i32* %3, align 4, !dbg !13317
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13318
  %5 = and i32 %4, 3, !dbg !13319
  %6 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 1, !dbg !13320
  store i32 %5, i32* %6, align 4, !dbg !13321
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13322
  %8 = and i32 %7, 240, !dbg !13323
  %9 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !13324
  store i32 %8, i32* %9, align 4, !dbg !13325
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13326
  %11 = and i32 %10, 1792, !dbg !13327
  %12 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 3, !dbg !13328
  store i32 %11, i32* %12, align 4, !dbg !13329
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13330
  %14 = lshr i32 %13, 3, !dbg !13331
  %15 = and i32 %14, 1792, !dbg !13331
  %16 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !13332
  store i32 %15, i32* %16, align 4, !dbg !13333
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13334
  %18 = and i32 %17, 1, !dbg !13334
  store i32 %18, i32* %1, align 4, !dbg !13335
  ret void, !dbg !13336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13337 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13338
  %2 = and i32 %1, 128, !dbg !13338
  %3 = icmp eq i32 %2, 0, !dbg !13338
  br i1 %3, label %5, label %4, !dbg !13340

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #28, !dbg !13341
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13343
  br label %5, !dbg !13344

5:                                                ; preds = %4, %0
  ret void, !dbg !13345
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13346 {
  ret void, !dbg !13347
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #19 !dbg !13348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13351, metadata !DIExpression()), !dbg !13352
  tail call fastcc void @LL_InitTick(i32 noundef %0) #28, !dbg !13353
  ret void, !dbg !13354
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #19 !dbg !13355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13358, metadata !DIExpression()), !dbg !13360
  call void @llvm.dbg.value(metadata i32 1000, metadata !13359, metadata !DIExpression()), !dbg !13360
  %2 = udiv i32 %0, 1000, !dbg !13361
  %3 = add nsw i32 %2, -1, !dbg !13362
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13363
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13364
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13365
  ret void, !dbg !13366
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #18 !dbg !13367 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13369, metadata !DIExpression()), !dbg !13372
  %3 = bitcast i32* %2 to i8*, !dbg !13373
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13373
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13370, metadata !DIExpression()), !dbg !13374
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13375
  store volatile i32 %4, i32* %2, align 4, !dbg !13374
  call void @llvm.dbg.value(metadata i32 %0, metadata !13371, metadata !DIExpression()), !dbg !13372
  %5 = load volatile i32, i32* %2, align 4, !dbg !13376
  %6 = icmp eq i32 %0, -1, !dbg !13377
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13371, metadata !DIExpression()), !dbg !13372
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13372
  call void @llvm.dbg.value(metadata i32 %8, metadata !13371, metadata !DIExpression()), !dbg !13372
  br label %9, !dbg !13379

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13371, metadata !DIExpression()), !dbg !13372
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13380
  call void @llvm.dbg.value(metadata i32 undef, metadata !13371, metadata !DIExpression()), !dbg !13372
  %12 = shl i32 %11, 15, !dbg !13372
  %13 = ashr i32 %12, 31, !dbg !13372
  %14 = add i32 %13, %10, !dbg !13372
  call void @llvm.dbg.value(metadata i32 %14, metadata !13371, metadata !DIExpression()), !dbg !13372
  %15 = icmp eq i32 %14, 0, !dbg !13383
  br i1 %15, label %16, label %9, !dbg !13379

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13384
  ret void, !dbg !13384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #12 !dbg !13385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13387, metadata !DIExpression()), !dbg !13388
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13389
  ret void, !dbg !13390
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #19 !dbg !13391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13396, metadata !DIExpression()), !dbg !13399
  call void @llvm.dbg.value(metadata i32 0, metadata !13397, metadata !DIExpression()), !dbg !13399
  call void @llvm.dbg.value(metadata i32 0, metadata !13398, metadata !DIExpression()), !dbg !13399
  %2 = add i32 %0, -32000001, !dbg !13400
  %3 = icmp ult i32 %2, -32000000, !dbg !13400
  br i1 %3, label %22, label %4, !dbg !13400

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13402
  %6 = icmp eq i32 %5, 2048, !dbg !13405
  br i1 %6, label %7, label %9, !dbg !13406

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !13407
  call void @llvm.dbg.value(metadata i32 undef, metadata !13398, metadata !DIExpression()), !dbg !13399
  br i1 %8, label %16, label %17, !dbg !13410

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13411
  %11 = icmp eq i32 %10, 4096, !dbg !13413
  br i1 %11, label %12, label %14, !dbg !13414

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !13415
  call void @llvm.dbg.value(metadata i32 undef, metadata !13398, metadata !DIExpression()), !dbg !13399
  br i1 %13, label %16, label %17, !dbg !13410

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !13418
  call void @llvm.dbg.value(metadata i32 undef, metadata !13398, metadata !DIExpression()), !dbg !13399
  br i1 %15, label %16, label %17, !dbg !13410

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #28, !dbg !13421
  br label %17, !dbg !13424

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #28, !dbg !13425
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #28, !dbg !13426
  %20 = icmp ne i32 %19, %18, !dbg !13428
  %21 = zext i1 %20 to i32, !dbg !13429
  br label %22, !dbg !13429

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !13399
  call void @llvm.dbg.value(metadata i32 %23, metadata !13397, metadata !DIExpression()), !dbg !13399
  ret i32 %23, !dbg !13430
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #7 !dbg !13431 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13432
  %2 = and i32 %1, 6144, !dbg !13432
  ret i32 %2, !dbg !13433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #19 !dbg !13434 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13435
  %2 = or i32 %1, 4, !dbg !13435
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13435
  ret void, !dbg !13436
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #19 !dbg !13437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13439, metadata !DIExpression()), !dbg !13440
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13441
  %3 = and i32 %2, -2, !dbg !13441
  %4 = or i32 %3, %0, !dbg !13441
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13441
  ret void, !dbg !13442
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #7 !dbg !13443 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13444
  %2 = and i32 %1, 1, !dbg !13444
  ret i32 %2, !dbg !13445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !13446 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !13463, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13464, metadata !DIExpression()), !dbg !13467
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #28, !dbg !13468
  %4 = icmp eq i32 %3, 0, !dbg !13470
  br i1 %4, label %5, label %19, !dbg !13471

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #28, !dbg !13472
  call void @llvm.dbg.value(metadata i32 %6, metadata !13466, metadata !DIExpression()), !dbg !13467
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.226() #28, !dbg !13474
  %8 = icmp eq i32 %7, 1, !dbg !13476
  br i1 %8, label %13, label %9, !dbg !13477

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.227() #28, !dbg !13478
  br label %10, !dbg !13480

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.226() #28, !dbg !13481
  %12 = icmp eq i32 %11, 1, !dbg !13482
  br i1 %12, label %13, label %10, !dbg !13480, !llvm.loop !13483

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !13485
  %15 = load i32, i32* %14, align 4, !dbg !13485
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !13486
  %17 = load i32, i32* %16, align 4, !dbg !13486
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.228(i32 noundef 0, i32 noundef %15, i32 noundef %17) #28, !dbg !13487
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #28, !dbg !13488
  call void @llvm.dbg.value(metadata i32 %18, metadata !13465, metadata !DIExpression()), !dbg !13467
  br label %19, !dbg !13489

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !13490
  call void @llvm.dbg.value(metadata i32 %20, metadata !13465, metadata !DIExpression()), !dbg !13467
  ret i32 %20, !dbg !13491
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #7 !dbg !13492 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13496, metadata !DIExpression()), !dbg !13497
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.230() #28, !dbg !13498
  %2 = icmp ne i32 %1, 0, !dbg !13500
  %3 = zext i1 %2 to i32, !dbg !13501
  call void @llvm.dbg.value(metadata i32 %3, metadata !13496, metadata !DIExpression()), !dbg !13497
  ret i32 %3, !dbg !13502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #13 !dbg !13503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13507, metadata !DIExpression()), !dbg !13510
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !13508, metadata !DIExpression()), !dbg !13510
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !13511
  %4 = load i32, i32* %3, align 4, !dbg !13511
  %5 = lshr i32 %4, 18, !dbg !13512
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !13513
  %7 = load i8, i8* %6, align 1, !dbg !13513
  %8 = zext i8 %7 to i32, !dbg !13514
  %9 = mul i32 %8, %0, !dbg !13515
  call void @llvm.dbg.value(metadata i32 %9, metadata !13509, metadata !DIExpression()), !dbg !13510
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !13516
  %11 = load i32, i32* %10, align 4, !dbg !13516
  %12 = lshr i32 %11, 22, !dbg !13517
  %13 = add nuw nsw i32 %12, 1, !dbg !13518
  %14 = udiv i32 %9, %13, !dbg !13519
  call void @llvm.dbg.value(metadata i32 %14, metadata !13509, metadata !DIExpression()), !dbg !13510
  ret i32 %14, !dbg !13520
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.226() unnamed_addr #7 !dbg !13521 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13522
  %2 = lshr i32 %1, 1, !dbg !13523
  %3 = and i32 %2, 1, !dbg !13523
  ret i32 %3, !dbg !13524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.227() unnamed_addr #19 !dbg !13525 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13526
  %2 = or i32 %1, 1, !dbg !13526
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13526
  ret void, !dbg !13527
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.228(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #19 !dbg !13528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13530, metadata !DIExpression()), !dbg !13533
  call void @llvm.dbg.value(metadata i32 %1, metadata !13531, metadata !DIExpression()), !dbg !13533
  call void @llvm.dbg.value(metadata i32 %2, metadata !13532, metadata !DIExpression()), !dbg !13533
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13534
  %5 = and i32 %4, -16580609, !dbg !13534
  %6 = or i32 %1, %0, !dbg !13534
  %7 = or i32 %6, %2, !dbg !13534
  %8 = or i32 %7, %5, !dbg !13534
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13534
  ret void, !dbg !13535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #19 !dbg !13536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13540, metadata !DIExpression()), !dbg !13544
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13541, metadata !DIExpression()), !dbg !13544
  call void @llvm.dbg.value(metadata i32 0, metadata !13542, metadata !DIExpression()), !dbg !13544
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13545
  %4 = load i32, i32* %3, align 4, !dbg !13545
  %5 = lshr i32 %4, 4, !dbg !13545
  %6 = and i32 %5, 15, !dbg !13545
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13545
  %8 = load i8, i8* %7, align 1, !dbg !13545
  %9 = zext i8 %8 to i32, !dbg !13545
  %10 = lshr i32 %0, %9, !dbg !13545
  call void @llvm.dbg.value(metadata i32 %10, metadata !13543, metadata !DIExpression()), !dbg !13544
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13546
  %12 = icmp ult i32 %11, %10, !dbg !13548
  br i1 %12, label %13, label %16, !dbg !13549

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #28, !dbg !13550
  call void @llvm.dbg.value(metadata i32 %14, metadata !13542, metadata !DIExpression()), !dbg !13544
  %15 = icmp eq i32 %14, 0, !dbg !13552
  br i1 %15, label %16, label %30, !dbg !13554

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.229() #28, !dbg !13555
  br label %17, !dbg !13557

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.230() #28, !dbg !13558
  %19 = icmp eq i32 %18, 1, !dbg !13559
  br i1 %19, label %20, label %17, !dbg !13557, !llvm.loop !13560

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13562
  tail call fastcc void @LL_RCC_SetAHBPrescaler.231(i32 noundef %21) #28, !dbg !13563
  tail call fastcc void @LL_RCC_SetSysClkSource.232() #28, !dbg !13564
  br label %22, !dbg !13565

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.233() #28, !dbg !13566
  %24 = icmp eq i32 %23, 12, !dbg !13567
  br i1 %24, label %25, label %22, !dbg !13565, !llvm.loop !13568

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13570
  %27 = load i32, i32* %26, align 4, !dbg !13570
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.234(i32 noundef %27) #28, !dbg !13571
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13572
  %29 = load i32, i32* %28, align 4, !dbg !13572
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.235(i32 noundef %29) #28, !dbg !13573
  br label %30, !dbg !13574

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13575
  %33 = icmp ugt i32 %32, %10, !dbg !13577
  br i1 %33, label %34, label %36, !dbg !13578

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #28, !dbg !13579
  call void @llvm.dbg.value(metadata i32 %35, metadata !13542, metadata !DIExpression()), !dbg !13544
  br label %36, !dbg !13581

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13544
  call void @llvm.dbg.value(metadata i32 %37, metadata !13542, metadata !DIExpression()), !dbg !13544
  %38 = icmp eq i32 %37, 0, !dbg !13582
  br i1 %38, label %39, label %40, !dbg !13584

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #28, !dbg !13585
  br label %40, !dbg !13587

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13588
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.229() unnamed_addr #19 !dbg !13589 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13590
  %2 = or i32 %1, 16777216, !dbg !13590
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13590
  ret void, !dbg !13591
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.230() unnamed_addr #7 !dbg !13592 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13593
  %2 = lshr i32 %1, 25, !dbg !13594
  %3 = and i32 %2, 1, !dbg !13594
  ret i32 %3, !dbg !13595
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.231(i32 noundef %0) unnamed_addr #19 !dbg !13596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13598, metadata !DIExpression()), !dbg !13599
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13600
  %3 = and i32 %2, -241, !dbg !13600
  %4 = or i32 %3, %0, !dbg !13600
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13600
  ret void, !dbg !13601
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.232() unnamed_addr #19 !dbg !13602 {
  call void @llvm.dbg.value(metadata i32 3, metadata !13604, metadata !DIExpression()), !dbg !13605
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13606
  %2 = or i32 %1, 3, !dbg !13606
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13606
  ret void, !dbg !13607
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.233() unnamed_addr #7 !dbg !13608 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13609
  %2 = and i32 %1, 12, !dbg !13609
  ret i32 %2, !dbg !13610
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.234(i32 noundef %0) unnamed_addr #19 !dbg !13611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13613, metadata !DIExpression()), !dbg !13614
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13615
  %3 = and i32 %2, -1793, !dbg !13615
  %4 = or i32 %3, %0, !dbg !13615
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13615
  ret void, !dbg !13616
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.235(i32 noundef %0) unnamed_addr #19 !dbg !13617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13619, metadata !DIExpression()), !dbg !13620
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13621
  %3 = and i32 %2, -14337, !dbg !13621
  %4 = or i32 %3, %0, !dbg !13621
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13621
  ret void, !dbg !13622
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #19 !dbg !13623 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13627, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.value(metadata i32 %1, metadata !13628, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !13629, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13630, metadata !DIExpression()), !dbg !13633
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #28, !dbg !13634
  %6 = icmp eq i32 %5, 0, !dbg !13636
  br i1 %6, label %7, label %25, !dbg !13637

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #28, !dbg !13638
  call void @llvm.dbg.value(metadata i32 %8, metadata !13632, metadata !DIExpression()), !dbg !13633
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #28, !dbg !13640
  %10 = icmp eq i32 %9, 1, !dbg !13642
  br i1 %10, label %19, label %11, !dbg !13643

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13644
  br i1 %12, label %13, label %14, !dbg !13647

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #28, !dbg !13648
  br label %15, !dbg !13650

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #28, !dbg !13651
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #28, !dbg !13653
  br label %16, !dbg !13654

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #28, !dbg !13655
  %18 = icmp eq i32 %17, 1, !dbg !13656
  br i1 %18, label %19, label %16, !dbg !13654, !llvm.loop !13657

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !13659
  %21 = load i32, i32* %20, align 4, !dbg !13659
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !13660
  %23 = load i32, i32* %22, align 4, !dbg !13660
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.228(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #28, !dbg !13661
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #28, !dbg !13662
  call void @llvm.dbg.value(metadata i32 %24, metadata !13631, metadata !DIExpression()), !dbg !13633
  br label %25, !dbg !13663

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !13664
  call void @llvm.dbg.value(metadata i32 %26, metadata !13631, metadata !DIExpression()), !dbg !13633
  ret i32 %26, !dbg !13665
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #7 !dbg !13666 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13667
  %2 = lshr i32 %1, 17, !dbg !13668
  %3 = and i32 %2, 1, !dbg !13668
  ret i32 %3, !dbg !13669
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #19 !dbg !13670 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13671
  %2 = or i32 %1, 262144, !dbg !13671
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13671
  ret void, !dbg !13672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #19 !dbg !13673 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13674
  %2 = and i32 %1, -262145, !dbg !13674
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13674
  ret void, !dbg !13675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #19 !dbg !13676 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13677
  %2 = or i32 %1, 65536, !dbg !13677
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13677
  ret void, !dbg !13678
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !13679 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13682, metadata !DIExpression()), !dbg !13698
  call void @llvm.dbg.value(metadata i32 undef, metadata !13682, metadata !DIExpression()), !dbg !13698
  call void @llvm.dbg.value(metadata i32 undef, metadata !13682, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13698
  ret void, !dbg !13699
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13700 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13704, metadata !DIExpression()), !dbg !13706
  %2 = icmp eq i8* %0, null, !dbg !13707
  br i1 %2, label %29, label %3, !dbg !13709

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13710
  %5 = icmp eq i8 %4, 0, !dbg !13711
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13712
  br i1 %6, label %29, label %8, !dbg !13712

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13705, metadata !DIExpression()), !dbg !13706
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13713

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13705, metadata !DIExpression()), !dbg !13706
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #28, !dbg !13715
  br i1 %10, label %11, label %15, !dbg !13720

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13721
  %13 = load i8*, i8** %12, align 4, !dbg !13721
  %14 = icmp eq i8* %13, %0, !dbg !13722
  br i1 %14, label %29, label %15, !dbg !13723

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13724
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13705, metadata !DIExpression()), !dbg !13706
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13725
  br i1 %17, label %7, label %8, !dbg !13726, !llvm.loop !13727

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13705, metadata !DIExpression()), !dbg !13706
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #28, !dbg !13729
  br i1 %20, label %21, label %26, !dbg !13733

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13734
  %23 = load i8*, i8** %22, align 4, !dbg !13734
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !13735
  %25 = icmp eq i32 %24, 0, !dbg !13736
  br i1 %25, label %29, label %26, !dbg !13737

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13738
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13705, metadata !DIExpression()), !dbg !13706
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13739
  br i1 %28, label %29, label %18, !dbg !13713, !llvm.loop !13740

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13706
  ret %struct.device* %30, !dbg !13742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #13 !dbg !13743 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13747, metadata !DIExpression()), !dbg !13748
  %2 = icmp eq %struct.device* %0, null, !dbg !13749
  br i1 %2, label %14, label %3, !dbg !13751

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13752
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13752
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13753
  %7 = load i8, i8* %6, align 1, !dbg !13753
  %8 = and i8 %7, 1, !dbg !13753
  %9 = icmp eq i8 %8, 0, !dbg !13753
  br i1 %9, label %14, label %10, !dbg !13754

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13755
  %12 = load i8, i8* %11, align 1, !dbg !13755
  %13 = icmp eq i8 %12, 0, !dbg !13756
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13748
  ret i1 %15, !dbg !13757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #12 !dbg !13758 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13763, metadata !DIExpression()), !dbg !13764
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13765
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13766
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13767 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13775, metadata !DIExpression()), !dbg !13780
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13776, metadata !DIExpression()), !dbg !13780
  call void @llvm.dbg.value(metadata i8* %2, metadata !13777, metadata !DIExpression()), !dbg !13780
  %5 = bitcast i32* %4 to i8*, !dbg !13781
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13781
  call void @llvm.dbg.value(metadata i32 0, metadata !13778, metadata !DIExpression()), !dbg !13780
  store i32 0, i32* %4, align 4, !dbg !13782
  call void @llvm.dbg.value(metadata i32* %4, metadata !13778, metadata !DIExpression(DW_OP_deref)), !dbg !13780
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #28, !dbg !13783
  call void @llvm.dbg.value(metadata i16* %6, metadata !13779, metadata !DIExpression()), !dbg !13780
  %7 = load i32, i32* %4, align 4, !dbg !13784
  call void @llvm.dbg.value(metadata i32 %7, metadata !13778, metadata !DIExpression()), !dbg !13780
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #28, !dbg !13785
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13786
  ret i32 %8, !dbg !13787
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !13788 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13792, metadata !DIExpression()), !dbg !13798
  call void @llvm.dbg.value(metadata i32* %1, metadata !13793, metadata !DIExpression()), !dbg !13798
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13799
  %4 = load i16*, i16** %3, align 4, !dbg !13799
  call void @llvm.dbg.value(metadata i16* %4, metadata !13794, metadata !DIExpression()), !dbg !13798
  %5 = icmp eq i16* %4, null, !dbg !13800
  br i1 %5, label %14, label %6, !dbg !13801

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13802
  call void @llvm.dbg.value(metadata i32 %7, metadata !13795, metadata !DIExpression()), !dbg !13802
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13803
  %9 = load i16, i16* %8, align 2, !dbg !13803
  %10 = add i16 %9, -32767, !dbg !13804
  %11 = icmp ult i16 %10, 2, !dbg !13804
  %12 = add i32 %7, 1, !dbg !13805
  call void @llvm.dbg.value(metadata i32 %12, metadata !13795, metadata !DIExpression()), !dbg !13802
  br i1 %11, label %13, label %6, !dbg !13804, !llvm.loop !13807

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13810
  br label %14, !dbg !13811

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13813 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13817, metadata !DIExpression()), !dbg !13828
  call void @llvm.dbg.value(metadata i32 %1, metadata !13818, metadata !DIExpression()), !dbg !13828
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13819, metadata !DIExpression()), !dbg !13828
  call void @llvm.dbg.value(metadata i8* %3, metadata !13820, metadata !DIExpression()), !dbg !13828
  call void @llvm.dbg.value(metadata i32 0, metadata !13821, metadata !DIExpression()), !dbg !13829
  %5 = icmp eq i32 %1, 0, !dbg !13830
  br i1 %5, label %16, label %8, !dbg !13831

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13821, metadata !DIExpression()), !dbg !13829
  %7 = icmp eq i32 %15, %1, !dbg !13830
  br i1 %7, label %16, label %8, !dbg !13831, !llvm.loop !13832

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13821, metadata !DIExpression()), !dbg !13829
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13834
  %11 = load i16, i16* %10, align 2, !dbg !13834
  call void @llvm.dbg.value(metadata i16 %11, metadata !13823, metadata !DIExpression()), !dbg !13835
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #28, !dbg !13836
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13826, metadata !DIExpression()), !dbg !13835
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !13837
  call void @llvm.dbg.value(metadata i32 %13, metadata !13827, metadata !DIExpression()), !dbg !13835
  %14 = icmp slt i32 %13, 0, !dbg !13838
  %15 = add nuw i32 %9, 1, !dbg !13840
  call void @llvm.dbg.value(metadata i32 %15, metadata !13821, metadata !DIExpression()), !dbg !13829
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !13842 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13846, metadata !DIExpression()), !dbg !13849
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13847, metadata !DIExpression()), !dbg !13849
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13848, metadata !DIExpression()), !dbg !13849
  %2 = sext i16 %0 to i32, !dbg !13850
  %3 = icmp slt i16 %0, 1, !dbg !13852
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13853
  %6 = add nsw i32 %2, -1, !dbg !13853
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13853
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13853
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13847, metadata !DIExpression()), !dbg !13849
  ret %struct.device* %8, !dbg !13854
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13855 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13857, metadata !DIExpression()), !dbg !13862
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13858, metadata !DIExpression()), !dbg !13862
  call void @llvm.dbg.value(metadata i8* %2, metadata !13859, metadata !DIExpression()), !dbg !13862
  %5 = bitcast i32* %4 to i8*, !dbg !13863
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13863
  call void @llvm.dbg.value(metadata i32 0, metadata !13860, metadata !DIExpression()), !dbg !13862
  store i32 0, i32* %4, align 4, !dbg !13864
  call void @llvm.dbg.value(metadata i32* %4, metadata !13860, metadata !DIExpression(DW_OP_deref)), !dbg !13862
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #28, !dbg !13865
  call void @llvm.dbg.value(metadata i16* %6, metadata !13861, metadata !DIExpression()), !dbg !13862
  %7 = load i32, i32* %4, align 4, !dbg !13866
  call void @llvm.dbg.value(metadata i32 %7, metadata !13860, metadata !DIExpression()), !dbg !13862
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #28, !dbg !13867
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13868
  ret i32 %8, !dbg !13869
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !13870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13872, metadata !DIExpression()), !dbg !13877
  call void @llvm.dbg.value(metadata i32* %1, metadata !13873, metadata !DIExpression()), !dbg !13877
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13878
  %4 = load i16*, i16** %3, align 4, !dbg !13878
  call void @llvm.dbg.value(metadata i16* %4, metadata !13874, metadata !DIExpression()), !dbg !13877
  call void @llvm.dbg.value(metadata i32 0, metadata !13875, metadata !DIExpression()), !dbg !13877
  call void @llvm.dbg.value(metadata i32 0, metadata !13876, metadata !DIExpression()), !dbg !13877
  %5 = icmp eq i16* %4, null, !dbg !13879
  br i1 %5, label %22, label %6, !dbg !13881

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13875, metadata !DIExpression()), !dbg !13877
  call void @llvm.dbg.value(metadata i16* %8, metadata !13874, metadata !DIExpression()), !dbg !13877
  %9 = load i16, i16* %8, align 2, !dbg !13882
  %10 = icmp eq i16 %9, -32768, !dbg !13886
  call void @llvm.dbg.value(metadata i32 undef, metadata !13875, metadata !DIExpression()), !dbg !13877
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13887
  call void @llvm.dbg.value(metadata i16* %11, metadata !13874, metadata !DIExpression()), !dbg !13877
  %12 = zext i1 %10 to i32, !dbg !13888
  %13 = add i32 %7, %12, !dbg !13888
  call void @llvm.dbg.value(metadata i32 %13, metadata !13875, metadata !DIExpression()), !dbg !13877
  %14 = icmp eq i32 %13, 2, !dbg !13889
  br i1 %14, label %15, label %6, !dbg !13890

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13877
  call void @llvm.dbg.value(metadata i32 %16, metadata !13876, metadata !DIExpression()), !dbg !13877
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13891
  %18 = load i16, i16* %17, align 2, !dbg !13891
  %19 = icmp eq i16 %18, 32767, !dbg !13892
  %20 = add i32 %16, 1, !dbg !13893
  call void @llvm.dbg.value(metadata i32 %20, metadata !13876, metadata !DIExpression()), !dbg !13877
  br i1 %19, label %21, label %15, !dbg !13895, !llvm.loop !13896

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13898
  br label %22, !dbg !13899

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13900
  call void @llvm.dbg.value(metadata i16* %23, metadata !13874, metadata !DIExpression()), !dbg !13877
  ret i16* %23, !dbg !13901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #13 !dbg !13902 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13905
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13906
  ret i32* %2, !dbg !13907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !13908 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14058, metadata !DIExpression()), !dbg !14061
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14059, metadata !DIExpression()), !dbg !14061
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14060, metadata !DIExpression()), !dbg !14061
  ret void, !dbg !14062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14067, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.value(metadata i32 %1, metadata !14068, metadata !DIExpression()), !dbg !14069
  ret void, !dbg !14070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14071 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14075, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.value(metadata i32 %1, metadata !14076, metadata !DIExpression()), !dbg !14077
  ret void, !dbg !14078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14079 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14083, metadata !DIExpression()), !dbg !14085
  call void @llvm.dbg.value(metadata i8* %1, metadata !14084, metadata !DIExpression()), !dbg !14085
  ret i32 -134, !dbg !14086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14087 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14091, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata i8* %1, metadata !14092, metadata !DIExpression()), !dbg !14093
  ret i32 -134, !dbg !14094
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !14095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14098, metadata !DIExpression()), !dbg !14099
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14100, !srcloc !14106
  call void @llvm.dbg.value(metadata i32 undef, metadata !14103, metadata !DIExpression()) #26, !dbg !14107
  call void @llvm.dbg.value(metadata i32 undef, metadata !14104, metadata !DIExpression()) #26, !dbg !14107
  br label %3, !dbg !14108

3:                                                ; preds = %3, %1
  br label %3, !dbg !14109, !llvm.loop !14112
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14119, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14120, metadata !DIExpression()), !dbg !14121
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.240, i32 0, i32 0), i32 noundef 69) #27, !dbg !14122
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !14127
  unreachable, !dbg !14127
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !14128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14130, metadata !DIExpression()), !dbg !14131
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !14132
  unreachable, !dbg !14132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14135, metadata !DIExpression()), !dbg !14139
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14136, metadata !DIExpression()), !dbg !14139
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14140, !srcloc !14106
  call void @llvm.dbg.value(metadata i32 undef, metadata !14103, metadata !DIExpression()) #26, !dbg !14142
  call void @llvm.dbg.value(metadata i32 undef, metadata !14104, metadata !DIExpression()) #26, !dbg !14142
  call void @llvm.dbg.value(metadata i32 undef, metadata !14137, metadata !DIExpression()), !dbg !14139
  %4 = tail call fastcc %struct.k_thread* @k_current_get.243() #29, !dbg !14143
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14138, metadata !DIExpression()), !dbg !14139
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #28, !dbg !14144
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.244, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !14144
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14149
  br i1 %6, label %13, label %7, !dbg !14151

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14152, metadata !DIExpression()), !dbg !14157
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14159
  %9 = load i32, i32* %8, align 4, !dbg !14159
  %10 = and i32 %9, 511, !dbg !14160
  %11 = icmp eq i32 %10, 0, !dbg !14161
  br i1 %11, label %13, label %12, !dbg !14162

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.245, i32 0, i32 0), i32 noundef 69) #27, !dbg !14163
  br label %13, !dbg !14169

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #28, !dbg !14170
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.246, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !14170
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #28, !dbg !14175
  %15 = icmp eq i32 %0, 4, !dbg !14176
  br i1 %15, label %16, label %17, !dbg !14181

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.249, i32 0, i32 0), i32 noundef 148) #27, !dbg !14182
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.250, i32 0, i32 0)) #27, !dbg !14182
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.249, i32 0, i32 0), i32 noundef 148) #27, !dbg !14182
  unreachable, !dbg !14182

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14140
  call void @llvm.dbg.value(metadata i32 %18, metadata !14103, metadata !DIExpression()) #26, !dbg !14142
  call void @llvm.dbg.value(metadata i32 %18, metadata !14137, metadata !DIExpression()), !dbg !14139
  call void @llvm.dbg.value(metadata i32 undef, metadata !14184, metadata !DIExpression()) #26, !dbg !14187
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !14189, !srcloc !14190
  tail call fastcc void @k_thread_abort.251(%struct.k_thread* noundef %4) #28, !dbg !14191
  ret void, !dbg !14194
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.243() unnamed_addr #6 !dbg !14195 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.259() #29, !dbg !14199
  ret %struct.k_thread* %1, !dbg !14200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !14201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14205, metadata !DIExpression()), !dbg !14206
  %2 = icmp ult i32 %0, 5, !dbg !14207
  br i1 %2, label %3, label %6, !dbg !14207

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14207
  %5 = load i8*, i8** %4, align 4, !dbg !14207
  br label %6, !dbg !14207

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.253, i32 0, i32 0), %1 ], !dbg !14208
  ret i8* %7, !dbg !14210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14211 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14215, metadata !DIExpression()), !dbg !14217
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14218
  br i1 %2, label %9, label %3, !dbg !14219

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !14220
  call void @llvm.dbg.value(metadata i8* %4, metadata !14216, metadata !DIExpression()), !dbg !14217
  %5 = icmp eq i8* %4, null, !dbg !14221
  br i1 %5, label %9, label %6, !dbg !14223

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14224
  %8 = icmp eq i8 %7, 0, !dbg !14225
  br i1 %8, label %9, label %10, !dbg !14226

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.252, i32 0, i32 0), metadata !14216, metadata !DIExpression()), !dbg !14217
  br label %10, !dbg !14227

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.252, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14217
  call void @llvm.dbg.value(metadata i8* %11, metadata !14216, metadata !DIExpression()), !dbg !14217
  ret i8* %11, !dbg !14229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.251(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14230 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14234, metadata !DIExpression()), !dbg !14235
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14236, !srcloc !14238
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !14239
  ret void, !dbg !14240
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.259() unnamed_addr #6 !dbg !14241 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14242, !srcloc !14244
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !14245
  ret %struct.k_thread* %1, !dbg !14246
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14247 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14251, metadata !DIExpression()), !dbg !14254
  call void @llvm.dbg.value(metadata i32 %1, metadata !14252, metadata !DIExpression()), !dbg !14254
  call void @llvm.dbg.value(metadata i32 %2, metadata !14253, metadata !DIExpression()), !dbg !14254
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !14255
  ret void, !dbg !14256
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14257 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14261, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i8* %1, metadata !14262, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i32 %2, metadata !14263, metadata !DIExpression()), !dbg !14264
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !14265
  ret void, !dbg !14266
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14267 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #28, !dbg !14268
  ret void, !dbg !14269
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14272, metadata !DIExpression()), !dbg !14273
  tail call fastcc void @init_idle_thread(i32 noundef %0) #28, !dbg !14274
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14275
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14276
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14277
  %4 = trunc i32 %0 to i8, !dbg !14278
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 6, !dbg !14279
  store i8 %4, i8* %5, align 4, !dbg !14280
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14281
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #28, !dbg !14282
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14283
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14284
  store i8* %8, i8** %9, align 4, !dbg !14285
  ret void, !dbg !14286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14289, metadata !DIExpression()), !dbg !14295
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14296
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14290, metadata !DIExpression()), !dbg !14295
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14297
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14291, metadata !DIExpression()), !dbg !14295
  call void @llvm.dbg.value(metadata i8* null, metadata !14294, metadata !DIExpression()), !dbg !14295
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14298
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14299
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !14300
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #28, !dbg !14301
  ret void, !dbg !14302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14303 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14307, metadata !DIExpression()), !dbg !14308
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14309
  ret i8* %2, !dbg !14310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !14311 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14316, metadata !DIExpression()), !dbg !14317
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14318
  %3 = load i8, i8* %2, align 1, !dbg !14319
  %4 = and i8 %3, -5, !dbg !14319
  store i8 %4, i8* %2, align 1, !dbg !14319
  ret void, !dbg !14320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_early_boot_rand_get(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14321 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14323, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i32 %1, metadata !14324, metadata !DIExpression()), !dbg !14325
  tail call fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) #28, !dbg !14326
  ret void, !dbg !14327
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !14328 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14333, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.value(metadata i32 %1, metadata !14334, metadata !DIExpression()), !dbg !14335
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14336, !srcloc !14338
  tail call void @z_impl_sys_rand_get(i8* noundef %0, i32 noundef %1) #27, !dbg !14339
  ret void, !dbg !14340
}

; Function Attrs: optsize
declare !dbg !14341 dso_local void @z_impl_sys_rand_get(i8* noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14342 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #28, !dbg !14345
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !14346
  %3 = ptrtoint i8* %2 to i32, !dbg !14355
  %4 = add i32 %3, 2048, !dbg !14356
  call void @llvm.dbg.value(metadata i32 %4, metadata !14350, metadata !DIExpression()) #26, !dbg !14357
  call void @llvm.dbg.value(metadata i32 %4, metadata !14358, metadata !DIExpression()) #26, !dbg !14361
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #26, !dbg !14363, !srcloc !14364
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14365
  %6 = or i32 %5, 512, !dbg !14365
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14365
  tail call fastcc void @__NVIC_SetPriority.268(i32 noundef -2, i32 noundef 255) #27, !dbg !14366
  tail call fastcc void @__NVIC_SetPriority.268(i32 noundef -5, i32 noundef 0) #27, !dbg !14369
  tail call fastcc void @__NVIC_SetPriority.268(i32 noundef -12, i32 noundef 0) #27, !dbg !14370
  tail call fastcc void @__NVIC_SetPriority.268(i32 noundef -11, i32 noundef 0) #27, !dbg !14371
  tail call fastcc void @__NVIC_SetPriority.268(i32 noundef -10, i32 noundef 0) #27, !dbg !14372
  tail call fastcc void @__NVIC_SetPriority.268(i32 noundef -4, i32 noundef 0) #27, !dbg !14373
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14374
  %8 = or i32 %7, 458752, !dbg !14374
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14374
  tail call void @z_arm_fault_init() #27, !dbg !14375
  tail call void @z_arm_cpu_idle_init() #27, !dbg !14376
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14377
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14380
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !14381
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !14382
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14383
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #26, !dbg !14383
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14344, metadata !DIExpression()), !dbg !14384
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #28, !dbg !14385
  call void @z_device_state_init() #27, !dbg !14386
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #28, !dbg !14387
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #28, !dbg !14388
  %11 = call fastcc i8* @prepare_multithreading() #28, !dbg !14389
  call fastcc void @switch_to_main_thread(i8* noundef %11) #32, !dbg !14390
  unreachable, !dbg !14390
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2221, metadata !DIExpression()), !dbg !14391
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14392
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14392
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2222, metadata !DIExpression()), !dbg !14391
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2222, metadata !DIExpression()), !dbg !14391
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14393
  br i1 %7, label %8, label %35, !dbg !14394

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2222, metadata !DIExpression()), !dbg !14391
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14395
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14395
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2232, metadata !DIExpression()), !dbg !14396
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14397
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14397
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !14398
  call void @llvm.dbg.value(metadata i32 %14, metadata !2236, metadata !DIExpression()), !dbg !14396
  %15 = icmp eq %struct.device* %11, null, !dbg !14399
  br i1 %15, label %32, label %16, !dbg !14401

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14402
  br i1 %17, label %26, label %18, !dbg !14405

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14406
  call void @llvm.dbg.value(metadata i32 %19, metadata !2236, metadata !DIExpression()), !dbg !14396
  %20 = icmp ult i32 %19, 255, !dbg !14408
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14408
  call void @llvm.dbg.value(metadata i32 %21, metadata !2236, metadata !DIExpression()), !dbg !14396
  %22 = trunc i32 %21 to i8, !dbg !14409
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14410
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14410
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14411
  store i8 %22, i8* %25, align 1, !dbg !14412
  br label %26, !dbg !14413

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14414
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14414
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14415
  %30 = load i8, i8* %29, align 1, !dbg !14416
  %31 = or i8 %30, 1, !dbg !14416
  store i8 %31, i8* %29, align 1, !dbg !14416
  br label %32, !dbg !14417

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14418
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2222, metadata !DIExpression()), !dbg !14391
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14393
  br i1 %34, label %8, label %35, !dbg !14394, !llvm.loop !14419

35:                                               ; preds = %32, %1
  ret void, !dbg !14421
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.268(i32 noundef %0, i32 noundef %1) unnamed_addr #19 !dbg !14422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14424, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata i32 %1, metadata !14425, metadata !DIExpression()), !dbg !14426
  %3 = trunc i32 %1 to i8, !dbg !14427
  %4 = shl i8 %3, 4, !dbg !14427
  %5 = and i32 %0, 15, !dbg !14430
  %6 = add nsw i32 %5, -4, !dbg !14431
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14432
  store volatile i8 %4, i8* %7, align 1, !dbg !14433
  ret void, !dbg !14434
}

; Function Attrs: optsize
declare !dbg !14435 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #12 !dbg !14436 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14439, metadata !DIExpression()), !dbg !14440
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14441
  store i8 1, i8* %2, align 1, !dbg !14442
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14443
  store i8 1, i8* %3, align 4, !dbg !14444
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14445
  store i32 0, i32* %4, align 4, !dbg !14446
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14447
  store i32 0, i32* %5, align 4, !dbg !14448
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14449
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14450
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14451
  ret void, !dbg !14452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14453 {
  tail call void @z_sched_init() #27, !dbg !14458
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14459
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.269, i32 0, i32 0)) #27, !dbg !14460
  call void @llvm.dbg.value(metadata i8* %1, metadata !14457, metadata !DIExpression()), !dbg !14461
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #28, !dbg !14462
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14463
  tail call void @z_init_cpu(i32 noundef 0) #28, !dbg !14464
  ret i8* %1, !dbg !14465
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14466 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14470, metadata !DIExpression()), !dbg !14471
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !14472
  unreachable, !dbg !14473
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14474 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14476, metadata !DIExpression()), !dbg !14479
  call void @llvm.dbg.value(metadata i8* %1, metadata !14477, metadata !DIExpression()), !dbg !14479
  call void @llvm.dbg.value(metadata i8* %2, metadata !14478, metadata !DIExpression()), !dbg !14479
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14480
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #28, !dbg !14481
  tail call void @boot_banner() #27, !dbg !14482
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #28, !dbg !14483
  tail call void @z_init_static_threads() #27, !dbg !14484
  tail call void @main() #27, !dbg !14485
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14486
  %5 = and i8 %4, -2, !dbg !14486
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14486
  ret void, !dbg !14487
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14488 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14498, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.value(metadata i8* %1, metadata !14499, metadata !DIExpression()), !dbg !14500
  ret void, !dbg !14501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14502 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14504, metadata !DIExpression()), !dbg !14506
  call void @llvm.dbg.value(metadata i8* %1, metadata !14505, metadata !DIExpression()), !dbg !14506
  ret void, !dbg !14507
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14508 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !14509, !srcloc !14516
  call void @llvm.dbg.value(metadata i32 %1, metadata !14512, metadata !DIExpression()) #26, !dbg !14517
  %2 = icmp ne i32 %1, 0, !dbg !14518
  ret i1 %2, !dbg !14519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #14 !dbg !14520 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14521
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14522
  %3 = load i8, i8* %2, align 4, !dbg !14523
  %4 = or i8 %3, 1, !dbg !14523
  store i8 %4, i8* %2, align 4, !dbg !14523
  ret void, !dbg !14524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #14 !dbg !14525 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14526
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14527
  %3 = load i8, i8* %2, align 4, !dbg !14528
  %4 = and i8 %3, -2, !dbg !14528
  store i8 %4, i8* %2, align 4, !dbg !14528
  ret void, !dbg !14529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #13 !dbg !14530 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14531
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14532
  %3 = load i8, i8* %2, align 4, !dbg !14532
  %4 = and i8 %3, 1, !dbg !14533
  %5 = icmp ne i8 %4, 0, !dbg !14534
  ret i1 %5, !dbg !14535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14536 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14540, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata i8* %1, metadata !14541, metadata !DIExpression()), !dbg !14542
  ret i32 -88, !dbg !14543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14544 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14548, metadata !DIExpression()), !dbg !14549
  ret i8* null, !dbg !14550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !14551 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14555, metadata !DIExpression()), !dbg !14558
  call void @llvm.dbg.value(metadata i8* %1, metadata !14556, metadata !DIExpression()), !dbg !14558
  call void @llvm.dbg.value(metadata i32 %2, metadata !14557, metadata !DIExpression()), !dbg !14558
  ret i32 -88, !dbg !14559
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2245 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2361, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.value(metadata i8* %1, metadata !2362, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.value(metadata i32 %2, metadata !2363, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.value(metadata i32 0, metadata !2364, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.value(metadata i8 undef, metadata !2366, metadata !DIExpression()), !dbg !14560
  %4 = icmp eq i8* %1, null, !dbg !14561
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14563
  br i1 %6, label %46, label %7, !dbg !14563

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14564
  %9 = load i8, i8* %8, align 1, !dbg !14564
  call void @llvm.dbg.value(metadata i8 %9, metadata !2366, metadata !DIExpression()), !dbg !14560
  %10 = add i32 %2, -1, !dbg !14565
  call void @llvm.dbg.value(metadata i32 %10, metadata !2363, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.value(metadata i8 0, metadata !2367, metadata !DIExpression()), !dbg !14566
  call void @llvm.dbg.value(metadata i8 %9, metadata !2366, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.value(metadata i32 0, metadata !2364, metadata !DIExpression()), !dbg !14560
  %11 = icmp eq i8 %9, 0, !dbg !14567
  br i1 %11, label %12, label %15, !dbg !14569

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14570
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14571
  store i8 0, i8* %14, align 1, !dbg !14572
  br label %46, !dbg !14573

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2367, metadata !DIExpression()), !dbg !14566
  call void @llvm.dbg.value(metadata i8 %17, metadata !2366, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.value(metadata i32 %18, metadata !2364, metadata !DIExpression()), !dbg !14560
  %19 = zext i8 %17 to i32, !dbg !14574
  %20 = zext i8 %16 to i32, !dbg !14575
  %21 = shl nuw i32 1, %20, !dbg !14575
  call void @llvm.dbg.value(metadata i32 %21, metadata !2365, metadata !DIExpression()), !dbg !14560
  %22 = and i32 %21, %19, !dbg !14577
  %23 = icmp eq i32 %22, 0, !dbg !14579
  br i1 %23, label %42, label %24, !dbg !14580

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14581
  %26 = sub i32 %10, %18, !dbg !14582
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14583
  %28 = load i8*, i8** %27, align 4, !dbg !14583
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14584
  %30 = load i32, i32* %29, align 4, !dbg !14584
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #28, !dbg !14585
  %32 = add i32 %31, %18, !dbg !14586
  call void @llvm.dbg.value(metadata i32 %32, metadata !2364, metadata !DIExpression()), !dbg !14560
  %33 = trunc i32 %21 to i8, !dbg !14587
  %34 = xor i8 %33, -1, !dbg !14587
  %35 = and i8 %17, %34, !dbg !14587
  call void @llvm.dbg.value(metadata i8 %35, metadata !2366, metadata !DIExpression()), !dbg !14560
  %36 = icmp eq i8 %35, 0, !dbg !14588
  br i1 %36, label %12, label %37, !dbg !14590

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14591
  %39 = sub i32 %10, %32, !dbg !14593
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.272, i32 0, i32 0), i32 noundef 1) #28, !dbg !14594
  %41 = add i32 %40, %32, !dbg !14595
  call void @llvm.dbg.value(metadata i32 %41, metadata !2364, metadata !DIExpression()), !dbg !14560
  br label %42, !dbg !14596

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14560
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14560
  call void @llvm.dbg.value(metadata i8 %44, metadata !2366, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.value(metadata i32 %43, metadata !2364, metadata !DIExpression()), !dbg !14560
  %45 = add i8 %16, 1, !dbg !14597
  call void @llvm.dbg.value(metadata i8 %45, metadata !2367, metadata !DIExpression()), !dbg !14566
  br label %15, !dbg !14569

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.273, i32 0, i32 0), %3 ], !dbg !14560
  ret i8* %47, !dbg !14598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14599 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14603, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata i32 %1, metadata !14604, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata i8* %2, metadata !14605, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata i32 %3, metadata !14606, metadata !DIExpression()), !dbg !14608
  %5 = icmp ult i32 %1, %3, !dbg !14609
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14609
  call void @llvm.dbg.value(metadata i32 %6, metadata !14607, metadata !DIExpression()), !dbg !14608
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !14610
  ret i32 %6, !dbg !14611
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14612 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14616, metadata !DIExpression()), !dbg !14617
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !14618
  ret void, !dbg !14619
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14620 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14629, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14630, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.value(metadata i32 %2, metadata !14631, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14632, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.value(metadata i8* %4, metadata !14633, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.value(metadata i8* %5, metadata !14634, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.value(metadata i8* %6, metadata !14635, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.value(metadata i32 %7, metadata !14636, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.value(metadata i32 %8, metadata !14637, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.value(metadata i8* undef, metadata !14638, metadata !DIExpression()), !dbg !14640
  %11 = icmp eq i32 %7, 15, !dbg !14641
  br i1 %11, label %12, label %15, !dbg !14641

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !14641
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #28, !dbg !14641
  br i1 %14, label %19, label %18, !dbg !14641

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !14641
  %17 = icmp ult i32 %16, 31, !dbg !14641
  br i1 %17, label %19, label %18, !dbg !14641

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.285, i32 0, i32 0), i32 noundef 536) #27, !dbg !14645
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.286, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #27, !dbg !14645
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.285, i32 0, i32 0), i32 noundef 536) #27, !dbg !14645
  unreachable, !dbg !14645

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14647
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #28, !dbg !14648
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14649
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #28, !dbg !14650
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #28, !dbg !14651
  call void @llvm.dbg.value(metadata i8* %22, metadata !14639, metadata !DIExpression()), !dbg !14640
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !14652
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14653
  store i8* null, i8** %23, align 4, !dbg !14654
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14655
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !14655
  br i1 %25, label %29, label %26, !dbg !14657

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !14658
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !14658
  br label %29, !dbg !14659

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !14640
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14660
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !14662
  ret i8* %22, !dbg !14663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #5 !dbg !14664 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14668, metadata !DIExpression()), !dbg !14669
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !14670
  ret i1 %2, !dbg !14671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #12 !dbg !14672 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14677, metadata !DIExpression()), !dbg !14678
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14679
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #28, !dbg !14680
  ret void, !dbg !14681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !14682 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14687, metadata !DIExpression()), !dbg !14691
  call void @llvm.dbg.value(metadata i32 %1, metadata !14688, metadata !DIExpression()), !dbg !14691
  call void @llvm.dbg.value(metadata i32 %2, metadata !14689, metadata !DIExpression()), !dbg !14691
  call void @llvm.dbg.value(metadata i32 %3, metadata !14690, metadata !DIExpression()), !dbg !14691
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14692
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14693
  %6 = trunc i32 %3 to i8, !dbg !14694
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14695
  store i8 %6, i8* %7, align 4, !dbg !14696
  %8 = trunc i32 %2 to i8, !dbg !14697
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14698
  store i8 %8, i8* %9, align 1, !dbg !14699
  %10 = trunc i32 %1 to i8, !dbg !14700
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14701
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14701
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14701
  store i8 %10, i8* %13, align 2, !dbg !14702
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14703
  store i8 0, i8* %14, align 1, !dbg !14704
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #28, !dbg !14705
  ret void, !dbg !14706
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !14707 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14711, metadata !DIExpression()), !dbg !14719
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14712, metadata !DIExpression()), !dbg !14719
  call void @llvm.dbg.value(metadata i32 %2, metadata !14713, metadata !DIExpression()), !dbg !14719
  call void @llvm.dbg.value(metadata i32 0, metadata !14718, metadata !DIExpression()), !dbg !14719
  %4 = add i32 %2, 7, !dbg !14720
  %5 = and i32 %4, -8, !dbg !14720
  %6 = add i32 %5, 64, !dbg !14720
  call void @llvm.dbg.value(metadata i32 %6, metadata !14714, metadata !DIExpression()), !dbg !14719
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.287(%struct.z_thread_stack_element* noundef %1) #28, !dbg !14722
  call void @llvm.dbg.value(metadata i8* %7, metadata !14717, metadata !DIExpression()), !dbg !14719
  call void @llvm.dbg.value(metadata i32 %5, metadata !14715, metadata !DIExpression()), !dbg !14719
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14723
  call void @llvm.dbg.value(metadata i8* %8, metadata !14716, metadata !DIExpression()), !dbg !14719
  call void @llvm.dbg.value(metadata i32 0, metadata !14718, metadata !DIExpression()), !dbg !14719
  %9 = ptrtoint i8* %7 to i32, !dbg !14724
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14725
  store i32 %9, i32* %10, align 4, !dbg !14726
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14727
  store i32 %5, i32* %11, align 4, !dbg !14728
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14729
  store i32 0, i32* %12, align 4, !dbg !14730
  call void @llvm.dbg.value(metadata i8* %8, metadata !14716, metadata !DIExpression()), !dbg !14719
  ret i8* %8, !dbg !14731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.287(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14732 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14736, metadata !DIExpression()), !dbg !14737
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14738
  ret i8* %2, !dbg !14739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14740 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14745, metadata !DIExpression()), !dbg !14746
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14747
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !14748
  ret void, !dbg !14749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14750 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14752, metadata !DIExpression()), !dbg !14753
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14754
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #28, !dbg !14755
  ret void, !dbg !14756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14757 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14761, metadata !DIExpression()), !dbg !14762
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14763
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14764
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14765
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14766
  ret void, !dbg !14767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !14768 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14773, metadata !DIExpression()), !dbg !14774
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14775
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14776
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14777
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14778
  ret void, !dbg !14779
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14780 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14797, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14788, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14789, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata i32 %2, metadata !14790, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14791, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata i8* %4, metadata !14792, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata i8* %5, metadata !14793, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata i8* %6, metadata !14794, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata i32 %7, metadata !14795, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata i32 %8, metadata !14796, metadata !DIExpression()), !dbg !14798
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !14799, !srcloc !14516
  call void @llvm.dbg.value(metadata i32 %11, metadata !14512, metadata !DIExpression()) #26, !dbg !14804
  %12 = icmp eq i32 %11, 0, !dbg !14805
  br i1 %12, label %14, label %13, !dbg !14806

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.285, i32 0, i32 0), i32 noundef 647) #27, !dbg !14807
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.291, i32 0, i32 0)) #27, !dbg !14807
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.285, i32 0, i32 0), i32 noundef 647) #27, !dbg !14807
  unreachable, !dbg !14807

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14797, metadata !DIExpression()), !dbg !14798
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #28, !dbg !14809
  %17 = icmp eq i64 %15, -1, !dbg !14810
  br i1 %17, label %19, label %18, !dbg !14812

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #28, !dbg !14813
  br label %19, !dbg !14815

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14817 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14822, metadata !DIExpression()), !dbg !14823
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14821, metadata !DIExpression()), !dbg !14823
  %4 = icmp eq i64 %3, 0, !dbg !14824
  br i1 %4, label %5, label %6, !dbg !14826

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #28, !dbg !14827
  br label %7, !dbg !14829

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #28, !dbg !14830
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14833 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14837, metadata !DIExpression()), !dbg !14838
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14839, !srcloc !14841
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #28, !dbg !14842
  ret void, !dbg !14843
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14844 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14847, metadata !DIExpression()), !dbg !14848
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14846, metadata !DIExpression()), !dbg !14848
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14849
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14850
  ret void, !dbg !14851
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14852 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14854, metadata !DIExpression()), !dbg !14873
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14874

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.294, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.285, i32 0, i32 0), i32 noundef 750) #27, !dbg !14878
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.295, i32 0, i32 0)) #27, !dbg !14878
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.285, i32 0, i32 0), i32 noundef 750) #27, !dbg !14878
  unreachable, !dbg !14878

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14854, metadata !DIExpression()), !dbg !14873
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14881
  br i1 %4, label %6, label %5, !dbg !14882

5:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !14883
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14871, metadata !DIExpression()), !dbg !14884
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !14885

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14889
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14889
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14891
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14891
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14892
  %12 = load i32, i32* %11, align 4, !dbg !14892
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14893
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14893
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14894
  %16 = load i8*, i8** %15, align 4, !dbg !14894
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14895
  %18 = load i8*, i8** %17, align 4, !dbg !14895
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14896
  %20 = load i8*, i8** %19, align 4, !dbg !14896
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14897
  %22 = load i32, i32* %21, align 4, !dbg !14897
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14898
  %24 = load i32, i32* %23, align 4, !dbg !14898
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #28, !dbg !14899
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14900
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !14901
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !14902
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !14902
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14903
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !14854, metadata !DIExpression()), !dbg !14873
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14904
  br i1 %30, label %1, label %2, !dbg !14874, !llvm.loop !14905

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.294, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.285, i32 0, i32 0), i32 noundef 781) #27, !dbg !14907
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.295, i32 0, i32 0)) #27, !dbg !14907
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.285, i32 0, i32 0), i32 noundef 781) #27, !dbg !14907
  unreachable, !dbg !14907

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !14871, metadata !DIExpression()), !dbg !14884
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14910
  br i1 %34, label %36, label %35, !dbg !14911

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #27, !dbg !14912
  ret void, !dbg !14913

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !14914
  %38 = load i32, i32* %37, align 4, !dbg !14914
  %39 = icmp eq i32 %38, -1, !dbg !14917
  br i1 %39, label %48, label %40, !dbg !14918

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !14919
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !14919
  %43 = icmp sgt i32 %38, 0, !dbg !14921
  %44 = select i1 %43, i32 %38, i32 0, !dbg !14921
  %45 = zext i32 %44 to i64, !dbg !14921
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %45) #28, !dbg !14921
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !14922
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #28, !dbg !14922
  br label %48, !dbg !14923

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !14924
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !14871, metadata !DIExpression()), !dbg !14884
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14925
  br i1 %50, label %31, label %32, !dbg !14885, !llvm.loop !14926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !14928 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14933, metadata !DIExpression()), !dbg !14934
  call void @llvm.dbg.value(metadata i64 %0, metadata !14935, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.value(metadata i32 1000, metadata !14940, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.value(metadata i32 10000, metadata !14941, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.value(metadata i8 1, metadata !14942, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.value(metadata i8 0, metadata !14943, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.value(metadata i8 1, metadata !14944, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.value(metadata i8 0, metadata !14945, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.value(metadata i8 1, metadata !14946, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.value(metadata i8 0, metadata !14947, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.value(metadata i64 0, metadata !14948, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.value(metadata i64 0, metadata !14948, metadata !DIExpression()), !dbg !14952
  %2 = mul i64 %0, 10, !dbg !14954
  ret i64 %2, !dbg !14960
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14961 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14963, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.value(metadata i8* %1, metadata !14964, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.value(metadata i8* %2, metadata !14965, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.value(metadata i8* %3, metadata !14966, metadata !DIExpression()), !dbg !14967
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14968
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14969
  %7 = load i8, i8* %6, align 4, !dbg !14970
  %8 = or i8 %7, 4, !dbg !14970
  store i8 %8, i8* %6, align 4, !dbg !14970
  tail call void @z_thread_essential_clear() #28, !dbg !14971
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #30, !dbg !14972
  unreachable, !dbg !14972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !14973 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14978, metadata !DIExpression()), !dbg !14980
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14981
  %3 = load i32, i32* %2, align 4, !dbg !14981
  call void @llvm.dbg.value(metadata i32 %3, metadata !14979, metadata !DIExpression()), !dbg !14980
  %4 = icmp eq i32 %3, 0, !dbg !14982
  br i1 %4, label %10, label %5, !dbg !14984

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14985
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !14988
  %8 = zext i8 %7 to i32, !dbg !14989
  %9 = icmp eq i32 %6, %8, !dbg !14990
  br i1 %9, label %11, label %10, !dbg !14991

10:                                               ; preds = %5, %1
  br label %11, !dbg !14992

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14980
  ret i1 %12, !dbg !14993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #14 !dbg !14994 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14996, metadata !DIExpression()), !dbg !14997
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14998
  %3 = load i32, i32* %2, align 4, !dbg !14998
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !15000
  %5 = zext i8 %4 to i32, !dbg !15001
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15002
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !15003
  %8 = or i32 %7, %5, !dbg !15004
  %9 = icmp eq i32 %3, %8, !dbg !15005
  br i1 %9, label %10, label %11, !dbg !15006

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !15007
  br label %11, !dbg !15008

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !15009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !15010 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15014, metadata !DIExpression()), !dbg !15015
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !15016
  %3 = zext i8 %2 to i32, !dbg !15017
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15018
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !15019
  %6 = or i32 %5, %3, !dbg !15020
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !15021
  store i32 %6, i32* %7, align 4, !dbg !15022
  ret void, !dbg !15023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !15024 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15028, metadata !DIExpression()), !dbg !15029
  ret i32 -134, !dbg !15030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !15031 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15035, metadata !DIExpression()), !dbg !15037
  call void @llvm.dbg.value(metadata i32 %1, metadata !15036, metadata !DIExpression()), !dbg !15037
  ret i32 -134, !dbg !15038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #5 !dbg !15039 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15046, metadata !DIExpression()), !dbg !15048
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !15047, metadata !DIExpression()), !dbg !15048
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15049
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !15051
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15048
  ret i32 %6, !dbg !15052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #5 !dbg !15053 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !15057, metadata !DIExpression()), !dbg !15058
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !15059
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15058
  ret i32 %3, !dbg !15061
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15062 {
  tail call void @sys_clock_idle_exit() #27, !dbg !15064
  ret void, !dbg !15065
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !15066 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15068, metadata !DIExpression()), !dbg !15071
  call void @llvm.dbg.value(metadata i8* %1, metadata !15069, metadata !DIExpression()), !dbg !15071
  call void @llvm.dbg.value(metadata i8* %2, metadata !15070, metadata !DIExpression()), !dbg !15071
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15072
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15072
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15072
  %7 = load i8, i8* %6, align 2, !dbg !15072
  %8 = icmp sgt i8 %7, -1, !dbg !15072
  br i1 %8, label %10, label %9, !dbg !15075

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 39) #27, !dbg !15076
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 39) #27, !dbg !15076
  unreachable, !dbg !15076

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15078, !srcloc !15085
  call void @llvm.dbg.value(metadata i32 undef, metadata !15081, metadata !DIExpression()) #26, !dbg !15086
  call void @llvm.dbg.value(metadata i32 undef, metadata !15082, metadata !DIExpression()) #26, !dbg !15086
  tail call fastcc void @k_cpu_idle() #28, !dbg !15087
  br label %10, !dbg !15088, !llvm.loop !15089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15091 {
  tail call void @arch_cpu_idle() #27, !dbg !15092
  ret void, !dbg !15093
}

; Function Attrs: optsize
declare !dbg !15094 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !15095 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15113, metadata !DIExpression()), !dbg !15117
  call void @llvm.dbg.value(metadata i8* %1, metadata !15114, metadata !DIExpression()), !dbg !15117
  call void @llvm.dbg.value(metadata i32 %2, metadata !15115, metadata !DIExpression()), !dbg !15117
  call void @llvm.dbg.value(metadata i32 %3, metadata !15116, metadata !DIExpression()), !dbg !15117
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15118
  store i32 %2, i32* %5, align 4, !dbg !15119
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15120
  store i32 %3, i32* %6, align 4, !dbg !15121
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15122
  store i8* %1, i8** %7, align 4, !dbg !15123
  %8 = mul i32 %3, %2, !dbg !15124
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !15125
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15126
  store i8* %9, i8** %10, align 4, !dbg !15127
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15128
  store i8* %1, i8** %11, align 4, !dbg !15129
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15130
  store i8* %1, i8** %12, align 4, !dbg !15131
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15132
  store i32 0, i32* %13, align 4, !dbg !15133
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15134
  store i8 0, i8* %14, align 4, !dbg !15135
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15136
  tail call fastcc void @z_waitq_init.309(%union.anon* noundef %15) #28, !dbg !15137
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !15138
  store i32 0, i32* %16, align 4, !dbg !15138
  ret void, !dbg !15139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.309(%union.anon* noundef %0) unnamed_addr #12 !dbg !15140 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15144, metadata !DIExpression()), !dbg !15145
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15146
  tail call fastcc void @sys_dlist_init.310(%struct._dnode* noundef %2) #28, !dbg !15147
  ret void, !dbg !15148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.310(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !15149 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15154, metadata !DIExpression()), !dbg !15155
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15156
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15157
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15158
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15159
  ret void, !dbg !15160
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15161 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15165, metadata !DIExpression()), !dbg !15171
  call void @llvm.dbg.value(metadata i32 %1, metadata !15166, metadata !DIExpression()), !dbg !15171
  call void @llvm.dbg.value(metadata i32 %2, metadata !15167, metadata !DIExpression()), !dbg !15171
  %5 = bitcast i32* %4 to i8*, !dbg !15172
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !15172
  call void @llvm.dbg.value(metadata i32* %4, metadata !15170, metadata !DIExpression(DW_OP_deref)), !dbg !15171
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #28, !dbg !15173
  br i1 %6, label %13, label %7, !dbg !15175

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !15176
  call void @llvm.dbg.value(metadata i32 %8, metadata !15170, metadata !DIExpression()), !dbg !15171
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #28, !dbg !15178
  call void @llvm.dbg.value(metadata i8* %9, metadata !15168, metadata !DIExpression()), !dbg !15171
  %10 = icmp eq i8* %9, null, !dbg !15179
  br i1 %10, label %13, label %11, !dbg !15181

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #28, !dbg !15182
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15184
  store i8 1, i8* %12, align 4, !dbg !15185
  call void @llvm.dbg.value(metadata i32 0, metadata !15169, metadata !DIExpression()), !dbg !15171
  br label %13, !dbg !15186

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !15187
  call void @llvm.dbg.value(metadata i32 %14, metadata !15169, metadata !DIExpression()), !dbg !15171
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !15188
  ret i32 %14, !dbg !15189
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #24 !dbg !15190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15195, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32 %1, metadata !15196, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32* %2, metadata !15197, metadata !DIExpression()), !dbg !15198
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !15199
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !15199
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !15199
  store i32 %6, i32* %2, align 4, !dbg !15199
  ret i1 %5, !dbg !15200
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !15201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15205, metadata !DIExpression()), !dbg !15206
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !15207
  ret i8* %2, !dbg !15208
}

; Function Attrs: optsize
declare !dbg !15209 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15212 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15216, metadata !DIExpression()), !dbg !15217
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15218
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %2) #28, !dbg !15218
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15218
  br i1 %4, label %5, label %15, !dbg !15220

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15221
  %7 = load i8, i8* %6, align 4, !dbg !15221
  %8 = and i8 %7, 1, !dbg !15223
  %9 = icmp eq i8 %8, 0, !dbg !15224
  br i1 %9, label %15, label %10, !dbg !15225

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15226
  %12 = load i8*, i8** %11, align 4, !dbg !15226
  tail call void @k_free(i8* noundef %12) #27, !dbg !15228
  %13 = load i8, i8* %6, align 4, !dbg !15229
  %14 = and i8 %13, -2, !dbg !15229
  store i8 %14, i8* %6, align 4, !dbg !15229
  br label %15, !dbg !15230

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !15217
  ret i32 %16, !dbg !15231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !15232 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15236, metadata !DIExpression()), !dbg !15237
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15238
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #28, !dbg !15239
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15240
  ret %struct.k_thread* %4, !dbg !15241
}

; Function Attrs: optsize
declare !dbg !15242 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !15243 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15247, metadata !DIExpression()), !dbg !15248
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #28, !dbg !15249
  br i1 %2, label %6, label %3, !dbg !15249

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15250
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15250
  br label %6, !dbg !15249

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15249
  ret %struct._dnode* %7, !dbg !15251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !15252 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15256, metadata !DIExpression()), !dbg !15257
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15258
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15258
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15259
  ret i1 %4, !dbg !15260
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15261 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15271, metadata !DIExpression()), !dbg !15279
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15269, metadata !DIExpression()), !dbg !15279
  call void @llvm.dbg.value(metadata i8* %1, metadata !15270, metadata !DIExpression()), !dbg !15279
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15280, !srcloc !15289
  call void @llvm.dbg.value(metadata i32 %5, metadata !15283, metadata !DIExpression()) #26, !dbg !15290
  %6 = icmp eq i32 %5, 0, !dbg !15291
  %7 = icmp eq i64 %4, 0, !dbg !15292
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15292
  br i1 %8, label %10, label %9, !dbg !15292

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.315, i32 0, i32 0), i32 noundef 118) #27, !dbg !15293
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.316, i32 0, i32 0)) #27, !dbg !15293
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.315, i32 0, i32 0), i32 noundef 118) #27, !dbg !15293
  unreachable, !dbg !15293

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15296, metadata !DIExpression()) #26, !dbg !15303
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15305, !srcloc !15311
  call void @llvm.dbg.value(metadata i32 undef, metadata !15308, metadata !DIExpression()) #26, !dbg !15312
  call void @llvm.dbg.value(metadata i32 undef, metadata !15309, metadata !DIExpression()) #26, !dbg !15312
  call void @llvm.dbg.value(metadata i32 undef, metadata !15302, metadata !DIExpression()) #26, !dbg !15303
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15313
  br i1 %13, label %15, label %14, !dbg !15316

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #27, !dbg !15317
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15317
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #27, !dbg !15317
  unreachable, !dbg !15317

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15305
  call void @llvm.dbg.value(metadata i32 %16, metadata !15308, metadata !DIExpression()) #26, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %16, metadata !15302, metadata !DIExpression()) #26, !dbg !15303
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15319
  call void @llvm.dbg.value(metadata i32 %16, metadata !15273, metadata !DIExpression()), !dbg !15279
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15320
  %18 = load i32, i32* %17, align 4, !dbg !15320
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15322
  %20 = load i32, i32* %19, align 4, !dbg !15322
  %21 = icmp ult i32 %18, %20, !dbg !15323
  br i1 %21, label %22, label %52, !dbg !15324

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15325
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %23) #27, !dbg !15327
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15272, metadata !DIExpression()), !dbg !15279
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !15328
  br i1 %25, label %34, label %26, !dbg !15330

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !15331
  %28 = load i8*, i8** %27, align 4, !dbg !15331
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15333
  %30 = load i32, i32* %29, align 4, !dbg !15333
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #27, !dbg !15334
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15335, metadata !DIExpression()), !dbg !15341
  call void @llvm.dbg.value(metadata i32 0, metadata !15340, metadata !DIExpression()), !dbg !15341
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 7, i32 1, !dbg !15343
  store i32 0, i32* %32, align 4, !dbg !15344
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #27, !dbg !15345
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15346
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #27, !dbg !15346
  br label %64, !dbg !15347

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15348
  %36 = load i8*, i8** %35, align 4, !dbg !15348
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15350
  %38 = load i32, i32* %37, align 4, !dbg !15350
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #27, !dbg !15351
  %40 = load i32, i32* %37, align 4, !dbg !15352
  %41 = load i8*, i8** %35, align 4, !dbg !15353
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !15353
  store i8* %42, i8** %35, align 4, !dbg !15353
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15354
  %44 = load i8*, i8** %43, align 4, !dbg !15354
  %45 = icmp eq i8* %42, %44, !dbg !15356
  br i1 %45, label %46, label %49, !dbg !15357

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15358
  %48 = load i8*, i8** %47, align 4, !dbg !15358
  store i8* %48, i8** %35, align 4, !dbg !15360
  br label %49, !dbg !15361

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !15362
  %51 = add i32 %50, 1, !dbg !15362
  store i32 %51, i32* %17, align 4, !dbg !15362
  call void @llvm.dbg.value(metadata i32 0, metadata !15278, metadata !DIExpression()), !dbg !15279
  br label %59, !dbg !15363

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !15364

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15365
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !15368
  store i8* %1, i8** %55, align 4, !dbg !15369
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15370
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15371
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %union.anon* noundef %56, [1 x i64] %2) #27, !dbg !15371
  call void @llvm.dbg.value(metadata i32 %58, metadata !15278, metadata !DIExpression()), !dbg !15279
  br label %64, !dbg !15372

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !15373
  call void @llvm.dbg.value(metadata i32 %60, metadata !15278, metadata !DIExpression()), !dbg !15279
  call void @llvm.dbg.value(metadata i32 undef, metadata !15374, metadata !DIExpression()) #26, !dbg !15380
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15379, metadata !DIExpression()) #26, !dbg !15380
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15382
  br i1 %61, label %63, label %62, !dbg !15385

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #27, !dbg !15386
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.321, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15386
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #27, !dbg !15386
  unreachable, !dbg !15386

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !15374, metadata !DIExpression()) #26, !dbg !15380
  call void @llvm.dbg.value(metadata i32 %16, metadata !15388, metadata !DIExpression()) #26, !dbg !15391
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !15393, !srcloc !15394
  br label %64, !dbg !15395

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !15279
  ret i32 %65, !dbg !15396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !15397 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15407, metadata !DIExpression()), !dbg !15409
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15408, metadata !DIExpression()), !dbg !15409
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15410
  %4 = load i32, i32* %3, align 4, !dbg !15410
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15411
  store i32 %4, i32* %5, align 4, !dbg !15412
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15413
  %7 = load i32, i32* %6, align 4, !dbg !15413
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15414
  store i32 %7, i32* %8, align 4, !dbg !15415
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15416
  %10 = load i32, i32* %9, align 4, !dbg !15416
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15417
  store i32 %10, i32* %11, align 4, !dbg !15418
  ret void, !dbg !15419
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15420 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15426, metadata !DIExpression()), !dbg !15430
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15424, metadata !DIExpression()), !dbg !15430
  call void @llvm.dbg.value(metadata i8* %1, metadata !15425, metadata !DIExpression()), !dbg !15430
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15431, !srcloc !15289
  call void @llvm.dbg.value(metadata i32 %5, metadata !15283, metadata !DIExpression()) #26, !dbg !15436
  %6 = icmp eq i32 %5, 0, !dbg !15437
  %7 = icmp eq i64 %4, 0, !dbg !15438
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15438
  br i1 %8, label %10, label %9, !dbg !15438

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.315, i32 0, i32 0), i32 noundef 208) #27, !dbg !15439
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.316, i32 0, i32 0)) #27, !dbg !15439
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.315, i32 0, i32 0), i32 noundef 208) #27, !dbg !15439
  unreachable, !dbg !15439

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15441
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15296, metadata !DIExpression()) #26, !dbg !15442
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15444, !srcloc !15311
  call void @llvm.dbg.value(metadata i32 undef, metadata !15308, metadata !DIExpression()) #26, !dbg !15446
  call void @llvm.dbg.value(metadata i32 undef, metadata !15309, metadata !DIExpression()) #26, !dbg !15446
  call void @llvm.dbg.value(metadata i32 undef, metadata !15302, metadata !DIExpression()) #26, !dbg !15442
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15447
  br i1 %13, label %15, label %14, !dbg !15448

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #27, !dbg !15449
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15449
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #27, !dbg !15449
  unreachable, !dbg !15449

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15444
  call void @llvm.dbg.value(metadata i32 %16, metadata !15308, metadata !DIExpression()) #26, !dbg !15446
  call void @llvm.dbg.value(metadata i32 %16, metadata !15302, metadata !DIExpression()) #26, !dbg !15442
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15450
  call void @llvm.dbg.value(metadata i32 %16, metadata !15427, metadata !DIExpression()), !dbg !15430
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15451
  %18 = load i32, i32* %17, align 4, !dbg !15451
  %19 = icmp eq i32 %18, 0, !dbg !15453
  br i1 %19, label %61, label %20, !dbg !15454

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15455
  %22 = load i8*, i8** %21, align 4, !dbg !15455
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15457
  %24 = load i32, i32* %23, align 4, !dbg !15457
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #27, !dbg !15458
  %26 = load i32, i32* %23, align 4, !dbg !15459
  %27 = load i8*, i8** %21, align 4, !dbg !15460
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !15460
  store i8* %28, i8** %21, align 4, !dbg !15460
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15461
  %30 = load i8*, i8** %29, align 4, !dbg !15461
  %31 = icmp eq i8* %28, %30, !dbg !15463
  br i1 %31, label %32, label %35, !dbg !15464

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15465
  %34 = load i8*, i8** %33, align 4, !dbg !15465
  store i8* %34, i8** %21, align 4, !dbg !15467
  br label %35, !dbg !15468

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !15469
  %37 = add i32 %36, -1, !dbg !15469
  store i32 %37, i32* %17, align 4, !dbg !15469
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15470
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %38) #27, !dbg !15471
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15428, metadata !DIExpression()), !dbg !15430
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !15472
  br i1 %40, label %68, label %41, !dbg !15474

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15475
  %43 = load i8*, i8** %42, align 4, !dbg !15475
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !15477
  %45 = load i8*, i8** %44, align 4, !dbg !15477
  %46 = load i32, i32* %23, align 4, !dbg !15478
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #27, !dbg !15479
  %48 = load i32, i32* %23, align 4, !dbg !15480
  %49 = load i8*, i8** %42, align 4, !dbg !15481
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !15481
  store i8* %50, i8** %42, align 4, !dbg !15481
  %51 = load i8*, i8** %29, align 4, !dbg !15482
  %52 = icmp eq i8* %50, %51, !dbg !15484
  br i1 %52, label %53, label %56, !dbg !15485

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15486
  %55 = load i8*, i8** %54, align 4, !dbg !15486
  store i8* %55, i8** %42, align 4, !dbg !15488
  br label %56, !dbg !15489

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !15490
  %58 = add i32 %57, 1, !dbg !15490
  store i32 %58, i32* %17, align 4, !dbg !15490
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15335, metadata !DIExpression()), !dbg !15491
  call void @llvm.dbg.value(metadata i32 0, metadata !15340, metadata !DIExpression()), !dbg !15491
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 7, i32 1, !dbg !15493
  store i32 0, i32* %59, align 4, !dbg !15494
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #27, !dbg !15495
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15496
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #27, !dbg !15496
  br label %73, !dbg !15497

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !15498

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15499
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !15502
  store i8* %1, i8** %64, align 4, !dbg !15503
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15504
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15505
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %union.anon* noundef %65, [1 x i64] %2) #27, !dbg !15505
  call void @llvm.dbg.value(metadata i32 %67, metadata !15429, metadata !DIExpression()), !dbg !15430
  br label %73, !dbg !15506

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !15507
  call void @llvm.dbg.value(metadata i32 %69, metadata !15429, metadata !DIExpression()), !dbg !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !15374, metadata !DIExpression()) #26, !dbg !15508
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15379, metadata !DIExpression()) #26, !dbg !15508
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15510
  br i1 %70, label %72, label %71, !dbg !15511

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #27, !dbg !15512
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.321, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15512
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #27, !dbg !15512
  unreachable, !dbg !15512

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !15374, metadata !DIExpression()) #26, !dbg !15508
  call void @llvm.dbg.value(metadata i32 %16, metadata !15388, metadata !DIExpression()) #26, !dbg !15513
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !15515, !srcloc !15394
  br label %73, !dbg !15516

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !15430
  ret i32 %74, !dbg !15517
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15518 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15522, metadata !DIExpression()), !dbg !15526
  call void @llvm.dbg.value(metadata i8* %1, metadata !15523, metadata !DIExpression()), !dbg !15526
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15527
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15296, metadata !DIExpression()) #26, !dbg !15528
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15530, !srcloc !15311
  call void @llvm.dbg.value(metadata i32 undef, metadata !15308, metadata !DIExpression()) #26, !dbg !15532
  call void @llvm.dbg.value(metadata i32 undef, metadata !15309, metadata !DIExpression()) #26, !dbg !15532
  call void @llvm.dbg.value(metadata i32 undef, metadata !15302, metadata !DIExpression()) #26, !dbg !15528
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15533
  br i1 %5, label %7, label %6, !dbg !15534

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #27, !dbg !15535
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !15535
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #27, !dbg !15535
  unreachable, !dbg !15535

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15308, metadata !DIExpression()) #26, !dbg !15532
  call void @llvm.dbg.value(metadata i32 undef, metadata !15302, metadata !DIExpression()) #26, !dbg !15528
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15536
  call void @llvm.dbg.value(metadata i32 undef, metadata !15524, metadata !DIExpression()), !dbg !15526
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15537
  %9 = load i32, i32* %8, align 4, !dbg !15537
  %10 = icmp eq i32 %9, 0, !dbg !15539
  br i1 %10, label %17, label %11, !dbg !15540

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15541
  %13 = load i8*, i8** %12, align 4, !dbg !15541
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15543
  %15 = load i32, i32* %14, align 4, !dbg !15543
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #27, !dbg !15544
  call void @llvm.dbg.value(metadata i32 0, metadata !15525, metadata !DIExpression()), !dbg !15526
  br label %17, !dbg !15545

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !15546
  call void @llvm.dbg.value(metadata i32 %18, metadata !15525, metadata !DIExpression()), !dbg !15526
  call void @llvm.dbg.value(metadata i32 undef, metadata !15374, metadata !DIExpression()) #26, !dbg !15547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15379, metadata !DIExpression()) #26, !dbg !15547
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15549
  br i1 %19, label %21, label %20, !dbg !15550

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #27, !dbg !15551
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.321, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !15551
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #27, !dbg !15551
  unreachable, !dbg !15551

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !15530
  call void @llvm.dbg.value(metadata i32 %22, metadata !15308, metadata !DIExpression()) #26, !dbg !15532
  call void @llvm.dbg.value(metadata i32 %22, metadata !15302, metadata !DIExpression()) #26, !dbg !15528
  call void @llvm.dbg.value(metadata i32 %22, metadata !15524, metadata !DIExpression()), !dbg !15526
  call void @llvm.dbg.value(metadata i32 undef, metadata !15374, metadata !DIExpression()) #26, !dbg !15547
  call void @llvm.dbg.value(metadata i32 undef, metadata !15388, metadata !DIExpression()) #26, !dbg !15552
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #26, !dbg !15554, !srcloc !15394
  ret i32 %18, !dbg !15555
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15556 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15560, metadata !DIExpression()), !dbg !15563
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15564
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !15296, metadata !DIExpression()) #26, !dbg !15565
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15567, !srcloc !15311
  call void @llvm.dbg.value(metadata i32 undef, metadata !15308, metadata !DIExpression()) #26, !dbg !15569
  call void @llvm.dbg.value(metadata i32 undef, metadata !15309, metadata !DIExpression()) #26, !dbg !15569
  call void @llvm.dbg.value(metadata i32 undef, metadata !15302, metadata !DIExpression()) #26, !dbg !15565
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #27, !dbg !15570
  br i1 %4, label %6, label %5, !dbg !15571

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #27, !dbg !15572
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #27, !dbg !15572
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #27, !dbg !15572
  unreachable, !dbg !15572

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15308, metadata !DIExpression()) #26, !dbg !15569
  call void @llvm.dbg.value(metadata i32 undef, metadata !15302, metadata !DIExpression()) #26, !dbg !15565
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #27, !dbg !15573
  call void @llvm.dbg.value(metadata i32 undef, metadata !15561, metadata !DIExpression()), !dbg !15563
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #27, !dbg !15574
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15562, metadata !DIExpression()), !dbg !15563
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15575
  br i1 %9, label %15, label %10, !dbg !15576

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15335, metadata !DIExpression()), !dbg !15577
  call void @llvm.dbg.value(metadata i32 -35, metadata !15340, metadata !DIExpression()), !dbg !15577
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 7, i32 1, !dbg !15580
  store i32 -35, i32* %12, align 4, !dbg !15581
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #27, !dbg !15582
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #27, !dbg !15574
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15562, metadata !DIExpression()), !dbg !15563
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !15575
  br i1 %14, label %15, label %10, !dbg !15576, !llvm.loop !15583

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !15567
  call void @llvm.dbg.value(metadata i32 %16, metadata !15308, metadata !DIExpression()) #26, !dbg !15569
  call void @llvm.dbg.value(metadata i32 %16, metadata !15302, metadata !DIExpression()) #26, !dbg !15565
  call void @llvm.dbg.value(metadata i32 %16, metadata !15561, metadata !DIExpression()), !dbg !15563
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15585
  store i32 0, i32* %17, align 4, !dbg !15586
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15587
  %19 = load i8*, i8** %18, align 4, !dbg !15587
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15588
  store i8* %19, i8** %20, align 4, !dbg !15589
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15590
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #27, !dbg !15590
  ret void, !dbg !15591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !15592 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15607, metadata !DIExpression()), !dbg !15610
  call void @llvm.dbg.value(metadata i32 %1, metadata !15608, metadata !DIExpression()), !dbg !15610
  call void @llvm.dbg.value(metadata i32 %2, metadata !15609, metadata !DIExpression()), !dbg !15610
  %4 = icmp eq i32 %2, 0, !dbg !15611
  %5 = icmp ugt i32 %1, %2, !dbg !15611
  %6 = or i1 %4, %5, !dbg !15611
  br i1 %6, label %11, label %7, !dbg !15611

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15613
  store i32 %1, i32* %8, align 4, !dbg !15614
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !15615
  store i32 %2, i32* %9, align 4, !dbg !15616
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15617
  tail call fastcc void @z_waitq_init.324(%union.anon* noundef %10) #28, !dbg !15618
  br label %11, !dbg !15619

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !15610
  ret i32 %12, !dbg !15620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.324(%union.anon* noundef %0) unnamed_addr #12 !dbg !15621 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15626, metadata !DIExpression()), !dbg !15627
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15628
  tail call fastcc void @sys_dlist_init.325(%struct._dnode* noundef %2) #28, !dbg !15629
  ret void, !dbg !15630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.325(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !15631 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15636, metadata !DIExpression()), !dbg !15637
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15638
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15639
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15640
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15641
  ret void, !dbg !15642
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !15643 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15647, metadata !DIExpression()), !dbg !15733
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.326, metadata !15734, metadata !DIExpression()) #26, !dbg !15741
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15743, !srcloc !15749
  call void @llvm.dbg.value(metadata i32 undef, metadata !15746, metadata !DIExpression()) #26, !dbg !15750
  call void @llvm.dbg.value(metadata i32 undef, metadata !15747, metadata !DIExpression()) #26, !dbg !15750
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #26, !dbg !15741
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.326) #27, !dbg !15751
  br i1 %3, label %5, label %4, !dbg !15754

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.329, i32 0, i32 0), i32 noundef 148) #27, !dbg !15755
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.326) #27, !dbg !15755
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.329, i32 0, i32 0), i32 noundef 148) #27, !dbg !15755
  unreachable, !dbg !15755

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15746, metadata !DIExpression()) #26, !dbg !15750
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #26, !dbg !15741
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.326) #27, !dbg !15757
  call void @llvm.dbg.value(metadata i32 undef, metadata !15648, metadata !DIExpression()), !dbg !15733
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15758
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15759
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15653, metadata !DIExpression()), !dbg !15733
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15760
  br i1 %8, label %11, label %9, !dbg !15762

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15763, metadata !DIExpression()), !dbg !15769
  call void @llvm.dbg.value(metadata i32 0, metadata !15768, metadata !DIExpression()), !dbg !15769
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15772
  store i32 0, i32* %10, align 4, !dbg !15773
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !15774
  br label %19, !dbg !15775

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15776
  %13 = load i32, i32* %12, align 4, !dbg !15776
  %14 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !15778
  %15 = load i32, i32* %14, align 4, !dbg !15778
  %16 = icmp ne i32 %13, %15, !dbg !15779
  %17 = zext i1 %16 to i32, !dbg !15780
  %18 = add i32 %13, %17, !dbg !15781
  store i32 %18, i32* %12, align 4, !dbg !15781
  br label %19

19:                                               ; preds = %11, %9
  %20 = extractvalue { i32, i32 } %2, 0, !dbg !15743
  call void @llvm.dbg.value(metadata i32 %20, metadata !15746, metadata !DIExpression()) #26, !dbg !15750
  call void @llvm.dbg.value(metadata i32 %20, metadata !15740, metadata !DIExpression()) #26, !dbg !15741
  call void @llvm.dbg.value(metadata i32 %20, metadata !15648, metadata !DIExpression()), !dbg !15733
  %21 = insertvalue [1 x i32] poison, i32 %20, 0, !dbg !15782
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.326, [1 x i32] %21) #27, !dbg !15782
  ret void, !dbg !15783
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15784 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15793, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15792, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata i32 0, metadata !15794, metadata !DIExpression()), !dbg !15797
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15798, !srcloc !15807
  call void @llvm.dbg.value(metadata i32 %4, metadata !15801, metadata !DIExpression()) #26, !dbg !15808
  %5 = icmp eq i32 %4, 0, !dbg !15809
  %6 = icmp eq i64 %3, 0, !dbg !15810
  %7 = select i1 %5, i1 true, i1 %6, !dbg !15810
  br i1 %7, label %9, label %8, !dbg !15810

8:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 122) #27, !dbg !15811
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.335, i32 0, i32 0)) #27, !dbg !15811
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 122) #27, !dbg !15811
  unreachable, !dbg !15811

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.326, metadata !15734, metadata !DIExpression()) #26, !dbg !15813
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15815, !srcloc !15749
  call void @llvm.dbg.value(metadata i32 undef, metadata !15746, metadata !DIExpression()) #26, !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !15747, metadata !DIExpression()) #26, !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #26, !dbg !15813
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.326) #27, !dbg !15818
  br i1 %11, label %13, label %12, !dbg !15819

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.329, i32 0, i32 0), i32 noundef 148) #27, !dbg !15820
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.326) #27, !dbg !15820
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.329, i32 0, i32 0), i32 noundef 148) #27, !dbg !15820
  unreachable, !dbg !15820

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %10, 0, !dbg !15815
  call void @llvm.dbg.value(metadata i32 %14, metadata !15746, metadata !DIExpression()) #26, !dbg !15817
  call void @llvm.dbg.value(metadata i32 %14, metadata !15740, metadata !DIExpression()) #26, !dbg !15813
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.326) #27, !dbg !15821
  call void @llvm.dbg.value(metadata i32 %14, metadata !15795, metadata !DIExpression()), !dbg !15797
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15822
  %16 = load i32, i32* %15, align 4, !dbg !15822
  %17 = icmp eq i32 %16, 0, !dbg !15822
  br i1 %17, label %23, label %18, !dbg !15824, !prof !15825

18:                                               ; preds = %13
  %19 = add i32 %16, -1, !dbg !15826
  store i32 %19, i32* %15, align 4, !dbg !15826
  call void @llvm.dbg.value(metadata i32 undef, metadata !15828, metadata !DIExpression()) #26, !dbg !15834
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.326, metadata !15833, metadata !DIExpression()) #26, !dbg !15834
  %20 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.326) #27, !dbg !15836
  br i1 %20, label %22, label %21, !dbg !15839

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.329, i32 0, i32 0), i32 noundef 194) #27, !dbg !15840
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.337, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.326) #27, !dbg !15840
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.329, i32 0, i32 0), i32 noundef 194) #27, !dbg !15840
  unreachable, !dbg !15840

22:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %14, metadata !15828, metadata !DIExpression()) #26, !dbg !15834
  call void @llvm.dbg.value(metadata i32 %14, metadata !15842, metadata !DIExpression()) #26, !dbg !15845
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !15847, !srcloc !15848
  call void @llvm.dbg.value(metadata i32 0, metadata !15794, metadata !DIExpression()), !dbg !15797
  br label %32, !dbg !15849

23:                                               ; preds = %13
  br i1 %6, label %24, label %28, !dbg !15850

24:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !15828, metadata !DIExpression()) #26, !dbg !15851
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.326, metadata !15833, metadata !DIExpression()) #26, !dbg !15851
  %25 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.326) #27, !dbg !15855
  br i1 %25, label %27, label %26, !dbg !15856

26:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.329, i32 0, i32 0), i32 noundef 194) #27, !dbg !15857
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.337, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.326) #27, !dbg !15857
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.329, i32 0, i32 0), i32 noundef 194) #27, !dbg !15857
  unreachable, !dbg !15857

27:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 %14, metadata !15828, metadata !DIExpression()) #26, !dbg !15851
  call void @llvm.dbg.value(metadata i32 %14, metadata !15842, metadata !DIExpression()) #26, !dbg !15858
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !15860, !srcloc !15848
  call void @llvm.dbg.value(metadata i32 -16, metadata !15794, metadata !DIExpression()), !dbg !15797
  br label %32, !dbg !15861

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15862
  %30 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !15863
  %31 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.326, [1 x i32] %30, %union.anon* noundef %29, [1 x i64] %1) #27, !dbg !15863
  call void @llvm.dbg.value(metadata i32 %31, metadata !15794, metadata !DIExpression()), !dbg !15797
  br label %32, !dbg !15864

32:                                               ; preds = %22, %27, %28
  %33 = phi i32 [ 0, %22 ], [ -16, %27 ], [ %31, %28 ], !dbg !15797
  call void @llvm.dbg.value(metadata i32 %33, metadata !15794, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.label(metadata !15796), !dbg !15865
  ret i32 %33, !dbg !15866
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !15867 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15869, metadata !DIExpression()), !dbg !15872
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.326, metadata !15734, metadata !DIExpression()) #26, !dbg !15873
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15875, !srcloc !15749
  call void @llvm.dbg.value(metadata i32 undef, metadata !15746, metadata !DIExpression()) #26, !dbg !15877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15747, metadata !DIExpression()) #26, !dbg !15877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #26, !dbg !15873
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.326) #27, !dbg !15878
  br i1 %3, label %5, label %4, !dbg !15879

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.329, i32 0, i32 0), i32 noundef 148) #27, !dbg !15880
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.326) #27, !dbg !15880
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.329, i32 0, i32 0), i32 noundef 148) #27, !dbg !15880
  unreachable, !dbg !15880

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15746, metadata !DIExpression()) #26, !dbg !15877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #26, !dbg !15873
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.326) #27, !dbg !15881
  call void @llvm.dbg.value(metadata i32 undef, metadata !15871, metadata !DIExpression()), !dbg !15872
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15882
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15870, metadata !DIExpression()), !dbg !15872
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15884
  br i1 %8, label %14, label %9, !dbg !15886

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %12, %9 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !15763, metadata !DIExpression()), !dbg !15887
  call void @llvm.dbg.value(metadata i32 -11, metadata !15768, metadata !DIExpression()), !dbg !15887
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 7, i32 1, !dbg !15889
  store i32 -11, i32* %11, align 4, !dbg !15890
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #27, !dbg !15891
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15882
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !15870, metadata !DIExpression()), !dbg !15872
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !15884
  br i1 %13, label %14, label %9, !dbg !15886, !llvm.loop !15892

14:                                               ; preds = %9, %5
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15875
  call void @llvm.dbg.value(metadata i32 %15, metadata !15746, metadata !DIExpression()) #26, !dbg !15877
  call void @llvm.dbg.value(metadata i32 %15, metadata !15740, metadata !DIExpression()) #26, !dbg !15873
  call void @llvm.dbg.value(metadata i32 %15, metadata !15871, metadata !DIExpression()), !dbg !15872
  %16 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15895
  store i32 0, i32* %16, align 4, !dbg !15896
  %17 = insertvalue [1 x i32] poison, i32 %15, 0, !dbg !15897
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.326, [1 x i32] %17) #27, !dbg !15897
  ret void, !dbg !15898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !15899 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15903, metadata !DIExpression()), !dbg !15907
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15904, metadata !DIExpression()), !dbg !15907
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15908
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15908
  %5 = load i8, i8* %4, align 2, !dbg !15908
  call void @llvm.dbg.value(metadata i8 %5, metadata !15905, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15907
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15909
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15909
  %8 = load i8, i8* %7, align 2, !dbg !15909
  call void @llvm.dbg.value(metadata i8 %8, metadata !15906, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15907
  %9 = icmp eq i8 %8, %5, !dbg !15910
  %10 = sext i8 %5 to i32, !dbg !15912
  %11 = sext i8 %8 to i32, !dbg !15912
  %12 = sub nsw i32 %11, %10, !dbg !15912
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15912
  ret i32 %13, !dbg !15913
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15914 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15918, metadata !DIExpression()), !dbg !15919
  %2 = tail call fastcc i32 @slice_time() #28, !dbg !15920
  %3 = icmp eq i32 %2, 0, !dbg !15922
  br i1 %3, label %8, label %4, !dbg !15923

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15924
  %6 = add i32 %5, %2, !dbg !15926
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15927
  %7 = tail call fastcc i32 @slice_time() #28, !dbg !15928
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15929
  br label %8, !dbg !15930

8:                                                ; preds = %4, %1
  ret void, !dbg !15931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #13 !dbg !15932 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15936, metadata !DIExpression()), !dbg !15938
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15939
  call void @llvm.dbg.value(metadata i32 %1, metadata !15937, metadata !DIExpression()), !dbg !15938
  ret i32 %1, !dbg !15940
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15945, metadata !DIExpression()), !dbg !15954
  call void @llvm.dbg.value(metadata i32 %1, metadata !15946, metadata !DIExpression()), !dbg !15954
  call void @llvm.dbg.value(metadata i32 0, metadata !15947, metadata !DIExpression()), !dbg !15955
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !15963
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15965, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !15972
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !15972
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !15963
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15973
  br i1 %4, label %6, label %5, !dbg !15976

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !15977
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15977
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !15977
  unreachable, !dbg !15977

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !15972
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !15963
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15979
  call void @llvm.dbg.value(metadata i32 undef, metadata !15953, metadata !DIExpression()), !dbg !15955
  call void @llvm.dbg.value(metadata i32 undef, metadata !15947, metadata !DIExpression()), !dbg !15955
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15980
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #28, !dbg !15983
  %8 = icmp sgt i32 %0, 0, !dbg !15984
  %9 = icmp sgt i32 %7, 2, !dbg !15986
  %10 = select i1 %9, i32 %7, i32 2, !dbg !15986
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !15986
  store i32 %11, i32* @slice_ticks, align 4, !dbg !15987
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15988
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !15989
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !15996
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !15996
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15998
  br i1 %12, label %14, label %13, !dbg !16001

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16002
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16002
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16002
  unreachable, !dbg !16002

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15965
  call void @llvm.dbg.value(metadata i32 %15, metadata !15968, metadata !DIExpression()) #26, !dbg !15972
  call void @llvm.dbg.value(metadata i32 %15, metadata !15962, metadata !DIExpression()) #26, !dbg !15963
  call void @llvm.dbg.value(metadata i32 %15, metadata !15953, metadata !DIExpression()), !dbg !15955
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !15996
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #26, !dbg !16007
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !16009, !srcloc !16010
  call void @llvm.dbg.value(metadata i32 1, metadata !15947, metadata !DIExpression()), !dbg !15955
  call void @llvm.dbg.value(metadata i32 undef, metadata !15947, metadata !DIExpression()), !dbg !15955
  ret void, !dbg !16011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !16012 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16014, metadata !DIExpression()), !dbg !16015
  call void @llvm.dbg.value(metadata i32 %0, metadata !16016, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16031
  call void @llvm.dbg.value(metadata i32 1000, metadata !16019, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata i32 10000, metadata !16020, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata i8 1, metadata !16021, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata i1 true, metadata !16022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16031
  call void @llvm.dbg.value(metadata i1 true, metadata !16023, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16031
  call void @llvm.dbg.value(metadata i8 0, metadata !16024, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata i1 true, metadata !16025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16031
  call void @llvm.dbg.value(metadata i1 false, metadata !16026, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16031
  call void @llvm.dbg.value(metadata i64 0, metadata !16027, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata i64 0, metadata !16027, metadata !DIExpression()), !dbg !16031
  %2 = mul i32 %0, 10, !dbg !16033
  ret i32 %2, !dbg !16039
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !16040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16042, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !16045
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16047, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !16049
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !16049
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !16045
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16050
  br i1 %3, label %5, label %4, !dbg !16051

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !16052
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16052
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !16052
  unreachable, !dbg !16052

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16047
  call void @llvm.dbg.value(metadata i32 %6, metadata !15968, metadata !DIExpression()) #26, !dbg !16049
  call void @llvm.dbg.value(metadata i32 %6, metadata !15962, metadata !DIExpression()) #26, !dbg !16045
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16053
  call void @llvm.dbg.value(metadata i32 %6, metadata !16043, metadata !DIExpression()), !dbg !16044
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16054
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16056
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !16057
  br i1 %9, label %10, label %14, !dbg !16058

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !16059
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !16061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !16061
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16063
  br i1 %11, label %13, label %12, !dbg !16064

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16065
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16065
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16065
  unreachable, !dbg !16065

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !15990, metadata !DIExpression()) #26, !dbg !16061
  call void @llvm.dbg.value(metadata i32 %6, metadata !16004, metadata !DIExpression()) #26, !dbg !16066
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !16068, !srcloc !16010
  br label %33, !dbg !16069

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16070
  %15 = tail call fastcc i32 @slice_time() #28, !dbg !16071
  %16 = icmp eq i32 %15, 0, !dbg !16071
  br i1 %16, label %27, label %17, !dbg !16073

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #28, !dbg !16074
  br i1 %18, label %19, label %27, !dbg !16075

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16076
  %21 = icmp sgt i32 %20, %0, !dbg !16079
  br i1 %21, label %25, label %22, !dbg !16080

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16081
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #28, !dbg !16081
  call void @llvm.dbg.value(metadata i32 %24, metadata !16043, metadata !DIExpression()), !dbg !16044
  br label %28, !dbg !16083

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !16084
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16084
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16086
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !16044
  call void @llvm.dbg.value(metadata i32 %29, metadata !16043, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !16088
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !16088
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16090
  br i1 %30, label %32, label %31, !dbg !16091

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16092
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16092
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16092
  unreachable, !dbg !16092

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !15990, metadata !DIExpression()) #26, !dbg !16088
  call void @llvm.dbg.value(metadata i32 %29, metadata !16004, metadata !DIExpression()) #26, !dbg !16093
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #26, !dbg !16095, !srcloc !16010
  br label %33, !dbg !16096

33:                                               ; preds = %32, %13
  ret void, !dbg !16096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #13 !dbg !16097 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16101, metadata !DIExpression()), !dbg !16103
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #28, !dbg !16104
  %3 = icmp eq i32 %2, 0, !dbg !16104
  br i1 %3, label %16, label %4, !dbg !16105

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #28, !dbg !16106
  br i1 %5, label %16, label %6, !dbg !16107

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16108
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !16108
  %9 = load i8, i8* %8, align 2, !dbg !16108
  %10 = sext i8 %9 to i32, !dbg !16109
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !16110
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #28, !dbg !16111
  br i1 %12, label %16, label %13, !dbg !16112

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #28, !dbg !16113
  %15 = xor i1 %14, true, !dbg !16114
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !16103
  call void @llvm.dbg.value(metadata i1 %17, metadata !16102, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16103
  ret i1 %17, !dbg !16115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !16116 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16120, metadata !DIExpression()), !dbg !16122
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16123
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16121, metadata !DIExpression()), !dbg !16122
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #28, !dbg !16124
  br i1 %3, label %5, label %4, !dbg !16126

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #28, !dbg !16127
  br label %5, !dbg !16129

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !16120, metadata !DIExpression()), !dbg !16122
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !16130
  ret i32 %6, !dbg !16131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16132 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16134, metadata !DIExpression()), !dbg !16136
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16137
  %3 = load i8, i8* %2, align 1, !dbg !16137
  call void @llvm.dbg.value(metadata i8 %3, metadata !16135, metadata !DIExpression()), !dbg !16136
  %4 = and i8 %3, 31, !dbg !16138
  %5 = icmp ne i8 %4, 0, !dbg !16139
  ret i1 %5, !dbg !16140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16141 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16143, metadata !DIExpression()), !dbg !16144
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16145
  br i1 %2, label %3, label %7, !dbg !16147

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16148, metadata !DIExpression()) #26, !dbg !16151
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16154
  %5 = load i8, i8* %4, align 1, !dbg !16155
  %6 = and i8 %5, 127, !dbg !16155
  store i8 %6, i8* %4, align 1, !dbg !16155
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16156, metadata !DIExpression()) #26, !dbg !16159
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16163
  br label %7, !dbg !16164

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16165, metadata !DIExpression()) #26, !dbg !16168
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16170
  %9 = load i8, i8* %8, align 1, !dbg !16171
  %10 = or i8 %9, -128, !dbg !16171
  store i8 %10, i8* %8, align 1, !dbg !16171
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16172, metadata !DIExpression()) #26, !dbg !16175
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16179, metadata !DIExpression()) #26, !dbg !16187
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16185, metadata !DIExpression()) #26, !dbg !16187
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16189
  br i1 %11, label %12, label %13, !dbg !16192

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 186) #27, !dbg !16193
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 186) #27, !dbg !16193
  unreachable, !dbg !16193

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.346(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16195
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !16186, metadata !DIExpression()) #26, !dbg !16187
  %15 = icmp eq %struct._dnode* %14, null, !dbg !16197
  br i1 %15, label %26, label %16, !dbg !16195

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !16186, metadata !DIExpression()) #26, !dbg !16187
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !16199
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !16186, metadata !DIExpression()) #26, !dbg !16187
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #27, !dbg !16200
  %20 = icmp sgt i32 %19, 0, !dbg !16203
  br i1 %20, label %21, label %23, !dbg !16204

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16205
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #27, !dbg !16207
  br label %28, !dbg !16208

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #27, !dbg !16197
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16186, metadata !DIExpression()) #26, !dbg !16187
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16197
  br i1 %25, label %26, label %16, !dbg !16195, !llvm.loop !16209

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16211
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #27, !dbg !16212
  br label %28, !dbg !16213

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16214
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !16215
  %31 = zext i1 %30 to i32, !dbg !16215
  tail call fastcc void @update_cache(i32 noundef %31) #28, !dbg !16216
  ret void, !dbg !16217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16220, metadata !DIExpression()), !dbg !16221
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #28, !dbg !16222
  ret i1 %2, !dbg !16223
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16224 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !16226, metadata !DIExpression()), !dbg !16228
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16227, metadata !DIExpression()), !dbg !16228
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !16229
  br i1 %3, label %4, label %5, !dbg !16232

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1139) #27, !dbg !16233
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1139) #27, !dbg !16233
  unreachable, !dbg !16233

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !16235
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #28, !dbg !16236
  ret void, !dbg !16237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !16238 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16240, metadata !DIExpression()), !dbg !16241
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16242
  ret i1 %2, !dbg !16243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.346(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !16244 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16248, metadata !DIExpression()), !dbg !16249
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.349(%struct._dnode* noundef %0) #28, !dbg !16250
  br i1 %2, label %6, label %3, !dbg !16250

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16251
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16251
  br label %6, !dbg !16250

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16250
  ret %struct._dnode* %7, !dbg !16252
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !16253 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16257, metadata !DIExpression()), !dbg !16261
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16258, metadata !DIExpression()), !dbg !16261
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16262
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16262
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16259, metadata !DIExpression()), !dbg !16261
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16263
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16264
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16265
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16266
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16267
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16268
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16269
  ret void, !dbg !16270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !16271 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16275, metadata !DIExpression()), !dbg !16277
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16276, metadata !DIExpression()), !dbg !16277
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16278
  br i1 %3, label %6, label %4, !dbg !16279

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #28, !dbg !16280
  br label %6, !dbg !16279

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16279
  ret %struct._dnode* %7, !dbg !16281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !16282 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16286, metadata !DIExpression()), !dbg !16289
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16287, metadata !DIExpression()), !dbg !16289
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16290
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16290
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16288, metadata !DIExpression()), !dbg !16289
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16291
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16292
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16293
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16294
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16295
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16296
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16297
  ret void, !dbg !16298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16301, metadata !DIExpression()), !dbg !16303
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16304
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16311, metadata !DIExpression()) #26, !dbg !16314
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16315
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16312, metadata !DIExpression()) #26, !dbg !16314
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !16316
  br i1 %4, label %13, label %5, !dbg !16318

5:                                                ; preds = %1
  %6 = icmp eq %struct.k_thread* %2, null, !dbg !16319
  br i1 %6, label %10, label %7, !dbg !16320

7:                                                ; preds = %5
  %8 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef nonnull %2) #27, !dbg !16321
  %9 = icmp eq i32 %8, 0, !dbg !16321
  br i1 %9, label %10, label %13, !dbg !16322

10:                                               ; preds = %7, %5
  %11 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %3) #27, !dbg !16323
  br i1 %11, label %12, label %13, !dbg !16326

12:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16327
  br label %13

13:                                               ; preds = %1, %7, %10, %12
  %14 = phi %struct.k_thread* [ %2, %12 ], [ %2, %7 ], [ %2, %1 ], [ %3, %10 ], !dbg !16314
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16311, metadata !DIExpression()) #26, !dbg !16314
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16329
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16330
  %17 = select i1 %15, %struct.k_thread* %16, %struct.k_thread* %14, !dbg !16330
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !16302, metadata !DIExpression()), !dbg !16303
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !16331, metadata !DIExpression()) #26, !dbg !16337
  call void @llvm.dbg.value(metadata i32 %0, metadata !16336, metadata !DIExpression()) #26, !dbg !16337
  %18 = icmp eq i32 %0, 0, !dbg !16340
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16342
  br i1 %18, label %20, label %33, !dbg !16343

20:                                               ; preds = %13
  %21 = icmp eq %struct.k_thread* %19, null, !dbg !16344
  br i1 %21, label %22, label %23, !dbg !16347

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 137) #27, !dbg !16348
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.348, i32 0, i32 0)) #27, !dbg !16348
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 137) #27, !dbg !16348
  unreachable, !dbg !16348

23:                                               ; preds = %20
  %24 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %19) #27, !dbg !16350
  br i1 %24, label %33, label %25, !dbg !16352

25:                                               ; preds = %23
  %26 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %17) #27, !dbg !16353
  br i1 %26, label %33, label %27, !dbg !16355

27:                                               ; preds = %25
  %28 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %19) #27, !dbg !16356
  %29 = icmp eq i32 %28, 0, !dbg !16356
  br i1 %29, label %30, label %33, !dbg !16358

30:                                               ; preds = %27
  %31 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %17) #27, !dbg !16359
  %32 = icmp eq i32 %31, 0, !dbg !16359
  br i1 %32, label %37, label %33, !dbg !16360

33:                                               ; preds = %13, %27, %25, %23, %30
  %34 = icmp eq %struct.k_thread* %17, %19, !dbg !16361
  br i1 %34, label %36, label %35, !dbg !16364

35:                                               ; preds = %33
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !16365
  br label %36, !dbg !16367

36:                                               ; preds = %35, %33
  tail call fastcc void @update_metairq_preempt(%struct.k_thread* noundef %17) #28, !dbg !16368
  br label %37, !dbg !16369

37:                                               ; preds = %30, %36
  %38 = phi %struct.k_thread* [ %17, %36 ], [ %19, %30 ], !dbg !16342
  store %struct.k_thread* %38, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16342
  ret void, !dbg !16370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #13 !dbg !16371 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16375, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16376, metadata !DIExpression()), !dbg !16378
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.346(%struct._dnode* noundef %0) #28, !dbg !16379
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16377, metadata !DIExpression()), !dbg !16378
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16376, metadata !DIExpression()), !dbg !16378
  ret %struct.k_thread* %3, !dbg !16380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_metairq(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16381 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16383, metadata !DIExpression()), !dbg !16384
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16385
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16385
  %4 = load i8, i8* %3, align 2, !dbg !16385
  %5 = icmp slt i8 %4, -15, !dbg !16386
  %6 = zext i1 %5 to i32, !dbg !16386
  ret i32 %6, !dbg !16387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16388 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16390, metadata !DIExpression()), !dbg !16391
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16392
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !16393
  %4 = xor i1 %3, true, !dbg !16394
  ret i1 %4, !dbg !16395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16396 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16398, metadata !DIExpression()), !dbg !16399
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16400
  %3 = load i16, i16* %2, align 2, !dbg !16400
  %4 = icmp ult i16 %3, 128, !dbg !16401
  %5 = zext i1 %4 to i32, !dbg !16401
  ret i32 %5, !dbg !16402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @update_metairq_preempt(%struct.k_thread* noundef %0) unnamed_addr #14 !dbg !16403 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16405, metadata !DIExpression()), !dbg !16406
  %2 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %0) #28, !dbg !16407
  %3 = icmp eq i32 %2, 0, !dbg !16407
  br i1 %3, label %11, label %4, !dbg !16409

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16410
  %6 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %5) #28, !dbg !16411
  %7 = icmp eq i32 %6, 0, !dbg !16411
  br i1 %7, label %8, label %15, !dbg !16412

8:                                                ; preds = %4
  %9 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %5) #28, !dbg !16413
  %10 = icmp eq i32 %9, 0, !dbg !16413
  br i1 %10, label %13, label %15, !dbg !16414

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #28, !dbg !16415
  br i1 %12, label %15, label %13, !dbg !16417

13:                                               ; preds = %11, %8
  %14 = phi %struct.k_thread* [ %5, %8 ], [ null, %11 ]
  store %struct.k_thread* %14, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16418
  br label %15, !dbg !16419

15:                                               ; preds = %13, %4, %8, %11
  ret void, !dbg !16419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16420 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16426, metadata !DIExpression()), !dbg !16427
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16428
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #28, !dbg !16429
  %4 = xor i1 %3, true, !dbg !16430
  ret i1 %4, !dbg !16431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16432 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16438, metadata !DIExpression()), !dbg !16439
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16440
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16440
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16441
  ret i1 %4, !dbg !16442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !16443 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16445, metadata !DIExpression()), !dbg !16447
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16446, metadata !DIExpression()), !dbg !16447
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16448
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16448
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16449
  br i1 %5, label %9, label %6, !dbg !16450

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16451
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16451
  br label %9, !dbg !16450

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16450
  ret %struct._dnode* %10, !dbg !16452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.349(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !16453 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16457, metadata !DIExpression()), !dbg !16458
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16459
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16459
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16460
  ret i1 %4, !dbg !16461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !16462 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16466, metadata !DIExpression()), !dbg !16469
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16470
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16470
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16467, metadata !DIExpression()), !dbg !16469
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16471
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16471
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16468, metadata !DIExpression()), !dbg !16469
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16472
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16473
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16474
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16475
  tail call fastcc void @sys_dnode_init.350(%struct._dnode* noundef %0) #28, !dbg !16476
  ret void, !dbg !16477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.350(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !16478 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16480, metadata !DIExpression()), !dbg !16481
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16482
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16483
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16484
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16485
  ret void, !dbg !16486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !16487 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16491, metadata !DIExpression()), !dbg !16493
  call void @llvm.dbg.value(metadata i32 %1, metadata !16492, metadata !DIExpression()), !dbg !16493
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16494
  %4 = load i8, i8* %3, align 1, !dbg !16494
  %5 = zext i8 %4 to i32, !dbg !16495
  %6 = and i32 %5, %1, !dbg !16496
  %7 = icmp ne i32 %6, 0, !dbg !16497
  ret i1 %7, !dbg !16498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16503, metadata !DIExpression()), !dbg !16505
  call void @llvm.dbg.value(metadata i32 %1, metadata !16504, metadata !DIExpression()), !dbg !16505
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #28, !dbg !16506
  ret i1 %3, !dbg !16507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16508 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16510, metadata !DIExpression()), !dbg !16512
  call void @llvm.dbg.value(metadata i32 %1, metadata !16511, metadata !DIExpression()), !dbg !16512
  %3 = icmp slt i32 %0, %1, !dbg !16513
  ret i1 %3, !dbg !16514
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16515 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16517, metadata !DIExpression()), !dbg !16521
  call void @llvm.dbg.value(metadata i32 0, metadata !16518, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !16523
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16525, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !16527
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !16527
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !16523
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16528
  br i1 %3, label %5, label %4, !dbg !16529

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !16530
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16530
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !16530
  unreachable, !dbg !16530

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !16527
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !16523
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16531
  call void @llvm.dbg.value(metadata i32 undef, metadata !16520, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata i32 undef, metadata !16518, metadata !DIExpression()), !dbg !16522
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16532
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !16537
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !16537
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16539
  br i1 %6, label %8, label %7, !dbg !16540

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16541
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16541
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16541
  unreachable, !dbg !16541

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16525
  call void @llvm.dbg.value(metadata i32 %9, metadata !15968, metadata !DIExpression()) #26, !dbg !16527
  call void @llvm.dbg.value(metadata i32 %9, metadata !15962, metadata !DIExpression()) #26, !dbg !16523
  call void @llvm.dbg.value(metadata i32 %9, metadata !16520, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !16537
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #26, !dbg !16542
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16544, !srcloc !16010
  call void @llvm.dbg.value(metadata i32 1, metadata !16518, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata i32 undef, metadata !16518, metadata !DIExpression()), !dbg !16522
  ret void, !dbg !16545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16548, metadata !DIExpression()), !dbg !16549
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16550
  br i1 %2, label %27, label %3, !dbg !16552

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #28, !dbg !16553
  br i1 %4, label %5, label %27, !dbg !16554

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16165, metadata !DIExpression()) #26, !dbg !16555
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16558
  %7 = load i8, i8* %6, align 1, !dbg !16559
  %8 = or i8 %7, -128, !dbg !16559
  store i8 %8, i8* %6, align 1, !dbg !16559
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16172, metadata !DIExpression()) #26, !dbg !16560
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16179, metadata !DIExpression()) #26, !dbg !16562
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16185, metadata !DIExpression()) #26, !dbg !16562
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16564
  br i1 %9, label %10, label %11, !dbg !16565

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 186) #27, !dbg !16566
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 186) #27, !dbg !16566
  unreachable, !dbg !16566

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.346(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16567
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !16186, metadata !DIExpression()) #26, !dbg !16562
  %13 = icmp eq %struct._dnode* %12, null, !dbg !16568
  br i1 %13, label %24, label %14, !dbg !16567

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !16186, metadata !DIExpression()) #26, !dbg !16562
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !16569
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !16186, metadata !DIExpression()) #26, !dbg !16562
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #27, !dbg !16570
  %18 = icmp sgt i32 %17, 0, !dbg !16571
  br i1 %18, label %19, label %21, !dbg !16572

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16573
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #27, !dbg !16574
  br label %26, !dbg !16575

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #27, !dbg !16568
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !16186, metadata !DIExpression()) #26, !dbg !16562
  %23 = icmp eq %struct._dnode* %22, null, !dbg !16568
  br i1 %23, label %24, label %14, !dbg !16567, !llvm.loop !16576

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16578
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #27, !dbg !16579
  br label %26, !dbg !16580

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #28, !dbg !16581
  br label %27, !dbg !16582

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !16583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16584 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16586, metadata !DIExpression()), !dbg !16587
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #28, !dbg !16588
  br i1 %2, label %6, label %3, !dbg !16589

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #28, !dbg !16590
  %5 = xor i1 %4, true, !dbg !16589
  br label %6, !dbg !16589

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16592 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16594, metadata !DIExpression()), !dbg !16598
  call void @llvm.dbg.value(metadata i32 0, metadata !16595, metadata !DIExpression()), !dbg !16599
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !16600
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16602, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !16604
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !16604
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !16600
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16605
  br i1 %3, label %5, label %4, !dbg !16606

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !16607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !16607
  unreachable, !dbg !16607

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !16604
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !16600
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !16597, metadata !DIExpression()), !dbg !16599
  call void @llvm.dbg.value(metadata i32 undef, metadata !16595, metadata !DIExpression()), !dbg !16599
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #28, !dbg !16609
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !16612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !16612
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16614
  br i1 %6, label %8, label %7, !dbg !16615

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16616
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16616
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16616
  unreachable, !dbg !16616

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16602
  call void @llvm.dbg.value(metadata i32 %9, metadata !15968, metadata !DIExpression()) #26, !dbg !16604
  call void @llvm.dbg.value(metadata i32 %9, metadata !15962, metadata !DIExpression()) #26, !dbg !16600
  call void @llvm.dbg.value(metadata i32 %9, metadata !16597, metadata !DIExpression()), !dbg !16599
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !16612
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #26, !dbg !16617
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16619, !srcloc !16010
  call void @llvm.dbg.value(metadata i32 1, metadata !16595, metadata !DIExpression()), !dbg !16599
  call void @llvm.dbg.value(metadata i32 undef, metadata !16595, metadata !DIExpression()), !dbg !16599
  ret void, !dbg !16620
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16621 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16623, metadata !DIExpression()), !dbg !16625
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !16626
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16628, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !16630
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !16630
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !16626
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16631
  br i1 %3, label %5, label %4, !dbg !16632

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !16633
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16633
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !16633
  unreachable, !dbg !16633

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16628
  call void @llvm.dbg.value(metadata i32 %6, metadata !15968, metadata !DIExpression()) #26, !dbg !16630
  call void @llvm.dbg.value(metadata i32 %6, metadata !15962, metadata !DIExpression()) #26, !dbg !16626
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16634
  call void @llvm.dbg.value(metadata i32 %6, metadata !16624, metadata !DIExpression()), !dbg !16625
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #28, !dbg !16635
  br i1 %7, label %8, label %12, !dbg !16637

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !16638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !16638
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16641
  br i1 %9, label %11, label %10, !dbg !16642

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16643
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16643
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16643
  unreachable, !dbg !16643

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15990, metadata !DIExpression()) #26, !dbg !16638
  call void @llvm.dbg.value(metadata i32 %6, metadata !16004, metadata !DIExpression()) #26, !dbg !16644
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !16646, !srcloc !16010
  br label %14, !dbg !16647

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.355(%struct.k_thread* noundef %0) #28, !dbg !16648
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16649
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16650
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #28, !dbg !16650
  br label %14, !dbg !16651

14:                                               ; preds = %12, %11
  ret void, !dbg !16651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16654, metadata !DIExpression()), !dbg !16655
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16656
  %3 = load i8, i8* %2, align 1, !dbg !16656
  %4 = and i8 %3, 4, !dbg !16657
  %5 = icmp eq i8 %4, 0, !dbg !16658
  ret i1 %5, !dbg !16659
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.355(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16660 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16662, metadata !DIExpression()), !dbg !16663
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16664
  %3 = load i8, i8* %2, align 1, !dbg !16665
  %4 = and i8 %3, -5, !dbg !16665
  store i8 %4, i8* %2, align 1, !dbg !16665
  ret void, !dbg !16666
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16667 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16670, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16669, metadata !DIExpression()), !dbg !16671
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #28, !dbg !16672
  br i1 %4, label %5, label %12, !dbg !16674

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #28, !dbg !16675
  br i1 %6, label %7, label %12, !dbg !16676

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16677, metadata !DIExpression()) #26, !dbg !16683
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16682, metadata !DIExpression()) #26, !dbg !16683
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16686, metadata !DIExpression()) #26, !dbg !16691
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !16693
  br i1 %8, label %10, label %9, !dbg !16696

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 225) #27, !dbg !16697
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !16697
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 225) #27, !dbg !16697
  unreachable, !dbg !16697

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !16677, metadata !DIExpression()) #26, !dbg !16683
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16699
  br label %16, !dbg !16700

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !16701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15995, metadata !DIExpression()) #26, !dbg !16701
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !16704
  br i1 %13, label %15, label %14, !dbg !16705

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16706
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !16706
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16706
  unreachable, !dbg !16706

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !15990, metadata !DIExpression()) #26, !dbg !16701
  call void @llvm.dbg.value(metadata i32 %3, metadata !16004, metadata !DIExpression()) #26, !dbg !16707
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16709, !srcloc !16010
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !16710
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16711 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16715, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata i32 %0, metadata !16717, metadata !DIExpression()), !dbg !16722
  %2 = icmp eq i32 %0, 0, !dbg !16724
  br i1 %2, label %3, label %6, !dbg !16725

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !16726, !srcloc !16733
  call void @llvm.dbg.value(metadata i32 %4, metadata !16729, metadata !DIExpression()) #26, !dbg !16734
  %5 = icmp eq i32 %4, 0, !dbg !16735
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16716
  ret i1 %7, !dbg !16736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #13 !dbg !16737 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16740
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16739, metadata !DIExpression()), !dbg !16741
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16742
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16743
  ret i1 %3, !dbg !16744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16747, metadata !DIExpression()), !dbg !16749
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16750
  call void @llvm.dbg.value(metadata i32 %2, metadata !16748, metadata !DIExpression()), !dbg !16749
  ret i32 %2, !dbg !16751
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16752 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16754, metadata !DIExpression()), !dbg !16758
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !16759
  call void @llvm.dbg.value(metadata i32 0, metadata !16755, metadata !DIExpression()), !dbg !16760
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !16761
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16763, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !16765
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !16765
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !16761
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16766
  br i1 %4, label %6, label %5, !dbg !16767

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !16768
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16768
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !16768
  unreachable, !dbg !16768

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16763
  call void @llvm.dbg.value(metadata i32 %7, metadata !15968, metadata !DIExpression()) #26, !dbg !16765
  call void @llvm.dbg.value(metadata i32 %7, metadata !15962, metadata !DIExpression()) #26, !dbg !16761
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16769
  call void @llvm.dbg.value(metadata i32 %7, metadata !16757, metadata !DIExpression()), !dbg !16760
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()), !dbg !16760
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16770
  br i1 %8, label %9, label %13, !dbg !16774

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16148, metadata !DIExpression()) #26, !dbg !16775
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16778
  %11 = load i8, i8* %10, align 1, !dbg !16779
  %12 = and i8 %11, 127, !dbg !16779
  store i8 %12, i8* %10, align 1, !dbg !16779
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16156, metadata !DIExpression()) #26, !dbg !16780
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16782
  br label %13, !dbg !16783

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #28, !dbg !16784
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16785
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16786
  %16 = zext i1 %15 to i32, !dbg !16786
  tail call fastcc void @update_cache(i32 noundef %16) #28, !dbg !16787
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !16788
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !16788
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16790
  br i1 %17, label %19, label %18, !dbg !16791

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16792
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16792
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16792
  unreachable, !dbg !16792

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !15990, metadata !DIExpression()) #26, !dbg !16788
  call void @llvm.dbg.value(metadata i32 %7, metadata !16004, metadata !DIExpression()) #26, !dbg !16793
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #26, !dbg !16795, !srcloc !16010
  call void @llvm.dbg.value(metadata i32 1, metadata !16755, metadata !DIExpression()), !dbg !16760
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()), !dbg !16760
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16796
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !16798
  br i1 %21, label %22, label %23, !dbg !16799

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !16800
  br label %23, !dbg !16802

23:                                               ; preds = %22, %19
  ret void, !dbg !16803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16804 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16806, metadata !DIExpression()), !dbg !16807
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16808
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16809
  ret i32 %3, !dbg !16810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16811 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16813, metadata !DIExpression()), !dbg !16814
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16815
  %3 = load i8, i8* %2, align 1, !dbg !16816
  %4 = or i8 %3, 16, !dbg !16816
  store i8 %4, i8* %2, align 1, !dbg !16816
  ret void, !dbg !16817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16818 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16819, !srcloc !15971
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16819
  call void @llvm.dbg.value(metadata i32 %2, metadata !15968, metadata !DIExpression()) #26, !dbg !16821
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !16821
  tail call void @z_reschedule_irqlock(i32 noundef %2) #28, !dbg !16822
  ret void, !dbg !16823
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16826, metadata !DIExpression()), !dbg !16827
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #28, !dbg !16828
  br i1 %2, label %3, label %5, !dbg !16830

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #28, !dbg !16831
  br label %6, !dbg !16833

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !16004, metadata !DIExpression()) #26, !dbg !16834
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #26, !dbg !16837, !srcloc !16010
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16838
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16839 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16841, metadata !DIExpression()), !dbg !16843
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !16844
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16846, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !16848
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !16848
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !16844
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16849
  br i1 %3, label %5, label %4, !dbg !16850

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !16851
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16851
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !16851
  unreachable, !dbg !16851

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16846
  call void @llvm.dbg.value(metadata i32 %6, metadata !15968, metadata !DIExpression()) #26, !dbg !16848
  call void @llvm.dbg.value(metadata i32 %6, metadata !15962, metadata !DIExpression()) #26, !dbg !16844
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16852
  call void @llvm.dbg.value(metadata i32 %6, metadata !16842, metadata !DIExpression()), !dbg !16843
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #28, !dbg !16853
  br i1 %7, label %12, label %8, !dbg !16855

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !16856
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !16856
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16859
  br i1 %9, label %11, label %10, !dbg !16860

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16861
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16861
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16861
  unreachable, !dbg !16861

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15990, metadata !DIExpression()) #26, !dbg !16856
  call void @llvm.dbg.value(metadata i32 %6, metadata !16004, metadata !DIExpression()) #26, !dbg !16862
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !16864, !srcloc !16010
  br label %14, !dbg !16865

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #28, !dbg !16866
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16867
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16868
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #28, !dbg !16868
  br label %14, !dbg !16869

14:                                               ; preds = %12, %11
  ret void, !dbg !16869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16872, metadata !DIExpression()), !dbg !16873
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16874
  %3 = load i8, i8* %2, align 1, !dbg !16874
  %4 = and i8 %3, 16, !dbg !16875
  %5 = icmp ne i8 %4, 0, !dbg !16876
  ret i1 %5, !dbg !16877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16878 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16880, metadata !DIExpression()), !dbg !16881
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16882
  %3 = load i8, i8* %2, align 1, !dbg !16883
  %4 = and i8 %3, -17, !dbg !16883
  store i8 %4, i8* %2, align 1, !dbg !16883
  ret void, !dbg !16884
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16885 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16895, metadata !DIExpression()), !dbg !16899
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16893, metadata !DIExpression()), !dbg !16899
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16894, metadata !DIExpression()), !dbg !16899
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16900
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !16900
  br i1 %5, label %9, label %6, !dbg !16900

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #28, !dbg !16900
  br i1 %7, label %9, label %8, !dbg !16903

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.358, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 773) #27, !dbg !16904
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 773) #27, !dbg !16904
  unreachable, !dbg !16904

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !16896, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !16907
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16909, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !16911
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !16911
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !16907
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16912
  br i1 %11, label %13, label %12, !dbg !16913

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !16914
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16914
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !16914
  unreachable, !dbg !16914

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !16911
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !16907
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16915
  call void @llvm.dbg.value(metadata i32 undef, metadata !16898, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.value(metadata i32 undef, metadata !16896, metadata !DIExpression()), !dbg !16906
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #28, !dbg !16916
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !16919
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !16919
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16921
  br i1 %14, label %16, label %15, !dbg !16922

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16923
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16923
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !16923
  unreachable, !dbg !16923

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !16909
  call void @llvm.dbg.value(metadata i32 %17, metadata !15968, metadata !DIExpression()) #26, !dbg !16911
  call void @llvm.dbg.value(metadata i32 %17, metadata !15962, metadata !DIExpression()) #26, !dbg !16907
  call void @llvm.dbg.value(metadata i32 %17, metadata !16898, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !16919
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #26, !dbg !16924
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #26, !dbg !16926, !srcloc !16010
  call void @llvm.dbg.value(metadata i32 1, metadata !16896, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.value(metadata i32 undef, metadata !16896, metadata !DIExpression()), !dbg !16906
  ret void, !dbg !16927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16928 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16930, metadata !DIExpression()), !dbg !16931
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16932
  %3 = load i8, i8* %2, align 1, !dbg !16932
  %4 = and i8 %3, 1, !dbg !16933
  %5 = icmp ne i8 %4, 0, !dbg !16934
  ret i1 %5, !dbg !16935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16936 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16940, metadata !DIExpression()), !dbg !16941
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16938, metadata !DIExpression()), !dbg !16941
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16939, metadata !DIExpression()), !dbg !16941
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #28, !dbg !16942
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #28, !dbg !16943
  ret void, !dbg !16944
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16945 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16949, metadata !DIExpression()), !dbg !16951
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16950, metadata !DIExpression()), !dbg !16951
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #28, !dbg !16952
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #28, !dbg !16953
  %3 = icmp eq %union.anon* %1, null, !dbg !16954
  br i1 %3, label %24, label %4, !dbg !16956

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16957
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16959
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16960
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !16179, metadata !DIExpression()) #26, !dbg !16961
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16185, metadata !DIExpression()) #26, !dbg !16961
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16963
  br i1 %7, label %8, label %9, !dbg !16964

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 186) #27, !dbg !16965
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 186) #27, !dbg !16965
  unreachable, !dbg !16965

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.346(%struct._dnode* noundef nonnull %6) #27, !dbg !16966
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16186, metadata !DIExpression()) #26, !dbg !16961
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16967
  br i1 %11, label %22, label %12, !dbg !16966

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !16186, metadata !DIExpression()) #26, !dbg !16961
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16968
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16186, metadata !DIExpression()) #26, !dbg !16961
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #27, !dbg !16969
  %16 = icmp sgt i32 %15, 0, !dbg !16970
  br i1 %16, label %17, label %19, !dbg !16971

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16972
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !16973
  br label %24, !dbg !16974

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #27, !dbg !16967
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16186, metadata !DIExpression()) #26, !dbg !16961
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16967
  br i1 %21, label %22, label %12, !dbg !16966, !llvm.loop !16975

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16977
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #27, !dbg !16978
  br label %24, !dbg !16979

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !16980
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16981 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16986, metadata !DIExpression()), !dbg !16987
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16985, metadata !DIExpression()), !dbg !16987
  %4 = icmp eq i64 %3, -1, !dbg !16988
  br i1 %4, label %6, label %5, !dbg !16990

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.359(%struct.k_thread* noundef %0, [1 x i64] %1) #28, !dbg !16991
  br label %6, !dbg !16993

6:                                                ; preds = %5, %2
  ret void, !dbg !16994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.359(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16995 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16998, metadata !DIExpression()), !dbg !16999
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16997, metadata !DIExpression()), !dbg !16999
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17000
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !17001
  ret void, !dbg !17002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !17003 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17005, metadata !DIExpression()), !dbg !17013
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !17014
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !17014
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17006, metadata !DIExpression()), !dbg !17013
  call void @llvm.dbg.value(metadata i32 0, metadata !17007, metadata !DIExpression()), !dbg !17015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !17016
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17018, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17020
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !17020
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17016
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17021
  br i1 %5, label %7, label %6, !dbg !17022

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17023
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17023
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17023
  unreachable, !dbg !17023

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17020
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17016
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17024
  call void @llvm.dbg.value(metadata i32 undef, metadata !17009, metadata !DIExpression()), !dbg !17015
  call void @llvm.dbg.value(metadata i32 undef, metadata !17007, metadata !DIExpression()), !dbg !17015
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !17025
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !17026
  %10 = load i8, i8* %9, align 1, !dbg !17026
  %11 = and i8 %10, 40, !dbg !17027
  %12 = icmp eq i8 %11, 0, !dbg !17027
  call void @llvm.dbg.value(metadata i1 %12, metadata !17010, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17028
  br i1 %12, label %13, label %20, !dbg !17029

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !17030
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !17030
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !17030
  %17 = icmp eq %union.anon* %16, null, !dbg !17034
  br i1 %17, label %19, label %18, !dbg !17035

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #28, !dbg !17036
  br label %19, !dbg !17038

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.355(%struct.k_thread* noundef nonnull %3) #28, !dbg !17039
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #28, !dbg !17040
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #28, !dbg !17041
  br label %20, !dbg !17042

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17043
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !17043
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17045
  br i1 %21, label %23, label %22, !dbg !17046

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17047
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17047
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17047
  unreachable, !dbg !17047

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !17018
  call void @llvm.dbg.value(metadata i32 %24, metadata !15968, metadata !DIExpression()) #26, !dbg !17020
  call void @llvm.dbg.value(metadata i32 %24, metadata !15962, metadata !DIExpression()) #26, !dbg !17016
  call void @llvm.dbg.value(metadata i32 %24, metadata !17009, metadata !DIExpression()), !dbg !17015
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17043
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #26, !dbg !17048
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #26, !dbg !17050, !srcloc !16010
  call void @llvm.dbg.value(metadata i32 1, metadata !17007, metadata !DIExpression()), !dbg !17015
  call void @llvm.dbg.value(metadata i32 undef, metadata !17007, metadata !DIExpression()), !dbg !17015
  ret void, !dbg !17051
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17052 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17054, metadata !DIExpression()), !dbg !17055
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #28, !dbg !17056
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !17057
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #28, !dbg !17058
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17059
  store %union.anon* null, %union.anon** %3, align 8, !dbg !17060
  ret void, !dbg !17061
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !17062 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17066, metadata !DIExpression()), !dbg !17067
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17068
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !17068
  %4 = icmp eq %union.anon* %3, null, !dbg !17068
  br i1 %4, label %5, label %6, !dbg !17071

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 726) #27, !dbg !17072
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 726) #27, !dbg !17072
  unreachable, !dbg !17072

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !17074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !17075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17077, metadata !DIExpression()), !dbg !17078
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17079
  %3 = load i8, i8* %2, align 1, !dbg !17080
  %4 = and i8 %3, -3, !dbg !17080
  store i8 %4, i8* %2, align 1, !dbg !17080
  ret void, !dbg !17081
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17082 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17084, metadata !DIExpression()), !dbg !17085
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !17086
  br i1 %2, label %3, label %7, !dbg !17088

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16148, metadata !DIExpression()) #26, !dbg !17089
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17092
  %5 = load i8, i8* %4, align 1, !dbg !17093
  %6 = and i8 %5, 127, !dbg !17093
  store i8 %6, i8* %4, align 1, !dbg !17093
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16156, metadata !DIExpression()) #26, !dbg !17094
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17096
  br label %7, !dbg !17097

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17098
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !17099
  %10 = zext i1 %9 to i32, !dbg !17099
  tail call fastcc void @update_cache(i32 noundef %10) #28, !dbg !17100
  ret void, !dbg !17101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !17102 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17104, metadata !DIExpression()), !dbg !17105
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17106
  %3 = load i8, i8* %2, align 1, !dbg !17107
  %4 = or i8 %3, 2, !dbg !17107
  store i8 %4, i8* %2, align 1, !dbg !17107
  ret void, !dbg !17108
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #25 !dbg !17109 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17111, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i32 0, metadata !17112, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !17117
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17119, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17121
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !17121
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17117
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17122
  br i1 %3, label %5, label %4, !dbg !17123

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17124
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17124
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17124
  unreachable, !dbg !17124

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17121
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17117
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17125
  call void @llvm.dbg.value(metadata i32 undef, metadata !17114, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()), !dbg !17116
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #28, !dbg !17126
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17129
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !17129
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17131
  br i1 %6, label %8, label %7, !dbg !17132

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17133
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17133
  unreachable, !dbg !17133

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17119
  call void @llvm.dbg.value(metadata i32 %9, metadata !15968, metadata !DIExpression()) #26, !dbg !17121
  call void @llvm.dbg.value(metadata i32 %9, metadata !15962, metadata !DIExpression()) #26, !dbg !17117
  call void @llvm.dbg.value(metadata i32 %9, metadata !17114, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17129
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #26, !dbg !17134
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !17136, !srcloc !16010
  call void @llvm.dbg.value(metadata i32 1, metadata !17112, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()), !dbg !17116
  ret void, !dbg !17137
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17138 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17144, metadata !DIExpression()), !dbg !17149
  call void @llvm.dbg.value(metadata i32 %0, metadata !17142, metadata !DIExpression()), !dbg !17149
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !17143, metadata !DIExpression()), !dbg !17149
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17150
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #28, !dbg !17151
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17152
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17153
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #28, !dbg !17154
  call void @llvm.dbg.value(metadata i32 %6, metadata !17145, metadata !DIExpression()), !dbg !17149
  call void @llvm.dbg.value(metadata i32 0, metadata !17146, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !17156
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17158, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17160
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !17160
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17156
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17161
  br i1 %8, label %10, label %9, !dbg !17162

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17163
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17163
  unreachable, !dbg !17163

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17160
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17156
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17164
  call void @llvm.dbg.value(metadata i32 undef, metadata !17148, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i32 undef, metadata !17146, metadata !DIExpression()), !dbg !17155
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !17165
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17169
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !17170
  br i1 %13, label %14, label %15, !dbg !17171

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !17172
  br label %15, !dbg !17174

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !17175
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17177
  br i1 %16, label %18, label %17, !dbg !17178

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17179
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17179
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17179
  unreachable, !dbg !17179

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !17158
  call void @llvm.dbg.value(metadata i32 %19, metadata !15968, metadata !DIExpression()) #26, !dbg !17160
  call void @llvm.dbg.value(metadata i32 %19, metadata !15962, metadata !DIExpression()) #26, !dbg !17156
  call void @llvm.dbg.value(metadata i32 %19, metadata !17148, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #26, !dbg !17180
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #26, !dbg !17182, !srcloc !16010
  call void @llvm.dbg.value(metadata i32 1, metadata !17146, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i32 undef, metadata !17146, metadata !DIExpression()), !dbg !17155
  ret i32 %6, !dbg !17183
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17184 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17189, metadata !DIExpression()), !dbg !17192
  call void @llvm.dbg.value(metadata i64 undef, metadata !17191, metadata !DIExpression()), !dbg !17192
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17188, metadata !DIExpression()), !dbg !17192
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17190, metadata !DIExpression()), !dbg !17192
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17193
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17194
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !17195
  br i1 %6, label %7, label %8, !dbg !17198

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 846) #27, !dbg !17199
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 846) #27, !dbg !17199
  unreachable, !dbg !17199

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !17201
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17203, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17205
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !17205
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17201
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17206
  br i1 %10, label %12, label %11, !dbg !17207

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17208
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17208
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17208
  unreachable, !dbg !17208

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17205
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17201
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17209
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17210
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #28, !dbg !17211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16686, metadata !DIExpression()) #26, !dbg !17212
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !17214
  br i1 %14, label %16, label %15, !dbg !17215

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 225) #27, !dbg !17216
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !17216
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 225) #27, !dbg !17216
  unreachable, !dbg !17216

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !16677, metadata !DIExpression()) #26, !dbg !17217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16682, metadata !DIExpression()) #26, !dbg !17217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16686, metadata !DIExpression()) #26, !dbg !17219
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17221
  br i1 %17, label %19, label %18, !dbg !17222

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 225) #27, !dbg !17223
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17223
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 225) #27, !dbg !17223
  unreachable, !dbg !17223

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !16677, metadata !DIExpression()) #26, !dbg !17217
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #27, !dbg !17224
  ret i32 %21, !dbg !17225
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17226 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17230, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17231, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.value(metadata i32 0, metadata !17232, metadata !DIExpression()), !dbg !17236
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !17237
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17239, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17241
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !17241
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17237
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17242
  br i1 %3, label %5, label %4, !dbg !17243

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17244
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17244
  unreachable, !dbg !17244

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17241
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17237
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17245
  call void @llvm.dbg.value(metadata i32 undef, metadata !17234, metadata !DIExpression()), !dbg !17236
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17231, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.value(metadata i32 undef, metadata !17232, metadata !DIExpression()), !dbg !17236
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #28, !dbg !17246
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17231, metadata !DIExpression()), !dbg !17235
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17249
  br i1 %8, label %10, label %9, !dbg !17251

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17252
  br label %10, !dbg !17254

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17255
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !17255
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17257
  br i1 %11, label %13, label %12, !dbg !17258

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17259
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17259
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17259
  unreachable, !dbg !17259

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17239
  call void @llvm.dbg.value(metadata i32 %14, metadata !15968, metadata !DIExpression()) #26, !dbg !17241
  call void @llvm.dbg.value(metadata i32 %14, metadata !15962, metadata !DIExpression()) #26, !dbg !17237
  call void @llvm.dbg.value(metadata i32 %14, metadata !17234, metadata !DIExpression()), !dbg !17236
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17255
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #26, !dbg !17260
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !17262, !srcloc !16010
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17231, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.value(metadata i32 undef, metadata !17232, metadata !DIExpression()), !dbg !17236
  ret %struct.k_thread* %7, !dbg !17263
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17264 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17266, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17267, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.value(metadata i32 0, metadata !17268, metadata !DIExpression()), !dbg !17272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !17273
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17275, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17273
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17278
  br i1 %3, label %5, label %4, !dbg !17279

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17280
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17280
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17280
  unreachable, !dbg !17280

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17273
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17281
  call void @llvm.dbg.value(metadata i32 undef, metadata !17270, metadata !DIExpression()), !dbg !17272
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17267, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.value(metadata i32 undef, metadata !17268, metadata !DIExpression()), !dbg !17272
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #28, !dbg !17282
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17267, metadata !DIExpression()), !dbg !17271
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17285
  br i1 %8, label %11, label %9, !dbg !17287

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17288
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17290
  br label %11, !dbg !17291

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17292
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !17292
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17294
  br i1 %12, label %14, label %13, !dbg !17295

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17296
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17296
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17296
  unreachable, !dbg !17296

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !17275
  call void @llvm.dbg.value(metadata i32 %15, metadata !15968, metadata !DIExpression()) #26, !dbg !17277
  call void @llvm.dbg.value(metadata i32 %15, metadata !15962, metadata !DIExpression()) #26, !dbg !17273
  call void @llvm.dbg.value(metadata i32 %15, metadata !17270, metadata !DIExpression()), !dbg !17272
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17292
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #26, !dbg !17297
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !17299, !srcloc !16010
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17267, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.value(metadata i32 undef, metadata !17268, metadata !DIExpression()), !dbg !17272
  ret %struct.k_thread* %7, !dbg !17300
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17301 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17303, metadata !DIExpression()), !dbg !17304
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17111, metadata !DIExpression()) #26, !dbg !17305
  call void @llvm.dbg.value(metadata i32 0, metadata !17112, metadata !DIExpression()) #26, !dbg !17307
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !17308
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17310, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17312
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !17312
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17308
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17313
  br i1 %3, label %5, label %4, !dbg !17314

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17315
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17315
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17315
  unreachable, !dbg !17315

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17312
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17308
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17316
  call void @llvm.dbg.value(metadata i32 undef, metadata !17114, metadata !DIExpression()) #26, !dbg !17307
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()) #26, !dbg !17307
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !17317
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !17318
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17320
  br i1 %6, label %8, label %7, !dbg !17321

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17322
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17322
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17322
  unreachable, !dbg !17322

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17310
  call void @llvm.dbg.value(metadata i32 %9, metadata !15968, metadata !DIExpression()) #26, !dbg !17312
  call void @llvm.dbg.value(metadata i32 %9, metadata !15962, metadata !DIExpression()) #26, !dbg !17308
  call void @llvm.dbg.value(metadata i32 %9, metadata !17114, metadata !DIExpression()) #26, !dbg !17307
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17318
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #26, !dbg !17323
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !17325, !srcloc !16010
  call void @llvm.dbg.value(metadata i32 1, metadata !17112, metadata !DIExpression()) #26, !dbg !17307
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()) #26, !dbg !17307
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !17326
  ret void, !dbg !17327
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17328 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17330, metadata !DIExpression()), !dbg !17336
  call void @llvm.dbg.value(metadata i32 %1, metadata !17331, metadata !DIExpression()), !dbg !17336
  call void @llvm.dbg.value(metadata i8 0, metadata !17332, metadata !DIExpression()), !dbg !17336
  call void @llvm.dbg.value(metadata i32 0, metadata !17333, metadata !DIExpression()), !dbg !17337
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !17338
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17340, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17342
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !17342
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17338
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17343
  br i1 %4, label %6, label %5, !dbg !17344

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17345
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17345
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17345
  unreachable, !dbg !17345

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17342
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17338
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17346
  call void @llvm.dbg.value(metadata i32 undef, metadata !17335, metadata !DIExpression()), !dbg !17337
  call void @llvm.dbg.value(metadata i8 poison, metadata !17332, metadata !DIExpression()), !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !17333, metadata !DIExpression()), !dbg !17337
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #28, !dbg !17347
  call void @llvm.dbg.value(metadata i1 %9, metadata !17332, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17336
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !17350

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16148, metadata !DIExpression()) #26, !dbg !17351
  %14 = load i8, i8* %7, align 1, !dbg !17357
  %15 = and i8 %14, 127, !dbg !17357
  store i8 %15, i8* %7, align 1, !dbg !17357
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16156, metadata !DIExpression()) #26, !dbg !17358
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17360
  store i8 %12, i8* %11, align 2, !dbg !17361
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16165, metadata !DIExpression()) #26, !dbg !17362
  %16 = load i8, i8* %7, align 1, !dbg !17364
  %17 = or i8 %16, -128, !dbg !17364
  store i8 %17, i8* %7, align 1, !dbg !17364
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16172, metadata !DIExpression()) #26, !dbg !17365
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16179, metadata !DIExpression()) #26, !dbg !17367
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16185, metadata !DIExpression()) #26, !dbg !17367
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !17369
  br i1 %18, label %19, label %20, !dbg !17370

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 186) #27, !dbg !17371
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 186) #27, !dbg !17371
  unreachable, !dbg !17371

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.346(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17372
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !16186, metadata !DIExpression()) #26, !dbg !17367
  %22 = icmp eq %struct._dnode* %21, null, !dbg !17373
  br i1 %22, label %32, label %23, !dbg !17372

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16186, metadata !DIExpression()) #26, !dbg !17367
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !17374
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !16186, metadata !DIExpression()) #26, !dbg !17367
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #27, !dbg !17375
  %27 = icmp sgt i32 %26, 0, !dbg !17376
  br i1 %27, label %28, label %29, !dbg !17377

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #27, !dbg !17378
  br label %33, !dbg !17379

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #27, !dbg !17373
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16186, metadata !DIExpression()) #26, !dbg !17367
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17373
  br i1 %31, label %32, label %23, !dbg !17372, !llvm.loop !17380

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #27, !dbg !17382
  br label %33, !dbg !17383

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !17384
  br label %35, !dbg !17385

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !17386
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17388
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !17388
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17390
  br i1 %36, label %38, label %37, !dbg !17391

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17392
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17392
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17392
  unreachable, !dbg !17392

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !17340
  call void @llvm.dbg.value(metadata i32 %39, metadata !15968, metadata !DIExpression()) #26, !dbg !17342
  call void @llvm.dbg.value(metadata i32 %39, metadata !15962, metadata !DIExpression()) #26, !dbg !17338
  call void @llvm.dbg.value(metadata i32 %39, metadata !17335, metadata !DIExpression()), !dbg !17337
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17388
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #26, !dbg !17393
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #26, !dbg !17395, !srcloc !16010
  call void @llvm.dbg.value(metadata i8 poison, metadata !17332, metadata !DIExpression()), !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !17333, metadata !DIExpression()), !dbg !17337
  ret i1 %9, !dbg !17396
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17397 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17401, metadata !DIExpression()), !dbg !17404
  call void @llvm.dbg.value(metadata i32 %1, metadata !17402, metadata !DIExpression()), !dbg !17404
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #28, !dbg !17405
  call void @llvm.dbg.value(metadata i1 %3, metadata !17403, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17404
  br i1 %3, label %4, label %12, !dbg !17406

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17408
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17409
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17409
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17409
  %9 = load i8, i8* %8, align 1, !dbg !17409
  %10 = icmp eq i8 %9, 0, !dbg !17410
  br i1 %10, label %11, label %12, !dbg !17411

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17412
  br label %12, !dbg !17414

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !17415
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !17416 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17418, metadata !DIExpression()), !dbg !17421
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !17422
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17424, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17426
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !17426
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17422
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17427
  br i1 %2, label %4, label %3, !dbg !17428

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17429
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17429
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17429
  unreachable, !dbg !17429

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17426
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17422
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17430
  call void @llvm.dbg.value(metadata i32 undef, metadata !17420, metadata !DIExpression()), !dbg !17421
  call void @llvm.dbg.value(metadata i32 undef, metadata !17418, metadata !DIExpression()), !dbg !17421
  tail call fastcc void @z_sched_lock() #28, !dbg !17431
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17434
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !17434
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17436
  br i1 %5, label %7, label %6, !dbg !17437

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17438
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17438
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17438
  unreachable, !dbg !17438

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !17424
  call void @llvm.dbg.value(metadata i32 %8, metadata !15968, metadata !DIExpression()) #26, !dbg !17426
  call void @llvm.dbg.value(metadata i32 %8, metadata !15962, metadata !DIExpression()) #26, !dbg !17422
  call void @llvm.dbg.value(metadata i32 %8, metadata !17420, metadata !DIExpression()), !dbg !17421
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17434
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #26, !dbg !17439
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !17441, !srcloc !16010
  call void @llvm.dbg.value(metadata i32 1, metadata !17418, metadata !DIExpression()), !dbg !17421
  call void @llvm.dbg.value(metadata i32 undef, metadata !17418, metadata !DIExpression()), !dbg !17421
  ret void, !dbg !17442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !17443 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17444, !srcloc !16733
  call void @llvm.dbg.value(metadata i32 %1, metadata !16729, metadata !DIExpression()) #26, !dbg !17449
  %2 = icmp eq i32 %1, 0, !dbg !17450
  br i1 %2, label %4, label %3, !dbg !17451

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.371, i32 0, i32 0), i32 noundef 253) #27, !dbg !17452
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.348, i32 0, i32 0)) #27, !dbg !17452
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.371, i32 0, i32 0), i32 noundef 253) #27, !dbg !17452
  unreachable, !dbg !17452

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17454
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17454
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17454
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17454
  %9 = load i8, i8* %8, align 1, !dbg !17454
  %10 = icmp eq i8 %9, 1, !dbg !17454
  br i1 %10, label %11, label %12, !dbg !17457

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.372, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.371, i32 0, i32 0), i32 noundef 254) #27, !dbg !17458
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.348, i32 0, i32 0)) #27, !dbg !17458
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.371, i32 0, i32 0), i32 noundef 254) #27, !dbg !17458
  unreachable, !dbg !17458

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !17460
  store i8 %13, i8* %8, align 1, !dbg !17460
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17461, !srcloc !17463
  ret void, !dbg !17464
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !17465 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17467, metadata !DIExpression()), !dbg !17470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !17471
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17473, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17475
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !17475
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17471
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17476
  br i1 %2, label %4, label %3, !dbg !17477

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17478
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17478
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17478
  unreachable, !dbg !17478

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17475
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17471
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17479
  call void @llvm.dbg.value(metadata i32 undef, metadata !17469, metadata !DIExpression()), !dbg !17470
  call void @llvm.dbg.value(metadata i32 undef, metadata !17467, metadata !DIExpression()), !dbg !17470
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17480
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17480
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17480
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17480
  %9 = load i8, i8* %8, align 1, !dbg !17480
  %10 = icmp eq i8 %9, 0, !dbg !17480
  br i1 %10, label %11, label %12, !dbg !17485

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 999) #27, !dbg !17486
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.348, i32 0, i32 0)) #27, !dbg !17486
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 999) #27, !dbg !17486
  unreachable, !dbg !17486

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17488, !srcloc !16733
  call void @llvm.dbg.value(metadata i32 %13, metadata !16729, metadata !DIExpression()) #26, !dbg !17493
  %14 = icmp eq i32 %13, 0, !dbg !17494
  br i1 %14, label %16, label %15, !dbg !17495

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1000) #27, !dbg !17496
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.348, i32 0, i32 0)) #27, !dbg !17496
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1000) #27, !dbg !17496
  unreachable, !dbg !17496

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17498
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !17499
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !17499
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !17499
  %21 = load i8, i8* %20, align 1, !dbg !17500
  %22 = add i8 %21, 1, !dbg !17500
  store i8 %22, i8* %20, align 1, !dbg !17500
  tail call fastcc void @update_cache(i32 noundef 0) #28, !dbg !17501
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !17502
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17504
  br i1 %23, label %25, label %24, !dbg !17505

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17506
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17506
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17506
  unreachable, !dbg !17506

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !17473
  call void @llvm.dbg.value(metadata i32 %26, metadata !15968, metadata !DIExpression()) #26, !dbg !17475
  call void @llvm.dbg.value(metadata i32 %26, metadata !15962, metadata !DIExpression()) #26, !dbg !17471
  call void @llvm.dbg.value(metadata i32 %26, metadata !17469, metadata !DIExpression()), !dbg !17470
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !17502
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #26, !dbg !17507
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #26, !dbg !17509, !srcloc !16010
  call void @llvm.dbg.value(metadata i32 1, metadata !17467, metadata !DIExpression()), !dbg !17470
  call void @llvm.dbg.value(metadata i32 undef, metadata !17467, metadata !DIExpression()), !dbg !17470
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17510
  ret void, !dbg !17511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #13 !dbg !17512 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17513
  ret %struct.k_thread* %1, !dbg !17514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !17515 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !17519, metadata !DIExpression()), !dbg !17524
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !17520, metadata !DIExpression()), !dbg !17524
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !17525
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17521, metadata !DIExpression()), !dbg !17524
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !17526
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17522, metadata !DIExpression()), !dbg !17524
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #28, !dbg !17527
  call void @llvm.dbg.value(metadata i32 %5, metadata !17523, metadata !DIExpression()), !dbg !17524
  %6 = icmp sgt i32 %5, 0, !dbg !17528
  br i1 %6, label %17, label %7, !dbg !17530

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !17531
  br i1 %8, label %17, label %9, !dbg !17533

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !17534
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !17534
  %12 = load i32, i32* %11, align 8, !dbg !17534
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !17536
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !17536
  %15 = load i32, i32* %14, align 8, !dbg !17536
  %16 = icmp ult i32 %12, %15, !dbg !17537
  br label %17, !dbg !17538

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !17539
  ret i1 %18, !dbg !17540
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17541 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17558, metadata !DIExpression()), !dbg !17573
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17559, metadata !DIExpression()), !dbg !17573
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !17574
  br i1 %4, label %5, label %6, !dbg !17577

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1179) #27, !dbg !17578
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1179) #27, !dbg !17578
  unreachable, !dbg !17578

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17580
  %8 = load i32, i32* %7, align 4, !dbg !17581
  %9 = add nsw i32 %8, 1, !dbg !17581
  store i32 %9, i32* %7, align 4, !dbg !17581
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17582
  store i32 %8, i32* %10, align 8, !dbg !17583
  %11 = load i32, i32* %7, align 4, !dbg !17584
  %12 = icmp eq i32 %11, 0, !dbg !17585
  br i1 %12, label %13, label %35, !dbg !17586

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17587
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #26, !dbg !17587
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17561, metadata !DIExpression()), !dbg !17587
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17587
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17587
  %17 = load i32, i32* %16, align 4, !dbg !17587
  %18 = shl i32 %17, 2, !dbg !17587
  %19 = alloca i8, i32 %18, align 8, !dbg !17587
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17587
  store i8* %19, i8** %20, align 4, !dbg !17587
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17587
  %22 = alloca i8, i32 %17, align 8, !dbg !17587
  store i8* %22, i8** %21, align 4, !dbg !17587
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17587
  store i32 -1, i32* %23, align 4, !dbg !17587
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17588
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !17570, metadata !DIExpression()), !dbg !17589
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !17560, metadata !DIExpression()), !dbg !17573
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !17590
  br i1 %25, label %26, label %27, !dbg !17587

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #26, !dbg !17590
  br label %35, !dbg !17591

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !17560, metadata !DIExpression()), !dbg !17573
  %29 = load i32, i32* %7, align 4, !dbg !17592
  %30 = add nsw i32 %29, 1, !dbg !17592
  store i32 %30, i32* %7, align 4, !dbg !17592
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !17594
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !17594
  store i32 %29, i32* %32, align 8, !dbg !17595
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17588
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !17570, metadata !DIExpression()), !dbg !17589
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !17560, metadata !DIExpression()), !dbg !17573
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !17590
  br i1 %34, label %26, label %27, !dbg !17587, !llvm.loop !17596

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17598
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17599
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #27, !dbg !17600
  ret void, !dbg !17601
}

; Function Attrs: optsize
declare !dbg !17602 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17607 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17610 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17612, metadata !DIExpression()), !dbg !17614
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17613, metadata !DIExpression()), !dbg !17614
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !17615
  br i1 %3, label %4, label %5, !dbg !17618

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1200) #27, !dbg !17619
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1200) #27, !dbg !17619
  unreachable, !dbg !17619

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17621
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17622
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #27, !dbg !17623
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17624
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !17624
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !17626
  br i1 %10, label %11, label %13, !dbg !17627

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17628
  store i32 0, i32* %12, align 4, !dbg !17630
  br label %13, !dbg !17631

13:                                               ; preds = %11, %5
  ret void, !dbg !17632
}

; Function Attrs: optsize
declare !dbg !17633 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17634 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17638, metadata !DIExpression()), !dbg !17641
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17639, metadata !DIExpression()), !dbg !17641
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17642
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #28, !dbg !17643
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17640, metadata !DIExpression()), !dbg !17641
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17639, metadata !DIExpression()), !dbg !17641
  ret %struct.k_thread* %4, !dbg !17644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17645 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17649, metadata !DIExpression()), !dbg !17650
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !17651
  ret %struct.rbnode* %2, !dbg !17652
}

; Function Attrs: optsize
declare !dbg !17653 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #20 !dbg !17656 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17666, metadata !DIExpression()), !dbg !17670
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17671
  %3 = load i32, i32* %2, align 4, !dbg !17671
  %4 = icmp eq i32 %3, 0, !dbg !17673
  br i1 %4, label %10, label %5, !dbg !17674

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17667, metadata !DIExpression()), !dbg !17670
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17675, !range !5375
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17676
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17668, metadata !DIExpression()), !dbg !17670
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.346(%struct._dnode* noundef %7) #28, !dbg !17677
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17669, metadata !DIExpression()), !dbg !17670
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17667, metadata !DIExpression()), !dbg !17670
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17670
  ret %struct.k_thread* %11, !dbg !17678
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17679 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17683, metadata !DIExpression()), !dbg !17686
  call void @llvm.dbg.value(metadata i32 0, metadata !17684, metadata !DIExpression()), !dbg !17686
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.376(%union.anon* noundef %0) #28, !dbg !17687
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17685, metadata !DIExpression()), !dbg !17686
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17688
  br i1 %3, label %8, label %4, !dbg !17689

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !17690
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !17692
  call void @llvm.dbg.value(metadata i32 1, metadata !17684, metadata !DIExpression()), !dbg !17686
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.376(%union.anon* noundef %0) #28, !dbg !17687
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17685, metadata !DIExpression()), !dbg !17686
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17688
  br i1 %7, label %8, label %4, !dbg !17689, !llvm.loop !17693

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17686
  ret i32 %9, !dbg !17695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.376(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !17696 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17698, metadata !DIExpression()), !dbg !17699
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17700
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.346(%struct._dnode* noundef %2) #28, !dbg !17701
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17702
  ret %struct.k_thread* %4, !dbg !17703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #12 !dbg !17704 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17713, metadata !DIExpression()), !dbg !17714
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17715
  tail call fastcc void @sys_dlist_init.377(%struct._dnode* noundef nonnull %2) #28, !dbg !17716
  ret void, !dbg !17717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.377(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !17718 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17722, metadata !DIExpression()), !dbg !17723
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17724
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17725
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17726
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17727
  ret void, !dbg !17728
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17729 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #28, !dbg !17730
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #28, !dbg !17731
  ret void, !dbg !17732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !17733 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17738, metadata !DIExpression()), !dbg !17739
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17740
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17740
  %4 = load i8, i8* %3, align 2, !dbg !17740
  %5 = sext i8 %4 to i32, !dbg !17741
  ret i32 %5, !dbg !17742
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17743 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17747, metadata !DIExpression()), !dbg !17750
  call void @llvm.dbg.value(metadata i32 %1, metadata !17748, metadata !DIExpression()), !dbg !17750
  %3 = add i32 %1, 16, !dbg !17751
  %4 = icmp ult i32 %3, 31, !dbg !17751
  br i1 %4, label %6, label %5, !dbg !17751

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1331) #27, !dbg !17755
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.383, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #27, !dbg !17755
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1331) #27, !dbg !17755
  unreachable, !dbg !17755

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17757, !srcloc !16733
  call void @llvm.dbg.value(metadata i32 %7, metadata !16729, metadata !DIExpression()) #26, !dbg !17762
  %8 = icmp eq i32 %7, 0, !dbg !17763
  br i1 %8, label %10, label %9, !dbg !17764

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1332) #27, !dbg !17765
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.348, i32 0, i32 0)) #27, !dbg !17765
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1332) #27, !dbg !17765
  unreachable, !dbg !17765

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17749, metadata !DIExpression()), !dbg !17750
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #28, !dbg !17767
  ret void, !dbg !17768
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17769 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #28, !dbg !17770
  br i1 %1, label %8, label %2, !dbg !17771

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17772
  br i1 %3, label %8, label %4, !dbg !17773

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17774
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #28, !dbg !17775
  %7 = xor i1 %6, true, !dbg !17773
  br label %8, !dbg !17773

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #13 !dbg !17777 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17778, !range !8087
  %2 = icmp eq i8 %1, 0, !dbg !17778
  ret i1 %2, !dbg !17779
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17780 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17783, !srcloc !16733
  call void @llvm.dbg.value(metadata i32 %1, metadata !16729, metadata !DIExpression()) #26, !dbg !17788
  %2 = icmp eq i32 %1, 0, !dbg !17789
  br i1 %2, label %4, label %3, !dbg !17790

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1392) #27, !dbg !17791
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.348, i32 0, i32 0)) #27, !dbg !17791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1392) #27, !dbg !17791
  unreachable, !dbg !17791

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !17793
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17795, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17797
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !17797
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17793
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17798
  br i1 %6, label %8, label %7, !dbg !17799

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17800
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17800
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17800
  unreachable, !dbg !17800

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17797
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17793
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17801
  call void @llvm.dbg.value(metadata i32 undef, metadata !17782, metadata !DIExpression()), !dbg !17802
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17803
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16148, metadata !DIExpression()) #26, !dbg !17806
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !17808
  %11 = load i8, i8* %10, align 1, !dbg !17809
  %12 = and i8 %11, 127, !dbg !17809
  store i8 %12, i8* %10, align 1, !dbg !17809
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16156, metadata !DIExpression()) #26, !dbg !17810
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #27, !dbg !17812
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17813
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16165, metadata !DIExpression()) #26, !dbg !17814
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !17816
  %15 = load i8, i8* %14, align 1, !dbg !17817
  %16 = or i8 %15, -128, !dbg !17817
  store i8 %16, i8* %14, align 1, !dbg !17817
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16172, metadata !DIExpression()) #26, !dbg !17818
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16179, metadata !DIExpression()) #26, !dbg !17820
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16185, metadata !DIExpression()) #26, !dbg !17820
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #27, !dbg !17822
  br i1 %17, label %18, label %19, !dbg !17823

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 186) #27, !dbg !17824
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 186) #27, !dbg !17824
  unreachable, !dbg !17824

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.346(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17825
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16186, metadata !DIExpression()) #26, !dbg !17820
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17826
  br i1 %21, label %32, label %22, !dbg !17825

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !16186, metadata !DIExpression()) #26, !dbg !17820
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !17827
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !16186, metadata !DIExpression()) #26, !dbg !17820
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #27, !dbg !17828
  %26 = icmp sgt i32 %25, 0, !dbg !17829
  br i1 %26, label %27, label %29, !dbg !17830

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !17831
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #27, !dbg !17832
  br label %34, !dbg !17833

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #27, !dbg !17826
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16186, metadata !DIExpression()) #26, !dbg !17820
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17826
  br i1 %31, label %32, label %22, !dbg !17825, !llvm.loop !17834

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !17836
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #27, !dbg !17837
  br label %34, !dbg !17838

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !17839
  call void @llvm.dbg.value(metadata i32 undef, metadata !16677, metadata !DIExpression()) #26, !dbg !17840
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16682, metadata !DIExpression()) #26, !dbg !17840
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16686, metadata !DIExpression()) #26, !dbg !17842
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17844
  br i1 %35, label %37, label %36, !dbg !17845

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 225) #27, !dbg !17846
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17846
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 225) #27, !dbg !17846
  unreachable, !dbg !17846

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !17795
  call void @llvm.dbg.value(metadata i32 %38, metadata !15968, metadata !DIExpression()) #26, !dbg !17797
  call void @llvm.dbg.value(metadata i32 %38, metadata !15962, metadata !DIExpression()) #26, !dbg !17793
  call void @llvm.dbg.value(metadata i32 %38, metadata !17782, metadata !DIExpression()), !dbg !17802
  call void @llvm.dbg.value(metadata i32 undef, metadata !16677, metadata !DIExpression()) #26, !dbg !17840
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #27, !dbg !17847
  ret void, !dbg !17848
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17849 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17853, metadata !DIExpression()), !dbg !17856
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17857, !srcloc !16733
  call void @llvm.dbg.value(metadata i32 %3, metadata !16729, metadata !DIExpression()) #26, !dbg !17862
  %4 = icmp eq i32 %3, 0, !dbg !17863
  br i1 %4, label %6, label %5, !dbg !17864

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1463) #27, !dbg !17865
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.348, i32 0, i32 0)) #27, !dbg !17865
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1463) #27, !dbg !17865
  unreachable, !dbg !17865

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !17867
  br i1 %7, label %8, label %10, !dbg !17869

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17870
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #28, !dbg !17872
  br label %15, !dbg !17873

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !17854, metadata !DIExpression()), !dbg !17856
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #28, !dbg !17874
  %12 = sext i32 %11 to i64, !dbg !17874
  call void @llvm.dbg.value(metadata i64 %12, metadata !17854, metadata !DIExpression()), !dbg !17856
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #28, !dbg !17875
  %14 = trunc i64 %13 to i32, !dbg !17875
  call void @llvm.dbg.value(metadata i32 %14, metadata !17855, metadata !DIExpression()), !dbg !17856
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !17856
  ret i32 %16, !dbg !17876
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17877 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17881, metadata !DIExpression()), !dbg !17882
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17883, !srcloc !17885
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #28, !dbg !17886
  ret void, !dbg !17887
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17888 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17892, metadata !DIExpression()), !dbg !17896
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17897, !srcloc !16733
  call void @llvm.dbg.value(metadata i32 %2, metadata !16729, metadata !DIExpression()) #26, !dbg !17902
  %3 = icmp eq i32 %2, 0, !dbg !17903
  br i1 %3, label %5, label %4, !dbg !17904

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1420) #27, !dbg !17905
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.348, i32 0, i32 0)) #27, !dbg !17905
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1420) #27, !dbg !17905
  unreachable, !dbg !17905

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !17907
  br i1 %6, label %7, label %8, !dbg !17909

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #28, !dbg !17910
  br label %43, !dbg !17912

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !17894, metadata !DIExpression()), !dbg !17896
  %9 = icmp sgt i64 %0, -3, !dbg !17913
  br i1 %9, label %10, label %14, !dbg !17915

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17916
  %12 = trunc i64 %0 to i32, !dbg !17918
  %13 = add i32 %11, %12, !dbg !17918
  call void @llvm.dbg.value(metadata i32 %13, metadata !17893, metadata !DIExpression()), !dbg !17896
  br label %17, !dbg !17919

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !17920
  %16 = sub i32 -2, %15, !dbg !17920
  call void @llvm.dbg.value(metadata i32 %16, metadata !17893, metadata !DIExpression()), !dbg !17896
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !17922
  call void @llvm.dbg.value(metadata i32 %18, metadata !17893, metadata !DIExpression()), !dbg !17896
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !17923
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17925, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17927
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !17927
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17923
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17928
  br i1 %20, label %22, label %21, !dbg !17929

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17930
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17930
  unreachable, !dbg !17930

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !17927
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !17923
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17931
  call void @llvm.dbg.value(metadata i32 undef, metadata !17895, metadata !DIExpression()), !dbg !17896
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17932
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !17933
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #28, !dbg !17934
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17935
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17936
  tail call fastcc void @z_add_thread_timeout.359(%struct.k_thread* noundef %24, [1 x i64] %25) #28, !dbg !17936
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17937
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #28, !dbg !17938
  call void @llvm.dbg.value(metadata i32 undef, metadata !16677, metadata !DIExpression()) #26, !dbg !17939
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16682, metadata !DIExpression()) #26, !dbg !17939
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16686, metadata !DIExpression()) #26, !dbg !17941
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17943
  br i1 %27, label %29, label %28, !dbg !17944

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 225) #27, !dbg !17945
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17945
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 225) #27, !dbg !17945
  unreachable, !dbg !17945

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !17925
  call void @llvm.dbg.value(metadata i32 %30, metadata !15968, metadata !DIExpression()) #26, !dbg !17927
  call void @llvm.dbg.value(metadata i32 %30, metadata !15962, metadata !DIExpression()) #26, !dbg !17923
  call void @llvm.dbg.value(metadata i32 %30, metadata !17895, metadata !DIExpression()), !dbg !17896
  call void @llvm.dbg.value(metadata i32 undef, metadata !16677, metadata !DIExpression()) #26, !dbg !17939
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #27, !dbg !17946
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17947
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #28, !dbg !17947
  br i1 %33, label %34, label %35, !dbg !17950

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1448) #27, !dbg !17951
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.348, i32 0, i32 0)) #27, !dbg !17951
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1448) #27, !dbg !17951
  unreachable, !dbg !17951

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !17953
  %37 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17954
  %38 = zext i32 %37 to i64, !dbg !17954
  %39 = sub nsw i64 %36, %38, !dbg !17955
  call void @llvm.dbg.value(metadata i64 %39, metadata !17892, metadata !DIExpression()), !dbg !17896
  %40 = icmp sgt i64 %39, 0, !dbg !17956
  %41 = select i1 %40, i64 %39, i64 0, !dbg !17956
  %42 = trunc i64 %41 to i32, !dbg !17956
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !17896
  ret i32 %44, !dbg !17957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17958 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17960, metadata !DIExpression()), !dbg !17961
  call void @llvm.dbg.value(metadata i64 %0, metadata !16016, metadata !DIExpression()), !dbg !17962
  call void @llvm.dbg.value(metadata i32 10000, metadata !16019, metadata !DIExpression()), !dbg !17962
  call void @llvm.dbg.value(metadata i32 1000, metadata !16020, metadata !DIExpression()), !dbg !17962
  call void @llvm.dbg.value(metadata i8 1, metadata !16021, metadata !DIExpression()), !dbg !17962
  call void @llvm.dbg.value(metadata i1 false, metadata !16022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17962
  call void @llvm.dbg.value(metadata i1 false, metadata !16023, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17962
  call void @llvm.dbg.value(metadata i8 0, metadata !16024, metadata !DIExpression()), !dbg !17962
  call void @llvm.dbg.value(metadata i1 false, metadata !16025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17962
  call void @llvm.dbg.value(metadata i1 true, metadata !16026, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17962
  call void @llvm.dbg.value(metadata i64 0, metadata !16027, metadata !DIExpression()), !dbg !17962
  call void @llvm.dbg.value(metadata i64 0, metadata !16027, metadata !DIExpression()), !dbg !17962
  call void @llvm.dbg.value(metadata i64 %0, metadata !16016, metadata !DIExpression()), !dbg !17962
  %2 = udiv i64 %0, 10, !dbg !17964
  ret i64 %2, !dbg !17968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17969 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17970, !srcloc !17972
  tail call void @z_impl_k_yield() #28, !dbg !17973
  ret void, !dbg !17974
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17979, metadata !DIExpression()), !dbg !17981
  %2 = sext i32 %0 to i64, !dbg !17982
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #28, !dbg !17983
  call void @llvm.dbg.value(metadata i64 %3, metadata !17980, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17981
  %4 = shl i64 %3, 32, !dbg !17984
  %5 = ashr exact i64 %4, 32, !dbg !17984
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #28, !dbg !17985
  call void @llvm.dbg.value(metadata i32 %6, metadata !17980, metadata !DIExpression()), !dbg !17981
  %7 = sext i32 %6 to i64, !dbg !17986
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #28, !dbg !17987
  %9 = trunc i64 %8 to i32, !dbg !17987
  ret i32 %9, !dbg !17988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !17989 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17991, metadata !DIExpression()), !dbg !17992
  call void @llvm.dbg.value(metadata i64 %0, metadata !16016, metadata !DIExpression()), !dbg !17993
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16019, metadata !DIExpression()), !dbg !17993
  call void @llvm.dbg.value(metadata i32 10000, metadata !16020, metadata !DIExpression()), !dbg !17993
  call void @llvm.dbg.value(metadata i8 1, metadata !16021, metadata !DIExpression()), !dbg !17993
  call void @llvm.dbg.value(metadata i1 false, metadata !16022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17993
  call void @llvm.dbg.value(metadata i1 true, metadata !16023, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17993
  call void @llvm.dbg.value(metadata i8 0, metadata !16024, metadata !DIExpression()), !dbg !17993
  call void @llvm.dbg.value(metadata i1 false, metadata !16025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17993
  call void @llvm.dbg.value(metadata i1 true, metadata !16026, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17993
  call void @llvm.dbg.value(metadata i64 0, metadata !16027, metadata !DIExpression()), !dbg !17993
  call void @llvm.dbg.value(metadata i64 0, metadata !16027, metadata !DIExpression()), !dbg !17993
  %2 = add i64 %0, 99, !dbg !17995
  call void @llvm.dbg.value(metadata i64 %2, metadata !16016, metadata !DIExpression()), !dbg !17993
  %3 = udiv i64 %2, 100, !dbg !17996
  ret i64 %3, !dbg !17997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17998 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18000, metadata !DIExpression()), !dbg !18001
  call void @llvm.dbg.value(metadata i64 %0, metadata !16016, metadata !DIExpression()), !dbg !18002
  call void @llvm.dbg.value(metadata i32 10000, metadata !16019, metadata !DIExpression()), !dbg !18002
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16020, metadata !DIExpression()), !dbg !18002
  call void @llvm.dbg.value(metadata i8 1, metadata !16021, metadata !DIExpression()), !dbg !18002
  call void @llvm.dbg.value(metadata i1 false, metadata !16022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18002
  call void @llvm.dbg.value(metadata i1 false, metadata !16023, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18002
  call void @llvm.dbg.value(metadata i8 0, metadata !16024, metadata !DIExpression()), !dbg !18002
  call void @llvm.dbg.value(metadata i1 true, metadata !16025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18002
  call void @llvm.dbg.value(metadata i1 false, metadata !16026, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18002
  call void @llvm.dbg.value(metadata i64 0, metadata !16027, metadata !DIExpression()), !dbg !18002
  call void @llvm.dbg.value(metadata i64 0, metadata !16027, metadata !DIExpression()), !dbg !18002
  %2 = mul i64 %0, 100, !dbg !18004
  ret i64 %2, !dbg !18006
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18007 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18009, metadata !DIExpression()), !dbg !18010
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #28, !dbg !18011
  br i1 %2, label %14, label %3, !dbg !18013

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !18014
  %5 = icmp slt i32 %4, 0, !dbg !18016
  br i1 %5, label %6, label %10, !dbg !18017

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18018
  %8 = load i8, i8* %7, align 1, !dbg !18018
  %9 = icmp eq i8 %8, 16, !dbg !18021
  br i1 %9, label %10, label %14, !dbg !18022

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #28, !dbg !18023
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #28, !dbg !18024
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18025, !srcloc !16733
  call void @llvm.dbg.value(metadata i32 %11, metadata !16729, metadata !DIExpression()) #26, !dbg !18029
  %12 = icmp eq i32 %11, 0, !dbg !18030
  br i1 %12, label %13, label %14, !dbg !18031

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !18032
  br label %14, !dbg !18034

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !18035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !18036 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18038, metadata !DIExpression()), !dbg !18039
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18040
  %3 = load i8, i8* %2, align 1, !dbg !18040
  %4 = and i8 %3, 2, !dbg !18041
  %5 = icmp ne i8 %4, 0, !dbg !18042
  ret i1 %5, !dbg !18043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #13 !dbg !18044 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18049
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18048, metadata !DIExpression()), !dbg !18050
  ret %struct.k_thread* %1, !dbg !18051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !18052 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18053, !srcloc !16733
  call void @llvm.dbg.value(metadata i32 %1, metadata !16729, metadata !DIExpression()) #26, !dbg !18056
  %2 = icmp eq i32 %1, 0, !dbg !18057
  br i1 %2, label %3, label %8, !dbg !18058

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18059
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #28, !dbg !18060
  %6 = icmp ne i32 %5, 0, !dbg !18058
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !18061
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18062 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18064, metadata !DIExpression()), !dbg !18066
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !18067
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18069, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !18071
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !18071
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !18067
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18072
  br i1 %3, label %5, label %4, !dbg !18073

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !18074
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18074
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !18074
  unreachable, !dbg !18074

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !18069
  call void @llvm.dbg.value(metadata i32 %6, metadata !15968, metadata !DIExpression()) #26, !dbg !18071
  call void @llvm.dbg.value(metadata i32 %6, metadata !15962, metadata !DIExpression()) #26, !dbg !18067
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18075
  call void @llvm.dbg.value(metadata i32 %6, metadata !18065, metadata !DIExpression()), !dbg !18066
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !18076
  %8 = load i8, i8* %7, align 4, !dbg !18076
  %9 = and i8 %8, 1, !dbg !18078
  %10 = icmp eq i8 %9, 0, !dbg !18079
  br i1 %10, label %15, label %11, !dbg !18080

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !18081
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !18081
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18084
  br i1 %12, label %14, label %13, !dbg !18085

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !18086
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18086
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !18086
  unreachable, !dbg !18086

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !15990, metadata !DIExpression()) #26, !dbg !18081
  call void @llvm.dbg.value(metadata i32 %6, metadata !16004, metadata !DIExpression()) #26, !dbg !18087
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !18089, !srcloc !16010
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.391, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1731) #27, !dbg !18090
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.392, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #27, !dbg !18090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1731) #27, !dbg !18090
  unreachable, !dbg !18090

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18094
  %17 = load i8, i8* %16, align 1, !dbg !18094
  %18 = and i8 %17, 8, !dbg !18096
  %19 = icmp eq i8 %18, 0, !dbg !18097
  br i1 %19, label %24, label %20, !dbg !18098

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !18099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !18099
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18102
  br i1 %21, label %23, label %22, !dbg !18103

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !18104
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18104
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !18104
  unreachable, !dbg !18104

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !15990, metadata !DIExpression()) #26, !dbg !18099
  call void @llvm.dbg.value(metadata i32 %6, metadata !16004, metadata !DIExpression()) #26, !dbg !18105
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !18107, !srcloc !16010
  br label %39, !dbg !18108

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #28, !dbg !18109
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18110
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !18112
  br i1 %26, label %27, label %35, !dbg !18113

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18114, !srcloc !16733
  call void @llvm.dbg.value(metadata i32 %28, metadata !16729, metadata !DIExpression()) #26, !dbg !18117
  %29 = icmp eq i32 %28, 0, !dbg !18118
  br i1 %29, label %30, label %35, !dbg !18119

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !16677, metadata !DIExpression()) #26, !dbg !18120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16682, metadata !DIExpression()) #26, !dbg !18120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16686, metadata !DIExpression()) #26, !dbg !18123
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18125
  br i1 %31, label %33, label %32, !dbg !18126

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 225) #27, !dbg !18127
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18127
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 225) #27, !dbg !18127
  unreachable, !dbg !18127

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !16677, metadata !DIExpression()) #26, !dbg !18120
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #27, !dbg !18128
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.391, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1778) #27, !dbg !18129
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.393, i32 0, i32 0)) #27, !dbg !18129
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1778) #27, !dbg !18129
  unreachable, !dbg !18129

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !18133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !18133
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18135
  br i1 %36, label %38, label %37, !dbg !18136

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !18137
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18137
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !18137
  unreachable, !dbg !18137

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !15990, metadata !DIExpression()) #26, !dbg !18133
  call void @llvm.dbg.value(metadata i32 %6, metadata !16004, metadata !DIExpression()) #26, !dbg !18138
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !18140, !srcloc !16010
  br label %39, !dbg !18141

39:                                               ; preds = %38, %23
  ret void, !dbg !18141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18142 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18144, metadata !DIExpression()), !dbg !18145
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18146
  %3 = load i8, i8* %2, align 1, !dbg !18146
  %4 = and i8 %3, 8, !dbg !18148
  %5 = icmp eq i8 %4, 0, !dbg !18149
  br i1 %5, label %6, label %20, !dbg !18150

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !18151
  %8 = or i8 %7, 8, !dbg !18151
  store i8 %8, i8* %2, align 1, !dbg !18151
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #28, !dbg !18153
  br i1 %9, label %10, label %12, !dbg !18155

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16148, metadata !DIExpression()) #26, !dbg !18156
  %11 = and i8 %8, 95, !dbg !18159
  store i8 %11, i8* %2, align 1, !dbg !18159
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16156, metadata !DIExpression()) #26, !dbg !18160
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !18162
  br label %12, !dbg !18163

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18164
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !18164
  %15 = icmp eq %union.anon* %14, null, !dbg !18166
  br i1 %15, label %17, label %16, !dbg !18167

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #28, !dbg !18168
  br label %17, !dbg !18170

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #28, !dbg !18171
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18172
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #28, !dbg !18173
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !18174
  br label %20, !dbg !18175

20:                                               ; preds = %17, %1
  ret void, !dbg !18176
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !18177 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18181, metadata !DIExpression()), !dbg !18183
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.376(%union.anon* noundef %0) #28, !dbg !18184
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18182, metadata !DIExpression()), !dbg !18183
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18185
  br i1 %3, label %10, label %4, !dbg !18186

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #28, !dbg !18187
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #28, !dbg !18189
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !18190, metadata !DIExpression()), !dbg !18196
  call void @llvm.dbg.value(metadata i32 0, metadata !18195, metadata !DIExpression()), !dbg !18196
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !18198
  store i32 0, i32* %7, align 4, !dbg !18199
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !18200
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.376(%union.anon* noundef %0) #28, !dbg !18184
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !18182, metadata !DIExpression()), !dbg !18183
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !18185
  br i1 %9, label %10, label %4, !dbg !18186, !llvm.loop !18201

10:                                               ; preds = %4, %1
  ret void, !dbg !18203
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !18204 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18209, metadata !DIExpression()), !dbg !18212
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18208, metadata !DIExpression()), !dbg !18212
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !18213
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18215, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !18217
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !18217
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !18213
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18218
  br i1 %4, label %6, label %5, !dbg !18219

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !18220
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18220
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !18220
  unreachable, !dbg !18220

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !18215
  call void @llvm.dbg.value(metadata i32 %7, metadata !15968, metadata !DIExpression()) #26, !dbg !18217
  call void @llvm.dbg.value(metadata i32 %7, metadata !15962, metadata !DIExpression()) #26, !dbg !18213
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18221
  call void @llvm.dbg.value(metadata i32 %7, metadata !18210, metadata !DIExpression()), !dbg !18212
  call void @llvm.dbg.value(metadata i32 0, metadata !18211, metadata !DIExpression()), !dbg !18212
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18222
  %9 = load i8, i8* %8, align 1, !dbg !18222
  %10 = and i8 %9, 8, !dbg !18224
  %11 = icmp eq i8 %10, 0, !dbg !18225
  br i1 %11, label %12, label %35, !dbg !18226

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !18209, metadata !DIExpression()), !dbg !18212
  %14 = icmp eq i64 %13, 0, !dbg !18227
  br i1 %14, label %35, label %15, !dbg !18229

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18230
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !18232
  br i1 %17, label %35, label %18, !dbg !18233

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18234
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !18234
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !18235
  %22 = icmp eq %union.anon* %20, %21, !dbg !18236
  br i1 %22, label %35, label %23, !dbg !18237

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18238, !srcloc !16733
  call void @llvm.dbg.value(metadata i32 %24, metadata !16729, metadata !DIExpression()) #26, !dbg !18244
  %25 = icmp eq i32 %24, 0, !dbg !18245
  br i1 %25, label %27, label %26, !dbg !18246

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.370, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1809) #27, !dbg !18247
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.394, i32 0, i32 0)) #27, !dbg !18247
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.345, i32 0, i32 0), i32 noundef 1809) #27, !dbg !18247
  unreachable, !dbg !18247

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18249
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18250
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #28, !dbg !18251
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18252
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #28, !dbg !18253
  call void @llvm.dbg.value(metadata i32 undef, metadata !16677, metadata !DIExpression()) #26, !dbg !18254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16682, metadata !DIExpression()) #26, !dbg !18254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16686, metadata !DIExpression()) #26, !dbg !18256
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18258
  br i1 %31, label %33, label %32, !dbg !18259

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 225) #27, !dbg !18260
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18260
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 225) #27, !dbg !18260
  unreachable, !dbg !18260

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !16677, metadata !DIExpression()) #26, !dbg !18254
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #27, !dbg !18261
  call void @llvm.dbg.value(metadata i32 %34, metadata !18211, metadata !DIExpression()), !dbg !18212
  br label %40, !dbg !18262

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !18263
  call void @llvm.dbg.value(metadata i32 %36, metadata !18211, metadata !DIExpression()), !dbg !18212
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !18264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !18264
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18266
  br i1 %37, label %39, label %38, !dbg !18267

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !18268
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18268
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !18268
  unreachable, !dbg !18268

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !15990, metadata !DIExpression()) #26, !dbg !18264
  call void @llvm.dbg.value(metadata i32 %7, metadata !16004, metadata !DIExpression()) #26, !dbg !18269
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #26, !dbg !18271, !srcloc !16010
  br label %40, !dbg !18272

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !18212
  ret i32 %41, !dbg !18273
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !18274 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18278, metadata !DIExpression()), !dbg !18286
  call void @llvm.dbg.value(metadata i32 %1, metadata !18279, metadata !DIExpression()), !dbg !18286
  call void @llvm.dbg.value(metadata i8* %2, metadata !18280, metadata !DIExpression()), !dbg !18286
  call void @llvm.dbg.value(metadata i8 0, metadata !18282, metadata !DIExpression()), !dbg !18286
  call void @llvm.dbg.value(metadata i32 0, metadata !18283, metadata !DIExpression()), !dbg !18287
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15956, metadata !DIExpression()) #26, !dbg !18288
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18290, !srcloc !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !18292
  call void @llvm.dbg.value(metadata i32 undef, metadata !15969, metadata !DIExpression()) #26, !dbg !18292
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !18288
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18293
  br i1 %5, label %7, label %6, !dbg !18294

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !18295
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18295
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !18295
  unreachable, !dbg !18295

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15968, metadata !DIExpression()) #26, !dbg !18292
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()) #26, !dbg !18288
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18296
  call void @llvm.dbg.value(metadata i32 undef, metadata !18285, metadata !DIExpression()), !dbg !18287
  call void @llvm.dbg.value(metadata i8 poison, metadata !18282, metadata !DIExpression()), !dbg !18286
  call void @llvm.dbg.value(metadata i32 undef, metadata !18283, metadata !DIExpression()), !dbg !18287
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #28, !dbg !18297
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18281, metadata !DIExpression()), !dbg !18286
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !18300
  br i1 %10, label %15, label %11, !dbg !18302

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18303, metadata !DIExpression()), !dbg !18310
  call void @llvm.dbg.value(metadata i32 %1, metadata !18308, metadata !DIExpression()), !dbg !18310
  call void @llvm.dbg.value(metadata i8* %2, metadata !18309, metadata !DIExpression()), !dbg !18310
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18190, metadata !DIExpression()), !dbg !18313
  call void @llvm.dbg.value(metadata i32 %1, metadata !18195, metadata !DIExpression()), !dbg !18313
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !18315
  store i32 %1, i32* %12, align 4, !dbg !18316
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18317
  store i8* %2, i8** %13, align 4, !dbg !18318
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #28, !dbg !18319
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #28, !dbg !18320
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #28, !dbg !18321
  call void @llvm.dbg.value(metadata i8 1, metadata !18282, metadata !DIExpression()), !dbg !18286
  br label %15, !dbg !18322

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !18282, metadata !DIExpression()), !dbg !18286
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !18323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15995, metadata !DIExpression()) #26, !dbg !18323
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18325
  br i1 %16, label %18, label %17, !dbg !18326

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !18327
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18327
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !18327
  unreachable, !dbg !18327

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !18286
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !18290
  call void @llvm.dbg.value(metadata i32 %20, metadata !15968, metadata !DIExpression()) #26, !dbg !18292
  call void @llvm.dbg.value(metadata i32 %20, metadata !15962, metadata !DIExpression()) #26, !dbg !18288
  call void @llvm.dbg.value(metadata i32 %20, metadata !18285, metadata !DIExpression()), !dbg !18287
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()) #26, !dbg !18323
  call void @llvm.dbg.value(metadata i32 undef, metadata !16004, metadata !DIExpression()) #26, !dbg !18328
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !18330, !srcloc !16010
  call void @llvm.dbg.value(metadata i8 poison, metadata !18282, metadata !DIExpression()), !dbg !18286
  call void @llvm.dbg.value(metadata i32 undef, metadata !18283, metadata !DIExpression()), !dbg !18287
  ret i1 %19, !dbg !18331
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !18332 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18338, metadata !DIExpression()), !dbg !18343
  call void @llvm.dbg.value(metadata i64 undef, metadata !18340, metadata !DIExpression()), !dbg !18343
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18337, metadata !DIExpression()), !dbg !18343
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !18339, metadata !DIExpression()), !dbg !18343
  call void @llvm.dbg.value(metadata i8** %4, metadata !18341, metadata !DIExpression()), !dbg !18343
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #28, !dbg !18344
  call void @llvm.dbg.value(metadata i32 %6, metadata !18342, metadata !DIExpression()), !dbg !18343
  %7 = icmp eq i8** %4, null, !dbg !18345
  br i1 %7, label %12, label %8, !dbg !18347

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18348
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18350
  %11 = load i8*, i8** %10, align 4, !dbg !18350
  store i8* %11, i8** %4, align 4, !dbg !18351
  br label %12, !dbg !18352

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !18353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !18354 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !18356
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !18357
  ret void, !dbg !18358
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18359 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !18369, metadata !DIExpression()), !dbg !18386
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18367, metadata !DIExpression()), !dbg !18386
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !18368, metadata !DIExpression()), !dbg !18386
  %5 = icmp eq i64 %4, -1, !dbg !18387
  br i1 %5, label %63, label %6, !dbg !18389

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18390
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.399(%struct._dnode* noundef %7) #28, !dbg !18390
  br i1 %8, label %9, label %10, !dbg !18393

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.401, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.402, i32 0, i32 0), i32 noundef 99) #27, !dbg !18394
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.403, i32 0, i32 0)) #27, !dbg !18394
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.402, i32 0, i32 0), i32 noundef 99) #27, !dbg !18394
  unreachable, !dbg !18394

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !18396
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !18397
  call void @llvm.dbg.value(metadata i32 0, metadata !18370, metadata !DIExpression()), !dbg !18398
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18399, metadata !DIExpression()) #26, !dbg !18406
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18408, !srcloc !18414
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18415
  call void @llvm.dbg.value(metadata i32 undef, metadata !18412, metadata !DIExpression()) #26, !dbg !18415
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18406
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18416
  br i1 %13, label %15, label %14, !dbg !18419

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18420
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.406, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18420
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18420
  unreachable, !dbg !18420

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !18408
  call void @llvm.dbg.value(metadata i32 %16, metadata !18411, metadata !DIExpression()) #26, !dbg !18415
  call void @llvm.dbg.value(metadata i32 %16, metadata !18405, metadata !DIExpression()) #26, !dbg !18406
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18422
  call void @llvm.dbg.value(metadata i32 %16, metadata !18376, metadata !DIExpression()), !dbg !18398
  call void @llvm.dbg.value(metadata i32 undef, metadata !18370, metadata !DIExpression()), !dbg !18398
  %17 = icmp slt i64 %4, -1, !dbg !18423
  br i1 %17, label %18, label %24, !dbg !18424

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !18425
  %20 = add i64 %4, %19, !dbg !18426
  %21 = sub i64 -2, %20, !dbg !18426
  call void @llvm.dbg.value(metadata i64 %21, metadata !18380, metadata !DIExpression()), !dbg !18427
  %22 = icmp sgt i64 %21, 1, !dbg !18428
  %23 = select i1 %22, i64 %21, i64 1, !dbg !18428
  br label %29, !dbg !18429

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !18430
  %26 = tail call fastcc i32 @elapsed.407() #28, !dbg !18432
  %27 = sext i32 %26 to i64, !dbg !18432
  %28 = add nsw i64 %25, %27, !dbg !18433
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !18434
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18435
  store i64 %30, i64* %31, align 8, !dbg !18436
  %32 = tail call fastcc %struct._timeout* @first() #28, !dbg !18437
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !18377, metadata !DIExpression()), !dbg !18439
  %33 = icmp eq %struct._timeout* %32, null, !dbg !18440
  br i1 %33, label %48, label %34, !dbg !18440

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !18441
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !18377, metadata !DIExpression()), !dbg !18439
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18445
  %38 = load i64, i64* %37, align 8, !dbg !18445
  %39 = icmp slt i64 %35, %38, !dbg !18446
  br i1 %39, label %40, label %44, !dbg !18447

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18445
  %42 = sub nsw i64 %38, %35, !dbg !18448
  store i64 %42, i64* %41, align 8, !dbg !18448
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !18450
  tail call fastcc void @sys_dlist_insert.408(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #28, !dbg !18451
  br label %49, !dbg !18452

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !18453
  store i64 %45, i64* %31, align 8, !dbg !18453
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #28, !dbg !18454
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !18377, metadata !DIExpression()), !dbg !18439
  %47 = icmp eq %struct._timeout* %46, null, !dbg !18440
  br i1 %47, label %48, label %34, !dbg !18440, !llvm.loop !18455

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.409(%struct._dnode* noundef nonnull %7) #28, !dbg !18457
  br label %49, !dbg !18460

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #28, !dbg !18461
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !18462
  br i1 %51, label %52, label %59, !dbg !18463

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #28, !dbg !18464
  call void @llvm.dbg.value(metadata i32 %53, metadata !18383, metadata !DIExpression()), !dbg !18465
  %54 = icmp ne i32 %53, 0, !dbg !18466
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !18468
  br i1 %57, label %59, label %58, !dbg !18468

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #27, !dbg !18469
  br label %59, !dbg !18471

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18478
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18477, metadata !DIExpression()) #26, !dbg !18478
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18480
  br i1 %60, label %62, label %61, !dbg !18483

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18484
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.411, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18484
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18484
  unreachable, !dbg !18484

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !18472, metadata !DIExpression()) #26, !dbg !18478
  call void @llvm.dbg.value(metadata i32 %16, metadata !18486, metadata !DIExpression()) #26, !dbg !18489
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !18491, !srcloc !18492
  call void @llvm.dbg.value(metadata i32 undef, metadata !18370, metadata !DIExpression()), !dbg !18398
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !18493
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.399(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !18494 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18500, metadata !DIExpression()), !dbg !18501
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18502
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18502
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18503
  ret i1 %4, !dbg !18504
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.407() unnamed_addr #1 !dbg !18505 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !18508
  %2 = icmp eq i32 %1, 0, !dbg !18509
  br i1 %2, label %3, label %5, !dbg !18508

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !18510
  br label %5, !dbg !18508

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !18508
  ret i32 %6, !dbg !18511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #13 !dbg !18512 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.414() #28, !dbg !18518
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18516, metadata !DIExpression()), !dbg !18519
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !18520
  ret %struct._timeout* %2, !dbg !18521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.408(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !18522 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18526, metadata !DIExpression()), !dbg !18530
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18527, metadata !DIExpression()), !dbg !18530
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18531
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !18531
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !18528, metadata !DIExpression()), !dbg !18530
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !18532
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !18533
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !18534
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !18535
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !18536
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !18537
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !18538
  ret void, !dbg !18539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #13 !dbg !18540 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18544, metadata !DIExpression()), !dbg !18546
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18547
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.412(%struct._dnode* noundef %2) #28, !dbg !18548
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18545, metadata !DIExpression()), !dbg !18546
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !18549
  ret %struct._timeout* %4, !dbg !18550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.409(%struct._dnode* noundef %0) unnamed_addr #14 !dbg !18551 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18556, metadata !DIExpression()), !dbg !18559
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18557, metadata !DIExpression()), !dbg !18559
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18560
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !18558, metadata !DIExpression()), !dbg !18559
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18561
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !18562
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18563
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !18564
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !18565
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !18566
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18567
  ret void, !dbg !18568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !18569 {
  %1 = tail call fastcc %struct._timeout* @first() #28, !dbg !18574
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !18571, metadata !DIExpression()), !dbg !18575
  %2 = tail call fastcc i32 @elapsed.407() #28, !dbg !18576
  call void @llvm.dbg.value(metadata i32 %2, metadata !18572, metadata !DIExpression()), !dbg !18575
  %3 = icmp eq %struct._timeout* %1, null, !dbg !18577
  br i1 %3, label %14, label %4, !dbg !18579

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !18580
  %6 = load i64, i64* %5, align 8, !dbg !18580
  %7 = sext i32 %2 to i64, !dbg !18581
  %8 = sub nsw i64 %6, %7, !dbg !18582
  %9 = icmp sgt i64 %8, 2147483647, !dbg !18583
  br i1 %9, label %14, label %10, !dbg !18584

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !18585
  %12 = select i1 %11, i64 %8, i64 0, !dbg !18585
  %13 = trunc i64 %12 to i32, !dbg !18585
  call void @llvm.dbg.value(metadata i32 %13, metadata !18573, metadata !DIExpression()), !dbg !18575
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !18587
  call void @llvm.dbg.value(metadata i32 %15, metadata !18573, metadata !DIExpression()), !dbg !18575
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !18588
  %17 = icmp ne i32 %16, 0, !dbg !18590
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !18591
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !18591
  call void @llvm.dbg.value(metadata i32 %20, metadata !18573, metadata !DIExpression()), !dbg !18575
  ret i32 %20, !dbg !18592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.412(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !18593 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18597, metadata !DIExpression()), !dbg !18599
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18598, metadata !DIExpression()), !dbg !18599
  %2 = icmp eq %struct._dnode* %0, null, !dbg !18600
  br i1 %2, label %5, label %3, !dbg !18601

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.413(%struct._dnode* noundef nonnull %0) #28, !dbg !18602
  br label %5, !dbg !18601

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !18601
  ret %struct._dnode* %6, !dbg !18603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.413(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !18604 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18606, metadata !DIExpression()), !dbg !18608
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18607, metadata !DIExpression()), !dbg !18608
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18609
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !18610
  br i1 %3, label %7, label %4, !dbg !18611

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18612
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !18612
  br label %7, !dbg !18611

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !18611
  ret %struct._dnode* %8, !dbg !18613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.414() unnamed_addr #13 !dbg !18614 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18618, metadata !DIExpression()), !dbg !18619
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.415() #28, !dbg !18620
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !18620
  ret %struct._dnode* %3, !dbg !18621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.415() unnamed_addr #13 !dbg !18622 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18626, metadata !DIExpression()), !dbg !18627
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !18628
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !18629
  ret i1 %2, !dbg !18630
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18631 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18635, metadata !DIExpression()), !dbg !18640
  call void @llvm.dbg.value(metadata i32 -22, metadata !18636, metadata !DIExpression()), !dbg !18640
  call void @llvm.dbg.value(metadata i32 0, metadata !18637, metadata !DIExpression()), !dbg !18641
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18399, metadata !DIExpression()) #26, !dbg !18642
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18644, !srcloc !18414
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18646
  call void @llvm.dbg.value(metadata i32 undef, metadata !18412, metadata !DIExpression()) #26, !dbg !18646
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18642
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18647
  br i1 %3, label %5, label %4, !dbg !18648

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18649
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.406, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18649
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18649
  unreachable, !dbg !18649

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18646
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18642
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18650
  call void @llvm.dbg.value(metadata i32 undef, metadata !18639, metadata !DIExpression()), !dbg !18641
  call void @llvm.dbg.value(metadata i32 -22, metadata !18636, metadata !DIExpression()), !dbg !18640
  call void @llvm.dbg.value(metadata i32 undef, metadata !18637, metadata !DIExpression()), !dbg !18641
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !18636, metadata !DIExpression()), !dbg !18640
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.399(%struct._dnode* noundef %6) #28, !dbg !18651
  br i1 %7, label %8, label %9, !dbg !18655

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #28, !dbg !18656
  call void @llvm.dbg.value(metadata i32 0, metadata !18636, metadata !DIExpression()), !dbg !18640
  br label %9, !dbg !18658

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !18640
  call void @llvm.dbg.value(metadata i32 %10, metadata !18636, metadata !DIExpression()), !dbg !18640
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18659
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18477, metadata !DIExpression()) #26, !dbg !18659
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18661
  br i1 %11, label %13, label %12, !dbg !18662

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18663
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.411, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18663
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18663
  unreachable, !dbg !18663

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !18644
  call void @llvm.dbg.value(metadata i32 %14, metadata !18411, metadata !DIExpression()) #26, !dbg !18646
  call void @llvm.dbg.value(metadata i32 %14, metadata !18405, metadata !DIExpression()) #26, !dbg !18642
  call void @llvm.dbg.value(metadata i32 %14, metadata !18639, metadata !DIExpression()), !dbg !18641
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18659
  call void @llvm.dbg.value(metadata i32 undef, metadata !18486, metadata !DIExpression()) #26, !dbg !18664
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !18666, !srcloc !18492
  call void @llvm.dbg.value(metadata i32 %10, metadata !18636, metadata !DIExpression()), !dbg !18640
  call void @llvm.dbg.value(metadata i32 undef, metadata !18637, metadata !DIExpression()), !dbg !18641
  ret i32 %10, !dbg !18667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #14 !dbg !18668 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18670, metadata !DIExpression()), !dbg !18671
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #28, !dbg !18672
  %3 = icmp eq %struct._timeout* %2, null, !dbg !18674
  br i1 %3, label %10, label %4, !dbg !18675

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18676
  %6 = load i64, i64* %5, align 8, !dbg !18676
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !18678
  %8 = load i64, i64* %7, align 8, !dbg !18679
  %9 = add nsw i64 %8, %6, !dbg !18679
  store i64 %9, i64* %7, align 8, !dbg !18679
  br label %10, !dbg !18680

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18681
  tail call fastcc void @sys_dlist_remove.418(%struct._dnode* noundef %11) #28, !dbg !18682
  ret void, !dbg !18683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.418(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !18684 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18688, metadata !DIExpression()), !dbg !18691
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18692
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18692
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18689, metadata !DIExpression()), !dbg !18691
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18693
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18693
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18690, metadata !DIExpression()), !dbg !18691
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18694
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18695
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18696
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18697
  tail call fastcc void @sys_dnode_init.419(%struct._dnode* noundef %0) #28, !dbg !18698
  ret void, !dbg !18699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.419(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !18700 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18702, metadata !DIExpression()), !dbg !18703
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18704
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18705
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18706
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18707
  ret void, !dbg !18708
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18709 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18715, metadata !DIExpression()), !dbg !18720
  call void @llvm.dbg.value(metadata i64 0, metadata !18716, metadata !DIExpression()), !dbg !18720
  call void @llvm.dbg.value(metadata i32 0, metadata !18717, metadata !DIExpression()), !dbg !18721
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18399, metadata !DIExpression()) #26, !dbg !18722
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18724, !srcloc !18414
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18726
  call void @llvm.dbg.value(metadata i32 undef, metadata !18412, metadata !DIExpression()) #26, !dbg !18726
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18722
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18727
  br i1 %3, label %5, label %4, !dbg !18728

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18729
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.406, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18729
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18729
  unreachable, !dbg !18729

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18726
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18722
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18730
  call void @llvm.dbg.value(metadata i32 undef, metadata !18719, metadata !DIExpression()), !dbg !18721
  call void @llvm.dbg.value(metadata i64 0, metadata !18716, metadata !DIExpression()), !dbg !18720
  call void @llvm.dbg.value(metadata i32 undef, metadata !18717, metadata !DIExpression()), !dbg !18721
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #28, !dbg !18731
  call void @llvm.dbg.value(metadata i64 %6, metadata !18716, metadata !DIExpression()), !dbg !18720
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18734
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18477, metadata !DIExpression()) #26, !dbg !18734
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18736
  br i1 %7, label %9, label %8, !dbg !18737

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18738
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.411, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18738
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18738
  unreachable, !dbg !18738

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !18724
  call void @llvm.dbg.value(metadata i32 %10, metadata !18411, metadata !DIExpression()) #26, !dbg !18726
  call void @llvm.dbg.value(metadata i32 %10, metadata !18405, metadata !DIExpression()) #26, !dbg !18722
  call void @llvm.dbg.value(metadata i32 %10, metadata !18719, metadata !DIExpression()), !dbg !18721
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18734
  call void @llvm.dbg.value(metadata i32 undef, metadata !18486, metadata !DIExpression()) #26, !dbg !18739
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #26, !dbg !18741, !srcloc !18492
  call void @llvm.dbg.value(metadata i64 %6, metadata !18716, metadata !DIExpression()), !dbg !18720
  call void @llvm.dbg.value(metadata i32 undef, metadata !18717, metadata !DIExpression()), !dbg !18721
  ret i64 %6, !dbg !18742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18743 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18745, metadata !DIExpression()), !dbg !18749
  call void @llvm.dbg.value(metadata i64 0, metadata !18746, metadata !DIExpression()), !dbg !18749
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.420(%struct._timeout* noundef %0) #28, !dbg !18750
  br i1 %2, label %21, label %3, !dbg !18752

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #28, !dbg !18753
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18747, metadata !DIExpression()), !dbg !18754
  call void @llvm.dbg.value(metadata i64 0, metadata !18746, metadata !DIExpression()), !dbg !18749
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18755
  br i1 %5, label %16, label %6, !dbg !18757

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18747, metadata !DIExpression()), !dbg !18754
  call void @llvm.dbg.value(metadata i64 %8, metadata !18746, metadata !DIExpression()), !dbg !18749
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18758
  %10 = load i64, i64* %9, align 8, !dbg !18758
  %11 = add nsw i64 %10, %8, !dbg !18760
  call void @llvm.dbg.value(metadata i64 %11, metadata !18746, metadata !DIExpression()), !dbg !18749
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18761
  br i1 %12, label %16, label %13, !dbg !18763

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #28, !dbg !18764
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18747, metadata !DIExpression()), !dbg !18754
  call void @llvm.dbg.value(metadata i64 %11, metadata !18746, metadata !DIExpression()), !dbg !18749
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18755
  br i1 %15, label %16, label %6, !dbg !18757, !llvm.loop !18765

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18749
  call void @llvm.dbg.value(metadata i64 %17, metadata !18746, metadata !DIExpression()), !dbg !18749
  %18 = tail call fastcc i32 @elapsed.407() #28, !dbg !18767
  %19 = sext i32 %18 to i64, !dbg !18767
  %20 = sub nsw i64 %17, %19, !dbg !18768
  br label %21, !dbg !18769

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18749
  ret i64 %22, !dbg !18770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.420(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !18771 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18775, metadata !DIExpression()), !dbg !18776
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18777
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.399(%struct._dnode* noundef %2) #28, !dbg !18778
  %4 = xor i1 %3, true, !dbg !18779
  ret i1 %4, !dbg !18780
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18781 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18783, metadata !DIExpression()), !dbg !18788
  call void @llvm.dbg.value(metadata i64 0, metadata !18784, metadata !DIExpression()), !dbg !18788
  call void @llvm.dbg.value(metadata i32 0, metadata !18785, metadata !DIExpression()), !dbg !18789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18399, metadata !DIExpression()) #26, !dbg !18790
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18792, !srcloc !18414
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18794
  call void @llvm.dbg.value(metadata i32 undef, metadata !18412, metadata !DIExpression()) #26, !dbg !18794
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18790
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18795
  br i1 %3, label %5, label %4, !dbg !18796

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.406, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18797
  unreachable, !dbg !18797

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18794
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18790
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18798
  call void @llvm.dbg.value(metadata i32 undef, metadata !18787, metadata !DIExpression()), !dbg !18789
  call void @llvm.dbg.value(metadata i64 0, metadata !18784, metadata !DIExpression()), !dbg !18788
  call void @llvm.dbg.value(metadata i32 undef, metadata !18785, metadata !DIExpression()), !dbg !18789
  %6 = load i64, i64* @curr_tick, align 8, !dbg !18799
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #28, !dbg !18802
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !18784, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18788
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18803
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18477, metadata !DIExpression()) #26, !dbg !18803
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18805
  br i1 %8, label %10, label %9, !dbg !18806

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18807
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.411, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18807
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18807
  unreachable, !dbg !18807

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !18792
  call void @llvm.dbg.value(metadata i32 %11, metadata !18411, metadata !DIExpression()) #26, !dbg !18794
  call void @llvm.dbg.value(metadata i32 %11, metadata !18405, metadata !DIExpression()) #26, !dbg !18790
  call void @llvm.dbg.value(metadata i32 %11, metadata !18787, metadata !DIExpression()), !dbg !18789
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !18784, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18788
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18803
  call void @llvm.dbg.value(metadata i32 undef, metadata !18486, metadata !DIExpression()) #26, !dbg !18808
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #26, !dbg !18810, !srcloc !18492
  call void @llvm.dbg.value(metadata i32 undef, metadata !18785, metadata !DIExpression()), !dbg !18789
  %12 = add i64 %7, %6, !dbg !18811
  ret i64 %12, !dbg !18812
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18813 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18815, metadata !DIExpression()), !dbg !18819
  call void @llvm.dbg.value(metadata i32 0, metadata !18816, metadata !DIExpression()), !dbg !18820
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18399, metadata !DIExpression()) #26, !dbg !18821
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18823, !srcloc !18414
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18825
  call void @llvm.dbg.value(metadata i32 undef, metadata !18412, metadata !DIExpression()) #26, !dbg !18825
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18821
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18826
  br i1 %2, label %4, label %3, !dbg !18827

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18828
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.406, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18828
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18828
  unreachable, !dbg !18828

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18825
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18821
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18829
  call void @llvm.dbg.value(metadata i32 undef, metadata !18818, metadata !DIExpression()), !dbg !18820
  call void @llvm.dbg.value(metadata i32 -1, metadata !18815, metadata !DIExpression()), !dbg !18819
  call void @llvm.dbg.value(metadata i32 undef, metadata !18816, metadata !DIExpression()), !dbg !18820
  %5 = tail call fastcc i32 @next_timeout() #28, !dbg !18830
  call void @llvm.dbg.value(metadata i32 %5, metadata !18815, metadata !DIExpression()), !dbg !18819
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18477, metadata !DIExpression()) #26, !dbg !18833
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18835
  br i1 %6, label %8, label %7, !dbg !18836

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18837
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.411, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18837
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18837
  unreachable, !dbg !18837

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !18823
  call void @llvm.dbg.value(metadata i32 %9, metadata !18411, metadata !DIExpression()) #26, !dbg !18825
  call void @llvm.dbg.value(metadata i32 %9, metadata !18405, metadata !DIExpression()) #26, !dbg !18821
  call void @llvm.dbg.value(metadata i32 %9, metadata !18818, metadata !DIExpression()), !dbg !18820
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18833
  call void @llvm.dbg.value(metadata i32 undef, metadata !18486, metadata !DIExpression()) #26, !dbg !18838
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !18840, !srcloc !18492
  call void @llvm.dbg.value(metadata i32 %5, metadata !18815, metadata !DIExpression()), !dbg !18819
  call void @llvm.dbg.value(metadata i32 undef, metadata !18816, metadata !DIExpression()), !dbg !18820
  ret i32 %5, !dbg !18841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18844, metadata !DIExpression()), !dbg !18854
  call void @llvm.dbg.value(metadata i1 %1, metadata !18845, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18854
  call void @llvm.dbg.value(metadata i32 0, metadata !18846, metadata !DIExpression()), !dbg !18855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18399, metadata !DIExpression()) #26, !dbg !18856
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18858, !srcloc !18414
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18860
  call void @llvm.dbg.value(metadata i32 undef, metadata !18412, metadata !DIExpression()) #26, !dbg !18860
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18856
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18861
  br i1 %4, label %6, label %5, !dbg !18862

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18863
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.406, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18863
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18863
  unreachable, !dbg !18863

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18860
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18856
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18864
  call void @llvm.dbg.value(metadata i32 undef, metadata !18848, metadata !DIExpression()), !dbg !18855
  call void @llvm.dbg.value(metadata i32 undef, metadata !18846, metadata !DIExpression()), !dbg !18855
  %7 = tail call fastcc i32 @next_timeout() #28, !dbg !18865
  call void @llvm.dbg.value(metadata i32 %7, metadata !18849, metadata !DIExpression()), !dbg !18866
  call void @llvm.dbg.value(metadata i1 undef, metadata !18852, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18866
  %8 = icmp slt i32 %7, 2, !dbg !18867
  call void @llvm.dbg.value(metadata i1 %8, metadata !18853, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18866
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !18868
  call void @llvm.dbg.value(metadata i1 %9, metadata !18852, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18866
  br i1 %10, label %14, label %11, !dbg !18868

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !18870
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !18870
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #27, !dbg !18872
  br label %14, !dbg !18873

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18874
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18477, metadata !DIExpression()) #26, !dbg !18874
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18876
  br i1 %15, label %17, label %16, !dbg !18877

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18878
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.411, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18878
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18878
  unreachable, !dbg !18878

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !18858
  call void @llvm.dbg.value(metadata i32 %18, metadata !18411, metadata !DIExpression()) #26, !dbg !18860
  call void @llvm.dbg.value(metadata i32 %18, metadata !18405, metadata !DIExpression()) #26, !dbg !18856
  call void @llvm.dbg.value(metadata i32 %18, metadata !18848, metadata !DIExpression()), !dbg !18855
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18874
  call void @llvm.dbg.value(metadata i32 undef, metadata !18486, metadata !DIExpression()) #26, !dbg !18879
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !18881, !srcloc !18492
  call void @llvm.dbg.value(metadata i32 1, metadata !18846, metadata !DIExpression()), !dbg !18855
  call void @llvm.dbg.value(metadata i32 undef, metadata !18846, metadata !DIExpression()), !dbg !18855
  ret void, !dbg !18882
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18887, metadata !DIExpression()), !dbg !18892
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !18893
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18399, metadata !DIExpression()) #26, !dbg !18894
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18896, !srcloc !18414
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18898
  call void @llvm.dbg.value(metadata i32 undef, metadata !18412, metadata !DIExpression()) #26, !dbg !18898
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18894
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18899
  br i1 %3, label %5, label %4, !dbg !18900

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18901
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.406, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18901
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18901
  unreachable, !dbg !18901

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18898
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18894
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18902
  call void @llvm.dbg.value(metadata i32 undef, metadata !18888, metadata !DIExpression()), !dbg !18892
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18892
  call void @llvm.dbg.value(metadata i32 undef, metadata !18888, metadata !DIExpression()), !dbg !18892
  %6 = tail call fastcc %struct._timeout* @first() #28, !dbg !18903
  %7 = icmp eq %struct._timeout* %6, null, !dbg !18904
  br i1 %7, label %37, label %8, !dbg !18905

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !18892
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !18906
  %14 = load i64, i64* %13, align 8, !dbg !18906
  %15 = sext i32 %11 to i64, !dbg !18907
  %16 = icmp sgt i64 %14, %15, !dbg !18908
  br i1 %16, label %35, label %17, !dbg !18909

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !18889, metadata !DIExpression()), !dbg !18910
  %18 = trunc i64 %14 to i32, !dbg !18911
  call void @llvm.dbg.value(metadata i32 %18, metadata !18891, metadata !DIExpression()), !dbg !18910
  %19 = sext i32 %18 to i64, !dbg !18912
  %20 = load i64, i64* @curr_tick, align 8, !dbg !18913
  %21 = add i64 %20, %19, !dbg !18913
  store i64 %21, i64* @curr_tick, align 8, !dbg !18913
  store i64 0, i64* %13, align 8, !dbg !18914
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #28, !dbg !18915
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18916
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18477, metadata !DIExpression()) #26, !dbg !18916
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18918
  br i1 %22, label %24, label %23, !dbg !18919

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18920
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.411, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18920
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18920
  unreachable, !dbg !18920

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !18472, metadata !DIExpression()) #26, !dbg !18916
  call void @llvm.dbg.value(metadata i32 %12, metadata !18486, metadata !DIExpression()) #26, !dbg !18921
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #26, !dbg !18923, !srcloc !18492
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !18924
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !18924
  tail call void %26(%struct._timeout* noundef nonnull %9) #27, !dbg !18925
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18399, metadata !DIExpression()) #26, !dbg !18926
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18928, !srcloc !18414
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18930
  call void @llvm.dbg.value(metadata i32 undef, metadata !18412, metadata !DIExpression()) #26, !dbg !18930
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18926
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18931
  br i1 %28, label %30, label %29, !dbg !18932

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18933
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.406, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18933
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18933
  unreachable, !dbg !18933

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18930
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18926
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18934
  call void @llvm.dbg.value(metadata i32 undef, metadata !18888, metadata !DIExpression()), !dbg !18892
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !18935
  %32 = sub nsw i32 %31, %18, !dbg !18935
  store i32 %32, i32* @announce_remaining, align 4, !dbg !18892
  call void @llvm.dbg.value(metadata i32 undef, metadata !18888, metadata !DIExpression()), !dbg !18892
  %33 = tail call fastcc %struct._timeout* @first() #28, !dbg !18903
  %34 = icmp eq %struct._timeout* %33, null, !dbg !18904
  br i1 %34, label %37, label %8, !dbg !18905, !llvm.loop !18936

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !18938
  store i64 %36, i64* %13, align 8, !dbg !18938
  br label %41, !dbg !18941

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !18892
  %40 = sext i32 %39 to i64, !dbg !18942
  br label %41, !dbg !18942

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !18942
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !18943
  %45 = add i64 %44, %42, !dbg !18943
  store i64 %45, i64* @curr_tick, align 8, !dbg !18943
  store i32 0, i32* @announce_remaining, align 4, !dbg !18944
  %46 = tail call fastcc i32 @next_timeout() #28, !dbg !18945
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #27, !dbg !18946
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18947
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18477, metadata !DIExpression()) #26, !dbg !18947
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18949
  br i1 %47, label %49, label %48, !dbg !18950

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18951
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.411, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18951
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18951
  unreachable, !dbg !18951

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !18892
  call void @llvm.dbg.value(metadata i32 %50, metadata !18472, metadata !DIExpression()) #26, !dbg !18947
  call void @llvm.dbg.value(metadata i32 %50, metadata !18486, metadata !DIExpression()) #26, !dbg !18952
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #26, !dbg !18954, !srcloc !18492
  ret void, !dbg !18955
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18956 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18960, metadata !DIExpression()), !dbg !18964
  call void @llvm.dbg.value(metadata i32 0, metadata !18961, metadata !DIExpression()), !dbg !18965
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18399, metadata !DIExpression()) #26, !dbg !18966
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18968, !srcloc !18414
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18970
  call void @llvm.dbg.value(metadata i32 undef, metadata !18412, metadata !DIExpression()) #26, !dbg !18970
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18966
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18971
  br i1 %2, label %4, label %3, !dbg !18972

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18973
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.406, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18973
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 148) #27, !dbg !18973
  unreachable, !dbg !18973

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18411, metadata !DIExpression()) #26, !dbg !18970
  call void @llvm.dbg.value(metadata i32 undef, metadata !18405, metadata !DIExpression()) #26, !dbg !18966
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18974
  call void @llvm.dbg.value(metadata i32 undef, metadata !18963, metadata !DIExpression()), !dbg !18965
  call void @llvm.dbg.value(metadata i64 0, metadata !18960, metadata !DIExpression()), !dbg !18964
  call void @llvm.dbg.value(metadata i32 undef, metadata !18961, metadata !DIExpression()), !dbg !18965
  %5 = load i64, i64* @curr_tick, align 8, !dbg !18975
  %6 = tail call fastcc i32 @elapsed.407() #28, !dbg !18978
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18960, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18964
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18477, metadata !DIExpression()) #26, !dbg !18979
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18981
  br i1 %7, label %9, label %8, !dbg !18982

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18983
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.411, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18983
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.405, i32 0, i32 0), i32 noundef 194) #27, !dbg !18983
  unreachable, !dbg !18983

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !18968
  call void @llvm.dbg.value(metadata i32 %10, metadata !18411, metadata !DIExpression()) #26, !dbg !18970
  call void @llvm.dbg.value(metadata i32 %10, metadata !18405, metadata !DIExpression()) #26, !dbg !18966
  call void @llvm.dbg.value(metadata i32 %10, metadata !18963, metadata !DIExpression()), !dbg !18965
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18960, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18964
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !18960, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18964
  call void @llvm.dbg.value(metadata i32 undef, metadata !18472, metadata !DIExpression()) #26, !dbg !18979
  call void @llvm.dbg.value(metadata i32 undef, metadata !18486, metadata !DIExpression()) #26, !dbg !18984
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #26, !dbg !18986, !srcloc !18492
  call void @llvm.dbg.value(metadata i32 undef, metadata !18961, metadata !DIExpression()), !dbg !18965
  %11 = sext i32 %6 to i64, !dbg !18978
  %12 = add i64 %5, %11, !dbg !18987
  ret i64 %12, !dbg !18988
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18989 {
  %1 = tail call i64 @sys_clock_tick_get() #28, !dbg !18990
  %2 = trunc i64 %1 to i32, !dbg !18991
  ret i32 %2, !dbg !18992
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18993 {
  %1 = tail call i64 @sys_clock_tick_get() #28, !dbg !18994
  ret i64 %1, !dbg !18995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18998, metadata !DIExpression()), !dbg !19005
  %2 = icmp eq i32 %0, 0, !dbg !19006
  br i1 %2, label %10, label %3, !dbg !19008

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.427() #28, !dbg !19009
  call void @llvm.dbg.value(metadata i32 %4, metadata !18999, metadata !DIExpression()), !dbg !19005
  %5 = shl i32 %0, 5, !dbg !19010
  call void @llvm.dbg.value(metadata i32 %5, metadata !19000, metadata !DIExpression()), !dbg !19005
  br label %6, !dbg !19011

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.427() #28, !dbg !19012
  call void @llvm.dbg.value(metadata i32 %7, metadata !19001, metadata !DIExpression()), !dbg !19013
  %8 = sub i32 %7, %4, !dbg !19014
  %9 = icmp ult i32 %8, %5, !dbg !19016
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !19017
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.427() unnamed_addr #1 !dbg !19018 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.428() #28, !dbg !19019
  ret i32 %1, !dbg !19020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.428() unnamed_addr #1 !dbg !19021 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !19022
  ret i32 %1, !dbg !19023
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !19024 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !19028, metadata !DIExpression()), !dbg !19030
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !19031

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #28, !dbg !19032
  br label %14, !dbg !19036

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !19029, metadata !DIExpression()), !dbg !19030
  %6 = icmp slt i64 %2, -1, !dbg !19037
  br i1 %6, label %7, label %9, !dbg !19040

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !19041
  br label %14, !dbg !19042

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #28, !dbg !19044
  %11 = icmp ugt i64 %2, 1, !dbg !19045
  %12 = select i1 %11, i64 %2, i64 1, !dbg !19045
  %13 = add nsw i64 %10, %12, !dbg !19046
  br label %14, !dbg !19047

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !19048
  ret i64 %15, !dbg !19049
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !19050 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.431, i32 0, i32 0)) #27, !dbg !19052
  ret void, !dbg !19053
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !19054 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !19056, metadata !DIExpression()), !dbg !19078
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !19057, metadata !DIExpression()), !dbg !19079
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !19080

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.433, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.435, i32 0, i32 0), i32 noundef 24) #27, !dbg !19084
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.436, i32 0, i32 0)) #27, !dbg !19084
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.435, i32 0, i32 0), i32 noundef 24) #27, !dbg !19084
  unreachable, !dbg !19084

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !19057, metadata !DIExpression()), !dbg !19079
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !19087
  br i1 %5, label %7, label %6, !dbg !19088

6:                                                ; preds = %3
  ret i32 0, !dbg !19089

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !19090
  %9 = load i8*, i8** %8, align 4, !dbg !19090
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !19093
  %11 = load i32, i32* %10, align 4, !dbg !19093
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #28, !dbg !19094
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !19095
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !19057, metadata !DIExpression()), !dbg !19079
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !19096
  br i1 %13, label %2, label %3, !dbg !19080, !llvm.loop !19097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !19099 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19103, metadata !DIExpression()), !dbg !19106
  call void @llvm.dbg.value(metadata i8* %1, metadata !19104, metadata !DIExpression()), !dbg !19106
  call void @llvm.dbg.value(metadata i32 %2, metadata !19105, metadata !DIExpression()), !dbg !19106
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19107
  tail call fastcc void @z_waitq_init.437(%union.anon* noundef nonnull %4) #28, !dbg !19108
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19109
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !19110
  ret void, !dbg !19111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.437(%union.anon* noundef %0) unnamed_addr #12 !dbg !19112 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !19117, metadata !DIExpression()), !dbg !19118
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !19119
  tail call fastcc void @sys_dlist_init.438(%struct._dnode* noundef %2) #28, !dbg !19120
  ret void, !dbg !19121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.438(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !19122 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19127, metadata !DIExpression()), !dbg !19128
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19129
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !19130
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19131
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !19132
  ret void, !dbg !19133
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !19134 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !19145, metadata !DIExpression()), !dbg !19155
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19142, metadata !DIExpression()), !dbg !19155
  call void @llvm.dbg.value(metadata i32 %1, metadata !19143, metadata !DIExpression()), !dbg !19155
  call void @llvm.dbg.value(metadata i32 %2, metadata !19144, metadata !DIExpression()), !dbg !19155
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !19156
  call void @llvm.dbg.value(metadata i64 %6, metadata !19147, metadata !DIExpression()), !dbg !19155
  call void @llvm.dbg.value(metadata i8* null, metadata !19148, metadata !DIExpression()), !dbg !19155
  %7 = icmp eq i64 %5, -1, !dbg !19157
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !19157
  call void @llvm.dbg.value(metadata i64 %8, metadata !19147, metadata !DIExpression()), !dbg !19155
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19158
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19159, metadata !DIExpression()) #26, !dbg !19166
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19168, !srcloc !19174
  call void @llvm.dbg.value(metadata i32 undef, metadata !19171, metadata !DIExpression()) #26, !dbg !19175
  call void @llvm.dbg.value(metadata i32 undef, metadata !19172, metadata !DIExpression()) #26, !dbg !19175
  call void @llvm.dbg.value(metadata i32 undef, metadata !19165, metadata !DIExpression()) #26, !dbg !19166
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19176
  br i1 %11, label %13, label %12, !dbg !19179

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.433, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.439, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.440, i32 0, i32 0), i32 noundef 148) #27, !dbg !19180
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.441, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19180
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.440, i32 0, i32 0), i32 noundef 148) #27, !dbg !19180
  unreachable, !dbg !19180

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !19171, metadata !DIExpression()) #26, !dbg !19175
  call void @llvm.dbg.value(metadata i32 undef, metadata !19165, metadata !DIExpression()) #26, !dbg !19166
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19182
  call void @llvm.dbg.value(metadata i32 undef, metadata !19149, metadata !DIExpression()), !dbg !19155
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !19183, !srcloc !19192
  call void @llvm.dbg.value(metadata i32 %14, metadata !19186, metadata !DIExpression()) #26, !dbg !19193
  %15 = icmp eq i32 %14, 0, !dbg !19194
  %16 = icmp eq i64 %5, 0, !dbg !19195
  %17 = select i1 %15, i1 true, i1 %16, !dbg !19195
  br i1 %17, label %18, label %25, !dbg !19195

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !19148, metadata !DIExpression()), !dbg !19155
  call void @llvm.dbg.value(metadata i8 0, metadata !19154, metadata !DIExpression()), !dbg !19155
  call void @llvm.dbg.value(metadata i32 undef, metadata !19149, metadata !DIExpression()), !dbg !19155
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !19196
  call void @llvm.dbg.value(metadata i8* %20, metadata !19148, metadata !DIExpression()), !dbg !19155
  %21 = tail call i64 @sys_clock_tick_get() #27, !dbg !19198
  call void @llvm.dbg.value(metadata i64 %21, metadata !19146, metadata !DIExpression()), !dbg !19155
  %22 = icmp eq i8* %20, null, !dbg !19199
  br i1 %22, label %23, label %43, !dbg !19201

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !19149, metadata !DIExpression()), !dbg !19155
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !19201

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.433, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.442, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.435, i32 0, i32 0), i32 noundef 76) #27, !dbg !19202
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.443, i32 0, i32 0)) #27, !dbg !19202
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.435, i32 0, i32 0), i32 noundef 76) #27, !dbg !19202
  unreachable, !dbg !19202

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !19154, metadata !DIExpression()), !dbg !19155
  %29 = sub nsw i64 %8, %27, !dbg !19204
  %30 = icmp slt i64 %29, 1, !dbg !19205
  br i1 %30, label %43, label %31, !dbg !19206

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !19155
  call void @llvm.dbg.value(metadata i8 undef, metadata !19154, metadata !DIExpression()), !dbg !19155
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !19207
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !19207
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %union.anon* noundef nonnull %24, [1 x i64] %34) #27, !dbg !19207
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19159, metadata !DIExpression()) #26, !dbg !19208
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19210, !srcloc !19174
  call void @llvm.dbg.value(metadata i32 undef, metadata !19171, metadata !DIExpression()) #26, !dbg !19212
  call void @llvm.dbg.value(metadata i32 undef, metadata !19172, metadata !DIExpression()) #26, !dbg !19212
  call void @llvm.dbg.value(metadata i32 undef, metadata !19165, metadata !DIExpression()) #26, !dbg !19208
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19213
  br i1 %37, label %39, label %38, !dbg !19214

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.433, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.439, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.440, i32 0, i32 0), i32 noundef 148) #27, !dbg !19215
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.441, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19215
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.440, i32 0, i32 0), i32 noundef 148) #27, !dbg !19215
  unreachable, !dbg !19215

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !19154, metadata !DIExpression()), !dbg !19155
  call void @llvm.dbg.value(metadata i32 undef, metadata !19171, metadata !DIExpression()) #26, !dbg !19212
  call void @llvm.dbg.value(metadata i32 undef, metadata !19165, metadata !DIExpression()) #26, !dbg !19208
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19216
  call void @llvm.dbg.value(metadata i32 undef, metadata !19149, metadata !DIExpression()), !dbg !19155
  call void @llvm.dbg.value(metadata i8* null, metadata !19148, metadata !DIExpression()), !dbg !19155
  call void @llvm.dbg.value(metadata i32 undef, metadata !19149, metadata !DIExpression()), !dbg !19155
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !19196
  call void @llvm.dbg.value(metadata i8* %40, metadata !19148, metadata !DIExpression()), !dbg !19155
  %41 = tail call i64 @sys_clock_tick_get() #27, !dbg !19198
  call void @llvm.dbg.value(metadata i64 %41, metadata !19146, metadata !DIExpression()), !dbg !19155
  %42 = icmp eq i8* %40, null, !dbg !19199
  br i1 %42, label %26, label %43, !dbg !19201, !llvm.loop !19217

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !19196
  call void @llvm.dbg.value(metadata i8* %45, metadata !19148, metadata !DIExpression()), !dbg !19155
  call void @llvm.dbg.value(metadata i32 undef, metadata !19220, metadata !DIExpression()) #26, !dbg !19226
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19225, metadata !DIExpression()) #26, !dbg !19226
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19228
  br i1 %46, label %48, label %47, !dbg !19231

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.433, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.444, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.440, i32 0, i32 0), i32 noundef 194) #27, !dbg !19232
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.445, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19232
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.440, i32 0, i32 0), i32 noundef 194) #27, !dbg !19232
  unreachable, !dbg !19232

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !19155
  call void @llvm.dbg.value(metadata i32 %49, metadata !19220, metadata !DIExpression()) #26, !dbg !19226
  call void @llvm.dbg.value(metadata i32 %49, metadata !19234, metadata !DIExpression()) #26, !dbg !19237
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #26, !dbg !19239, !srcloc !19240
  ret i8* %45, !dbg !19241
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !19242 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19248, metadata !DIExpression()), !dbg !19250
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19246, metadata !DIExpression()), !dbg !19250
  call void @llvm.dbg.value(metadata i32 %1, metadata !19247, metadata !DIExpression()), !dbg !19250
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #28, !dbg !19251
  call void @llvm.dbg.value(metadata i8* %4, metadata !19249, metadata !DIExpression()), !dbg !19250
  ret i8* %4, !dbg !19252
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !19253 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19257, metadata !DIExpression()), !dbg !19260
  call void @llvm.dbg.value(metadata i8* %1, metadata !19258, metadata !DIExpression()), !dbg !19260
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19159, metadata !DIExpression()) #26, !dbg !19262
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19264, !srcloc !19174
  call void @llvm.dbg.value(metadata i32 undef, metadata !19171, metadata !DIExpression()) #26, !dbg !19266
  call void @llvm.dbg.value(metadata i32 undef, metadata !19172, metadata !DIExpression()) #26, !dbg !19266
  call void @llvm.dbg.value(metadata i32 undef, metadata !19165, metadata !DIExpression()) #26, !dbg !19262
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19267
  br i1 %5, label %7, label %6, !dbg !19268

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.433, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.439, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.440, i32 0, i32 0), i32 noundef 148) #27, !dbg !19269
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.441, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !19269
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.440, i32 0, i32 0), i32 noundef 148) #27, !dbg !19269
  unreachable, !dbg !19269

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !19264
  call void @llvm.dbg.value(metadata i32 %8, metadata !19171, metadata !DIExpression()) #26, !dbg !19266
  call void @llvm.dbg.value(metadata i32 %8, metadata !19165, metadata !DIExpression()) #26, !dbg !19262
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19270
  call void @llvm.dbg.value(metadata i32 %8, metadata !19259, metadata !DIExpression()), !dbg !19260
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19271
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #27, !dbg !19272
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19273
  %11 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %10) #27, !dbg !19275
  %12 = icmp eq i32 %11, 0, !dbg !19276
  br i1 %12, label %15, label %13, !dbg !19277

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !19278
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #27, !dbg !19278
  br label %19, !dbg !19280

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !19220, metadata !DIExpression()) #26, !dbg !19281
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19225, metadata !DIExpression()) #26, !dbg !19281
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19284
  br i1 %16, label %18, label %17, !dbg !19285

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.433, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.444, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.440, i32 0, i32 0), i32 noundef 194) #27, !dbg !19286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.445, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !19286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.440, i32 0, i32 0), i32 noundef 194) #27, !dbg !19286
  unreachable, !dbg !19286

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !19220, metadata !DIExpression()) #26, !dbg !19281
  call void @llvm.dbg.value(metadata i32 %8, metadata !19234, metadata !DIExpression()) #26, !dbg !19287
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !19289, !srcloc !19240
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !19290
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree noinline nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { nofree nosync nounwind willreturn }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { argmemonly nofree nounwind willreturn writeonly }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { nounwind }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin optsize "no-builtins" }
attributes #29 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #30 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #31 = { nounwind readnone }
attributes #32 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1014, !2, !2586, !27, !354, !420, !442, !2588, !2590, !2623, !2657, !2659, !452, !516, !2661, !2664, !2675, !2721, !2723, !2751, !2779, !2822, !2893, !2938, !545, !687, !2966, !723, !733, !758, !866, !1044, !2971, !1162, !1228, !1497, !1737, !2992, !1852, !1939, !2994, !3065, !3114, !1974, !3117, !1981, !2352, !3135, !3137, !2372, !2397, !3243, !2514, !3246, !2555}
!llvm.ident = !{!3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248, !3248}
!llvm.module.flags = !{!3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !120, line: 10, type: !346, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !117, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !104, !105, !106, !107, !111, !113, !114, !116}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!106 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !108, line: 46, baseType: !109)
!108 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !110)
!110 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !112, line: 214, baseType: !32)
!112 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !105)
!117 = !{!25, !118, !271, !275, !282, !315, !320, !324, !326}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "_k_thread_data_metairq_thread", scope: !27, file: !120, line: 28, type: !121, isLocal: false, isDefinition: true, align: 32)
!120 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = !{!124, !244, !252, !253, !258, !259, !260, !261, !262, !263, !264, !268}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !121, file: !122, line: 621, baseType: !125, size: 32)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !{!129, !198, !211, !212, !213, !214, !220, !239}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !126, file: !127, line: 247, baseType: !130, size: 384)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !131)
!131 = !{!132, !160, !168, !171, !172, !185, !186, !187}
!132 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 60, baseType: !133, size: 64)
!133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 60, size: 64, elements: !134)
!134 = !{!135, !151}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !133, file: !127, line: 61, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !139)
!139 = !{!140, !146}
!140 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 38, baseType: !141, size: 32)
!141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 38, size: 32, elements: !142)
!142 = !{!143, !145}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !141, file: !137, line: 39, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !141, file: !137, line: 40, baseType: !144, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 42, baseType: !147, size: 32, offset: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 42, size: 32, elements: !148)
!148 = !{!149, !150}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !147, file: !137, line: 43, baseType: !144, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !147, file: !137, line: 44, baseType: !144, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !133, file: !127, line: 62, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !154)
!153 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = !{!155}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !152, file: !153, line: 50, baseType: !156, size: 64)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !158)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!158 = !{!159}
!159 = !DISubrange(count: 2)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !130, file: !127, line: 68, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !165)
!165 = !{!166}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !164, file: !163, line: 232, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !138)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !130, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !170)
!170 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !130, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 90, baseType: !173, size: 16, offset: 112)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 90, size: 16, elements: !174)
!174 = !{!175, !182}
!175 = !DIDerivedType(tag: DW_TAG_member, scope: !173, file: !127, line: 91, baseType: !176, size: 16)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !173, file: !127, line: 91, size: 16, elements: !177)
!177 = !{!178, !181}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !176, file: !127, line: 96, baseType: !179, size: 8)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !180)
!180 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !176, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !173, file: !127, line: 100, baseType: !183, size: 16)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !184)
!184 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !130, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !130, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !130, file: !127, line: 131, baseType: !188, size: 192, offset: 192)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !189)
!189 = !{!190, !191, !197}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !188, file: !163, line: 245, baseType: !136, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !188, file: !163, line: 246, baseType: !192, size: 32, offset: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !193)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DISubroutineType(types: !195)
!195 = !{null, !196}
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !188, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !126, file: !127, line: 250, baseType: !199, size: 288, offset: 384)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !201)
!200 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !{!202, !203, !204, !205, !206, !207, !208, !209, !210}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !199, file: !200, line: 26, baseType: !113, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !199, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !199, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !199, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !199, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !199, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !199, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !199, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !199, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !126, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !126, file: !127, line: 256, baseType: !162, size: 64, offset: 704)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !126, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !126, file: !127, line: 300, baseType: !215, size: 96, offset: 800)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !216)
!216 = !{!217, !218, !219}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !215, file: !127, line: 153, baseType: !22, size: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !215, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !215, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !126, file: !127, line: 325, baseType: !221, size: 32, offset: 896)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !223)
!223 = !{!224, !233, !234}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !222, file: !122, line: 5074, baseType: !225, size: 96)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !227)
!226 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!227 = !{!228, !231, !232}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !225, file: !226, line: 57, baseType: !229, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 32)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !226, line: 57, flags: DIFlagFwdDecl)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !225, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !225, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !222, file: !122, line: 5075, baseType: !162, size: 64, offset: 96)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !222, file: !122, line: 5076, baseType: !235, size: 32, offset: 160)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !237)
!236 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!237 = !{!238}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !235, file: !236, line: 52, baseType: !22, size: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !126, file: !127, line: 343, baseType: !240, size: 64, offset: 928)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !241)
!241 = !{!242, !243}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !240, file: !200, line: 63, baseType: !113, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !240, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !121, file: !122, line: 622, baseType: !245, size: 32, offset: 32)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{!251}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !248, file: !249, line: 48, baseType: !103, size: 8)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !121, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !121, file: !122, line: 624, baseType: !254, size: 32, offset: 96)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !247, line: 46, baseType: !255)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!256 = !DISubroutineType(types: !257)
!257 = !{null, !104, !104, !104}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !121, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !121, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !121, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !121, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !121, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !121, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !121, file: !122, line: 631, baseType: !265, size: 32, offset: 320)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = !DISubroutineType(types: !267)
!267 = !{null}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !121, file: !122, line: 632, baseType: !269, size: 32, offset: 352)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!271 = !DIGlobalVariableExpression(var: !272, expr: !DIExpression())
!272 = distinct !DIGlobalVariable(name: "metairq_thread", scope: !27, file: !120, line: 28, type: !273, isLocal: false, isDefinition: true)
!273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !274)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !125)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "report_cookie", scope: !27, file: !120, line: 46, type: !277, isLocal: false, isDefinition: true, align: 32)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !278)
!278 = !{!279, !280, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !277, file: !122, line: 2910, baseType: !162, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !277, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !277, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!282 = !DIGlobalVariableExpression(var: !283, expr: !DIExpression())
!283 = distinct !DIGlobalVariable(name: "threads", scope: !27, file: !120, line: 22, type: !284, isLocal: true, isDefinition: true)
!284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 15872, elements: !313)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_rec", file: !120, line: 18, size: 3968, elements: !286)
!286 = !{!287, !288, !301}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !285, file: !120, line: 19, baseType: !126, size: 1024)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !285, file: !120, line: 20, baseType: !289, size: 352, offset: 1024)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !290)
!290 = !{!291, !292, !293, !294, !295, !296, !297, !298, !299, !300}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !289, file: !122, line: 4206, baseType: !162, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !289, file: !122, line: 4208, baseType: !235, size: 32, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !289, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !289, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !289, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !289, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !289, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !289, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !289, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !289, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "msgq_buf", scope: !285, file: !120, line: 21, baseType: !302, size: 2560, offset: 1376)
!302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 2560, elements: !311)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !304, line: 44, size: 160, elements: !305)
!304 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !{!306, !307, !308, !309, !310}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !303, file: !304, line: 46, baseType: !113, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !303, file: !304, line: 49, baseType: !113, size: 32, offset: 32)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !303, file: !304, line: 52, baseType: !113, size: 32, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !303, file: !304, line: 55, baseType: !113, size: 32, offset: 96)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !303, file: !304, line: 58, baseType: !113, size: 32, offset: 128)
!311 = !{!312}
!312 = !DISubrange(count: 16)
!313 = !{!314}
!314 = !DISubrange(count: 4)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "thread_stacks", scope: !27, file: !120, line: 24, type: !317, isLocal: false, isDefinition: true, align: 512)
!317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 67584, elements: !318)
!318 = !{!314, !319}
!319 = !DISubrange(count: 2112)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "_k_thread_stack_metairq_thread", scope: !27, file: !120, line: 28, type: !322, isLocal: false, isDefinition: true, align: 512)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 16896, elements: !323)
!323 = !{!319}
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "_k_thread_obj_metairq_thread", scope: !27, file: !120, line: 28, type: !126, isLocal: false, isDefinition: true)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "stats", scope: !27, file: !120, line: 41, type: !328, isLocal: false, isDefinition: true)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !120, line: 34, size: 4000, elements: !329)
!329 = !{!330, !333, !337}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "num_mirq", scope: !328, file: !120, line: 35, baseType: !331, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !332, line: 22, baseType: !106)
!332 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!333 = !DIDerivedType(tag: DW_TAG_member, name: "mirq_latencies", scope: !328, file: !120, line: 36, baseType: !334, size: 1280, offset: 32)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1280, elements: !335)
!335 = !{!336}
!336 = !DISubrange(count: 40)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !328, file: !120, line: 40, baseType: !338, size: 2688, offset: 1312)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 2688, elements: !313)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !328, file: !120, line: 37, size: 672, elements: !340)
!340 = !{!341, !342}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "nevt", scope: !339, file: !120, line: 38, baseType: !113, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "latencies", scope: !339, file: !120, line: 39, baseType: !343, size: 640, offset: 32)
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 640, elements: !344)
!344 = !{!345}
!345 = !DISubrange(count: 20)
!346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !349)
!348 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !347, file: !348, line: 17, baseType: !269, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !347, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "hw_msgs", scope: !354, file: !360, line: 27, type: !398, isLocal: false, isDefinition: true, align: 32)
!354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !356, globals: !357, splitDebugInlining: false, nameTableKind: None)
!355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!356 = !{!107, !104, !105, !113, !114}
!357 = !{!352, !358, !385, !387, !389, !392}
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "timeout", scope: !354, file: !360, line: 17, type: !361, isLocal: true, isDefinition: true)
!360 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !362)
!362 = !{!363, !378, !384}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !361, file: !163, line: 245, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !366)
!366 = !{!367, !373}
!367 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !137, line: 38, baseType: !368, size: 32)
!368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !137, line: 38, size: 32, elements: !369)
!369 = !{!370, !372}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !368, file: !137, line: 39, baseType: !371, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !368, file: !137, line: 40, baseType: !371, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !137, line: 42, baseType: !374, size: 32, offset: 32)
!374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !137, line: 42, size: 32, elements: !375)
!375 = !{!376, !377}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !374, file: !137, line: 43, baseType: !371, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !374, file: !137, line: 44, baseType: !371, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !361, file: !163, line: 246, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !380)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 32)
!381 = !DISubroutineType(types: !382)
!382 = !{null, !383}
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !361, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "max_duty_cyc", scope: !354, file: !360, line: 23, type: !113, isLocal: false, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "msg_seq", scope: !354, file: !360, line: 25, type: !113, isLocal: false, isDefinition: true)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "_k_fifo_buf_hw_msgs", scope: !354, file: !360, line: 27, type: !391, isLocal: true, isDefinition: true, align: 32)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 320, elements: !335)
!392 = !DIGlobalVariableExpression(var: !393, expr: !DIExpression())
!393 = distinct !DIGlobalVariable(name: "state", scope: !394, file: !360, line: 38, type: !114, isLocal: true, isDefinition: true)
!394 = distinct !DISubprogram(name: "rand32", scope: !360, file: !360, line: 36, type: !395, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!395 = !DISubroutineType(types: !396)
!396 = !{!113}
!397 = !{}
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !399)
!399 = !{!400, !406, !410, !411, !412, !413, !414, !415, !416, !417}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !398, file: !122, line: 4206, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !402, file: !163, line: 232, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !365)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !398, file: !122, line: 4208, baseType: !407, size: 32, offset: 64)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !408)
!408 = !{!409}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !407, file: !236, line: 52, baseType: !22, size: 32)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !398, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !398, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !398, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !398, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !398, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !398, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !398, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !398, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!418 = !DIGlobalVariableExpression(var: !419, expr: !DIExpression())
!419 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !420, file: !434, line: 18, type: !435, isLocal: false, isDefinition: true)
!420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !421, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !422, globals: !433, splitDebugInlining: false, nameTableKind: None)
!421 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!422 = !{!22, !104, !24, !423, !425, !427, !111, !105, !428, !429, !430, !431, !102, !432, !183, !269}
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!424 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!433 = !{!418}
!434 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !436)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !437)
!437 = !{!438, !439}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !436, file: !348, line: 17, baseType: !269, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !436, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "_char_out", scope: !442, file: !446, line: 54, type: !447, isLocal: false, isDefinition: true)
!442 = distinct !DICompileUnit(language: DW_LANG_C99, file: !443, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, globals: !445, splitDebugInlining: false, nameTableKind: None)
!443 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!444 = !{!104, !105}
!445 = !{!440}
!446 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!448 = !DISubroutineType(types: !449)
!449 = !{!105, !105}
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !452, file: !482, line: 60, type: !483, isLocal: true, isDefinition: true, align: 32)
!452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !454, globals: !481, splitDebugInlining: false, nameTableKind: None)
!453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!454 = !{!455, !475}
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 386, baseType: !458)
!457 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 370, size: 448, elements: !459)
!459 = !{!460, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !458, file: !457, line: 372, baseType: !461, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !458, file: !457, line: 373, baseType: !461, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !458, file: !457, line: 374, baseType: !461, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !458, file: !457, line: 375, baseType: !461, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !458, file: !457, line: 376, baseType: !461, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !458, file: !457, line: 377, baseType: !461, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !458, file: !457, line: 378, baseType: !461, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !458, file: !457, line: 379, baseType: !461, size: 32, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !458, file: !457, line: 380, baseType: !461, size: 32, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !458, file: !457, line: 381, baseType: !461, size: 32, offset: 288)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !458, file: !457, line: 382, baseType: !461, size: 32, offset: 320)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !458, file: !457, line: 383, baseType: !461, size: 32, offset: 352)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !458, file: !457, line: 384, baseType: !461, size: 32, offset: 384)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !458, file: !457, line: 385, baseType: !461, size: 32, offset: 416)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !457, line: 364, baseType: !477)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 360, size: 64, elements: !478)
!478 = !{!479, !480}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !477, file: !457, line: 362, baseType: !461, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !477, file: !457, line: 363, baseType: !461, size: 32, offset: 32)
!481 = !{!450}
!482 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !485, line: 51, size: 64, elements: !486)
!485 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!486 = !{!487, !513}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !484, file: !485, line: 60, baseType: !488, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 32)
!489 = !DISubroutineType(types: !490)
!490 = !{!105, !491}
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 32)
!492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !493)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !494, line: 378, size: 192, elements: !495)
!494 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!495 = !{!496, !497, !498, !499, !506, !507}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !493, file: !494, line: 380, baseType: !269, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !493, file: !494, line: 382, baseType: !13, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !493, file: !494, line: 384, baseType: !13, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !493, file: !494, line: 386, baseType: !500, size: 32, offset: 96)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 32)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !494, line: 351, size: 16, elements: !502)
!502 = !{!503, !504}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !501, file: !494, line: 359, baseType: !169, size: 8)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !501, file: !494, line: 364, baseType: !505, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!505 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !493, file: !494, line: 388, baseType: !104, size: 32, offset: 128)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !493, file: !494, line: 396, baseType: !508, size: 32, offset: 160)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 32)
!509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !510)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !494, line: 43, baseType: !511)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !512)
!512 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !484, file: !485, line: 65, baseType: !491, size: 32, offset: 32)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !516, file: !519, line: 71, type: !520, isLocal: true, isDefinition: true, align: 32)
!516 = distinct !DICompileUnit(language: DW_LANG_C99, file: !517, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !518, splitDebugInlining: false, nameTableKind: None)
!517 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!518 = !{!514}
!519 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !521)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !485, line: 51, size: 64, elements: !522)
!522 = !{!523, !542}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !521, file: !485, line: 60, baseType: !524, size: 32)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 32)
!525 = !DISubroutineType(types: !526)
!526 = !{!105, !527}
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !529)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !494, line: 378, size: 192, elements: !530)
!530 = !{!531, !532, !533, !534, !540, !541}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !529, file: !494, line: 380, baseType: !269, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !529, file: !494, line: 382, baseType: !13, size: 32, offset: 32)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !529, file: !494, line: 384, baseType: !13, size: 32, offset: 64)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !529, file: !494, line: 386, baseType: !535, size: 32, offset: 96)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 32)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !494, line: 351, size: 16, elements: !537)
!537 = !{!538, !539}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !536, file: !494, line: 359, baseType: !169, size: 8)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !536, file: !494, line: 364, baseType: !505, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !529, file: !494, line: 388, baseType: !104, size: 32, offset: 128)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !529, file: !494, line: 396, baseType: !508, size: 32, offset: 160)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !521, file: !485, line: 65, baseType: !527, size: 32, offset: 32)
!543 = !DIGlobalVariableExpression(var: !544, expr: !DIExpression())
!544 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !545, file: !552, line: 17, type: !680, isLocal: false, isDefinition: true)
!545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !546, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !547, globals: !548, splitDebugInlining: false, nameTableKind: None)
!546 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!547 = !{!111, !105, !113, !104}
!548 = !{!543, !549, !676}
!549 = !DIGlobalVariableExpression(var: !550, expr: !DIExpression())
!550 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !551, file: !552, line: 198, type: !662, isLocal: true, isDefinition: true)
!551 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !552, file: !552, line: 175, type: !553, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !545, retainedNodes: !657)
!552 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!553 = !DISubroutineType(types: !554)
!554 = !{null, !555}
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 32)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !557)
!557 = !{!558, !616, !628, !629, !630, !631, !637, !652}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !556, file: !127, line: 247, baseType: !559, size: 384)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !560)
!560 = !{!561, !585, !592, !593, !594, !603, !604, !605}
!561 = !DIDerivedType(tag: DW_TAG_member, scope: !559, file: !127, line: 60, baseType: !562, size: 64)
!562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !559, file: !127, line: 60, size: 64, elements: !563)
!563 = !{!564, !579}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !562, file: !127, line: 61, baseType: !565, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !566)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !567)
!567 = !{!568, !574}
!568 = !DIDerivedType(tag: DW_TAG_member, scope: !566, file: !137, line: 38, baseType: !569, size: 32)
!569 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !566, file: !137, line: 38, size: 32, elements: !570)
!570 = !{!571, !573}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !569, file: !137, line: 39, baseType: !572, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !569, file: !137, line: 40, baseType: !572, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_member, scope: !566, file: !137, line: 42, baseType: !575, size: 32, offset: 32)
!575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !566, file: !137, line: 42, size: 32, elements: !576)
!576 = !{!577, !578}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !575, file: !137, line: 43, baseType: !572, size: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !575, file: !137, line: 44, baseType: !572, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !562, file: !127, line: 62, baseType: !580, size: 64)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !581)
!581 = !{!582}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !580, file: !153, line: 50, baseType: !583, size: 64)
!583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !584, size: 64, elements: !158)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 32)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !559, file: !127, line: 68, baseType: !586, size: 32, offset: 64)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !588)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !589)
!589 = !{!590}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !588, file: !163, line: 232, baseType: !591, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !566)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !559, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !559, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!594 = !DIDerivedType(tag: DW_TAG_member, scope: !559, file: !127, line: 90, baseType: !595, size: 16, offset: 112)
!595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !559, file: !127, line: 90, size: 16, elements: !596)
!596 = !{!597, !602}
!597 = !DIDerivedType(tag: DW_TAG_member, scope: !595, file: !127, line: 91, baseType: !598, size: 16)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !595, file: !127, line: 91, size: 16, elements: !599)
!599 = !{!600, !601}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !598, file: !127, line: 96, baseType: !179, size: 8)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !598, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !595, file: !127, line: 100, baseType: !183, size: 16)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !559, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !559, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !559, file: !127, line: 131, baseType: !606, size: 192, offset: 192)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !607)
!607 = !{!608, !609, !615}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !606, file: !163, line: 245, baseType: !565, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !606, file: !163, line: 246, baseType: !610, size: 32, offset: 64)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !611)
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 32)
!612 = !DISubroutineType(types: !613)
!613 = !{null, !614}
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !606, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !556, file: !127, line: 250, baseType: !617, size: 288, offset: 384)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !618)
!618 = !{!619, !620, !621, !622, !623, !624, !625, !626, !627}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !617, file: !200, line: 26, baseType: !113, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !617, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !617, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !617, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !617, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !617, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !617, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !617, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !617, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !556, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !556, file: !127, line: 256, baseType: !587, size: 64, offset: 704)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !556, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !556, file: !127, line: 300, baseType: !632, size: 96, offset: 800)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !633)
!633 = !{!634, !635, !636}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !632, file: !127, line: 153, baseType: !22, size: 32)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !632, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !632, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !556, file: !127, line: 325, baseType: !638, size: 32, offset: 896)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 32)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !640)
!640 = !{!641, !647, !648}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !639, file: !122, line: 5074, baseType: !642, size: 96)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !643)
!643 = !{!644, !645, !646}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !642, file: !226, line: 57, baseType: !229, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !642, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !642, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !639, file: !122, line: 5075, baseType: !587, size: 64, offset: 96)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !639, file: !122, line: 5076, baseType: !649, size: 32, offset: 160)
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !650)
!650 = !{!651}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !649, file: !236, line: 52, baseType: !22, size: 32)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !556, file: !127, line: 343, baseType: !653, size: 64, offset: 928)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !654)
!654 = !{!655, !656}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !653, file: !200, line: 63, baseType: !113, size: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !653, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!657 = !{!658, !659, !660, !661}
!658 = !DILocalVariable(name: "thread", arg: 1, scope: !551, file: !552, line: 175, type: !555)
!659 = !DILocalVariable(name: "region_num", scope: !551, file: !552, line: 200, type: !169)
!660 = !DILocalVariable(name: "guard_start", scope: !551, file: !552, line: 265, type: !22)
!661 = !DILocalVariable(name: "guard_size", scope: !551, file: !552, line: 266, type: !111)
!662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !663, size: 96, elements: !674)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !664, line: 52, size: 96, elements: !665)
!664 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!665 = !{!666, !667, !668}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !663, file: !664, line: 53, baseType: !22, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !663, file: !664, line: 54, baseType: !111, size: 32, offset: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !663, file: !664, line: 55, baseType: !669, size: 32, offset: 64)
!669 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !670, line: 151, baseType: !671)
!670 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !670, line: 149, size: 32, elements: !672)
!672 = !{!673}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !671, file: !670, line: 150, baseType: !113, size: 32)
!674 = !{!675}
!675 = !DISubrange(count: 1)
!676 = !DIGlobalVariableExpression(var: !677, expr: !DIExpression())
!677 = distinct !DIGlobalVariable(name: "static_regions", scope: !545, file: !552, line: 62, type: !678, isLocal: true, isDefinition: true)
!678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !679, size: 96, elements: !674)
!679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !663)
!680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !681)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !682)
!682 = !{!683, !684}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !681, file: !348, line: 17, baseType: !269, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !681, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !687, file: !720, line: 39, type: !169, isLocal: true, isDefinition: true)
!687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !688, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !689, globals: !719, splitDebugInlining: false, nameTableKind: None)
!688 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!689 = !{!690, !104, !105, !707, !169}
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !692, line: 1168, baseType: !693)
!692 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 1155, size: 352, elements: !694)
!694 = !{!695, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !693, file: !692, line: 1157, baseType: !696, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !461)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !693, file: !692, line: 1158, baseType: !461, size: 32, offset: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !693, file: !692, line: 1159, baseType: !461, size: 32, offset: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !693, file: !692, line: 1160, baseType: !461, size: 32, offset: 96)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !693, file: !692, line: 1161, baseType: !461, size: 32, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !693, file: !692, line: 1162, baseType: !461, size: 32, offset: 160)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !693, file: !692, line: 1163, baseType: !461, size: 32, offset: 192)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !693, file: !692, line: 1164, baseType: !461, size: 32, offset: 224)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !693, file: !692, line: 1165, baseType: !461, size: 32, offset: 256)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !693, file: !692, line: 1166, baseType: !461, size: 32, offset: 288)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !693, file: !692, line: 1167, baseType: !461, size: 32, offset: 320)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 32)
!708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !709)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !710, line: 27, size: 96, elements: !711)
!710 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!711 = !{!712, !713, !714}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !709, file: !710, line: 29, baseType: !113, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !709, file: !710, line: 31, baseType: !269, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !709, file: !710, line: 37, baseType: !715, size: 32, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !670, line: 146, baseType: !716)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !670, line: 141, size: 32, elements: !717)
!717 = !{!718}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !716, file: !670, line: 143, baseType: !113, size: 32)
!719 = !{!685}
!720 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!721 = !DIGlobalVariableExpression(var: !722, expr: !DIExpression())
!722 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !723, file: !730, line: 21, type: !447, isLocal: true, isDefinition: true)
!723 = distinct !DICompileUnit(language: DW_LANG_C99, file: !724, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !725, globals: !729, splitDebugInlining: false, nameTableKind: None)
!724 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!725 = !{!726, !105, !104}
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !728, line: 22, baseType: !105)
!728 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!729 = !{!721}
!730 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !733, file: !738, line: 13, type: !755, isLocal: true, isDefinition: true)
!733 = distinct !DICompileUnit(language: DW_LANG_C99, file: !734, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !735, splitDebugInlining: false, nameTableKind: None)
!734 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!735 = !{!736, !731}
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "mpu_config", scope: !733, file: !738, line: 37, type: !739, isLocal: false, isDefinition: true)
!738 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !710, line: 41, size: 64, elements: !741)
!741 = !{!742, !743}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !740, file: !710, line: 43, baseType: !113, size: 32)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !740, file: !710, line: 45, baseType: !744, size: 32, offset: 32)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !746)
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !710, line: 27, size: 96, elements: !747)
!747 = !{!748, !749, !750}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !746, file: !710, line: 29, baseType: !113, size: 32)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !746, file: !710, line: 31, baseType: !269, size: 32, offset: 32)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !746, file: !710, line: 37, baseType: !751, size: 32, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !670, line: 146, baseType: !752)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !670, line: 141, size: 32, elements: !753)
!753 = !{!754}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !752, file: !670, line: 143, baseType: !113, size: 32)
!755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !745, size: 192, elements: !158)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !758, file: !855, line: 36, type: !856, isLocal: true, isDefinition: true, align: 32)
!758 = distinct !DICompileUnit(language: DW_LANG_C99, file: !759, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !760, retainedTypes: !772, globals: !854, splitDebugInlining: false, nameTableKind: None)
!759 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!760 = !{!761, !767}
!761 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !762, line: 506, baseType: !32, size: 32, elements: !763)
!762 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!763 = !{!764, !765, !766}
!764 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!765 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!766 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !762, line: 512, baseType: !32, size: 32, elements: !768)
!768 = !{!769, !770, !771}
!769 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!770 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!771 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!772 = !{!773, !843, !848, !808, !767, !761, !853, !104}
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 32)
!774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !775)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !762, line: 523, size: 288, elements: !776)
!776 = !{!777, !798, !804, !809, !813, !814, !815, !819, !839}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !775, file: !762, line: 524, baseType: !778, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 32)
!779 = !DISubroutineType(types: !780)
!780 = !{!105, !781, !796, !797}
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !783)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !494, line: 378, size: 192, elements: !784)
!784 = !{!785, !786, !787, !788, !794, !795}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !783, file: !494, line: 380, baseType: !269, size: 32)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !783, file: !494, line: 382, baseType: !13, size: 32, offset: 32)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !783, file: !494, line: 384, baseType: !13, size: 32, offset: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !783, file: !494, line: 386, baseType: !789, size: 32, offset: 96)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 32)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !494, line: 351, size: 16, elements: !791)
!791 = !{!792, !793}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !790, file: !494, line: 359, baseType: !169, size: 8)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !790, file: !494, line: 364, baseType: !505, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !783, file: !494, line: 388, baseType: !104, size: 32, offset: 128)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !783, file: !494, line: 396, baseType: !508, size: 32, offset: 160)
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !762, line: 237, baseType: !169)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !762, line: 257, baseType: !113)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !775, file: !762, line: 530, baseType: !799, size: 32, offset: 32)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 32)
!800 = !DISubroutineType(types: !801)
!801 = !{!105, !781, !802}
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !762, line: 229, baseType: !113)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !775, file: !762, line: 532, baseType: !805, size: 32, offset: 64)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 32)
!806 = !DISubroutineType(types: !807)
!807 = !{!105, !781, !808, !803}
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !762, line: 216, baseType: !113)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !775, file: !762, line: 535, baseType: !810, size: 32, offset: 96)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!811 = !DISubroutineType(types: !812)
!812 = !{!105, !781, !808}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !775, file: !762, line: 537, baseType: !810, size: 32, offset: 128)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !775, file: !762, line: 539, baseType: !810, size: 32, offset: 160)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !775, file: !762, line: 541, baseType: !816, size: 32, offset: 192)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!817 = !DISubroutineType(types: !818)
!818 = !{!105, !781, !796, !761, !767}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !775, file: !762, line: 544, baseType: !820, size: 32, offset: 224)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!821 = !DISubroutineType(types: !822)
!822 = !{!105, !781, !823, !505}
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 32)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !762, line: 478, size: 96, elements: !825)
!825 = !{!826, !833, !838}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !824, file: !762, line: 482, baseType: !827, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !828, line: 33, baseType: !829)
!828 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !828, line: 29, size: 32, elements: !830)
!830 = !{!831}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !829, file: !828, line: 30, baseType: !832, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !824, file: !762, line: 485, baseType: !834, size: 32, offset: 32)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !762, line: 464, baseType: !835)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 32)
!836 = !DISubroutineType(types: !837)
!837 = !{null, !781, !823, !808}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !824, file: !762, line: 493, baseType: !808, size: 32, offset: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !775, file: !762, line: 547, baseType: !840, size: 32, offset: 256)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = !DISubroutineType(types: !842)
!842 = !{!113, !781}
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !845)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !762, line: 428, size: 32, elements: !846)
!846 = !{!847}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !845, file: !762, line: 434, baseType: !808, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !850)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !762, line: 441, size: 32, elements: !851)
!851 = !{!852}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !850, file: !762, line: 447, baseType: !808, size: 32)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!854 = !{!756}
!855 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !485, line: 51, size: 64, elements: !858)
!858 = !{!859, !863}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !857, file: !485, line: 60, baseType: !860, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!861 = !DISubroutineType(types: !862)
!862 = !{!105, !781}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !857, file: !485, line: 65, baseType: !781, size: 32, offset: 32)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !866, file: !938, line: 48, type: !1009, isLocal: true, isDefinition: true)
!866 = distinct !DICompileUnit(language: DW_LANG_C99, file: !867, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !868, retainedTypes: !924, globals: !935, splitDebugInlining: false, nameTableKind: None)
!867 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!868 = !{!30, !869}
!869 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !457, line: 69, baseType: !105, size: 32, elements: !870)
!870 = !{!871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923}
!871 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!872 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!873 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!874 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!875 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!876 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!877 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!878 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!879 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!880 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!881 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!882 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!883 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!884 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!885 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!886 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!887 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!888 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!889 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!890 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!891 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!892 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!893 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!894 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!895 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!896 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!897 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!898 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!899 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!900 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!901 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!902 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!903 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!904 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!905 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!906 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!907 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!908 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!909 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!910 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!911 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!912 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!913 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!914 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!915 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!916 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!917 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!918 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!919 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!920 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!921 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!922 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!923 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!924 = !{!111, !105, !104, !925}
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !457, line: 270, baseType: !927)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 262, size: 192, elements: !928)
!928 = !{!929, !930, !931, !932, !933, !934}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !927, file: !457, line: 264, baseType: !461, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !927, file: !457, line: 265, baseType: !461, size: 32, offset: 32)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !927, file: !457, line: 266, baseType: !461, size: 32, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !927, file: !457, line: 267, baseType: !461, size: 32, offset: 96)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !927, file: !457, line: 268, baseType: !461, size: 32, offset: 128)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !927, file: !457, line: 269, baseType: !461, size: 32, offset: 160)
!935 = !{!936, !940, !956, !967, !982, !864, !984, !997, !999, !1001, !1003, !1005, !1007}
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !866, file: !938, line: 424, type: !939, isLocal: false, isDefinition: true, align: 16)
!938 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !509, size: 64, elements: !313)
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !866, file: !938, line: 424, type: !942, isLocal: false, isDefinition: true, align: 32)
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !943)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !494, line: 378, size: 192, elements: !944)
!944 = !{!945, !946, !947, !948, !954, !955}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !943, file: !494, line: 380, baseType: !269, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !943, file: !494, line: 382, baseType: !13, size: 32, offset: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !943, file: !494, line: 384, baseType: !13, size: 32, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !943, file: !494, line: 386, baseType: !949, size: 32, offset: 96)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !494, line: 351, size: 16, elements: !951)
!951 = !{!952, !953}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !950, file: !494, line: 359, baseType: !169, size: 8)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !950, file: !494, line: 364, baseType: !505, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !943, file: !494, line: 388, baseType: !104, size: 32, offset: 128)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !943, file: !494, line: 396, baseType: !508, size: 32, offset: 160)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !866, file: !938, line: 424, type: !958, isLocal: true, isDefinition: true, align: 32)
!958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !959)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !485, line: 51, size: 64, elements: !960)
!960 = !{!961, !966}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !959, file: !485, line: 60, baseType: !962, size: 32)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DISubroutineType(types: !964)
!964 = !{!105, !965}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !959, file: !485, line: 65, baseType: !965, size: 32, offset: 32)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "exti_data", scope: !866, file: !938, line: 423, type: !969, isLocal: true, isDefinition: true)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !938, line: 107, size: 1024, elements: !970)
!970 = !{!971}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !969, file: !938, line: 109, baseType: !972, size: 1024)
!972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !973, size: 1024, elements: !311)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !938, line: 101, size: 64, elements: !974)
!974 = !{!975, !981}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !973, file: !938, line: 102, baseType: !976, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !977, line: 63, baseType: !978)
!977 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!979 = !DISubroutineType(types: !980)
!980 = !{null, !105, !104}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !973, file: !938, line: 103, baseType: !104, size: 32, offset: 32)
!982 = !DIGlobalVariableExpression(var: !983, expr: !DIExpression())
!983 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !866, file: !938, line: 424, type: !950, isLocal: true, isDefinition: true, align: 8)
!984 = !DIGlobalVariableExpression(var: !985, expr: !DIExpression())
!985 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !986, file: !938, line: 493, type: !991, isLocal: true, isDefinition: true, align: 32)
!986 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !938, file: !938, line: 460, type: !987, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !989)
!987 = !DISubroutineType(types: !988)
!988 = !{null, !965}
!989 = !{!990}
!990 = !DILocalVariable(name: "dev", arg: 1, scope: !986, file: !938, line: 460, type: !965)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !992)
!992 = !{!993, !994, !995, !996}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !991, file: !10, line: 55, baseType: !116, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !991, file: !10, line: 57, baseType: !116, size: 32, offset: 32)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !991, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !991, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!997 = !DIGlobalVariableExpression(var: !998, expr: !DIExpression())
!998 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !986, file: !938, line: 497, type: !991, isLocal: true, isDefinition: true, align: 32)
!999 = !DIGlobalVariableExpression(var: !1000, expr: !DIExpression())
!1000 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !986, file: !938, line: 507, type: !991, isLocal: true, isDefinition: true, align: 32)
!1001 = !DIGlobalVariableExpression(var: !1002, expr: !DIExpression())
!1002 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !986, file: !938, line: 512, type: !991, isLocal: true, isDefinition: true, align: 32)
!1003 = !DIGlobalVariableExpression(var: !1004, expr: !DIExpression())
!1004 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !986, file: !938, line: 516, type: !991, isLocal: true, isDefinition: true, align: 32)
!1005 = !DIGlobalVariableExpression(var: !1006, expr: !DIExpression())
!1006 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !986, file: !938, line: 523, type: !991, isLocal: true, isDefinition: true, align: 32)
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !986, file: !938, line: 527, type: !991, isLocal: true, isDefinition: true, align: 32)
!1009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 512, elements: !311)
!1010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1011)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !457, line: 127, baseType: !869)
!1012 = !DIGlobalVariableExpression(var: !1013, expr: !DIExpression())
!1013 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !1014, file: !1019, line: 21, type: !1039, isLocal: false, isDefinition: true, align: 16)
!1014 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1015, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1016, splitDebugInlining: false, nameTableKind: None)
!1015 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!1016 = !{!1017, !1012, !1023, !1025, !1027, !1029, !1031, !1033, !1035, !1037}
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1014, file: !1019, line: 16, type: !1020, isLocal: false, isDefinition: true, align: 16)
!1019 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!1020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !509, size: 176, elements: !1021)
!1021 = !{!1022}
!1022 = !DISubrange(count: 11)
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1014, file: !1019, line: 28, type: !939, isLocal: false, isDefinition: true, align: 16)
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1014, file: !1019, line: 35, type: !939, isLocal: false, isDefinition: true, align: 16)
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1014, file: !1019, line: 42, type: !939, isLocal: false, isDefinition: true, align: 16)
!1029 = !DIGlobalVariableExpression(var: !1030, expr: !DIExpression())
!1030 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1014, file: !1019, line: 49, type: !939, isLocal: false, isDefinition: true, align: 16)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1014, file: !1019, line: 56, type: !939, isLocal: false, isDefinition: true, align: 16)
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1014, file: !1019, line: 63, type: !939, isLocal: false, isDefinition: true, align: 16)
!1035 = !DIGlobalVariableExpression(var: !1036, expr: !DIExpression())
!1036 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1014, file: !1019, line: 70, type: !939, isLocal: false, isDefinition: true, align: 16)
!1037 = !DIGlobalVariableExpression(var: !1038, expr: !DIExpression())
!1038 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1014, file: !1019, line: 77, type: !939, isLocal: false, isDefinition: true, align: 16)
!1039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !509, size: 48, elements: !1040)
!1040 = !{!1041}
!1041 = !DISubrange(count: 3)
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1044, file: !1088, line: 398, type: !1121, isLocal: true, isDefinition: true)
!1044 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1045, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1046, retainedTypes: !1059, globals: !1085, splitDebugInlining: false, nameTableKind: None)
!1045 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!1046 = !{!1047, !30, !1052}
!1047 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1048, line: 190, baseType: !32, size: 32, elements: !1049)
!1048 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1049 = !{!1050, !1051}
!1050 = !DIEnumerator(name: "SUCCESS", value: 0)
!1051 = !DIEnumerator(name: "ERROR", value: 1)
!1052 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1053, line: 44, baseType: !32, size: 32, elements: !1054)
!1053 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1054 = !{!1055, !1056, !1057, !1058}
!1055 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1056 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1057 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1058 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1059 = !{!104, !105, !113, !1060, !1078, !1084}
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 386, baseType: !1062)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 370, size: 448, elements: !1063)
!1063 = !{!1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1062, file: !457, line: 372, baseType: !461, size: 32)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1062, file: !457, line: 373, baseType: !461, size: 32, offset: 32)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1062, file: !457, line: 374, baseType: !461, size: 32, offset: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1062, file: !457, line: 375, baseType: !461, size: 32, offset: 96)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1062, file: !457, line: 376, baseType: !461, size: 32, offset: 128)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1062, file: !457, line: 377, baseType: !461, size: 32, offset: 160)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1062, file: !457, line: 378, baseType: !461, size: 32, offset: 192)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1062, file: !457, line: 379, baseType: !461, size: 32, offset: 224)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1062, file: !457, line: 380, baseType: !461, size: 32, offset: 256)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1062, file: !457, line: 381, baseType: !461, size: 32, offset: 288)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1062, file: !457, line: 382, baseType: !461, size: 32, offset: 320)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1062, file: !457, line: 383, baseType: !461, size: 32, offset: 352)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1062, file: !457, line: 384, baseType: !461, size: 32, offset: 384)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1062, file: !457, line: 385, baseType: !461, size: 32, offset: 416)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1080, line: 343, size: 64, elements: !1081)
!1080 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1081 = !{!1082, !1083}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1079, file: !1080, line: 344, baseType: !113, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1079, file: !1080, line: 345, baseType: !113, size: 32, offset: 32)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1085 = !{!1086, !1092, !1108, !1119, !1042}
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1044, file: !1088, line: 752, type: !1089, isLocal: false, isDefinition: true, align: 16)
!1088 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !509, size: 512, elements: !1090)
!1090 = !{!1091}
!1091 = !DISubrange(count: 32)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !1044, file: !1088, line: 752, type: !1094, isLocal: false, isDefinition: true, align: 32)
!1094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1095)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !494, line: 378, size: 192, elements: !1096)
!1096 = !{!1097, !1098, !1099, !1100, !1106, !1107}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1095, file: !494, line: 380, baseType: !269, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1095, file: !494, line: 382, baseType: !13, size: 32, offset: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1095, file: !494, line: 384, baseType: !13, size: 32, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1095, file: !494, line: 386, baseType: !1101, size: 32, offset: 96)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !494, line: 351, size: 16, elements: !1103)
!1103 = !{!1104, !1105}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1102, file: !494, line: 359, baseType: !169, size: 8)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1102, file: !494, line: 364, baseType: !505, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1095, file: !494, line: 388, baseType: !104, size: 32, offset: 128)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1095, file: !494, line: 396, baseType: !508, size: 32, offset: 160)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !1044, file: !1088, line: 752, type: !1110, isLocal: true, isDefinition: true, align: 32)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !485, line: 51, size: 64, elements: !1112)
!1112 = !{!1113, !1118}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1111, file: !485, line: 60, baseType: !1114, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!105, !1117}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1111, file: !485, line: 65, baseType: !1117, size: 32, offset: 32)
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !1044, file: !1088, line: 752, type: !1102, isLocal: true, isDefinition: true, align: 8)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1053, line: 100, size: 224, elements: !1122)
!1122 = !{!1123, !1129, !1130, !1139, !1144, !1149, !1155}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1121, file: !1053, line: 101, baseType: !1124, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1053, line: 76, baseType: !1125)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!105, !1117, !1128}
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1053, line: 56, baseType: !104)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1121, file: !1053, line: 102, baseType: !1124, size: 32, offset: 32)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1121, file: !1053, line: 103, baseType: !1131, size: 32, offset: 64)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1053, line: 83, baseType: !1132)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!105, !1117, !1128, !1135, !104}
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1053, line: 72, baseType: !1136)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{null, !1117, !1128, !104}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1121, file: !1053, line: 104, baseType: !1140, size: 32, offset: 96)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1053, line: 79, baseType: !1141)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 32)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!105, !1117, !1128, !1084}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1121, file: !1053, line: 105, baseType: !1145, size: 32, offset: 128)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1053, line: 88, baseType: !1146)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!1052, !1117, !1128}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1121, file: !1053, line: 106, baseType: !1150, size: 32, offset: 160)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1053, line: 92, baseType: !1151)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!105, !1117, !1128, !1154}
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1053, line: 64, baseType: !104)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1121, file: !1053, line: 107, baseType: !1156, size: 32, offset: 192)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1053, line: 96, baseType: !1157)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!105, !1117, !1128, !104}
!1160 = !DIGlobalVariableExpression(var: !1161, expr: !DIExpression())
!1161 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1162, file: !1219, line: 603, type: !1221, isLocal: true, isDefinition: true, align: 32)
!1162 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1163, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1164, globals: !1216, splitDebugInlining: false, nameTableKind: None)
!1163 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!1164 = !{!104, !105, !1165}
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1167)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1168, line: 336, size: 160, elements: !1169)
!1168 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1169 = !{!1170, !1190, !1194, !1198, !1211}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1167, file: !1168, line: 365, baseType: !1171, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!105, !1174, !1189}
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1176)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !494, line: 378, size: 192, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181, !1187, !1188}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1176, file: !494, line: 380, baseType: !269, size: 32)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1176, file: !494, line: 382, baseType: !13, size: 32, offset: 32)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1176, file: !494, line: 384, baseType: !13, size: 32, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1176, file: !494, line: 386, baseType: !1182, size: 32, offset: 96)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 32)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !494, line: 351, size: 16, elements: !1184)
!1184 = !{!1185, !1186}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1183, file: !494, line: 359, baseType: !169, size: 8)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1183, file: !494, line: 364, baseType: !505, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1176, file: !494, line: 388, baseType: !104, size: 32, offset: 128)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1176, file: !494, line: 396, baseType: !508, size: 32, offset: 160)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1167, file: !1168, line: 366, baseType: !1191, size: 32, offset: 32)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{null, !1174, !170}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1167, file: !1168, line: 374, baseType: !1195, size: 32, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!105, !1174}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1167, file: !1168, line: 377, baseType: !1199, size: 32, offset: 96)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!105, !1174, !1202}
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1204)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1168, line: 122, size: 64, elements: !1205)
!1205 = !{!1206, !1207, !1208, !1209, !1210}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1204, file: !1168, line: 123, baseType: !113, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1204, file: !1168, line: 124, baseType: !169, size: 8, offset: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1204, file: !1168, line: 125, baseType: !169, size: 8, offset: 40)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1204, file: !1168, line: 126, baseType: !169, size: 8, offset: 48)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1204, file: !1168, line: 127, baseType: !169, size: 8, offset: 56)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1167, file: !1168, line: 379, baseType: !1212, size: 32, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 32)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{!105, !1174, !1215}
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1216 = !{!1160, !1217}
!1217 = !DIGlobalVariableExpression(var: !1218, expr: !DIExpression())
!1218 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1162, file: !1219, line: 38, type: !1220, isLocal: true, isDefinition: true)
!1219 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1174)
!1221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !485, line: 51, size: 64, elements: !1223)
!1223 = !{!1224, !1225}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1222, file: !485, line: 60, baseType: !1195, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1222, file: !485, line: 65, baseType: !1174, size: 32, offset: 32)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1228, file: !1378, line: 762, type: !1476, isLocal: true, isDefinition: true)
!1228 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1229, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1230, retainedTypes: !1237, globals: !1375, splitDebugInlining: false, nameTableKind: None)
!1229 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!1230 = !{!30, !761, !767, !1231, !1052}
!1231 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !977, line: 43, baseType: !32, size: 32, elements: !1232)
!1232 = !{!1233, !1234, !1235, !1236}
!1233 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1234 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1235 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1236 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1237 = !{!104, !105, !1238, !1302, !1307, !808, !767, !761, !1312, !1313, !113, !1327, !1283, !102, !1335, !1336}
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !762, line: 523, size: 288, elements: !1241)
!1241 = !{!1242, !1261, !1265, !1269, !1273, !1274, !1275, !1279, !1298}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1240, file: !762, line: 524, baseType: !1243, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!105, !1246, !796, !797}
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1248)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !494, line: 378, size: 192, elements: !1249)
!1249 = !{!1250, !1251, !1252, !1253, !1259, !1260}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1248, file: !494, line: 380, baseType: !269, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1248, file: !494, line: 382, baseType: !13, size: 32, offset: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1248, file: !494, line: 384, baseType: !13, size: 32, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1248, file: !494, line: 386, baseType: !1254, size: 32, offset: 96)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !494, line: 351, size: 16, elements: !1256)
!1256 = !{!1257, !1258}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1255, file: !494, line: 359, baseType: !169, size: 8)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1255, file: !494, line: 364, baseType: !505, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1248, file: !494, line: 388, baseType: !104, size: 32, offset: 128)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1248, file: !494, line: 396, baseType: !508, size: 32, offset: 160)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1240, file: !762, line: 530, baseType: !1262, size: 32, offset: 32)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!105, !1246, !802}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1240, file: !762, line: 532, baseType: !1266, size: 32, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 32)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!105, !1246, !808, !803}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1240, file: !762, line: 535, baseType: !1270, size: 32, offset: 96)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!105, !1246, !808}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1240, file: !762, line: 537, baseType: !1270, size: 32, offset: 128)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1240, file: !762, line: 539, baseType: !1270, size: 32, offset: 160)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1240, file: !762, line: 541, baseType: !1276, size: 32, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!105, !1246, !796, !761, !767}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1240, file: !762, line: 544, baseType: !1280, size: 32, offset: 224)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!105, !1246, !1283, !505}
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !762, line: 478, size: 96, elements: !1285)
!1285 = !{!1286, !1292, !1297}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1284, file: !762, line: 482, baseType: !1287, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !828, line: 33, baseType: !1288)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !828, line: 29, size: 32, elements: !1289)
!1289 = !{!1290}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1288, file: !828, line: 30, baseType: !1291, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1284, file: !762, line: 485, baseType: !1293, size: 32, offset: 32)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !762, line: 464, baseType: !1294)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 32)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{null, !1246, !1283, !808}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1284, file: !762, line: 493, baseType: !808, size: 32, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1240, file: !762, line: 547, baseType: !1299, size: 32, offset: 256)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 32)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!113, !1246}
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1304)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !762, line: 428, size: 32, elements: !1305)
!1305 = !{!1306}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1304, file: !762, line: 434, baseType: !808, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 32)
!1308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1309)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !762, line: 441, size: 32, elements: !1310)
!1310 = !{!1311}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1309, file: !762, line: 447, baseType: !808, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 32)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 32)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !457, line: 314, baseType: !1315)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 303, size: 320, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1315, file: !457, line: 305, baseType: !461, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1315, file: !457, line: 306, baseType: !461, size: 32, offset: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1315, file: !457, line: 307, baseType: !461, size: 32, offset: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1315, file: !457, line: 308, baseType: !461, size: 32, offset: 96)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1315, file: !457, line: 309, baseType: !461, size: 32, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1315, file: !457, line: 310, baseType: !461, size: 32, offset: 160)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1315, file: !457, line: 311, baseType: !461, size: 32, offset: 192)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1315, file: !457, line: 312, baseType: !461, size: 32, offset: 224)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1315, file: !457, line: 313, baseType: !1326, size: 64, offset: 256)
!1326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 64, elements: !158)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 32)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !457, line: 325, baseType: !1329)
!1329 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 320, size: 192, elements: !1330)
!1330 = !{!1331, !1332, !1333}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1329, file: !457, line: 322, baseType: !461, size: 32)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1329, file: !457, line: 323, baseType: !461, size: 32, offset: 32)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1329, file: !457, line: 324, baseType: !1334, size: 128, offset: 64)
!1334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 128, elements: !313)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1053, line: 100, size: 224, elements: !1339)
!1339 = !{!1340, !1345, !1346, !1355, !1360, !1365, !1370}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1338, file: !1053, line: 101, baseType: !1341, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1053, line: 76, baseType: !1342)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 32)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!105, !1246, !1128}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1338, file: !1053, line: 102, baseType: !1341, size: 32, offset: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1338, file: !1053, line: 103, baseType: !1347, size: 32, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1053, line: 83, baseType: !1348)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 32)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!105, !1246, !1128, !1351, !104}
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1053, line: 72, baseType: !1352)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 32)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{null, !1246, !1128, !104}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1338, file: !1053, line: 104, baseType: !1356, size: 32, offset: 96)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1053, line: 79, baseType: !1357)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 32)
!1358 = !DISubroutineType(types: !1359)
!1359 = !{!105, !1246, !1128, !1084}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1338, file: !1053, line: 105, baseType: !1361, size: 32, offset: 128)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1053, line: 88, baseType: !1362)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{!1052, !1246, !1128}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1338, file: !1053, line: 106, baseType: !1366, size: 32, offset: 160)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1053, line: 92, baseType: !1367)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 32)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!105, !1246, !1128, !1154}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1338, file: !1053, line: 107, baseType: !1371, size: 32, offset: 192)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1053, line: 96, baseType: !1372)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 32)
!1373 = !DISubroutineType(types: !1374)
!1374 = !{!105, !1246, !1128, !104}
!1375 = !{!1376, !1382, !1384, !1394, !1399, !1401, !1403, !1408, !1410, !1412, !1417, !1419, !1421, !1423, !1425, !1427, !1432, !1434, !1436, !1450, !1452, !1454, !1456, !1458, !1460, !1462, !1464, !1466, !1468, !1470, !1226, !1472, !1474, !1487, !1489, !1491, !1493}
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1228, file: !1378, line: 762, type: !1379, isLocal: false, isDefinition: true, align: 16)
!1378 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !509, size: 128, elements: !1380)
!1380 = !{!1381}
!1381 = !DISubrange(count: 8)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1228, file: !1378, line: 762, type: !1247, isLocal: false, isDefinition: true, align: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1228, file: !1378, line: 762, type: !1386, isLocal: true, isDefinition: true, align: 32)
!1386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !485, line: 51, size: 64, elements: !1388)
!1388 = !{!1389, !1393}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1387, file: !485, line: 60, baseType: !1390, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{!105, !1246}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1387, file: !485, line: 65, baseType: !1246, size: 32, offset: 32)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1228, file: !1378, line: 766, type: !1396, isLocal: false, isDefinition: true, align: 16)
!1396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !509, size: 144, elements: !1397)
!1397 = !{!1398}
!1398 = !DISubrange(count: 9)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1228, file: !1378, line: 766, type: !1247, isLocal: false, isDefinition: true, align: 32)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1228, file: !1378, line: 766, type: !1386, isLocal: true, isDefinition: true, align: 32)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1228, file: !1378, line: 770, type: !1405, isLocal: false, isDefinition: true, align: 16)
!1405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !509, size: 96, elements: !1406)
!1406 = !{!1407}
!1407 = !DISubrange(count: 6)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !1228, file: !1378, line: 770, type: !1247, isLocal: false, isDefinition: true, align: 32)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !1228, file: !1378, line: 770, type: !1386, isLocal: true, isDefinition: true, align: 32)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1228, file: !1378, line: 774, type: !1414, isLocal: false, isDefinition: true, align: 16)
!1414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !509, size: 80, elements: !1415)
!1415 = !{!1416}
!1416 = !DISubrange(count: 5)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1228, file: !1378, line: 774, type: !1247, isLocal: false, isDefinition: true, align: 32)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1228, file: !1378, line: 774, type: !1386, isLocal: true, isDefinition: true, align: 32)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1228, file: !1378, line: 778, type: !1414, isLocal: false, isDefinition: true, align: 16)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1228, file: !1378, line: 778, type: !1247, isLocal: false, isDefinition: true, align: 32)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1228, file: !1378, line: 778, type: !1386, isLocal: true, isDefinition: true, align: 32)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1228, file: !1378, line: 790, type: !1429, isLocal: false, isDefinition: true, align: 16)
!1429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !509, size: 112, elements: !1430)
!1430 = !{!1431}
!1431 = !DISubrange(count: 7)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1228, file: !1378, line: 790, type: !1247, isLocal: false, isDefinition: true, align: 32)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1228, file: !1378, line: 790, type: !1386, isLocal: true, isDefinition: true, align: 32)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1228, file: !1378, line: 762, type: !1438, isLocal: true, isDefinition: true)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1439, line: 237, size: 128, elements: !1440)
!1439 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1440 = !{!1441, !1442, !1443}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1438, file: !1439, line: 239, baseType: !1309, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1438, file: !1439, line: 241, baseType: !1246, size: 32, offset: 32)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1438, file: !1439, line: 243, baseType: !1444, size: 64, offset: 64)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !828, line: 40, baseType: !1445)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !828, line: 35, size: 64, elements: !1446)
!1446 = !{!1447, !1449}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1445, file: !828, line: 36, baseType: !1448, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 32)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1445, file: !828, line: 37, baseType: !1448, size: 32, offset: 32)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1228, file: !1378, line: 762, type: !1255, isLocal: true, isDefinition: true, align: 8)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1228, file: !1378, line: 766, type: !1438, isLocal: true, isDefinition: true)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1228, file: !1378, line: 766, type: !1255, isLocal: true, isDefinition: true, align: 8)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1228, file: !1378, line: 770, type: !1438, isLocal: true, isDefinition: true)
!1458 = !DIGlobalVariableExpression(var: !1459, expr: !DIExpression())
!1459 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !1228, file: !1378, line: 770, type: !1255, isLocal: true, isDefinition: true, align: 8)
!1460 = !DIGlobalVariableExpression(var: !1461, expr: !DIExpression())
!1461 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1228, file: !1378, line: 774, type: !1438, isLocal: true, isDefinition: true)
!1462 = !DIGlobalVariableExpression(var: !1463, expr: !DIExpression())
!1463 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1228, file: !1378, line: 774, type: !1255, isLocal: true, isDefinition: true, align: 8)
!1464 = !DIGlobalVariableExpression(var: !1465, expr: !DIExpression())
!1465 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1228, file: !1378, line: 778, type: !1438, isLocal: true, isDefinition: true)
!1466 = !DIGlobalVariableExpression(var: !1467, expr: !DIExpression())
!1467 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1228, file: !1378, line: 778, type: !1255, isLocal: true, isDefinition: true, align: 8)
!1468 = !DIGlobalVariableExpression(var: !1469, expr: !DIExpression())
!1469 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1228, file: !1378, line: 790, type: !1438, isLocal: true, isDefinition: true)
!1470 = !DIGlobalVariableExpression(var: !1471, expr: !DIExpression())
!1471 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1228, file: !1378, line: 790, type: !1255, isLocal: true, isDefinition: true, align: 8)
!1472 = !DIGlobalVariableExpression(var: !1473, expr: !DIExpression())
!1473 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1228, file: !1378, line: 656, type: !1239, isLocal: true, isDefinition: true)
!1474 = !DIGlobalVariableExpression(var: !1475, expr: !DIExpression())
!1475 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1228, file: !1378, line: 766, type: !1476, isLocal: true, isDefinition: true)
!1476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1477)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1439, line: 224, size: 160, elements: !1478)
!1478 = !{!1479, !1480, !1481, !1482}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1477, file: !1439, line: 226, baseType: !1304, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1477, file: !1439, line: 228, baseType: !1084, size: 32, offset: 32)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1477, file: !1439, line: 230, baseType: !105, size: 32, offset: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1477, file: !1439, line: 231, baseType: !1483, size: 64, offset: 96)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1080, line: 343, size: 64, elements: !1484)
!1484 = !{!1485, !1486}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1483, file: !1080, line: 344, baseType: !113, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1483, file: !1080, line: 345, baseType: !113, size: 32, offset: 32)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1228, file: !1378, line: 770, type: !1476, isLocal: true, isDefinition: true)
!1489 = !DIGlobalVariableExpression(var: !1490, expr: !DIExpression())
!1490 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1228, file: !1378, line: 774, type: !1476, isLocal: true, isDefinition: true)
!1491 = !DIGlobalVariableExpression(var: !1492, expr: !DIExpression())
!1492 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1228, file: !1378, line: 778, type: !1476, isLocal: true, isDefinition: true)
!1493 = !DIGlobalVariableExpression(var: !1494, expr: !DIExpression())
!1494 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1228, file: !1378, line: 790, type: !1476, isLocal: true, isDefinition: true)
!1495 = !DIGlobalVariableExpression(var: !1496, expr: !DIExpression())
!1496 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1497, file: !1635, line: 44, type: !1730, isLocal: false, isDefinition: true)
!1497 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1498, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1499, retainedTypes: !1532, globals: !1632, splitDebugInlining: false, nameTableKind: None)
!1498 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!1499 = !{!30, !1500, !1507, !1514, !1521, !1527, !1052}
!1500 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1168, line: 47, baseType: !32, size: 32, elements: !1501)
!1501 = !{!1502, !1503, !1504, !1505, !1506}
!1502 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1503 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1504 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1505 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1506 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1507 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1168, line: 75, baseType: !32, size: 32, elements: !1508)
!1508 = !{!1509, !1510, !1511, !1512, !1513}
!1509 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1510 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1511 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1512 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1513 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1514 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1168, line: 92, baseType: !32, size: 32, elements: !1515)
!1515 = !{!1516, !1517, !1518, !1519, !1520}
!1516 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1517 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1518 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1519 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1520 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1521 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1168, line: 84, baseType: !32, size: 32, elements: !1522)
!1522 = !{!1523, !1524, !1525, !1526}
!1523 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1524 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1525 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1526 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1527 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1168, line: 107, baseType: !32, size: 32, elements: !1528)
!1528 = !{!1529, !1530, !1531}
!1529 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1530 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1531 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1532 = !{!104, !105, !1533, !170, !169, !1582, !113, !1128, !1593, !183}
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1535)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1168, line: 336, size: 160, elements: !1536)
!1536 = !{!1537, !1556, !1560, !1564, !1577}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1535, file: !1168, line: 365, baseType: !1538, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!105, !1541, !1189}
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1543)
!1543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !494, line: 378, size: 192, elements: !1544)
!1544 = !{!1545, !1546, !1547, !1548, !1554, !1555}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1543, file: !494, line: 380, baseType: !269, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1543, file: !494, line: 382, baseType: !13, size: 32, offset: 32)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1543, file: !494, line: 384, baseType: !13, size: 32, offset: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1543, file: !494, line: 386, baseType: !1549, size: 32, offset: 96)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 32)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !494, line: 351, size: 16, elements: !1551)
!1551 = !{!1552, !1553}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1550, file: !494, line: 359, baseType: !169, size: 8)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1550, file: !494, line: 364, baseType: !505, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1543, file: !494, line: 388, baseType: !104, size: 32, offset: 128)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1543, file: !494, line: 396, baseType: !508, size: 32, offset: 160)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1535, file: !1168, line: 366, baseType: !1557, size: 32, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{null, !1541, !170}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1535, file: !1168, line: 374, baseType: !1561, size: 32, offset: 64)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{!105, !1541}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1535, file: !1168, line: 377, baseType: !1565, size: 32, offset: 96)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{!105, !1541, !1568}
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1570)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1168, line: 122, size: 64, elements: !1571)
!1571 = !{!1572, !1573, !1574, !1575, !1576}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1570, file: !1168, line: 123, baseType: !113, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1570, file: !1168, line: 124, baseType: !169, size: 8, offset: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1570, file: !1168, line: 125, baseType: !169, size: 8, offset: 40)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1570, file: !1168, line: 126, baseType: !169, size: 8, offset: 48)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1570, file: !1168, line: 127, baseType: !169, size: 8, offset: 56)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1535, file: !1168, line: 379, baseType: !1578, size: 32, offset: 128)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!105, !1541, !1581}
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !457, line: 505, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 496, size: 224, elements: !1585)
!1585 = !{!1586, !1587, !1588, !1589, !1590, !1591, !1592}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1584, file: !457, line: 498, baseType: !461, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1584, file: !457, line: 499, baseType: !461, size: 32, offset: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1584, file: !457, line: 500, baseType: !461, size: 32, offset: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1584, file: !457, line: 501, baseType: !461, size: 32, offset: 96)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1584, file: !457, line: 502, baseType: !461, size: 32, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1584, file: !457, line: 503, baseType: !461, size: 32, offset: 160)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1584, file: !457, line: 504, baseType: !461, size: 32, offset: 192)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1595)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1053, line: 100, size: 224, elements: !1596)
!1596 = !{!1597, !1602, !1603, !1612, !1617, !1622, !1627}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1595, file: !1053, line: 101, baseType: !1598, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1053, line: 76, baseType: !1599)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 32)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!105, !1541, !1128}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1595, file: !1053, line: 102, baseType: !1598, size: 32, offset: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1595, file: !1053, line: 103, baseType: !1604, size: 32, offset: 64)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1053, line: 83, baseType: !1605)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{!105, !1541, !1128, !1608, !104}
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1053, line: 72, baseType: !1609)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{null, !1541, !1128, !104}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1595, file: !1053, line: 104, baseType: !1613, size: 32, offset: 96)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1053, line: 79, baseType: !1614)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 32)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{!105, !1541, !1128, !1084}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1595, file: !1053, line: 105, baseType: !1618, size: 32, offset: 128)
!1618 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1053, line: 88, baseType: !1619)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{!1052, !1541, !1128}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1595, file: !1053, line: 106, baseType: !1623, size: 32, offset: 160)
!1623 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1053, line: 92, baseType: !1624)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!105, !1541, !1128, !1154}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1595, file: !1053, line: 107, baseType: !1628, size: 32, offset: 192)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1053, line: 96, baseType: !1629)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{!105, !1541, !1128, !104}
!1632 = !{!1495, !1633, !1636, !1638, !1645, !1647, !1649, !1651, !1653, !1655, !1699, !1702, !1704, !1707, !1710, !1712, !1718, !1720, !1722, !1724, !1726, !1728}
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1497, file: !1635, line: 1914, type: !1379, isLocal: false, isDefinition: true, align: 16)
!1635 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1497, file: !1635, line: 1914, type: !1542, isLocal: false, isDefinition: true, align: 32)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1497, file: !1635, line: 1914, type: !1640, isLocal: true, isDefinition: true, align: 32)
!1640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !485, line: 51, size: 64, elements: !1642)
!1642 = !{!1643, !1644}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1641, file: !485, line: 60, baseType: !1561, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1641, file: !485, line: 65, baseType: !1541, size: 32, offset: 32)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1497, file: !1635, line: 1914, type: !1379, isLocal: false, isDefinition: true, align: 16)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1497, file: !1635, line: 1914, type: !1542, isLocal: false, isDefinition: true, align: 32)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1497, file: !1635, line: 1914, type: !1640, isLocal: true, isDefinition: true, align: 32)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1497, file: !1635, line: 1914, type: !1550, isLocal: true, isDefinition: true, align: 8)
!1653 = !DIGlobalVariableExpression(var: !1654, expr: !DIExpression())
!1654 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1497, file: !1635, line: 1914, type: !1550, isLocal: true, isDefinition: true, align: 8)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1497, file: !1635, line: 1914, type: !1657, isLocal: true, isDefinition: true)
!1657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1658)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1659, line: 22, size: 224, elements: !1660)
!1659 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1660 = !{!1661, !1662, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1658, file: !1659, line: 24, baseType: !1582, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1658, file: !1659, line: 26, baseType: !1663, size: 32, offset: 32)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1080, line: 343, size: 64, elements: !1666)
!1666 = !{!1667, !1668}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1665, file: !1080, line: 344, baseType: !113, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1665, file: !1080, line: 345, baseType: !113, size: 32, offset: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1658, file: !1659, line: 28, baseType: !111, size: 32, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1658, file: !1659, line: 30, baseType: !505, size: 8, offset: 96)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1658, file: !1659, line: 32, baseType: !105, size: 32, offset: 128)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1658, file: !1659, line: 34, baseType: !505, size: 8, offset: 160)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1658, file: !1659, line: 36, baseType: !505, size: 8, offset: 168)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1658, file: !1659, line: 38, baseType: !505, size: 8, offset: 176)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1658, file: !1659, line: 40, baseType: !505, size: 8, offset: 184)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1658, file: !1659, line: 41, baseType: !1677, size: 32, offset: 192)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1680, line: 60, size: 64, elements: !1681)
!1680 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1681 = !{!1682, !1698}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1679, file: !1680, line: 69, baseType: !1683, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1685)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1680, line: 50, size: 64, elements: !1686)
!1686 = !{!1687, !1696, !1697}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1685, file: !1680, line: 52, baseType: !1688, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1690)
!1690 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1691, line: 37, baseType: !1692)
!1691 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1691, line: 32, size: 64, elements: !1693)
!1693 = !{!1694, !1695}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1692, file: !1691, line: 34, baseType: !113, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1692, file: !1691, line: 36, baseType: !113, size: 32, offset: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1685, file: !1680, line: 54, baseType: !169, size: 8, offset: 32)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1685, file: !1680, line: 56, baseType: !169, size: 8, offset: 40)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1679, file: !1680, line: 71, baseType: !169, size: 8, offset: 32)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1497, file: !1635, line: 1914, type: !1701, isLocal: true, isDefinition: true)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1664, size: 64, elements: !674)
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1497, file: !1635, line: 1914, type: !1678, isLocal: true, isDefinition: true)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1497, file: !1635, line: 1914, type: !1706, isLocal: true, isDefinition: true)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1684, size: 64, elements: !674)
!1707 = !DIGlobalVariableExpression(var: !1708, expr: !DIExpression())
!1708 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1497, file: !1635, line: 1914, type: !1709, isLocal: true, isDefinition: true)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1689, size: 128, elements: !158)
!1710 = !DIGlobalVariableExpression(var: !1711, expr: !DIExpression())
!1711 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1497, file: !1635, line: 1539, type: !1534, isLocal: true, isDefinition: true)
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1497, file: !1635, line: 1914, type: !1714, isLocal: true, isDefinition: true)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1659, line: 74, size: 64, elements: !1715)
!1715 = !{!1716, !1717}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1714, file: !1659, line: 76, baseType: !113, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1714, file: !1659, line: 78, baseType: !1541, size: 32, offset: 32)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1497, file: !1635, line: 1914, type: !1657, isLocal: true, isDefinition: true)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1497, file: !1635, line: 1914, type: !1701, isLocal: true, isDefinition: true)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1497, file: !1635, line: 1914, type: !1678, isLocal: true, isDefinition: true)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1497, file: !1635, line: 1914, type: !1706, isLocal: true, isDefinition: true)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1497, file: !1635, line: 1914, type: !1709, isLocal: true, isDefinition: true)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1497, file: !1635, line: 1914, type: !1714, isLocal: true, isDefinition: true)
!1730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1731)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !1732)
!1732 = !{!1733, !1734}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1731, file: !348, line: 17, baseType: !269, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1731, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!1735 = !DIGlobalVariableExpression(var: !1736, expr: !DIExpression())
!1736 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1737, file: !1815, line: 65, type: !461, isLocal: true, isDefinition: true)
!1737 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1738, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1739, retainedTypes: !1740, globals: !1812, splitDebugInlining: false, nameTableKind: None)
!1738 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!1739 = !{!869}
!1740 = !{!107, !1741, !116, !169, !113, !1749, !1780}
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !692, line: 712, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 706, size: 128, elements: !1744)
!1744 = !{!1745, !1746, !1747, !1748}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1743, file: !692, line: 708, baseType: !461, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1743, file: !692, line: 709, baseType: !461, size: 32, offset: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1743, file: !692, line: 710, baseType: !461, size: 32, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1743, file: !692, line: 711, baseType: !696, size: 32, offset: 96)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 32)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !692, line: 360, baseType: !1751)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 345, size: 28704, elements: !1752)
!1752 = !{!1753, !1755, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1770, !1775, !1779}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1751, file: !692, line: 347, baseType: !1754, size: 256)
!1754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 256, elements: !1380)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1751, file: !692, line: 348, baseType: !1756, size: 768, offset: 256)
!1756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !1757)
!1757 = !{!1758}
!1758 = !DISubrange(count: 24)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1751, file: !692, line: 349, baseType: !1754, size: 256, offset: 1024)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1751, file: !692, line: 350, baseType: !1756, size: 768, offset: 1280)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1751, file: !692, line: 351, baseType: !1754, size: 256, offset: 2048)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1751, file: !692, line: 352, baseType: !1756, size: 768, offset: 2304)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1751, file: !692, line: 353, baseType: !1754, size: 256, offset: 3072)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1751, file: !692, line: 354, baseType: !1756, size: 768, offset: 3328)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1751, file: !692, line: 355, baseType: !1754, size: 256, offset: 4096)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1751, file: !692, line: 356, baseType: !1767, size: 1792, offset: 4352)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !1768)
!1768 = !{!1769}
!1769 = !DISubrange(count: 56)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1751, file: !692, line: 357, baseType: !1771, size: 1920, offset: 6144)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1772, size: 1920, elements: !1773)
!1772 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !169)
!1773 = !{!1774}
!1774 = !DISubrange(count: 240)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1751, file: !692, line: 358, baseType: !1776, size: 20608, offset: 8064)
!1776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !1777)
!1777 = !{!1778}
!1778 = !DISubrange(count: 644)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1751, file: !692, line: 359, baseType: !461, size: 32, offset: 28672)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !692, line: 402, baseType: !1782)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 379, size: 1120, elements: !1783)
!1783 = !{!1784, !1785, !1786, !1787, !1788, !1789, !1790, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1803, !1804, !1805, !1807, !1809, !1811}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1782, file: !692, line: 381, baseType: !696, size: 32)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1782, file: !692, line: 382, baseType: !461, size: 32, offset: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1782, file: !692, line: 383, baseType: !461, size: 32, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1782, file: !692, line: 384, baseType: !461, size: 32, offset: 96)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1782, file: !692, line: 385, baseType: !461, size: 32, offset: 128)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1782, file: !692, line: 386, baseType: !461, size: 32, offset: 160)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1782, file: !692, line: 387, baseType: !1791, size: 96, offset: 192)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1772, size: 96, elements: !1792)
!1792 = !{!1793}
!1793 = !DISubrange(count: 12)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1782, file: !692, line: 388, baseType: !461, size: 32, offset: 288)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1782, file: !692, line: 389, baseType: !461, size: 32, offset: 320)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1782, file: !692, line: 390, baseType: !461, size: 32, offset: 352)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1782, file: !692, line: 391, baseType: !461, size: 32, offset: 384)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1782, file: !692, line: 392, baseType: !461, size: 32, offset: 416)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1782, file: !692, line: 393, baseType: !461, size: 32, offset: 448)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1782, file: !692, line: 394, baseType: !461, size: 32, offset: 480)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1782, file: !692, line: 395, baseType: !1802, size: 64, offset: 512)
!1802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !696, size: 64, elements: !158)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1782, file: !692, line: 396, baseType: !696, size: 32, offset: 576)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1782, file: !692, line: 397, baseType: !696, size: 32, offset: 608)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1782, file: !692, line: 398, baseType: !1806, size: 128, offset: 640)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !696, size: 128, elements: !313)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1782, file: !692, line: 399, baseType: !1808, size: 160, offset: 768)
!1808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !696, size: 160, elements: !1415)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1782, file: !692, line: 400, baseType: !1810, size: 160, offset: 928)
!1810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !1415)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1782, file: !692, line: 401, baseType: !461, size: 32, offset: 1088)
!1812 = !{!1813, !1839, !1844, !1846, !1848, !1735}
!1813 = !DIGlobalVariableExpression(var: !1814, expr: !DIExpression())
!1814 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1737, file: !1815, line: 285, type: !1816, isLocal: true, isDefinition: true, align: 32)
!1815 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1817)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !485, line: 51, size: 64, elements: !1818)
!1818 = !{!1819, !1838}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1817, file: !485, line: 60, baseType: !1820, size: 32)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{!105, !1823}
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !494, line: 378, size: 192, elements: !1826)
!1826 = !{!1827, !1828, !1829, !1830, !1836, !1837}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1825, file: !494, line: 380, baseType: !269, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1825, file: !494, line: 382, baseType: !13, size: 32, offset: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1825, file: !494, line: 384, baseType: !13, size: 32, offset: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1825, file: !494, line: 386, baseType: !1831, size: 32, offset: 96)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !494, line: 351, size: 16, elements: !1833)
!1833 = !{!1834, !1835}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1832, file: !494, line: 359, baseType: !169, size: 8)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1832, file: !494, line: 364, baseType: !505, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1825, file: !494, line: 388, baseType: !104, size: 32, offset: 128)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1825, file: !494, line: 396, baseType: !508, size: 32, offset: 160)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1817, file: !485, line: 65, baseType: !1823, size: 32, offset: 32)
!1839 = !DIGlobalVariableExpression(var: !1840, expr: !DIExpression())
!1840 = distinct !DIGlobalVariable(name: "lock", scope: !1737, file: !1815, line: 34, type: !1841, isLocal: true, isDefinition: true)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !1842)
!1842 = !{!1843}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1841, file: !236, line: 52, baseType: !22, size: 32)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(name: "last_load", scope: !1737, file: !1815, line: 36, type: !113, isLocal: true, isDefinition: true)
!1846 = !DIGlobalVariableExpression(var: !1847, expr: !DIExpression())
!1847 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1737, file: !1815, line: 48, type: !113, isLocal: true, isDefinition: true)
!1848 = !DIGlobalVariableExpression(var: !1849, expr: !DIExpression())
!1849 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1737, file: !1815, line: 54, type: !113, isLocal: true, isDefinition: true)
!1850 = !DIGlobalVariableExpression(var: !1851, expr: !DIExpression())
!1851 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1852, file: !1933, line: 22, type: !1935, isLocal: true, isDefinition: true)
!1852 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1853, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !760, retainedTypes: !1854, globals: !1930, splitDebugInlining: false, nameTableKind: None)
!1853 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!1854 = !{!1855, !1919, !1924, !808, !767, !761, !1929, !104}
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !762, line: 523, size: 288, elements: !1858)
!1858 = !{!1859, !1878, !1882, !1886, !1890, !1891, !1892, !1896, !1915}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1857, file: !762, line: 524, baseType: !1860, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!105, !1863, !796, !797}
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1865)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !494, line: 378, size: 192, elements: !1866)
!1866 = !{!1867, !1868, !1869, !1870, !1876, !1877}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1865, file: !494, line: 380, baseType: !269, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1865, file: !494, line: 382, baseType: !13, size: 32, offset: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1865, file: !494, line: 384, baseType: !13, size: 32, offset: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1865, file: !494, line: 386, baseType: !1871, size: 32, offset: 96)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !494, line: 351, size: 16, elements: !1873)
!1873 = !{!1874, !1875}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1872, file: !494, line: 359, baseType: !169, size: 8)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1872, file: !494, line: 364, baseType: !505, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1865, file: !494, line: 388, baseType: !104, size: 32, offset: 128)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1865, file: !494, line: 396, baseType: !508, size: 32, offset: 160)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1857, file: !762, line: 530, baseType: !1879, size: 32, offset: 32)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{!105, !1863, !802}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1857, file: !762, line: 532, baseType: !1883, size: 32, offset: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 32)
!1884 = !DISubroutineType(types: !1885)
!1885 = !{!105, !1863, !808, !803}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1857, file: !762, line: 535, baseType: !1887, size: 32, offset: 96)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 32)
!1888 = !DISubroutineType(types: !1889)
!1889 = !{!105, !1863, !808}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1857, file: !762, line: 537, baseType: !1887, size: 32, offset: 128)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1857, file: !762, line: 539, baseType: !1887, size: 32, offset: 160)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1857, file: !762, line: 541, baseType: !1893, size: 32, offset: 192)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!1894 = !DISubroutineType(types: !1895)
!1895 = !{!105, !1863, !796, !761, !767}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1857, file: !762, line: 544, baseType: !1897, size: 32, offset: 224)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 32)
!1898 = !DISubroutineType(types: !1899)
!1899 = !{!105, !1863, !1900, !505}
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !762, line: 478, size: 96, elements: !1902)
!1902 = !{!1903, !1909, !1914}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1901, file: !762, line: 482, baseType: !1904, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !828, line: 33, baseType: !1905)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !828, line: 29, size: 32, elements: !1906)
!1906 = !{!1907}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1905, file: !828, line: 30, baseType: !1908, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1901, file: !762, line: 485, baseType: !1910, size: 32, offset: 32)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !762, line: 464, baseType: !1911)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32)
!1912 = !DISubroutineType(types: !1913)
!1913 = !{null, !1863, !1900, !808}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1901, file: !762, line: 493, baseType: !808, size: 32, offset: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1857, file: !762, line: 547, baseType: !1916, size: 32, offset: 256)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = !DISubroutineType(types: !1918)
!1918 = !{!113, !1863}
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1921)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !762, line: 428, size: 32, elements: !1922)
!1922 = !{!1923}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1921, file: !762, line: 434, baseType: !808, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1926)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !762, line: 441, size: 32, elements: !1927)
!1927 = !{!1928}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1926, file: !762, line: 447, baseType: !808, size: 32)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 32)
!1930 = !{!1931, !1850}
!1931 = !DIGlobalVariableExpression(var: !1932, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1932 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1852, file: !1933, line: 37, type: !1934, isLocal: true, isDefinition: true)
!1933 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!1935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1936, size: 352, elements: !1021)
!1936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1863)
!1937 = !DIGlobalVariableExpression(var: !1938, expr: !DIExpression())
!1938 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1939, file: !1963, line: 129, type: !1971, isLocal: false, isDefinition: true)
!1939 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1940, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1941, globals: !1960, splitDebugInlining: false, nameTableKind: None)
!1940 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!1941 = !{!1942}
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 386, baseType: !1944)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 370, size: 448, elements: !1945)
!1945 = !{!1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1944, file: !457, line: 372, baseType: !461, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1944, file: !457, line: 373, baseType: !461, size: 32, offset: 32)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1944, file: !457, line: 374, baseType: !461, size: 32, offset: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1944, file: !457, line: 375, baseType: !461, size: 32, offset: 96)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1944, file: !457, line: 376, baseType: !461, size: 32, offset: 128)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1944, file: !457, line: 377, baseType: !461, size: 32, offset: 160)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1944, file: !457, line: 378, baseType: !461, size: 32, offset: 192)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1944, file: !457, line: 379, baseType: !461, size: 32, offset: 224)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1944, file: !457, line: 380, baseType: !461, size: 32, offset: 256)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1944, file: !457, line: 381, baseType: !461, size: 32, offset: 288)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1944, file: !457, line: 382, baseType: !461, size: 32, offset: 320)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1944, file: !457, line: 383, baseType: !461, size: 32, offset: 352)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1944, file: !457, line: 384, baseType: !461, size: 32, offset: 384)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1944, file: !457, line: 385, baseType: !461, size: 32, offset: 416)
!1960 = !{!1961, !1964, !1968, !1937}
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1939, file: !1963, line: 126, type: !113, isLocal: false, isDefinition: true)
!1963 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1964 = !DIGlobalVariableExpression(var: !1965, expr: !DIExpression())
!1965 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !1939, file: !1963, line: 127, type: !1966, isLocal: false, isDefinition: true)
!1966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1967, size: 72, elements: !1397)
!1967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !169)
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1939, file: !1963, line: 128, type: !1970, isLocal: false, isDefinition: true)
!1970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1967, size: 128, elements: !311)
!1971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1967, size: 64, elements: !1380)
!1972 = !DIGlobalVariableExpression(var: !1973, expr: !DIExpression())
!1973 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1974, file: !1977, line: 23, type: !1978, isLocal: false, isDefinition: true)
!1974 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1975, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, globals: !1976, splitDebugInlining: false, nameTableKind: None)
!1975 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!1976 = !{!1972}
!1977 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !105)
!1979 = !DIGlobalVariableExpression(var: !1980, expr: !DIExpression())
!1980 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1981, file: !1985, line: 37, type: !2238, isLocal: false, isDefinition: true)
!1981 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1982, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1983, retainedTypes: !1992, globals: !2065, splitDebugInlining: false, nameTableKind: None)
!1982 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!1983 = !{!1984, !30, !869}
!1984 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1985, line: 63, baseType: !32, size: 32, elements: !1986)
!1985 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1986 = !{!1987, !1988, !1989, !1990, !1991}
!1987 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1988 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1989 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1990 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1991 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1992 = !{!111, !104, !105, !1993, !102, !113, !2023, !116, !169, !2048}
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1995)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1996, line: 51, size: 64, elements: !1997)
!1996 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1997 = !{!1998, !2018}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1995, file: !1996, line: 52, baseType: !1999, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1996, line: 38, baseType: !2000)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 32)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!105, !2003, !432, !183}
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2005)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !494, line: 378, size: 192, elements: !2006)
!2006 = !{!2007, !2008, !2009, !2010, !2016, !2017}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2005, file: !494, line: 380, baseType: !269, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2005, file: !494, line: 382, baseType: !13, size: 32, offset: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2005, file: !494, line: 384, baseType: !13, size: 32, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2005, file: !494, line: 386, baseType: !2011, size: 32, offset: 96)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 32)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !494, line: 351, size: 16, elements: !2013)
!2013 = !{!2014, !2015}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2012, file: !494, line: 359, baseType: !169, size: 8)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2012, file: !494, line: 364, baseType: !505, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2005, file: !494, line: 388, baseType: !104, size: 32, offset: 128)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2005, file: !494, line: 396, baseType: !508, size: 32, offset: 160)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1995, file: !1996, line: 53, baseType: !2019, size: 32, offset: 32)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1996, line: 47, baseType: !2020)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 32)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{!105, !2003, !432, !183, !113}
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 32)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !692, line: 402, baseType: !2025)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 379, size: 1120, elements: !2026)
!2026 = !{!2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2025, file: !692, line: 381, baseType: !696, size: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2025, file: !692, line: 382, baseType: !461, size: 32, offset: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2025, file: !692, line: 383, baseType: !461, size: 32, offset: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2025, file: !692, line: 384, baseType: !461, size: 32, offset: 96)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2025, file: !692, line: 385, baseType: !461, size: 32, offset: 128)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2025, file: !692, line: 386, baseType: !461, size: 32, offset: 160)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2025, file: !692, line: 387, baseType: !1791, size: 96, offset: 192)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2025, file: !692, line: 388, baseType: !461, size: 32, offset: 288)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2025, file: !692, line: 389, baseType: !461, size: 32, offset: 320)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2025, file: !692, line: 390, baseType: !461, size: 32, offset: 352)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2025, file: !692, line: 391, baseType: !461, size: 32, offset: 384)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2025, file: !692, line: 392, baseType: !461, size: 32, offset: 416)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2025, file: !692, line: 393, baseType: !461, size: 32, offset: 448)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2025, file: !692, line: 394, baseType: !461, size: 32, offset: 480)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2025, file: !692, line: 395, baseType: !1802, size: 64, offset: 512)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2025, file: !692, line: 396, baseType: !696, size: 32, offset: 576)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2025, file: !692, line: 397, baseType: !696, size: 32, offset: 608)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2025, file: !692, line: 398, baseType: !1806, size: 128, offset: 640)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2025, file: !692, line: 399, baseType: !1808, size: 160, offset: 768)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2025, file: !692, line: 400, baseType: !1810, size: 160, offset: 928)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2025, file: !692, line: 401, baseType: !461, size: 32, offset: 1088)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !692, line: 360, baseType: !2050)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 345, size: 28704, elements: !2051)
!2051 = !{!2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2050, file: !692, line: 347, baseType: !1754, size: 256)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2050, file: !692, line: 348, baseType: !1756, size: 768, offset: 256)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2050, file: !692, line: 349, baseType: !1754, size: 256, offset: 1024)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2050, file: !692, line: 350, baseType: !1756, size: 768, offset: 1280)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2050, file: !692, line: 351, baseType: !1754, size: 256, offset: 2048)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2050, file: !692, line: 352, baseType: !1756, size: 768, offset: 2304)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2050, file: !692, line: 353, baseType: !1754, size: 256, offset: 3072)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2050, file: !692, line: 354, baseType: !1756, size: 768, offset: 3328)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2050, file: !692, line: 355, baseType: !1754, size: 256, offset: 4096)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2050, file: !692, line: 356, baseType: !1767, size: 1792, offset: 4352)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2050, file: !692, line: 357, baseType: !1771, size: 1920, offset: 6144)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2050, file: !692, line: 358, baseType: !1776, size: 20608, offset: 8064)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2050, file: !692, line: 359, baseType: !461, size: 32, offset: 28672)
!2065 = !{!1979, !2066, !2191, !2199, !2201, !2204, !2208, !2210, !2215}
!2066 = !DIGlobalVariableExpression(var: !2067, expr: !DIExpression())
!2067 = distinct !DIGlobalVariable(name: "_kernel", scope: !1981, file: !1985, line: 40, type: !2068, isLocal: false, isDefinition: true)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !163, line: 158, size: 320, elements: !2069)
!2069 = !{!2070, !2186}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2068, file: !163, line: 159, baseType: !2071, size: 224)
!2071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2072, size: 224, elements: !674)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !163, line: 100, size: 224, elements: !2073)
!2073 = !{!2074, !2075, !2076, !2179, !2180, !2181, !2182, !2183}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2072, file: !163, line: 102, baseType: !113, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2072, file: !163, line: 105, baseType: !102, size: 32, offset: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2072, file: !163, line: 108, baseType: !2077, size: 32, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 32)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2079)
!2079 = !{!2080, !2138, !2150, !2151, !2152, !2153, !2159, !2174}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2078, file: !127, line: 247, baseType: !2081, size: 384)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2082)
!2082 = !{!2083, !2107, !2114, !2115, !2116, !2125, !2126, !2127}
!2083 = !DIDerivedType(tag: DW_TAG_member, scope: !2081, file: !127, line: 60, baseType: !2084, size: 64)
!2084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2081, file: !127, line: 60, size: 64, elements: !2085)
!2085 = !{!2086, !2101}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2084, file: !127, line: 61, baseType: !2087, size: 64)
!2087 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2088)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2089)
!2089 = !{!2090, !2096}
!2090 = !DIDerivedType(tag: DW_TAG_member, scope: !2088, file: !137, line: 38, baseType: !2091, size: 32)
!2091 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2088, file: !137, line: 38, size: 32, elements: !2092)
!2092 = !{!2093, !2095}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2091, file: !137, line: 39, baseType: !2094, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2091, file: !137, line: 40, baseType: !2094, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, scope: !2088, file: !137, line: 42, baseType: !2097, size: 32, offset: 32)
!2097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2088, file: !137, line: 42, size: 32, elements: !2098)
!2098 = !{!2099, !2100}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2097, file: !137, line: 43, baseType: !2094, size: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2097, file: !137, line: 44, baseType: !2094, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2084, file: !127, line: 62, baseType: !2102, size: 64)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2103)
!2103 = !{!2104}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2102, file: !153, line: 50, baseType: !2105, size: 64)
!2105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2106, size: 64, elements: !158)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2081, file: !127, line: 68, baseType: !2108, size: 32, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2110)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2111)
!2111 = !{!2112}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2110, file: !163, line: 232, baseType: !2113, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2088)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2081, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2081, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2116 = !DIDerivedType(tag: DW_TAG_member, scope: !2081, file: !127, line: 90, baseType: !2117, size: 16, offset: 112)
!2117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2081, file: !127, line: 90, size: 16, elements: !2118)
!2118 = !{!2119, !2124}
!2119 = !DIDerivedType(tag: DW_TAG_member, scope: !2117, file: !127, line: 91, baseType: !2120, size: 16)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2117, file: !127, line: 91, size: 16, elements: !2121)
!2121 = !{!2122, !2123}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2120, file: !127, line: 96, baseType: !179, size: 8)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2120, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2117, file: !127, line: 100, baseType: !183, size: 16)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2081, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2081, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2081, file: !127, line: 131, baseType: !2128, size: 192, offset: 192)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2129)
!2129 = !{!2130, !2131, !2137}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2128, file: !163, line: 245, baseType: !2087, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2128, file: !163, line: 246, baseType: !2132, size: 32, offset: 64)
!2132 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2133)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 32)
!2134 = !DISubroutineType(types: !2135)
!2135 = !{null, !2136}
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2128, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2078, file: !127, line: 250, baseType: !2139, size: 288, offset: 384)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2140)
!2140 = !{!2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2139, file: !200, line: 26, baseType: !113, size: 32)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2139, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2139, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2139, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2139, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2139, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2139, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2139, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2139, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2078, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2078, file: !127, line: 256, baseType: !2109, size: 64, offset: 704)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2078, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2078, file: !127, line: 300, baseType: !2154, size: 96, offset: 800)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2155)
!2155 = !{!2156, !2157, !2158}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2154, file: !127, line: 153, baseType: !22, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2154, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2154, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2078, file: !127, line: 325, baseType: !2160, size: 32, offset: 896)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 32)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2162)
!2162 = !{!2163, !2169, !2170}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2161, file: !122, line: 5074, baseType: !2164, size: 96)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2165)
!2165 = !{!2166, !2167, !2168}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2164, file: !226, line: 57, baseType: !229, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2164, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2164, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2161, file: !122, line: 5075, baseType: !2109, size: 64, offset: 96)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2161, file: !122, line: 5076, baseType: !2171, size: 32, offset: 160)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2172)
!2172 = !{!2173}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2171, file: !236, line: 52, baseType: !22, size: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2078, file: !127, line: 343, baseType: !2175, size: 64, offset: 928)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2176)
!2176 = !{!2177, !2178}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2175, file: !200, line: 63, baseType: !113, size: 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2175, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2072, file: !163, line: 111, baseType: !2077, size: 32, offset: 96)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_preempted", scope: !2072, file: !163, line: 119, baseType: !2077, size: 32, offset: 128)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2072, file: !163, line: 124, baseType: !105, size: 32, offset: 160)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2072, file: !163, line: 127, baseType: !169, size: 8, offset: 192)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2072, file: !163, line: 153, baseType: !2184, offset: 200)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2185, line: 33, elements: !397)
!2185 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2068, file: !163, line: 170, baseType: !2187, size: 96, offset: 224)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !2188)
!2188 = !{!2189, !2190}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2187, file: !163, line: 86, baseType: !2077, size: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2187, file: !163, line: 90, baseType: !2113, size: 64, offset: 32)
!2191 = !DIGlobalVariableExpression(var: !2192, expr: !DIExpression())
!2192 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1981, file: !1985, line: 43, type: !2193, isLocal: false, isDefinition: true, align: 512)
!2193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2194, size: 8704, elements: !2197)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !2195)
!2195 = !{!2196}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2194, file: !249, line: 48, baseType: !103, size: 8)
!2197 = !{!2198}
!2198 = !DISubrange(count: 1088)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1981, file: !1985, line: 44, type: !2078, isLocal: false, isDefinition: true)
!2201 = !DIGlobalVariableExpression(var: !2202, expr: !DIExpression())
!2202 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1981, file: !1985, line: 48, type: !2203, isLocal: false, isDefinition: true)
!2203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2078, size: 1024, elements: !674)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1981, file: !1985, line: 86, type: !2206, isLocal: false, isDefinition: true, align: 512)
!2206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2194, size: 16896, elements: !2207)
!2207 = !{!675, !319}
!2208 = !DIGlobalVariableExpression(var: !2209, expr: !DIExpression())
!2209 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1981, file: !1985, line: 217, type: !505, isLocal: false, isDefinition: true)
!2210 = !DIGlobalVariableExpression(var: !2211, expr: !DIExpression())
!2211 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1981, file: !1985, line: 50, type: !2212, isLocal: true, isDefinition: true, align: 512)
!2212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2194, size: 2560, elements: !2213)
!2213 = !{!675, !2214}
!2214 = !DISubrange(count: 320)
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(name: "levels", scope: !2217, file: !1985, line: 232, type: !2237, isLocal: true, isDefinition: true)
!2217 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1985, file: !1985, line: 230, type: !2218, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !2220)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{null, !1984}
!2220 = !{!2221, !2222, !2232, !2236}
!2221 = !DILocalVariable(name: "level", arg: 1, scope: !2217, file: !1985, line: 230, type: !1984)
!2222 = !DILocalVariable(name: "entry", scope: !2217, file: !1985, line: 244, type: !2223)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2225)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !485, line: 51, size: 64, elements: !2226)
!2226 = !{!2227, !2231}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2225, file: !485, line: 60, baseType: !2228, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 32)
!2229 = !DISubroutineType(types: !2230)
!2230 = !{!105, !2003}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2225, file: !485, line: 65, baseType: !2003, size: 32, offset: 32)
!2232 = !DILocalVariable(name: "dev", scope: !2233, file: !1985, line: 247, type: !2003)
!2233 = distinct !DILexicalBlock(scope: !2234, file: !1985, line: 246, column: 64)
!2234 = distinct !DILexicalBlock(scope: !2235, file: !1985, line: 246, column: 2)
!2235 = distinct !DILexicalBlock(scope: !2217, file: !1985, line: 246, column: 2)
!2236 = !DILocalVariable(name: "rc", scope: !2233, file: !1985, line: 248, type: !105)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2223, size: 192, elements: !1406)
!2238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2239)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !2240)
!2240 = !{!2241, !2242}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2239, file: !348, line: 17, baseType: !269, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2239, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!2243 = !DIGlobalVariableExpression(var: !2244, expr: !DIExpression())
!2244 = distinct !DIGlobalVariable(name: "states_str", scope: !2245, file: !2246, line: 276, type: !2369, isLocal: true, isDefinition: true)
!2245 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2246, file: !2246, line: 271, type: !2247, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !2360)
!2246 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2247 = !DISubroutineType(types: !2248)
!2248 = !{!269, !2249, !102, !111}
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !2250)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2252)
!2252 = !{!2253, !2311, !2323, !2324, !2325, !2326, !2332, !2347}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2251, file: !127, line: 247, baseType: !2254, size: 384)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2255)
!2255 = !{!2256, !2280, !2287, !2288, !2289, !2298, !2299, !2300}
!2256 = !DIDerivedType(tag: DW_TAG_member, scope: !2254, file: !127, line: 60, baseType: !2257, size: 64)
!2257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2254, file: !127, line: 60, size: 64, elements: !2258)
!2258 = !{!2259, !2274}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2257, file: !127, line: 61, baseType: !2260, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2261)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2262)
!2262 = !{!2263, !2269}
!2263 = !DIDerivedType(tag: DW_TAG_member, scope: !2261, file: !137, line: 38, baseType: !2264, size: 32)
!2264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2261, file: !137, line: 38, size: 32, elements: !2265)
!2265 = !{!2266, !2268}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2264, file: !137, line: 39, baseType: !2267, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2264, file: !137, line: 40, baseType: !2267, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, scope: !2261, file: !137, line: 42, baseType: !2270, size: 32, offset: 32)
!2270 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2261, file: !137, line: 42, size: 32, elements: !2271)
!2271 = !{!2272, !2273}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2270, file: !137, line: 43, baseType: !2267, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2270, file: !137, line: 44, baseType: !2267, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2257, file: !127, line: 62, baseType: !2275, size: 64)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2276)
!2276 = !{!2277}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2275, file: !153, line: 50, baseType: !2278, size: 64)
!2278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2279, size: 64, elements: !158)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2254, file: !127, line: 68, baseType: !2281, size: 32, offset: 64)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2283)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2284)
!2284 = !{!2285}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2283, file: !163, line: 232, baseType: !2286, size: 64)
!2286 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2261)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2254, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2254, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2289 = !DIDerivedType(tag: DW_TAG_member, scope: !2254, file: !127, line: 90, baseType: !2290, size: 16, offset: 112)
!2290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2254, file: !127, line: 90, size: 16, elements: !2291)
!2291 = !{!2292, !2297}
!2292 = !DIDerivedType(tag: DW_TAG_member, scope: !2290, file: !127, line: 91, baseType: !2293, size: 16)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2290, file: !127, line: 91, size: 16, elements: !2294)
!2294 = !{!2295, !2296}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2293, file: !127, line: 96, baseType: !179, size: 8)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2293, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2290, file: !127, line: 100, baseType: !183, size: 16)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2254, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2254, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2254, file: !127, line: 131, baseType: !2301, size: 192, offset: 192)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2302)
!2302 = !{!2303, !2304, !2310}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2301, file: !163, line: 245, baseType: !2260, size: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2301, file: !163, line: 246, baseType: !2305, size: 32, offset: 64)
!2305 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2306)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 32)
!2307 = !DISubroutineType(types: !2308)
!2308 = !{null, !2309}
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2301, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2251, file: !127, line: 250, baseType: !2312, size: 288, offset: 384)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2313)
!2313 = !{!2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2312, file: !200, line: 26, baseType: !113, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2312, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2312, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2312, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2312, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2312, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2312, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2312, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2312, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2251, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2251, file: !127, line: 256, baseType: !2282, size: 64, offset: 704)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2251, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2251, file: !127, line: 300, baseType: !2327, size: 96, offset: 800)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2328)
!2328 = !{!2329, !2330, !2331}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2327, file: !127, line: 153, baseType: !22, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2327, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2327, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2251, file: !127, line: 325, baseType: !2333, size: 32, offset: 896)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 32)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2335)
!2335 = !{!2336, !2342, !2343}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2334, file: !122, line: 5074, baseType: !2337, size: 96)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2338)
!2338 = !{!2339, !2340, !2341}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2337, file: !226, line: 57, baseType: !229, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2337, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2337, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2334, file: !122, line: 5075, baseType: !2282, size: 64, offset: 96)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2334, file: !122, line: 5076, baseType: !2344, size: 32, offset: 160)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2345)
!2345 = !{!2346}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2344, file: !236, line: 52, baseType: !22, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2251, file: !127, line: 343, baseType: !2348, size: 64, offset: 928)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2349)
!2349 = !{!2350, !2351}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2348, file: !200, line: 63, baseType: !113, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2348, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2352 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2353, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2354, globals: !2356, splitDebugInlining: false, nameTableKind: None)
!2353 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2354 = !{!104, !269, !107, !169, !22, !105, !2355, !24, !111, !102, !113, !114}
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2356 = !{!2243, !2357}
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(name: "states_sz", scope: !2245, file: !2246, line: 279, type: !2359, isLocal: true, isDefinition: true)
!2359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1934, size: 256, elements: !1380)
!2360 = !{!2361, !2362, !2363, !2364, !2365, !2366, !2367}
!2361 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2245, file: !2246, line: 271, type: !2249)
!2362 = !DILocalVariable(name: "buf", arg: 2, scope: !2245, file: !2246, line: 271, type: !102)
!2363 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2245, file: !2246, line: 271, type: !111)
!2364 = !DILocalVariable(name: "off", scope: !2245, file: !2246, line: 273, type: !111)
!2365 = !DILocalVariable(name: "bit", scope: !2245, file: !2246, line: 274, type: !169)
!2366 = !DILocalVariable(name: "thread_state", scope: !2245, file: !2246, line: 275, type: !169)
!2367 = !DILocalVariable(name: "index", scope: !2368, file: !2246, line: 293, type: !169)
!2368 = distinct !DILexicalBlock(scope: !2245, file: !2246, line: 293, column: 2)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 256, elements: !1380)
!2370 = !DIGlobalVariableExpression(var: !2371, expr: !DIExpression())
!2371 = distinct !DIGlobalVariable(name: "lock", scope: !2372, file: !2391, line: 39, type: !2392, isLocal: true, isDefinition: true)
!2372 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2373, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2374, globals: !2390, splitDebugInlining: false, nameTableKind: None)
!2373 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2374 = !{!104, !505, !105, !2375}
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2377)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2378)
!2378 = !{!2379, !2385}
!2379 = !DIDerivedType(tag: DW_TAG_member, scope: !2377, file: !137, line: 38, baseType: !2380, size: 32)
!2380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2377, file: !137, line: 38, size: 32, elements: !2381)
!2381 = !{!2382, !2384}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2380, file: !137, line: 39, baseType: !2383, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2380, file: !137, line: 40, baseType: !2383, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, scope: !2377, file: !137, line: 42, baseType: !2386, size: 32, offset: 32)
!2386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2377, file: !137, line: 42, size: 32, elements: !2387)
!2387 = !{!2388, !2389}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2386, file: !137, line: 43, baseType: !2383, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2386, file: !137, line: 44, baseType: !2383, size: 32)
!2390 = !{!2370}
!2391 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2393)
!2393 = !{!2394}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2392, file: !236, line: 52, baseType: !22, size: 32)
!2395 = !DIGlobalVariableExpression(var: !2396, expr: !DIExpression())
!2396 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2397, file: !2507, line: 56, type: !2494, isLocal: false, isDefinition: true)
!2397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2399, globals: !2504, splitDebugInlining: false, nameTableKind: None)
!2398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2399 = !{!2400, !102, !104, !2502, !432, !107, !116, !105, !113, !114, !2503}
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 32)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2402)
!2402 = !{!2403, !2461, !2473, !2474, !2475, !2476, !2482, !2497}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2401, file: !127, line: 247, baseType: !2404, size: 384)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2405)
!2405 = !{!2406, !2430, !2437, !2438, !2439, !2448, !2449, !2450}
!2406 = !DIDerivedType(tag: DW_TAG_member, scope: !2404, file: !127, line: 60, baseType: !2407, size: 64)
!2407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2404, file: !127, line: 60, size: 64, elements: !2408)
!2408 = !{!2409, !2424}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2407, file: !127, line: 61, baseType: !2410, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2411)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2412)
!2412 = !{!2413, !2419}
!2413 = !DIDerivedType(tag: DW_TAG_member, scope: !2411, file: !137, line: 38, baseType: !2414, size: 32)
!2414 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2411, file: !137, line: 38, size: 32, elements: !2415)
!2415 = !{!2416, !2418}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2414, file: !137, line: 39, baseType: !2417, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2414, file: !137, line: 40, baseType: !2417, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, scope: !2411, file: !137, line: 42, baseType: !2420, size: 32, offset: 32)
!2420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2411, file: !137, line: 42, size: 32, elements: !2421)
!2421 = !{!2422, !2423}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2420, file: !137, line: 43, baseType: !2417, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2420, file: !137, line: 44, baseType: !2417, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2407, file: !127, line: 62, baseType: !2425, size: 64)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2426)
!2426 = !{!2427}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2425, file: !153, line: 50, baseType: !2428, size: 64)
!2428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2429, size: 64, elements: !158)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2404, file: !127, line: 68, baseType: !2431, size: 32, offset: 64)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2433)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2434)
!2434 = !{!2435}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2433, file: !163, line: 232, baseType: !2436, size: 64)
!2436 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2411)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2404, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2404, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2439 = !DIDerivedType(tag: DW_TAG_member, scope: !2404, file: !127, line: 90, baseType: !2440, size: 16, offset: 112)
!2440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2404, file: !127, line: 90, size: 16, elements: !2441)
!2441 = !{!2442, !2447}
!2442 = !DIDerivedType(tag: DW_TAG_member, scope: !2440, file: !127, line: 91, baseType: !2443, size: 16)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2440, file: !127, line: 91, size: 16, elements: !2444)
!2444 = !{!2445, !2446}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2443, file: !127, line: 96, baseType: !179, size: 8)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2443, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2440, file: !127, line: 100, baseType: !183, size: 16)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2404, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2404, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2404, file: !127, line: 131, baseType: !2451, size: 192, offset: 192)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2452)
!2452 = !{!2453, !2454, !2460}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2451, file: !163, line: 245, baseType: !2410, size: 64)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2451, file: !163, line: 246, baseType: !2455, size: 32, offset: 64)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2456)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{null, !2459}
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2451, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2401, file: !127, line: 250, baseType: !2462, size: 288, offset: 384)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2463)
!2463 = !{!2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2462, file: !200, line: 26, baseType: !113, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2462, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2462, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2462, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2462, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2462, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2462, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2462, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2462, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2401, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2401, file: !127, line: 256, baseType: !2432, size: 64, offset: 704)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2401, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2401, file: !127, line: 300, baseType: !2477, size: 96, offset: 800)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2478)
!2478 = !{!2479, !2480, !2481}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2477, file: !127, line: 153, baseType: !22, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2477, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2477, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2401, file: !127, line: 325, baseType: !2483, size: 32, offset: 896)
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 32)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2485)
!2485 = !{!2486, !2492, !2493}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2484, file: !122, line: 5074, baseType: !2487, size: 96)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2488)
!2488 = !{!2489, !2490, !2491}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2487, file: !226, line: 57, baseType: !229, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2487, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2487, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2484, file: !122, line: 5075, baseType: !2432, size: 64, offset: 96)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2484, file: !122, line: 5076, baseType: !2494, size: 32, offset: 160)
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2495)
!2495 = !{!2496}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2494, file: !236, line: 52, baseType: !22, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2401, file: !127, line: 343, baseType: !2498, size: 64, offset: 928)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2499)
!2499 = !{!2500, !2501}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2498, file: !200, line: 63, baseType: !113, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2498, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2504 = !{!2395, !2505, !2508, !2510}
!2505 = !DIGlobalVariableExpression(var: !2506, expr: !DIExpression())
!2506 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2397, file: !2507, line: 404, type: !105, isLocal: true, isDefinition: true)
!2507 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2508 = !DIGlobalVariableExpression(var: !2509, expr: !DIExpression())
!2509 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2397, file: !2507, line: 405, type: !105, isLocal: true, isDefinition: true)
!2510 = !DIGlobalVariableExpression(var: !2511, expr: !DIExpression())
!2511 = distinct !DIGlobalVariable(name: "pending_current", scope: !2397, file: !2507, line: 425, type: !2400, isLocal: true, isDefinition: true)
!2512 = !DIGlobalVariableExpression(var: !2513, expr: !DIExpression())
!2513 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2514, file: !2544, line: 19, type: !2550, isLocal: true, isDefinition: true)
!2514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2515, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2516, globals: !2541, splitDebugInlining: false, nameTableKind: None)
!2515 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2516 = !{!107, !104, !116, !113, !114, !105, !2517, !102, !109}
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 32)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2519)
!2519 = !{!2520, !2535, !2540}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2518, file: !163, line: 245, baseType: !2521, size: 64)
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2522)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2523)
!2523 = !{!2524, !2530}
!2524 = !DIDerivedType(tag: DW_TAG_member, scope: !2522, file: !137, line: 38, baseType: !2525, size: 32)
!2525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2522, file: !137, line: 38, size: 32, elements: !2526)
!2526 = !{!2527, !2529}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2525, file: !137, line: 39, baseType: !2528, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2525, file: !137, line: 40, baseType: !2528, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, scope: !2522, file: !137, line: 42, baseType: !2531, size: 32, offset: 32)
!2531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2522, file: !137, line: 42, size: 32, elements: !2532)
!2532 = !{!2533, !2534}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2531, file: !137, line: 43, baseType: !2528, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2531, file: !137, line: 44, baseType: !2528, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2518, file: !163, line: 246, baseType: !2536, size: 32, offset: 64)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2537)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!2538 = !DISubroutineType(types: !2539)
!2539 = !{null, !2517}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2518, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2541 = !{!2542, !2512, !2545, !2547}
!2542 = !DIGlobalVariableExpression(var: !2543, expr: !DIExpression())
!2543 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2514, file: !2544, line: 15, type: !114, isLocal: true, isDefinition: true)
!2544 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2545 = !DIGlobalVariableExpression(var: !2546, expr: !DIExpression())
!2546 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2514, file: !2544, line: 25, type: !105, isLocal: true, isDefinition: true)
!2547 = !DIGlobalVariableExpression(var: !2548, expr: !DIExpression())
!2548 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2514, file: !2544, line: 17, type: !2549, isLocal: true, isDefinition: true)
!2549 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2522)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2551)
!2551 = !{!2552}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2550, file: !236, line: 52, baseType: !22, size: 32)
!2553 = !DIGlobalVariableExpression(var: !2554, expr: !DIExpression())
!2554 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2555, file: !2574, line: 55, type: !2575, isLocal: true, isDefinition: true, align: 32)
!2555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2557, globals: !2573, splitDebugInlining: false, nameTableKind: None)
!2556 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2557 = !{!104, !107, !105, !2558}
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2560)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2561)
!2561 = !{!2562, !2568}
!2562 = !DIDerivedType(tag: DW_TAG_member, scope: !2560, file: !137, line: 38, baseType: !2563, size: 32)
!2563 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2560, file: !137, line: 38, size: 32, elements: !2564)
!2564 = !{!2565, !2567}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2563, file: !137, line: 39, baseType: !2566, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2563, file: !137, line: 40, baseType: !2566, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, scope: !2560, file: !137, line: 42, baseType: !2569, size: 32, offset: 32)
!2569 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2560, file: !137, line: 42, size: 32, elements: !2570)
!2570 = !{!2571, !2572}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2569, file: !137, line: 43, baseType: !2566, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2569, file: !137, line: 44, baseType: !2566, size: 32)
!2573 = !{!2553}
!2574 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2576)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !485, line: 51, size: 64, elements: !2577)
!2577 = !{!2578, !2585}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2576, file: !485, line: 60, baseType: !2579, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 32)
!2580 = !DISubroutineType(types: !2581)
!2581 = !{!105, !2582}
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2584)
!2584 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !485, line: 48, flags: DIFlagFwdDecl)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2576, file: !485, line: 65, baseType: !2582, size: 32, offset: 32)
!2586 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2587, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2587 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2588 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2589, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2589 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2590 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2591, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2592, retainedTypes: !2600, splitDebugInlining: false, nameTableKind: None)
!2591 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2592 = !{!30, !2593}
!2593 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2594, line: 54, baseType: !32, size: 32, elements: !2595)
!2594 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2595 = !{!2596, !2597, !2598, !2599}
!2596 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2597 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2598 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2599 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2600 = !{!104, !111, !432, !24, !2601, !22, !2607, !105, !1084, !2622}
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 32)
!2602 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2594, line: 58, baseType: !2603)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2594, line: 58, size: 64, elements: !2604)
!2604 = !{!2605}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2603, file: !2594, line: 58, baseType: !2606, size: 64)
!2606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 64, elements: !1380)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 32)
!2608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2594, line: 68, size: 128, elements: !2609)
!2609 = !{!2610, !2613, !2614, !2615}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2608, file: !2594, line: 69, baseType: !2611, size: 64)
!2611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2612, size: 64, elements: !158)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2594, line: 61, baseType: !113)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2608, file: !2594, line: 70, baseType: !2612, size: 32, offset: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2608, file: !2594, line: 71, baseType: !113, size: 32, offset: 96)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2608, file: !2594, line: 77, baseType: !2616, offset: 128)
!2616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2617, elements: !2620)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2594, line: 64, size: 32, elements: !2618)
!2618 = !{!2619}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2617, file: !2594, line: 65, baseType: !2612, size: 32)
!2620 = !{!2621}
!2621 = !DISubrange(count: 0)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!2623 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2624, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2625, retainedTypes: !2645, splitDebugInlining: false, nameTableKind: None)
!2624 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2625 = !{!2626, !2634}
!2626 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2627, line: 69, baseType: !32, size: 32, elements: !2628)
!2627 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2628 = !{!2629, !2630, !2631, !2632, !2633}
!2629 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2630 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2631 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2632 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2633 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2634 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2627, line: 56, baseType: !32, size: 32, elements: !2635)
!2635 = !{!2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644}
!2636 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2637 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2638 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2639 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2640 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2641 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2642 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2643 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2644 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2645 = !{!105, !2626, !2634, !2646, !180, !512, !2648, !2649, !170, !184, !269, !111, !104, !22, !32, !428, !2651, !2652, !106, !429, !110, !430, !2647, !2653, !2654, !2655, !2656}
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2627, line: 31, baseType: !2647)
!2647 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !110)
!2648 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !112, line: 329, baseType: !32)
!2649 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2627, line: 32, baseType: !2650)
!2650 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !112, line: 145, baseType: !105)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 32)
!2657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2658, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2658 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2659 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2660, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2660 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2661 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2662, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2663, splitDebugInlining: false, nameTableKind: None)
!2662 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2663 = !{!269, !170, !105, !32}
!2664 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2665, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2666, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2665 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2666 = !{!2667, !30}
!2667 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2668, line: 27, baseType: !32, size: 32, elements: !2669)
!2668 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2669 = !{!2670, !2671, !2672, !2673, !2674}
!2670 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2671 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2672 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2673 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2674 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2676, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2677, retainedTypes: !2678, splitDebugInlining: false, nameTableKind: None)
!2676 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2677 = !{!869, !2667, !30}
!2678 = !{!1011, !2679, !104, !105, !116, !113, !169, !2696}
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 32)
!2680 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !692, line: 360, baseType: !2681)
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 345, size: 28704, elements: !2682)
!2682 = !{!2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2681, file: !692, line: 347, baseType: !1754, size: 256)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2681, file: !692, line: 348, baseType: !1756, size: 768, offset: 256)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2681, file: !692, line: 349, baseType: !1754, size: 256, offset: 1024)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2681, file: !692, line: 350, baseType: !1756, size: 768, offset: 1280)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2681, file: !692, line: 351, baseType: !1754, size: 256, offset: 2048)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2681, file: !692, line: 352, baseType: !1756, size: 768, offset: 2304)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2681, file: !692, line: 353, baseType: !1754, size: 256, offset: 3072)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2681, file: !692, line: 354, baseType: !1756, size: 768, offset: 3328)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2681, file: !692, line: 355, baseType: !1754, size: 256, offset: 4096)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2681, file: !692, line: 356, baseType: !1767, size: 1792, offset: 4352)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2681, file: !692, line: 357, baseType: !1771, size: 1920, offset: 6144)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2681, file: !692, line: 358, baseType: !1776, size: 20608, offset: 8064)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2681, file: !692, line: 359, baseType: !461, size: 32, offset: 28672)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !692, line: 402, baseType: !2698)
!2698 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 379, size: 1120, elements: !2699)
!2699 = !{!2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2698, file: !692, line: 381, baseType: !696, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2698, file: !692, line: 382, baseType: !461, size: 32, offset: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2698, file: !692, line: 383, baseType: !461, size: 32, offset: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2698, file: !692, line: 384, baseType: !461, size: 32, offset: 96)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2698, file: !692, line: 385, baseType: !461, size: 32, offset: 128)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2698, file: !692, line: 386, baseType: !461, size: 32, offset: 160)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2698, file: !692, line: 387, baseType: !1791, size: 96, offset: 192)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2698, file: !692, line: 388, baseType: !461, size: 32, offset: 288)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2698, file: !692, line: 389, baseType: !461, size: 32, offset: 320)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2698, file: !692, line: 390, baseType: !461, size: 32, offset: 352)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2698, file: !692, line: 391, baseType: !461, size: 32, offset: 384)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2698, file: !692, line: 392, baseType: !461, size: 32, offset: 416)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2698, file: !692, line: 393, baseType: !461, size: 32, offset: 448)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2698, file: !692, line: 394, baseType: !461, size: 32, offset: 480)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2698, file: !692, line: 395, baseType: !1802, size: 64, offset: 512)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2698, file: !692, line: 396, baseType: !696, size: 32, offset: 576)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2698, file: !692, line: 397, baseType: !696, size: 32, offset: 608)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2698, file: !692, line: 398, baseType: !1806, size: 128, offset: 640)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2698, file: !692, line: 399, baseType: !1808, size: 160, offset: 768)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2698, file: !692, line: 400, baseType: !1810, size: 160, offset: 928)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2698, file: !692, line: 401, baseType: !461, size: 32, offset: 1088)
!2721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2722, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2722 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2723 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2724, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2725, splitDebugInlining: false, nameTableKind: None)
!2724 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2725 = !{!104, !105, !22, !2726}
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !692, line: 402, baseType: !2728)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 379, size: 1120, elements: !2729)
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2728, file: !692, line: 381, baseType: !696, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2728, file: !692, line: 382, baseType: !461, size: 32, offset: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2728, file: !692, line: 383, baseType: !461, size: 32, offset: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2728, file: !692, line: 384, baseType: !461, size: 32, offset: 96)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2728, file: !692, line: 385, baseType: !461, size: 32, offset: 128)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2728, file: !692, line: 386, baseType: !461, size: 32, offset: 160)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2728, file: !692, line: 387, baseType: !1791, size: 96, offset: 192)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2728, file: !692, line: 388, baseType: !461, size: 32, offset: 288)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2728, file: !692, line: 389, baseType: !461, size: 32, offset: 320)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2728, file: !692, line: 390, baseType: !461, size: 32, offset: 352)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2728, file: !692, line: 391, baseType: !461, size: 32, offset: 384)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2728, file: !692, line: 392, baseType: !461, size: 32, offset: 416)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2728, file: !692, line: 393, baseType: !461, size: 32, offset: 448)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2728, file: !692, line: 394, baseType: !461, size: 32, offset: 480)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2728, file: !692, line: 395, baseType: !1802, size: 64, offset: 512)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2728, file: !692, line: 396, baseType: !696, size: 32, offset: 576)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2728, file: !692, line: 397, baseType: !696, size: 32, offset: 608)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2728, file: !692, line: 398, baseType: !1806, size: 128, offset: 640)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2728, file: !692, line: 399, baseType: !1808, size: 160, offset: 768)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2728, file: !692, line: 400, baseType: !1810, size: 160, offset: 928)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2728, file: !692, line: 401, baseType: !461, size: 32, offset: 1088)
!2751 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2752, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2753, splitDebugInlining: false, nameTableKind: None)
!2752 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2753 = !{!2754, !104, !105}
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 32)
!2755 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !692, line: 402, baseType: !2756)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 379, size: 1120, elements: !2757)
!2757 = !{!2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2756, file: !692, line: 381, baseType: !696, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2756, file: !692, line: 382, baseType: !461, size: 32, offset: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2756, file: !692, line: 383, baseType: !461, size: 32, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2756, file: !692, line: 384, baseType: !461, size: 32, offset: 96)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2756, file: !692, line: 385, baseType: !461, size: 32, offset: 128)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2756, file: !692, line: 386, baseType: !461, size: 32, offset: 160)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2756, file: !692, line: 387, baseType: !1791, size: 96, offset: 192)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2756, file: !692, line: 388, baseType: !461, size: 32, offset: 288)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2756, file: !692, line: 389, baseType: !461, size: 32, offset: 320)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2756, file: !692, line: 390, baseType: !461, size: 32, offset: 352)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2756, file: !692, line: 391, baseType: !461, size: 32, offset: 384)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2756, file: !692, line: 392, baseType: !461, size: 32, offset: 416)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2756, file: !692, line: 393, baseType: !461, size: 32, offset: 448)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2756, file: !692, line: 394, baseType: !461, size: 32, offset: 480)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2756, file: !692, line: 395, baseType: !1802, size: 64, offset: 512)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2756, file: !692, line: 396, baseType: !696, size: 32, offset: 576)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2756, file: !692, line: 397, baseType: !696, size: 32, offset: 608)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2756, file: !692, line: 398, baseType: !1806, size: 128, offset: 640)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2756, file: !692, line: 399, baseType: !1808, size: 160, offset: 768)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2756, file: !692, line: 400, baseType: !1810, size: 160, offset: 928)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2756, file: !692, line: 401, baseType: !461, size: 32, offset: 1088)
!2779 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2780, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2781, splitDebugInlining: false, nameTableKind: None)
!2780 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2781 = !{!2782, !113, !104, !105}
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 32)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2784, line: 98, size: 256, elements: !2785)
!2784 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2785 = !{!2786, !2791, !2796, !2801, !2806, !2811, !2816, !2821}
!2786 = !DIDerivedType(tag: DW_TAG_member, scope: !2783, file: !2784, line: 99, baseType: !2787, size: 32)
!2787 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2783, file: !2784, line: 99, size: 32, elements: !2788)
!2788 = !{!2789, !2790}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2787, file: !2784, line: 99, baseType: !113, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2787, file: !2784, line: 99, baseType: !113, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, scope: !2783, file: !2784, line: 100, baseType: !2792, size: 32, offset: 32)
!2792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2783, file: !2784, line: 100, size: 32, elements: !2793)
!2793 = !{!2794, !2795}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2792, file: !2784, line: 100, baseType: !113, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2792, file: !2784, line: 100, baseType: !113, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, scope: !2783, file: !2784, line: 101, baseType: !2797, size: 32, offset: 64)
!2797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2783, file: !2784, line: 101, size: 32, elements: !2798)
!2798 = !{!2799, !2800}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2797, file: !2784, line: 101, baseType: !113, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2797, file: !2784, line: 101, baseType: !113, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_member, scope: !2783, file: !2784, line: 102, baseType: !2802, size: 32, offset: 96)
!2802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2783, file: !2784, line: 102, size: 32, elements: !2803)
!2803 = !{!2804, !2805}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2802, file: !2784, line: 102, baseType: !113, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2802, file: !2784, line: 102, baseType: !113, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, scope: !2783, file: !2784, line: 103, baseType: !2807, size: 32, offset: 128)
!2807 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2783, file: !2784, line: 103, size: 32, elements: !2808)
!2808 = !{!2809, !2810}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2807, file: !2784, line: 103, baseType: !113, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2807, file: !2784, line: 103, baseType: !113, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, scope: !2783, file: !2784, line: 104, baseType: !2812, size: 32, offset: 160)
!2812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2783, file: !2784, line: 104, size: 32, elements: !2813)
!2813 = !{!2814, !2815}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2812, file: !2784, line: 104, baseType: !113, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2812, file: !2784, line: 104, baseType: !113, size: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, scope: !2783, file: !2784, line: 105, baseType: !2817, size: 32, offset: 192)
!2817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2783, file: !2784, line: 105, size: 32, elements: !2818)
!2818 = !{!2819, !2820}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2817, file: !2784, line: 105, baseType: !113, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2817, file: !2784, line: 105, baseType: !113, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2783, file: !2784, line: 106, baseType: !113, size: 32, offset: 224)
!2822 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2823, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2666, retainedTypes: !2824, splitDebugInlining: false, nameTableKind: None)
!2823 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2824 = !{!2825, !104, !105, !2850, !2622, !113}
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !692, line: 402, baseType: !2827)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 379, size: 1120, elements: !2828)
!2828 = !{!2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2827, file: !692, line: 381, baseType: !696, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2827, file: !692, line: 382, baseType: !461, size: 32, offset: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2827, file: !692, line: 383, baseType: !461, size: 32, offset: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2827, file: !692, line: 384, baseType: !461, size: 32, offset: 96)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2827, file: !692, line: 385, baseType: !461, size: 32, offset: 128)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2827, file: !692, line: 386, baseType: !461, size: 32, offset: 160)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2827, file: !692, line: 387, baseType: !1791, size: 96, offset: 192)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2827, file: !692, line: 388, baseType: !461, size: 32, offset: 288)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2827, file: !692, line: 389, baseType: !461, size: 32, offset: 320)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2827, file: !692, line: 390, baseType: !461, size: 32, offset: 352)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2827, file: !692, line: 391, baseType: !461, size: 32, offset: 384)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2827, file: !692, line: 392, baseType: !461, size: 32, offset: 416)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2827, file: !692, line: 393, baseType: !461, size: 32, offset: 448)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2827, file: !692, line: 394, baseType: !461, size: 32, offset: 480)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2827, file: !692, line: 395, baseType: !1802, size: 64, offset: 512)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2827, file: !692, line: 396, baseType: !696, size: 32, offset: 576)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2827, file: !692, line: 397, baseType: !696, size: 32, offset: 608)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2827, file: !692, line: 398, baseType: !1806, size: 128, offset: 640)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2827, file: !692, line: 399, baseType: !1808, size: 160, offset: 768)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2827, file: !692, line: 400, baseType: !1810, size: 160, offset: 928)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2827, file: !692, line: 401, baseType: !461, size: 32, offset: 1088)
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2784, line: 141, baseType: !2852)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2784, line: 97, size: 256, elements: !2853)
!2853 = !{!2854}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2852, file: !2784, line: 107, baseType: !2855, size: 256)
!2855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2784, line: 98, size: 256, elements: !2856)
!2856 = !{!2857, !2862, !2867, !2872, !2877, !2882, !2887, !2892}
!2857 = !DIDerivedType(tag: DW_TAG_member, scope: !2855, file: !2784, line: 99, baseType: !2858, size: 32)
!2858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2855, file: !2784, line: 99, size: 32, elements: !2859)
!2859 = !{!2860, !2861}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2858, file: !2784, line: 99, baseType: !113, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2858, file: !2784, line: 99, baseType: !113, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, scope: !2855, file: !2784, line: 100, baseType: !2863, size: 32, offset: 32)
!2863 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2855, file: !2784, line: 100, size: 32, elements: !2864)
!2864 = !{!2865, !2866}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2863, file: !2784, line: 100, baseType: !113, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2863, file: !2784, line: 100, baseType: !113, size: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, scope: !2855, file: !2784, line: 101, baseType: !2868, size: 32, offset: 64)
!2868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2855, file: !2784, line: 101, size: 32, elements: !2869)
!2869 = !{!2870, !2871}
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2868, file: !2784, line: 101, baseType: !113, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2868, file: !2784, line: 101, baseType: !113, size: 32)
!2872 = !DIDerivedType(tag: DW_TAG_member, scope: !2855, file: !2784, line: 102, baseType: !2873, size: 32, offset: 96)
!2873 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2855, file: !2784, line: 102, size: 32, elements: !2874)
!2874 = !{!2875, !2876}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2873, file: !2784, line: 102, baseType: !113, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2873, file: !2784, line: 102, baseType: !113, size: 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, scope: !2855, file: !2784, line: 103, baseType: !2878, size: 32, offset: 128)
!2878 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2855, file: !2784, line: 103, size: 32, elements: !2879)
!2879 = !{!2880, !2881}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2878, file: !2784, line: 103, baseType: !113, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2878, file: !2784, line: 103, baseType: !113, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, scope: !2855, file: !2784, line: 104, baseType: !2883, size: 32, offset: 160)
!2883 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2855, file: !2784, line: 104, size: 32, elements: !2884)
!2884 = !{!2885, !2886}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2883, file: !2784, line: 104, baseType: !113, size: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2883, file: !2784, line: 104, baseType: !113, size: 32)
!2887 = !DIDerivedType(tag: DW_TAG_member, scope: !2855, file: !2784, line: 105, baseType: !2888, size: 32, offset: 192)
!2888 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2855, file: !2784, line: 105, size: 32, elements: !2889)
!2889 = !{!2890, !2891}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2888, file: !2784, line: 105, baseType: !113, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2888, file: !2784, line: 105, baseType: !113, size: 32)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2855, file: !2784, line: 106, baseType: !113, size: 32, offset: 224)
!2893 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2894, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1739, retainedTypes: !2895, splitDebugInlining: false, nameTableKind: None)
!2894 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2895 = !{!1011, !116, !169, !113, !2896, !2913}
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 32)
!2897 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !692, line: 360, baseType: !2898)
!2898 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 345, size: 28704, elements: !2899)
!2899 = !{!2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2898, file: !692, line: 347, baseType: !1754, size: 256)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2898, file: !692, line: 348, baseType: !1756, size: 768, offset: 256)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2898, file: !692, line: 349, baseType: !1754, size: 256, offset: 1024)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2898, file: !692, line: 350, baseType: !1756, size: 768, offset: 1280)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2898, file: !692, line: 351, baseType: !1754, size: 256, offset: 2048)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2898, file: !692, line: 352, baseType: !1756, size: 768, offset: 2304)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2898, file: !692, line: 353, baseType: !1754, size: 256, offset: 3072)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2898, file: !692, line: 354, baseType: !1756, size: 768, offset: 3328)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2898, file: !692, line: 355, baseType: !1754, size: 256, offset: 4096)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2898, file: !692, line: 356, baseType: !1767, size: 1792, offset: 4352)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2898, file: !692, line: 357, baseType: !1771, size: 1920, offset: 6144)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2898, file: !692, line: 358, baseType: !1776, size: 20608, offset: 8064)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2898, file: !692, line: 359, baseType: !461, size: 32, offset: 28672)
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2914, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !692, line: 402, baseType: !2915)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 379, size: 1120, elements: !2916)
!2916 = !{!2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2915, file: !692, line: 381, baseType: !696, size: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2915, file: !692, line: 382, baseType: !461, size: 32, offset: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2915, file: !692, line: 383, baseType: !461, size: 32, offset: 64)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2915, file: !692, line: 384, baseType: !461, size: 32, offset: 96)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2915, file: !692, line: 385, baseType: !461, size: 32, offset: 128)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2915, file: !692, line: 386, baseType: !461, size: 32, offset: 160)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2915, file: !692, line: 387, baseType: !1791, size: 96, offset: 192)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2915, file: !692, line: 388, baseType: !461, size: 32, offset: 288)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2915, file: !692, line: 389, baseType: !461, size: 32, offset: 320)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2915, file: !692, line: 390, baseType: !461, size: 32, offset: 352)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2915, file: !692, line: 391, baseType: !461, size: 32, offset: 384)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2915, file: !692, line: 392, baseType: !461, size: 32, offset: 416)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2915, file: !692, line: 393, baseType: !461, size: 32, offset: 448)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2915, file: !692, line: 394, baseType: !461, size: 32, offset: 480)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2915, file: !692, line: 395, baseType: !1802, size: 64, offset: 512)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2915, file: !692, line: 396, baseType: !696, size: 32, offset: 576)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2915, file: !692, line: 397, baseType: !696, size: 32, offset: 608)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2915, file: !692, line: 398, baseType: !1806, size: 128, offset: 640)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2915, file: !692, line: 399, baseType: !1808, size: 160, offset: 768)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2915, file: !692, line: 400, baseType: !1810, size: 160, offset: 928)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2915, file: !692, line: 401, baseType: !461, size: 32, offset: 1088)
!2938 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2939, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2940, splitDebugInlining: false, nameTableKind: None)
!2939 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2940 = !{!2941, !104, !105}
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2942, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !692, line: 402, baseType: !2943)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 379, size: 1120, elements: !2944)
!2944 = !{!2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2943, file: !692, line: 381, baseType: !696, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2943, file: !692, line: 382, baseType: !461, size: 32, offset: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2943, file: !692, line: 383, baseType: !461, size: 32, offset: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2943, file: !692, line: 384, baseType: !461, size: 32, offset: 96)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2943, file: !692, line: 385, baseType: !461, size: 32, offset: 128)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2943, file: !692, line: 386, baseType: !461, size: 32, offset: 160)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2943, file: !692, line: 387, baseType: !1791, size: 96, offset: 192)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2943, file: !692, line: 388, baseType: !461, size: 32, offset: 288)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2943, file: !692, line: 389, baseType: !461, size: 32, offset: 320)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2943, file: !692, line: 390, baseType: !461, size: 32, offset: 352)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2943, file: !692, line: 391, baseType: !461, size: 32, offset: 384)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2943, file: !692, line: 392, baseType: !461, size: 32, offset: 416)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2943, file: !692, line: 393, baseType: !461, size: 32, offset: 448)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2943, file: !692, line: 394, baseType: !461, size: 32, offset: 480)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2943, file: !692, line: 395, baseType: !1802, size: 64, offset: 512)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2943, file: !692, line: 396, baseType: !696, size: 32, offset: 576)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2943, file: !692, line: 397, baseType: !696, size: 32, offset: 608)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2943, file: !692, line: 398, baseType: !1806, size: 128, offset: 640)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2943, file: !692, line: 399, baseType: !1808, size: 160, offset: 768)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2943, file: !692, line: 400, baseType: !1810, size: 160, offset: 928)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2943, file: !692, line: 401, baseType: !461, size: 32, offset: 1088)
!2966 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2967, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2968, splitDebugInlining: false, nameTableKind: None)
!2967 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2968 = !{!103, !102, !111, !1189, !2969, !170, !104}
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!2971 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2972, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2973, splitDebugInlining: false, nameTableKind: None)
!2972 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2973 = !{!2974}
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 386, baseType: !2976)
!2976 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 370, size: 448, elements: !2977)
!2977 = !{!2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2976, file: !457, line: 372, baseType: !461, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2976, file: !457, line: 373, baseType: !461, size: 32, offset: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2976, file: !457, line: 374, baseType: !461, size: 32, offset: 64)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2976, file: !457, line: 375, baseType: !461, size: 32, offset: 96)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2976, file: !457, line: 376, baseType: !461, size: 32, offset: 128)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2976, file: !457, line: 377, baseType: !461, size: 32, offset: 160)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2976, file: !457, line: 378, baseType: !461, size: 32, offset: 192)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2976, file: !457, line: 379, baseType: !461, size: 32, offset: 224)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2976, file: !457, line: 380, baseType: !461, size: 32, offset: 256)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2976, file: !457, line: 381, baseType: !461, size: 32, offset: 288)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2976, file: !457, line: 382, baseType: !461, size: 32, offset: 320)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2976, file: !457, line: 383, baseType: !461, size: 32, offset: 352)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2976, file: !457, line: 384, baseType: !461, size: 32, offset: 384)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2976, file: !457, line: 385, baseType: !461, size: 32, offset: 416)
!2992 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2993, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2993 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2994 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2995, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2996, retainedTypes: !3012, splitDebugInlining: false, nameTableKind: None)
!2995 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!2996 = !{!2997, !3004, !3008}
!2997 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2998, line: 39, baseType: !32, size: 32, elements: !2999)
!2998 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2999 = !{!3000, !3001, !3002, !3003}
!3000 = !DIEnumerator(name: "HAL_OK", value: 0)
!3001 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3002 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3003 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3004 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1048, line: 183, baseType: !32, size: 32, elements: !3005)
!3005 = !{!3006, !3007}
!3006 = !DIEnumerator(name: "DISABLE", value: 0)
!3007 = !DIEnumerator(name: "ENABLE", value: 1)
!3008 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1048, line: 177, baseType: !32, size: 32, elements: !3009)
!3009 = !{!3010, !3011}
!3010 = !DIEnumerator(name: "RESET", value: 0)
!3011 = !DIEnumerator(name: "SET", value: 1)
!3012 = !{!3013, !104, !113, !169, !3031, !3032, !3038, !183, !3051, !114, !3064}
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 32)
!3014 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 386, baseType: !3015)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 370, size: 448, elements: !3016)
!3016 = !{!3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3015, file: !457, line: 372, baseType: !461, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3015, file: !457, line: 373, baseType: !461, size: 32, offset: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3015, file: !457, line: 374, baseType: !461, size: 32, offset: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3015, file: !457, line: 375, baseType: !461, size: 32, offset: 96)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3015, file: !457, line: 376, baseType: !461, size: 32, offset: 128)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3015, file: !457, line: 377, baseType: !461, size: 32, offset: 160)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3015, file: !457, line: 378, baseType: !461, size: 32, offset: 192)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3015, file: !457, line: 379, baseType: !461, size: 32, offset: 224)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3015, file: !457, line: 380, baseType: !461, size: 32, offset: 256)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3015, file: !457, line: 381, baseType: !461, size: 32, offset: 288)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3015, file: !457, line: 382, baseType: !461, size: 32, offset: 320)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3015, file: !457, line: 383, baseType: !461, size: 32, offset: 352)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3015, file: !457, line: 384, baseType: !461, size: 32, offset: 384)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3015, file: !457, line: 385, baseType: !461, size: 32, offset: 416)
!3031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 32)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 32)
!3033 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !457, line: 364, baseType: !3034)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 360, size: 64, elements: !3035)
!3035 = !{!3036, !3037}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3034, file: !457, line: 362, baseType: !461, size: 32)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3034, file: !457, line: 363, baseType: !461, size: 32, offset: 32)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 32)
!3039 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 286, baseType: !3040)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 275, size: 288, elements: !3041)
!3041 = !{!3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3040, file: !457, line: 277, baseType: !461, size: 32)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3040, file: !457, line: 278, baseType: !461, size: 32, offset: 32)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3040, file: !457, line: 279, baseType: !461, size: 32, offset: 64)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3040, file: !457, line: 280, baseType: !461, size: 32, offset: 96)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3040, file: !457, line: 281, baseType: !461, size: 32, offset: 128)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3040, file: !457, line: 282, baseType: !461, size: 32, offset: 160)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3040, file: !457, line: 283, baseType: !461, size: 32, offset: 192)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3040, file: !457, line: 284, baseType: !461, size: 32, offset: 224)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3040, file: !457, line: 285, baseType: !461, size: 32, offset: 256)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !457, line: 314, baseType: !3053)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 303, size: 320, elements: !3054)
!3054 = !{!3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3053, file: !457, line: 305, baseType: !461, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3053, file: !457, line: 306, baseType: !461, size: 32, offset: 32)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3053, file: !457, line: 307, baseType: !461, size: 32, offset: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3053, file: !457, line: 308, baseType: !461, size: 32, offset: 96)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3053, file: !457, line: 309, baseType: !461, size: 32, offset: 128)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3053, file: !457, line: 310, baseType: !461, size: 32, offset: 160)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3053, file: !457, line: 311, baseType: !461, size: 32, offset: 192)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3053, file: !457, line: 312, baseType: !461, size: 32, offset: 224)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3053, file: !457, line: 313, baseType: !1326, size: 64, offset: 256)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 32)
!3065 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3066, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3067, retainedTypes: !3068, splitDebugInlining: false, nameTableKind: None)
!3066 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!3067 = !{!1047}
!3068 = !{!3069, !113, !3077, !3083, !3096}
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 32)
!3070 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !692, line: 712, baseType: !3071)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 706, size: 128, elements: !3072)
!3072 = !{!3073, !3074, !3075, !3076}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3071, file: !692, line: 708, baseType: !461, size: 32)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3071, file: !692, line: 709, baseType: !461, size: 32, offset: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3071, file: !692, line: 710, baseType: !461, size: 32, offset: 64)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3071, file: !692, line: 711, baseType: !696, size: 32, offset: 96)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 32)
!3078 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !457, line: 364, baseType: !3079)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 360, size: 64, elements: !3080)
!3080 = !{!3081, !3082}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3079, file: !457, line: 362, baseType: !461, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3079, file: !457, line: 363, baseType: !461, size: 32, offset: 32)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 32)
!3084 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 286, baseType: !3085)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 275, size: 288, elements: !3086)
!3086 = !{!3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3085, file: !457, line: 277, baseType: !461, size: 32)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3085, file: !457, line: 278, baseType: !461, size: 32, offset: 32)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3085, file: !457, line: 279, baseType: !461, size: 32, offset: 64)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3085, file: !457, line: 280, baseType: !461, size: 32, offset: 96)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3085, file: !457, line: 281, baseType: !461, size: 32, offset: 128)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3085, file: !457, line: 282, baseType: !461, size: 32, offset: 160)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3085, file: !457, line: 283, baseType: !461, size: 32, offset: 192)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3085, file: !457, line: 284, baseType: !461, size: 32, offset: 224)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3085, file: !457, line: 285, baseType: !461, size: 32, offset: 256)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 386, baseType: !3098)
!3098 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 370, size: 448, elements: !3099)
!3099 = !{!3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3098, file: !457, line: 372, baseType: !461, size: 32)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3098, file: !457, line: 373, baseType: !461, size: 32, offset: 32)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3098, file: !457, line: 374, baseType: !461, size: 32, offset: 64)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3098, file: !457, line: 375, baseType: !461, size: 32, offset: 96)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3098, file: !457, line: 376, baseType: !461, size: 32, offset: 128)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3098, file: !457, line: 377, baseType: !461, size: 32, offset: 160)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3098, file: !457, line: 378, baseType: !461, size: 32, offset: 192)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3098, file: !457, line: 379, baseType: !461, size: 32, offset: 224)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3098, file: !457, line: 380, baseType: !461, size: 32, offset: 256)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3098, file: !457, line: 381, baseType: !461, size: 32, offset: 288)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3098, file: !457, line: 382, baseType: !461, size: 32, offset: 320)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3098, file: !457, line: 383, baseType: !461, size: 32, offset: 352)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3098, file: !457, line: 384, baseType: !461, size: 32, offset: 384)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3098, file: !457, line: 385, baseType: !461, size: 32, offset: 416)
!3114 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3115, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3116, splitDebugInlining: false, nameTableKind: None)
!3115 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!3116 = !{!104, !111}
!3117 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3118, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3119, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3118 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!3119 = !{!3120, !3127, !2667, !30}
!3120 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3121, line: 14, baseType: !32, size: 32, elements: !3122)
!3121 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3122 = !{!3123, !3124, !3125, !3126}
!3123 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3124 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3125 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3126 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3121, line: 42, baseType: !32, size: 32, elements: !3128)
!3128 = !{!3129, !3130, !3131, !3132, !3133, !3134}
!3129 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3130 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3131 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3132 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3133 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3134 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3135 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3136, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3136 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!3137 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3138, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3139, splitDebugInlining: false, nameTableKind: None)
!3138 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!3139 = !{!104, !105, !3140, !3155}
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 32)
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !3142)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !3143)
!3143 = !{!3144, !3150}
!3144 = !DIDerivedType(tag: DW_TAG_member, scope: !3142, file: !137, line: 38, baseType: !3145, size: 32)
!3145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3142, file: !137, line: 38, size: 32, elements: !3146)
!3146 = !{!3147, !3149}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3145, file: !137, line: 39, baseType: !3148, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3145, file: !137, line: 40, baseType: !3148, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, scope: !3142, file: !137, line: 42, baseType: !3151, size: 32, offset: 32)
!3151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3142, file: !137, line: 42, size: 32, elements: !3152)
!3152 = !{!3153, !3154}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3151, file: !137, line: 43, baseType: !3148, size: 32)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3151, file: !137, line: 44, baseType: !3148, size: 32)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 32)
!3156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !3157)
!3157 = !{!3158, !3202, !3214, !3215, !3216, !3217, !3223, !3238}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3156, file: !127, line: 247, baseType: !3159, size: 384)
!3159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !3160)
!3160 = !{!3161, !3171, !3178, !3179, !3180, !3189, !3190, !3191}
!3161 = !DIDerivedType(tag: DW_TAG_member, scope: !3159, file: !127, line: 60, baseType: !3162, size: 64)
!3162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3159, file: !127, line: 60, size: 64, elements: !3163)
!3163 = !{!3164, !3165}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3162, file: !127, line: 61, baseType: !3141, size: 64)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3162, file: !127, line: 62, baseType: !3166, size: 64)
!3166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !3167)
!3167 = !{!3168}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3166, file: !153, line: 50, baseType: !3169, size: 64)
!3169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3170, size: 64, elements: !158)
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 32)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3159, file: !127, line: 68, baseType: !3172, size: 32, offset: 64)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !3174)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !3175)
!3175 = !{!3176}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3174, file: !163, line: 232, baseType: !3177, size: 64)
!3177 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !3142)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3159, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3159, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!3180 = !DIDerivedType(tag: DW_TAG_member, scope: !3159, file: !127, line: 90, baseType: !3181, size: 16, offset: 112)
!3181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3159, file: !127, line: 90, size: 16, elements: !3182)
!3182 = !{!3183, !3188}
!3183 = !DIDerivedType(tag: DW_TAG_member, scope: !3181, file: !127, line: 91, baseType: !3184, size: 16)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3181, file: !127, line: 91, size: 16, elements: !3185)
!3185 = !{!3186, !3187}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3184, file: !127, line: 96, baseType: !179, size: 8)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3184, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3181, file: !127, line: 100, baseType: !183, size: 16)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3159, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3159, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3159, file: !127, line: 131, baseType: !3192, size: 192, offset: 192)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !3193)
!3193 = !{!3194, !3195, !3201}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3192, file: !163, line: 245, baseType: !3141, size: 64)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3192, file: !163, line: 246, baseType: !3196, size: 32, offset: 64)
!3196 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !3197)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 32)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{null, !3200}
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 32)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3192, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3156, file: !127, line: 250, baseType: !3203, size: 288, offset: 384)
!3203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !3204)
!3204 = !{!3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3203, file: !200, line: 26, baseType: !113, size: 32)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3203, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3203, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3203, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3203, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3203, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3203, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3203, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3203, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3156, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3156, file: !127, line: 256, baseType: !3173, size: 64, offset: 704)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3156, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3156, file: !127, line: 300, baseType: !3218, size: 96, offset: 800)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !3219)
!3219 = !{!3220, !3221, !3222}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3218, file: !127, line: 153, baseType: !22, size: 32)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3218, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3218, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3156, file: !127, line: 325, baseType: !3224, size: 32, offset: 896)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 32)
!3225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !3226)
!3226 = !{!3227, !3233, !3234}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3225, file: !122, line: 5074, baseType: !3228, size: 96)
!3228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !3229)
!3229 = !{!3230, !3231, !3232}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3228, file: !226, line: 57, baseType: !229, size: 32)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3228, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3228, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3225, file: !122, line: 5075, baseType: !3173, size: 64, offset: 96)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3225, file: !122, line: 5076, baseType: !3235, size: 32, offset: 160)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !3236)
!3236 = !{!3237}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3235, file: !236, line: 52, baseType: !22, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3156, file: !127, line: 343, baseType: !3239, size: 64, offset: 928)
!3239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !3240)
!3240 = !{!3241, !3242}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3239, file: !200, line: 63, baseType: !113, size: 32)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3239, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!3243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3244, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3245, splitDebugInlining: false, nameTableKind: None)
!3244 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!3245 = !{!22, !104, !105}
!3246 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3247, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3247 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!3248 = !{!"Ubuntu clang version 14.0.6"}
!3249 = !{i32 7, !"Dwarf Version", i32 4}
!3250 = !{i32 2, !"Debug Info Version", i32 3}
!3251 = !{i32 1, !"wchar_size", i32 4}
!3252 = !{i32 1, !"min_enum_size", i32 4}
!3253 = !{i32 1, !"branch-target-enforcement", i32 0}
!3254 = !{i32 1, !"sign-return-address", i32 0}
!3255 = !{i32 1, !"sign-return-address-all", i32 0}
!3256 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3257 = !{i32 7, !"frame-pointer", i32 2}
!3258 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3259, file: !3259, line: 26, type: !266, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !397)
!3259 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3260 = !DILocation(line: 28, column: 1, scope: !3258)
!3261 = !{i64 2152498431, i64 2152498451, i64 2152498514}
!3262 = !DILocation(line: 29, column: 1, scope: !3258)
!3263 = !{i64 2152498846, i64 2152498866, i64 2152498929}
!3264 = !DILocation(line: 30, column: 1, scope: !3258)
!3265 = !{i64 2152499265, i64 2152499285, i64 2152499348}
!3266 = !DILocation(line: 31, column: 1, scope: !3258)
!3267 = !{i64 2152499684, i64 2152499704, i64 2152499767}
!3268 = !DILocation(line: 33, column: 1, scope: !3258)
!3269 = !{i64 2152499976, i64 2152499996, i64 2152500059}
!3270 = !DILocation(line: 35, column: 1, scope: !3258)
!3271 = !{i64 2152500301, i64 2152500321, i64 2152500384}
!3272 = !DILocation(line: 50, column: 1, scope: !3258)
!3273 = !{i64 2152500728, i64 2152500748, i64 2152500811}
!3274 = !DILocation(line: 54, column: 1, scope: !3258)
!3275 = !{i64 2152501167, i64 2152501187, i64 2152501250}
!3276 = !DILocation(line: 61, column: 1, scope: !3258)
!3277 = !{i64 2152501484, i64 2152501504, i64 2152501567}
!3278 = !DILocation(line: 63, column: 1, scope: !3258)
!3279 = !{i64 2152501864, i64 2152501884, i64 2152501947}
!3280 = !DILocation(line: 64, column: 1, scope: !3258)
!3281 = !{i64 2152502386, i64 2152502406, i64 2152502469}
!3282 = !DILocation(line: 65, column: 1, scope: !3258)
!3283 = !{i64 2152502884, i64 2152502904, i64 2152502967}
!3284 = !DILocation(line: 66, column: 1, scope: !3258)
!3285 = !{i64 2152503366, i64 2152503386, i64 2152503449}
!3286 = !DILocation(line: 67, column: 1, scope: !3258)
!3287 = !{i64 2152503873, i64 2152503893, i64 2152503956}
!3288 = !DILocation(line: 68, column: 1, scope: !3258)
!3289 = !{i64 2152504361, i64 2152504381, i64 2152504444}
!3290 = !DILocation(line: 70, column: 1, scope: !3258)
!3291 = !{i64 2152504829, i64 2152504849, i64 2152504912}
!3292 = !DILocation(line: 71, column: 1, scope: !3258)
!3293 = !{i64 2152505271, i64 2152505291, i64 2152505354}
!3294 = !DILocation(line: 72, column: 1, scope: !3258)
!3295 = !{i64 2152505729, i64 2152505749, i64 2152505812}
!3296 = !DILocation(line: 79, column: 1, scope: !3258)
!3297 = !{i64 2152510244, i64 2152510264, i64 2152510327}
!3298 = !DILocation(line: 80, column: 1, scope: !3258)
!3299 = !{i64 2152510755, i64 2152510775, i64 2152510838}
!3300 = !DILocation(line: 82, column: 1, scope: !3258)
!3301 = !{i64 2152511246, i64 2152511266, i64 2152511329}
!3302 = !DILocation(line: 97, column: 1, scope: !3258)
!3303 = !{i64 2152511583, i64 2152511603, i64 2152511666}
!3304 = !DILocation(line: 99, column: 1, scope: !3258)
!3305 = !{i64 2152511801, i64 2152511821, i64 2152511884}
!3306 = !DILocation(line: 102, column: 1, scope: !3258)
!3307 = !{i64 2152512058, i64 2152512078, i64 2152512141}
!3308 = !DILocation(line: 105, column: 1, scope: !3258)
!3309 = !{i64 2152512298, i64 2152512318, i64 2152512381}
!3310 = !DILocation(line: 115, column: 1, scope: !3258)
!3311 = !{i64 2152512637, i64 2152512657, i64 2152512720}
!3312 = !DILocation(line: 118, column: 1, scope: !3258)
!3313 = !{i64 2152512981, i64 2152513001, i64 2152513064}
!3314 = !DILocation(line: 32, column: 1, scope: !3315)
!3315 = !DILexicalBlockFile(scope: !3258, file: !3316, discriminator: 0)
!3316 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3317 = !{i64 2152513337, i64 2152513357, i64 2152513420}
!3318 = !DILocation(line: 33, column: 1, scope: !3315)
!3319 = !{i64 2152513849, i64 2152513869, i64 2152513932}
!3320 = !DILocation(line: 53, column: 1, scope: !3315)
!3321 = !{i64 2152514357, i64 2152514377, i64 2152514440}
!3322 = !DILocation(line: 54, column: 1, scope: !3315)
!3323 = !{i64 2152514775, i64 2152514795, i64 2152514858}
!3324 = !DILocation(line: 55, column: 1, scope: !3315)
!3325 = !{i64 2152515193, i64 2152515213, i64 2152515276}
!3326 = !DILocation(line: 56, column: 1, scope: !3315)
!3327 = !{i64 2152515611, i64 2152515631, i64 2152515694}
!3328 = !DILocation(line: 57, column: 1, scope: !3315)
!3329 = !{i64 2152516029, i64 2152516049, i64 2152516112}
!3330 = !DILocation(line: 58, column: 1, scope: !3315)
!3331 = !{i64 2152516447, i64 2152516467, i64 2152516530}
!3332 = !DILocation(line: 59, column: 1, scope: !3315)
!3333 = !{i64 2152516865, i64 2152516885, i64 2152516948}
!3334 = !DILocation(line: 60, column: 1, scope: !3315)
!3335 = !{i64 2152517289, i64 2152517309, i64 2152517372}
!3336 = !DILocation(line: 61, column: 1, scope: !3315)
!3337 = !{i64 2152517606, i64 2152517626, i64 2152517689}
!3338 = !DILocation(line: 70, column: 1, scope: !3315)
!3339 = !{i64 2152517835, i64 2152517855, i64 2152517918}
!3340 = !DILocation(line: 72, column: 1, scope: !3315)
!3341 = !{i64 2152518167, i64 2152518187, i64 2152518250}
!3342 = !DILocation(line: 73, column: 1, scope: !3315)
!3343 = !{i64 2152518617, i64 2152518637, i64 2152518700}
!3344 = !DILocation(line: 74, column: 1, scope: !3315)
!3345 = !{i64 2152519067, i64 2152519087, i64 2152519150}
!3346 = !DILocation(line: 75, column: 1, scope: !3315)
!3347 = !{i64 2152519517, i64 2152519537, i64 2152519600}
!3348 = !DILocation(line: 76, column: 1, scope: !3315)
!3349 = !{i64 2152524028, i64 2152524048, i64 2152524111}
!3350 = !DILocation(line: 77, column: 1, scope: !3315)
!3351 = !{i64 2152524478, i64 2152524498, i64 2152524561}
!3352 = !DILocation(line: 78, column: 1, scope: !3315)
!3353 = !{i64 2152524928, i64 2152524948, i64 2152525011}
!3354 = !DILocation(line: 79, column: 1, scope: !3315)
!3355 = !{i64 2152525378, i64 2152525398, i64 2152525461}
!3356 = !DILocation(line: 80, column: 1, scope: !3315)
!3357 = !{i64 2152525831, i64 2152525851, i64 2152525914}
!3358 = !DILocation(line: 84, column: 1, scope: !3315)
!3359 = !{i64 2152526163, i64 2152526183, i64 2152526246}
!3360 = !DILocation(line: 91, column: 1, scope: !3315)
!3361 = !{i64 2152526560, i64 2152526580, i64 2152526643}
!3362 = !DILocation(line: 93, column: 1, scope: !3315)
!3363 = !{i64 2152526927, i64 2152526947, i64 2152527010}
!3364 = !DILocation(line: 106, column: 1, scope: !3315)
!3365 = !{i64 2152527197, i64 2152527217, i64 2152527280}
!3366 = !DILocation(line: 11, column: 1, scope: !3367)
!3367 = !DILexicalBlockFile(scope: !3258, file: !3368, discriminator: 0)
!3368 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3369 = distinct !DISubprogram(name: "metairq_fn", scope: !120, file: !120, line: 48, type: !256, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3370)
!3370 = !{!3371, !3372, !3373, !3374, !3376}
!3371 = !DILocalVariable(name: "p1", arg: 1, scope: !3369, file: !120, line: 48, type: !104)
!3372 = !DILocalVariable(name: "p2", arg: 2, scope: !3369, file: !120, line: 48, type: !104)
!3373 = !DILocalVariable(name: "p3", arg: 3, scope: !3369, file: !120, line: 48, type: !104)
!3374 = !DILocalVariable(name: "m", scope: !3375, file: !120, line: 59, type: !303)
!3375 = distinct !DILexicalBlock(scope: !3369, file: !120, line: 54, column: 15)
!3376 = !DILocalVariable(name: "ret", scope: !3375, file: !120, line: 64, type: !105)
!3377 = !DILocation(line: 0, scope: !3369)
!3378 = !DILocation(line: 54, column: 2, scope: !3369)
!3379 = !DILocation(line: 59, column: 3, scope: !3375)
!3380 = !DILocation(line: 59, column: 14, scope: !3375)
!3381 = !DILocation(line: 61, column: 3, scope: !3375)
!3382 = !DILocation(line: 62, column: 23, scope: !3375)
!3383 = !DILocation(line: 62, column: 44, scope: !3375)
!3384 = !DILocation(line: 62, column: 40, scope: !3375)
!3385 = !DILocation(line: 62, column: 21, scope: !3375)
!3386 = !DILocation(line: 64, column: 35, scope: !3375)
!3387 = !DILocation(line: 64, column: 43, scope: !3375)
!3388 = !DILocation(line: 64, column: 13, scope: !3375)
!3389 = !DILocation(line: 0, scope: !3375)
!3390 = !DILocation(line: 66, column: 7, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3375, file: !120, line: 66, column: 7)
!3392 = !DILocation(line: 66, column: 7, scope: !3375)
!3393 = !DILocation(line: 67, column: 4, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3395, file: !120, line: 67, column: 4)
!3395 = distinct !DILexicalBlock(scope: !3396, file: !120, line: 67, column: 4)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !120, line: 67, column: 4)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !120, line: 67, column: 4)
!3398 = distinct !DILexicalBlock(scope: !3391, file: !120, line: 66, column: 12)
!3399 = !DILocation(line: 69, column: 3, scope: !3398)
!3400 = !DILocation(line: 70, column: 2, scope: !3369)
!3401 = distinct !{!3401, !3378, !3400}
!3402 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3403 = !DILocation(line: 1677, column: 9, scope: !3402)
!3404 = !DILocation(line: 1677, column: 2, scope: !3402)
!3405 = distinct !DISubprogram(name: "k_msgq_put", scope: !3406, file: !3406, line: 1129, type: !3407, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3414)
!3406 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!3407 = !DISubroutineType(types: !3408)
!3408 = !{!105, !3409, !13, !3410}
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!3410 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3411)
!3411 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3412)
!3412 = !{!3413}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3411, file: !108, line: 66, baseType: !107, size: 64)
!3414 = !{!3415, !3416, !3417}
!3415 = !DILocalVariable(name: "msgq", arg: 1, scope: !3405, file: !3406, line: 1129, type: !3409)
!3416 = !DILocalVariable(name: "data", arg: 2, scope: !3405, file: !3406, line: 1129, type: !13)
!3417 = !DILocalVariable(name: "timeout", arg: 3, scope: !3405, file: !3406, line: 1129, type: !3410)
!3418 = !DILocation(line: 0, scope: !3405)
!3419 = !DILocation(line: 1139, column: 2, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3405, file: !3406, line: 1139, column: 2)
!3421 = !{i64 2152229764}
!3422 = !DILocation(line: 1140, column: 9, scope: !3405)
!3423 = !DILocation(line: 1140, column: 2, scope: !3405)
!3424 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3425, file: !3425, line: 175, type: !3426, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3428)
!3425 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3426 = !DISubroutineType(types: !3427)
!3427 = !{!103, !105}
!3428 = !{!3429}
!3429 = !DILocalVariable(name: "level", arg: 1, scope: !3424, file: !3425, line: 175, type: !105)
!3430 = !DILocation(line: 0, scope: !3424)
!3431 = !DILocation(line: 177, column: 2, scope: !3424)
!3432 = !DILocation(line: 189, column: 1, scope: !3424)
!3433 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3434, file: !3434, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3434 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3435 = !DILocation(line: 26, column: 9, scope: !3433)
!3436 = !DILocation(line: 26, column: 2, scope: !3433)
!3437 = distinct !DISubprogram(name: "main", scope: !120, file: !120, line: 226, type: !266, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3438)
!3438 = !{!3439, !3441}
!3439 = !DILocalVariable(name: "i", scope: !3440, file: !120, line: 228, type: !106)
!3440 = distinct !DILexicalBlock(scope: !3437, file: !120, line: 228, column: 2)
!3441 = !DILocalVariable(name: "prio", scope: !3442, file: !120, line: 235, type: !105)
!3442 = distinct !DILexicalBlock(scope: !3443, file: !120, line: 228, column: 41)
!3443 = distinct !DILexicalBlock(scope: !3440, file: !120, line: 228, column: 2)
!3444 = !DILocation(line: 0, scope: !3440)
!3445 = !DILocation(line: 228, column: 2, scope: !3440)
!3446 = !DILocation(line: 246, column: 2, scope: !3437)
!3447 = !DILocation(line: 247, column: 1, scope: !3437)
!3448 = !DILocation(line: 235, column: 31, scope: !3442)
!3449 = !DILocation(line: 0, scope: !3442)
!3450 = !DILocation(line: 237, column: 27, scope: !3442)
!3451 = !DILocation(line: 237, column: 41, scope: !3442)
!3452 = !DILocation(line: 237, column: 33, scope: !3442)
!3453 = !DILocation(line: 237, column: 3, scope: !3442)
!3454 = !DILocation(line: 240, column: 31, scope: !3442)
!3455 = !DILocation(line: 241, column: 5, scope: !3442)
!3456 = !DILocation(line: 242, column: 16, scope: !3442)
!3457 = !DILocation(line: 240, column: 3, scope: !3442)
!3458 = !DILocation(line: 228, column: 37, scope: !3443)
!3459 = !DILocation(line: 228, column: 21, scope: !3443)
!3460 = distinct !{!3460, !3445, !3461}
!3461 = !DILocation(line: 244, column: 2, scope: !3440)
!3462 = distinct !DISubprogram(name: "k_thread_create", scope: !3406, file: !3406, line: 24, type: !3463, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3465)
!3463 = !DISubroutineType(types: !3464)
!3464 = !{!274, !125, !245, !111, !254, !104, !104, !104, !105, !113, !3410}
!3465 = !{!3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475}
!3466 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3462, file: !3406, line: 24, type: !125)
!3467 = !DILocalVariable(name: "stack", arg: 2, scope: !3462, file: !3406, line: 24, type: !245)
!3468 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3462, file: !3406, line: 24, type: !111)
!3469 = !DILocalVariable(name: "entry", arg: 4, scope: !3462, file: !3406, line: 24, type: !254)
!3470 = !DILocalVariable(name: "p1", arg: 5, scope: !3462, file: !3406, line: 24, type: !104)
!3471 = !DILocalVariable(name: "p2", arg: 6, scope: !3462, file: !3406, line: 24, type: !104)
!3472 = !DILocalVariable(name: "p3", arg: 7, scope: !3462, file: !3406, line: 24, type: !104)
!3473 = !DILocalVariable(name: "prio", arg: 8, scope: !3462, file: !3406, line: 24, type: !105)
!3474 = !DILocalVariable(name: "options", arg: 9, scope: !3462, file: !3406, line: 24, type: !113)
!3475 = !DILocalVariable(name: "delay", arg: 10, scope: !3462, file: !3406, line: 24, type: !3410)
!3476 = !DILocation(line: 0, scope: !3462)
!3477 = !DILocation(line: 49, column: 2, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3462, file: !3406, line: 49, column: 2)
!3479 = !{i64 2152225376}
!3480 = !DILocation(line: 50, column: 9, scope: !3462)
!3481 = !DILocation(line: 50, column: 2, scope: !3462)
!3482 = distinct !DISubprogram(name: "thread_fn", scope: !120, file: !120, line: 177, type: !256, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3483)
!3483 = !{!3484, !3485, !3486, !3487, !3488, !3489, !3491, !3492, !3496}
!3484 = !DILocalVariable(name: "p1", arg: 1, scope: !3482, file: !120, line: 177, type: !104)
!3485 = !DILocalVariable(name: "p2", arg: 2, scope: !3482, file: !120, line: 177, type: !104)
!3486 = !DILocalVariable(name: "p3", arg: 3, scope: !3482, file: !120, line: 177, type: !104)
!3487 = !DILocalVariable(name: "id", scope: !3482, file: !120, line: 181, type: !105)
!3488 = !DILocalVariable(name: "m", scope: !3482, file: !120, line: 182, type: !303)
!3489 = !DILocalVariable(name: "ret", scope: !3490, file: !120, line: 188, type: !105)
!3490 = distinct !DILexicalBlock(scope: !3482, file: !120, line: 187, column: 15)
!3491 = !DILocalVariable(name: "start", scope: !3490, file: !120, line: 189, type: !113)
!3492 = !DILocalVariable(name: "i", scope: !3493, file: !120, line: 202, type: !3495)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !120, line: 202, column: 4)
!3494 = distinct !DILexicalBlock(scope: !3490, file: !120, line: 201, column: 49)
!3495 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !105)
!3496 = !DILocalVariable(name: "dur", scope: !3490, file: !120, line: 206, type: !113)
!3497 = !DILocation(line: 0, scope: !3482)
!3498 = !DILocation(line: 181, column: 11, scope: !3482)
!3499 = !DILocation(line: 182, column: 2, scope: !3482)
!3500 = !DILocation(line: 182, column: 13, scope: !3482)
!3501 = !DILocation(line: 184, column: 2, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3503, file: !120, line: 184, column: 2)
!3503 = distinct !DILexicalBlock(scope: !3504, file: !120, line: 184, column: 2)
!3504 = distinct !DILexicalBlock(scope: !3505, file: !120, line: 184, column: 2)
!3505 = distinct !DILexicalBlock(scope: !3482, file: !120, line: 184, column: 2)
!3506 = !DILocation(line: 188, column: 13, scope: !3490)
!3507 = !DILocation(line: 0, scope: !3490)
!3508 = !DILocation(line: 189, column: 20, scope: !3490)
!3509 = !DILocation(line: 191, column: 3, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3511, file: !120, line: 191, column: 3)
!3511 = distinct !DILexicalBlock(scope: !3490, file: !120, line: 191, column: 3)
!3512 = !DILocation(line: 191, column: 3, scope: !3511)
!3513 = !DILocation(line: 201, column: 10, scope: !3490)
!3514 = !DILocation(line: 201, column: 27, scope: !3490)
!3515 = !DILocation(line: 201, column: 39, scope: !3490)
!3516 = !DILocation(line: 201, column: 35, scope: !3490)
!3517 = !DILocation(line: 201, column: 3, scope: !3490)
!3518 = !DILocation(line: 191, column: 3, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3510, file: !120, line: 191, column: 3)
!3520 = !DILocation(line: 202, column: 9, scope: !3493)
!3521 = !DILocation(line: 202, column: 22, scope: !3493)
!3522 = !DILocation(line: 202, column: 29, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3493, file: !120, line: 202, column: 4)
!3524 = !DILocation(line: 202, column: 31, scope: !3523)
!3525 = !DILocation(line: 202, column: 4, scope: !3493)
!3526 = !DILocation(line: 202, column: 4, scope: !3523)
!3527 = distinct !{!3527, !3517, !3528}
!3528 = !DILocation(line: 204, column: 3, scope: !3490)
!3529 = !DILocation(line: 202, column: 39, scope: !3523)
!3530 = distinct !{!3530, !3525, !3531}
!3531 = !DILocation(line: 203, column: 4, scope: !3493)
!3532 = !DILocation(line: 206, column: 18, scope: !3490)
!3533 = !DILocation(line: 206, column: 35, scope: !3490)
!3534 = !DILocation(line: 216, column: 3, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !120, line: 216, column: 3)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !120, line: 216, column: 3)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !120, line: 216, column: 3)
!3538 = distinct !DILexicalBlock(scope: !3490, file: !120, line: 216, column: 3)
!3539 = !DILocation(line: 222, column: 34, scope: !3490)
!3540 = !DILocation(line: 222, column: 30, scope: !3490)
!3541 = !DILocation(line: 222, column: 3, scope: !3490)
!3542 = distinct !{!3542, !3543, !3544}
!3543 = !DILocation(line: 187, column: 2, scope: !3482)
!3544 = !DILocation(line: 223, column: 2, scope: !3482)
!3545 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !3546, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{!274}
!3548 = !DILocation(line: 535, column: 9, scope: !3545)
!3549 = !DILocation(line: 535, column: 2, scope: !3545)
!3550 = distinct !DISubprogram(name: "k_thread_priority_get", scope: !3406, file: !3406, line: 258, type: !3551, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3553)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{!105, !274}
!3553 = !{!3554}
!3554 = !DILocalVariable(name: "thread", arg: 1, scope: !3550, file: !3406, line: 258, type: !274)
!3555 = !DILocation(line: 0, scope: !3550)
!3556 = !DILocation(line: 266, column: 2, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3550, file: !3406, line: 266, column: 2)
!3558 = !{i64 2152226260}
!3559 = !DILocation(line: 267, column: 9, scope: !3550)
!3560 = !DILocation(line: 267, column: 2, scope: !3550)
!3561 = distinct !DISubprogram(name: "k_msgq_get", scope: !3406, file: !3406, line: 1147, type: !3562, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3564)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{!105, !3409, !104, !3410}
!3564 = !{!3565, !3566, !3567}
!3565 = !DILocalVariable(name: "msgq", arg: 1, scope: !3561, file: !3406, line: 1147, type: !3409)
!3566 = !DILocalVariable(name: "data", arg: 2, scope: !3561, file: !3406, line: 1147, type: !104)
!3567 = !DILocalVariable(name: "timeout", arg: 3, scope: !3561, file: !3406, line: 1147, type: !3410)
!3568 = !DILocation(line: 0, scope: !3561)
!3569 = !DILocation(line: 1157, column: 2, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3561, file: !3406, line: 1157, column: 2)
!3571 = !{i64 2152229832}
!3572 = !DILocation(line: 1158, column: 9, scope: !3561)
!3573 = !DILocation(line: 1158, column: 2, scope: !3561)
!3574 = distinct !DISubprogram(name: "record_latencies", scope: !120, file: !120, line: 111, type: !3575, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3578)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{null, !3577, !113}
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!3578 = !{!3579, !3580, !3581, !3582, !3583, !3586, !3587, !3588, !3589, !3590}
!3579 = !DILocalVariable(name: "m", arg: 1, scope: !3574, file: !120, line: 111, type: !3577)
!3580 = !DILocalVariable(name: "latency", arg: 2, scope: !3574, file: !120, line: 111, type: !113)
!3581 = !DILocalVariable(name: "t", scope: !3574, file: !120, line: 129, type: !105)
!3582 = !DILocalVariable(name: "lidx", scope: !3574, file: !120, line: 130, type: !105)
!3583 = !DILocalVariable(name: "hi", scope: !3584, file: !120, line: 145, type: !113)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !120, line: 144, column: 32)
!3585 = distinct !DILexicalBlock(scope: !3574, file: !120, line: 144, column: 6)
!3586 = !DILocalVariable(name: "lo", scope: !3584, file: !120, line: 145, type: !113)
!3587 = !DILocalVariable(name: "mean", scope: !3584, file: !120, line: 145, type: !113)
!3588 = !DILocalVariable(name: "stdev", scope: !3584, file: !120, line: 145, type: !113)
!3589 = !DILocalVariable(name: "ret", scope: !3584, file: !120, line: 145, type: !113)
!3590 = !DILocalVariable(name: "i", scope: !3591, file: !120, line: 159, type: !105)
!3591 = distinct !DILexicalBlock(scope: !3584, file: !120, line: 159, column: 3)
!3592 = !DILocation(line: 0, scope: !3574)
!3593 = !DILocation(line: 125, column: 9, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3574, file: !120, line: 125, column: 6)
!3595 = !DILocation(line: 125, column: 13, scope: !3594)
!3596 = !DILocation(line: 125, column: 6, scope: !3574)
!3597 = !DILocation(line: 129, column: 13, scope: !3574)
!3598 = !DILocation(line: 130, column: 30, scope: !3574)
!3599 = !DILocation(line: 130, column: 34, scope: !3574)
!3600 = !DILocation(line: 132, column: 11, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3574, file: !120, line: 132, column: 6)
!3602 = !DILocation(line: 132, column: 6, scope: !3574)
!3603 = !DILocation(line: 133, column: 3, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3601, file: !120, line: 132, column: 53)
!3605 = !DILocation(line: 133, column: 36, scope: !3604)
!3606 = !DILocation(line: 134, column: 2, scope: !3604)
!3607 = !DILocation(line: 136, column: 57, scope: !3574)
!3608 = !DILocation(line: 136, column: 23, scope: !3574)
!3609 = !DILocation(line: 136, column: 2, scope: !3574)
!3610 = !DILocation(line: 136, column: 52, scope: !3574)
!3611 = !DILocation(line: 144, column: 9, scope: !3585)
!3612 = !DILocation(line: 144, column: 13, scope: !3585)
!3613 = !DILocation(line: 144, column: 6, scope: !3574)
!3614 = !DILocation(line: 145, column: 3, scope: !3584)
!3615 = !DILocation(line: 147, column: 9, scope: !3584)
!3616 = !DILocation(line: 0, scope: !3584)
!3617 = !DILocation(line: 148, column: 3, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !120, line: 148, column: 3)
!3619 = distinct !DILexicalBlock(scope: !3584, file: !120, line: 148, column: 3)
!3620 = !DILocation(line: 148, column: 3, scope: !3619)
!3621 = !DILocation(line: 148, column: 3, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3618, file: !120, line: 148, column: 3)
!3623 = !DILocation(line: 149, column: 3, scope: !3584)
!3624 = !DILocation(line: 151, column: 42, scope: !3584)
!3625 = !DILocation(line: 151, column: 3, scope: !3584)
!3626 = !DILocation(line: 154, column: 3, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3628, file: !120, line: 154, column: 3)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !120, line: 154, column: 3)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !120, line: 154, column: 3)
!3630 = distinct !DILexicalBlock(scope: !3584, file: !120, line: 154, column: 3)
!3631 = !DILocation(line: 155, column: 3, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !120, line: 155, column: 3)
!3633 = distinct !DILexicalBlock(scope: !3634, file: !120, line: 155, column: 3)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !120, line: 155, column: 3)
!3635 = distinct !DILexicalBlock(scope: !3584, file: !120, line: 155, column: 3)
!3636 = !DILocation(line: 156, column: 3, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3638, file: !120, line: 156, column: 3)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !120, line: 156, column: 3)
!3639 = distinct !DILexicalBlock(scope: !3640, file: !120, line: 156, column: 3)
!3640 = distinct !DILexicalBlock(scope: !3584, file: !120, line: 156, column: 3)
!3641 = !DILocation(line: 0, scope: !3591)
!3642 = !DILocation(line: 159, column: 3, scope: !3591)
!3643 = !DILocation(line: 173, column: 3, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3645, file: !120, line: 173, column: 3)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !120, line: 173, column: 3)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !120, line: 173, column: 3)
!3647 = distinct !DILexicalBlock(scope: !3584, file: !120, line: 173, column: 3)
!3648 = !DILocation(line: 174, column: 2, scope: !3585)
!3649 = !DILocation(line: 174, column: 2, scope: !3584)
!3650 = !DILocation(line: 160, column: 25, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3652, file: !120, line: 160, column: 8)
!3652 = distinct !DILexicalBlock(scope: !3653, file: !120, line: 159, column: 41)
!3653 = distinct !DILexicalBlock(scope: !3591, file: !120, line: 159, column: 3)
!3654 = !DILocation(line: 160, column: 30, scope: !3651)
!3655 = !DILocation(line: 160, column: 8, scope: !3652)
!3656 = !DILocation(line: 161, column: 5, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3658, file: !120, line: 161, column: 5)
!3658 = distinct !DILexicalBlock(scope: !3659, file: !120, line: 161, column: 5)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !120, line: 161, column: 5)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !120, line: 161, column: 5)
!3661 = distinct !DILexicalBlock(scope: !3651, file: !120, line: 160, column: 36)
!3662 = !DILocation(line: 162, column: 5, scope: !3661)
!3663 = !DILocation(line: 165, column: 15, scope: !3652)
!3664 = !DILocation(line: 165, column: 4, scope: !3652)
!3665 = !DILocation(line: 169, column: 4, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !120, line: 169, column: 4)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !120, line: 169, column: 4)
!3668 = distinct !DILexicalBlock(scope: !3669, file: !120, line: 169, column: 4)
!3669 = distinct !DILexicalBlock(scope: !3652, file: !120, line: 169, column: 4)
!3670 = !DILocation(line: 171, column: 3, scope: !3652)
!3671 = !DILocation(line: 159, column: 37, scope: !3653)
!3672 = !DILocation(line: 159, column: 21, scope: !3653)
!3673 = distinct !{!3673, !3642, !3674}
!3674 = !DILocation(line: 171, column: 3, scope: !3591)
!3675 = !DILocation(line: 175, column: 1, scope: !3574)
!3676 = distinct !DISubprogram(name: "atomic_inc", scope: !3677, file: !3677, line: 123, type: !3678, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3682)
!3677 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3678 = !DISubroutineType(types: !3679)
!3679 = !{!3680, !3681}
!3680 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !332, line: 23, baseType: !331)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!3682 = !{!3683}
!3683 = !DILocalVariable(name: "target", arg: 1, scope: !3676, file: !3677, line: 123, type: !3681)
!3684 = !DILocation(line: 0, scope: !3676)
!3685 = !DILocation(line: 125, column: 9, scope: !3676)
!3686 = !DILocation(line: 125, column: 2, scope: !3676)
!3687 = distinct !DISubprogram(name: "k_sem_take", scope: !3406, file: !3406, line: 1044, type: !3688, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3691)
!3688 = !DISubroutineType(types: !3689)
!3689 = !{!105, !3690, !3410}
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!3691 = !{!3692, !3693}
!3692 = !DILocalVariable(name: "sem", arg: 1, scope: !3687, file: !3406, line: 1044, type: !3690)
!3693 = !DILocalVariable(name: "timeout", arg: 2, scope: !3687, file: !3406, line: 1044, type: !3410)
!3694 = !DILocation(line: 0, scope: !3687)
!3695 = !DILocation(line: 1053, column: 2, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3687, file: !3406, line: 1053, column: 2)
!3697 = !{i64 2152229424}
!3698 = !DILocation(line: 1054, column: 9, scope: !3687)
!3699 = !DILocation(line: 1054, column: 2, scope: !3687)
!3700 = distinct !DISubprogram(name: "k_msleep", scope: !122, file: !122, line: 439, type: !3701, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3703)
!3701 = !DISubroutineType(types: !3702)
!3702 = !{!116, !116}
!3703 = !{!3704}
!3704 = !DILocalVariable(name: "ms", arg: 1, scope: !3700, file: !122, line: 439, type: !116)
!3705 = !DILocation(line: 0, scope: !3700)
!3706 = !DILocation(line: 441, column: 9, scope: !3700)
!3707 = !DILocation(line: 441, column: 2, scope: !3700)
!3708 = distinct !DISubprogram(name: "calc_stats", scope: !120, file: !120, line: 87, type: !3709, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3713)
!3709 = !DISubroutineType(types: !3710)
!3710 = !{null, !3711, !113, !1084, !1084, !1084, !1084}
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 32)
!3712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!3713 = !{!3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3724, !3726}
!3714 = !DILocalVariable(name: "array", arg: 1, scope: !3708, file: !120, line: 87, type: !3711)
!3715 = !DILocalVariable(name: "n", arg: 2, scope: !3708, file: !120, line: 87, type: !113)
!3716 = !DILocalVariable(name: "lo", arg: 3, scope: !3708, file: !120, line: 88, type: !1084)
!3717 = !DILocalVariable(name: "hi", arg: 4, scope: !3708, file: !120, line: 88, type: !1084)
!3718 = !DILocalVariable(name: "mean", arg: 5, scope: !3708, file: !120, line: 88, type: !1084)
!3719 = !DILocalVariable(name: "stdev", arg: 6, scope: !3708, file: !120, line: 88, type: !1084)
!3720 = !DILocalVariable(name: "tot", scope: !3708, file: !120, line: 90, type: !114)
!3721 = !DILocalVariable(name: "totsq", scope: !3708, file: !120, line: 90, type: !114)
!3722 = !DILocalVariable(name: "i", scope: !3723, file: !120, line: 94, type: !105)
!3723 = distinct !DILexicalBlock(scope: !3708, file: !120, line: 94, column: 2)
!3724 = !DILocalVariable(name: "i", scope: !3725, file: !120, line: 102, type: !105)
!3725 = distinct !DILexicalBlock(scope: !3708, file: !120, line: 102, column: 2)
!3726 = !DILocalVariable(name: "d", scope: !3727, file: !120, line: 103, type: !109)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !120, line: 102, column: 30)
!3728 = distinct !DILexicalBlock(scope: !3725, file: !120, line: 102, column: 2)
!3729 = !DILocation(line: 0, scope: !3708)
!3730 = !DILocation(line: 92, column: 6, scope: !3708)
!3731 = !DILocation(line: 93, column: 6, scope: !3708)
!3732 = !DILocation(line: 0, scope: !3723)
!3733 = !DILocation(line: 94, column: 20, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3723, file: !120, line: 94, column: 2)
!3735 = !DILocation(line: 94, column: 2, scope: !3723)
!3736 = !DILocation(line: 100, column: 31, scope: !3708)
!3737 = !DILocation(line: 100, column: 37, scope: !3708)
!3738 = !DILocation(line: 100, column: 10, scope: !3708)
!3739 = !DILocation(line: 100, column: 8, scope: !3708)
!3740 = !DILocation(line: 0, scope: !3725)
!3741 = !DILocation(line: 102, column: 2, scope: !3725)
!3742 = !DILocation(line: 100, column: 28, scope: !3708)
!3743 = !DILocation(line: 100, column: 26, scope: !3708)
!3744 = !DILocation(line: 100, column: 39, scope: !3708)
!3745 = !DILocation(line: 95, column: 9, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3734, file: !120, line: 94, column: 30)
!3747 = !DILocation(line: 95, column: 7, scope: !3746)
!3748 = !DILocation(line: 96, column: 9, scope: !3746)
!3749 = !DILocation(line: 96, column: 7, scope: !3746)
!3750 = !DILocation(line: 97, column: 10, scope: !3746)
!3751 = !DILocation(line: 97, column: 7, scope: !3746)
!3752 = !DILocation(line: 94, column: 26, scope: !3734)
!3753 = distinct !{!3753, !3735, !3754}
!3754 = !DILocation(line: 98, column: 2, scope: !3723)
!3755 = !DILocation(line: 108, column: 24, scope: !3708)
!3756 = !DILocation(line: 108, column: 35, scope: !3708)
!3757 = !DILocation(line: 108, column: 11, scope: !3708)
!3758 = !DILocation(line: 108, column: 9, scope: !3708)
!3759 = !DILocation(line: 109, column: 1, scope: !3708)
!3760 = !DILocation(line: 103, column: 26, scope: !3727)
!3761 = !DILocation(line: 103, column: 35, scope: !3727)
!3762 = !DILocation(line: 103, column: 15, scope: !3727)
!3763 = !DILocation(line: 0, scope: !3727)
!3764 = !DILocation(line: 105, column: 14, scope: !3727)
!3765 = !DILocation(line: 105, column: 9, scope: !3727)
!3766 = !DILocation(line: 102, column: 26, scope: !3728)
!3767 = !DILocation(line: 102, column: 20, scope: !3728)
!3768 = distinct !{!3768, !3741, !3769}
!3769 = !DILocation(line: 106, column: 2, scope: !3725)
!3770 = distinct !DISubprogram(name: "isqrt", scope: !120, file: !120, line: 76, type: !3771, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3773)
!3771 = !DISubroutineType(types: !3772)
!3772 = !{!113, !114}
!3773 = !{!3774, !3775, !3778}
!3774 = !DILocalVariable(name: "n", arg: 1, scope: !3770, file: !120, line: 76, type: !114)
!3775 = !DILocalVariable(name: "lo", scope: !3776, file: !120, line: 79, type: !114)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !120, line: 78, column: 13)
!3777 = distinct !DILexicalBlock(scope: !3770, file: !120, line: 78, column: 6)
!3778 = !DILocalVariable(name: "hi", scope: !3776, file: !120, line: 80, type: !114)
!3779 = !DILocation(line: 0, scope: !3770)
!3780 = !DILocation(line: 78, column: 8, scope: !3777)
!3781 = !DILocation(line: 78, column: 6, scope: !3770)
!3782 = !DILocation(line: 85, column: 1, scope: !3770)
!3783 = !DILocation(line: 79, column: 25, scope: !3776)
!3784 = !DILocation(line: 79, column: 17, scope: !3776)
!3785 = !DILocation(line: 79, column: 31, scope: !3776)
!3786 = !DILocation(line: 0, scope: !3776)
!3787 = !DILocation(line: 80, column: 20, scope: !3776)
!3788 = !DILocation(line: 82, column: 26, scope: !3776)
!3789 = !DILocation(line: 82, column: 32, scope: !3776)
!3790 = !DILocation(line: 82, column: 21, scope: !3776)
!3791 = distinct !DISubprogram(name: "k_sleep", scope: !3406, file: !3406, line: 91, type: !3792, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3794)
!3792 = !DISubroutineType(types: !3793)
!3793 = !{!116, !3410}
!3794 = !{!3795}
!3795 = !DILocalVariable(name: "timeout", arg: 1, scope: !3791, file: !3406, line: 91, type: !3410)
!3796 = !DILocation(line: 0, scope: !3791)
!3797 = !DILocation(line: 99, column: 2, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3791, file: !3406, line: 99, column: 2)
!3799 = !{i64 2152225580}
!3800 = !DILocation(line: 100, column: 9, scope: !3791)
!3801 = !DILocation(line: 100, column: 2, scope: !3791)
!3802 = distinct !DISubprogram(name: "atomic_add", scope: !3677, file: !3677, line: 86, type: !3803, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3805)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{!3680, !3681, !3680}
!3805 = !{!3806, !3807}
!3806 = !DILocalVariable(name: "target", arg: 1, scope: !3802, file: !3677, line: 86, type: !3681)
!3807 = !DILocalVariable(name: "value", arg: 2, scope: !3802, file: !3677, line: 86, type: !3680)
!3808 = !DILocation(line: 0, scope: !3802)
!3809 = !DILocation(line: 88, column: 9, scope: !3802)
!3810 = !DILocation(line: 88, column: 2, scope: !3802)
!3811 = distinct !DISubprogram(name: "z_current_get", scope: !3406, file: !3406, line: 173, type: !3546, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3812 = !DILocation(line: 180, column: 2, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3811, file: !3406, line: 180, column: 2)
!3814 = !{i64 2152225920}
!3815 = !DILocation(line: 181, column: 9, scope: !3811)
!3816 = !DILocation(line: 181, column: 2, scope: !3811)
!3817 = distinct !DISubprogram(name: "message_dev_init", scope: !360, file: !360, line: 83, type: !266, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3818)
!3818 = !{!3819, !3820, !3821}
!3819 = !DILocalVariable(name: "cyc_per_tick", scope: !3817, file: !360, line: 90, type: !114)
!3820 = !DILocalVariable(name: "avg_ticks_per_event", scope: !3817, file: !360, line: 91, type: !114)
!3821 = !DILocalVariable(name: "avg_cyc_per_event", scope: !3817, file: !360, line: 92, type: !114)
!3822 = !DILocation(line: 0, scope: !3817)
!3823 = !DILocation(line: 94, column: 15, scope: !3817)
!3824 = !DILocation(line: 96, column: 2, scope: !3817)
!3825 = !DILocation(line: 97, column: 1, scope: !3817)
!3826 = distinct !DISubprogram(name: "dev_timer_expired", scope: !360, file: !360, line: 54, type: !381, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3827)
!3827 = !{!3828, !3829, !3830, !3838}
!3828 = !DILocalVariable(name: "t", arg: 1, scope: !3826, file: !360, line: 54, type: !383)
!3829 = !DILocalVariable(name: "timestamp", scope: !3826, file: !360, line: 57, type: !113)
!3830 = !DILocalVariable(name: "m", scope: !3826, file: !360, line: 58, type: !3831)
!3831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !304, line: 44, size: 160, elements: !3832)
!3832 = !{!3833, !3834, !3835, !3836, !3837}
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3831, file: !304, line: 46, baseType: !113, size: 32)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !3831, file: !304, line: 49, baseType: !113, size: 32, offset: 32)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !3831, file: !304, line: 52, baseType: !113, size: 32, offset: 64)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !3831, file: !304, line: 55, baseType: !113, size: 32, offset: 96)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !3831, file: !304, line: 58, baseType: !113, size: 32, offset: 128)
!3838 = !DILocalVariable(name: "ret", scope: !3826, file: !360, line: 65, type: !105)
!3839 = !DILocation(line: 0, scope: !3826)
!3840 = !DILocation(line: 56, column: 2, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3842, file: !360, line: 56, column: 2)
!3842 = distinct !DILexicalBlock(scope: !3826, file: !360, line: 56, column: 2)
!3843 = !DILocation(line: 56, column: 2, scope: !3842)
!3844 = !DILocation(line: 56, column: 2, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3841, file: !360, line: 56, column: 2)
!3846 = !DILocation(line: 57, column: 23, scope: !3826)
!3847 = !DILocation(line: 58, column: 2, scope: !3826)
!3848 = !DILocation(line: 58, column: 13, scope: !3826)
!3849 = !DILocation(line: 60, column: 17, scope: !3826)
!3850 = !DILocation(line: 60, column: 4, scope: !3826)
!3851 = !DILocation(line: 60, column: 8, scope: !3826)
!3852 = !DILocation(line: 61, column: 4, scope: !3826)
!3853 = !DILocation(line: 61, column: 14, scope: !3826)
!3854 = !DILocation(line: 62, column: 13, scope: !3826)
!3855 = !DILocation(line: 62, column: 22, scope: !3826)
!3856 = !DILocation(line: 62, column: 4, scope: !3826)
!3857 = !DILocation(line: 62, column: 11, scope: !3826)
!3858 = !DILocation(line: 63, column: 15, scope: !3826)
!3859 = !DILocation(line: 63, column: 26, scope: !3826)
!3860 = !DILocation(line: 63, column: 24, scope: !3826)
!3861 = !DILocation(line: 63, column: 4, scope: !3826)
!3862 = !DILocation(line: 63, column: 13, scope: !3826)
!3863 = !DILocation(line: 65, column: 12, scope: !3826)
!3864 = !DILocation(line: 67, column: 10, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3826, file: !360, line: 67, column: 6)
!3866 = !DILocation(line: 67, column: 6, scope: !3826)
!3867 = !DILocation(line: 68, column: 3, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3865, file: !360, line: 67, column: 16)
!3869 = !DILocation(line: 69, column: 2, scope: !3868)
!3870 = !DILocation(line: 71, column: 8, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3826, file: !360, line: 71, column: 6)
!3872 = !DILocation(line: 71, column: 12, scope: !3871)
!3873 = !DILocation(line: 71, column: 6, scope: !3826)
!3874 = !DILocation(line: 72, column: 3, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3871, file: !360, line: 71, column: 26)
!3876 = !DILocation(line: 73, column: 2, scope: !3875)
!3877 = !DILocation(line: 74, column: 1, scope: !3826)
!3878 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!3879 = !DILocation(line: 1677, column: 9, scope: !3878)
!3880 = !DILocation(line: 1677, column: 2, scope: !3878)
!3881 = !DILocation(line: 40, column: 7, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !394, file: !360, line: 40, column: 6)
!3883 = !DILocation(line: 40, column: 6, scope: !394)
!3884 = !DILocation(line: 41, column: 22, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3882, file: !360, line: 40, column: 14)
!3886 = !DILocation(line: 41, column: 12, scope: !3885)
!3887 = !DILocation(line: 41, column: 40, scope: !3885)
!3888 = !DILocation(line: 42, column: 2, scope: !3885)
!3889 = !DILocation(line: 45, column: 10, scope: !394)
!3890 = !DILocation(line: 45, column: 16, scope: !394)
!3891 = !DILocation(line: 45, column: 41, scope: !394)
!3892 = !DILocation(line: 45, column: 8, scope: !394)
!3893 = !DILocation(line: 46, column: 26, scope: !394)
!3894 = !DILocation(line: 46, column: 9, scope: !394)
!3895 = !DILocation(line: 46, column: 2, scope: !394)
!3896 = distinct !DISubprogram(name: "k_msgq_put", scope: !3406, file: !3406, line: 1129, type: !3897, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3904)
!3897 = !DISubroutineType(types: !3898)
!3898 = !{!105, !3899, !13, !3900}
!3899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!3900 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3901)
!3901 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3902)
!3902 = !{!3903}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3901, file: !108, line: 66, baseType: !107, size: 64)
!3904 = !{!3905, !3906, !3907}
!3905 = !DILocalVariable(name: "msgq", arg: 1, scope: !3896, file: !3406, line: 1129, type: !3899)
!3906 = !DILocalVariable(name: "data", arg: 2, scope: !3896, file: !3406, line: 1129, type: !13)
!3907 = !DILocalVariable(name: "timeout", arg: 3, scope: !3896, file: !3406, line: 1129, type: !3900)
!3908 = !DILocation(line: 0, scope: !3896)
!3909 = !DILocation(line: 1139, column: 2, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3896, file: !3406, line: 1139, column: 2)
!3911 = !{i64 2152228027}
!3912 = !DILocation(line: 1140, column: 9, scope: !3896)
!3913 = !DILocation(line: 1140, column: 2, scope: !3896)
!3914 = distinct !DISubprogram(name: "timeout_reset", scope: !360, file: !360, line: 76, type: !266, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3915)
!3915 = !{!3916}
!3916 = !DILocalVariable(name: "ticks", scope: !3914, file: !360, line: 78, type: !113)
!3917 = !DILocation(line: 78, column: 19, scope: !3914)
!3918 = !DILocation(line: 78, column: 28, scope: !3914)
!3919 = !DILocation(line: 0, scope: !3914)
!3920 = !DILocation(line: 80, column: 45, scope: !3914)
!3921 = !DILocation(line: 80, column: 2, scope: !3914)
!3922 = !DILocation(line: 81, column: 1, scope: !3914)
!3923 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3434, file: !3434, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!3924 = !DILocation(line: 26, column: 9, scope: !3923)
!3925 = !DILocation(line: 26, column: 2, scope: !3923)
!3926 = distinct !DISubprogram(name: "message_dev_fetch", scope: !360, file: !360, line: 99, type: !3927, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3930)
!3927 = !DISubroutineType(types: !3928)
!3928 = !{null, !3929}
!3929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 32)
!3930 = !{!3931, !3932}
!3931 = !DILocalVariable(name: "m", arg: 1, scope: !3926, file: !360, line: 99, type: !3929)
!3932 = !DILocalVariable(name: "ret", scope: !3926, file: !360, line: 101, type: !105)
!3933 = !DILocation(line: 0, scope: !3926)
!3934 = !DILocation(line: 101, column: 33, scope: !3926)
!3935 = !DILocation(line: 101, column: 12, scope: !3926)
!3936 = !DILocation(line: 103, column: 2, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3938, file: !360, line: 103, column: 2)
!3938 = distinct !DILexicalBlock(scope: !3926, file: !360, line: 103, column: 2)
!3939 = !DILocation(line: 103, column: 2, scope: !3938)
!3940 = !DILocation(line: 103, column: 2, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3937, file: !360, line: 103, column: 2)
!3942 = !DILocation(line: 104, column: 1, scope: !3926)
!3943 = distinct !DISubprogram(name: "k_msgq_get", scope: !3406, file: !3406, line: 1147, type: !3944, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3946)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{!105, !3899, !104, !3900}
!3946 = !{!3947, !3948, !3949}
!3947 = !DILocalVariable(name: "msgq", arg: 1, scope: !3943, file: !3406, line: 1147, type: !3899)
!3948 = !DILocalVariable(name: "data", arg: 2, scope: !3943, file: !3406, line: 1147, type: !104)
!3949 = !DILocalVariable(name: "timeout", arg: 3, scope: !3943, file: !3406, line: 1147, type: !3900)
!3950 = !DILocation(line: 0, scope: !3943)
!3951 = !DILocation(line: 1157, column: 2, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3943, file: !3406, line: 1157, column: 2)
!3953 = !{i64 2152228095}
!3954 = !DILocation(line: 1158, column: 9, scope: !3943)
!3955 = !DILocation(line: 1158, column: 2, scope: !3943)
!3956 = distinct !DISubprogram(name: "cbvprintf_package", scope: !434, file: !434, line: 233, type: !3957, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !3966)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{!105, !104, !111, !113, !269, !3959}
!3959 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3960, line: 99, baseType: !3961)
!3960 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3961 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3960, line: 40, baseType: !3962)
!3962 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !434, baseType: !3963)
!3963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3964)
!3964 = !{!3965}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3963, file: !434, line: 18, baseType: !104, size: 32)
!3966 = !{!3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !4002, !4011, !4014, !4015, !4018, !4021, !4024, !4027, !4033}
!3967 = !DILocalVariable(name: "packaged", arg: 1, scope: !3956, file: !434, line: 233, type: !104)
!3968 = !DILocalVariable(name: "len", arg: 2, scope: !3956, file: !434, line: 233, type: !111)
!3969 = !DILocalVariable(name: "flags", arg: 3, scope: !3956, file: !434, line: 233, type: !113)
!3970 = !DILocalVariable(name: "fmt", arg: 4, scope: !3956, file: !434, line: 234, type: !269)
!3971 = !DILocalVariable(name: "ap", arg: 5, scope: !3956, file: !434, line: 234, type: !3959)
!3972 = !DILocalVariable(name: "buf0", scope: !3956, file: !434, line: 247, type: !432)
!3973 = !DILocalVariable(name: "buf", scope: !3956, file: !434, line: 248, type: !432)
!3974 = !DILocalVariable(name: "size", scope: !3956, file: !434, line: 249, type: !32)
!3975 = !DILocalVariable(name: "align", scope: !3956, file: !434, line: 250, type: !32)
!3976 = !DILocalVariable(name: "str_ptr_pos", scope: !3956, file: !434, line: 251, type: !3977)
!3977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 128, elements: !311)
!3978 = !DILocalVariable(name: "str_ptr_arg", scope: !3956, file: !434, line: 252, type: !3977)
!3979 = !DILocalVariable(name: "s_idx", scope: !3956, file: !434, line: 253, type: !32)
!3980 = !DILocalVariable(name: "s_rw_cnt", scope: !3956, file: !434, line: 254, type: !32)
!3981 = !DILocalVariable(name: "s_ro_cnt", scope: !3956, file: !434, line: 255, type: !32)
!3982 = !DILocalVariable(name: "arg_idx", scope: !3956, file: !434, line: 256, type: !105)
!3983 = !DILocalVariable(name: "i", scope: !3956, file: !434, line: 257, type: !32)
!3984 = !DILocalVariable(name: "s", scope: !3956, file: !434, line: 258, type: !269)
!3985 = !DILocalVariable(name: "parsing", scope: !3956, file: !434, line: 259, type: !505)
!3986 = !DILocalVariable(name: "rws_pos_en", scope: !3956, file: !434, line: 263, type: !505)
!3987 = !DILocalVariable(name: "fros_cnt", scope: !3956, file: !434, line: 268, type: !105)
!3988 = !DILocalVariable(name: "is_str_arg", scope: !3956, file: !434, line: 269, type: !505)
!3989 = !DILocalVariable(name: "pkg_hdr", scope: !3956, file: !434, line: 270, type: !3990)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 32)
!3991 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3992, line: 78, size: 32, elements: !3993)
!3992 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3993 = !{!3994, !4001}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3991, file: !3992, line: 80, baseType: !3995, size: 32)
!3995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3992, line: 45, size: 32, elements: !3996)
!3996 = !{!3997, !3998, !3999, !4000}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3995, file: !3992, line: 47, baseType: !169, size: 8)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3995, file: !3992, line: 50, baseType: !169, size: 8, offset: 8)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3995, file: !3992, line: 53, baseType: !169, size: 8, offset: 16)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3995, file: !3992, line: 56, baseType: !169, size: 8, offset: 24)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3991, file: !3992, line: 82, baseType: !104, size: 32)
!4002 = !DILocalVariable(name: "v", scope: !4003, file: !434, line: 567, type: !4007)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !434, line: 562, column: 14)
!4004 = distinct !DILexicalBlock(scope: !4005, file: !434, line: 481, column: 18)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !434, line: 466, column: 3)
!4006 = distinct !DILexicalBlock(scope: !3956, file: !434, line: 343, column: 15)
!4007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3956, file: !434, line: 567, size: 64, elements: !4008)
!4008 = !{!4009, !4010}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4007, file: !434, line: 567, baseType: !426, size: 64)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4007, file: !434, line: 567, baseType: !424, size: 64)
!4011 = !DILocalVariable(name: "is_ro", scope: !4012, file: !434, line: 620, type: !505)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !434, line: 613, column: 19)
!4013 = distinct !DILexicalBlock(scope: !4006, file: !434, line: 613, column: 7)
!4014 = !DILocalVariable(name: "do_ro", scope: !4012, file: !434, line: 621, type: !505)
!4015 = !DILocalVariable(name: "s_ptr_idx", scope: !4016, file: !434, line: 626, type: !113)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !434, line: 625, column: 11)
!4017 = distinct !DILexicalBlock(scope: !4012, file: !434, line: 623, column: 8)
!4018 = !DILocalVariable(name: "v", scope: !4019, file: !434, line: 684, type: !105)
!4019 = distinct !DILexicalBlock(scope: !4020, file: !434, line: 683, column: 35)
!4020 = distinct !DILexicalBlock(scope: !4013, file: !434, line: 683, column: 14)
!4021 = !DILocalVariable(name: "v", scope: !4022, file: !434, line: 691, type: !106)
!4022 = distinct !DILexicalBlock(scope: !4023, file: !434, line: 690, column: 36)
!4023 = distinct !DILexicalBlock(scope: !4020, file: !434, line: 690, column: 14)
!4024 = !DILocalVariable(name: "v", scope: !4025, file: !434, line: 698, type: !110)
!4025 = distinct !DILexicalBlock(scope: !4026, file: !434, line: 697, column: 41)
!4026 = distinct !DILexicalBlock(scope: !4023, file: !434, line: 697, column: 14)
!4027 = !DILocalVariable(name: "pos", scope: !4028, file: !434, line: 762, type: !169)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !434, line: 757, column: 31)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !434, line: 757, column: 3)
!4030 = distinct !DILexicalBlock(scope: !4031, file: !434, line: 757, column: 3)
!4031 = distinct !DILexicalBlock(scope: !4032, file: !434, line: 756, column: 16)
!4032 = distinct !DILexicalBlock(scope: !3956, file: !434, line: 756, column: 6)
!4033 = !DILabel(scope: !4012, name: "process_string", file: !434, line: 615)
!4034 = !DILocation(line: 0, scope: !3956)
!4035 = !DILocation(line: 251, column: 2, scope: !3956)
!4036 = !DILocation(line: 251, column: 10, scope: !3956)
!4037 = !DILocation(line: 252, column: 2, scope: !3956)
!4038 = !DILocation(line: 252, column: 10, scope: !3956)
!4039 = !DILocation(line: 263, column: 29, scope: !3956)
!4040 = !DILocation(line: 263, column: 21, scope: !3956)
!4041 = !DILocation(line: 268, column: 21, scope: !3956)
!4042 = !DILocation(line: 268, column: 19, scope: !3956)
!4043 = !DILocation(line: 273, column: 6, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !3956, file: !434, line: 273, column: 6)
!4045 = !DILocation(line: 273, column: 26, scope: !4044)
!4046 = !DILocation(line: 273, column: 6, scope: !3956)
!4047 = !DILocation(line: 297, column: 6, scope: !3956)
!4048 = !DILocation(line: 305, column: 11, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !3956, file: !434, line: 305, column: 6)
!4050 = !DILocation(line: 305, column: 6, scope: !3956)
!4051 = !DILocation(line: 327, column: 19, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !3956, file: !434, line: 327, column: 6)
!4053 = !DILocation(line: 327, column: 22, scope: !4052)
!4054 = !DILocation(line: 327, column: 33, scope: !4052)
!4055 = !DILocation(line: 327, column: 50, scope: !4052)
!4056 = !DILocation(line: 327, column: 6, scope: !3956)
!4057 = !DILocation(line: 338, column: 9, scope: !3956)
!4058 = !DILocation(line: 341, column: 2, scope: !3956)
!4059 = !DILocation(line: 472, column: 8, scope: !4005)
!4060 = !DILocation(line: 473, column: 14, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !434, line: 473, column: 9)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !434, line: 472, column: 18)
!4063 = distinct !DILexicalBlock(scope: !4005, file: !434, line: 472, column: 8)
!4064 = !DILocation(line: 473, column: 9, scope: !4062)
!4065 = !DILocation(line: 479, column: 5, scope: !4062)
!4066 = !DILocation(line: 468, column: 9, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4005, file: !434, line: 468, column: 8)
!4068 = !DILocation(line: 468, column: 8, scope: !4067)
!4069 = !DILocation(line: 468, column: 15, scope: !4067)
!4070 = !DILocation(line: 468, column: 8, scope: !4005)
!4071 = distinct !{!4071, !4072, !4073}
!4072 = !DILocation(line: 343, column: 2, scope: !3956)
!4073 = !DILocation(line: 712, column: 2, scope: !3956)
!4074 = !DILocation(line: 481, column: 4, scope: !4005)
!4075 = !DILocation(line: 484, column: 12, scope: !4004)
!4076 = !DILocation(line: 485, column: 5, scope: !4004)
!4077 = !DILocation(line: 505, column: 5, scope: !4004)
!4078 = !DILocation(line: 518, column: 5, scope: !4004)
!4079 = !DILocation(line: 523, column: 5, scope: !4004)
!4080 = !DILocation(line: 532, column: 9, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4004, file: !434, line: 532, column: 9)
!4082 = !DILocation(line: 532, column: 17, scope: !4081)
!4083 = !DILocation(line: 532, column: 9, scope: !4004)
!4084 = !DILocation(line: 533, column: 10, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4086, file: !434, line: 533, column: 10)
!4086 = distinct !DILexicalBlock(scope: !4081, file: !434, line: 532, column: 25)
!4087 = !DILocation(line: 533, column: 18, scope: !4085)
!4088 = !DILocation(line: 0, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4003, file: !434, line: 569, column: 9)
!4090 = !DILocation(line: 0, scope: !4003)
!4091 = !DILocation(line: 579, column: 20, scope: !4003)
!4092 = !DILocation(line: 579, column: 11, scope: !4003)
!4093 = !DILocation(line: 580, column: 9, scope: !4003)
!4094 = !DILocation(line: 582, column: 21, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4096, file: !434, line: 582, column: 10)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !434, line: 580, column: 23)
!4097 = distinct !DILexicalBlock(scope: !4003, file: !434, line: 580, column: 9)
!4098 = !DILocation(line: 582, column: 28, scope: !4095)
!4099 = !DILocation(line: 582, column: 10, scope: !4096)
!4100 = !DILocation(line: 0, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4102, file: !434, line: 587, column: 17)
!4102 = distinct !DILexicalBlock(scope: !4096, file: !434, line: 585, column: 10)
!4103 = !DILocation(line: 593, column: 9, scope: !4003)
!4104 = !DILocation(line: 600, column: 5, scope: !4004)
!4105 = !DILocation(line: 605, column: 18, scope: !4006)
!4106 = !DILocation(line: 605, column: 9, scope: !4006)
!4107 = !DILocation(line: 608, column: 20, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4006, file: !434, line: 608, column: 7)
!4109 = !DILocation(line: 608, column: 23, scope: !4108)
!4110 = !DILocation(line: 608, column: 34, scope: !4108)
!4111 = !DILocation(line: 608, column: 41, scope: !4108)
!4112 = !DILocation(line: 608, column: 7, scope: !4006)
!4113 = !DILocation(line: 613, column: 7, scope: !4006)
!4114 = !DILocation(line: 614, column: 8, scope: !4012)
!4115 = !DILocation(line: 614, column: 4, scope: !4012)
!4116 = !DILocation(line: 256, column: 6, scope: !3956)
!4117 = !DILocation(line: 254, column: 15, scope: !3956)
!4118 = !DILocation(line: 320, column: 7, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4049, file: !434, line: 305, column: 20)
!4120 = !DILocation(line: 615, column: 1, scope: !4012)
!4121 = !DILocation(line: 616, column: 8, scope: !4012)
!4122 = !DILocation(line: 617, column: 5, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4124, file: !434, line: 616, column: 22)
!4124 = distinct !DILexicalBlock(scope: !4012, file: !434, line: 616, column: 8)
!4125 = !DILocation(line: 617, column: 25, scope: !4123)
!4126 = !DILocation(line: 618, column: 4, scope: !4123)
!4127 = !DILocation(line: 620, column: 26, scope: !4012)
!4128 = !DILocation(line: 620, column: 29, scope: !4012)
!4129 = !DILocation(line: 620, column: 17, scope: !4012)
!4130 = !DILocation(line: 620, column: 43, scope: !4012)
!4131 = !DILocation(line: 0, scope: !4012)
!4132 = !DILocation(line: 623, column: 14, scope: !4017)
!4133 = !DILocation(line: 626, column: 26, scope: !4016)
!4134 = !DILocation(line: 626, column: 37, scope: !4016)
!4135 = !DILocation(line: 0, scope: !4016)
!4136 = !DILocation(line: 634, column: 15, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4016, file: !434, line: 634, column: 9)
!4138 = !DILocation(line: 635, column: 6, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !434, line: 635, column: 6)
!4140 = distinct !DILexicalBlock(scope: !4141, file: !434, line: 635, column: 6)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !434, line: 635, column: 6)
!4142 = distinct !DILexicalBlock(scope: !4137, file: !434, line: 634, column: 44)
!4143 = !DILocation(line: 639, column: 15, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4016, file: !434, line: 639, column: 9)
!4145 = !DILocation(line: 639, column: 9, scope: !4016)
!4146 = !DILocation(line: 640, column: 6, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !434, line: 640, column: 6)
!4148 = distinct !DILexicalBlock(scope: !4149, file: !434, line: 640, column: 6)
!4149 = distinct !DILexicalBlock(scope: !4150, file: !434, line: 640, column: 6)
!4150 = distinct !DILexicalBlock(scope: !4144, file: !434, line: 639, column: 43)
!4151 = !DILocation(line: 644, column: 9, scope: !4016)
!4152 = !DILocation(line: 649, column: 27, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !434, line: 644, column: 23)
!4154 = distinct !DILexicalBlock(scope: !4016, file: !434, line: 644, column: 9)
!4155 = !DILocation(line: 649, column: 6, scope: !4153)
!4156 = !DILocation(line: 649, column: 25, scope: !4153)
!4157 = !DILocation(line: 650, column: 27, scope: !4153)
!4158 = !DILocation(line: 650, column: 6, scope: !4153)
!4159 = !DILocation(line: 650, column: 25, scope: !4153)
!4160 = !DILocation(line: 651, column: 10, scope: !4153)
!4161 = !DILocation(line: 653, column: 26, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4163, file: !434, line: 651, column: 17)
!4163 = distinct !DILexicalBlock(scope: !4153, file: !434, line: 651, column: 10)
!4164 = !DILocation(line: 654, column: 15, scope: !4162)
!4165 = !DILocation(line: 655, column: 6, scope: !4162)
!4166 = !DILocation(line: 656, column: 15, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4163, file: !434, line: 655, column: 13)
!4168 = !DILocation(line: 658, column: 16, scope: !4154)
!4169 = !DILocation(line: 663, column: 10, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4171, file: !434, line: 658, column: 23)
!4171 = distinct !DILexicalBlock(scope: !4154, file: !434, line: 658, column: 16)
!4172 = !DILocation(line: 664, column: 5, scope: !4170)
!4173 = !DILocation(line: 664, column: 16, scope: !4171)
!4174 = !DILocation(line: 669, column: 10, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !434, line: 664, column: 28)
!4176 = distinct !DILexicalBlock(scope: !4171, file: !434, line: 664, column: 16)
!4177 = !DILocation(line: 670, column: 5, scope: !4175)
!4178 = !DILocation(line: 675, column: 13, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4176, file: !434, line: 670, column: 12)
!4180 = !DILocation(line: 675, column: 27, scope: !4179)
!4181 = !DILocation(line: 675, column: 10, scope: !4179)
!4182 = !DILocation(line: 678, column: 10, scope: !4016)
!4183 = !DILocation(line: 680, column: 8, scope: !4012)
!4184 = !DILocation(line: 683, column: 14, scope: !4013)
!4185 = !DILocation(line: 684, column: 12, scope: !4019)
!4186 = !DILocation(line: 0, scope: !4019)
!4187 = !DILocation(line: 686, column: 8, scope: !4019)
!4188 = !DILocation(line: 687, column: 5, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4190, file: !434, line: 686, column: 22)
!4190 = distinct !DILexicalBlock(scope: !4019, file: !434, line: 686, column: 8)
!4191 = !DILocation(line: 687, column: 17, scope: !4189)
!4192 = !DILocation(line: 688, column: 4, scope: !4189)
!4193 = !DILocation(line: 698, column: 18, scope: !4025)
!4194 = !DILocation(line: 0, scope: !4025)
!4195 = !DILocation(line: 700, column: 8, scope: !4025)
!4196 = !DILocation(line: 704, column: 6, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4198, file: !434, line: 703, column: 12)
!4198 = distinct !DILexicalBlock(scope: !4199, file: !434, line: 701, column: 9)
!4199 = distinct !DILexicalBlock(scope: !4200, file: !434, line: 700, column: 22)
!4200 = distinct !DILexicalBlock(scope: !4025, file: !434, line: 700, column: 8)
!4201 = !DILocation(line: 704, column: 24, scope: !4197)
!4202 = !DILocation(line: 706, column: 4, scope: !4199)
!4203 = !DILocation(line: 709, column: 4, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4205, file: !434, line: 709, column: 4)
!4205 = distinct !DILexicalBlock(scope: !4206, file: !434, line: 709, column: 4)
!4206 = distinct !DILexicalBlock(scope: !4207, file: !434, line: 709, column: 4)
!4207 = distinct !DILexicalBlock(scope: !4026, file: !434, line: 708, column: 10)
!4208 = !DILocation(line: 0, scope: !4020)
!4209 = !DILocation(line: 0, scope: !4006)
!4210 = !DILocation(line: 720, column: 6, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !3956, file: !434, line: 720, column: 6)
!4212 = !DILocation(line: 720, column: 17, scope: !4211)
!4213 = !DILocation(line: 720, column: 31, scope: !4211)
!4214 = !DILocation(line: 720, column: 6, scope: !3956)
!4215 = !DILocation(line: 721, column: 3, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4217, file: !434, line: 721, column: 3)
!4217 = distinct !DILexicalBlock(scope: !4218, file: !434, line: 721, column: 3)
!4218 = distinct !DILexicalBlock(scope: !4219, file: !434, line: 721, column: 3)
!4219 = distinct !DILexicalBlock(scope: !4211, file: !434, line: 720, column: 38)
!4220 = !DILocation(line: 729, column: 6, scope: !3956)
!4221 = !DILocation(line: 730, column: 21, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !434, line: 729, column: 20)
!4223 = distinct !DILexicalBlock(scope: !3956, file: !434, line: 729, column: 6)
!4224 = !DILocation(line: 730, column: 27, scope: !4222)
!4225 = !DILocation(line: 730, column: 3, scope: !4222)
!4226 = !DILocation(line: 737, column: 22, scope: !3956)
!4227 = !DILocation(line: 737, column: 20, scope: !3956)
!4228 = !DILocation(line: 0, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !3956, file: !434, line: 739, column: 6)
!4230 = !DILocation(line: 745, column: 17, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4229, file: !434, line: 743, column: 9)
!4232 = !DILocation(line: 745, column: 25, scope: !4231)
!4233 = !DILocation(line: 746, column: 17, scope: !4231)
!4234 = !DILocation(line: 746, column: 28, scope: !4231)
!4235 = !DILocation(line: 749, column: 29, scope: !3956)
!4236 = !DILocation(line: 749, column: 16, scope: !3956)
!4237 = !DILocation(line: 749, column: 27, scope: !3956)
!4238 = !DILocation(line: 756, column: 6, scope: !4032)
!4239 = !DILocation(line: 756, column: 6, scope: !3956)
!4240 = !DILocation(line: 757, column: 3, scope: !4030)
!4241 = !DILocation(line: 758, column: 10, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4028, file: !434, line: 758, column: 8)
!4243 = !DILocation(line: 758, column: 25, scope: !4242)
!4244 = !DILocation(line: 758, column: 8, scope: !4028)
!4245 = !DILocation(line: 0, scope: !4028)
!4246 = !DILocation(line: 765, column: 8, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4028, file: !434, line: 765, column: 8)
!4248 = !DILocation(line: 765, column: 19, scope: !4247)
!4249 = !DILocation(line: 765, column: 23, scope: !4247)
!4250 = !DILocation(line: 765, column: 8, scope: !4028)
!4251 = !DILocation(line: 762, column: 33, scope: !4028)
!4252 = !DILocation(line: 769, column: 8, scope: !4028)
!4253 = !DILocation(line: 769, column: 11, scope: !4028)
!4254 = !DILocation(line: 757, column: 27, scope: !4029)
!4255 = !DILocation(line: 757, column: 17, scope: !4029)
!4256 = distinct !{!4256, !4240, !4257}
!4257 = !DILocation(line: 770, column: 3, scope: !4030)
!4258 = !DILocation(line: 774, column: 16, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !434, line: 774, column: 2)
!4260 = distinct !DILexicalBlock(scope: !3956, file: !434, line: 774, column: 2)
!4261 = !DILocation(line: 774, column: 2, scope: !4260)
!4262 = !DILocation(line: 776, column: 16, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4264, file: !434, line: 776, column: 7)
!4264 = distinct !DILexicalBlock(scope: !4259, file: !434, line: 774, column: 30)
!4265 = !DILocation(line: 776, column: 19, scope: !4263)
!4266 = !DILocation(line: 776, column: 34, scope: !4263)
!4267 = !DILocation(line: 776, column: 7, scope: !4264)
!4268 = !DILocation(line: 780, column: 7, scope: !4264)
!4269 = !DILocation(line: 782, column: 13, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4271, file: !434, line: 780, column: 19)
!4271 = distinct !DILexicalBlock(scope: !4264, file: !434, line: 780, column: 7)
!4272 = !DILocation(line: 782, column: 8, scope: !4270)
!4273 = !DILocation(line: 782, column: 11, scope: !4270)
!4274 = !DILocation(line: 783, column: 3, scope: !4270)
!4275 = !DILocation(line: 785, column: 26, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4271, file: !434, line: 783, column: 10)
!4277 = !DILocation(line: 785, column: 41, scope: !4276)
!4278 = !DILocation(line: 785, column: 24, scope: !4276)
!4279 = !DILocation(line: 785, column: 8, scope: !4276)
!4280 = !DILocation(line: 787, column: 52, scope: !4276)
!4281 = !DILocation(line: 789, column: 11, scope: !4276)
!4282 = !DILocation(line: 789, column: 21, scope: !4276)
!4283 = !DILocation(line: 0, scope: !4271)
!4284 = !DILocation(line: 793, column: 7, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4264, file: !434, line: 793, column: 7)
!4286 = !DILocation(line: 793, column: 18, scope: !4285)
!4287 = !DILocation(line: 793, column: 22, scope: !4285)
!4288 = !DILocation(line: 793, column: 29, scope: !4285)
!4289 = !DILocation(line: 793, column: 7, scope: !4264)
!4290 = !DILocation(line: 797, column: 12, scope: !4264)
!4291 = !DILocation(line: 797, column: 7, scope: !4264)
!4292 = !DILocation(line: 797, column: 10, scope: !4264)
!4293 = !DILocation(line: 799, column: 3, scope: !4264)
!4294 = !DILocation(line: 800, column: 7, scope: !4264)
!4295 = !DILocation(line: 801, column: 2, scope: !4264)
!4296 = !DILocation(line: 338, column: 4, scope: !3956)
!4297 = !DILocation(line: 774, column: 26, scope: !4259)
!4298 = distinct !{!4298, !4261, !4299}
!4299 = !DILocation(line: 801, column: 2, scope: !4260)
!4300 = !DILocation(line: 808, column: 9, scope: !3956)
!4301 = !DILocation(line: 808, column: 2, scope: !3956)
!4302 = !DILocation(line: 813, column: 1, scope: !3956)
!4303 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !434, file: !434, line: 33, type: !4304, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4306)
!4304 = !DISubroutineType(types: !4305)
!4305 = !{!505, !269}
!4306 = !{!4307}
!4307 = !DILocalVariable(name: "addr", arg: 1, scope: !4303, file: !434, line: 33, type: !269)
!4308 = !DILocation(line: 0, scope: !4303)
!4309 = !DILocation(line: 41, column: 9, scope: !4303)
!4310 = !DILocation(line: 41, column: 2, scope: !4303)
!4311 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4312, file: !4312, line: 24, type: !4313, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4315)
!4312 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4313 = !DISubroutineType(types: !4314)
!4314 = !{!505, !13}
!4315 = !{!4316}
!4316 = !DILocalVariable(name: "addr", arg: 1, scope: !4311, file: !4312, line: 24, type: !13)
!4317 = !DILocation(line: 0, scope: !4311)
!4318 = !DILocation(line: 49, column: 30, scope: !4311)
!4319 = !DILocation(line: 49, column: 57, scope: !4311)
!4320 = !DILocation(line: 49, column: 2, scope: !4311)
!4321 = distinct !DISubprogram(name: "cbprintf_package", scope: !434, file: !434, line: 815, type: !4322, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4324)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{!105, !104, !111, !113, !269, null}
!4324 = !{!4325, !4326, !4327, !4328, !4329, !4330}
!4325 = !DILocalVariable(name: "packaged", arg: 1, scope: !4321, file: !434, line: 815, type: !104)
!4326 = !DILocalVariable(name: "len", arg: 2, scope: !4321, file: !434, line: 815, type: !111)
!4327 = !DILocalVariable(name: "flags", arg: 3, scope: !4321, file: !434, line: 815, type: !113)
!4328 = !DILocalVariable(name: "format", arg: 4, scope: !4321, file: !434, line: 816, type: !269)
!4329 = !DILocalVariable(name: "ap", scope: !4321, file: !434, line: 818, type: !3959)
!4330 = !DILocalVariable(name: "ret", scope: !4321, file: !434, line: 819, type: !105)
!4331 = !DILocation(line: 0, scope: !4321)
!4332 = !DILocation(line: 818, column: 2, scope: !4321)
!4333 = !DILocation(line: 818, column: 10, scope: !4321)
!4334 = !DILocation(line: 821, column: 2, scope: !4321)
!4335 = !DILocation(line: 822, column: 8, scope: !4321)
!4336 = !DILocation(line: 823, column: 2, scope: !4321)
!4337 = !DILocation(line: 825, column: 1, scope: !4321)
!4338 = !DILocation(line: 824, column: 2, scope: !4321)
!4339 = distinct !DISubprogram(name: "cbpprintf_external", scope: !434, file: !434, line: 827, type: !4340, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4350)
!4340 = !DISubroutineType(types: !4341)
!4341 = !{!105, !4342, !4346, !104, !104}
!4342 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3992, line: 297, baseType: !4343)
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4344, size: 32)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{!105, null}
!4346 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3992, line: 328, baseType: !4347)
!4347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4348, size: 32)
!4348 = !DISubroutineType(types: !4349)
!4349 = !{!105, !4342, !104, !269, !3959}
!4350 = !{!4351, !4352, !4353, !4354, !4355, !4356, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369}
!4351 = !DILocalVariable(name: "out", arg: 1, scope: !4339, file: !434, line: 827, type: !4342)
!4352 = !DILocalVariable(name: "formatter", arg: 2, scope: !4339, file: !434, line: 828, type: !4346)
!4353 = !DILocalVariable(name: "ctx", arg: 3, scope: !4339, file: !434, line: 829, type: !104)
!4354 = !DILocalVariable(name: "packaged", arg: 4, scope: !4339, file: !434, line: 829, type: !104)
!4355 = !DILocalVariable(name: "buf", scope: !4339, file: !434, line: 831, type: !432)
!4356 = !DILocalVariable(name: "hdr", scope: !4339, file: !434, line: 832, type: !4357)
!4357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 32)
!4358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3992, line: 96, size: 64, elements: !4359)
!4359 = !{!4360, !4361}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4358, file: !3992, line: 98, baseType: !3991, size: 32)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4358, file: !3992, line: 101, baseType: !102, size: 32, offset: 32)
!4362 = !DILocalVariable(name: "s", scope: !4339, file: !434, line: 833, type: !102)
!4363 = !DILocalVariable(name: "ps", scope: !4339, file: !434, line: 833, type: !431)
!4364 = !DILocalVariable(name: "i", scope: !4339, file: !434, line: 834, type: !32)
!4365 = !DILocalVariable(name: "args_size", scope: !4339, file: !434, line: 834, type: !32)
!4366 = !DILocalVariable(name: "s_nbr", scope: !4339, file: !434, line: 834, type: !32)
!4367 = !DILocalVariable(name: "ros_nbr", scope: !4339, file: !434, line: 834, type: !32)
!4368 = !DILocalVariable(name: "rws_nbr", scope: !4339, file: !434, line: 834, type: !32)
!4369 = !DILocalVariable(name: "s_idx", scope: !4339, file: !434, line: 834, type: !32)
!4370 = !DILocation(line: 0, scope: !4339)
!4371 = !DILocation(line: 836, column: 10, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4339, file: !434, line: 836, column: 6)
!4373 = !DILocation(line: 836, column: 6, scope: !4339)
!4374 = !DILocation(line: 842, column: 28, scope: !4339)
!4375 = !DILocation(line: 842, column: 14, scope: !4339)
!4376 = !DILocation(line: 852, column: 16, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4378, file: !434, line: 852, column: 2)
!4378 = distinct !DILexicalBlock(scope: !4339, file: !434, line: 852, column: 2)
!4379 = !DILocation(line: 852, column: 2, scope: !4378)
!4380 = !DILocation(line: 841, column: 28, scope: !4339)
!4381 = !DILocation(line: 841, column: 14, scope: !4339)
!4382 = !DILocation(line: 841, column: 32, scope: !4339)
!4383 = !DILocation(line: 847, column: 19, scope: !4339)
!4384 = !DILocation(line: 843, column: 28, scope: !4339)
!4385 = !DILocation(line: 843, column: 14, scope: !4339)
!4386 = !DILocation(line: 847, column: 31, scope: !4339)
!4387 = !DILocation(line: 844, column: 28, scope: !4339)
!4388 = !DILocation(line: 844, column: 14, scope: !4339)
!4389 = !DILocation(line: 847, column: 45, scope: !4339)
!4390 = !DILocation(line: 847, column: 41, scope: !4339)
!4391 = !DILocation(line: 854, column: 24, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4377, file: !434, line: 852, column: 30)
!4393 = !DILocation(line: 854, column: 11, scope: !4392)
!4394 = !DILocation(line: 855, column: 30, scope: !4392)
!4395 = !DILocation(line: 855, column: 22, scope: !4392)
!4396 = !DILocation(line: 855, column: 8, scope: !4392)
!4397 = !DILocation(line: 857, column: 7, scope: !4392)
!4398 = !DILocation(line: 859, column: 8, scope: !4392)
!4399 = !DILocation(line: 859, column: 18, scope: !4392)
!4400 = !DILocation(line: 859, column: 5, scope: !4392)
!4401 = !DILocation(line: 852, column: 26, scope: !4377)
!4402 = distinct !{!4402, !4379, !4403}
!4403 = !DILocation(line: 860, column: 2, scope: !4378)
!4404 = !DILocation(line: 863, column: 6, scope: !4339)
!4405 = !DILocation(line: 866, column: 56, scope: !4339)
!4406 = !DILocation(line: 866, column: 9, scope: !4339)
!4407 = !DILocation(line: 866, column: 2, scope: !4339)
!4408 = !DILocation(line: 867, column: 1, scope: !4339)
!4409 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !434, file: !434, line: 179, type: !4410, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4412)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{!105, !4342, !4346, !104, !269, !104}
!4412 = !{!4413, !4414, !4415, !4416, !4417, !4418}
!4413 = !DILocalVariable(name: "out", arg: 1, scope: !4409, file: !434, line: 179, type: !4342)
!4414 = !DILocalVariable(name: "formatter", arg: 2, scope: !4409, file: !434, line: 180, type: !4346)
!4415 = !DILocalVariable(name: "ctx", arg: 3, scope: !4409, file: !434, line: 181, type: !104)
!4416 = !DILocalVariable(name: "fmt", arg: 4, scope: !4409, file: !434, line: 182, type: !269)
!4417 = !DILocalVariable(name: "buf", arg: 5, scope: !4409, file: !434, line: 182, type: !104)
!4418 = !DILocalVariable(name: "u", scope: !4409, file: !434, line: 187, type: !4419)
!4419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4409, file: !434, line: 184, size: 32, elements: !4420)
!4420 = !{!4421, !4422}
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4419, file: !434, line: 185, baseType: !3959, size: 32)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4419, file: !434, line: 186, baseType: !104, size: 32)
!4423 = !DILocation(line: 0, scope: !4409)
!4424 = !DILocation(line: 191, column: 9, scope: !4409)
!4425 = !DILocation(line: 191, column: 2, scope: !4409)
!4426 = distinct !DISubprogram(name: "is_ptr", scope: !434, file: !434, line: 881, type: !4427, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4429)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{!505, !269, !105}
!4429 = !{!4430, !4431, !4432, !4433, !4434}
!4430 = !DILocalVariable(name: "fmt", arg: 1, scope: !4426, file: !434, line: 881, type: !269)
!4431 = !DILocalVariable(name: "n", arg: 2, scope: !4426, file: !434, line: 881, type: !105)
!4432 = !DILocalVariable(name: "c", scope: !4426, file: !434, line: 883, type: !103)
!4433 = !DILocalVariable(name: "mod", scope: !4426, file: !434, line: 884, type: !505)
!4434 = !DILocalVariable(name: "cnt", scope: !4426, file: !434, line: 885, type: !105)
!4435 = !DILocation(line: 0, scope: !4426)
!4436 = !DILocation(line: 887, column: 14, scope: !4426)
!4437 = !DILocation(line: 887, column: 22, scope: !4426)
!4438 = !DILocation(line: 887, column: 2, scope: !4426)
!4439 = !DILocation(line: 887, column: 18, scope: !4426)
!4440 = !DILocation(line: 888, column: 7, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4426, file: !434, line: 887, column: 31)
!4442 = !DILocation(line: 889, column: 12, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4444, file: !434, line: 889, column: 8)
!4444 = distinct !DILexicalBlock(scope: !4445, file: !434, line: 888, column: 12)
!4445 = distinct !DILexicalBlock(scope: !4441, file: !434, line: 888, column: 7)
!4446 = !DILocation(line: 889, column: 8, scope: !4444)
!4447 = !DILocation(line: 890, column: 11, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4449, file: !434, line: 890, column: 9)
!4449 = distinct !DILexicalBlock(scope: !4443, file: !434, line: 889, column: 18)
!4450 = !DILocation(line: 890, column: 9, scope: !4449)
!4451 = !DILocation(line: 892, column: 16, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4448, file: !434, line: 892, column: 16)
!4453 = !DILocation(line: 892, column: 16, scope: !4448)
!4454 = !DILocation(line: 895, column: 15, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4443, file: !434, line: 895, column: 15)
!4456 = !DILocation(line: 895, column: 15, scope: !4443)
!4457 = !DILocation(line: 900, column: 9, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4441, file: !434, line: 900, column: 7)
!4459 = !DILocation(line: 900, column: 7, scope: !4441)
!4460 = distinct !{!4460, !4438, !4461}
!4461 = !DILocation(line: 903, column: 2, scope: !4426)
!4462 = !DILocation(line: 906, column: 1, scope: !4426)
!4463 = distinct !DISubprogram(name: "is_fmt_spec", scope: !434, file: !434, line: 873, type: !4464, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4466)
!4464 = !DISubroutineType(types: !4465)
!4465 = !{!505, !103}
!4466 = !{!4467}
!4467 = !DILocalVariable(name: "c", arg: 1, scope: !4463, file: !434, line: 873, type: !103)
!4468 = !DILocation(line: 0, scope: !4463)
!4469 = !DILocation(line: 875, column: 19, scope: !4463)
!4470 = !DILocation(line: 875, column: 2, scope: !4463)
!4471 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !434, file: !434, line: 908, type: !4472, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4478)
!4472 = !DISubroutineType(types: !4473)
!4473 = !{!105, !104, !111, !4474, !104, !113, !2622, !111}
!4474 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3992, line: 308, baseType: !4475)
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4476, size: 32)
!4476 = !DISubroutineType(types: !4477)
!4477 = !{!105, !13, !111, !104}
!4478 = !{!4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4496, !4497, !4498, !4499, !4500, !4506, !4509, !4510, !4511, !4513, !4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4529, !4532, !4533, !4534, !4535, !4536, !4537, !4539, !4542, !4543, !4544}
!4479 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4471, file: !434, line: 908, type: !104)
!4480 = !DILocalVariable(name: "in_len", arg: 2, scope: !4471, file: !434, line: 909, type: !111)
!4481 = !DILocalVariable(name: "cb", arg: 3, scope: !4471, file: !434, line: 910, type: !4474)
!4482 = !DILocalVariable(name: "ctx", arg: 4, scope: !4471, file: !434, line: 911, type: !104)
!4483 = !DILocalVariable(name: "flags", arg: 5, scope: !4471, file: !434, line: 912, type: !113)
!4484 = !DILocalVariable(name: "strl", arg: 6, scope: !4471, file: !434, line: 913, type: !2622)
!4485 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4471, file: !434, line: 914, type: !111)
!4486 = !DILocalVariable(name: "buf", scope: !4471, file: !434, line: 918, type: !432)
!4487 = !DILocalVariable(name: "buf32", scope: !4471, file: !434, line: 919, type: !1084)
!4488 = !DILocalVariable(name: "args_size", scope: !4471, file: !434, line: 920, type: !32)
!4489 = !DILocalVariable(name: "ros_nbr", scope: !4471, file: !434, line: 920, type: !32)
!4490 = !DILocalVariable(name: "rws_nbr", scope: !4471, file: !434, line: 920, type: !32)
!4491 = !DILocalVariable(name: "fmt_present", scope: !4471, file: !434, line: 921, type: !505)
!4492 = !DILocalVariable(name: "rw_cpy", scope: !4471, file: !434, line: 922, type: !505)
!4493 = !DILocalVariable(name: "ro_cpy", scope: !4471, file: !434, line: 923, type: !505)
!4494 = !DILocalVariable(name: "in_desc", scope: !4471, file: !434, line: 924, type: !4495)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3995, size: 32)
!4496 = !DILocalVariable(name: "out_len", scope: !4471, file: !434, line: 960, type: !105)
!4497 = !DILocalVariable(name: "fmt", scope: !4471, file: !434, line: 965, type: !269)
!4498 = !DILocalVariable(name: "str_pos", scope: !4471, file: !434, line: 966, type: !432)
!4499 = !DILocalVariable(name: "strl_cnt", scope: !4471, file: !434, line: 967, type: !111)
!4500 = !DILocalVariable(name: "i", scope: !4501, file: !434, line: 973, type: !105)
!4501 = distinct !DILexicalBlock(scope: !4502, file: !434, line: 973, column: 4)
!4502 = distinct !DILexicalBlock(scope: !4503, file: !434, line: 972, column: 15)
!4503 = distinct !DILexicalBlock(scope: !4504, file: !434, line: 972, column: 7)
!4504 = distinct !DILexicalBlock(scope: !4505, file: !434, line: 970, column: 18)
!4505 = distinct !DILexicalBlock(scope: !4471, file: !434, line: 970, column: 6)
!4506 = !DILocalVariable(name: "str", scope: !4507, file: !434, line: 974, type: !269)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !434, line: 973, column: 38)
!4508 = distinct !DILexicalBlock(scope: !4501, file: !434, line: 973, column: 4)
!4509 = !DILocalVariable(name: "len", scope: !4507, file: !434, line: 975, type: !105)
!4510 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4504, file: !434, line: 990, type: !505)
!4511 = !DILocalVariable(name: "i", scope: !4512, file: !434, line: 995, type: !105)
!4512 = distinct !DILexicalBlock(scope: !4504, file: !434, line: 995, column: 3)
!4513 = !DILocalVariable(name: "arg_idx", scope: !4514, file: !434, line: 996, type: !169)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !434, line: 995, column: 37)
!4515 = distinct !DILexicalBlock(scope: !4512, file: !434, line: 995, column: 3)
!4516 = !DILocalVariable(name: "arg_pos", scope: !4514, file: !434, line: 997, type: !169)
!4517 = !DILocalVariable(name: "str", scope: !4514, file: !434, line: 998, type: !269)
!4518 = !DILocalVariable(name: "is_ro", scope: !4514, file: !434, line: 999, type: !505)
!4519 = !DILocalVariable(name: "len", scope: !4514, file: !434, line: 1000, type: !105)
!4520 = !DILocalVariable(name: "out_desc", scope: !4471, file: !434, line: 1038, type: !3995)
!4521 = !DILocalVariable(name: "cpy_str_pos", scope: !4471, file: !434, line: 1040, type: !3977)
!4522 = !DILocalVariable(name: "keep_str_pos", scope: !4471, file: !434, line: 1042, type: !3977)
!4523 = !DILocalVariable(name: "scpy_cnt", scope: !4471, file: !434, line: 1043, type: !169)
!4524 = !DILocalVariable(name: "keep_cnt", scope: !4471, file: !434, line: 1044, type: !169)
!4525 = !DILocalVariable(name: "dst", scope: !4471, file: !434, line: 1045, type: !432)
!4526 = !DILocalVariable(name: "rv", scope: !4471, file: !434, line: 1046, type: !105)
!4527 = !DILocalVariable(name: "i", scope: !4528, file: !434, line: 1074, type: !105)
!4528 = distinct !DILexicalBlock(scope: !4471, file: !434, line: 1074, column: 2)
!4529 = !DILocalVariable(name: "arg_idx", scope: !4530, file: !434, line: 1075, type: !169)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !434, line: 1074, column: 36)
!4531 = distinct !DILexicalBlock(scope: !4528, file: !434, line: 1074, column: 2)
!4532 = !DILocalVariable(name: "arg_pos", scope: !4530, file: !434, line: 1076, type: !169)
!4533 = !DILocalVariable(name: "str", scope: !4530, file: !434, line: 1077, type: !269)
!4534 = !DILocalVariable(name: "is_ro", scope: !4530, file: !434, line: 1078, type: !505)
!4535 = !DILocalVariable(name: "in_desc_backup", scope: !4471, file: !434, line: 1114, type: !3995)
!4536 = !DILocalVariable(name: "strs_len", scope: !4471, file: !434, line: 1134, type: !111)
!4537 = !DILocalVariable(name: "i", scope: !4538, file: !434, line: 1143, type: !105)
!4538 = distinct !DILexicalBlock(scope: !4471, file: !434, line: 1143, column: 2)
!4539 = !DILocalVariable(name: "loc", scope: !4540, file: !434, line: 1144, type: !169)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !434, line: 1143, column: 37)
!4541 = distinct !DILexicalBlock(scope: !4538, file: !434, line: 1143, column: 2)
!4542 = !DILocalVariable(name: "str", scope: !4540, file: !434, line: 1145, type: !269)
!4543 = !DILocalVariable(name: "str_len", scope: !4540, file: !434, line: 1146, type: !183)
!4544 = !DILabel(scope: !4545, name: "calculate_string_length", file: !434, line: 1021)
!4545 = distinct !DILexicalBlock(scope: !4546, file: !434, line: 1020, column: 56)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !434, line: 1020, column: 15)
!4547 = distinct !DILexicalBlock(scope: !4514, file: !434, line: 1014, column: 8)
!4548 = !DILocation(line: 0, scope: !4471)
!4549 = !DILocation(line: 916, column: 2, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !434, line: 916, column: 2)
!4551 = distinct !DILexicalBlock(scope: !4471, file: !434, line: 916, column: 2)
!4552 = !DILocation(line: 916, column: 2, scope: !4551)
!4553 = !DILocation(line: 916, column: 2, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4550, file: !434, line: 916, column: 2)
!4555 = !DILocation(line: 919, column: 20, scope: !4471)
!4556 = !DILocation(line: 921, column: 27, scope: !4471)
!4557 = !DILocation(line: 921, column: 21, scope: !4471)
!4558 = !DILocation(line: 926, column: 18, scope: !4471)
!4559 = !DILocation(line: 926, column: 11, scope: !4471)
!4560 = !DILocation(line: 926, column: 34, scope: !4471)
!4561 = !DILocation(line: 931, column: 21, scope: !4471)
!4562 = !DILocation(line: 931, column: 12, scope: !4471)
!4563 = !DILocation(line: 932, column: 11, scope: !4471)
!4564 = !DILocation(line: 932, column: 19, scope: !4471)
!4565 = !DILocation(line: 938, column: 21, scope: !4471)
!4566 = !DILocation(line: 938, column: 12, scope: !4471)
!4567 = !DILocation(line: 939, column: 19, scope: !4471)
!4568 = !DILocation(line: 939, column: 23, scope: !4471)
!4569 = !DILocation(line: 946, column: 14, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4471, file: !434, line: 946, column: 6)
!4571 = !DILocation(line: 947, column: 7, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4573, file: !434, line: 947, column: 7)
!4573 = distinct !DILexicalBlock(scope: !4570, file: !434, line: 946, column: 26)
!4574 = !DILocation(line: 947, column: 7, scope: !4573)
!4575 = !DILocation(line: 948, column: 4, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4572, file: !434, line: 947, column: 11)
!4577 = !DILocation(line: 949, column: 3, scope: !4576)
!4578 = !DILocation(line: 958, column: 23, scope: !4471)
!4579 = !DILocation(line: 958, column: 14, scope: !4471)
!4580 = !DILocation(line: 958, column: 27, scope: !4471)
!4581 = !DILocation(line: 965, column: 41, scope: !4471)
!4582 = !DILocation(line: 965, column: 20, scope: !4471)
!4583 = !DILocation(line: 966, column: 22, scope: !4471)
!4584 = !DILocation(line: 970, column: 9, scope: !4505)
!4585 = !DILocation(line: 970, column: 6, scope: !4471)
!4586 = !DILocation(line: 972, column: 7, scope: !4504)
!4587 = !DILocation(line: 0, scope: !4501)
!4588 = !DILocation(line: 973, column: 4, scope: !4501)
!4589 = !DILocation(line: 974, column: 46, scope: !4507)
!4590 = !DILocation(line: 974, column: 40, scope: !4507)
!4591 = !DILocation(line: 974, column: 23, scope: !4507)
!4592 = !DILocation(line: 0, scope: !4507)
!4593 = !DILocation(line: 975, column: 15, scope: !4507)
!4594 = !DILocation(line: 978, column: 14, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4507, file: !434, line: 978, column: 9)
!4596 = !DILocation(line: 979, column: 25, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4595, file: !434, line: 978, column: 38)
!4598 = !DILocation(line: 979, column: 19, scope: !4597)
!4599 = !DILocation(line: 979, column: 6, scope: !4597)
!4600 = !DILocation(line: 979, column: 23, scope: !4597)
!4601 = !DILocation(line: 980, column: 5, scope: !4597)
!4602 = !DILocation(line: 981, column: 13, scope: !4507)
!4603 = !DILocation(line: 982, column: 12, scope: !4507)
!4604 = !DILocation(line: 973, column: 34, scope: !4508)
!4605 = !DILocation(line: 973, column: 22, scope: !4508)
!4606 = distinct !{!4606, !4588, !4607}
!4607 = !DILocation(line: 983, column: 4, scope: !4501)
!4608 = !DILocation(line: 985, column: 16, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !434, line: 985, column: 8)
!4610 = distinct !DILexicalBlock(scope: !4503, file: !434, line: 984, column: 10)
!4611 = !DILocation(line: 967, column: 9, scope: !4471)
!4612 = !DILocation(line: 971, column: 11, scope: !4504)
!4613 = !DILocation(line: 0, scope: !4504)
!4614 = !DILocation(line: 0, scope: !4512)
!4615 = !DILocation(line: 995, column: 21, scope: !4515)
!4616 = !DILocation(line: 995, column: 3, scope: !4512)
!4617 = !DILocation(line: 990, column: 34, scope: !4504)
!4618 = !DILocation(line: 990, column: 26, scope: !4504)
!4619 = !DILocation(line: 996, column: 30, scope: !4514)
!4620 = !DILocation(line: 0, scope: !4514)
!4621 = !DILocation(line: 997, column: 30, scope: !4514)
!4622 = !DILocation(line: 997, column: 22, scope: !4514)
!4623 = !DILocation(line: 998, column: 39, scope: !4514)
!4624 = !DILocation(line: 998, column: 22, scope: !4514)
!4625 = !DILocation(line: 999, column: 17, scope: !4514)
!4626 = !DILocation(line: 1002, column: 20, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4514, file: !434, line: 1002, column: 8)
!4628 = !DILocation(line: 996, column: 22, scope: !4514)
!4629 = !DILocation(line: 1002, column: 35, scope: !4627)
!4630 = !DILocation(line: 1002, column: 23, scope: !4627)
!4631 = !DILocation(line: 1002, column: 8, scope: !4514)
!4632 = !DILocation(line: 1003, column: 5, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !434, line: 1003, column: 5)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !434, line: 1003, column: 5)
!4635 = distinct !DILexicalBlock(scope: !4636, file: !434, line: 1003, column: 5)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !434, line: 1003, column: 5)
!4637 = distinct !DILexicalBlock(scope: !4627, file: !434, line: 1002, column: 45)
!4638 = !DILocation(line: 1010, column: 13, scope: !4637)
!4639 = !DILocation(line: 1011, column: 5, scope: !4637)
!4640 = !DILocation(line: 1014, column: 8, scope: !4514)
!4641 = !DILocation(line: 1015, column: 9, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4547, file: !434, line: 1014, column: 15)
!4643 = !DILocation(line: 1018, column: 14, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !434, line: 1017, column: 12)
!4645 = distinct !DILexicalBlock(scope: !4642, file: !434, line: 1015, column: 9)
!4646 = !DILocation(line: 1020, column: 4, scope: !4642)
!4647 = !DILocation(line: 1020, column: 15, scope: !4547)
!4648 = !DILocation(line: 1021, column: 1, scope: !4545)
!4649 = !DILocation(line: 1022, column: 11, scope: !4545)
!4650 = !DILocation(line: 1025, column: 14, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4545, file: !434, line: 1025, column: 9)
!4652 = !DILocation(line: 1026, column: 25, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4651, file: !434, line: 1025, column: 38)
!4654 = !DILocation(line: 1026, column: 19, scope: !4653)
!4655 = !DILocation(line: 1026, column: 6, scope: !4653)
!4656 = !DILocation(line: 1026, column: 23, scope: !4653)
!4657 = !DILocation(line: 1027, column: 5, scope: !4653)
!4658 = !DILocation(line: 1031, column: 21, scope: !4545)
!4659 = !DILocation(line: 1031, column: 13, scope: !4545)
!4660 = !DILocation(line: 1032, column: 4, scope: !4545)
!4661 = !DILocation(line: 995, column: 33, scope: !4515)
!4662 = distinct !{!4662, !4616, !4663}
!4663 = !DILocation(line: 1033, column: 3, scope: !4512)
!4664 = !DILocation(line: 1040, column: 10, scope: !4471)
!4665 = !DILocation(line: 1042, column: 10, scope: !4471)
!4666 = !DILocation(line: 1052, column: 6, scope: !4471)
!4667 = !DILocation(line: 1055, column: 9, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !434, line: 1052, column: 14)
!4669 = distinct !DILexicalBlock(scope: !4471, file: !434, line: 1052, column: 6)
!4670 = !DILocation(line: 1056, column: 2, scope: !4668)
!4671 = !DILocation(line: 1056, column: 21, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4669, file: !434, line: 1056, column: 13)
!4673 = !DILocation(line: 1066, column: 3, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !434, line: 1065, column: 11)
!4675 = distinct !DILexicalBlock(scope: !4471, file: !434, line: 1065, column: 6)
!4676 = !DILocation(line: 1067, column: 2, scope: !4674)
!4677 = !DILocation(line: 1068, column: 10, scope: !4471)
!4678 = !DILocation(line: 0, scope: !4528)
!4679 = !DILocation(line: 1074, column: 20, scope: !4531)
!4680 = !DILocation(line: 1074, column: 2, scope: !4528)
!4681 = !DILocation(line: 1110, column: 24, scope: !4471)
!4682 = !DILocation(line: 1053, column: 12, scope: !4668)
!4683 = !DILocation(line: 1054, column: 12, scope: !4668)
!4684 = !DILocation(line: 1108, column: 30, scope: !4471)
!4685 = !DILocation(line: 1108, column: 40, scope: !4471)
!4686 = !DILocation(line: 1108, column: 38, scope: !4471)
!4687 = !DILocation(line: 1109, column: 31, scope: !4471)
!4688 = !DILocation(line: 1109, column: 24, scope: !4471)
!4689 = !DILocation(line: 1110, column: 31, scope: !4471)
!4690 = !DILocation(line: 1114, column: 31, scope: !4471)
!4691 = !DILocation(line: 1114, column: 48, scope: !4471)
!4692 = !DILocation(line: 1115, column: 13, scope: !4471)
!4693 = !DILocation(line: 1118, column: 7, scope: !4471)
!4694 = !DILocation(line: 1119, column: 9, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4471, file: !434, line: 1119, column: 6)
!4696 = !DILocation(line: 1119, column: 6, scope: !4471)
!4697 = !DILocation(line: 1075, column: 29, scope: !4530)
!4698 = !DILocation(line: 1075, column: 21, scope: !4530)
!4699 = !DILocation(line: 0, scope: !4530)
!4700 = !DILocation(line: 1076, column: 29, scope: !4530)
!4701 = !DILocation(line: 1076, column: 21, scope: !4530)
!4702 = !DILocation(line: 1077, column: 38, scope: !4530)
!4703 = !DILocation(line: 1077, column: 21, scope: !4530)
!4704 = !DILocation(line: 1078, column: 16, scope: !4530)
!4705 = !DILocation(line: 1080, column: 19, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4530, file: !434, line: 1080, column: 7)
!4707 = !DILocation(line: 1080, column: 34, scope: !4706)
!4708 = !DILocation(line: 1080, column: 22, scope: !4706)
!4709 = !DILocation(line: 1080, column: 7, scope: !4530)
!4710 = !DILocation(line: 1084, column: 7, scope: !4530)
!4711 = !DILocation(line: 1085, column: 8, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !434, line: 1084, column: 14)
!4713 = distinct !DILexicalBlock(scope: !4530, file: !434, line: 1084, column: 7)
!4714 = !DILocation(line: 1086, column: 5, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !434, line: 1086, column: 5)
!4716 = distinct !DILexicalBlock(scope: !4717, file: !434, line: 1086, column: 5)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !434, line: 1085, column: 49)
!4718 = distinct !DILexicalBlock(scope: !4712, file: !434, line: 1085, column: 8)
!4719 = !DILocation(line: 1086, column: 5, scope: !4716)
!4720 = !DILocation(line: 1086, column: 5, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4715, file: !434, line: 1086, column: 5)
!4722 = !DILocation(line: 1087, column: 25, scope: !4717)
!4723 = !DILocation(line: 1087, column: 5, scope: !4717)
!4724 = !DILocation(line: 1088, column: 4, scope: !4717)
!4725 = !DILocation(line: 1088, column: 15, scope: !4718)
!4726 = !DILocation(line: 1089, column: 5, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !434, line: 1089, column: 5)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !434, line: 1089, column: 5)
!4729 = distinct !DILexicalBlock(scope: !4730, file: !434, line: 1088, column: 61)
!4730 = distinct !DILexicalBlock(scope: !4718, file: !434, line: 1088, column: 15)
!4731 = !DILocation(line: 1089, column: 5, scope: !4728)
!4732 = !DILocation(line: 1089, column: 5, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4727, file: !434, line: 1089, column: 5)
!4734 = !DILocation(line: 1090, column: 26, scope: !4729)
!4735 = !DILocation(line: 1090, column: 5, scope: !4729)
!4736 = !DILocation(line: 1091, column: 4, scope: !4729)
!4737 = !DILocation(line: 1095, column: 8, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4713, file: !434, line: 1094, column: 10)
!4739 = !DILocation(line: 1096, column: 5, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !434, line: 1096, column: 5)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !434, line: 1096, column: 5)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !434, line: 1095, column: 49)
!4743 = distinct !DILexicalBlock(scope: !4738, file: !434, line: 1095, column: 8)
!4744 = !DILocation(line: 1096, column: 5, scope: !4741)
!4745 = !DILocation(line: 1096, column: 5, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4740, file: !434, line: 1096, column: 5)
!4747 = !DILocation(line: 1097, column: 25, scope: !4742)
!4748 = !DILocation(line: 1097, column: 5, scope: !4742)
!4749 = !DILocation(line: 1098, column: 4, scope: !4742)
!4750 = !DILocation(line: 1099, column: 5, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !434, line: 1099, column: 5)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !434, line: 1099, column: 5)
!4753 = distinct !DILexicalBlock(scope: !4743, file: !434, line: 1098, column: 11)
!4754 = !DILocation(line: 1099, column: 5, scope: !4752)
!4755 = !DILocation(line: 1099, column: 5, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4751, file: !434, line: 1099, column: 5)
!4757 = !DILocation(line: 1100, column: 26, scope: !4753)
!4758 = !DILocation(line: 1100, column: 5, scope: !4753)
!4759 = !DILocation(line: 1100, column: 30, scope: !4753)
!4760 = !DILocation(line: 1101, column: 26, scope: !4753)
!4761 = !DILocation(line: 1101, column: 5, scope: !4753)
!4762 = !DILocation(line: 0, scope: !4713)
!4763 = !DILocation(line: 1074, column: 32, scope: !4531)
!4764 = distinct !{!4764, !4680, !4765}
!4765 = !DILocation(line: 1104, column: 2, scope: !4528)
!4766 = !DILocation(line: 1124, column: 13, scope: !4471)
!4767 = !DILocation(line: 1127, column: 10, scope: !4471)
!4768 = !DILocation(line: 1127, column: 7, scope: !4471)
!4769 = !DILocation(line: 1128, column: 9, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4471, file: !434, line: 1128, column: 6)
!4771 = !DILocation(line: 1128, column: 6, scope: !4471)
!4772 = !DILocation(line: 1134, column: 27, scope: !4471)
!4773 = !DILocation(line: 1136, column: 7, scope: !4471)
!4774 = !DILocation(line: 1137, column: 9, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4471, file: !434, line: 1137, column: 6)
!4776 = !DILocation(line: 1137, column: 6, scope: !4471)
!4777 = !DILocation(line: 1131, column: 10, scope: !4471)
!4778 = !DILocation(line: 1140, column: 10, scope: !4471)
!4779 = !DILocation(line: 0, scope: !4538)
!4780 = !DILocation(line: 1143, column: 20, scope: !4541)
!4781 = !DILocation(line: 1143, column: 2, scope: !4538)
!4782 = !DILocation(line: 1144, column: 3, scope: !4540)
!4783 = !DILocation(line: 1144, column: 17, scope: !4540)
!4784 = !DILocation(line: 0, scope: !4540)
!4785 = !DILocation(line: 1144, column: 11, scope: !4540)
!4786 = !DILocation(line: 1145, column: 38, scope: !4540)
!4787 = !DILocation(line: 1145, column: 21, scope: !4540)
!4788 = !DILocation(line: 1146, column: 22, scope: !4540)
!4789 = !DILocation(line: 1146, column: 29, scope: !4540)
!4790 = !DILocation(line: 1148, column: 8, scope: !4540)
!4791 = !DILocation(line: 1149, column: 10, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4540, file: !434, line: 1149, column: 7)
!4793 = !DILocation(line: 1149, column: 7, scope: !4540)
!4794 = !DILocation(line: 1154, column: 8, scope: !4540)
!4795 = !DILocation(line: 1155, column: 10, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4540, file: !434, line: 1155, column: 7)
!4797 = !DILocation(line: 1155, column: 7, scope: !4540)
!4798 = !DILocation(line: 1159, column: 2, scope: !4541)
!4799 = !DILocation(line: 1152, column: 11, scope: !4540)
!4800 = !DILocation(line: 1158, column: 11, scope: !4540)
!4801 = !DILocation(line: 1143, column: 33, scope: !4541)
!4802 = distinct !{!4802, !4781, !4803}
!4803 = !DILocation(line: 1159, column: 2, scope: !4538)
!4804 = !DILocation(line: 1162, column: 8, scope: !4471)
!4805 = !DILocation(line: 1164, column: 2, scope: !4471)
!4806 = !DILocation(line: 1165, column: 1, scope: !4471)
!4807 = distinct !DISubprogram(name: "get_package_len", scope: !434, file: !434, line: 196, type: !4808, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4810)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{!111, !104}
!4810 = !{!4811, !4812, !4813, !4814, !4815, !4816, !4817}
!4811 = !DILocalVariable(name: "packaged", arg: 1, scope: !4807, file: !434, line: 196, type: !104)
!4812 = !DILocalVariable(name: "buf", scope: !4807, file: !434, line: 200, type: !432)
!4813 = !DILocalVariable(name: "start", scope: !4807, file: !434, line: 201, type: !432)
!4814 = !DILocalVariable(name: "args_size", scope: !4807, file: !434, line: 202, type: !32)
!4815 = !DILocalVariable(name: "s_nbr", scope: !4807, file: !434, line: 202, type: !32)
!4816 = !DILocalVariable(name: "ros_nbr", scope: !4807, file: !434, line: 202, type: !32)
!4817 = !DILocalVariable(name: "i", scope: !4818, file: !434, line: 215, type: !105)
!4818 = distinct !DILexicalBlock(scope: !4807, file: !434, line: 215, column: 2)
!4819 = !DILocation(line: 0, scope: !4807)
!4820 = !DILocation(line: 198, column: 2, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4822, file: !434, line: 198, column: 2)
!4822 = distinct !DILexicalBlock(scope: !4807, file: !434, line: 198, column: 2)
!4823 = !DILocation(line: 198, column: 2, scope: !4822)
!4824 = !DILocation(line: 198, column: 2, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4821, file: !434, line: 198, column: 2)
!4826 = !DILocation(line: 204, column: 14, scope: !4807)
!4827 = !DILocation(line: 204, column: 21, scope: !4807)
!4828 = !DILocation(line: 205, column: 14, scope: !4807)
!4829 = !DILocation(line: 206, column: 14, scope: !4807)
!4830 = !DILocation(line: 209, column: 6, scope: !4807)
!4831 = !DILocation(line: 212, column: 6, scope: !4807)
!4832 = !DILocation(line: 0, scope: !4818)
!4833 = !DILocation(line: 215, column: 20, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4818, file: !434, line: 215, column: 2)
!4835 = !DILocation(line: 215, column: 2, scope: !4818)
!4836 = !DILocation(line: 220, column: 33, scope: !4807)
!4837 = !DILocation(line: 220, column: 2, scope: !4807)
!4838 = !DILocation(line: 216, column: 6, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4834, file: !434, line: 215, column: 34)
!4840 = !DILocation(line: 217, column: 10, scope: !4839)
!4841 = !DILocation(line: 217, column: 36, scope: !4839)
!4842 = !DILocation(line: 217, column: 7, scope: !4839)
!4843 = !DILocation(line: 215, column: 30, scope: !4834)
!4844 = distinct !{!4844, !4835, !4845}
!4845 = !DILocation(line: 218, column: 2, scope: !4818)
!4846 = distinct !DISubprogram(name: "append_string", scope: !434, file: !434, line: 223, type: !4847, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4849)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!105, !4474, !104, !269, !183}
!4849 = !{!4850, !4851, !4852, !4853}
!4850 = !DILocalVariable(name: "cb", arg: 1, scope: !4846, file: !434, line: 223, type: !4474)
!4851 = !DILocalVariable(name: "ctx", arg: 2, scope: !4846, file: !434, line: 223, type: !104)
!4852 = !DILocalVariable(name: "str", arg: 3, scope: !4846, file: !434, line: 223, type: !269)
!4853 = !DILocalVariable(name: "strl", arg: 4, scope: !4846, file: !434, line: 223, type: !183)
!4854 = !DILocation(line: 0, scope: !4846)
!4855 = !DILocation(line: 225, column: 9, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4846, file: !434, line: 225, column: 6)
!4857 = !DILocation(line: 225, column: 6, scope: !4846)
!4858 = !DILocation(line: 226, column: 14, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4856, file: !434, line: 225, column: 18)
!4860 = !DILocation(line: 226, column: 12, scope: !4859)
!4861 = !DILocation(line: 226, column: 3, scope: !4859)
!4862 = !DILocation(line: 229, column: 14, scope: !4846)
!4863 = !DILocation(line: 229, column: 9, scope: !4846)
!4864 = !DILocation(line: 229, column: 27, scope: !4846)
!4865 = !DILocation(line: 229, column: 39, scope: !4846)
!4866 = !DILocation(line: 230, column: 17, scope: !4846)
!4867 = !DILocation(line: 230, column: 9, scope: !4846)
!4868 = !DILocation(line: 230, column: 2, scope: !4846)
!4869 = !DILocation(line: 231, column: 1, scope: !4846)
!4870 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !446, file: !446, line: 45, type: !448, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4871)
!4871 = !{!4872}
!4872 = !DILocalVariable(name: "c", arg: 1, scope: !4870, file: !446, line: 45, type: !105)
!4873 = !DILocation(line: 0, scope: !4870)
!4874 = !DILocation(line: 50, column: 2, scope: !4870)
!4875 = distinct !DISubprogram(name: "__printk_hook_install", scope: !446, file: !446, line: 63, type: !4876, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4878)
!4876 = !DISubroutineType(types: !4877)
!4877 = !{null, !447}
!4878 = !{!4879}
!4879 = !DILocalVariable(name: "fn", arg: 1, scope: !4875, file: !446, line: 63, type: !447)
!4880 = !DILocation(line: 0, scope: !4875)
!4881 = !DILocation(line: 65, column: 12, scope: !4875)
!4882 = !DILocation(line: 66, column: 1, scope: !4875)
!4883 = distinct !DISubprogram(name: "__printk_get_hook", scope: !446, file: !446, line: 76, type: !4884, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !397)
!4884 = !DISubroutineType(types: !4885)
!4885 = !{!104}
!4886 = !DILocation(line: 78, column: 9, scope: !4883)
!4887 = !DILocation(line: 78, column: 2, scope: !4883)
!4888 = distinct !DISubprogram(name: "vprintk", scope: !446, file: !446, line: 113, type: !4889, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4897)
!4889 = !DISubroutineType(types: !4890)
!4890 = !{null, !269, !4891}
!4891 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3960, line: 99, baseType: !4892)
!4892 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3960, line: 40, baseType: !4893)
!4893 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !446, baseType: !4894)
!4894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4895)
!4895 = !{!4896}
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4894, file: !446, line: 79, baseType: !104, size: 32)
!4897 = !{!4898, !4899, !4900}
!4898 = !DILocalVariable(name: "fmt", arg: 1, scope: !4888, file: !446, line: 113, type: !269)
!4899 = !DILocalVariable(name: "ap", arg: 2, scope: !4888, file: !446, line: 113, type: !4891)
!4900 = !DILocalVariable(name: "ctx", scope: !4901, file: !446, line: 121, type: !4903)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !446, line: 120, column: 27)
!4902 = distinct !DILexicalBlock(scope: !4888, file: !446, line: 120, column: 6)
!4903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !446, line: 81, size: 32, elements: !4904)
!4904 = !{!4905, !4906}
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4903, file: !446, line: 85, baseType: !32, size: 32)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4903, file: !446, line: 86, baseType: !4907, offset: 32)
!4907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, elements: !2620)
!4908 = !DILocation(line: 0, scope: !4888)
!4909 = !DILocation(line: 148, column: 3, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4902, file: !446, line: 138, column: 9)
!4911 = !DILocation(line: 155, column: 1, scope: !4888)
!4912 = distinct !DISubprogram(name: "char_out", scope: !446, file: !446, line: 107, type: !4913, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4915)
!4913 = !DISubroutineType(types: !4914)
!4914 = !{!105, !105, !104}
!4915 = !{!4916, !4917}
!4916 = !DILocalVariable(name: "c", arg: 1, scope: !4912, file: !446, line: 107, type: !105)
!4917 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4912, file: !446, line: 107, type: !104)
!4918 = !DILocation(line: 0, scope: !4912)
!4919 = !DILocation(line: 110, column: 9, scope: !4912)
!4920 = !DILocation(line: 110, column: 2, scope: !4912)
!4921 = distinct !DISubprogram(name: "cbvprintf", scope: !3992, file: !3992, line: 739, type: !4922, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4924)
!4922 = !DISubroutineType(types: !4923)
!4923 = !{!105, !4342, !104, !269, !4891}
!4924 = !{!4925, !4926, !4927, !4928}
!4925 = !DILocalVariable(name: "out", arg: 1, scope: !4921, file: !3992, line: 739, type: !4342)
!4926 = !DILocalVariable(name: "ctx", arg: 2, scope: !4921, file: !3992, line: 739, type: !104)
!4927 = !DILocalVariable(name: "format", arg: 3, scope: !4921, file: !3992, line: 739, type: !269)
!4928 = !DILocalVariable(name: "ap", arg: 4, scope: !4921, file: !3992, line: 739, type: !4891)
!4929 = !DILocation(line: 0, scope: !4921)
!4930 = !DILocation(line: 741, column: 9, scope: !4921)
!4931 = !DILocation(line: 741, column: 2, scope: !4921)
!4932 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !446, file: !446, line: 157, type: !4933, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4935)
!4933 = !DISubroutineType(types: !4934)
!4934 = !{null, !102, !111}
!4935 = !{!4936, !4937, !4938}
!4936 = !DILocalVariable(name: "c", arg: 1, scope: !4932, file: !446, line: 157, type: !102)
!4937 = !DILocalVariable(name: "n", arg: 2, scope: !4932, file: !446, line: 157, type: !111)
!4938 = !DILocalVariable(name: "i", scope: !4932, file: !446, line: 159, type: !111)
!4939 = !DILocation(line: 0, scope: !4932)
!4940 = !DILocation(line: 164, column: 16, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !446, line: 164, column: 2)
!4942 = distinct !DILexicalBlock(scope: !4932, file: !446, line: 164, column: 2)
!4943 = !DILocation(line: 164, column: 2, scope: !4942)
!4944 = !DILocation(line: 165, column: 3, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4941, file: !446, line: 164, column: 26)
!4946 = !DILocation(line: 165, column: 13, scope: !4945)
!4947 = !DILocation(line: 164, column: 22, scope: !4941)
!4948 = distinct !{!4948, !4943, !4949}
!4949 = !DILocation(line: 166, column: 2, scope: !4942)
!4950 = !DILocation(line: 171, column: 1, scope: !4932)
!4951 = distinct !DISubprogram(name: "printk", scope: !446, file: !446, line: 203, type: !4952, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4954)
!4952 = !DISubroutineType(types: !4953)
!4953 = !{null, !269, null}
!4954 = !{!4955, !4956}
!4955 = !DILocalVariable(name: "fmt", arg: 1, scope: !4951, file: !446, line: 203, type: !269)
!4956 = !DILocalVariable(name: "ap", scope: !4951, file: !446, line: 205, type: !4891)
!4957 = !DILocation(line: 0, scope: !4951)
!4958 = !DILocation(line: 205, column: 2, scope: !4951)
!4959 = !DILocation(line: 205, column: 10, scope: !4951)
!4960 = !DILocation(line: 207, column: 2, scope: !4951)
!4961 = !DILocation(line: 209, column: 2, scope: !4951)
!4962 = !DILocation(line: 211, column: 2, scope: !4951)
!4963 = !DILocation(line: 212, column: 1, scope: !4951)
!4964 = distinct !DISubprogram(name: "snprintk", scope: !446, file: !446, line: 239, type: !4965, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4967)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{!105, !102, !111, !269, null}
!4967 = !{!4968, !4969, !4970, !4971, !4972}
!4968 = !DILocalVariable(name: "str", arg: 1, scope: !4964, file: !446, line: 239, type: !102)
!4969 = !DILocalVariable(name: "size", arg: 2, scope: !4964, file: !446, line: 239, type: !111)
!4970 = !DILocalVariable(name: "fmt", arg: 3, scope: !4964, file: !446, line: 239, type: !269)
!4971 = !DILocalVariable(name: "ap", scope: !4964, file: !446, line: 241, type: !4891)
!4972 = !DILocalVariable(name: "ret", scope: !4964, file: !446, line: 242, type: !105)
!4973 = !DILocation(line: 0, scope: !4964)
!4974 = !DILocation(line: 241, column: 2, scope: !4964)
!4975 = !DILocation(line: 241, column: 10, scope: !4964)
!4976 = !DILocation(line: 244, column: 2, scope: !4964)
!4977 = !DILocation(line: 245, column: 8, scope: !4964)
!4978 = !DILocation(line: 246, column: 2, scope: !4964)
!4979 = !DILocation(line: 249, column: 1, scope: !4964)
!4980 = !DILocation(line: 248, column: 2, scope: !4964)
!4981 = distinct !DISubprogram(name: "vsnprintk", scope: !446, file: !446, line: 251, type: !4982, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4984)
!4982 = !DISubroutineType(types: !4983)
!4983 = !{!105, !102, !111, !269, !4891}
!4984 = !{!4985, !4986, !4987, !4988, !4989}
!4985 = !DILocalVariable(name: "str", arg: 1, scope: !4981, file: !446, line: 251, type: !102)
!4986 = !DILocalVariable(name: "size", arg: 2, scope: !4981, file: !446, line: 251, type: !111)
!4987 = !DILocalVariable(name: "fmt", arg: 3, scope: !4981, file: !446, line: 251, type: !269)
!4988 = !DILocalVariable(name: "ap", arg: 4, scope: !4981, file: !446, line: 251, type: !4891)
!4989 = !DILocalVariable(name: "ctx", scope: !4981, file: !446, line: 253, type: !4990)
!4990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !446, line: 217, size: 96, elements: !4991)
!4991 = !{!4992, !4993, !4994}
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4990, file: !446, line: 218, baseType: !102, size: 32)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4990, file: !446, line: 219, baseType: !105, size: 32, offset: 32)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4990, file: !446, line: 220, baseType: !105, size: 32, offset: 64)
!4995 = !DILocation(line: 0, scope: !4981)
!4996 = !DILocation(line: 253, column: 2, scope: !4981)
!4997 = !DILocation(line: 253, column: 21, scope: !4981)
!4998 = !DILocation(line: 253, column: 27, scope: !4981)
!4999 = !DILocation(line: 255, column: 2, scope: !4981)
!5000 = !DILocation(line: 257, column: 10, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4981, file: !446, line: 257, column: 6)
!5002 = !DILocation(line: 257, column: 22, scope: !5001)
!5003 = !DILocation(line: 257, column: 16, scope: !5001)
!5004 = !DILocation(line: 257, column: 6, scope: !4981)
!5005 = !DILocation(line: 258, column: 3, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5001, file: !446, line: 257, column: 27)
!5007 = !DILocation(line: 258, column: 18, scope: !5006)
!5008 = !DILocation(line: 259, column: 2, scope: !5006)
!5009 = !DILocation(line: 262, column: 1, scope: !4981)
!5010 = !DILocation(line: 261, column: 2, scope: !4981)
!5011 = distinct !DISubprogram(name: "str_out", scope: !446, file: !446, line: 223, type: !5012, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5015)
!5012 = !DISubroutineType(types: !5013)
!5013 = !{!105, !105, !5014}
!5014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4990, size: 32)
!5015 = !{!5016, !5017}
!5016 = !DILocalVariable(name: "c", arg: 1, scope: !5011, file: !446, line: 223, type: !105)
!5017 = !DILocalVariable(name: "ctx", arg: 2, scope: !5011, file: !446, line: 223, type: !5014)
!5018 = !DILocation(line: 0, scope: !5011)
!5019 = !DILocation(line: 225, column: 11, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5011, file: !446, line: 225, column: 6)
!5021 = !DILocation(line: 225, column: 15, scope: !5020)
!5022 = !DILocation(line: 0, scope: !5020)
!5023 = !DILocation(line: 225, column: 23, scope: !5020)
!5024 = !DILocation(line: 225, column: 45, scope: !5020)
!5025 = !DILocation(line: 225, column: 37, scope: !5020)
!5026 = !DILocation(line: 225, column: 6, scope: !5011)
!5027 = !DILocation(line: 226, column: 8, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5020, file: !446, line: 225, column: 50)
!5029 = !DILocation(line: 226, column: 13, scope: !5028)
!5030 = !DILocation(line: 227, column: 3, scope: !5028)
!5031 = !DILocation(line: 230, column: 29, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5011, file: !446, line: 230, column: 6)
!5033 = !DILocation(line: 230, column: 17, scope: !5032)
!5034 = !DILocation(line: 230, column: 6, scope: !5011)
!5035 = !DILocation(line: 231, column: 22, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5032, file: !446, line: 230, column: 34)
!5037 = !DILocation(line: 231, column: 3, scope: !5036)
!5038 = !DILocation(line: 231, column: 26, scope: !5036)
!5039 = !DILocation(line: 232, column: 2, scope: !5036)
!5040 = !DILocation(line: 233, column: 28, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5032, file: !446, line: 232, column: 9)
!5042 = !DILocation(line: 233, column: 22, scope: !5041)
!5043 = !DILocation(line: 233, column: 3, scope: !5041)
!5044 = !DILocation(line: 233, column: 26, scope: !5041)
!5045 = !DILocation(line: 237, column: 1, scope: !5011)
!5046 = distinct !DISubprogram(name: "z_thread_entry", scope: !5047, file: !5047, line: 30, type: !5048, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2588, retainedNodes: !5050)
!5047 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5048 = !DISubroutineType(types: !5049)
!5049 = !{null, !254, !104, !104, !104}
!5050 = !{!5051, !5052, !5053, !5054}
!5051 = !DILocalVariable(name: "entry", arg: 1, scope: !5046, file: !5047, line: 30, type: !254)
!5052 = !DILocalVariable(name: "p1", arg: 2, scope: !5046, file: !5047, line: 31, type: !104)
!5053 = !DILocalVariable(name: "p2", arg: 3, scope: !5046, file: !5047, line: 31, type: !104)
!5054 = !DILocalVariable(name: "p3", arg: 4, scope: !5046, file: !5047, line: 31, type: !104)
!5055 = !DILocation(line: 0, scope: !5046)
!5056 = !DILocation(line: 36, column: 2, scope: !5046)
!5057 = !DILocation(line: 38, column: 17, scope: !5046)
!5058 = !DILocation(line: 38, column: 2, scope: !5046)
!5059 = !DILocation(line: 45, column: 2, scope: !5046)
!5060 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !5061, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2588, retainedNodes: !397)
!5061 = !DISubroutineType(types: !5062)
!5062 = !{!5063}
!5063 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !5064)
!5064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5065, size: 32)
!5065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !5066)
!5066 = !{!5067, !5125, !5137, !5138, !5139, !5140, !5146, !5161}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5065, file: !127, line: 247, baseType: !5068, size: 384)
!5068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !5069)
!5069 = !{!5070, !5094, !5101, !5102, !5103, !5112, !5113, !5114}
!5070 = !DIDerivedType(tag: DW_TAG_member, scope: !5068, file: !127, line: 60, baseType: !5071, size: 64)
!5071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5068, file: !127, line: 60, size: 64, elements: !5072)
!5072 = !{!5073, !5088}
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5071, file: !127, line: 61, baseType: !5074, size: 64)
!5074 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !5075)
!5075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !5076)
!5076 = !{!5077, !5083}
!5077 = !DIDerivedType(tag: DW_TAG_member, scope: !5075, file: !137, line: 38, baseType: !5078, size: 32)
!5078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5075, file: !137, line: 38, size: 32, elements: !5079)
!5079 = !{!5080, !5082}
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5078, file: !137, line: 39, baseType: !5081, size: 32)
!5081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5075, size: 32)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5078, file: !137, line: 40, baseType: !5081, size: 32)
!5083 = !DIDerivedType(tag: DW_TAG_member, scope: !5075, file: !137, line: 42, baseType: !5084, size: 32, offset: 32)
!5084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5075, file: !137, line: 42, size: 32, elements: !5085)
!5085 = !{!5086, !5087}
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5084, file: !137, line: 43, baseType: !5081, size: 32)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5084, file: !137, line: 44, baseType: !5081, size: 32)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5071, file: !127, line: 62, baseType: !5089, size: 64)
!5089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !5090)
!5090 = !{!5091}
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5089, file: !153, line: 50, baseType: !5092, size: 64)
!5092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5093, size: 64, elements: !158)
!5093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5089, size: 32)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5068, file: !127, line: 68, baseType: !5095, size: 32, offset: 64)
!5095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5096, size: 32)
!5096 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !5097)
!5097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !5098)
!5098 = !{!5099}
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5097, file: !163, line: 232, baseType: !5100, size: 64)
!5100 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !5075)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5068, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5068, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!5103 = !DIDerivedType(tag: DW_TAG_member, scope: !5068, file: !127, line: 90, baseType: !5104, size: 16, offset: 112)
!5104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5068, file: !127, line: 90, size: 16, elements: !5105)
!5105 = !{!5106, !5111}
!5106 = !DIDerivedType(tag: DW_TAG_member, scope: !5104, file: !127, line: 91, baseType: !5107, size: 16)
!5107 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5104, file: !127, line: 91, size: 16, elements: !5108)
!5108 = !{!5109, !5110}
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5107, file: !127, line: 96, baseType: !179, size: 8)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5107, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5104, file: !127, line: 100, baseType: !183, size: 16)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5068, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5068, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5068, file: !127, line: 131, baseType: !5115, size: 192, offset: 192)
!5115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !5116)
!5116 = !{!5117, !5118, !5124}
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5115, file: !163, line: 245, baseType: !5074, size: 64)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5115, file: !163, line: 246, baseType: !5119, size: 32, offset: 64)
!5119 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !5120)
!5120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5121, size: 32)
!5121 = !DISubroutineType(types: !5122)
!5122 = !{null, !5123}
!5123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5115, size: 32)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5115, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5065, file: !127, line: 250, baseType: !5126, size: 288, offset: 384)
!5126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !5127)
!5127 = !{!5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136}
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5126, file: !200, line: 26, baseType: !113, size: 32)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5126, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5126, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5126, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5126, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5126, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5126, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5126, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5126, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5065, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5065, file: !127, line: 256, baseType: !5096, size: 64, offset: 704)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5065, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5065, file: !127, line: 300, baseType: !5141, size: 96, offset: 800)
!5141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !5142)
!5142 = !{!5143, !5144, !5145}
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5141, file: !127, line: 153, baseType: !22, size: 32)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5141, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5141, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5065, file: !127, line: 325, baseType: !5147, size: 32, offset: 896)
!5147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5148, size: 32)
!5148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !5149)
!5149 = !{!5150, !5156, !5157}
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5148, file: !122, line: 5074, baseType: !5151, size: 96)
!5151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !5152)
!5152 = !{!5153, !5154, !5155}
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5151, file: !226, line: 57, baseType: !229, size: 32)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5151, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5151, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5148, file: !122, line: 5075, baseType: !5096, size: 64, offset: 96)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5148, file: !122, line: 5076, baseType: !5158, size: 32, offset: 160)
!5158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !5159)
!5159 = !{!5160}
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5158, file: !236, line: 52, baseType: !22, size: 32)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5065, file: !127, line: 343, baseType: !5162, size: 64, offset: 928)
!5162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !5163)
!5163 = !{!5164, !5165}
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5162, file: !200, line: 63, baseType: !113, size: 32)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5162, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!5166 = !DILocation(line: 535, column: 9, scope: !5060)
!5167 = !DILocation(line: 535, column: 2, scope: !5060)
!5168 = distinct !DISubprogram(name: "k_thread_abort", scope: !3406, file: !3406, line: 188, type: !5169, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2588, retainedNodes: !5171)
!5169 = !DISubroutineType(types: !5170)
!5170 = !{null, !5063}
!5171 = !{!5172}
!5172 = !DILocalVariable(name: "thread", arg: 1, scope: !5168, file: !3406, line: 188, type: !5063)
!5173 = !DILocation(line: 0, scope: !5168)
!5174 = !DILocation(line: 197, column: 2, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5168, file: !3406, line: 197, column: 2)
!5176 = !{i64 2152220708}
!5177 = !DILocation(line: 198, column: 2, scope: !5168)
!5178 = !DILocation(line: 199, column: 1, scope: !5168)
!5179 = distinct !DISubprogram(name: "z_current_get", scope: !3406, file: !3406, line: 173, type: !5061, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2588, retainedNodes: !397)
!5180 = !DILocation(line: 180, column: 2, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5179, file: !3406, line: 180, column: 2)
!5182 = !{i64 2152220640}
!5183 = !DILocation(line: 181, column: 9, scope: !5179)
!5184 = !DILocation(line: 181, column: 2, scope: !5179)
!5185 = distinct !DISubprogram(name: "sys_heap_free", scope: !5186, file: !5186, line: 163, type: !5187, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5195)
!5186 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5187 = !DISubroutineType(types: !5188)
!5188 = !{null, !5189, !104}
!5189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5190, size: 32)
!5190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !5191)
!5191 = !{!5192, !5193, !5194}
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5190, file: !226, line: 57, baseType: !2607, size: 32)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5190, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5190, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!5195 = !{!5196, !5197, !5198, !5199}
!5196 = !DILocalVariable(name: "heap", arg: 1, scope: !5185, file: !5186, line: 163, type: !5189)
!5197 = !DILocalVariable(name: "mem", arg: 2, scope: !5185, file: !5186, line: 163, type: !104)
!5198 = !DILocalVariable(name: "h", scope: !5185, file: !5186, line: 168, type: !2607)
!5199 = !DILocalVariable(name: "c", scope: !5185, file: !5186, line: 169, type: !2612)
!5200 = !DILocation(line: 0, scope: !5185)
!5201 = !DILocation(line: 165, column: 10, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5185, file: !5186, line: 165, column: 6)
!5203 = !DILocation(line: 165, column: 6, scope: !5185)
!5204 = !DILocation(line: 168, column: 27, scope: !5185)
!5205 = !DILocation(line: 169, column: 16, scope: !5185)
!5206 = !{i32 0, i32 536870912}
!5207 = !DILocation(line: 175, column: 2, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5209, file: !5186, line: 175, column: 2)
!5209 = distinct !DILexicalBlock(scope: !5185, file: !5186, line: 175, column: 2)
!5210 = !DILocation(line: 175, column: 2, scope: !5209)
!5211 = !DILocation(line: 175, column: 2, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5208, file: !5186, line: 175, column: 2)
!5213 = !DILocation(line: 183, column: 2, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5215, file: !5186, line: 183, column: 2)
!5215 = distinct !DILexicalBlock(scope: !5185, file: !5186, line: 183, column: 2)
!5216 = !DILocation(line: 183, column: 2, scope: !5215)
!5217 = !DILocation(line: 183, column: 2, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5214, file: !5186, line: 183, column: 2)
!5219 = !DILocation(line: 187, column: 2, scope: !5185)
!5220 = !DILocation(line: 197, column: 2, scope: !5185)
!5221 = !DILocation(line: 198, column: 1, scope: !5185)
!5222 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5186, file: !5186, line: 157, type: !5223, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5225)
!5223 = !DISubroutineType(types: !5224)
!5224 = !{!2612, !2607, !104}
!5225 = !{!5226, !5227, !5228, !5229}
!5226 = !DILocalVariable(name: "h", arg: 1, scope: !5222, file: !5186, line: 157, type: !2607)
!5227 = !DILocalVariable(name: "p", arg: 2, scope: !5222, file: !5186, line: 157, type: !104)
!5228 = !DILocalVariable(name: "mem", scope: !5222, file: !5186, line: 159, type: !432)
!5229 = !DILocalVariable(name: "base", scope: !5222, file: !5186, line: 159, type: !432)
!5230 = !DILocation(line: 0, scope: !5222)
!5231 = !DILocation(line: 159, column: 39, scope: !5222)
!5232 = !DILocation(line: 160, column: 14, scope: !5222)
!5233 = !DILocation(line: 160, column: 38, scope: !5222)
!5234 = !DILocation(line: 160, column: 46, scope: !5222)
!5235 = !DILocation(line: 160, column: 2, scope: !5222)
!5236 = distinct !DISubprogram(name: "chunk_used", scope: !2594, file: !2594, line: 137, type: !5237, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5239)
!5237 = !DISubroutineType(types: !5238)
!5238 = !{!505, !2607, !2612}
!5239 = !{!5240, !5241}
!5240 = !DILocalVariable(name: "h", arg: 1, scope: !5236, file: !2594, line: 137, type: !2607)
!5241 = !DILocalVariable(name: "c", arg: 2, scope: !5236, file: !2594, line: 137, type: !2612)
!5242 = !DILocation(line: 0, scope: !5236)
!5243 = !DILocation(line: 139, column: 9, scope: !5236)
!5244 = !DILocation(line: 139, column: 42, scope: !5236)
!5245 = !DILocation(line: 139, column: 2, scope: !5236)
!5246 = distinct !DISubprogram(name: "right_chunk", scope: !2594, file: !2594, line: 204, type: !5247, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5249)
!5247 = !DISubroutineType(types: !5248)
!5248 = !{!2612, !2607, !2612}
!5249 = !{!5250, !5251}
!5250 = !DILocalVariable(name: "h", arg: 1, scope: !5246, file: !2594, line: 204, type: !2607)
!5251 = !DILocalVariable(name: "c", arg: 2, scope: !5246, file: !2594, line: 204, type: !2612)
!5252 = !DILocation(line: 0, scope: !5246)
!5253 = !DILocation(line: 206, column: 13, scope: !5246)
!5254 = !DILocation(line: 206, column: 11, scope: !5246)
!5255 = !DILocation(line: 206, column: 2, scope: !5246)
!5256 = distinct !DISubprogram(name: "left_chunk", scope: !2594, file: !2594, line: 199, type: !5247, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5257)
!5257 = !{!5258, !5259}
!5258 = !DILocalVariable(name: "h", arg: 1, scope: !5256, file: !2594, line: 199, type: !2607)
!5259 = !DILocalVariable(name: "c", arg: 2, scope: !5256, file: !2594, line: 199, type: !2612)
!5260 = !DILocation(line: 0, scope: !5256)
!5261 = !DILocation(line: 201, column: 13, scope: !5256)
!5262 = !DILocation(line: 201, column: 11, scope: !5256)
!5263 = !DILocation(line: 201, column: 2, scope: !5256)
!5264 = distinct !DISubprogram(name: "set_chunk_used", scope: !2594, file: !2594, line: 147, type: !5265, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5267)
!5265 = !DISubroutineType(types: !5266)
!5266 = !{null, !2607, !2612, !505}
!5267 = !{!5268, !5269, !5270, !5271, !5272}
!5268 = !DILocalVariable(name: "h", arg: 1, scope: !5264, file: !2594, line: 147, type: !2607)
!5269 = !DILocalVariable(name: "c", arg: 2, scope: !5264, file: !2594, line: 147, type: !2612)
!5270 = !DILocalVariable(name: "used", arg: 3, scope: !5264, file: !2594, line: 147, type: !505)
!5271 = !DILocalVariable(name: "buf", scope: !5264, file: !2594, line: 149, type: !2601)
!5272 = !DILocalVariable(name: "cmem", scope: !5264, file: !2594, line: 150, type: !104)
!5273 = !DILocation(line: 0, scope: !5264)
!5274 = !DILocation(line: 149, column: 22, scope: !5264)
!5275 = !DILocation(line: 0, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5277, file: !2594, line: 159, column: 7)
!5277 = distinct !DILexicalBlock(scope: !5278, file: !2594, line: 158, column: 9)
!5278 = distinct !DILexicalBlock(scope: !5264, file: !2594, line: 152, column: 6)
!5279 = !DILocation(line: 159, column: 7, scope: !5277)
!5280 = !DILocation(line: 165, column: 1, scope: !5264)
!5281 = distinct !DISubprogram(name: "free_chunk", scope: !5186, file: !5186, line: 133, type: !5282, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5284)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{null, !2607, !2612}
!5284 = !{!5285, !5286}
!5285 = !DILocalVariable(name: "h", arg: 1, scope: !5281, file: !5186, line: 133, type: !2607)
!5286 = !DILocalVariable(name: "c", arg: 2, scope: !5281, file: !5186, line: 133, type: !2612)
!5287 = !DILocation(line: 0, scope: !5281)
!5288 = !DILocation(line: 136, column: 21, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5281, file: !5186, line: 136, column: 6)
!5290 = !DILocation(line: 136, column: 7, scope: !5289)
!5291 = !DILocation(line: 136, column: 6, scope: !5281)
!5292 = !DILocation(line: 137, column: 3, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5289, file: !5186, line: 136, column: 41)
!5294 = !DILocation(line: 138, column: 22, scope: !5293)
!5295 = !DILocation(line: 138, column: 3, scope: !5293)
!5296 = !DILocation(line: 139, column: 2, scope: !5293)
!5297 = !DILocation(line: 142, column: 21, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5281, file: !5186, line: 142, column: 6)
!5299 = !DILocation(line: 142, column: 7, scope: !5298)
!5300 = !DILocation(line: 142, column: 6, scope: !5281)
!5301 = !DILocation(line: 143, column: 3, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5298, file: !5186, line: 142, column: 40)
!5303 = !DILocation(line: 144, column: 19, scope: !5302)
!5304 = !DILocation(line: 144, column: 3, scope: !5302)
!5305 = !DILocation(line: 145, column: 7, scope: !5302)
!5306 = !DILocation(line: 146, column: 2, scope: !5302)
!5307 = !DILocation(line: 148, column: 2, scope: !5281)
!5308 = !DILocation(line: 149, column: 1, scope: !5281)
!5309 = distinct !DISubprogram(name: "free_list_remove", scope: !5186, file: !5186, line: 60, type: !5282, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5310)
!5310 = !{!5311, !5312, !5313}
!5311 = !DILocalVariable(name: "h", arg: 1, scope: !5309, file: !5186, line: 60, type: !2607)
!5312 = !DILocalVariable(name: "c", arg: 2, scope: !5309, file: !5186, line: 60, type: !2612)
!5313 = !DILocalVariable(name: "bidx", scope: !5314, file: !5186, line: 63, type: !105)
!5314 = distinct !DILexicalBlock(scope: !5315, file: !5186, line: 62, column: 31)
!5315 = distinct !DILexicalBlock(scope: !5309, file: !5186, line: 62, column: 6)
!5316 = !DILocation(line: 0, scope: !5309)
!5317 = !DILocation(line: 63, column: 28, scope: !5314)
!5318 = !{i32 0, i32 32768}
!5319 = !DILocation(line: 63, column: 14, scope: !5314)
!5320 = !DILocation(line: 0, scope: !5314)
!5321 = !DILocation(line: 64, column: 3, scope: !5314)
!5322 = !DILocation(line: 66, column: 1, scope: !5309)
!5323 = distinct !DISubprogram(name: "merge_chunks", scope: !5186, file: !5186, line: 125, type: !5324, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5326)
!5324 = !DISubroutineType(types: !5325)
!5325 = !{null, !2607, !2612, !2612}
!5326 = !{!5327, !5328, !5329, !5330}
!5327 = !DILocalVariable(name: "h", arg: 1, scope: !5323, file: !5186, line: 125, type: !2607)
!5328 = !DILocalVariable(name: "lc", arg: 2, scope: !5323, file: !5186, line: 125, type: !2612)
!5329 = !DILocalVariable(name: "rc", arg: 3, scope: !5323, file: !5186, line: 125, type: !2612)
!5330 = !DILocalVariable(name: "newsz", scope: !5323, file: !5186, line: 127, type: !5331)
!5331 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2594, line: 62, baseType: !113)
!5332 = !DILocation(line: 0, scope: !5323)
!5333 = !DILocation(line: 127, column: 20, scope: !5323)
!5334 = !DILocation(line: 127, column: 40, scope: !5323)
!5335 = !DILocation(line: 127, column: 38, scope: !5323)
!5336 = !DILocation(line: 129, column: 2, scope: !5323)
!5337 = !DILocation(line: 130, column: 25, scope: !5323)
!5338 = !DILocation(line: 130, column: 2, scope: !5323)
!5339 = !DILocation(line: 131, column: 1, scope: !5323)
!5340 = distinct !DISubprogram(name: "free_list_add", scope: !5186, file: !5186, line: 98, type: !5282, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5341)
!5341 = !{!5342, !5343, !5344}
!5342 = !DILocalVariable(name: "h", arg: 1, scope: !5340, file: !5186, line: 98, type: !2607)
!5343 = !DILocalVariable(name: "c", arg: 2, scope: !5340, file: !5186, line: 98, type: !2612)
!5344 = !DILocalVariable(name: "bidx", scope: !5345, file: !5186, line: 101, type: !105)
!5345 = distinct !DILexicalBlock(scope: !5346, file: !5186, line: 100, column: 31)
!5346 = distinct !DILexicalBlock(scope: !5340, file: !5186, line: 100, column: 6)
!5347 = !DILocation(line: 0, scope: !5340)
!5348 = !DILocation(line: 101, column: 28, scope: !5345)
!5349 = !DILocation(line: 101, column: 14, scope: !5345)
!5350 = !DILocation(line: 0, scope: !5345)
!5351 = !DILocation(line: 102, column: 3, scope: !5345)
!5352 = !DILocation(line: 104, column: 1, scope: !5340)
!5353 = distinct !DISubprogram(name: "chunk_size", scope: !2594, file: !2594, line: 142, type: !5354, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5356)
!5354 = !DISubroutineType(types: !5355)
!5355 = !{!5331, !2607, !2612}
!5356 = !{!5357, !5358}
!5357 = !DILocalVariable(name: "h", arg: 1, scope: !5353, file: !2594, line: 142, type: !2607)
!5358 = !DILocalVariable(name: "c", arg: 2, scope: !5353, file: !2594, line: 142, type: !2612)
!5359 = !DILocation(line: 0, scope: !5353)
!5360 = !DILocation(line: 144, column: 9, scope: !5353)
!5361 = !DILocation(line: 144, column: 42, scope: !5353)
!5362 = !DILocation(line: 144, column: 2, scope: !5353)
!5363 = distinct !DISubprogram(name: "bucket_idx", scope: !2594, file: !2594, line: 250, type: !5364, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5366)
!5364 = !DISubroutineType(types: !5365)
!5365 = !{!105, !2607, !5331}
!5366 = !{!5367, !5368, !5369}
!5367 = !DILocalVariable(name: "h", arg: 1, scope: !5363, file: !2594, line: 250, type: !2607)
!5368 = !DILocalVariable(name: "sz", arg: 2, scope: !5363, file: !2594, line: 250, type: !5331)
!5369 = !DILocalVariable(name: "usable_sz", scope: !5363, file: !2594, line: 252, type: !32)
!5370 = !DILocation(line: 0, scope: !5363)
!5371 = !DILocation(line: 252, column: 32, scope: !5363)
!5372 = !DILocation(line: 252, column: 30, scope: !5363)
!5373 = !DILocation(line: 252, column: 50, scope: !5363)
!5374 = !DILocation(line: 253, column: 14, scope: !5363)
!5375 = !{i32 0, i32 33}
!5376 = !DILocation(line: 253, column: 12, scope: !5363)
!5377 = !DILocation(line: 253, column: 2, scope: !5363)
!5378 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5186, file: !5186, line: 68, type: !5379, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5381)
!5379 = !DISubroutineType(types: !5380)
!5380 = !{null, !2607, !2612, !105}
!5381 = !{!5382, !5383, !5384, !5385, !5387, !5390}
!5382 = !DILocalVariable(name: "h", arg: 1, scope: !5378, file: !5186, line: 68, type: !2607)
!5383 = !DILocalVariable(name: "c", arg: 2, scope: !5378, file: !5186, line: 68, type: !2612)
!5384 = !DILocalVariable(name: "bidx", arg: 3, scope: !5378, file: !5186, line: 68, type: !105)
!5385 = !DILocalVariable(name: "b", scope: !5378, file: !5186, line: 70, type: !5386)
!5386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 32)
!5387 = !DILocalVariable(name: "second", scope: !5388, file: !5186, line: 84, type: !2612)
!5388 = distinct !DILexicalBlock(scope: !5389, file: !5186, line: 80, column: 9)
!5389 = distinct !DILexicalBlock(scope: !5378, file: !5186, line: 72, column: 6)
!5390 = !DILocalVariable(name: "first", scope: !5388, file: !5186, line: 85, type: !2612)
!5391 = !DILocation(line: 0, scope: !5378)
!5392 = !DILocation(line: 72, column: 9, scope: !5389)
!5393 = !DILocation(line: 72, column: 14, scope: !5389)
!5394 = !DILocation(line: 72, column: 6, scope: !5378)
!5395 = !DILocation(line: 76, column: 23, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5389, file: !5186, line: 72, column: 21)
!5397 = !DILocation(line: 76, column: 6, scope: !5396)
!5398 = !DILocation(line: 76, column: 20, scope: !5396)
!5399 = !DILocation(line: 77, column: 11, scope: !5396)
!5400 = !DILocation(line: 78, column: 3, scope: !5396)
!5401 = !DILocation(line: 79, column: 3, scope: !5396)
!5402 = !DILocation(line: 80, column: 2, scope: !5396)
!5403 = !DILocation(line: 0, scope: !5388)
!5404 = !DILocation(line: 85, column: 21, scope: !5388)
!5405 = !{i32 0, i32 65536}
!5406 = !DILocation(line: 87, column: 3, scope: !5388)
!5407 = !DILocation(line: 88, column: 3, scope: !5388)
!5408 = !DILocation(line: 89, column: 3, scope: !5388)
!5409 = !DILocation(line: 90, column: 3, scope: !5388)
!5410 = !DILocation(line: 96, column: 1, scope: !5378)
!5411 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2594, file: !2594, line: 187, type: !5324, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5412)
!5412 = !{!5413, !5414, !5415}
!5413 = !DILocalVariable(name: "h", arg: 1, scope: !5411, file: !2594, line: 187, type: !2607)
!5414 = !DILocalVariable(name: "c", arg: 2, scope: !5411, file: !2594, line: 187, type: !2612)
!5415 = !DILocalVariable(name: "prev", arg: 3, scope: !5411, file: !2594, line: 188, type: !2612)
!5416 = !DILocation(line: 0, scope: !5411)
!5417 = !DILocation(line: 190, column: 2, scope: !5411)
!5418 = !DILocation(line: 191, column: 1, scope: !5411)
!5419 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2594, file: !2594, line: 193, type: !5324, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5420)
!5420 = !{!5421, !5422, !5423}
!5421 = !DILocalVariable(name: "h", arg: 1, scope: !5419, file: !2594, line: 193, type: !2607)
!5422 = !DILocalVariable(name: "c", arg: 2, scope: !5419, file: !2594, line: 193, type: !2612)
!5423 = !DILocalVariable(name: "next", arg: 3, scope: !5419, file: !2594, line: 194, type: !2612)
!5424 = !DILocation(line: 0, scope: !5419)
!5425 = !DILocation(line: 196, column: 2, scope: !5419)
!5426 = !DILocation(line: 197, column: 1, scope: !5419)
!5427 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2594, file: !2594, line: 177, type: !5247, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5428)
!5428 = !{!5429, !5430}
!5429 = !DILocalVariable(name: "h", arg: 1, scope: !5427, file: !2594, line: 177, type: !2607)
!5430 = !DILocalVariable(name: "c", arg: 2, scope: !5427, file: !2594, line: 177, type: !2612)
!5431 = !DILocation(line: 0, scope: !5427)
!5432 = !DILocation(line: 179, column: 9, scope: !5427)
!5433 = !DILocation(line: 179, column: 2, scope: !5427)
!5434 = distinct !DISubprogram(name: "chunk_field", scope: !2594, file: !2594, line: 107, type: !5435, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5437)
!5435 = !DISubroutineType(types: !5436)
!5436 = !{!2612, !2607, !2612, !2593}
!5437 = !{!5438, !5439, !5440, !5441, !5442}
!5438 = !DILocalVariable(name: "h", arg: 1, scope: !5434, file: !2594, line: 107, type: !2607)
!5439 = !DILocalVariable(name: "c", arg: 2, scope: !5434, file: !2594, line: 107, type: !2612)
!5440 = !DILocalVariable(name: "f", arg: 3, scope: !5434, file: !2594, line: 108, type: !2593)
!5441 = !DILocalVariable(name: "buf", scope: !5434, file: !2594, line: 110, type: !2601)
!5442 = !DILocalVariable(name: "cmem", scope: !5434, file: !2594, line: 111, type: !104)
!5443 = !DILocation(line: 0, scope: !5434)
!5444 = !DILocation(line: 110, column: 22, scope: !5434)
!5445 = !DILocation(line: 111, column: 15, scope: !5434)
!5446 = !DILocation(line: 116, column: 11, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !2594, line: 115, column: 9)
!5448 = distinct !DILexicalBlock(scope: !5434, file: !2594, line: 113, column: 6)
!5449 = !DILocation(line: 116, column: 10, scope: !5447)
!5450 = !DILocation(line: 118, column: 1, scope: !5434)
!5451 = distinct !DISubprogram(name: "chunk_buf", scope: !2594, file: !2594, line: 101, type: !5452, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5454)
!5452 = !DISubroutineType(types: !5453)
!5453 = !{!2601, !2607}
!5454 = !{!5455}
!5455 = !DILocalVariable(name: "h", arg: 1, scope: !5451, file: !2594, line: 101, type: !2607)
!5456 = !DILocation(line: 0, scope: !5451)
!5457 = !DILocation(line: 104, column: 9, scope: !5451)
!5458 = !DILocation(line: 104, column: 2, scope: !5451)
!5459 = distinct !DISubprogram(name: "chunk_set", scope: !2594, file: !2594, line: 120, type: !5460, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5462)
!5460 = !DISubroutineType(types: !5461)
!5461 = !{null, !2607, !2612, !2593, !2612}
!5462 = !{!5463, !5464, !5465, !5466, !5467, !5468}
!5463 = !DILocalVariable(name: "h", arg: 1, scope: !5459, file: !2594, line: 120, type: !2607)
!5464 = !DILocalVariable(name: "c", arg: 2, scope: !5459, file: !2594, line: 120, type: !2612)
!5465 = !DILocalVariable(name: "f", arg: 3, scope: !5459, file: !2594, line: 121, type: !2593)
!5466 = !DILocalVariable(name: "val", arg: 4, scope: !5459, file: !2594, line: 121, type: !2612)
!5467 = !DILocalVariable(name: "buf", scope: !5459, file: !2594, line: 125, type: !2601)
!5468 = !DILocalVariable(name: "cmem", scope: !5459, file: !2594, line: 126, type: !104)
!5469 = !DILocation(line: 0, scope: !5459)
!5470 = !DILocation(line: 125, column: 22, scope: !5459)
!5471 = !DILocation(line: 126, column: 15, scope: !5459)
!5472 = !DILocation(line: 133, column: 27, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5474, file: !2594, line: 131, column: 9)
!5474 = distinct !DILexicalBlock(scope: !5459, file: !2594, line: 128, column: 6)
!5475 = !DILocation(line: 133, column: 4, scope: !5473)
!5476 = !DILocation(line: 133, column: 3, scope: !5473)
!5477 = !DILocation(line: 133, column: 25, scope: !5473)
!5478 = !DILocation(line: 135, column: 1, scope: !5459)
!5479 = distinct !DISubprogram(name: "min_chunk_size", scope: !2594, file: !2594, line: 240, type: !5480, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5482)
!5480 = !DISubroutineType(types: !5481)
!5481 = !{!5331, !2607}
!5482 = !{!5483}
!5483 = !DILocalVariable(name: "h", arg: 1, scope: !5479, file: !2594, line: 240, type: !2607)
!5484 = !DILocation(line: 0, scope: !5479)
!5485 = !DILocation(line: 242, column: 9, scope: !5479)
!5486 = !DILocation(line: 242, column: 2, scope: !5479)
!5487 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2594, file: !2594, line: 235, type: !5488, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5490)
!5488 = !DISubroutineType(types: !5489)
!5489 = !{!5331, !2607, !111}
!5490 = !{!5491, !5492}
!5491 = !DILocalVariable(name: "h", arg: 1, scope: !5487, file: !2594, line: 235, type: !2607)
!5492 = !DILocalVariable(name: "bytes", arg: 2, scope: !5487, file: !2594, line: 235, type: !111)
!5493 = !DILocation(line: 0, scope: !5487)
!5494 = !DILocation(line: 237, column: 39, scope: !5487)
!5495 = !DILocation(line: 237, column: 9, scope: !5487)
!5496 = !DILocation(line: 237, column: 2, scope: !5487)
!5497 = distinct !DISubprogram(name: "chunksz", scope: !2594, file: !2594, line: 230, type: !5498, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5500)
!5498 = !DISubroutineType(types: !5499)
!5499 = !{!5331, !111}
!5500 = !{!5501}
!5501 = !DILocalVariable(name: "bytes", arg: 1, scope: !5497, file: !2594, line: 230, type: !111)
!5502 = !DILocation(line: 0, scope: !5497)
!5503 = !DILocation(line: 232, column: 29, scope: !5497)
!5504 = !DILocation(line: 232, column: 35, scope: !5497)
!5505 = !DILocation(line: 232, column: 2, scope: !5497)
!5506 = distinct !DISubprogram(name: "set_chunk_size", scope: !2594, file: !2594, line: 172, type: !5507, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5509)
!5507 = !DISubroutineType(types: !5508)
!5508 = !{null, !2607, !2612, !5331}
!5509 = !{!5510, !5511, !5512}
!5510 = !DILocalVariable(name: "h", arg: 1, scope: !5506, file: !2594, line: 172, type: !2607)
!5511 = !DILocalVariable(name: "c", arg: 2, scope: !5506, file: !2594, line: 172, type: !2612)
!5512 = !DILocalVariable(name: "size", arg: 3, scope: !5506, file: !2594, line: 172, type: !5331)
!5513 = !DILocation(line: 0, scope: !5506)
!5514 = !DILocation(line: 174, column: 38, scope: !5506)
!5515 = !DILocation(line: 174, column: 2, scope: !5506)
!5516 = !DILocation(line: 175, column: 1, scope: !5506)
!5517 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2594, file: !2594, line: 209, type: !5507, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5518)
!5518 = !{!5519, !5520, !5521}
!5519 = !DILocalVariable(name: "h", arg: 1, scope: !5517, file: !2594, line: 209, type: !2607)
!5520 = !DILocalVariable(name: "c", arg: 2, scope: !5517, file: !2594, line: 209, type: !2612)
!5521 = !DILocalVariable(name: "size", arg: 3, scope: !5517, file: !2594, line: 210, type: !5331)
!5522 = !DILocation(line: 0, scope: !5517)
!5523 = !DILocation(line: 212, column: 2, scope: !5517)
!5524 = !DILocation(line: 213, column: 1, scope: !5517)
!5525 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5186, file: !5186, line: 34, type: !5379, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5526)
!5526 = !{!5527, !5528, !5529, !5530, !5531, !5534}
!5527 = !DILocalVariable(name: "h", arg: 1, scope: !5525, file: !5186, line: 34, type: !2607)
!5528 = !DILocalVariable(name: "c", arg: 2, scope: !5525, file: !5186, line: 34, type: !2612)
!5529 = !DILocalVariable(name: "bidx", arg: 3, scope: !5525, file: !5186, line: 34, type: !105)
!5530 = !DILocalVariable(name: "b", scope: !5525, file: !5186, line: 36, type: !5386)
!5531 = !DILocalVariable(name: "first", scope: !5532, file: !5186, line: 47, type: !2612)
!5532 = distinct !DILexicalBlock(scope: !5533, file: !5186, line: 46, column: 9)
!5533 = distinct !DILexicalBlock(scope: !5525, file: !5186, line: 42, column: 6)
!5534 = !DILocalVariable(name: "second", scope: !5532, file: !5186, line: 48, type: !2612)
!5535 = !DILocation(line: 0, scope: !5525)
!5536 = !DILocation(line: 36, column: 29, scope: !5525)
!5537 = !DILocation(line: 42, column: 6, scope: !5533)
!5538 = !DILocation(line: 42, column: 28, scope: !5533)
!5539 = !DILocation(line: 42, column: 6, scope: !5525)
!5540 = !DILocation(line: 44, column: 24, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5533, file: !5186, line: 42, column: 34)
!5542 = !DILocation(line: 44, column: 23, scope: !5541)
!5543 = !DILocation(line: 44, column: 6, scope: !5541)
!5544 = !DILocation(line: 44, column: 20, scope: !5541)
!5545 = !DILocation(line: 45, column: 6, scope: !5541)
!5546 = !DILocation(line: 45, column: 11, scope: !5541)
!5547 = !DILocation(line: 46, column: 2, scope: !5541)
!5548 = !DILocation(line: 47, column: 21, scope: !5532)
!5549 = !DILocation(line: 0, scope: !5532)
!5550 = !DILocation(line: 50, column: 6, scope: !5532)
!5551 = !DILocation(line: 50, column: 11, scope: !5532)
!5552 = !DILocation(line: 51, column: 3, scope: !5532)
!5553 = !DILocation(line: 52, column: 3, scope: !5532)
!5554 = !DILocation(line: 58, column: 1, scope: !5525)
!5555 = distinct !DISubprogram(name: "next_free_chunk", scope: !2594, file: !2594, line: 182, type: !5247, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5556)
!5556 = !{!5557, !5558}
!5557 = !DILocalVariable(name: "h", arg: 1, scope: !5555, file: !2594, line: 182, type: !2607)
!5558 = !DILocalVariable(name: "c", arg: 2, scope: !5555, file: !2594, line: 182, type: !2612)
!5559 = !DILocation(line: 0, scope: !5555)
!5560 = !DILocation(line: 184, column: 9, scope: !5555)
!5561 = !DILocation(line: 184, column: 2, scope: !5555)
!5562 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5186, file: !5186, line: 200, type: !5563, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5565)
!5563 = !DISubroutineType(types: !5564)
!5564 = !{!111, !5189, !104}
!5565 = !{!5566, !5567, !5568, !5569, !5570, !5571, !5572}
!5566 = !DILocalVariable(name: "heap", arg: 1, scope: !5562, file: !5186, line: 200, type: !5189)
!5567 = !DILocalVariable(name: "mem", arg: 2, scope: !5562, file: !5186, line: 200, type: !104)
!5568 = !DILocalVariable(name: "h", scope: !5562, file: !5186, line: 202, type: !2607)
!5569 = !DILocalVariable(name: "c", scope: !5562, file: !5186, line: 203, type: !2612)
!5570 = !DILocalVariable(name: "addr", scope: !5562, file: !5186, line: 204, type: !111)
!5571 = !DILocalVariable(name: "chunk_base", scope: !5562, file: !5186, line: 205, type: !111)
!5572 = !DILocalVariable(name: "chunk_sz", scope: !5562, file: !5186, line: 206, type: !111)
!5573 = !DILocation(line: 0, scope: !5562)
!5574 = !DILocation(line: 202, column: 27, scope: !5562)
!5575 = !DILocation(line: 203, column: 16, scope: !5562)
!5576 = !DILocation(line: 204, column: 16, scope: !5562)
!5577 = !DILocation(line: 205, column: 31, scope: !5562)
!5578 = !DILocation(line: 205, column: 22, scope: !5562)
!5579 = !DILocation(line: 206, column: 20, scope: !5562)
!5580 = !DILocation(line: 206, column: 37, scope: !5562)
!5581 = !DILocation(line: 208, column: 26, scope: !5562)
!5582 = !DILocation(line: 208, column: 18, scope: !5562)
!5583 = !DILocation(line: 208, column: 2, scope: !5562)
!5584 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5186, file: !5186, line: 263, type: !5585, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5587)
!5585 = !DISubroutineType(types: !5586)
!5586 = !{!104, !5189, !111}
!5587 = !{!5588, !5589, !5590, !5591, !5592, !5593}
!5588 = !DILocalVariable(name: "heap", arg: 1, scope: !5584, file: !5186, line: 263, type: !5189)
!5589 = !DILocalVariable(name: "bytes", arg: 2, scope: !5584, file: !5186, line: 263, type: !111)
!5590 = !DILocalVariable(name: "h", scope: !5584, file: !5186, line: 265, type: !2607)
!5591 = !DILocalVariable(name: "mem", scope: !5584, file: !5186, line: 266, type: !104)
!5592 = !DILocalVariable(name: "chunk_sz", scope: !5584, file: !5186, line: 272, type: !5331)
!5593 = !DILocalVariable(name: "c", scope: !5584, file: !5186, line: 273, type: !2612)
!5594 = !DILocation(line: 0, scope: !5584)
!5595 = !DILocation(line: 265, column: 27, scope: !5584)
!5596 = !DILocation(line: 268, column: 12, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5584, file: !5186, line: 268, column: 6)
!5598 = !DILocation(line: 268, column: 18, scope: !5597)
!5599 = !DILocation(line: 268, column: 21, scope: !5597)
!5600 = !DILocation(line: 268, column: 6, scope: !5584)
!5601 = !DILocation(line: 272, column: 23, scope: !5584)
!5602 = !DILocation(line: 273, column: 16, scope: !5584)
!5603 = !DILocation(line: 274, column: 8, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5584, file: !5186, line: 274, column: 6)
!5605 = !DILocation(line: 274, column: 6, scope: !5584)
!5606 = !DILocation(line: 279, column: 6, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5584, file: !5186, line: 279, column: 6)
!5608 = !DILocation(line: 279, column: 23, scope: !5607)
!5609 = !DILocation(line: 279, column: 6, scope: !5584)
!5610 = !DILocation(line: 280, column: 24, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5607, file: !5186, line: 279, column: 35)
!5612 = !DILocation(line: 280, column: 3, scope: !5611)
!5613 = !DILocation(line: 281, column: 3, scope: !5611)
!5614 = !DILocation(line: 282, column: 2, scope: !5611)
!5615 = !DILocation(line: 284, column: 2, scope: !5584)
!5616 = !DILocation(line: 286, column: 8, scope: !5584)
!5617 = !DILocation(line: 298, column: 2, scope: !5584)
!5618 = !DILocation(line: 299, column: 1, scope: !5584)
!5619 = distinct !DISubprogram(name: "size_too_big", scope: !2594, file: !2594, line: 256, type: !5620, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5622)
!5620 = !DISubroutineType(types: !5621)
!5621 = !{!505, !2607, !111}
!5622 = !{!5623, !5624}
!5623 = !DILocalVariable(name: "h", arg: 1, scope: !5619, file: !2594, line: 256, type: !2607)
!5624 = !DILocalVariable(name: "bytes", arg: 2, scope: !5619, file: !2594, line: 256, type: !111)
!5625 = !DILocation(line: 0, scope: !5619)
!5626 = !DILocation(line: 262, column: 16, scope: !5619)
!5627 = !DILocation(line: 262, column: 36, scope: !5619)
!5628 = !DILocation(line: 262, column: 30, scope: !5619)
!5629 = !DILocation(line: 262, column: 2, scope: !5619)
!5630 = distinct !DISubprogram(name: "alloc_chunk", scope: !5186, file: !5186, line: 211, type: !5631, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5633)
!5631 = !DISubroutineType(types: !5632)
!5632 = !{!2612, !2607, !5331}
!5633 = !{!5634, !5635, !5636, !5637, !5638, !5641, !5642, !5644, !5645, !5648}
!5634 = !DILocalVariable(name: "h", arg: 1, scope: !5630, file: !5186, line: 211, type: !2607)
!5635 = !DILocalVariable(name: "sz", arg: 2, scope: !5630, file: !5186, line: 211, type: !5331)
!5636 = !DILocalVariable(name: "bi", scope: !5630, file: !5186, line: 213, type: !105)
!5637 = !DILocalVariable(name: "b", scope: !5630, file: !5186, line: 214, type: !5386)
!5638 = !DILocalVariable(name: "first", scope: !5639, file: !5186, line: 233, type: !2612)
!5639 = distinct !DILexicalBlock(scope: !5640, file: !5186, line: 232, column: 15)
!5640 = distinct !DILexicalBlock(scope: !5630, file: !5186, line: 232, column: 6)
!5641 = !DILocalVariable(name: "i", scope: !5639, file: !5186, line: 234, type: !105)
!5642 = !DILocalVariable(name: "c", scope: !5643, file: !5186, line: 236, type: !2612)
!5643 = distinct !DILexicalBlock(scope: !5639, file: !5186, line: 235, column: 6)
!5644 = !DILocalVariable(name: "bmask", scope: !5630, file: !5186, line: 249, type: !113)
!5645 = !DILocalVariable(name: "minbucket", scope: !5646, file: !5186, line: 252, type: !105)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !5186, line: 251, column: 19)
!5647 = distinct !DILexicalBlock(scope: !5630, file: !5186, line: 251, column: 6)
!5648 = !DILocalVariable(name: "c", scope: !5646, file: !5186, line: 253, type: !2612)
!5649 = !DILocation(line: 0, scope: !5630)
!5650 = !DILocation(line: 213, column: 11, scope: !5630)
!5651 = !DILocation(line: 232, column: 9, scope: !5640)
!5652 = !DILocation(line: 232, column: 6, scope: !5640)
!5653 = !DILocation(line: 232, column: 6, scope: !5630)
!5654 = !DILocation(line: 236, column: 21, scope: !5643)
!5655 = !DILocation(line: 0, scope: !5639)
!5656 = !DILocation(line: 0, scope: !5643)
!5657 = !DILocation(line: 237, column: 8, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5643, file: !5186, line: 237, column: 8)
!5659 = !DILocation(line: 237, column: 25, scope: !5658)
!5660 = !DILocation(line: 237, column: 8, scope: !5643)
!5661 = !DILocation(line: 238, column: 5, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5658, file: !5186, line: 237, column: 32)
!5663 = !DILocation(line: 241, column: 14, scope: !5643)
!5664 = !DILocation(line: 241, column: 12, scope: !5643)
!5665 = !DILocation(line: 243, column: 12, scope: !5639)
!5666 = !DILocation(line: 243, column: 16, scope: !5639)
!5667 = distinct !{!5667, !5668, !5669}
!5668 = !DILocation(line: 235, column: 3, scope: !5639)
!5669 = !DILocation(line: 243, column: 35, scope: !5639)
!5670 = !DILocation(line: 249, column: 22, scope: !5630)
!5671 = !DILocation(line: 249, column: 39, scope: !5630)
!5672 = !DILocation(line: 249, column: 36, scope: !5630)
!5673 = !DILocation(line: 251, column: 12, scope: !5647)
!5674 = !DILocation(line: 251, column: 6, scope: !5630)
!5675 = !DILocation(line: 252, column: 19, scope: !5646)
!5676 = !DILocation(line: 0, scope: !5646)
!5677 = !DILocation(line: 253, column: 39, scope: !5646)
!5678 = !DILocation(line: 255, column: 3, scope: !5646)
!5679 = !DILocation(line: 261, column: 1, scope: !5630)
!5680 = distinct !DISubprogram(name: "split_chunks", scope: !5186, file: !5186, line: 109, type: !5324, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5681)
!5681 = !{!5682, !5683, !5684, !5685, !5686, !5687}
!5682 = !DILocalVariable(name: "h", arg: 1, scope: !5680, file: !5186, line: 109, type: !2607)
!5683 = !DILocalVariable(name: "lc", arg: 2, scope: !5680, file: !5186, line: 109, type: !2612)
!5684 = !DILocalVariable(name: "rc", arg: 3, scope: !5680, file: !5186, line: 109, type: !2612)
!5685 = !DILocalVariable(name: "sz0", scope: !5680, file: !5186, line: 114, type: !5331)
!5686 = !DILocalVariable(name: "lsz", scope: !5680, file: !5186, line: 115, type: !5331)
!5687 = !DILocalVariable(name: "rsz", scope: !5680, file: !5186, line: 116, type: !5331)
!5688 = !DILocation(line: 0, scope: !5680)
!5689 = !DILocation(line: 114, column: 18, scope: !5680)
!5690 = !DILocation(line: 115, column: 21, scope: !5680)
!5691 = !DILocation(line: 116, column: 22, scope: !5680)
!5692 = !DILocation(line: 118, column: 2, scope: !5680)
!5693 = !DILocation(line: 119, column: 2, scope: !5680)
!5694 = !DILocation(line: 120, column: 2, scope: !5680)
!5695 = !DILocation(line: 121, column: 25, scope: !5680)
!5696 = !DILocation(line: 121, column: 2, scope: !5680)
!5697 = !DILocation(line: 122, column: 1, scope: !5680)
!5698 = distinct !DISubprogram(name: "chunk_mem", scope: !5186, file: !5186, line: 24, type: !5699, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5701)
!5699 = !DISubroutineType(types: !5700)
!5700 = !{!104, !2607, !2612}
!5701 = !{!5702, !5703, !5704, !5705}
!5702 = !DILocalVariable(name: "h", arg: 1, scope: !5698, file: !5186, line: 24, type: !2607)
!5703 = !DILocalVariable(name: "c", arg: 2, scope: !5698, file: !5186, line: 24, type: !2612)
!5704 = !DILocalVariable(name: "buf", scope: !5698, file: !5186, line: 26, type: !2601)
!5705 = !DILocalVariable(name: "ret", scope: !5698, file: !5186, line: 27, type: !432)
!5706 = !DILocation(line: 0, scope: !5698)
!5707 = !DILocation(line: 26, column: 22, scope: !5698)
!5708 = !DILocation(line: 27, column: 38, scope: !5698)
!5709 = !DILocation(line: 31, column: 2, scope: !5698)
!5710 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5186, file: !5186, line: 301, type: !5711, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5713)
!5711 = !DISubroutineType(types: !5712)
!5712 = !{!104, !5189, !111, !111}
!5713 = !{!5714, !5715, !5716, !5717, !5718, !5719, !5720, !5721, !5722, !5723, !5724, !5725}
!5714 = !DILocalVariable(name: "heap", arg: 1, scope: !5710, file: !5186, line: 301, type: !5189)
!5715 = !DILocalVariable(name: "align", arg: 2, scope: !5710, file: !5186, line: 301, type: !111)
!5716 = !DILocalVariable(name: "bytes", arg: 3, scope: !5710, file: !5186, line: 301, type: !111)
!5717 = !DILocalVariable(name: "h", scope: !5710, file: !5186, line: 303, type: !2607)
!5718 = !DILocalVariable(name: "gap", scope: !5710, file: !5186, line: 304, type: !111)
!5719 = !DILocalVariable(name: "rew", scope: !5710, file: !5186, line: 304, type: !111)
!5720 = !DILocalVariable(name: "padded_sz", scope: !5710, file: !5186, line: 335, type: !5331)
!5721 = !DILocalVariable(name: "c0", scope: !5710, file: !5186, line: 336, type: !2612)
!5722 = !DILocalVariable(name: "mem", scope: !5710, file: !5186, line: 341, type: !432)
!5723 = !DILocalVariable(name: "end", scope: !5710, file: !5186, line: 345, type: !2601)
!5724 = !DILocalVariable(name: "c", scope: !5710, file: !5186, line: 348, type: !2612)
!5725 = !DILocalVariable(name: "c_end", scope: !5710, file: !5186, line: 349, type: !2612)
!5726 = !DILocation(line: 0, scope: !5710)
!5727 = !DILocation(line: 303, column: 27, scope: !5710)
!5728 = !DILocation(line: 313, column: 16, scope: !5710)
!5729 = !DILocation(line: 313, column: 14, scope: !5710)
!5730 = !DILocation(line: 314, column: 12, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5710, file: !5186, line: 314, column: 6)
!5732 = !DILocation(line: 314, column: 6, scope: !5710)
!5733 = !DILocation(line: 315, column: 9, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5731, file: !5186, line: 314, column: 20)
!5735 = !DILocation(line: 316, column: 9, scope: !5734)
!5736 = !DILocation(line: 318, column: 13, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5738, file: !5186, line: 318, column: 7)
!5738 = distinct !DILexicalBlock(scope: !5731, file: !5186, line: 317, column: 9)
!5739 = !DILocation(line: 318, column: 7, scope: !5738)
!5740 = !DILocation(line: 319, column: 11, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5737, file: !5186, line: 318, column: 39)
!5742 = !DILocation(line: 319, column: 4, scope: !5741)
!5743 = !DILocation(line: 0, scope: !5731)
!5744 = !DILocation(line: 324, column: 2, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !5186, line: 324, column: 2)
!5746 = distinct !DILexicalBlock(scope: !5710, file: !5186, line: 324, column: 2)
!5747 = !DILocation(line: 324, column: 2, scope: !5746)
!5748 = !DILocation(line: 324, column: 2, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5745, file: !5186, line: 324, column: 2)
!5750 = !DILocation(line: 326, column: 12, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5710, file: !5186, line: 326, column: 6)
!5752 = !DILocation(line: 326, column: 17, scope: !5751)
!5753 = !DILocation(line: 326, column: 20, scope: !5751)
!5754 = !DILocation(line: 326, column: 6, scope: !5710)
!5755 = !DILocation(line: 335, column: 50, scope: !5710)
!5756 = !DILocation(line: 335, column: 58, scope: !5710)
!5757 = !DILocation(line: 335, column: 24, scope: !5710)
!5758 = !DILocation(line: 336, column: 17, scope: !5710)
!5759 = !DILocation(line: 338, column: 9, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5710, file: !5186, line: 338, column: 6)
!5761 = !DILocation(line: 338, column: 6, scope: !5710)
!5762 = !DILocation(line: 341, column: 17, scope: !5710)
!5763 = !DILocation(line: 344, column: 20, scope: !5710)
!5764 = !DILocation(line: 344, column: 8, scope: !5710)
!5765 = !DILocation(line: 344, column: 47, scope: !5710)
!5766 = !DILocation(line: 345, column: 39, scope: !5710)
!5767 = !DILocation(line: 348, column: 16, scope: !5710)
!5768 = !DILocation(line: 349, column: 26, scope: !5710)
!5769 = !DILocation(line: 349, column: 24, scope: !5710)
!5770 = !DILocation(line: 353, column: 8, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5710, file: !5186, line: 353, column: 6)
!5772 = !DILocation(line: 353, column: 6, scope: !5710)
!5773 = !DILocation(line: 354, column: 3, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5771, file: !5186, line: 353, column: 14)
!5775 = !DILocation(line: 355, column: 3, scope: !5774)
!5776 = !DILocation(line: 356, column: 2, scope: !5774)
!5777 = !DILocation(line: 359, column: 6, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5710, file: !5186, line: 359, column: 6)
!5779 = !DILocation(line: 359, column: 24, scope: !5778)
!5780 = !DILocation(line: 359, column: 6, scope: !5710)
!5781 = !DILocation(line: 360, column: 3, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5778, file: !5186, line: 359, column: 33)
!5783 = !DILocation(line: 361, column: 3, scope: !5782)
!5784 = !DILocation(line: 362, column: 2, scope: !5782)
!5785 = !DILocation(line: 364, column: 2, scope: !5710)
!5786 = !DILocation(line: 377, column: 1, scope: !5710)
!5787 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5186, file: !5186, line: 379, type: !5788, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5790)
!5788 = !DISubroutineType(types: !5789)
!5789 = !{!104, !5189, !104, !111, !111}
!5790 = !{!5791, !5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800, !5806, !5807}
!5791 = !DILocalVariable(name: "heap", arg: 1, scope: !5787, file: !5186, line: 379, type: !5189)
!5792 = !DILocalVariable(name: "ptr", arg: 2, scope: !5787, file: !5186, line: 379, type: !104)
!5793 = !DILocalVariable(name: "align", arg: 3, scope: !5787, file: !5186, line: 380, type: !111)
!5794 = !DILocalVariable(name: "bytes", arg: 4, scope: !5787, file: !5186, line: 380, type: !111)
!5795 = !DILocalVariable(name: "h", scope: !5787, file: !5186, line: 382, type: !2607)
!5796 = !DILocalVariable(name: "c", scope: !5787, file: !5186, line: 399, type: !2612)
!5797 = !DILocalVariable(name: "rc", scope: !5787, file: !5186, line: 400, type: !2612)
!5798 = !DILocalVariable(name: "align_gap", scope: !5787, file: !5186, line: 401, type: !111)
!5799 = !DILocalVariable(name: "chunks_need", scope: !5787, file: !5186, line: 402, type: !5331)
!5800 = !DILocalVariable(name: "split_size", scope: !5801, file: !5186, line: 435, type: !5331)
!5801 = distinct !DILexicalBlock(scope: !5802, file: !5186, line: 433, column: 61)
!5802 = distinct !DILexicalBlock(scope: !5803, file: !5186, line: 432, column: 13)
!5803 = distinct !DILexicalBlock(scope: !5804, file: !5186, line: 409, column: 13)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !5186, line: 406, column: 13)
!5805 = distinct !DILexicalBlock(scope: !5787, file: !5186, line: 404, column: 6)
!5806 = !DILocalVariable(name: "ptr2", scope: !5787, file: !5186, line: 474, type: !104)
!5807 = !DILocalVariable(name: "prev_size", scope: !5808, file: !5186, line: 477, type: !111)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !5186, line: 476, column: 20)
!5809 = distinct !DILexicalBlock(scope: !5787, file: !5186, line: 476, column: 6)
!5810 = !DILocation(line: 0, scope: !5787)
!5811 = !DILocation(line: 382, column: 27, scope: !5787)
!5812 = !DILocation(line: 385, column: 10, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5787, file: !5186, line: 385, column: 6)
!5814 = !DILocation(line: 385, column: 6, scope: !5787)
!5815 = !DILocation(line: 386, column: 10, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5813, file: !5186, line: 385, column: 19)
!5817 = !DILocation(line: 386, column: 3, scope: !5816)
!5818 = !DILocation(line: 388, column: 12, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5787, file: !5186, line: 388, column: 6)
!5820 = !DILocation(line: 388, column: 6, scope: !5787)
!5821 = !DILocation(line: 389, column: 3, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5819, file: !5186, line: 388, column: 18)
!5823 = !DILocation(line: 390, column: 3, scope: !5822)
!5824 = !DILocation(line: 393, column: 2, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5826, file: !5186, line: 393, column: 2)
!5826 = distinct !DILexicalBlock(scope: !5787, file: !5186, line: 393, column: 2)
!5827 = !DILocation(line: 393, column: 2, scope: !5826)
!5828 = !DILocation(line: 393, column: 2, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5825, file: !5186, line: 393, column: 2)
!5830 = !DILocation(line: 395, column: 6, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5787, file: !5186, line: 395, column: 6)
!5832 = !DILocation(line: 395, column: 6, scope: !5787)
!5833 = !DILocation(line: 399, column: 16, scope: !5787)
!5834 = !DILocation(line: 400, column: 17, scope: !5787)
!5835 = !DILocation(line: 401, column: 49, scope: !5787)
!5836 = !DILocation(line: 401, column: 36, scope: !5787)
!5837 = !DILocation(line: 402, column: 52, scope: !5787)
!5838 = !DILocation(line: 402, column: 26, scope: !5787)
!5839 = !DILocation(line: 404, column: 6, scope: !5805)
!5840 = !DILocation(line: 404, column: 12, scope: !5805)
!5841 = !DILocation(line: 406, column: 13, scope: !5804)
!5842 = !DILocation(line: 406, column: 30, scope: !5804)
!5843 = !DILocation(line: 406, column: 13, scope: !5805)
!5844 = !DILocation(line: 409, column: 30, scope: !5803)
!5845 = !DILocation(line: 409, column: 13, scope: !5804)
!5846 = !DILocation(line: 420, column: 24, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5803, file: !5186, line: 409, column: 45)
!5848 = !DILocation(line: 420, column: 3, scope: !5847)
!5849 = !DILocation(line: 421, column: 3, scope: !5847)
!5850 = !DILocation(line: 422, column: 3, scope: !5847)
!5851 = !DILocation(line: 431, column: 3, scope: !5847)
!5852 = !DILocation(line: 432, column: 14, scope: !5802)
!5853 = !DILocation(line: 432, column: 32, scope: !5802)
!5854 = !DILocation(line: 433, column: 26, scope: !5802)
!5855 = !DILocation(line: 433, column: 24, scope: !5802)
!5856 = !DILocation(line: 433, column: 44, scope: !5802)
!5857 = !DILocation(line: 432, column: 13, scope: !5803)
!5858 = !DILocation(line: 435, column: 38, scope: !5801)
!5859 = !DILocation(line: 0, scope: !5801)
!5860 = !DILocation(line: 445, column: 3, scope: !5801)
!5861 = !DILocation(line: 447, column: 20, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5801, file: !5186, line: 447, column: 7)
!5863 = !DILocation(line: 447, column: 18, scope: !5862)
!5864 = !DILocation(line: 447, column: 7, scope: !5801)
!5865 = !DILocation(line: 448, column: 27, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5862, file: !5186, line: 447, column: 39)
!5867 = !DILocation(line: 448, column: 4, scope: !5866)
!5868 = !DILocation(line: 449, column: 4, scope: !5866)
!5869 = !DILocation(line: 450, column: 3, scope: !5866)
!5870 = !DILocation(line: 452, column: 3, scope: !5801)
!5871 = !DILocation(line: 453, column: 3, scope: !5801)
!5872 = !DILocation(line: 474, column: 15, scope: !5787)
!5873 = !DILocation(line: 476, column: 11, scope: !5809)
!5874 = !DILocation(line: 476, column: 6, scope: !5787)
!5875 = !DILocation(line: 477, column: 42, scope: !5808)
!5876 = !DILocation(line: 477, column: 22, scope: !5808)
!5877 = !DILocation(line: 477, column: 60, scope: !5808)
!5878 = !DILocation(line: 0, scope: !5808)
!5879 = !DILocation(line: 479, column: 21, scope: !5808)
!5880 = !DILocation(line: 479, column: 3, scope: !5808)
!5881 = !DILocation(line: 480, column: 3, scope: !5808)
!5882 = !DILocation(line: 481, column: 2, scope: !5808)
!5883 = !DILocation(line: 483, column: 1, scope: !5787)
!5884 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2594, file: !2594, line: 245, type: !5885, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5887)
!5885 = !DISubroutineType(types: !5886)
!5886 = !{!111, !2607, !5331}
!5887 = !{!5888, !5889}
!5888 = !DILocalVariable(name: "h", arg: 1, scope: !5884, file: !2594, line: 245, type: !2607)
!5889 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5884, file: !2594, line: 245, type: !5331)
!5890 = !DILocation(line: 0, scope: !5884)
!5891 = !DILocation(line: 247, column: 20, scope: !5884)
!5892 = !DILocation(line: 247, column: 33, scope: !5884)
!5893 = !DILocation(line: 247, column: 2, scope: !5884)
!5894 = distinct !DISubprogram(name: "sys_heap_init", scope: !5186, file: !5186, line: 485, type: !5895, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5897)
!5895 = !DISubroutineType(types: !5896)
!5896 = !{null, !5189, !104, !111}
!5897 = !{!5898, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5907}
!5898 = !DILocalVariable(name: "heap", arg: 1, scope: !5894, file: !5186, line: 485, type: !5189)
!5899 = !DILocalVariable(name: "mem", arg: 2, scope: !5894, file: !5186, line: 485, type: !104)
!5900 = !DILocalVariable(name: "bytes", arg: 3, scope: !5894, file: !5186, line: 485, type: !111)
!5901 = !DILocalVariable(name: "addr", scope: !5894, file: !5186, line: 502, type: !22)
!5902 = !DILocalVariable(name: "end", scope: !5894, file: !5186, line: 503, type: !22)
!5903 = !DILocalVariable(name: "heap_sz", scope: !5894, file: !5186, line: 504, type: !5331)
!5904 = !DILocalVariable(name: "h", scope: !5894, file: !5186, line: 509, type: !2607)
!5905 = !DILocalVariable(name: "nb_buckets", scope: !5894, file: !5186, line: 520, type: !105)
!5906 = !DILocalVariable(name: "chunk0_size", scope: !5894, file: !5186, line: 521, type: !5331)
!5907 = !DILocalVariable(name: "i", scope: !5908, file: !5186, line: 526, type: !105)
!5908 = distinct !DILexicalBlock(scope: !5894, file: !5186, line: 526, column: 2)
!5909 = !DILocation(line: 0, scope: !5894)
!5910 = !DILocation(line: 491, column: 3, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5912, file: !5186, line: 491, column: 3)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !5186, line: 491, column: 3)
!5913 = distinct !DILexicalBlock(scope: !5914, file: !5186, line: 489, column: 46)
!5914 = distinct !DILexicalBlock(scope: !5894, file: !5186, line: 489, column: 6)
!5915 = !DILocation(line: 491, column: 3, scope: !5912)
!5916 = !DILocation(line: 491, column: 3, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5911, file: !5186, line: 491, column: 3)
!5918 = !DILocation(line: 498, column: 2, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5920, file: !5186, line: 498, column: 2)
!5920 = distinct !DILexicalBlock(scope: !5894, file: !5186, line: 498, column: 2)
!5921 = !DILocation(line: 498, column: 2, scope: !5920)
!5922 = !DILocation(line: 498, column: 2, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5919, file: !5186, line: 498, column: 2)
!5924 = !DILocation(line: 499, column: 8, scope: !5894)
!5925 = !DILocation(line: 502, column: 19, scope: !5894)
!5926 = !DILocation(line: 503, column: 18, scope: !5894)
!5927 = !DILocation(line: 504, column: 27, scope: !5894)
!5928 = !DILocation(line: 504, column: 35, scope: !5894)
!5929 = !DILocation(line: 507, column: 2, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5931, file: !5186, line: 507, column: 2)
!5931 = distinct !DILexicalBlock(scope: !5894, file: !5186, line: 507, column: 2)
!5932 = !DILocation(line: 507, column: 2, scope: !5931)
!5933 = !DILocation(line: 507, column: 2, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5930, file: !5186, line: 507, column: 2)
!5935 = !DILocation(line: 509, column: 21, scope: !5894)
!5936 = !DILocation(line: 510, column: 8, scope: !5894)
!5937 = !DILocation(line: 510, column: 13, scope: !5894)
!5938 = !DILocation(line: 511, column: 5, scope: !5894)
!5939 = !DILocation(line: 511, column: 15, scope: !5894)
!5940 = !DILocation(line: 512, column: 5, scope: !5894)
!5941 = !DILocation(line: 512, column: 19, scope: !5894)
!5942 = !DILocation(line: 520, column: 19, scope: !5894)
!5943 = !DILocation(line: 522, column: 21, scope: !5894)
!5944 = !DILocation(line: 521, column: 56, scope: !5894)
!5945 = !DILocation(line: 521, column: 26, scope: !5894)
!5946 = !DILocation(line: 524, column: 2, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5948, file: !5186, line: 524, column: 2)
!5948 = distinct !DILexicalBlock(scope: !5894, file: !5186, line: 524, column: 2)
!5949 = !DILocation(line: 524, column: 2, scope: !5948)
!5950 = !DILocation(line: 0, scope: !5908)
!5951 = !DILocation(line: 526, column: 20, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5908, file: !5186, line: 526, column: 2)
!5953 = !DILocation(line: 526, column: 2, scope: !5908)
!5954 = !DILocation(line: 524, column: 2, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5947, file: !5186, line: 524, column: 2)
!5956 = !DILocation(line: 531, column: 2, scope: !5894)
!5957 = !DILocation(line: 532, column: 2, scope: !5894)
!5958 = !DILocation(line: 533, column: 2, scope: !5894)
!5959 = !DILocation(line: 536, column: 41, scope: !5894)
!5960 = !DILocation(line: 536, column: 2, scope: !5894)
!5961 = !DILocation(line: 537, column: 2, scope: !5894)
!5962 = !DILocation(line: 540, column: 2, scope: !5894)
!5963 = !DILocation(line: 541, column: 2, scope: !5894)
!5964 = !DILocation(line: 542, column: 2, scope: !5894)
!5965 = !DILocation(line: 544, column: 2, scope: !5894)
!5966 = !DILocation(line: 545, column: 1, scope: !5894)
!5967 = !DILocation(line: 527, column: 17, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5952, file: !5186, line: 526, column: 39)
!5969 = !DILocation(line: 527, column: 22, scope: !5968)
!5970 = !DILocation(line: 526, column: 35, scope: !5952)
!5971 = distinct !{!5971, !5953, !5972}
!5972 = !DILocation(line: 528, column: 2, scope: !5908)
!5973 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2627, file: !2627, line: 1338, type: !5974, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !5982)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{!105, !4342, !104, !269, !5976, !113}
!5976 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3960, line: 99, baseType: !5977)
!5977 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3960, line: 40, baseType: !5978)
!5978 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2627, baseType: !5979)
!5979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5980)
!5980 = !{!5981}
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5979, file: !2627, baseType: !104, size: 32)
!5982 = !{!5983, !5984, !5985, !5986, !5987, !5988, !5992, !5993, !5994, !5996, !6001, !6044, !6047, !6050, !6051, !6052, !6053, !6054, !6055, !6056, !6059, !6060, !6061, !6065, !6068, !6070, !6073, !6074, !6075, !6080, !6086, !6089, !6093, !6099, !6103, !6106, !6108, !6111}
!5983 = !DILocalVariable(name: "out", arg: 1, scope: !5973, file: !2627, line: 1338, type: !4342)
!5984 = !DILocalVariable(name: "ctx", arg: 2, scope: !5973, file: !2627, line: 1338, type: !104)
!5985 = !DILocalVariable(name: "fp", arg: 3, scope: !5973, file: !2627, line: 1338, type: !269)
!5986 = !DILocalVariable(name: "ap", arg: 4, scope: !5973, file: !2627, line: 1339, type: !5976)
!5987 = !DILocalVariable(name: "flags", arg: 5, scope: !5973, file: !2627, line: 1339, type: !113)
!5988 = !DILocalVariable(name: "buf", scope: !5973, file: !2627, line: 1341, type: !5989)
!5989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 176, elements: !5990)
!5990 = !{!5991}
!5991 = !DISubrange(count: 22)
!5992 = !DILocalVariable(name: "count", scope: !5973, file: !2627, line: 1342, type: !111)
!5993 = !DILocalVariable(name: "sint", scope: !5973, file: !2627, line: 1343, type: !2646)
!5994 = !DILocalVariable(name: "tagged_ap", scope: !5973, file: !2627, line: 1345, type: !5995)
!5995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !505)
!5996 = !DILocalVariable(name: "rc", scope: !5997, file: !2627, line: 1377, type: !105)
!5997 = distinct !DILexicalBlock(scope: !5998, file: !2627, line: 1377, column: 4)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !2627, line: 1376, column: 19)
!5999 = distinct !DILexicalBlock(scope: !6000, file: !2627, line: 1376, column: 7)
!6000 = distinct !DILexicalBlock(scope: !5973, file: !2627, line: 1375, column: 19)
!6001 = !DILocalVariable(name: "state", scope: !6000, file: !2627, line: 1395, type: !6002)
!6002 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5973, file: !2627, line: 1392, size: 192, elements: !6003)
!6003 = !{!6004, !6012}
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6002, file: !2627, line: 1393, baseType: !6005, size: 64)
!6005 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2627, line: 166, size: 64, elements: !6006)
!6006 = !{!6007, !6008, !6009, !6010, !6011}
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !6005, file: !2627, line: 168, baseType: !2646, size: 64)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !6005, file: !2627, line: 171, baseType: !2649, size: 64)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !6005, file: !2627, line: 174, baseType: !426, size: 64)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !6005, file: !2627, line: 177, baseType: !424, size: 64)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6005, file: !2627, line: 180, baseType: !104, size: 32)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !6002, file: !2627, line: 1394, baseType: !6013, size: 96, offset: 64)
!6013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2627, line: 189, size: 96, elements: !6014)
!6014 = !{!6015, !6016, !6017, !6018, !6019, !6020, !6021, !6022, !6023, !6024, !6025, !6026, !6027, !6028, !6029, !6030, !6031, !6032, !6033, !6034, !6039}
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !6013, file: !2627, line: 191, baseType: !505, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !6013, file: !2627, line: 194, baseType: !505, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !6013, file: !2627, line: 197, baseType: !505, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !6013, file: !2627, line: 200, baseType: !505, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !6013, file: !2627, line: 203, baseType: !505, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !6013, file: !2627, line: 206, baseType: !505, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !6013, file: !2627, line: 209, baseType: !505, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !6013, file: !2627, line: 212, baseType: !505, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !6013, file: !2627, line: 219, baseType: !505, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !6013, file: !2627, line: 222, baseType: !505, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !6013, file: !2627, line: 229, baseType: !505, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !6013, file: !2627, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !6013, file: !2627, line: 238, baseType: !505, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !6013, file: !2627, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !6013, file: !2627, line: 244, baseType: !505, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !6013, file: !2627, line: 247, baseType: !505, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !6013, file: !2627, line: 252, baseType: !505, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !6013, file: !2627, line: 257, baseType: !505, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !6013, file: !2627, line: 260, baseType: !170, size: 8, offset: 24)
!6034 = !DIDerivedType(tag: DW_TAG_member, scope: !6013, file: !2627, line: 262, baseType: !6035, size: 32, offset: 32)
!6035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6013, file: !2627, line: 262, size: 32, elements: !6036)
!6036 = !{!6037, !6038}
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !6035, file: !2627, line: 267, baseType: !105, size: 32)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !6035, file: !2627, line: 289, baseType: !105, size: 32)
!6039 = !DIDerivedType(tag: DW_TAG_member, scope: !6013, file: !2627, line: 292, baseType: !6040, size: 32, offset: 64)
!6040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6013, file: !2627, line: 292, size: 32, elements: !6041)
!6041 = !{!6042, !6043}
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !6040, file: !2627, line: 297, baseType: !105, size: 32)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !6040, file: !2627, line: 306, baseType: !105, size: 32)
!6044 = !DILocalVariable(name: "conv", scope: !6000, file: !2627, line: 1400, type: !6045)
!6045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6046)
!6046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6013, size: 32)
!6047 = !DILocalVariable(name: "value", scope: !6000, file: !2627, line: 1401, type: !6048)
!6048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6049)
!6049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6005, size: 32)
!6050 = !DILocalVariable(name: "sp", scope: !6000, file: !2627, line: 1402, type: !269)
!6051 = !DILocalVariable(name: "width", scope: !6000, file: !2627, line: 1403, type: !105)
!6052 = !DILocalVariable(name: "precision", scope: !6000, file: !2627, line: 1404, type: !105)
!6053 = !DILocalVariable(name: "bps", scope: !6000, file: !2627, line: 1405, type: !269)
!6054 = !DILocalVariable(name: "bpe", scope: !6000, file: !2627, line: 1406, type: !269)
!6055 = !DILocalVariable(name: "sign", scope: !6000, file: !2627, line: 1407, type: !103)
!6056 = !DILocalVariable(name: "arg", scope: !6057, file: !2627, line: 1432, type: !105)
!6057 = distinct !DILexicalBlock(scope: !6058, file: !2627, line: 1431, column: 24)
!6058 = distinct !DILexicalBlock(scope: !6000, file: !2627, line: 1431, column: 7)
!6059 = !DILocalVariable(name: "specifier_cat", scope: !6000, file: !2627, line: 1468, type: !2626)
!6060 = !DILocalVariable(name: "length_mod", scope: !6000, file: !2627, line: 1470, type: !2634)
!6061 = !DILocalVariable(name: "rc", scope: !6062, file: !2627, line: 1575, type: !105)
!6062 = distinct !DILexicalBlock(scope: !6063, file: !2627, line: 1575, column: 4)
!6063 = distinct !DILexicalBlock(scope: !6064, file: !2627, line: 1574, column: 43)
!6064 = distinct !DILexicalBlock(scope: !6000, file: !2627, line: 1574, column: 7)
!6065 = !DILocalVariable(name: "rc", scope: !6066, file: !2627, line: 1584, type: !105)
!6066 = distinct !DILexicalBlock(scope: !6067, file: !2627, line: 1584, column: 4)
!6067 = distinct !DILexicalBlock(scope: !6000, file: !2627, line: 1582, column: 28)
!6068 = !DILocalVariable(name: "len", scope: !6069, file: !2627, line: 1589, type: !111)
!6069 = distinct !DILexicalBlock(scope: !6067, file: !2627, line: 1586, column: 13)
!6070 = !DILocalVariable(name: "len", scope: !6071, file: !2627, line: 1641, type: !111)
!6071 = distinct !DILexicalBlock(scope: !6072, file: !2627, line: 1640, column: 24)
!6072 = distinct !DILexicalBlock(scope: !6067, file: !2627, line: 1640, column: 8)
!6073 = !DILocalVariable(name: "nj_len", scope: !6000, file: !2627, line: 1722, type: !111)
!6074 = !DILocalVariable(name: "pad_len", scope: !6000, file: !2627, line: 1723, type: !105)
!6075 = !DILocalVariable(name: "pad", scope: !6076, file: !2627, line: 1751, type: !103)
!6076 = distinct !DILexicalBlock(scope: !6077, file: !2627, line: 1750, column: 26)
!6077 = distinct !DILexicalBlock(scope: !6078, file: !2627, line: 1750, column: 8)
!6078 = distinct !DILexicalBlock(scope: !6079, file: !2627, line: 1747, column: 18)
!6079 = distinct !DILexicalBlock(scope: !6000, file: !2627, line: 1747, column: 7)
!6080 = !DILocalVariable(name: "rc", scope: !6081, file: !2627, line: 1758, type: !105)
!6081 = distinct !DILexicalBlock(scope: !6082, file: !2627, line: 1758, column: 7)
!6082 = distinct !DILexicalBlock(scope: !6083, file: !2627, line: 1757, column: 21)
!6083 = distinct !DILexicalBlock(scope: !6084, file: !2627, line: 1757, column: 10)
!6084 = distinct !DILexicalBlock(scope: !6085, file: !2627, line: 1756, column: 26)
!6085 = distinct !DILexicalBlock(scope: !6076, file: !2627, line: 1756, column: 9)
!6086 = !DILocalVariable(name: "rc", scope: !6087, file: !2627, line: 1765, type: !105)
!6087 = distinct !DILexicalBlock(scope: !6088, file: !2627, line: 1765, column: 6)
!6088 = distinct !DILexicalBlock(scope: !6076, file: !2627, line: 1764, column: 25)
!6089 = !DILocalVariable(name: "rc", scope: !6090, file: !2627, line: 1774, type: !105)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !2627, line: 1774, column: 4)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !2627, line: 1773, column: 18)
!6092 = distinct !DILexicalBlock(scope: !6000, file: !2627, line: 1773, column: 7)
!6093 = !DILocalVariable(name: "rc", scope: !6094, file: !2627, line: 1819, type: !105)
!6094 = distinct !DILexicalBlock(scope: !6095, file: !2627, line: 1819, column: 5)
!6095 = distinct !DILexicalBlock(scope: !6096, file: !2627, line: 1818, column: 44)
!6096 = distinct !DILexicalBlock(scope: !6097, file: !2627, line: 1818, column: 8)
!6097 = distinct !DILexicalBlock(scope: !6098, file: !2627, line: 1817, column: 10)
!6098 = distinct !DILexicalBlock(scope: !6000, file: !2627, line: 1777, column: 7)
!6099 = !DILocalVariable(name: "rc", scope: !6100, file: !2627, line: 1823, type: !105)
!6100 = distinct !DILexicalBlock(scope: !6101, file: !2627, line: 1823, column: 5)
!6101 = distinct !DILexicalBlock(scope: !6102, file: !2627, line: 1822, column: 26)
!6102 = distinct !DILexicalBlock(scope: !6097, file: !2627, line: 1822, column: 8)
!6103 = !DILocalVariable(name: "rc", scope: !6104, file: !2627, line: 1828, type: !105)
!6104 = distinct !DILexicalBlock(scope: !6105, file: !2627, line: 1828, column: 5)
!6105 = distinct !DILexicalBlock(scope: !6097, file: !2627, line: 1827, column: 26)
!6106 = !DILocalVariable(name: "rc", scope: !6107, file: !2627, line: 1831, type: !105)
!6107 = distinct !DILexicalBlock(scope: !6097, file: !2627, line: 1831, column: 4)
!6108 = !DILocalVariable(name: "rc", scope: !6109, file: !2627, line: 1836, type: !105)
!6109 = distinct !DILexicalBlock(scope: !6110, file: !2627, line: 1836, column: 4)
!6110 = distinct !DILexicalBlock(scope: !6000, file: !2627, line: 1835, column: 21)
!6111 = !DILabel(scope: !6067, name: "prec_int_pad0", file: !2627, line: 1634)
!6112 = !DILocation(line: 0, scope: !5973)
!6113 = !DILocation(line: 1341, column: 2, scope: !5973)
!6114 = !DILocation(line: 1341, column: 7, scope: !5973)
!6115 = !DILocation(line: 1375, column: 2, scope: !5973)
!6116 = !DILocation(line: 1342, column: 9, scope: !5973)
!6117 = !DILocation(line: 1375, column: 9, scope: !5973)
!6118 = !DILocation(line: 1377, column: 4, scope: !5997)
!6119 = !DILocation(line: 0, scope: !5997)
!6120 = !DILocation(line: 1377, column: 4, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !5997, file: !2627, line: 1377, column: 4)
!6122 = distinct !{!6122, !6115, !6123}
!6123 = !DILocation(line: 1839, column: 2, scope: !5973)
!6124 = !DILocation(line: 1392, column: 3, scope: !6000)
!6125 = !DILocation(line: 1395, column: 5, scope: !6000)
!6126 = !DILocation(line: 0, scope: !6000)
!6127 = !DILocation(line: 1409, column: 8, scope: !6000)
!6128 = !DILocation(line: 1414, column: 13, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6000, file: !2627, line: 1414, column: 7)
!6130 = !DILocation(line: 1414, column: 7, scope: !6000)
!6131 = !DILocation(line: 1415, column: 12, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6129, file: !2627, line: 1414, column: 25)
!6133 = !DILocation(line: 1417, column: 14, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6132, file: !2627, line: 1417, column: 8)
!6135 = !DILocation(line: 1417, column: 8, scope: !6132)
!6136 = !DILocation(line: 1418, column: 21, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6134, file: !2627, line: 1417, column: 19)
!6138 = !DILocation(line: 1419, column: 13, scope: !6137)
!6139 = !DILocation(line: 1420, column: 4, scope: !6137)
!6140 = !DILocation(line: 1421, column: 20, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6129, file: !2627, line: 1421, column: 14)
!6142 = !DILocation(line: 1421, column: 14, scope: !6129)
!6143 = !DILocation(line: 1431, column: 13, scope: !6058)
!6144 = !DILocation(line: 1431, column: 7, scope: !6000)
!6145 = !DILocation(line: 1432, column: 14, scope: !6057)
!6146 = !DILocation(line: 0, scope: !6057)
!6147 = !DILocation(line: 1434, column: 12, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6057, file: !2627, line: 1434, column: 8)
!6149 = !DILocation(line: 1434, column: 8, scope: !6057)
!6150 = !DILocation(line: 1435, column: 24, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6148, file: !2627, line: 1434, column: 17)
!6152 = !DILocation(line: 1436, column: 4, scope: !6151)
!6153 = !DILocation(line: 1439, column: 20, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6058, file: !2627, line: 1439, column: 14)
!6155 = !DILocation(line: 1439, column: 14, scope: !6058)
!6156 = !DILocation(line: 1469, column: 37, scope: !6000)
!6157 = !DILocation(line: 1448, column: 20, scope: !6000)
!6158 = !DILocation(line: 1449, column: 22, scope: !6000)
!6159 = !DILocation(line: 1471, column: 34, scope: !6000)
!6160 = !DILocation(line: 1478, column: 7, scope: !6000)
!6161 = !DILocation(line: 1479, column: 4, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !2627, line: 1478, column: 40)
!6163 = distinct !DILexicalBlock(scope: !6000, file: !2627, line: 1478, column: 7)
!6164 = !DILocation(line: 1484, column: 19, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6162, file: !2627, line: 1479, column: 24)
!6166 = !DILocation(line: 1484, column: 17, scope: !6165)
!6167 = !DILocation(line: 1485, column: 5, scope: !6165)
!6168 = !DILocation(line: 1492, column: 20, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6170, file: !2627, line: 1491, column: 12)
!6170 = distinct !DILexicalBlock(scope: !6165, file: !2627, line: 1487, column: 9)
!6171 = !DILocation(line: 1492, column: 18, scope: !6169)
!6172 = !DILocation(line: 1494, column: 5, scope: !6165)
!6173 = !DILocation(line: 1497, column: 23, scope: !6165)
!6174 = !DILocation(line: 1496, column: 17, scope: !6165)
!6175 = !DILocation(line: 1498, column: 5, scope: !6165)
!6176 = !DILocation(line: 1501, column: 23, scope: !6165)
!6177 = !DILocation(line: 1500, column: 17, scope: !6165)
!6178 = !DILocation(line: 1502, column: 5, scope: !6165)
!6179 = !DILocation(line: 1513, column: 23, scope: !6165)
!6180 = !DILocation(line: 1513, column: 6, scope: !6165)
!6181 = !DILocation(line: 1512, column: 17, scope: !6165)
!6182 = !DILocation(line: 1514, column: 5, scope: !6165)
!6183 = !DILocation(line: 0, scope: !6165)
!6184 = !DILocation(line: 1516, column: 8, scope: !6162)
!6185 = !DILocation(line: 1517, column: 19, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6187, file: !2627, line: 1516, column: 33)
!6187 = distinct !DILexicalBlock(scope: !6162, file: !2627, line: 1516, column: 8)
!6188 = !DILocation(line: 1517, column: 17, scope: !6186)
!6189 = !DILocation(line: 1518, column: 4, scope: !6186)
!6190 = !DILocation(line: 1519, column: 19, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6192, file: !2627, line: 1518, column: 39)
!6192 = distinct !DILexicalBlock(scope: !6187, file: !2627, line: 1518, column: 15)
!6193 = !DILocation(line: 1519, column: 17, scope: !6191)
!6194 = !DILocation(line: 1520, column: 4, scope: !6191)
!6195 = !DILocation(line: 1522, column: 4, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6197, file: !2627, line: 1521, column: 47)
!6197 = distinct !DILexicalBlock(scope: !6163, file: !2627, line: 1521, column: 14)
!6198 = !DILocation(line: 1527, column: 19, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6196, file: !2627, line: 1522, column: 24)
!6200 = !DILocation(line: 1527, column: 17, scope: !6199)
!6201 = !DILocation(line: 1528, column: 5, scope: !6199)
!6202 = !DILocation(line: 0, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6199, file: !2627, line: 1530, column: 9)
!6204 = !DILocation(line: 1540, column: 23, scope: !6199)
!6205 = !DILocation(line: 1539, column: 17, scope: !6199)
!6206 = !DILocation(line: 1542, column: 5, scope: !6199)
!6207 = !DILocation(line: 1545, column: 23, scope: !6199)
!6208 = !DILocation(line: 1544, column: 17, scope: !6199)
!6209 = !DILocation(line: 1547, column: 5, scope: !6199)
!6210 = !DILocation(line: 1551, column: 23, scope: !6199)
!6211 = !DILocation(line: 1551, column: 6, scope: !6199)
!6212 = !DILocation(line: 1550, column: 17, scope: !6199)
!6213 = !DILocation(line: 1552, column: 5, scope: !6199)
!6214 = !DILocation(line: 0, scope: !6199)
!6215 = !DILocation(line: 1554, column: 8, scope: !6196)
!6216 = !DILocation(line: 1555, column: 19, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !2627, line: 1554, column: 33)
!6218 = distinct !DILexicalBlock(scope: !6196, file: !2627, line: 1554, column: 8)
!6219 = !DILocation(line: 1555, column: 17, scope: !6217)
!6220 = !DILocation(line: 1556, column: 4, scope: !6217)
!6221 = !DILocation(line: 1557, column: 19, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6223, file: !2627, line: 1556, column: 39)
!6223 = distinct !DILexicalBlock(scope: !6218, file: !2627, line: 1556, column: 15)
!6224 = !DILocation(line: 1557, column: 17, scope: !6222)
!6225 = !DILocation(line: 1558, column: 4, scope: !6222)
!6226 = !DILocation(line: 0, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6228, file: !2627, line: 1560, column: 8)
!6228 = distinct !DILexicalBlock(scope: !6229, file: !2627, line: 1559, column: 45)
!6229 = distinct !DILexicalBlock(scope: !6197, file: !2627, line: 1559, column: 14)
!6230 = !DILocation(line: 1566, column: 17, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6232, file: !2627, line: 1565, column: 46)
!6232 = distinct !DILexicalBlock(scope: !6229, file: !2627, line: 1565, column: 14)
!6233 = !DILocation(line: 1566, column: 15, scope: !6231)
!6234 = !DILocation(line: 1567, column: 3, scope: !6231)
!6235 = !DILocation(line: 1574, column: 21, scope: !6064)
!6236 = !DILocation(line: 1575, column: 4, scope: !6062)
!6237 = !DILocation(line: 0, scope: !6062)
!6238 = !DILocation(line: 1575, column: 4, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6062, file: !2627, line: 1575, column: 4)
!6240 = !DILocation(line: 1582, column: 17, scope: !6000)
!6241 = !DILocation(line: 1582, column: 3, scope: !6000)
!6242 = !DILocation(line: 1584, column: 4, scope: !6066)
!6243 = !DILocation(line: 0, scope: !6066)
!6244 = !DILocation(line: 1584, column: 4, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6066, file: !2627, line: 1584, column: 4)
!6246 = !DILocation(line: 1587, column: 31, scope: !6069)
!6247 = !DILocation(line: 1591, column: 18, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6069, file: !2627, line: 1591, column: 8)
!6249 = !DILocation(line: 1591, column: 8, scope: !6069)
!6250 = !DILocation(line: 1592, column: 11, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6248, file: !2627, line: 1591, column: 24)
!6252 = !DILocation(line: 0, scope: !6069)
!6253 = !DILocation(line: 1593, column: 4, scope: !6251)
!6254 = !DILocation(line: 1594, column: 11, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6248, file: !2627, line: 1593, column: 11)
!6256 = !DILocation(line: 1604, column: 51, scope: !6067)
!6257 = !DILocation(line: 1604, column: 13, scope: !6067)
!6258 = !DILocation(line: 1604, column: 11, scope: !6067)
!6259 = !DILocation(line: 1606, column: 4, scope: !6067)
!6260 = !DILocation(line: 1609, column: 14, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6067, file: !2627, line: 1609, column: 8)
!6262 = !DILocation(line: 1609, column: 8, scope: !6067)
!6263 = !DILocation(line: 1619, column: 18, scope: !6067)
!6264 = !DILocation(line: 1620, column: 13, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6067, file: !2627, line: 1620, column: 8)
!6266 = !DILocation(line: 1620, column: 8, scope: !6067)
!6267 = !DILocation(line: 1622, column: 36, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6265, file: !2627, line: 1620, column: 18)
!6269 = !DILocation(line: 1622, column: 17, scope: !6268)
!6270 = !DILocation(line: 1623, column: 4, scope: !6268)
!6271 = !DILocation(line: 1632, column: 29, scope: !6067)
!6272 = !DILocation(line: 1632, column: 10, scope: !6067)
!6273 = !DILocation(line: 1632, column: 4, scope: !6067)
!6274 = !DILocation(line: 1407, column: 8, scope: !6000)
!6275 = !DILocation(line: 0, scope: !6067)
!6276 = !DILocation(line: 1634, column: 3, scope: !6067)
!6277 = !DILocation(line: 1640, column: 18, scope: !6072)
!6278 = !DILocation(line: 1640, column: 8, scope: !6067)
!6279 = !DILocation(line: 1729, column: 13, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6000, file: !2627, line: 1729, column: 7)
!6281 = !DILocation(line: 1641, column: 22, scope: !6071)
!6282 = !DILocation(line: 0, scope: !6071)
!6283 = !DILocation(line: 1646, column: 21, scope: !6071)
!6284 = !DILocation(line: 1649, column: 13, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6071, file: !2627, line: 1649, column: 9)
!6286 = !DILocation(line: 1649, column: 9, scope: !6071)
!6287 = !DILocation(line: 1650, column: 35, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6285, file: !2627, line: 1649, column: 34)
!6289 = !DILocation(line: 1650, column: 23, scope: !6288)
!6290 = !DILocation(line: 1651, column: 5, scope: !6288)
!6291 = !DILocation(line: 1660, column: 15, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6067, file: !2627, line: 1660, column: 8)
!6293 = !DILocation(line: 1660, column: 19, scope: !6292)
!6294 = !DILocation(line: 1660, column: 8, scope: !6067)
!6295 = !DILocation(line: 1661, column: 23, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6292, file: !2627, line: 1660, column: 28)
!6297 = !DILocation(line: 1661, column: 11, scope: !6296)
!6298 = !DILocation(line: 1665, column: 22, scope: !6296)
!6299 = !DILocation(line: 1666, column: 21, scope: !6296)
!6300 = !DILocation(line: 1668, column: 5, scope: !6296)
!6301 = !DILocation(line: 1677, column: 30, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6303, file: !2627, line: 1676, column: 49)
!6303 = distinct !DILexicalBlock(scope: !6067, file: !2627, line: 1676, column: 8)
!6304 = !DILocation(line: 1677, column: 5, scope: !6302)
!6305 = !DILocation(line: 1680, column: 4, scope: !6067)
!6306 = !DILocation(line: 0, scope: !6248)
!6307 = !DILocation(line: 1597, column: 14, scope: !6069)
!6308 = !DILocation(line: 1699, column: 11, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6000, file: !2627, line: 1699, column: 7)
!6310 = !DILocation(line: 1699, column: 7, scope: !6000)
!6311 = !DILocation(line: 1725, column: 7, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6000, file: !2627, line: 1725, column: 7)
!6313 = !DILocation(line: 1725, column: 12, scope: !6312)
!6314 = !DILocation(line: 1747, column: 13, scope: !6079)
!6315 = !DILocation(line: 1747, column: 7, scope: !6000)
!6316 = !DILocation(line: 1722, column: 24, scope: !6000)
!6317 = !DILocation(line: 1725, column: 7, scope: !6000)
!6318 = !DILocation(line: 1729, column: 7, scope: !6000)
!6319 = !DILocation(line: 1736, column: 13, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6000, file: !2627, line: 1736, column: 7)
!6321 = !DILocation(line: 1735, column: 19, scope: !6000)
!6322 = !DILocation(line: 1736, column: 7, scope: !6000)
!6323 = !DILocation(line: 1748, column: 10, scope: !6078)
!6324 = !DILocation(line: 1750, column: 15, scope: !6077)
!6325 = !DILocation(line: 1750, column: 8, scope: !6078)
!6326 = !DILocation(line: 0, scope: !6076)
!6327 = !DILocation(line: 1756, column: 15, scope: !6085)
!6328 = !DILocation(line: 1756, column: 9, scope: !6076)
!6329 = !DILocation(line: 1758, column: 7, scope: !6081)
!6330 = !DILocation(line: 0, scope: !6081)
!6331 = !DILocation(line: 1758, column: 7, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6081, file: !2627, line: 1758, column: 7)
!6333 = !DILocation(line: 1764, column: 5, scope: !6076)
!6334 = !DILocation(line: 0, scope: !6078)
!6335 = !DILocation(line: 1764, column: 20, scope: !6076)
!6336 = !DILocation(line: 1764, column: 17, scope: !6076)
!6337 = !DILocation(line: 1765, column: 6, scope: !6087)
!6338 = !DILocation(line: 0, scope: !6087)
!6339 = !DILocation(line: 1765, column: 6, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6087, file: !2627, line: 1765, column: 6)
!6341 = distinct !{!6341, !6333, !6342}
!6342 = !DILocation(line: 1766, column: 5, scope: !6076)
!6343 = !DILocation(line: 1773, column: 12, scope: !6092)
!6344 = !DILocation(line: 1773, column: 7, scope: !6000)
!6345 = !DILocation(line: 1773, column: 7, scope: !6092)
!6346 = !DILocation(line: 1774, column: 4, scope: !6090)
!6347 = !DILocation(line: 0, scope: !6090)
!6348 = !DILocation(line: 1774, column: 4, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6090, file: !2627, line: 1774, column: 4)
!6350 = !DILocation(line: 1818, column: 8, scope: !6096)
!6351 = !DILocation(line: 1818, column: 27, scope: !6096)
!6352 = !DILocation(line: 1818, column: 25, scope: !6096)
!6353 = !DILocation(line: 1818, column: 8, scope: !6097)
!6354 = !DILocation(line: 1819, column: 5, scope: !6094)
!6355 = !DILocation(line: 0, scope: !6094)
!6356 = !DILocation(line: 1819, column: 5, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6094, file: !2627, line: 1819, column: 5)
!6358 = !DILocation(line: 1822, column: 14, scope: !6102)
!6359 = !DILocation(line: 1822, column: 8, scope: !6097)
!6360 = !DILocation(line: 1823, column: 5, scope: !6100)
!6361 = !DILocation(line: 0, scope: !6100)
!6362 = !DILocation(line: 1823, column: 5, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6100, file: !2627, line: 1823, column: 5)
!6364 = !DILocation(line: 1826, column: 20, scope: !6097)
!6365 = !DILocation(line: 1827, column: 4, scope: !6097)
!6366 = !DILocation(line: 0, scope: !6097)
!6367 = !DILocation(line: 1827, column: 21, scope: !6097)
!6368 = !DILocation(line: 1827, column: 18, scope: !6097)
!6369 = !DILocation(line: 1828, column: 5, scope: !6104)
!6370 = !DILocation(line: 0, scope: !6104)
!6371 = !DILocation(line: 1828, column: 5, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6104, file: !2627, line: 1828, column: 5)
!6373 = distinct !{!6373, !6365, !6374}
!6374 = !DILocation(line: 1829, column: 4, scope: !6097)
!6375 = !DILocation(line: 1831, column: 4, scope: !6107)
!6376 = !DILocation(line: 0, scope: !6107)
!6377 = !DILocation(line: 1831, column: 4, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6107, file: !2627, line: 1831, column: 4)
!6379 = !DILocation(line: 1835, column: 16, scope: !6000)
!6380 = !DILocation(line: 1835, column: 3, scope: !6000)
!6381 = !DILocation(line: 1836, column: 4, scope: !6109)
!6382 = !DILocation(line: 0, scope: !6109)
!6383 = !DILocation(line: 1836, column: 4, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6109, file: !2627, line: 1836, column: 4)
!6385 = !DILocation(line: 1837, column: 4, scope: !6110)
!6386 = distinct !{!6386, !6380, !6387}
!6387 = !DILocation(line: 1838, column: 3, scope: !6000)
!6388 = !DILocation(line: 1844, column: 1, scope: !5973)
!6389 = distinct !DISubprogram(name: "extract_conversion", scope: !2627, file: !2627, line: 642, type: !6390, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6392)
!6390 = !DISubroutineType(types: !6391)
!6391 = !{!269, !6046, !269}
!6392 = !{!6393, !6394}
!6393 = !DILocalVariable(name: "conv", arg: 1, scope: !6389, file: !2627, line: 642, type: !6046)
!6394 = !DILocalVariable(name: "sp", arg: 2, scope: !6389, file: !2627, line: 643, type: !269)
!6395 = !DILocation(line: 0, scope: !6389)
!6396 = !DILocation(line: 645, column: 10, scope: !6389)
!6397 = !DILocation(line: 653, column: 2, scope: !6389)
!6398 = !DILocation(line: 654, column: 6, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6389, file: !2627, line: 654, column: 6)
!6400 = !DILocation(line: 654, column: 10, scope: !6399)
!6401 = !DILocation(line: 654, column: 6, scope: !6389)
!6402 = !DILocation(line: 655, column: 24, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6399, file: !2627, line: 654, column: 18)
!6404 = !DILocation(line: 655, column: 19, scope: !6403)
!6405 = !DILocation(line: 656, column: 3, scope: !6403)
!6406 = !DILocation(line: 659, column: 7, scope: !6389)
!6407 = !DILocation(line: 660, column: 7, scope: !6389)
!6408 = !DILocation(line: 661, column: 7, scope: !6389)
!6409 = !DILocation(line: 662, column: 7, scope: !6389)
!6410 = !DILocation(line: 663, column: 7, scope: !6389)
!6411 = !DILocation(line: 665, column: 2, scope: !6389)
!6412 = !DILocation(line: 666, column: 1, scope: !6389)
!6413 = distinct !DISubprogram(name: "outs", scope: !2627, file: !2627, line: 1319, type: !6414, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6416)
!6414 = !DISubroutineType(types: !6415)
!6415 = !{!105, !4342, !104, !269, !269}
!6416 = !{!6417, !6418, !6419, !6420, !6421, !6422}
!6417 = !DILocalVariable(name: "out", arg: 1, scope: !6413, file: !2627, line: 1319, type: !4342)
!6418 = !DILocalVariable(name: "ctx", arg: 2, scope: !6413, file: !2627, line: 1320, type: !104)
!6419 = !DILocalVariable(name: "sp", arg: 3, scope: !6413, file: !2627, line: 1321, type: !269)
!6420 = !DILocalVariable(name: "ep", arg: 4, scope: !6413, file: !2627, line: 1322, type: !269)
!6421 = !DILocalVariable(name: "count", scope: !6413, file: !2627, line: 1324, type: !111)
!6422 = !DILocalVariable(name: "rc", scope: !6423, file: !2627, line: 1327, type: !105)
!6423 = distinct !DILexicalBlock(scope: !6413, file: !2627, line: 1326, column: 45)
!6424 = !DILocation(line: 0, scope: !6413)
!6425 = !DILocation(line: 1326, column: 2, scope: !6413)
!6426 = !DILocation(line: 1324, column: 9, scope: !6413)
!6427 = !DILocation(line: 1326, column: 13, scope: !6413)
!6428 = !DILocation(line: 1326, column: 19, scope: !6413)
!6429 = !DILocation(line: 1327, column: 21, scope: !6423)
!6430 = !DILocation(line: 1326, column: 36, scope: !6413)
!6431 = !DILocation(line: 1326, column: 39, scope: !6413)
!6432 = !DILocation(line: 1327, column: 24, scope: !6423)
!6433 = !DILocation(line: 1327, column: 16, scope: !6423)
!6434 = !DILocation(line: 1327, column: 12, scope: !6423)
!6435 = !DILocation(line: 0, scope: !6423)
!6436 = !DILocation(line: 1329, column: 10, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6423, file: !2627, line: 1329, column: 7)
!6438 = !DILocation(line: 1329, column: 7, scope: !6423)
!6439 = distinct !{!6439, !6425, !6440}
!6440 = !DILocation(line: 1333, column: 2, scope: !6413)
!6441 = !DILocation(line: 1336, column: 1, scope: !6413)
!6442 = distinct !DISubprogram(name: "encode_uint", scope: !2627, file: !2627, line: 788, type: !6443, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6445)
!6443 = !DISubroutineType(types: !6444)
!6444 = !{!102, !2649, !6046, !102, !269}
!6445 = !{!6446, !6447, !6448, !6449, !6450, !6451, !6453, !6454}
!6446 = !DILocalVariable(name: "value", arg: 1, scope: !6442, file: !2627, line: 788, type: !2649)
!6447 = !DILocalVariable(name: "conv", arg: 2, scope: !6442, file: !2627, line: 789, type: !6046)
!6448 = !DILocalVariable(name: "bps", arg: 3, scope: !6442, file: !2627, line: 790, type: !102)
!6449 = !DILocalVariable(name: "bpe", arg: 4, scope: !6442, file: !2627, line: 791, type: !269)
!6450 = !DILocalVariable(name: "upcase", scope: !6442, file: !2627, line: 793, type: !505)
!6451 = !DILocalVariable(name: "radix", scope: !6442, file: !2627, line: 794, type: !6452)
!6452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6453 = !DILocalVariable(name: "bp", scope: !6442, file: !2627, line: 795, type: !102)
!6454 = !DILocalVariable(name: "lsv", scope: !6455, file: !2627, line: 798, type: !32)
!6455 = distinct !DILexicalBlock(scope: !6442, file: !2627, line: 797, column: 5)
!6456 = !DILocation(line: 0, scope: !6442)
!6457 = !DILocation(line: 793, column: 35, scope: !6442)
!6458 = !DILocation(line: 793, column: 24, scope: !6442)
!6459 = !DILocation(line: 793, column: 16, scope: !6442)
!6460 = !DILocation(line: 794, column: 29, scope: !6442)
!6461 = !DILocation(line: 795, column: 24, scope: !6442)
!6462 = !DILocation(line: 795, column: 17, scope: !6442)
!6463 = !DILocation(line: 797, column: 2, scope: !6442)
!6464 = !DILocation(line: 802, column: 9, scope: !6455)
!6465 = !DILocation(line: 798, column: 22, scope: !6455)
!6466 = !DILocation(line: 0, scope: !6455)
!6467 = !DILocation(line: 800, column: 16, scope: !6455)
!6468 = !DILocation(line: 800, column: 11, scope: !6455)
!6469 = !DILocation(line: 800, column: 4, scope: !6455)
!6470 = !DILocation(line: 800, column: 9, scope: !6455)
!6471 = !DILocation(line: 803, column: 18, scope: !6442)
!6472 = !DILocation(line: 803, column: 24, scope: !6442)
!6473 = !DILocation(line: 803, column: 2, scope: !6455)
!6474 = distinct !{!6474, !6463, !6475}
!6475 = !DILocation(line: 803, column: 37, scope: !6442)
!6476 = !DILocation(line: 808, column: 12, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6442, file: !2627, line: 808, column: 6)
!6478 = !DILocation(line: 808, column: 6, scope: !6442)
!6479 = !DILocation(line: 809, column: 7, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6477, file: !2627, line: 808, column: 23)
!6481 = !DILocation(line: 813, column: 3, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6483, file: !2627, line: 811, column: 27)
!6483 = distinct !DILexicalBlock(scope: !6484, file: !2627, line: 811, column: 14)
!6484 = distinct !DILexicalBlock(scope: !6480, file: !2627, line: 809, column: 7)
!6485 = !DILocation(line: 0, scope: !6484)
!6486 = !DILocation(line: 818, column: 2, scope: !6442)
!6487 = distinct !DISubprogram(name: "store_count", scope: !2627, file: !2627, line: 1280, type: !6488, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6492)
!6488 = !DISubroutineType(types: !6489)
!6489 = !{null, !6490, !104, !105}
!6490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6491, size: 32)
!6491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6013)
!6492 = !{!6493, !6494, !6495}
!6493 = !DILocalVariable(name: "conv", arg: 1, scope: !6487, file: !2627, line: 1280, type: !6490)
!6494 = !DILocalVariable(name: "dp", arg: 2, scope: !6487, file: !2627, line: 1281, type: !104)
!6495 = !DILocalVariable(name: "count", arg: 3, scope: !6487, file: !2627, line: 1282, type: !105)
!6496 = !DILocation(line: 0, scope: !6487)
!6497 = !DILocation(line: 1284, column: 38, scope: !6487)
!6498 = !DILocation(line: 1284, column: 2, scope: !6487)
!6499 = !DILocation(line: 1286, column: 4, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6487, file: !2627, line: 1284, column: 50)
!6501 = !DILocation(line: 1286, column: 14, scope: !6500)
!6502 = !DILocation(line: 1287, column: 3, scope: !6500)
!6503 = !DILocation(line: 1289, column: 24, scope: !6500)
!6504 = !DILocation(line: 1289, column: 22, scope: !6500)
!6505 = !DILocation(line: 1290, column: 3, scope: !6500)
!6506 = !DILocation(line: 1292, column: 18, scope: !6500)
!6507 = !DILocation(line: 1292, column: 4, scope: !6500)
!6508 = !DILocation(line: 1292, column: 16, scope: !6500)
!6509 = !DILocation(line: 1293, column: 3, scope: !6500)
!6510 = !DILocation(line: 1295, column: 4, scope: !6500)
!6511 = !DILocation(line: 1295, column: 15, scope: !6500)
!6512 = !DILocation(line: 1296, column: 3, scope: !6500)
!6513 = !DILocation(line: 1298, column: 22, scope: !6500)
!6514 = !DILocation(line: 1298, column: 4, scope: !6500)
!6515 = !DILocation(line: 1298, column: 20, scope: !6500)
!6516 = !DILocation(line: 1299, column: 3, scope: !6500)
!6517 = !DILocation(line: 1301, column: 21, scope: !6500)
!6518 = !DILocation(line: 1301, column: 4, scope: !6500)
!6519 = !DILocation(line: 1301, column: 19, scope: !6500)
!6520 = !DILocation(line: 1302, column: 3, scope: !6500)
!6521 = !DILocation(line: 1304, column: 4, scope: !6500)
!6522 = !DILocation(line: 1304, column: 17, scope: !6500)
!6523 = !DILocation(line: 1305, column: 3, scope: !6500)
!6524 = !DILocation(line: 1307, column: 4, scope: !6500)
!6525 = !DILocation(line: 1307, column: 20, scope: !6500)
!6526 = !DILocation(line: 1308, column: 3, scope: !6500)
!6527 = !DILocation(line: 1316, column: 1, scope: !6487)
!6528 = distinct !DISubprogram(name: "isupper", scope: !6529, file: !6529, line: 16, type: !448, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6530)
!6529 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6530 = !{!6531}
!6531 = !DILocalVariable(name: "a", arg: 1, scope: !6528, file: !6529, line: 16, type: !105)
!6532 = !DILocation(line: 0, scope: !6528)
!6533 = !DILocation(line: 18, column: 29, scope: !6528)
!6534 = !DILocation(line: 18, column: 45, scope: !6528)
!6535 = !DILocation(line: 18, column: 2, scope: !6528)
!6536 = distinct !DISubprogram(name: "conversion_radix", scope: !2627, file: !2627, line: 761, type: !6537, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6539)
!6537 = !DISubroutineType(types: !6538)
!6538 = !{!111, !103}
!6539 = !{!6540}
!6540 = !DILocalVariable(name: "specifier", arg: 1, scope: !6536, file: !2627, line: 761, type: !103)
!6541 = !DILocation(line: 0, scope: !6536)
!6542 = !DILocation(line: 763, column: 2, scope: !6536)
!6543 = !DILocation(line: 770, column: 3, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6536, file: !2627, line: 763, column: 21)
!6545 = !DILocation(line: 774, column: 3, scope: !6544)
!6546 = !DILocation(line: 0, scope: !6544)
!6547 = !DILocation(line: 776, column: 1, scope: !6536)
!6548 = distinct !DISubprogram(name: "extract_flags", scope: !2627, file: !2627, line: 339, type: !6390, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6549)
!6549 = !{!6550, !6551, !6552}
!6550 = !DILocalVariable(name: "conv", arg: 1, scope: !6548, file: !2627, line: 339, type: !6046)
!6551 = !DILocalVariable(name: "sp", arg: 2, scope: !6548, file: !2627, line: 340, type: !269)
!6552 = !DILocalVariable(name: "loop", scope: !6548, file: !2627, line: 342, type: !505)
!6553 = !DILocation(line: 0, scope: !6548)
!6554 = !DILocation(line: 344, column: 2, scope: !6548)
!6555 = !DILocation(line: 345, column: 11, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6548, file: !2627, line: 344, column: 5)
!6557 = !DILocation(line: 345, column: 3, scope: !6556)
!6558 = !DILocation(line: 351, column: 4, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6556, file: !2627, line: 345, column: 16)
!6560 = !DILocation(line: 354, column: 4, scope: !6559)
!6561 = !DILocation(line: 357, column: 4, scope: !6559)
!6562 = !DILocation(line: 360, column: 4, scope: !6559)
!6563 = !DILocation(line: 0, scope: !6559)
!6564 = !DILocation(line: 370, column: 12, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6548, file: !2627, line: 370, column: 6)
!6566 = !DILocation(line: 370, column: 22, scope: !6565)
!6567 = !DILocation(line: 371, column: 19, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6565, file: !2627, line: 370, column: 42)
!6569 = !DILocation(line: 372, column: 2, scope: !6568)
!6570 = !DILocation(line: 376, column: 2, scope: !6548)
!6571 = distinct !DISubprogram(name: "extract_width", scope: !2627, file: !2627, line: 388, type: !6390, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6572)
!6572 = !{!6573, !6574, !6575, !6576}
!6573 = !DILocalVariable(name: "conv", arg: 1, scope: !6571, file: !2627, line: 388, type: !6046)
!6574 = !DILocalVariable(name: "sp", arg: 2, scope: !6571, file: !2627, line: 389, type: !269)
!6575 = !DILocalVariable(name: "wp", scope: !6571, file: !2627, line: 398, type: !269)
!6576 = !DILocalVariable(name: "width", scope: !6571, file: !2627, line: 399, type: !111)
!6577 = !DILocation(line: 0, scope: !6571)
!6578 = !DILocation(line: 391, column: 8, scope: !6571)
!6579 = !DILocation(line: 391, column: 22, scope: !6571)
!6580 = !DILocation(line: 393, column: 6, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6571, file: !2627, line: 393, column: 6)
!6582 = !DILocation(line: 393, column: 10, scope: !6581)
!6583 = !DILocation(line: 393, column: 6, scope: !6571)
!6584 = !DILocation(line: 394, column: 20, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6581, file: !2627, line: 393, column: 18)
!6586 = !DILocation(line: 395, column: 10, scope: !6585)
!6587 = !DILocation(line: 395, column: 3, scope: !6585)
!6588 = !DILocation(line: 399, column: 17, scope: !6571)
!6589 = !DILocation(line: 401, column: 6, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6571, file: !2627, line: 401, column: 6)
!6591 = !DILocation(line: 401, column: 9, scope: !6590)
!6592 = !DILocation(line: 401, column: 6, scope: !6571)
!6593 = !DILocation(line: 402, column: 23, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6590, file: !2627, line: 401, column: 16)
!6595 = !DILocation(line: 403, column: 9, scope: !6594)
!6596 = !DILocation(line: 403, column: 21, scope: !6594)
!6597 = !DILocation(line: 405, column: 11, scope: !6594)
!6598 = !DILocation(line: 404, column: 21, scope: !6594)
!6599 = !DILocation(line: 406, column: 2, scope: !6594)
!6600 = !DILocation(line: 409, column: 1, scope: !6571)
!6601 = distinct !DISubprogram(name: "extract_prec", scope: !2627, file: !2627, line: 420, type: !6390, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6602)
!6602 = !{!6603, !6604, !6605}
!6603 = !DILocalVariable(name: "conv", arg: 1, scope: !6601, file: !2627, line: 420, type: !6046)
!6604 = !DILocalVariable(name: "sp", arg: 2, scope: !6601, file: !2627, line: 421, type: !269)
!6605 = !DILocalVariable(name: "prec", scope: !6601, file: !2627, line: 435, type: !111)
!6606 = !DILocation(line: 0, scope: !6601)
!6607 = !DILocation(line: 423, column: 24, scope: !6601)
!6608 = !DILocation(line: 423, column: 28, scope: !6601)
!6609 = !DILocation(line: 423, column: 8, scope: !6601)
!6610 = !DILocation(line: 423, column: 21, scope: !6601)
!6611 = !DILocation(line: 425, column: 6, scope: !6601)
!6612 = !DILocation(line: 428, column: 2, scope: !6601)
!6613 = !DILocation(line: 430, column: 6, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6601, file: !2627, line: 430, column: 6)
!6615 = !DILocation(line: 430, column: 10, scope: !6614)
!6616 = !DILocation(line: 430, column: 6, scope: !6601)
!6617 = !DILocation(line: 431, column: 19, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6614, file: !2627, line: 430, column: 18)
!6619 = !DILocation(line: 432, column: 10, scope: !6618)
!6620 = !DILocation(line: 432, column: 3, scope: !6618)
!6621 = !DILocation(line: 435, column: 16, scope: !6601)
!6622 = !DILocation(line: 437, column: 8, scope: !6601)
!6623 = !DILocation(line: 437, column: 19, scope: !6601)
!6624 = !DILocation(line: 439, column: 10, scope: !6601)
!6625 = !DILocation(line: 438, column: 20, scope: !6601)
!6626 = !DILocation(line: 441, column: 9, scope: !6601)
!6627 = !DILocation(line: 442, column: 1, scope: !6601)
!6628 = distinct !DISubprogram(name: "extract_length", scope: !2627, file: !2627, line: 453, type: !6390, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6629)
!6629 = !{!6630, !6631}
!6630 = !DILocalVariable(name: "conv", arg: 1, scope: !6628, file: !2627, line: 453, type: !6046)
!6631 = !DILocalVariable(name: "sp", arg: 2, scope: !6628, file: !2627, line: 454, type: !269)
!6632 = !DILocation(line: 0, scope: !6628)
!6633 = !DILocation(line: 456, column: 10, scope: !6628)
!6634 = !DILocation(line: 456, column: 2, scope: !6628)
!6635 = !DILocation(line: 458, column: 8, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6637, file: !2627, line: 458, column: 7)
!6637 = distinct !DILexicalBlock(scope: !6628, file: !2627, line: 456, column: 15)
!6638 = !DILocation(line: 458, column: 7, scope: !6636)
!6639 = !DILocation(line: 458, column: 13, scope: !6636)
!6640 = !DILocation(line: 0, scope: !6636)
!6641 = !DILocation(line: 458, column: 7, scope: !6637)
!6642 = !DILocation(line: 459, column: 21, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6636, file: !2627, line: 458, column: 21)
!6644 = !DILocation(line: 460, column: 4, scope: !6643)
!6645 = !DILocation(line: 461, column: 3, scope: !6643)
!6646 = !DILocation(line: 462, column: 21, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6636, file: !2627, line: 461, column: 10)
!6648 = !DILocation(line: 466, column: 8, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6637, file: !2627, line: 466, column: 7)
!6650 = !DILocation(line: 466, column: 7, scope: !6649)
!6651 = !DILocation(line: 466, column: 13, scope: !6649)
!6652 = !DILocation(line: 0, scope: !6649)
!6653 = !DILocation(line: 466, column: 7, scope: !6637)
!6654 = !DILocation(line: 467, column: 21, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6649, file: !2627, line: 466, column: 21)
!6656 = !DILocation(line: 468, column: 4, scope: !6655)
!6657 = !DILocation(line: 469, column: 3, scope: !6655)
!6658 = !DILocation(line: 470, column: 21, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6649, file: !2627, line: 469, column: 10)
!6660 = !DILocation(line: 474, column: 9, scope: !6637)
!6661 = !DILocation(line: 474, column: 20, scope: !6637)
!6662 = !DILocation(line: 475, column: 3, scope: !6637)
!6663 = !DILocation(line: 476, column: 3, scope: !6637)
!6664 = !DILocation(line: 478, column: 9, scope: !6637)
!6665 = !DILocation(line: 478, column: 20, scope: !6637)
!6666 = !DILocation(line: 479, column: 3, scope: !6637)
!6667 = !DILocation(line: 480, column: 3, scope: !6637)
!6668 = !DILocation(line: 482, column: 9, scope: !6637)
!6669 = !DILocation(line: 482, column: 20, scope: !6637)
!6670 = !DILocation(line: 483, column: 3, scope: !6637)
!6671 = !DILocation(line: 484, column: 3, scope: !6637)
!6672 = !DILocation(line: 486, column: 9, scope: !6637)
!6673 = !DILocation(line: 486, column: 20, scope: !6637)
!6674 = !DILocation(line: 487, column: 3, scope: !6637)
!6675 = !DILocation(line: 492, column: 21, scope: !6637)
!6676 = !DILocation(line: 493, column: 3, scope: !6637)
!6677 = !DILocation(line: 495, column: 9, scope: !6637)
!6678 = !DILocation(line: 495, column: 20, scope: !6637)
!6679 = !DILocation(line: 496, column: 3, scope: !6637)
!6680 = !DILocation(line: 498, column: 2, scope: !6628)
!6681 = distinct !DISubprogram(name: "extract_specifier", scope: !2627, file: !2627, line: 513, type: !6390, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6682)
!6682 = !{!6683, !6684, !6685, !6686}
!6683 = !DILocalVariable(name: "conv", arg: 1, scope: !6681, file: !2627, line: 513, type: !6046)
!6684 = !DILocalVariable(name: "sp", arg: 2, scope: !6681, file: !2627, line: 514, type: !269)
!6685 = !DILocalVariable(name: "unsupported", scope: !6681, file: !2627, line: 516, type: !505)
!6686 = !DILabel(scope: !6687, name: "int_conv", file: !2627, line: 526)
!6687 = distinct !DILexicalBlock(scope: !6681, file: !2627, line: 520, column: 27)
!6688 = !DILocation(line: 0, scope: !6681)
!6689 = !DILocation(line: 518, column: 20, scope: !6681)
!6690 = !DILocation(line: 518, column: 8, scope: !6681)
!6691 = !DILocation(line: 518, column: 18, scope: !6681)
!6692 = !DILocation(line: 520, column: 2, scope: !6681)
!6693 = !DILocation(line: 525, column: 3, scope: !6687)
!6694 = !DILocation(line: 0, scope: !6687)
!6695 = !DILocation(line: 526, column: 1, scope: !6687)
!6696 = !DILocation(line: 528, column: 24, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6687, file: !2627, line: 528, column: 7)
!6698 = !DILocation(line: 528, column: 7, scope: !6687)
!6699 = !DILocation(line: 535, column: 23, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6687, file: !2627, line: 535, column: 7)
!6701 = !DILocation(line: 535, column: 7, scope: !6687)
!6702 = !DILocation(line: 536, column: 36, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6700, file: !2627, line: 535, column: 31)
!6704 = !DILocation(line: 537, column: 3, scope: !6703)
!6705 = !DILocation(line: 570, column: 9, scope: !6687)
!6706 = !DILocation(line: 570, column: 23, scope: !6687)
!6707 = !DILocation(line: 575, column: 4, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6709, file: !2627, line: 573, column: 48)
!6709 = distinct !DILexicalBlock(scope: !6687, file: !2627, line: 573, column: 7)
!6710 = !DILocation(line: 603, column: 9, scope: !6687)
!6711 = !DILocation(line: 603, column: 23, scope: !6687)
!6712 = !DILocation(line: 605, column: 24, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6687, file: !2627, line: 605, column: 7)
!6714 = !DILocation(line: 605, column: 7, scope: !6687)
!6715 = !DILocation(line: 612, column: 9, scope: !6687)
!6716 = !DILocation(line: 612, column: 23, scope: !6687)
!6717 = !DILocation(line: 619, column: 24, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6687, file: !2627, line: 619, column: 7)
!6719 = !DILocation(line: 619, column: 7, scope: !6687)
!6720 = !DILocation(line: 625, column: 9, scope: !6687)
!6721 = !DILocation(line: 625, column: 17, scope: !6687)
!6722 = !DILocation(line: 626, column: 3, scope: !6687)
!6723 = !DILocation(line: 629, column: 20, scope: !6681)
!6724 = !DILocation(line: 629, column: 8, scope: !6681)
!6725 = !DILocation(line: 518, column: 23, scope: !6681)
!6726 = !DILocation(line: 631, column: 2, scope: !6681)
!6727 = distinct !DISubprogram(name: "extract_decimal", scope: !2627, file: !2627, line: 318, type: !6728, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6730)
!6728 = !DISubroutineType(types: !6729)
!6729 = !{!111, !427}
!6730 = !{!6731, !6732, !6733}
!6731 = !DILocalVariable(name: "str", arg: 1, scope: !6727, file: !2627, line: 318, type: !427)
!6732 = !DILocalVariable(name: "sp", scope: !6727, file: !2627, line: 320, type: !269)
!6733 = !DILocalVariable(name: "val", scope: !6727, file: !2627, line: 321, type: !111)
!6734 = !DILocation(line: 0, scope: !6727)
!6735 = !DILocation(line: 320, column: 19, scope: !6727)
!6736 = !DILocation(line: 323, column: 37, scope: !6727)
!6737 = !DILocation(line: 323, column: 17, scope: !6727)
!6738 = !DILocation(line: 323, column: 9, scope: !6727)
!6739 = !DILocation(line: 323, column: 2, scope: !6727)
!6740 = !DILocation(line: 324, column: 13, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6727, file: !2627, line: 323, column: 43)
!6742 = !DILocation(line: 324, column: 24, scope: !6741)
!6743 = !DILocation(line: 324, column: 19, scope: !6741)
!6744 = !DILocation(line: 324, column: 27, scope: !6741)
!6745 = distinct !{!6745, !6739, !6746}
!6746 = !DILocation(line: 325, column: 2, scope: !6727)
!6747 = !DILocation(line: 326, column: 7, scope: !6727)
!6748 = !DILocation(line: 327, column: 2, scope: !6727)
!6749 = distinct !DISubprogram(name: "isdigit", scope: !6529, file: !6529, line: 43, type: !448, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !6750)
!6750 = !{!6751}
!6751 = !DILocalVariable(name: "a", arg: 1, scope: !6749, file: !6529, line: 43, type: !105)
!6752 = !DILocation(line: 0, scope: !6749)
!6753 = !DILocation(line: 45, column: 29, scope: !6749)
!6754 = !DILocation(line: 45, column: 45, scope: !6749)
!6755 = !DILocation(line: 45, column: 2, scope: !6749)
!6756 = distinct !DISubprogram(name: "assert_post_action", scope: !6757, file: !6757, line: 26, type: !6758, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6760)
!6757 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6758 = !DISubroutineType(types: !6759)
!6759 = !{null, !269, !32}
!6760 = !{!6761, !6762}
!6761 = !DILocalVariable(name: "file", arg: 1, scope: !6756, file: !6757, line: 26, type: !269)
!6762 = !DILocalVariable(name: "line", arg: 2, scope: !6756, file: !6757, line: 26, type: !32)
!6763 = !DILocation(line: 0, scope: !6756)
!6764 = !DILocation(line: 43, column: 2, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6756, file: !6757, line: 43, column: 2)
!6766 = !{i64 2152226052, i64 2152226068, i64 2152226094, i64 2152226122, i64 2152226142}
!6767 = !DILocation(line: 44, column: 1, scope: !6756)
!6768 = distinct !DISubprogram(name: "assert_print", scope: !6757, file: !6757, line: 46, type: !4952, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !6769)
!6769 = !{!6770, !6771}
!6770 = !DILocalVariable(name: "fmt", arg: 1, scope: !6768, file: !6757, line: 46, type: !269)
!6771 = !DILocalVariable(name: "ap", scope: !6768, file: !6757, line: 48, type: !6772)
!6772 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3960, line: 99, baseType: !6773)
!6773 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3960, line: 40, baseType: !6774)
!6774 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6757, baseType: !6775)
!6775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6776)
!6776 = !{!6777}
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6775, file: !6757, line: 48, baseType: !104, size: 32)
!6778 = !DILocation(line: 0, scope: !6768)
!6779 = !DILocation(line: 48, column: 2, scope: !6768)
!6780 = !DILocation(line: 48, column: 10, scope: !6768)
!6781 = !DILocation(line: 50, column: 2, scope: !6768)
!6782 = !DILocation(line: 52, column: 2, scope: !6768)
!6783 = !DILocation(line: 54, column: 2, scope: !6768)
!6784 = !DILocation(line: 55, column: 1, scope: !6768)
!6785 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6786, file: !6786, line: 9, type: !266, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2659, retainedNodes: !397)
!6786 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!6787 = !DILocation(line: 11, column: 1, scope: !6785)
!6788 = !{i64 2147564152, i64 2147564195, i64 2147564235}
!6789 = !DILocation(line: 12, column: 1, scope: !6785)
!6790 = !{i64 2147568379, i64 2147568422, i64 2147568462}
!6791 = !DILocation(line: 13, column: 1, scope: !6785)
!6792 = !{i64 2147568588, i64 2147568631, i64 2147568671}
!6793 = !DILocation(line: 14, column: 1, scope: !6785)
!6794 = !{i64 2147568757, i64 2147568800, i64 2147568840}
!6795 = !DILocation(line: 15, column: 1, scope: !6785)
!6796 = !{i64 2147568920, i64 2147568963, i64 2147569003}
!6797 = !DILocation(line: 16, column: 1, scope: !6785)
!6798 = !{i64 2147569104, i64 2147569147, i64 2147569187}
!6799 = !DILocation(line: 17, column: 1, scope: !6785)
!6800 = !{i64 2147569283, i64 2147569326, i64 2147569366}
!6801 = !DILocation(line: 18, column: 1, scope: !6785)
!6802 = !{i64 2147569525, i64 2147569568, i64 2147569608}
!6803 = !DILocation(line: 19, column: 1, scope: !6785)
!6804 = !{i64 2147569760, i64 2147569803, i64 2147569843}
!6805 = !DILocation(line: 20, column: 1, scope: !6785)
!6806 = !{i64 2147569946, i64 2147569989, i64 2147570029}
!6807 = !DILocation(line: 21, column: 1, scope: !6785)
!6808 = !{i64 2147570162, i64 2147570205, i64 2147570245}
!6809 = !DILocation(line: 22, column: 1, scope: !6785)
!6810 = !{i64 2147570365, i64 2147570408, i64 2147570448}
!6811 = !DILocation(line: 23, column: 1, scope: !6785)
!6812 = !{i64 2147570568, i64 2147570611, i64 2147570651}
!6813 = !DILocation(line: 24, column: 1, scope: !6785)
!6814 = !{i64 2147570743, i64 2147570786, i64 2147570826}
!6815 = !DILocation(line: 25, column: 1, scope: !6785)
!6816 = !{i64 2147570951, i64 2147570994, i64 2147571034}
!6817 = !DILocation(line: 26, column: 1, scope: !6785)
!6818 = !{i64 2147571155, i64 2147571198, i64 2147571238}
!6819 = !DILocation(line: 27, column: 1, scope: !6785)
!6820 = !{i64 2147571348, i64 2147571391, i64 2147571431}
!6821 = !DILocation(line: 28, column: 1, scope: !6785)
!6822 = !{i64 2147571550, i64 2147571593, i64 2147571633}
!6823 = !DILocation(line: 29, column: 1, scope: !6785)
!6824 = !{i64 2147571749, i64 2147571792, i64 2147571832}
!6825 = !DILocation(line: 30, column: 1, scope: !6785)
!6826 = !{i64 2147571976, i64 2147572019, i64 2147572059}
!6827 = !DILocation(line: 31, column: 1, scope: !6785)
!6828 = !{i64 2147572178, i64 2147572221, i64 2147572261}
!6829 = !DILocation(line: 32, column: 1, scope: !6785)
!6830 = !{i64 2147572393, i64 2147572436, i64 2147572476}
!6831 = !DILocation(line: 33, column: 1, scope: !6785)
!6832 = !{i64 2147572565, i64 2147572608, i64 2147572648}
!6833 = !DILocation(line: 34, column: 1, scope: !6785)
!6834 = !{i64 2147572767, i64 2147572810, i64 2147572850}
!6835 = !DILocation(line: 35, column: 1, scope: !6785)
!6836 = !{i64 2147572993, i64 2147573036, i64 2147573076}
!6837 = !DILocation(line: 36, column: 1, scope: !6785)
!6838 = !{i64 2147573192, i64 2147573235, i64 2147573275}
!6839 = !DILocation(line: 37, column: 1, scope: !6785)
!6840 = !{i64 2147573367, i64 2147573410, i64 2147573450}
!6841 = !DILocation(line: 38, column: 1, scope: !6785)
!6842 = !{i64 2147573620, i64 2147573663, i64 2147573703}
!6843 = !DILocation(line: 39, column: 1, scope: !6785)
!6844 = !{i64 2147573858, i64 2147573901, i64 2147573941}
!6845 = !DILocation(line: 40, column: 1, scope: !6785)
!6846 = !{i64 2147574093, i64 2147574136, i64 2147574176}
!6847 = !DILocation(line: 41, column: 1, scope: !6785)
!6848 = !{i64 2147574325, i64 2147574368, i64 2147574408}
!6849 = !DILocation(line: 42, column: 1, scope: !6785)
!6850 = !{i64 2147574551, i64 2147574594, i64 2147574634}
!6851 = !DILocation(line: 43, column: 1, scope: !6785)
!6852 = !{i64 2147574810, i64 2147574853, i64 2147574893}
!6853 = !DILocation(line: 44, column: 1, scope: !6785)
!6854 = !{i64 2147575036, i64 2147575079, i64 2147575119}
!6855 = !DILocation(line: 45, column: 1, scope: !6785)
!6856 = !{i64 2147575277, i64 2147575320, i64 2147575360}
!6857 = !DILocation(line: 46, column: 1, scope: !6785)
!6858 = !{i64 2147575521, i64 2147575564, i64 2147575604}
!6859 = !DILocation(line: 47, column: 1, scope: !6785)
!6860 = !{i64 2147575762, i64 2147575805, i64 2147575845}
!6861 = !DILocation(line: 48, column: 1, scope: !6785)
!6862 = !{i64 2147575997, i64 2147576040, i64 2147576080}
!6863 = !DILocation(line: 49, column: 1, scope: !6785)
!6864 = !{i64 2147576223, i64 2147576266, i64 2147576306}
!6865 = !DILocation(line: 50, column: 1, scope: !6785)
!6866 = !{i64 2147576449, i64 2147576492, i64 2147576532}
!6867 = !DILocation(line: 51, column: 1, scope: !6785)
!6868 = !{i64 2147576693, i64 2147576736, i64 2147576776}
!6869 = !DILocation(line: 52, column: 1, scope: !6785)
!6870 = !{i64 2147576931, i64 2147576974, i64 2147577014}
!6871 = !DILocation(line: 53, column: 1, scope: !6785)
!6872 = !{i64 2147581266, i64 2147581309, i64 2147581349}
!6873 = !DILocation(line: 54, column: 1, scope: !6785)
!6874 = !{i64 2147581504, i64 2147581547, i64 2147581587}
!6875 = !DILocation(line: 55, column: 1, scope: !6785)
!6876 = !{i64 2147581748, i64 2147581791, i64 2147581831}
!6877 = !DILocation(line: 56, column: 1, scope: !6785)
!6878 = !{i64 2147581998, i64 2147582041, i64 2147582081}
!6879 = !DILocation(line: 57, column: 1, scope: !6785)
!6880 = !{i64 2147582245, i64 2147582288, i64 2147582328}
!6881 = !DILocation(line: 58, column: 1, scope: !6785)
!6882 = !{i64 2147582480, i64 2147582523, i64 2147582563}
!6883 = !DILocation(line: 59, column: 1, scope: !6785)
!6884 = !{i64 2147582715, i64 2147582758, i64 2147582798}
!6885 = !DILocation(line: 60, column: 1, scope: !6785)
!6886 = !{i64 2147582950, i64 2147582993, i64 2147583033}
!6887 = !DILocation(line: 61, column: 1, scope: !6785)
!6888 = !{i64 2147583188, i64 2147583231, i64 2147583271}
!6889 = !DILocation(line: 62, column: 1, scope: !6785)
!6890 = !{i64 2147583429, i64 2147583472, i64 2147583512}
!6891 = !DILocation(line: 63, column: 1, scope: !6785)
!6892 = !{i64 2147583688, i64 2147583731, i64 2147583771}
!6893 = !DILocation(line: 64, column: 1, scope: !6785)
!6894 = !{i64 2147583968, i64 2147584011, i64 2147584051}
!6895 = !DILocation(line: 65, column: 1, scope: !6785)
!6896 = !{i64 2147584197, i64 2147584240, i64 2147584280}
!6897 = !DILocation(line: 66, column: 1, scope: !6785)
!6898 = !{i64 2147584405, i64 2147584448, i64 2147584488}
!6899 = !DILocation(line: 67, column: 1, scope: !6785)
!6900 = !{i64 2147584616, i64 2147584659, i64 2147584699}
!6901 = !DILocation(line: 68, column: 1, scope: !6785)
!6902 = !{i64 2147584851, i64 2147584894, i64 2147584934}
!6903 = !DILocation(line: 69, column: 1, scope: !6785)
!6904 = !{i64 2147585080, i64 2147585123, i64 2147585163}
!6905 = !DILocation(line: 70, column: 1, scope: !6785)
!6906 = !{i64 2147585297, i64 2147585340, i64 2147585380}
!6907 = !DILocation(line: 71, column: 1, scope: !6785)
!6908 = !{i64 2147585526, i64 2147585569, i64 2147585609}
!6909 = !DILocation(line: 72, column: 1, scope: !6785)
!6910 = !{i64 2147585764, i64 2147585807, i64 2147585847}
!6911 = !DILocation(line: 73, column: 1, scope: !6785)
!6912 = !{i64 2147585996, i64 2147586039, i64 2147586079}
!6913 = !DILocation(line: 74, column: 1, scope: !6785)
!6914 = !{i64 2147586222, i64 2147586265, i64 2147586305}
!6915 = !DILocation(line: 75, column: 1, scope: !6785)
!6916 = !{i64 2147586439, i64 2147586482, i64 2147586522}
!6917 = !DILocation(line: 76, column: 1, scope: !6785)
!6918 = !{i64 2147586671, i64 2147586714, i64 2147586754}
!6919 = !DILocation(line: 77, column: 1, scope: !6785)
!6920 = !{i64 2147586897, i64 2147586940, i64 2147586980}
!6921 = !DILocation(line: 78, column: 1, scope: !6785)
!6922 = !{i64 2147587111, i64 2147587154, i64 2147587194}
!6923 = !DILocation(line: 79, column: 1, scope: !6785)
!6924 = !{i64 2147587331, i64 2147587374, i64 2147587414}
!6925 = !DILocation(line: 80, column: 1, scope: !6785)
!6926 = !{i64 2147587563, i64 2147587606, i64 2147587646}
!6927 = !DILocation(line: 81, column: 1, scope: !6785)
!6928 = !{i64 2147587771, i64 2147587814, i64 2147587854}
!6929 = !DILocation(line: 82, column: 1, scope: !6785)
!6930 = !{i64 2147587976, i64 2147588019, i64 2147588059}
!6931 = !DILocation(line: 83, column: 1, scope: !6785)
!6932 = !{i64 2147588193, i64 2147588236, i64 2147588276}
!6933 = !DILocation(line: 84, column: 1, scope: !6785)
!6934 = !{i64 2147588407, i64 2147588450, i64 2147588490}
!6935 = !DILocation(line: 85, column: 1, scope: !6785)
!6936 = !{i64 2147588633, i64 2147588676, i64 2147588716}
!6937 = !DILocation(line: 86, column: 1, scope: !6785)
!6938 = !{i64 2147588853, i64 2147588896, i64 2147588936}
!6939 = !DILocation(line: 87, column: 1, scope: !6785)
!6940 = !{i64 2147589058, i64 2147589101, i64 2147589141}
!6941 = !DILocation(line: 88, column: 1, scope: !6785)
!6942 = !{i64 2147593351, i64 2147593394, i64 2147593434}
!6943 = !DILocation(line: 89, column: 1, scope: !6785)
!6944 = !{i64 2147593586, i64 2147593629, i64 2147593669}
!6945 = !DILocation(line: 90, column: 1, scope: !6785)
!6946 = !{i64 2147593836, i64 2147593879, i64 2147593919}
!6947 = !DILocation(line: 91, column: 1, scope: !6785)
!6948 = !{i64 2147594086, i64 2147594129, i64 2147594169}
!6949 = !DILocation(line: 92, column: 1, scope: !6785)
!6950 = !{i64 2147594324, i64 2147594367, i64 2147594407}
!6951 = !DILocation(line: 93, column: 1, scope: !6785)
!6952 = !{i64 2147594535, i64 2147594578, i64 2147594618}
!6953 = !DILocation(line: 94, column: 1, scope: !6785)
!6954 = !{i64 2147594752, i64 2147594795, i64 2147594835}
!6955 = !DILocation(line: 95, column: 1, scope: !6785)
!6956 = !{i64 2147594948, i64 2147594991, i64 2147595031}
!6957 = !DILocation(line: 96, column: 1, scope: !6785)
!6958 = !{i64 2147595150, i64 2147595193, i64 2147595233}
!6959 = !DILocation(line: 97, column: 1, scope: !6785)
!6960 = !{i64 2147595343, i64 2147595386, i64 2147595426}
!6961 = !DILocation(line: 98, column: 1, scope: !6785)
!6962 = !{i64 2147595551, i64 2147595594, i64 2147595634}
!6963 = !DILocation(line: 99, column: 1, scope: !6785)
!6964 = !{i64 2147595747, i64 2147595790, i64 2147595830}
!6965 = !DILocation(line: 100, column: 1, scope: !6785)
!6966 = !{i64 2147595952, i64 2147595995, i64 2147596035}
!6967 = !DILocation(line: 101, column: 1, scope: !6785)
!6968 = !{i64 2147596163, i64 2147596206, i64 2147596246}
!6969 = !DILocation(line: 102, column: 1, scope: !6785)
!6970 = !{i64 2147596362, i64 2147596405, i64 2147596445}
!6971 = !DILocation(line: 103, column: 1, scope: !6785)
!6972 = !{i64 2147596537, i64 2147596580, i64 2147596620}
!6973 = !DILocation(line: 104, column: 1, scope: !6785)
!6974 = !{i64 2147596721, i64 2147596764, i64 2147596804}
!6975 = !DILocation(line: 105, column: 1, scope: !6785)
!6976 = !{i64 2147596923, i64 2147596966, i64 2147597006}
!6977 = !DILocation(line: 106, column: 1, scope: !6785)
!6978 = !{i64 2147597125, i64 2147597168, i64 2147597208}
!6979 = !DILocation(line: 107, column: 1, scope: !6785)
!6980 = !{i64 2147597330, i64 2147597373, i64 2147597413}
!6981 = !DILocation(line: 108, column: 1, scope: !6785)
!6982 = !{i64 2147597523, i64 2147597566, i64 2147597606}
!6983 = !DILocation(line: 109, column: 1, scope: !6785)
!6984 = !{i64 2147597689, i64 2147597732, i64 2147597772}
!6985 = !DILocation(line: 110, column: 1, scope: !6785)
!6986 = !{i64 2147597873, i64 2147597916, i64 2147597956}
!6987 = !DILocation(line: 111, column: 1, scope: !6785)
!6988 = !{i64 2147598063, i64 2147598106, i64 2147598146}
!6989 = !DILocation(line: 112, column: 1, scope: !6785)
!6990 = !{i64 2147598247, i64 2147598290, i64 2147598330}
!6991 = !DILocation(line: 113, column: 1, scope: !6785)
!6992 = !{i64 2147598461, i64 2147598504, i64 2147598544}
!6993 = !DILocation(line: 114, column: 1, scope: !6785)
!6994 = !{i64 2147598672, i64 2147598715, i64 2147598755}
!6995 = !DILocation(line: 115, column: 1, scope: !6785)
!6996 = !{i64 2147598895, i64 2147598938, i64 2147598978}
!6997 = !DILocation(line: 116, column: 1, scope: !6785)
!6998 = !{i64 2147599079, i64 2147599122, i64 2147599162}
!6999 = !DILocation(line: 117, column: 1, scope: !6785)
!7000 = !{i64 2147599293, i64 2147599336, i64 2147599376}
!7001 = !DILocation(line: 118, column: 1, scope: !6785)
!7002 = !{i64 2147599459, i64 2147599502, i64 2147599542}
!7003 = !DILocation(line: 119, column: 1, scope: !6785)
!7004 = !{i64 2147599640, i64 2147599683, i64 2147599723}
!7005 = !DILocation(line: 120, column: 1, scope: !6785)
!7006 = !{i64 2147599833, i64 2147599876, i64 2147599916}
!7007 = !DILocation(line: 121, column: 1, scope: !6785)
!7008 = !{i64 2147600059, i64 2147600102, i64 2147600142}
!7009 = !DILocation(line: 122, column: 1, scope: !6785)
!7010 = !{i64 2147600273, i64 2147600316, i64 2147600356}
!7011 = !DILocation(line: 123, column: 1, scope: !6785)
!7012 = !{i64 2147600499, i64 2147600542, i64 2147600582}
!7013 = !DILocation(line: 124, column: 1, scope: !6785)
!7014 = !{i64 2147600716, i64 2147600759, i64 2147600799}
!7015 = !DILocation(line: 125, column: 1, scope: !6785)
!7016 = !{i64 2147600993, i64 2147601036, i64 2147601076}
!7017 = !DILocation(line: 126, column: 1, scope: !6785)
!7018 = !{i64 2147601219, i64 2147601262, i64 2147601302}
!7019 = !DILocation(line: 127, column: 1, scope: !6785)
!7020 = !{i64 2147601415, i64 2147601458, i64 2147601498}
!7021 = !DILocation(line: 128, column: 1, scope: !6785)
!7022 = !{i64 2147601680, i64 2147601723, i64 2147601763}
!7023 = !DILocation(line: 129, column: 1, scope: !6785)
!7024 = !{i64 2147601894, i64 2147601937, i64 2147601977}
!7025 = !DILocation(line: 130, column: 1, scope: !6785)
!7026 = !{i64 2147602069, i64 2147602112, i64 2147602152}
!7027 = !DILocation(line: 131, column: 1, scope: !6785)
!7028 = !{i64 2147602323, i64 2147602366, i64 2147602406}
!7029 = !DILocation(line: 132, column: 1, scope: !6785)
!7030 = !{i64 2147606583, i64 2147606626, i64 2147606666}
!7031 = !DILocation(line: 133, column: 1, scope: !6785)
!7032 = !{i64 2147606825, i64 2147606868, i64 2147606908}
!7033 = !DILocation(line: 134, column: 1, scope: !6785)
!7034 = !{i64 2147606988, i64 2147607031, i64 2147607071}
!7035 = !DILocation(line: 135, column: 1, scope: !6785)
!7036 = !{i64 2147607175, i64 2147607218, i64 2147607258}
!7037 = !DILocation(line: 136, column: 1, scope: !6785)
!7038 = !{i64 2147607383, i64 2147607426, i64 2147607466}
!7039 = !DILocation(line: 137, column: 1, scope: !6785)
!7040 = !{i64 2147607579, i64 2147607622, i64 2147607662}
!7041 = !DILocation(line: 138, column: 1, scope: !6785)
!7042 = !{i64 2147607772, i64 2147607815, i64 2147607855}
!7043 = !DILocation(line: 139, column: 1, scope: !6785)
!7044 = !{i64 2147607954, i64 2147607997, i64 2147608037}
!7045 = !DILocation(line: 140, column: 1, scope: !6785)
!7046 = !{i64 2147608168, i64 2147608211, i64 2147608251}
!7047 = !DILocation(line: 141, column: 1, scope: !6785)
!7048 = !{i64 2147608379, i64 2147608422, i64 2147608462}
!7049 = !DILocation(line: 142, column: 1, scope: !6785)
!7050 = !{i64 2147608599, i64 2147608642, i64 2147608682}
!7051 = !DILocation(line: 143, column: 1, scope: !6785)
!7052 = !{i64 2147608806, i64 2147608849, i64 2147608889}
!7053 = !DILocation(line: 144, column: 1, scope: !6785)
!7054 = !{i64 2147609079, i64 2147609122, i64 2147609162}
!7055 = !DILocation(line: 145, column: 1, scope: !6785)
!7056 = !{i64 2147609327, i64 2147609370, i64 2147609410}
!7057 = !DILocation(line: 146, column: 1, scope: !6785)
!7058 = !{i64 2147609526, i64 2147609569, i64 2147609609}
!7059 = !DILocation(line: 147, column: 1, scope: !6785)
!7060 = !{i64 2147609761, i64 2147609804, i64 2147609844}
!7061 = !DILocation(line: 148, column: 1, scope: !6785)
!7062 = !{i64 2147610011, i64 2147610054, i64 2147610094}
!7063 = !DILocation(line: 149, column: 1, scope: !6785)
!7064 = !{i64 2147610213, i64 2147610256, i64 2147610296}
!7065 = !DILocation(line: 150, column: 1, scope: !6785)
!7066 = !{i64 2147610436, i64 2147610479, i64 2147610519}
!7067 = !DILocation(line: 151, column: 1, scope: !6785)
!7068 = !{i64 2147610650, i64 2147610693, i64 2147610733}
!7069 = !DILocation(line: 152, column: 1, scope: !6785)
!7070 = !{i64 2147610894, i64 2147610937, i64 2147610977}
!7071 = !DILocation(line: 153, column: 1, scope: !6785)
!7072 = !{i64 2147611123, i64 2147611166, i64 2147611206}
!7073 = !DILocation(line: 154, column: 1, scope: !6785)
!7074 = !{i64 2147611352, i64 2147611395, i64 2147611435}
!7075 = !DILocation(line: 155, column: 1, scope: !6785)
!7076 = !{i64 2147611560, i64 2147611603, i64 2147611643}
!7077 = !DILocation(line: 156, column: 1, scope: !6785)
!7078 = !{i64 2147611798, i64 2147611841, i64 2147611881}
!7079 = !DILocation(line: 157, column: 1, scope: !6785)
!7080 = !{i64 2147612024, i64 2147612067, i64 2147612107}
!7081 = !DILocation(line: 158, column: 1, scope: !6785)
!7082 = !{i64 2147612283, i64 2147612326, i64 2147612366}
!7083 = !DILocation(line: 159, column: 1, scope: !6785)
!7084 = !{i64 2147612503, i64 2147612546, i64 2147612586}
!7085 = !DILocation(line: 160, column: 1, scope: !6785)
!7086 = !{i64 2147612735, i64 2147612778, i64 2147612818}
!7087 = !DILocation(line: 161, column: 1, scope: !6785)
!7088 = !{i64 2147612976, i64 2147613019, i64 2147613059}
!7089 = !DILocation(line: 162, column: 1, scope: !6785)
!7090 = !{i64 2147613217, i64 2147613260, i64 2147613300}
!7091 = !DILocation(line: 163, column: 1, scope: !6785)
!7092 = !{i64 2147613440, i64 2147613483, i64 2147613523}
!7093 = !DILocation(line: 164, column: 1, scope: !6785)
!7094 = !{i64 2147613657, i64 2147613700, i64 2147613740}
!7095 = !DILocation(line: 165, column: 1, scope: !6785)
!7096 = !{i64 2147613898, i64 2147613941, i64 2147613981}
!7097 = !DILocation(line: 166, column: 1, scope: !6785)
!7098 = !{i64 2147614085, i64 2147614128, i64 2147614168}
!7099 = !DILocation(line: 167, column: 1, scope: !6785)
!7100 = !{i64 2147614248, i64 2147614291, i64 2147614331}
!7101 = !DILocation(line: 168, column: 1, scope: !6785)
!7102 = !{i64 2147614453, i64 2147614496, i64 2147614536}
!7103 = !DILocation(line: 169, column: 1, scope: !6785)
!7104 = !{i64 2147614646, i64 2147614689, i64 2147614729}
!7105 = !DILocation(line: 170, column: 1, scope: !6785)
!7106 = !{i64 2147614905, i64 2147614948, i64 2147614988}
!7107 = !DILocation(line: 171, column: 1, scope: !6785)
!7108 = !{i64 2147619189, i64 2147619232, i64 2147619272}
!7109 = !DILocation(line: 172, column: 1, scope: !6785)
!7110 = !{i64 2147619418, i64 2147619461, i64 2147619501}
!7111 = !DILocation(line: 173, column: 1, scope: !6785)
!7112 = !{i64 2147619632, i64 2147619675, i64 2147619715}
!7113 = !DILocation(line: 174, column: 1, scope: !6785)
!7114 = !{i64 2147619834, i64 2147619877, i64 2147619917}
!7115 = !DILocation(line: 175, column: 1, scope: !6785)
!7116 = !{i64 2147620030, i64 2147620073, i64 2147620113}
!7117 = !DILocation(line: 176, column: 1, scope: !6785)
!7118 = !{i64 2147620242, i64 2147620285, i64 2147620325}
!7119 = !DILocation(line: 177, column: 1, scope: !6785)
!7120 = !{i64 2147620463, i64 2147620506, i64 2147620546}
!7121 = !DILocation(line: 178, column: 1, scope: !6785)
!7122 = !{i64 2147620677, i64 2147620720, i64 2147620760}
!7123 = !DILocation(line: 179, column: 1, scope: !6785)
!7124 = !{i64 2147620867, i64 2147620910, i64 2147620950}
!7125 = !DILocation(line: 180, column: 1, scope: !6785)
!7126 = !{i64 2147621066, i64 2147621109, i64 2147621149}
!7127 = !DILocation(line: 181, column: 1, scope: !6785)
!7128 = !{i64 2147621271, i64 2147621314, i64 2147621354}
!7129 = !DILocation(line: 182, column: 1, scope: !6785)
!7130 = !{i64 2147621491, i64 2147621534, i64 2147621574}
!7131 = !DILocation(line: 183, column: 1, scope: !6785)
!7132 = !{i64 2147621692, i64 2147621735, i64 2147621775}
!7133 = !DILocation(line: 184, column: 1, scope: !6785)
!7134 = !{i64 2147621891, i64 2147621934, i64 2147621974}
!7135 = !DILocation(line: 185, column: 1, scope: !6785)
!7136 = !{i64 2147622096, i64 2147622139, i64 2147622179}
!7137 = !DILocation(line: 186, column: 1, scope: !6785)
!7138 = !{i64 2147622265, i64 2147622308, i64 2147622348}
!7139 = !DILocation(line: 187, column: 1, scope: !6785)
!7140 = !{i64 2147622449, i64 2147622492, i64 2147622532}
!7141 = !DILocation(line: 188, column: 1, scope: !6785)
!7142 = !{i64 2147622633, i64 2147622676, i64 2147622716}
!7143 = !DILocation(line: 189, column: 1, scope: !6785)
!7144 = !{i64 2147622820, i64 2147622863, i64 2147622903}
!7145 = !DILocation(line: 190, column: 1, scope: !6785)
!7146 = !{i64 2147623004, i64 2147623047, i64 2147623087}
!7147 = !DILocation(line: 191, column: 1, scope: !6785)
!7148 = !{i64 2147623242, i64 2147623285, i64 2147623325}
!7149 = !DILocation(line: 192, column: 1, scope: !6785)
!7150 = !{i64 2147623472, i64 2147623515, i64 2147623555}
!7151 = !DILocation(line: 193, column: 1, scope: !6785)
!7152 = !{i64 2147623701, i64 2147623744, i64 2147623784}
!7153 = !DILocation(line: 194, column: 1, scope: !6785)
!7154 = !{i64 2147623888, i64 2147623931, i64 2147623971}
!7155 = !DILocation(line: 195, column: 1, scope: !6785)
!7156 = !{i64 2147624084, i64 2147624127, i64 2147624167}
!7157 = !DILocation(line: 196, column: 1, scope: !6785)
!7158 = !{i64 2147624292, i64 2147624335, i64 2147624375}
!7159 = !DILocation(line: 197, column: 1, scope: !6785)
!7160 = !{i64 2147624504, i64 2147624547, i64 2147624587}
!7161 = !DILocation(line: 198, column: 1, scope: !6785)
!7162 = !{i64 2147624703, i64 2147624746, i64 2147624786}
!7163 = !DILocation(line: 199, column: 1, scope: !6785)
!7164 = !{i64 2147624941, i64 2147624984, i64 2147625024}
!7165 = !DILocation(line: 200, column: 1, scope: !6785)
!7166 = !{i64 2147625137, i64 2147625180, i64 2147625220}
!7167 = !DILocation(line: 201, column: 1, scope: !6785)
!7168 = !{i64 2147625339, i64 2147625382, i64 2147625422}
!7169 = !DILocation(line: 202, column: 1, scope: !6785)
!7170 = !{i64 2147625532, i64 2147625575, i64 2147625615}
!7171 = !DILocation(line: 203, column: 1, scope: !6785)
!7172 = !{i64 2147625766, i64 2147625809, i64 2147625849}
!7173 = !DILocation(line: 204, column: 1, scope: !6785)
!7174 = !{i64 2147625929, i64 2147625972, i64 2147626012}
!7175 = !DILocation(line: 205, column: 1, scope: !6785)
!7176 = !{i64 2147626168, i64 2147626211, i64 2147626251}
!7177 = !DILocation(line: 206, column: 1, scope: !6785)
!7178 = !{i64 2147626407, i64 2147626450, i64 2147626490}
!7179 = !DILocation(line: 207, column: 1, scope: !6785)
!7180 = !{i64 2147626643, i64 2147626686, i64 2147626726}
!7181 = !DILocation(line: 208, column: 1, scope: !6785)
!7182 = !{i64 2147626873, i64 2147626916, i64 2147626956}
!7183 = !DILocation(line: 209, column: 1, scope: !6785)
!7184 = !{i64 2147627087, i64 2147627130, i64 2147627170}
!7185 = !DILocation(line: 210, column: 1, scope: !6785)
!7186 = !{i64 2147627274, i64 2147627317, i64 2147627357}
!7187 = !DILocation(line: 211, column: 1, scope: !6785)
!7188 = !{i64 2147627473, i64 2147627516, i64 2147627556}
!7189 = !DILocation(line: 212, column: 1, scope: !6785)
!7190 = !{i64 2147627744, i64 2147627787, i64 2147627827}
!7191 = !DILocation(line: 213, column: 1, scope: !6785)
!7192 = !{i64 2147627919, i64 2147627962, i64 2147628002}
!7193 = !DILocation(line: 214, column: 1, scope: !6785)
!7194 = !{i64 2147628153, i64 2147628196, i64 2147628236}
!7195 = !DILocation(line: 215, column: 1, scope: !6785)
!7196 = !{i64 2147632422, i64 2147632465, i64 2147632505}
!7197 = !DILocation(line: 216, column: 1, scope: !6785)
!7198 = !{i64 2147632640, i64 2147632683, i64 2147632723}
!7199 = !DILocation(line: 217, column: 1, scope: !6785)
!7200 = !{i64 2147632830, i64 2147632873, i64 2147632913}
!7201 = !DILocation(line: 218, column: 1, scope: !6785)
!7202 = !{i64 2147633062, i64 2147633105, i64 2147633145}
!7203 = !DILocation(line: 219, column: 1, scope: !6785)
!7204 = !{i64 2147633282, i64 2147633325, i64 2147633365}
!7205 = !DILocation(line: 220, column: 1, scope: !6785)
!7206 = !{i64 2147633478, i64 2147633521, i64 2147633561}
!7207 = !DILocation(line: 221, column: 1, scope: !6785)
!7208 = !{i64 2147633684, i64 2147633727, i64 2147633767}
!7209 = !DILocation(line: 222, column: 1, scope: !6785)
!7210 = !{i64 2147633889, i64 2147633932, i64 2147633972}
!7211 = !DILocation(line: 223, column: 1, scope: !6785)
!7212 = !{i64 2147634115, i64 2147634158, i64 2147634198}
!7213 = !DILocation(line: 224, column: 1, scope: !6785)
!7214 = !{i64 2147634323, i64 2147634366, i64 2147634406}
!7215 = !DILocation(line: 225, column: 1, scope: !6785)
!7216 = !{i64 2147634519, i64 2147634562, i64 2147634602}
!7217 = !DILocation(line: 226, column: 1, scope: !6785)
!7218 = !{i64 2147634751, i64 2147634794, i64 2147634834}
!7219 = !DILocation(line: 227, column: 1, scope: !6785)
!7220 = !{i64 2147634935, i64 2147634978, i64 2147635018}
!7221 = !DILocation(line: 228, column: 1, scope: !6785)
!7222 = !{i64 2147635144, i64 2147635187, i64 2147635227}
!7223 = !DILocation(line: 229, column: 1, scope: !6785)
!7224 = !{i64 2147635352, i64 2147635395, i64 2147635435}
!7225 = !DILocation(line: 230, column: 1, scope: !6785)
!7226 = !{i64 2147635548, i64 2147635591, i64 2147635631}
!7227 = !DILocation(line: 231, column: 1, scope: !6785)
!7228 = !{i64 2147635732, i64 2147635775, i64 2147635815}
!7229 = !DILocation(line: 232, column: 1, scope: !6785)
!7230 = !{i64 2147635958, i64 2147636001, i64 2147636041}
!7231 = !DILocation(line: 233, column: 1, scope: !6785)
!7232 = !{i64 2147636184, i64 2147636227, i64 2147636267}
!7233 = !DILocation(line: 234, column: 1, scope: !6785)
!7234 = !{i64 2147636410, i64 2147636453, i64 2147636493}
!7235 = !DILocation(line: 235, column: 1, scope: !6785)
!7236 = !{i64 2147636636, i64 2147636679, i64 2147636719}
!7237 = !DILocation(line: 236, column: 1, scope: !6785)
!7238 = !{i64 2147636862, i64 2147636905, i64 2147636945}
!7239 = !DILocation(line: 237, column: 1, scope: !6785)
!7240 = !{i64 2147637094, i64 2147637137, i64 2147637177}
!7241 = !DILocation(line: 238, column: 1, scope: !6785)
!7242 = !{i64 2147637332, i64 2147637375, i64 2147637415}
!7243 = !DILocation(line: 239, column: 1, scope: !6785)
!7244 = !{i64 2147637564, i64 2147637607, i64 2147637647}
!7245 = !DILocation(line: 240, column: 1, scope: !6785)
!7246 = !{i64 2147637766, i64 2147637809, i64 2147637849}
!7247 = !DILocation(line: 241, column: 1, scope: !6785)
!7248 = !{i64 2147638016, i64 2147638059, i64 2147638099}
!7249 = !DILocation(line: 242, column: 1, scope: !6785)
!7250 = !{i64 2147638254, i64 2147638297, i64 2147638337}
!7251 = !DILocation(line: 243, column: 1, scope: !6785)
!7252 = !{i64 2147638462, i64 2147638505, i64 2147638545}
!7253 = !DILocation(line: 244, column: 1, scope: !6785)
!7254 = !{i64 2147638658, i64 2147638701, i64 2147638741}
!7255 = !DILocation(line: 245, column: 1, scope: !6785)
!7256 = !{i64 2147638842, i64 2147638885, i64 2147638925}
!7257 = !DILocation(line: 246, column: 1, scope: !6785)
!7258 = !{i64 2147639059, i64 2147639102, i64 2147639142}
!7259 = !DILocation(line: 247, column: 1, scope: !6785)
!7260 = !{i64 2147639264, i64 2147639307, i64 2147639347}
!7261 = !DILocation(line: 248, column: 1, scope: !6785)
!7262 = !{i64 2147639499, i64 2147639542, i64 2147639582}
!7263 = !DILocation(line: 249, column: 1, scope: !6785)
!7264 = !{i64 2147639722, i64 2147639765, i64 2147639805}
!7265 = !DILocation(line: 250, column: 1, scope: !6785)
!7266 = !{i64 2147639945, i64 2147639988, i64 2147640028}
!7267 = !DILocation(line: 251, column: 1, scope: !6785)
!7268 = !{i64 2147640183, i64 2147640226, i64 2147640266}
!7269 = !DILocation(line: 252, column: 1, scope: !6785)
!7270 = !{i64 2147640421, i64 2147640464, i64 2147640504}
!7271 = !DILocation(line: 253, column: 1, scope: !6785)
!7272 = !{i64 2147640638, i64 2147640681, i64 2147640721}
!7273 = !DILocation(line: 254, column: 1, scope: !6785)
!7274 = !{i64 2147640843, i64 2147640886, i64 2147640926}
!7275 = !DILocation(line: 255, column: 1, scope: !6785)
!7276 = !{i64 2147641036, i64 2147641079, i64 2147641119}
!7277 = !DILocation(line: 256, column: 1, scope: !6785)
!7278 = !{i64 2147645350, i64 2147645393, i64 2147645433}
!7279 = !DILocation(line: 257, column: 1, scope: !6785)
!7280 = !{i64 2147645558, i64 2147645601, i64 2147645641}
!7281 = !DILocation(line: 258, column: 1, scope: !6785)
!7282 = !{i64 2147645754, i64 2147645797, i64 2147645837}
!7283 = !DILocation(line: 259, column: 1, scope: !6785)
!7284 = !{i64 2147645968, i64 2147646011, i64 2147646051}
!7285 = !DILocation(line: 260, column: 1, scope: !6785)
!7286 = !{i64 2147646176, i64 2147646219, i64 2147646259}
!7287 = !DILocation(line: 261, column: 1, scope: !6785)
!7288 = !{i64 2147646366, i64 2147646409, i64 2147646449}
!7289 = !DILocation(line: 262, column: 1, scope: !6785)
!7290 = !{i64 2147646580, i64 2147646623, i64 2147646663}
!7291 = !DILocation(line: 263, column: 1, scope: !6785)
!7292 = !{i64 2147646842, i64 2147646885, i64 2147646925}
!7293 = !DILocation(line: 264, column: 1, scope: !6785)
!7294 = !{i64 2147647053, i64 2147647096, i64 2147647136}
!7295 = !DILocation(line: 265, column: 1, scope: !6785)
!7296 = !{i64 2147647297, i64 2147647340, i64 2147647380}
!7297 = !DILocation(line: 266, column: 1, scope: !6785)
!7298 = !{i64 2147647508, i64 2147647551, i64 2147647591}
!7299 = !DILocation(line: 267, column: 1, scope: !6785)
!7300 = !{i64 2147647737, i64 2147647780, i64 2147647820}
!7301 = !DILocation(line: 268, column: 1, scope: !6785)
!7302 = !{i64 2147648002, i64 2147648045, i64 2147648085}
!7303 = !DILocation(line: 269, column: 1, scope: !6785)
!7304 = !{i64 2147648207, i64 2147648250, i64 2147648290}
!7305 = !DILocation(line: 270, column: 1, scope: !6785)
!7306 = !{i64 2147648403, i64 2147648446, i64 2147648486}
!7307 = !DILocation(line: 271, column: 1, scope: !6785)
!7308 = !{i64 2147648626, i64 2147648669, i64 2147648709}
!7309 = !DILocation(line: 272, column: 1, scope: !6785)
!7310 = !{i64 2147648789, i64 2147648832, i64 2147648872}
!7311 = !DILocation(line: 273, column: 1, scope: !6785)
!7312 = !{i64 2147648994, i64 2147649037, i64 2147649077}
!7313 = !DILocation(line: 274, column: 1, scope: !6785)
!7314 = !{i64 2147649214, i64 2147649257, i64 2147649297}
!7315 = !DILocation(line: 275, column: 1, scope: !6785)
!7316 = !{i64 2147649428, i64 2147649471, i64 2147649511}
!7317 = !DILocation(line: 276, column: 1, scope: !6785)
!7318 = !{i64 2147649672, i64 2147649715, i64 2147649755}
!7319 = !DILocation(line: 277, column: 1, scope: !6785)
!7320 = !{i64 2147649904, i64 2147649947, i64 2147649987}
!7321 = !DILocation(line: 278, column: 1, scope: !6785)
!7322 = !{i64 2147650118, i64 2147650161, i64 2147650201}
!7323 = !DILocation(line: 279, column: 1, scope: !6785)
!7324 = !{i64 2147650329, i64 2147650372, i64 2147650412}
!7325 = !DILocation(line: 280, column: 1, scope: !6785)
!7326 = !{i64 2147650522, i64 2147650565, i64 2147650605}
!7327 = !DILocation(line: 281, column: 1, scope: !6785)
!7328 = !{i64 2147650721, i64 2147650764, i64 2147650804}
!7329 = !DILocation(line: 282, column: 1, scope: !6785)
!7330 = !{i64 2147650893, i64 2147650936, i64 2147650976}
!7331 = !DILocation(line: 283, column: 1, scope: !6785)
!7332 = !{i64 2147651086, i64 2147651129, i64 2147651169}
!7333 = !DILocation(line: 284, column: 1, scope: !6785)
!7334 = !{i64 2147651258, i64 2147651301, i64 2147651341}
!7335 = !DILocation(line: 285, column: 1, scope: !6785)
!7336 = !{i64 2147651448, i64 2147651491, i64 2147651531}
!7337 = !DILocation(line: 286, column: 1, scope: !6785)
!7338 = !{i64 2147651641, i64 2147651684, i64 2147651724}
!7339 = !DILocation(line: 287, column: 1, scope: !6785)
!7340 = !{i64 2147651837, i64 2147651880, i64 2147651920}
!7341 = !DILocation(line: 288, column: 1, scope: !6785)
!7342 = !{i64 2147652000, i64 2147652043, i64 2147652083}
!7343 = !DILocation(line: 289, column: 1, scope: !6785)
!7344 = !{i64 2147652202, i64 2147652245, i64 2147652285}
!7345 = !DILocation(line: 290, column: 1, scope: !6785)
!7346 = !{i64 2147652407, i64 2147652450, i64 2147652490}
!7347 = !DILocation(line: 291, column: 1, scope: !6785)
!7348 = !{i64 2147652615, i64 2147652658, i64 2147652698}
!7349 = !DILocation(line: 292, column: 1, scope: !6785)
!7350 = !{i64 2147652808, i64 2147652851, i64 2147652891}
!7351 = !DILocation(line: 293, column: 1, scope: !6785)
!7352 = !{i64 2147652995, i64 2147653038, i64 2147653078}
!7353 = !DILocation(line: 294, column: 1, scope: !6785)
!7354 = !{i64 2147653212, i64 2147653255, i64 2147653295}
!7355 = !DILocation(line: 295, column: 1, scope: !6785)
!7356 = !{i64 2147653432, i64 2147653475, i64 2147653515}
!7357 = !DILocation(line: 296, column: 1, scope: !6785)
!7358 = !{i64 2147653659, i64 2147653702, i64 2147653742}
!7359 = !DILocation(line: 297, column: 1, scope: !6785)
!7360 = !{i64 2147653876, i64 2147653919, i64 2147653959}
!7361 = !DILocation(line: 298, column: 1, scope: !6785)
!7362 = !{i64 2147658229, i64 2147658272, i64 2147658312}
!7363 = !DILocation(line: 299, column: 1, scope: !6785)
!7364 = !{i64 2147658461, i64 2147658504, i64 2147658544}
!7365 = !DILocation(line: 300, column: 1, scope: !6785)
!7366 = !{i64 2147658678, i64 2147658721, i64 2147658761}
!7367 = !DILocation(line: 301, column: 1, scope: !6785)
!7368 = !{i64 2147658885, i64 2147658928, i64 2147658968}
!7369 = !DILocation(line: 302, column: 1, scope: !6785)
!7370 = !{i64 2147659086, i64 2147659129, i64 2147659169}
!7371 = !DILocation(line: 303, column: 1, scope: !6785)
!7372 = !{i64 2147659318, i64 2147659361, i64 2147659401}
!7373 = !DILocation(line: 304, column: 1, scope: !6785)
!7374 = !{i64 2147659526, i64 2147659569, i64 2147659609}
!7375 = !DILocation(line: 305, column: 1, scope: !6785)
!7376 = !{i64 2147659716, i64 2147659759, i64 2147659799}
!7377 = !DILocation(line: 306, column: 1, scope: !6785)
!7378 = !{i64 2147659942, i64 2147659985, i64 2147660025}
!7379 = !DILocation(line: 307, column: 1, scope: !6785)
!7380 = !{i64 2147660131, i64 2147660174, i64 2147660214}
!7381 = !DILocation(line: 308, column: 1, scope: !6785)
!7382 = !{i64 2147660402, i64 2147660445, i64 2147660485}
!7383 = !DILocation(line: 309, column: 1, scope: !6785)
!7384 = !{i64 2147660622, i64 2147660665, i64 2147660705}
!7385 = !DILocation(line: 310, column: 1, scope: !6785)
!7386 = !{i64 2147660875, i64 2147660918, i64 2147660958}
!7387 = !DILocation(line: 311, column: 1, scope: !6785)
!7388 = !{i64 2147661083, i64 2147661126, i64 2147661166}
!7389 = !DILocation(line: 312, column: 1, scope: !6785)
!7390 = !{i64 2147661315, i64 2147661358, i64 2147661398}
!7391 = !DILocation(line: 313, column: 1, scope: !6785)
!7392 = !{i64 2147661526, i64 2147661569, i64 2147661609}
!7393 = !DILocation(line: 314, column: 1, scope: !6785)
!7394 = !{i64 2147661716, i64 2147661759, i64 2147661799}
!7395 = !DILocation(line: 315, column: 1, scope: !6785)
!7396 = !{i64 2147661930, i64 2147661973, i64 2147662013}
!7397 = !DILocation(line: 316, column: 1, scope: !6785)
!7398 = !{i64 2147662129, i64 2147662172, i64 2147662212}
!7399 = !DILocation(line: 317, column: 1, scope: !6785)
!7400 = !{i64 2147662316, i64 2147662359, i64 2147662399}
!7401 = !DILocation(line: 318, column: 1, scope: !6785)
!7402 = !{i64 2147662524, i64 2147662567, i64 2147662607}
!7403 = !DILocation(line: 319, column: 1, scope: !6785)
!7404 = !{i64 2147662753, i64 2147662796, i64 2147662836}
!7405 = !DILocation(line: 320, column: 1, scope: !6785)
!7406 = !{i64 2147662955, i64 2147662998, i64 2147663038}
!7407 = !DILocation(line: 321, column: 1, scope: !6785)
!7408 = !{i64 2147663154, i64 2147663197, i64 2147663237}
!7409 = !DILocation(line: 322, column: 1, scope: !6785)
!7410 = !{i64 2147663371, i64 2147663414, i64 2147663454}
!7411 = !DILocation(line: 324, column: 1, scope: !6785)
!7412 = distinct !DISubprogram(name: "stm32l1_init", scope: !482, file: !482, line: 31, type: !489, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7413)
!7413 = !{!7414, !7415}
!7414 = !DILocalVariable(name: "arg", arg: 1, scope: !7412, file: !482, line: 31, type: !491)
!7415 = !DILocalVariable(name: "key", scope: !7412, file: !482, line: 33, type: !113)
!7416 = !DILocation(line: 0, scope: !7412)
!7417 = !DILocation(line: 55, column: 2, scope: !7418, inlinedAt: !7425)
!7418 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7419, file: !7419, line: 42, type: !7420, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7422)
!7419 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7420 = !DISubroutineType(types: !7421)
!7421 = !{!32}
!7422 = !{!7423, !7424}
!7423 = !DILocalVariable(name: "key", scope: !7418, file: !7419, line: 44, type: !32)
!7424 = !DILocalVariable(name: "tmp", scope: !7418, file: !7419, line: 53, type: !32)
!7425 = distinct !DILocation(line: 37, column: 8, scope: !7412)
!7426 = !{i64 1527768}
!7427 = !DILocation(line: 0, scope: !7418, inlinedAt: !7425)
!7428 = !DILocalVariable(name: "key", arg: 1, scope: !7429, file: !7419, line: 84, type: !32)
!7429 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7419, file: !7419, line: 84, type: !7430, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7432)
!7430 = !DISubroutineType(types: !7431)
!7431 = !{null, !32}
!7432 = !{!7428}
!7433 = !DILocation(line: 0, scope: !7429, inlinedAt: !7434)
!7434 = distinct !DILocation(line: 44, column: 2, scope: !7412)
!7435 = !DILocation(line: 95, column: 2, scope: !7429, inlinedAt: !7434)
!7436 = !{i64 1528585}
!7437 = !DILocation(line: 48, column: 18, scope: !7412)
!7438 = !DILocation(line: 54, column: 2, scope: !7412)
!7439 = !DILocation(line: 55, column: 2, scope: !7412)
!7440 = !DILocation(line: 57, column: 2, scope: !7412)
!7441 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !7442, file: !7442, line: 531, type: !7443, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7445)
!7442 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7443 = !DISubroutineType(types: !7444)
!7444 = !{null, !113}
!7445 = !{!7446, !7447}
!7446 = !DILocalVariable(name: "Periphs", arg: 1, scope: !7441, file: !7442, line: 531, type: !113)
!7447 = !DILocalVariable(name: "tmpreg", scope: !7441, file: !7442, line: 533, type: !461)
!7448 = !DILocation(line: 0, scope: !7441)
!7449 = !DILocation(line: 533, column: 3, scope: !7441)
!7450 = !DILocation(line: 533, column: 17, scope: !7441)
!7451 = !DILocation(line: 534, column: 3, scope: !7441)
!7452 = !DILocation(line: 536, column: 12, scope: !7441)
!7453 = !DILocation(line: 536, column: 10, scope: !7441)
!7454 = !DILocation(line: 537, column: 9, scope: !7441)
!7455 = !DILocation(line: 538, column: 1, scope: !7441)
!7456 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !7457, file: !7457, line: 272, type: !7443, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7458)
!7457 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7458 = !{!7459}
!7459 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !7456, file: !7457, line: 272, type: !113)
!7460 = !DILocation(line: 0, scope: !7456)
!7461 = !DILocation(line: 274, column: 3, scope: !7456)
!7462 = !DILocation(line: 275, column: 1, scope: !7456)
!7463 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !519, file: !519, line: 26, type: !525, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !516, retainedNodes: !7464)
!7464 = !{!7465}
!7465 = !DILocalVariable(name: "dev", arg: 1, scope: !7463, file: !519, line: 26, type: !527)
!7466 = !DILocation(line: 0, scope: !7463)
!7467 = !DILocation(line: 68, column: 2, scope: !7463)
!7468 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7469, file: !7469, line: 14, type: !4952, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2661, retainedNodes: !7470)
!7469 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7470 = !{!7471, !7472}
!7471 = !DILocalVariable(name: "fmt", arg: 1, scope: !7468, file: !7469, line: 14, type: !269)
!7472 = !DILocalVariable(name: "ap", scope: !7468, file: !7469, line: 16, type: !7473)
!7473 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3960, line: 99, baseType: !7474)
!7474 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3960, line: 40, baseType: !7475)
!7475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7469, baseType: !7476)
!7476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7477)
!7477 = !{!7478}
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7476, file: !7469, line: 16, baseType: !104, size: 32)
!7479 = !DILocation(line: 0, scope: !7468)
!7480 = !DILocation(line: 16, column: 2, scope: !7468)
!7481 = !DILocation(line: 16, column: 10, scope: !7468)
!7482 = !DILocation(line: 18, column: 2, scope: !7468)
!7483 = !DILocation(line: 19, column: 2, scope: !7468)
!7484 = !DILocation(line: 20, column: 2, scope: !7468)
!7485 = !DILocation(line: 21, column: 1, scope: !7468)
!7486 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7469, file: !7469, line: 23, type: !7487, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2661, retainedNodes: !7489)
!7487 = !DISubroutineType(types: !7488)
!7488 = !{null, !269, !7473}
!7489 = !{!7490, !7491}
!7490 = !DILocalVariable(name: "fmt", arg: 1, scope: !7486, file: !7469, line: 23, type: !269)
!7491 = !DILocalVariable(name: "ap", arg: 2, scope: !7486, file: !7469, line: 23, type: !7473)
!7492 = !DILocation(line: 0, scope: !7486)
!7493 = !DILocation(line: 25, column: 2, scope: !7486)
!7494 = !DILocation(line: 26, column: 1, scope: !7486)
!7495 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7469, file: !7469, line: 52, type: !7496, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2661, retainedNodes: !7498)
!7496 = !DISubroutineType(types: !7497)
!7497 = !{null, !105, !13, !111}
!7498 = !{!7499, !7500, !7501, !7502}
!7499 = !DILocalVariable(name: "level", arg: 1, scope: !7495, file: !7469, line: 52, type: !105)
!7500 = !DILocalVariable(name: "data", arg: 2, scope: !7495, file: !7469, line: 52, type: !13)
!7501 = !DILocalVariable(name: "size", arg: 3, scope: !7495, file: !7469, line: 52, type: !111)
!7502 = !DILocalVariable(name: "data_buffer", scope: !7495, file: !7469, line: 54, type: !269)
!7503 = !DILocation(line: 0, scope: !7495)
!7504 = !DILocation(line: 55, column: 14, scope: !7495)
!7505 = !DILocation(line: 55, column: 2, scope: !7495)
!7506 = !DILocation(line: 56, column: 3, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7495, file: !7469, line: 55, column: 20)
!7508 = !DILocation(line: 57, column: 3, scope: !7507)
!7509 = !DILocation(line: 59, column: 7, scope: !7507)
!7510 = distinct !{!7510, !7505, !7511}
!7511 = !DILocation(line: 65, column: 2, scope: !7495)
!7512 = !DILocation(line: 66, column: 1, scope: !7495)
!7513 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3425, file: !3425, line: 175, type: !3426, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2661, retainedNodes: !7514)
!7514 = !{!7515}
!7515 = !DILocalVariable(name: "level", arg: 1, scope: !7513, file: !3425, line: 175, type: !105)
!7516 = !DILocation(line: 0, scope: !7513)
!7517 = !DILocation(line: 177, column: 2, scope: !7513)
!7518 = !DILocation(line: 189, column: 1, scope: !7513)
!7519 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7469, file: !7469, line: 28, type: !7520, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2661, retainedNodes: !7522)
!7520 = !DISubroutineType(types: !7521)
!7521 = !{null, !269, !111}
!7522 = !{!7523, !7524, !7525, !7527, !7529}
!7523 = !DILocalVariable(name: "data", arg: 1, scope: !7519, file: !7469, line: 28, type: !269)
!7524 = !DILocalVariable(name: "length", arg: 2, scope: !7519, file: !7469, line: 28, type: !111)
!7525 = !DILocalVariable(name: "i", scope: !7526, file: !7469, line: 30, type: !111)
!7526 = distinct !DILexicalBlock(scope: !7519, file: !7469, line: 30, column: 2)
!7527 = !DILocalVariable(name: "i", scope: !7528, file: !7469, line: 40, type: !111)
!7528 = distinct !DILexicalBlock(scope: !7519, file: !7469, line: 40, column: 2)
!7529 = !DILocalVariable(name: "c", scope: !7530, file: !7469, line: 42, type: !170)
!7530 = distinct !DILexicalBlock(scope: !7531, file: !7469, line: 41, column: 19)
!7531 = distinct !DILexicalBlock(scope: !7532, file: !7469, line: 41, column: 7)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !7469, line: 40, column: 54)
!7533 = distinct !DILexicalBlock(scope: !7528, file: !7469, line: 40, column: 2)
!7534 = !DILocation(line: 0, scope: !7519)
!7535 = !DILocation(line: 0, scope: !7526)
!7536 = !DILocation(line: 30, column: 2, scope: !7526)
!7537 = !DILocation(line: 38, column: 2, scope: !7519)
!7538 = !DILocation(line: 0, scope: !7528)
!7539 = !DILocation(line: 40, column: 2, scope: !7528)
!7540 = !DILocation(line: 31, column: 9, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7542, file: !7469, line: 31, column: 7)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !7469, line: 30, column: 54)
!7543 = distinct !DILexicalBlock(scope: !7526, file: !7469, line: 30, column: 2)
!7544 = !DILocation(line: 31, column: 7, scope: !7542)
!7545 = !DILocation(line: 32, column: 35, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7541, file: !7469, line: 31, column: 19)
!7547 = !DILocation(line: 32, column: 20, scope: !7546)
!7548 = !DILocation(line: 32, column: 4, scope: !7546)
!7549 = !DILocation(line: 33, column: 3, scope: !7546)
!7550 = !DILocation(line: 34, column: 4, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7541, file: !7469, line: 33, column: 10)
!7552 = !DILocation(line: 30, column: 50, scope: !7543)
!7553 = !DILocation(line: 30, column: 24, scope: !7543)
!7554 = distinct !{!7554, !7536, !7555}
!7555 = !DILocation(line: 36, column: 2, scope: !7526)
!7556 = !DILocation(line: 49, column: 2, scope: !7519)
!7557 = !DILocation(line: 50, column: 1, scope: !7519)
!7558 = !DILocation(line: 41, column: 9, scope: !7531)
!7559 = !DILocation(line: 41, column: 7, scope: !7532)
!7560 = !DILocation(line: 42, column: 22, scope: !7530)
!7561 = !DILocation(line: 0, scope: !7530)
!7562 = !DILocation(line: 44, column: 25, scope: !7530)
!7563 = !DILocation(line: 44, column: 17, scope: !7530)
!7564 = !DILocation(line: 44, column: 33, scope: !7530)
!7565 = !DILocation(line: 44, column: 4, scope: !7530)
!7566 = !DILocation(line: 45, column: 3, scope: !7530)
!7567 = !DILocation(line: 46, column: 4, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7531, file: !7469, line: 45, column: 10)
!7569 = !DILocation(line: 40, column: 50, scope: !7533)
!7570 = !DILocation(line: 40, column: 24, scope: !7533)
!7571 = distinct !{!7571, !7539, !7572}
!7572 = !DILocation(line: 48, column: 2, scope: !7528)
!7573 = distinct !DISubprogram(name: "isprint", scope: !6529, file: !6529, line: 37, type: !448, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2661, retainedNodes: !7574)
!7574 = !{!7575}
!7575 = !DILocalVariable(name: "c", arg: 1, scope: !7573, file: !6529, line: 37, type: !105)
!7576 = !DILocation(line: 0, scope: !7573)
!7577 = !DILocation(line: 39, column: 38, scope: !7573)
!7578 = !DILocation(line: 39, column: 2, scope: !7573)
!7579 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7580, file: !7580, line: 57, type: !7581, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7627)
!7580 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7581 = !DISubroutineType(types: !7582)
!7582 = !{null, !32, !7583}
!7583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7584, size: 32)
!7584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7585)
!7585 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2784, line: 141, baseType: !7586)
!7586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2784, line: 97, size: 256, elements: !7587)
!7587 = !{!7588}
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7586, file: !2784, line: 107, baseType: !7589, size: 256)
!7589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2784, line: 98, size: 256, elements: !7590)
!7590 = !{!7591, !7596, !7601, !7606, !7611, !7616, !7621, !7626}
!7591 = !DIDerivedType(tag: DW_TAG_member, scope: !7589, file: !2784, line: 99, baseType: !7592, size: 32)
!7592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7589, file: !2784, line: 99, size: 32, elements: !7593)
!7593 = !{!7594, !7595}
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7592, file: !2784, line: 99, baseType: !113, size: 32)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7592, file: !2784, line: 99, baseType: !113, size: 32)
!7596 = !DIDerivedType(tag: DW_TAG_member, scope: !7589, file: !2784, line: 100, baseType: !7597, size: 32, offset: 32)
!7597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7589, file: !2784, line: 100, size: 32, elements: !7598)
!7598 = !{!7599, !7600}
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7597, file: !2784, line: 100, baseType: !113, size: 32)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7597, file: !2784, line: 100, baseType: !113, size: 32)
!7601 = !DIDerivedType(tag: DW_TAG_member, scope: !7589, file: !2784, line: 101, baseType: !7602, size: 32, offset: 64)
!7602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7589, file: !2784, line: 101, size: 32, elements: !7603)
!7603 = !{!7604, !7605}
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7602, file: !2784, line: 101, baseType: !113, size: 32)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7602, file: !2784, line: 101, baseType: !113, size: 32)
!7606 = !DIDerivedType(tag: DW_TAG_member, scope: !7589, file: !2784, line: 102, baseType: !7607, size: 32, offset: 96)
!7607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7589, file: !2784, line: 102, size: 32, elements: !7608)
!7608 = !{!7609, !7610}
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7607, file: !2784, line: 102, baseType: !113, size: 32)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7607, file: !2784, line: 102, baseType: !113, size: 32)
!7611 = !DIDerivedType(tag: DW_TAG_member, scope: !7589, file: !2784, line: 103, baseType: !7612, size: 32, offset: 128)
!7612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7589, file: !2784, line: 103, size: 32, elements: !7613)
!7613 = !{!7614, !7615}
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7612, file: !2784, line: 103, baseType: !113, size: 32)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7612, file: !2784, line: 103, baseType: !113, size: 32)
!7616 = !DIDerivedType(tag: DW_TAG_member, scope: !7589, file: !2784, line: 104, baseType: !7617, size: 32, offset: 160)
!7617 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7589, file: !2784, line: 104, size: 32, elements: !7618)
!7618 = !{!7619, !7620}
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7617, file: !2784, line: 104, baseType: !113, size: 32)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7617, file: !2784, line: 104, baseType: !113, size: 32)
!7621 = !DIDerivedType(tag: DW_TAG_member, scope: !7589, file: !2784, line: 105, baseType: !7622, size: 32, offset: 192)
!7622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7589, file: !2784, line: 105, size: 32, elements: !7623)
!7623 = !{!7624, !7625}
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7622, file: !2784, line: 105, baseType: !113, size: 32)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7622, file: !2784, line: 105, baseType: !113, size: 32)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7589, file: !2784, line: 106, baseType: !113, size: 32, offset: 224)
!7627 = !{!7628, !7629}
!7628 = !DILocalVariable(name: "reason", arg: 1, scope: !7579, file: !7580, line: 57, type: !32)
!7629 = !DILocalVariable(name: "esf", arg: 2, scope: !7579, file: !7580, line: 57, type: !7583)
!7630 = !DILocation(line: 0, scope: !7579)
!7631 = !DILocation(line: 60, column: 10, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7579, file: !7580, line: 60, column: 6)
!7633 = !DILocation(line: 60, column: 6, scope: !7579)
!7634 = !DILocation(line: 61, column: 3, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7632, file: !7580, line: 60, column: 19)
!7636 = !DILocation(line: 62, column: 2, scope: !7635)
!7637 = !DILocation(line: 63, column: 2, scope: !7579)
!7638 = !DILocation(line: 64, column: 1, scope: !7579)
!7639 = distinct !DISubprogram(name: "esf_dump", scope: !7580, file: !7580, line: 20, type: !7640, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7642)
!7640 = !DISubroutineType(types: !7641)
!7641 = !{null, !7583}
!7642 = !{!7643}
!7643 = !DILocalVariable(name: "esf", arg: 1, scope: !7639, file: !7580, line: 20, type: !7583)
!7644 = !DILocation(line: 0, scope: !7639)
!7645 = !DILocation(line: 22, column: 2, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7647, file: !7580, line: 22, column: 2)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !7580, line: 22, column: 2)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !7580, line: 22, column: 2)
!7649 = distinct !DILexicalBlock(scope: !7639, file: !7580, line: 22, column: 2)
!7650 = !DILocation(line: 24, column: 2, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !7580, line: 24, column: 2)
!7652 = distinct !DILexicalBlock(scope: !7653, file: !7580, line: 24, column: 2)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !7580, line: 24, column: 2)
!7654 = distinct !DILexicalBlock(scope: !7639, file: !7580, line: 24, column: 2)
!7655 = !DILocation(line: 26, column: 2, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7657, file: !7580, line: 26, column: 2)
!7657 = distinct !DILexicalBlock(scope: !7658, file: !7580, line: 26, column: 2)
!7658 = distinct !DILexicalBlock(scope: !7659, file: !7580, line: 26, column: 2)
!7659 = distinct !DILexicalBlock(scope: !7639, file: !7580, line: 26, column: 2)
!7660 = !DILocation(line: 53, column: 2, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7662, file: !7580, line: 53, column: 2)
!7662 = distinct !DILexicalBlock(scope: !7663, file: !7580, line: 53, column: 2)
!7663 = distinct !DILexicalBlock(scope: !7664, file: !7580, line: 53, column: 2)
!7664 = distinct !DILexicalBlock(scope: !7639, file: !7580, line: 53, column: 2)
!7665 = !DILocation(line: 55, column: 1, scope: !7639)
!7666 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7580, file: !7580, line: 82, type: !7667, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7682)
!7667 = !DISubroutineType(types: !7668)
!7668 = !{null, !7583, !7669}
!7669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7670, size: 32)
!7670 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !7671)
!7671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7672)
!7672 = !{!7673, !7674, !7675, !7676, !7677, !7678, !7679, !7680, !7681}
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7671, file: !200, line: 26, baseType: !113, size: 32)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7671, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7671, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7671, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7671, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7671, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7671, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7671, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7671, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7682 = !{!7683, !7684, !7685}
!7683 = !DILocalVariable(name: "esf", arg: 1, scope: !7666, file: !7580, line: 82, type: !7583)
!7684 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7666, file: !7580, line: 82, type: !7669)
!7685 = !DILocalVariable(name: "reason", scope: !7666, file: !7580, line: 88, type: !32)
!7686 = !DILocation(line: 0, scope: !7666)
!7687 = !DILocation(line: 88, column: 35, scope: !7666)
!7688 = !DILocation(line: 108, column: 2, scope: !7666)
!7689 = !DILocation(line: 131, column: 1, scope: !7666)
!7690 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7580, file: !7580, line: 133, type: !7691, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7693)
!7691 = !DISubroutineType(types: !7692)
!7692 = !{null, !104}
!7693 = !{!7694, !7695, !7696}
!7694 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7690, file: !7580, line: 133, type: !104)
!7695 = !DILocalVariable(name: "ssf_contents", scope: !7690, file: !7580, line: 135, type: !1084)
!7696 = !DILocalVariable(name: "oops_esf", scope: !7690, file: !7580, line: 136, type: !7585)
!7697 = !DILocation(line: 0, scope: !7690)
!7698 = !DILocation(line: 136, column: 2, scope: !7690)
!7699 = !DILocation(line: 136, column: 15, scope: !7690)
!7700 = !DILocation(line: 139, column: 22, scope: !7690)
!7701 = !DILocation(line: 139, column: 17, scope: !7690)
!7702 = !DILocation(line: 139, column: 20, scope: !7690)
!7703 = !DILocation(line: 141, column: 2, scope: !7690)
!7704 = !DILocation(line: 142, column: 2, scope: !7690)
!7705 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7706, file: !7706, line: 40, type: !7430, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2675, retainedNodes: !7707)
!7706 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7707 = !{!7708}
!7708 = !DILocalVariable(name: "irq", arg: 1, scope: !7705, file: !7706, line: 40, type: !32)
!7709 = !DILocation(line: 0, scope: !7705)
!7710 = !DILocation(line: 42, column: 2, scope: !7705)
!7711 = !DILocation(line: 43, column: 1, scope: !7705)
!7712 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !692, file: !692, line: 1508, type: !7713, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2675, retainedNodes: !7715)
!7713 = !DISubroutineType(types: !7714)
!7714 = !{null, !1011}
!7715 = !{!7716}
!7716 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7712, file: !692, line: 1508, type: !1011)
!7717 = !DILocation(line: 0, scope: !7712)
!7718 = !DILocation(line: 1510, column: 23, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7712, file: !692, line: 1510, column: 7)
!7720 = !DILocation(line: 1510, column: 7, scope: !7712)
!7721 = !DILocation(line: 1512, column: 5, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7719, file: !692, line: 1511, column: 3)
!7723 = !{i64 2149972831}
!7724 = !DILocation(line: 1513, column: 81, scope: !7722)
!7725 = !DILocation(line: 1513, column: 60, scope: !7722)
!7726 = !DILocation(line: 1513, column: 34, scope: !7722)
!7727 = !DILocation(line: 1513, column: 5, scope: !7722)
!7728 = !DILocation(line: 1513, column: 43, scope: !7722)
!7729 = !DILocation(line: 1514, column: 5, scope: !7722)
!7730 = !{i64 2149972945}
!7731 = !DILocation(line: 1515, column: 3, scope: !7722)
!7732 = !DILocation(line: 1516, column: 1, scope: !7712)
!7733 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7706, file: !7706, line: 45, type: !7430, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2675, retainedNodes: !7734)
!7734 = !{!7735}
!7735 = !DILocalVariable(name: "irq", arg: 1, scope: !7733, file: !7706, line: 45, type: !32)
!7736 = !DILocation(line: 0, scope: !7733)
!7737 = !DILocation(line: 47, column: 2, scope: !7733)
!7738 = !DILocation(line: 48, column: 1, scope: !7733)
!7739 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !692, file: !692, line: 1546, type: !7713, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2675, retainedNodes: !7740)
!7740 = !{!7741}
!7741 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7739, file: !692, line: 1546, type: !1011)
!7742 = !DILocation(line: 0, scope: !7739)
!7743 = !DILocation(line: 1548, column: 23, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7739, file: !692, line: 1548, column: 7)
!7745 = !DILocation(line: 1548, column: 7, scope: !7739)
!7746 = !DILocation(line: 1550, column: 81, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7744, file: !692, line: 1549, column: 3)
!7748 = !DILocation(line: 1550, column: 60, scope: !7747)
!7749 = !DILocation(line: 1550, column: 34, scope: !7747)
!7750 = !DILocation(line: 1550, column: 5, scope: !7747)
!7751 = !DILocation(line: 1550, column: 43, scope: !7747)
!7752 = !DILocation(line: 271, column: 3, scope: !7753, inlinedAt: !7755)
!7753 = distinct !DISubprogram(name: "__DSB", scope: !7754, file: !7754, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2675, retainedNodes: !397)
!7754 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7755 = distinct !DILocation(line: 1551, column: 5, scope: !7747)
!7756 = !{i64 2430333}
!7757 = !DILocation(line: 260, column: 3, scope: !7758, inlinedAt: !7759)
!7758 = distinct !DISubprogram(name: "__ISB", scope: !7754, file: !7754, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2675, retainedNodes: !397)
!7759 = distinct !DILocation(line: 1552, column: 5, scope: !7747)
!7760 = !{i64 2430050}
!7761 = !DILocation(line: 1553, column: 3, scope: !7747)
!7762 = !DILocation(line: 1554, column: 1, scope: !7739)
!7763 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7706, file: !7706, line: 50, type: !7764, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2675, retainedNodes: !7766)
!7764 = !DISubroutineType(types: !7765)
!7765 = !{!105, !32}
!7766 = !{!7767}
!7767 = !DILocalVariable(name: "irq", arg: 1, scope: !7763, file: !7706, line: 50, type: !32)
!7768 = !DILocation(line: 0, scope: !7763)
!7769 = !DILocation(line: 52, column: 20, scope: !7763)
!7770 = !DILocation(line: 52, column: 9, scope: !7763)
!7771 = !DILocation(line: 52, column: 41, scope: !7763)
!7772 = !DILocation(line: 52, column: 39, scope: !7763)
!7773 = !DILocation(line: 52, column: 2, scope: !7763)
!7774 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7706, file: !7706, line: 64, type: !7775, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2675, retainedNodes: !7777)
!7775 = !DISubroutineType(types: !7776)
!7776 = !{null, !32, !32, !113}
!7777 = !{!7778, !7779, !7780}
!7778 = !DILocalVariable(name: "irq", arg: 1, scope: !7774, file: !7706, line: 64, type: !32)
!7779 = !DILocalVariable(name: "prio", arg: 2, scope: !7774, file: !7706, line: 64, type: !32)
!7780 = !DILocalVariable(name: "flags", arg: 3, scope: !7774, file: !7706, line: 64, type: !113)
!7781 = !DILocation(line: 0, scope: !7774)
!7782 = !DILocation(line: 83, column: 8, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7784, file: !7706, line: 82, column: 9)
!7784 = distinct !DILexicalBlock(scope: !7774, file: !7706, line: 76, column: 6)
!7785 = !DILocation(line: 91, column: 2, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7787, file: !7706, line: 91, column: 2)
!7787 = distinct !DILexicalBlock(scope: !7774, file: !7706, line: 91, column: 2)
!7788 = !DILocation(line: 91, column: 2, scope: !7787)
!7789 = !DILocation(line: 91, column: 2, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7786, file: !7706, line: 91, column: 2)
!7791 = !DILocation(line: 95, column: 2, scope: !7774)
!7792 = !DILocation(line: 96, column: 1, scope: !7774)
!7793 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !692, file: !692, line: 1638, type: !7794, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2675, retainedNodes: !7796)
!7794 = !DISubroutineType(types: !7795)
!7795 = !{null, !1011, !113}
!7796 = !{!7797, !7798}
!7797 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7793, file: !692, line: 1638, type: !1011)
!7798 = !DILocalVariable(name: "priority", arg: 2, scope: !7793, file: !692, line: 1638, type: !113)
!7799 = !DILocation(line: 0, scope: !7793)
!7800 = !DILocation(line: 0, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7793, file: !692, line: 1640, column: 7)
!7802 = !DILocation(line: 1640, column: 7, scope: !7793)
!7803 = !DILocation(line: 1648, column: 1, scope: !7793)
!7804 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7706, file: !7706, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2675, retainedNodes: !7805)
!7805 = !{!7806}
!7806 = !DILocalVariable(name: "unused", arg: 1, scope: !7804, file: !7706, line: 155, type: !13)
!7807 = !DILocation(line: 0, scope: !7804)
!7808 = !DILocation(line: 159, column: 2, scope: !7804)
!7809 = !DILocation(line: 160, column: 1, scope: !7804)
!7810 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7811, file: !7811, line: 87, type: !266, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !397)
!7811 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7812 = !DILocation(line: 89, column: 2, scope: !7810)
!7813 = !DILocation(line: 90, column: 2, scope: !7810)
!7814 = !DILocation(line: 91, column: 1, scope: !7810)
!7815 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7811, file: !7811, line: 23, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!7816 = !DISubprogram(name: "z_arm_int_exit", scope: !7817, file: !7817, line: 153, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!7817 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7818 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7819, file: !7819, line: 256, type: !266, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !397)
!7819 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7820 = !DILocation(line: 258, column: 2, scope: !7818)
!7821 = !DILocation(line: 262, column: 2, scope: !7818)
!7822 = !DILocation(line: 263, column: 2, scope: !7818)
!7823 = !DILocation(line: 267, column: 2, scope: !7818)
!7824 = !DILocation(line: 268, column: 2, scope: !7818)
!7825 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7819, file: !7819, line: 53, type: !266, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !397)
!7826 = !DILocation(line: 55, column: 12, scope: !7825)
!7827 = !DILocation(line: 271, column: 3, scope: !7828, inlinedAt: !7829)
!7828 = distinct !DISubprogram(name: "__DSB", scope: !7754, file: !7754, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !397)
!7829 = distinct !DILocation(line: 56, column: 2, scope: !7825)
!7830 = !{i64 2429004}
!7831 = !DILocation(line: 260, column: 3, scope: !7832, inlinedAt: !7833)
!7832 = distinct !DISubprogram(name: "__ISB", scope: !7754, file: !7754, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !397)
!7833 = distinct !DILocation(line: 57, column: 2, scope: !7825)
!7834 = !{i64 2428721}
!7835 = !DILocation(line: 58, column: 1, scope: !7825)
!7836 = distinct !DISubprogram(name: "arch_swap", scope: !7837, file: !7837, line: 33, type: !7764, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !7838)
!7837 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7838 = !{!7839}
!7839 = !DILocalVariable(name: "key", arg: 1, scope: !7836, file: !7837, line: 33, type: !32)
!7840 = !DILocation(line: 0, scope: !7836)
!7841 = !DILocation(line: 36, column: 2, scope: !7836)
!7842 = !DILocation(line: 36, column: 17, scope: !7836)
!7843 = !DILocation(line: 36, column: 25, scope: !7836)
!7844 = !DILocation(line: 37, column: 37, scope: !7836)
!7845 = !DILocation(line: 37, column: 17, scope: !7836)
!7846 = !DILocation(line: 37, column: 35, scope: !7836)
!7847 = !DILocation(line: 41, column: 12, scope: !7836)
!7848 = !DILocalVariable(name: "key", arg: 1, scope: !7849, file: !7419, line: 84, type: !32)
!7849 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7419, file: !7419, line: 84, type: !7430, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !7850)
!7850 = !{!7848}
!7851 = !DILocation(line: 0, scope: !7849, inlinedAt: !7852)
!7852 = distinct !DILocation(line: 44, column: 2, scope: !7836)
!7853 = !DILocation(line: 95, column: 2, scope: !7849, inlinedAt: !7852)
!7854 = !{i64 1652004}
!7855 = !DILocation(line: 53, column: 9, scope: !7836)
!7856 = !DILocation(line: 53, column: 24, scope: !7836)
!7857 = !DILocation(line: 53, column: 2, scope: !7836)
!7858 = distinct !DISubprogram(name: "arch_new_thread", scope: !7859, file: !7859, line: 56, type: !7860, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !7969)
!7859 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7860 = !DISubroutineType(types: !7861)
!7861 = !{null, !7862, !7964, !102, !254, !104, !104, !104}
!7862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7863, size: 32)
!7863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !7864)
!7864 = !{!7865, !7923, !7935, !7936, !7937, !7938, !7944, !7959}
!7865 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7863, file: !127, line: 247, baseType: !7866, size: 384)
!7866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !7867)
!7867 = !{!7868, !7892, !7899, !7900, !7901, !7910, !7911, !7912}
!7868 = !DIDerivedType(tag: DW_TAG_member, scope: !7866, file: !127, line: 60, baseType: !7869, size: 64)
!7869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7866, file: !127, line: 60, size: 64, elements: !7870)
!7870 = !{!7871, !7886}
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7869, file: !127, line: 61, baseType: !7872, size: 64)
!7872 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !7873)
!7873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !7874)
!7874 = !{!7875, !7881}
!7875 = !DIDerivedType(tag: DW_TAG_member, scope: !7873, file: !137, line: 38, baseType: !7876, size: 32)
!7876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7873, file: !137, line: 38, size: 32, elements: !7877)
!7877 = !{!7878, !7880}
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7876, file: !137, line: 39, baseType: !7879, size: 32)
!7879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7873, size: 32)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7876, file: !137, line: 40, baseType: !7879, size: 32)
!7881 = !DIDerivedType(tag: DW_TAG_member, scope: !7873, file: !137, line: 42, baseType: !7882, size: 32, offset: 32)
!7882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7873, file: !137, line: 42, size: 32, elements: !7883)
!7883 = !{!7884, !7885}
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7882, file: !137, line: 43, baseType: !7879, size: 32)
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7882, file: !137, line: 44, baseType: !7879, size: 32)
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7869, file: !127, line: 62, baseType: !7887, size: 64)
!7887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !7888)
!7888 = !{!7889}
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7887, file: !153, line: 50, baseType: !7890, size: 64)
!7890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7891, size: 64, elements: !158)
!7891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7887, size: 32)
!7892 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7866, file: !127, line: 68, baseType: !7893, size: 32, offset: 64)
!7893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7894, size: 32)
!7894 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !7895)
!7895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !7896)
!7896 = !{!7897}
!7897 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7895, file: !163, line: 232, baseType: !7898, size: 64)
!7898 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !7873)
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7866, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!7900 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7866, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!7901 = !DIDerivedType(tag: DW_TAG_member, scope: !7866, file: !127, line: 90, baseType: !7902, size: 16, offset: 112)
!7902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7866, file: !127, line: 90, size: 16, elements: !7903)
!7903 = !{!7904, !7909}
!7904 = !DIDerivedType(tag: DW_TAG_member, scope: !7902, file: !127, line: 91, baseType: !7905, size: 16)
!7905 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7902, file: !127, line: 91, size: 16, elements: !7906)
!7906 = !{!7907, !7908}
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7905, file: !127, line: 96, baseType: !179, size: 8)
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7905, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7902, file: !127, line: 100, baseType: !183, size: 16)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7866, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7866, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7866, file: !127, line: 131, baseType: !7913, size: 192, offset: 192)
!7913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !7914)
!7914 = !{!7915, !7916, !7922}
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7913, file: !163, line: 245, baseType: !7872, size: 64)
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7913, file: !163, line: 246, baseType: !7917, size: 32, offset: 64)
!7917 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !7918)
!7918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7919, size: 32)
!7919 = !DISubroutineType(types: !7920)
!7920 = !{null, !7921}
!7921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7913, size: 32)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7913, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7863, file: !127, line: 250, baseType: !7924, size: 288, offset: 384)
!7924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7925)
!7925 = !{!7926, !7927, !7928, !7929, !7930, !7931, !7932, !7933, !7934}
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7924, file: !200, line: 26, baseType: !113, size: 32)
!7927 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7924, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7924, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7924, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7924, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7924, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7924, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7924, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7924, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7863, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7863, file: !127, line: 256, baseType: !7894, size: 64, offset: 704)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7863, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7863, file: !127, line: 300, baseType: !7939, size: 96, offset: 800)
!7939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !7940)
!7940 = !{!7941, !7942, !7943}
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7939, file: !127, line: 153, baseType: !22, size: 32)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7939, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7939, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7863, file: !127, line: 325, baseType: !7945, size: 32, offset: 896)
!7945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7946, size: 32)
!7946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !7947)
!7947 = !{!7948, !7954, !7955}
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7946, file: !122, line: 5074, baseType: !7949, size: 96)
!7949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !7950)
!7950 = !{!7951, !7952, !7953}
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7949, file: !226, line: 57, baseType: !229, size: 32)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7949, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!7953 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7949, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7946, file: !122, line: 5075, baseType: !7894, size: 64, offset: 96)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7946, file: !122, line: 5076, baseType: !7956, size: 32, offset: 160)
!7956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !7957)
!7957 = !{!7958}
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7956, file: !236, line: 52, baseType: !22, size: 32)
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7863, file: !127, line: 343, baseType: !7960, size: 64, offset: 928)
!7960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !7961)
!7961 = !{!7962, !7963}
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7960, file: !200, line: 63, baseType: !113, size: 32)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7960, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!7964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7965, size: 32)
!7965 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !7966)
!7966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !7967)
!7967 = !{!7968}
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7966, file: !249, line: 48, baseType: !103, size: 8)
!7969 = !{!7970, !7971, !7972, !7973, !7974, !7975, !7976, !7977}
!7970 = !DILocalVariable(name: "thread", arg: 1, scope: !7858, file: !7859, line: 56, type: !7862)
!7971 = !DILocalVariable(name: "stack", arg: 2, scope: !7858, file: !7859, line: 56, type: !7964)
!7972 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7858, file: !7859, line: 57, type: !102)
!7973 = !DILocalVariable(name: "entry", arg: 4, scope: !7858, file: !7859, line: 57, type: !254)
!7974 = !DILocalVariable(name: "p1", arg: 5, scope: !7858, file: !7859, line: 58, type: !104)
!7975 = !DILocalVariable(name: "p2", arg: 6, scope: !7858, file: !7859, line: 58, type: !104)
!7976 = !DILocalVariable(name: "p3", arg: 7, scope: !7858, file: !7859, line: 58, type: !104)
!7977 = !DILocalVariable(name: "iframe", scope: !7858, file: !7859, line: 60, type: !2782)
!7978 = !DILocation(line: 0, scope: !7858)
!7979 = !DILocation(line: 85, column: 11, scope: !7858)
!7980 = !DILocation(line: 93, column: 10, scope: !7858)
!7981 = !DILocation(line: 98, column: 13, scope: !7858)
!7982 = !DILocation(line: 100, column: 15, scope: !7858)
!7983 = !DILocation(line: 100, column: 10, scope: !7858)
!7984 = !DILocation(line: 100, column: 13, scope: !7858)
!7985 = !DILocation(line: 101, column: 15, scope: !7858)
!7986 = !DILocation(line: 101, column: 10, scope: !7858)
!7987 = !DILocation(line: 101, column: 13, scope: !7858)
!7988 = !DILocation(line: 102, column: 15, scope: !7858)
!7989 = !DILocation(line: 102, column: 10, scope: !7858)
!7990 = !DILocation(line: 102, column: 13, scope: !7858)
!7991 = !DILocation(line: 103, column: 15, scope: !7858)
!7992 = !DILocation(line: 103, column: 10, scope: !7858)
!7993 = !DILocation(line: 103, column: 13, scope: !7858)
!7994 = !DILocation(line: 106, column: 10, scope: !7858)
!7995 = !DILocation(line: 106, column: 15, scope: !7858)
!7996 = !DILocation(line: 122, column: 29, scope: !7858)
!7997 = !DILocation(line: 122, column: 23, scope: !7858)
!7998 = !DILocation(line: 122, column: 27, scope: !7858)
!7999 = !DILocation(line: 123, column: 15, scope: !7858)
!8000 = !DILocation(line: 123, column: 23, scope: !7858)
!8001 = !DILocation(line: 143, column: 1, scope: !7858)
!8002 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7859, file: !7859, line: 385, type: !8003, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !8005)
!8003 = !DISubroutineType(types: !8004)
!8004 = !{!113, !3712, !3712}
!8005 = !{!8006, !8007, !8008, !8011}
!8006 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8002, file: !7859, line: 385, type: !3712)
!8007 = !DILocalVariable(name: "psp", arg: 2, scope: !8002, file: !7859, line: 385, type: !3712)
!8008 = !DILocalVariable(name: "thread", scope: !8002, file: !7859, line: 388, type: !8009)
!8009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8010, size: 32)
!8010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7863)
!8011 = !DILocalVariable(name: "guard_len", scope: !8002, file: !7859, line: 405, type: !113)
!8012 = !DILocation(line: 0, scope: !8002)
!8013 = !DILocation(line: 388, column: 34, scope: !8002)
!8014 = !DILocation(line: 390, column: 13, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8002, file: !7859, line: 390, column: 6)
!8016 = !DILocation(line: 390, column: 6, scope: !8002)
!8017 = !DILocation(line: 438, column: 6, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8002, file: !7859, line: 438, column: 6)
!8019 = !DILocation(line: 438, column: 6, scope: !8002)
!8020 = !DILocation(line: 442, column: 3, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8018, file: !7859, line: 440, column: 22)
!8022 = !DILocation(line: 455, column: 1, scope: !8002)
!8023 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7859, file: !7859, line: 530, type: !8024, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !8026)
!8024 = !DISubroutineType(types: !8025)
!8025 = !{null, !7862, !102, !254}
!8026 = !{!8027, !8028, !8029}
!8027 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8023, file: !7859, line: 530, type: !7862)
!8028 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8023, file: !7859, line: 530, type: !102)
!8029 = !DILocalVariable(name: "_main", arg: 3, scope: !8023, file: !7859, line: 531, type: !254)
!8030 = !DILocation(line: 0, scope: !8023)
!8031 = !DILocation(line: 535, column: 11, scope: !8023)
!8032 = !DILocation(line: 560, column: 2, scope: !8023)
!8033 = !DILocation(line: 576, column: 2, scope: !8023)
!8034 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8035 = !DILocation(line: 603, column: 2, scope: !8023)
!8036 = distinct !DISubprogram(name: "z_arm_fault", scope: !8037, file: !8037, line: 1036, type: !8038, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !8053)
!8037 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8038 = !DISubroutineType(types: !8039)
!8039 = !{null, !113, !113, !113, !8040}
!8040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8041, size: 32)
!8041 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !8042)
!8042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8043)
!8043 = !{!8044, !8045, !8046, !8047, !8048, !8049, !8050, !8051, !8052}
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8042, file: !200, line: 26, baseType: !113, size: 32)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8042, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8042, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8042, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8042, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8042, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8042, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8042, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8042, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8053 = !{!8054, !8055, !8056, !8057, !8058, !8059, !8060, !8061, !8062, !8063}
!8054 = !DILocalVariable(name: "msp", arg: 1, scope: !8036, file: !8037, line: 1036, type: !113)
!8055 = !DILocalVariable(name: "psp", arg: 2, scope: !8036, file: !8037, line: 1036, type: !113)
!8056 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8036, file: !8037, line: 1036, type: !113)
!8057 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8036, file: !8037, line: 1037, type: !8040)
!8058 = !DILocalVariable(name: "reason", scope: !8036, file: !8037, line: 1039, type: !113)
!8059 = !DILocalVariable(name: "fault", scope: !8036, file: !8037, line: 1040, type: !105)
!8060 = !DILocalVariable(name: "recoverable", scope: !8036, file: !8037, line: 1041, type: !505)
!8061 = !DILocalVariable(name: "nested_exc", scope: !8036, file: !8037, line: 1041, type: !505)
!8062 = !DILocalVariable(name: "esf", scope: !8036, file: !8037, line: 1042, type: !2850)
!8063 = !DILocalVariable(name: "esf_copy", scope: !8036, file: !8037, line: 1047, type: !2851)
!8064 = !DILocation(line: 0, scope: !8036)
!8065 = !DILocation(line: 1040, column: 19, scope: !8036)
!8066 = !DILocation(line: 1041, column: 2, scope: !8036)
!8067 = !DILocation(line: 1047, column: 2, scope: !8036)
!8068 = !DILocation(line: 1047, column: 15, scope: !8036)
!8069 = !DILocalVariable(name: "key", arg: 1, scope: !8070, file: !7419, line: 84, type: !32)
!8070 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7419, file: !7419, line: 84, type: !7430, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !8071)
!8071 = !{!8069}
!8072 = !DILocation(line: 0, scope: !8070, inlinedAt: !8073)
!8073 = distinct !DILocation(line: 1050, column: 2, scope: !8036)
!8074 = !DILocation(line: 95, column: 2, scope: !8070, inlinedAt: !8073)
!8075 = !{i64 1685248}
!8076 = !DILocation(line: 1055, column: 9, scope: !8036)
!8077 = !DILocation(line: 1056, column: 2, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8079, file: !8037, line: 1056, column: 2)
!8079 = distinct !DILexicalBlock(scope: !8036, file: !8037, line: 1056, column: 2)
!8080 = !DILocation(line: 1056, column: 2, scope: !8079)
!8081 = !DILocation(line: 1056, column: 2, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8078, file: !8037, line: 1056, column: 2)
!8083 = !DILocation(line: 1040, column: 24, scope: !8036)
!8084 = !DILocation(line: 1063, column: 11, scope: !8036)
!8085 = !DILocation(line: 1064, column: 6, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8036, file: !8037, line: 1064, column: 6)
!8087 = !{i8 0, i8 2}
!8088 = !DILocation(line: 1064, column: 6, scope: !8036)
!8089 = !DILocation(line: 1070, column: 20, scope: !8036)
!8090 = !DILocation(line: 1070, column: 2, scope: !8036)
!8091 = !DILocation(line: 1089, column: 6, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8036, file: !8037, line: 1089, column: 6)
!8093 = !DILocation(line: 0, scope: !8092)
!8094 = !DILocation(line: 1089, column: 6, scope: !8036)
!8095 = !DILocation(line: 1090, column: 28, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8097, file: !8037, line: 1090, column: 7)
!8097 = distinct !DILexicalBlock(scope: !8092, file: !8037, line: 1089, column: 18)
!8098 = !DILocation(line: 1090, column: 44, scope: !8096)
!8099 = !DILocation(line: 1090, column: 7, scope: !8097)
!8100 = !DILocation(line: 1091, column: 24, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8096, file: !8037, line: 1090, column: 50)
!8102 = !DILocation(line: 1092, column: 3, scope: !8101)
!8103 = !DILocation(line: 1094, column: 23, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8092, file: !8037, line: 1093, column: 9)
!8105 = !DILocation(line: 1097, column: 2, scope: !8036)
!8106 = !DILocation(line: 1098, column: 1, scope: !8036)
!8107 = distinct !DISubprogram(name: "get_esf", scope: !8037, file: !8037, line: 894, type: !8108, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !8111)
!8108 = !DISubroutineType(types: !8109)
!8109 = !{!2850, !113, !113, !113, !8110}
!8110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 32)
!8111 = !{!8112, !8113, !8114, !8115, !8116, !8117}
!8112 = !DILocalVariable(name: "msp", arg: 1, scope: !8107, file: !8037, line: 894, type: !113)
!8113 = !DILocalVariable(name: "psp", arg: 2, scope: !8107, file: !8037, line: 894, type: !113)
!8114 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8107, file: !8037, line: 894, type: !113)
!8115 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8107, file: !8037, line: 895, type: !8110)
!8116 = !DILocalVariable(name: "alternative_state_exc", scope: !8107, file: !8037, line: 897, type: !505)
!8117 = !DILocalVariable(name: "ptr_esf", scope: !8107, file: !8037, line: 898, type: !2850)
!8118 = !DILocation(line: 0, scope: !8107)
!8119 = !DILocation(line: 900, column: 14, scope: !8107)
!8120 = !DILocation(line: 902, column: 49, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8107, file: !8037, line: 902, column: 6)
!8122 = !DILocation(line: 902, column: 6, scope: !8107)
!8123 = !DILocation(line: 983, column: 44, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8107, file: !8037, line: 983, column: 6)
!8125 = !DILocation(line: 985, column: 3, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8127, file: !8037, line: 985, column: 3)
!8127 = distinct !DILexicalBlock(scope: !8128, file: !8037, line: 985, column: 3)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !8037, line: 985, column: 3)
!8129 = distinct !DILexicalBlock(scope: !8130, file: !8037, line: 985, column: 3)
!8130 = distinct !DILexicalBlock(scope: !8124, file: !8037, line: 984, column: 47)
!8131 = !DILocation(line: 986, column: 3, scope: !8130)
!8132 = !DILocation(line: 983, column: 18, scope: !8124)
!8133 = !DILocation(line: 991, column: 7, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !8037, line: 990, column: 30)
!8135 = distinct !DILexicalBlock(scope: !8107, file: !8037, line: 990, column: 6)
!8136 = !DILocation(line: 998, column: 16, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8138, file: !8037, line: 995, column: 10)
!8138 = distinct !DILexicalBlock(scope: !8134, file: !8037, line: 991, column: 7)
!8139 = !DILocation(line: 1002, column: 2, scope: !8107)
!8140 = !DILocation(line: 1003, column: 1, scope: !8107)
!8141 = distinct !DISubprogram(name: "fault_handle", scope: !8037, file: !8037, line: 786, type: !8142, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !8144)
!8142 = !DISubroutineType(types: !8143)
!8143 = !{!113, !2850, !105, !8110}
!8144 = !{!8145, !8146, !8147, !8148}
!8145 = !DILocalVariable(name: "esf", arg: 1, scope: !8141, file: !8037, line: 786, type: !2850)
!8146 = !DILocalVariable(name: "fault", arg: 2, scope: !8141, file: !8037, line: 786, type: !105)
!8147 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8141, file: !8037, line: 786, type: !8110)
!8148 = !DILocalVariable(name: "reason", scope: !8141, file: !8037, line: 788, type: !113)
!8149 = !DILocation(line: 0, scope: !8141)
!8150 = !DILocation(line: 790, column: 15, scope: !8141)
!8151 = !DILocation(line: 792, column: 2, scope: !8141)
!8152 = !DILocation(line: 794, column: 12, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8141, file: !8037, line: 792, column: 17)
!8154 = !DILocation(line: 795, column: 3, scope: !8153)
!8155 = !DILocation(line: 800, column: 12, scope: !8153)
!8156 = !DILocation(line: 801, column: 3, scope: !8153)
!8157 = !DILocation(line: 803, column: 12, scope: !8153)
!8158 = !DILocation(line: 804, column: 3, scope: !8153)
!8159 = !DILocation(line: 806, column: 12, scope: !8153)
!8160 = !DILocation(line: 807, column: 3, scope: !8153)
!8161 = !DILocation(line: 814, column: 3, scope: !8153)
!8162 = !DILocation(line: 815, column: 3, scope: !8153)
!8163 = !DILocation(line: 820, column: 3, scope: !8153)
!8164 = !DILocation(line: 821, column: 3, scope: !8153)
!8165 = !DILocation(line: 829, column: 2, scope: !8141)
!8166 = distinct !DISubprogram(name: "hard_fault", scope: !8037, file: !8037, line: 709, type: !8167, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !8169)
!8167 = !DISubroutineType(types: !8168)
!8168 = !{!113, !2850, !8110}
!8169 = !{!8170, !8171, !8172}
!8170 = !DILocalVariable(name: "esf", arg: 1, scope: !8166, file: !8037, line: 709, type: !2850)
!8171 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8166, file: !8037, line: 709, type: !8110)
!8172 = !DILocalVariable(name: "reason", scope: !8166, file: !8037, line: 711, type: !113)
!8173 = !DILocation(line: 0, scope: !8166)
!8174 = !DILocation(line: 713, column: 2, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8176, file: !8037, line: 713, column: 2)
!8176 = distinct !DILexicalBlock(scope: !8177, file: !8037, line: 713, column: 2)
!8177 = distinct !DILexicalBlock(scope: !8178, file: !8037, line: 713, column: 2)
!8178 = distinct !DILexicalBlock(scope: !8166, file: !8037, line: 713, column: 2)
!8179 = !DILocation(line: 732, column: 15, scope: !8166)
!8180 = !DILocation(line: 734, column: 12, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8166, file: !8037, line: 734, column: 6)
!8182 = !DILocation(line: 734, column: 17, scope: !8181)
!8183 = !DILocation(line: 734, column: 41, scope: !8181)
!8184 = !DILocation(line: 734, column: 6, scope: !8166)
!8185 = !DILocation(line: 735, column: 3, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !8037, line: 735, column: 3)
!8187 = distinct !DILexicalBlock(scope: !8188, file: !8037, line: 735, column: 3)
!8188 = distinct !DILexicalBlock(scope: !8189, file: !8037, line: 735, column: 3)
!8189 = distinct !DILexicalBlock(scope: !8190, file: !8037, line: 735, column: 3)
!8190 = distinct !DILexicalBlock(scope: !8181, file: !8037, line: 734, column: 47)
!8191 = !DILocation(line: 736, column: 2, scope: !8190)
!8192 = !DILocation(line: 736, column: 19, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8181, file: !8037, line: 736, column: 13)
!8194 = !DILocation(line: 736, column: 49, scope: !8193)
!8195 = !DILocation(line: 736, column: 13, scope: !8181)
!8196 = !DILocation(line: 737, column: 3, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !8037, line: 737, column: 3)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !8037, line: 737, column: 3)
!8199 = distinct !DILexicalBlock(scope: !8200, file: !8037, line: 737, column: 3)
!8200 = distinct !DILexicalBlock(scope: !8201, file: !8037, line: 737, column: 3)
!8201 = distinct !DILexicalBlock(scope: !8193, file: !8037, line: 736, column: 55)
!8202 = !DILocation(line: 738, column: 2, scope: !8201)
!8203 = !DILocation(line: 738, column: 19, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8193, file: !8037, line: 738, column: 13)
!8205 = !DILocation(line: 738, column: 24, scope: !8204)
!8206 = !DILocation(line: 738, column: 47, scope: !8204)
!8207 = !DILocation(line: 738, column: 13, scope: !8193)
!8208 = !DILocation(line: 739, column: 3, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !8037, line: 739, column: 3)
!8210 = distinct !DILexicalBlock(scope: !8211, file: !8037, line: 739, column: 3)
!8211 = distinct !DILexicalBlock(scope: !8212, file: !8037, line: 739, column: 3)
!8212 = distinct !DILexicalBlock(scope: !8213, file: !8037, line: 739, column: 3)
!8213 = distinct !DILexicalBlock(scope: !8204, file: !8037, line: 738, column: 53)
!8214 = !DILocation(line: 740, column: 7, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8213, file: !8037, line: 740, column: 7)
!8216 = !DILocation(line: 740, column: 7, scope: !8213)
!8217 = !DILocation(line: 741, column: 4, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8219, file: !8037, line: 741, column: 4)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !8037, line: 741, column: 4)
!8220 = distinct !DILexicalBlock(scope: !8221, file: !8037, line: 741, column: 4)
!8221 = distinct !DILexicalBlock(scope: !8222, file: !8037, line: 741, column: 4)
!8222 = distinct !DILexicalBlock(scope: !8215, file: !8037, line: 740, column: 38)
!8223 = !DILocation(line: 742, column: 24, scope: !8222)
!8224 = !DILocation(line: 743, column: 3, scope: !8222)
!8225 = !DILocation(line: 743, column: 20, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8215, file: !8037, line: 743, column: 14)
!8227 = !DILocation(line: 743, column: 25, scope: !8226)
!8228 = !DILocation(line: 743, column: 52, scope: !8226)
!8229 = !DILocation(line: 743, column: 14, scope: !8215)
!8230 = !DILocation(line: 744, column: 13, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8226, file: !8037, line: 743, column: 58)
!8232 = !DILocation(line: 745, column: 3, scope: !8231)
!8233 = !DILocation(line: 745, column: 20, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8226, file: !8037, line: 745, column: 14)
!8235 = !DILocation(line: 745, column: 25, scope: !8234)
!8236 = !DILocation(line: 745, column: 52, scope: !8234)
!8237 = !DILocation(line: 745, column: 14, scope: !8226)
!8238 = !DILocation(line: 746, column: 13, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8234, file: !8037, line: 745, column: 58)
!8240 = !DILocation(line: 747, column: 3, scope: !8239)
!8241 = !DILocation(line: 747, column: 20, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8234, file: !8037, line: 747, column: 14)
!8243 = !DILocation(line: 747, column: 52, scope: !8242)
!8244 = !DILocation(line: 747, column: 14, scope: !8234)
!8245 = !DILocation(line: 748, column: 13, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8242, file: !8037, line: 747, column: 58)
!8247 = !DILocation(line: 754, column: 4, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !8037, line: 754, column: 4)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !8037, line: 754, column: 4)
!8250 = distinct !DILexicalBlock(scope: !8251, file: !8037, line: 754, column: 4)
!8251 = distinct !DILexicalBlock(scope: !8242, file: !8037, line: 753, column: 10)
!8252 = !DILocation(line: 758, column: 3, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8254, file: !8037, line: 758, column: 3)
!8254 = distinct !DILexicalBlock(scope: !8255, file: !8037, line: 758, column: 3)
!8255 = distinct !DILexicalBlock(scope: !8256, file: !8037, line: 758, column: 3)
!8256 = distinct !DILexicalBlock(scope: !8204, file: !8037, line: 757, column: 9)
!8257 = !DILocation(line: 766, column: 2, scope: !8166)
!8258 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8037, file: !8037, line: 229, type: !8142, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !8259)
!8259 = !{!8260, !8261, !8262, !8263, !8264, !8265, !8268}
!8260 = !DILocalVariable(name: "esf", arg: 1, scope: !8258, file: !8037, line: 229, type: !2850)
!8261 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8258, file: !8037, line: 229, type: !105)
!8262 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8258, file: !8037, line: 230, type: !8110)
!8263 = !DILocalVariable(name: "reason", scope: !8258, file: !8037, line: 232, type: !113)
!8264 = !DILocalVariable(name: "mmfar", scope: !8258, file: !8037, line: 233, type: !113)
!8265 = !DILocalVariable(name: "temp", scope: !8266, file: !8037, line: 254, type: !113)
!8266 = distinct !DILexicalBlock(scope: !8267, file: !8037, line: 244, column: 48)
!8267 = distinct !DILexicalBlock(scope: !8258, file: !8037, line: 244, column: 6)
!8268 = !DILocalVariable(name: "min_stack_ptr", scope: !8269, file: !8037, line: 309, type: !113)
!8269 = distinct !DILexicalBlock(scope: !8270, file: !8037, line: 308, column: 43)
!8270 = distinct !DILexicalBlock(scope: !8271, file: !8037, line: 308, column: 7)
!8271 = distinct !DILexicalBlock(scope: !8272, file: !8037, line: 289, column: 40)
!8272 = distinct !DILexicalBlock(scope: !8258, file: !8037, line: 288, column: 6)
!8273 = !DILocation(line: 0, scope: !8258)
!8274 = !DILocation(line: 235, column: 2, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8276, file: !8037, line: 235, column: 2)
!8276 = distinct !DILexicalBlock(scope: !8277, file: !8037, line: 235, column: 2)
!8277 = distinct !DILexicalBlock(scope: !8278, file: !8037, line: 235, column: 2)
!8278 = distinct !DILexicalBlock(scope: !8258, file: !8037, line: 235, column: 2)
!8279 = !DILocation(line: 237, column: 12, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8258, file: !8037, line: 237, column: 6)
!8281 = !DILocation(line: 237, column: 17, scope: !8280)
!8282 = !DILocation(line: 237, column: 41, scope: !8280)
!8283 = !DILocation(line: 237, column: 6, scope: !8258)
!8284 = !DILocation(line: 238, column: 3, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8286, file: !8037, line: 238, column: 3)
!8286 = distinct !DILexicalBlock(scope: !8287, file: !8037, line: 238, column: 3)
!8287 = distinct !DILexicalBlock(scope: !8288, file: !8037, line: 238, column: 3)
!8288 = distinct !DILexicalBlock(scope: !8289, file: !8037, line: 238, column: 3)
!8289 = distinct !DILexicalBlock(scope: !8280, file: !8037, line: 237, column: 47)
!8290 = !DILocation(line: 240, column: 2, scope: !8289)
!8291 = !DILocation(line: 241, column: 12, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8258, file: !8037, line: 241, column: 6)
!8293 = !DILocation(line: 241, column: 17, scope: !8292)
!8294 = !DILocation(line: 241, column: 43, scope: !8292)
!8295 = !DILocation(line: 241, column: 6, scope: !8258)
!8296 = !DILocation(line: 242, column: 3, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8298, file: !8037, line: 242, column: 3)
!8298 = distinct !DILexicalBlock(scope: !8299, file: !8037, line: 242, column: 3)
!8299 = distinct !DILexicalBlock(scope: !8300, file: !8037, line: 242, column: 3)
!8300 = distinct !DILexicalBlock(scope: !8301, file: !8037, line: 242, column: 3)
!8301 = distinct !DILexicalBlock(scope: !8292, file: !8037, line: 241, column: 49)
!8302 = !DILocation(line: 243, column: 2, scope: !8301)
!8303 = !DILocation(line: 244, column: 12, scope: !8267)
!8304 = !DILocation(line: 244, column: 17, scope: !8267)
!8305 = !DILocation(line: 244, column: 42, scope: !8267)
!8306 = !DILocation(line: 244, column: 6, scope: !8258)
!8307 = !DILocation(line: 245, column: 3, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8309, file: !8037, line: 245, column: 3)
!8309 = distinct !DILexicalBlock(scope: !8310, file: !8037, line: 245, column: 3)
!8310 = distinct !DILexicalBlock(scope: !8311, file: !8037, line: 245, column: 3)
!8311 = distinct !DILexicalBlock(scope: !8266, file: !8037, line: 245, column: 3)
!8312 = !DILocation(line: 254, column: 24, scope: !8266)
!8313 = !DILocation(line: 0, scope: !8266)
!8314 = !DILocation(line: 256, column: 13, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8266, file: !8037, line: 256, column: 7)
!8316 = !DILocation(line: 256, column: 18, scope: !8315)
!8317 = !DILocation(line: 256, column: 44, scope: !8315)
!8318 = !DILocation(line: 256, column: 7, scope: !8266)
!8319 = !DILocation(line: 258, column: 4, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8321, file: !8037, line: 258, column: 4)
!8321 = distinct !DILexicalBlock(scope: !8322, file: !8037, line: 258, column: 4)
!8322 = distinct !DILexicalBlock(scope: !8323, file: !8037, line: 258, column: 4)
!8323 = distinct !DILexicalBlock(scope: !8324, file: !8037, line: 258, column: 4)
!8324 = distinct !DILexicalBlock(scope: !8315, file: !8037, line: 256, column: 50)
!8325 = !DILocation(line: 259, column: 24, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8324, file: !8037, line: 259, column: 8)
!8327 = !DILocation(line: 259, column: 8, scope: !8324)
!8328 = !DILocation(line: 261, column: 15, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8326, file: !8037, line: 259, column: 30)
!8330 = !DILocation(line: 262, column: 4, scope: !8329)
!8331 = !DILocation(line: 265, column: 12, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8258, file: !8037, line: 265, column: 6)
!8333 = !DILocation(line: 265, column: 17, scope: !8332)
!8334 = !DILocation(line: 265, column: 42, scope: !8332)
!8335 = !DILocation(line: 265, column: 6, scope: !8258)
!8336 = !DILocation(line: 266, column: 3, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !8037, line: 266, column: 3)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !8037, line: 266, column: 3)
!8339 = distinct !DILexicalBlock(scope: !8340, file: !8037, line: 266, column: 3)
!8340 = distinct !DILexicalBlock(scope: !8341, file: !8037, line: 266, column: 3)
!8341 = distinct !DILexicalBlock(scope: !8332, file: !8037, line: 265, column: 48)
!8342 = !DILocation(line: 267, column: 2, scope: !8341)
!8343 = !DILocation(line: 288, column: 12, scope: !8272)
!8344 = !DILocation(line: 288, column: 17, scope: !8272)
!8345 = !DILocation(line: 288, column: 41, scope: !8272)
!8346 = !DILocation(line: 289, column: 9, scope: !8272)
!8347 = !DILocation(line: 289, column: 14, scope: !8272)
!8348 = !DILocation(line: 288, column: 6, scope: !8258)
!8349 = !DILocation(line: 308, column: 12, scope: !8270)
!8350 = !DILocation(line: 308, column: 17, scope: !8270)
!8351 = !DILocation(line: 308, column: 7, scope: !8271)
!8352 = !DILocation(line: 310, column: 6, scope: !8269)
!8353 = !DILocation(line: 309, column: 29, scope: !8269)
!8354 = !DILocation(line: 0, scope: !8269)
!8355 = !DILocation(line: 312, column: 8, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8269, file: !8037, line: 312, column: 8)
!8357 = !DILocation(line: 312, column: 8, scope: !8269)
!8358 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8359, file: !7754, line: 1099, type: !113)
!8359 = distinct !DISubprogram(name: "__set_PSP", scope: !7754, file: !7754, line: 1099, type: !7443, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !8360)
!8360 = !{!8358}
!8361 = !DILocation(line: 0, scope: !8359, inlinedAt: !8362)
!8362 = distinct !DILocation(line: 338, column: 5, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8356, file: !8037, line: 312, column: 23)
!8364 = !DILocation(line: 1101, column: 3, scope: !8359, inlinedAt: !8362)
!8365 = !{i64 2479973}
!8366 = !DILocation(line: 341, column: 4, scope: !8363)
!8367 = !DILocation(line: 342, column: 5, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !8037, line: 342, column: 5)
!8369 = distinct !DILexicalBlock(scope: !8370, file: !8037, line: 342, column: 5)
!8370 = distinct !DILexicalBlock(scope: !8356, file: !8037, line: 341, column: 11)
!8371 = !DILocation(line: 342, column: 5, scope: !8369)
!8372 = !DILocation(line: 342, column: 5, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8368, file: !8037, line: 342, column: 5)
!8374 = !DILocation(line: 366, column: 12, scope: !8258)
!8375 = !DILocation(line: 369, column: 15, scope: !8258)
!8376 = !DILocation(line: 371, column: 2, scope: !8258)
!8377 = distinct !DISubprogram(name: "bus_fault", scope: !8037, file: !8037, line: 383, type: !8378, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !8380)
!8378 = !DISubroutineType(types: !8379)
!8379 = !{!105, !2850, !105, !8110}
!8380 = !{!8381, !8382, !8383, !8384, !8385}
!8381 = !DILocalVariable(name: "esf", arg: 1, scope: !8377, file: !8037, line: 383, type: !2850)
!8382 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8377, file: !8037, line: 383, type: !105)
!8383 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8377, file: !8037, line: 383, type: !8110)
!8384 = !DILocalVariable(name: "reason", scope: !8377, file: !8037, line: 385, type: !113)
!8385 = !DILocalVariable(name: "bfar", scope: !8386, file: !8037, line: 405, type: !113)
!8386 = distinct !DILexicalBlock(scope: !8387, file: !8037, line: 395, column: 42)
!8387 = distinct !DILexicalBlock(scope: !8377, file: !8037, line: 395, column: 6)
!8388 = !DILocation(line: 0, scope: !8377)
!8389 = !DILocation(line: 387, column: 2, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8391, file: !8037, line: 387, column: 2)
!8391 = distinct !DILexicalBlock(scope: !8392, file: !8037, line: 387, column: 2)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !8037, line: 387, column: 2)
!8393 = distinct !DILexicalBlock(scope: !8377, file: !8037, line: 387, column: 2)
!8394 = !DILocation(line: 389, column: 11, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8377, file: !8037, line: 389, column: 6)
!8396 = !DILocation(line: 389, column: 16, scope: !8395)
!8397 = !DILocation(line: 389, column: 6, scope: !8377)
!8398 = !DILocation(line: 390, column: 3, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8400, file: !8037, line: 390, column: 3)
!8400 = distinct !DILexicalBlock(scope: !8401, file: !8037, line: 390, column: 3)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !8037, line: 390, column: 3)
!8402 = distinct !DILexicalBlock(scope: !8403, file: !8037, line: 390, column: 3)
!8403 = distinct !DILexicalBlock(scope: !8395, file: !8037, line: 389, column: 39)
!8404 = !DILocation(line: 391, column: 2, scope: !8403)
!8405 = !DILocation(line: 392, column: 11, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8377, file: !8037, line: 392, column: 6)
!8407 = !DILocation(line: 392, column: 16, scope: !8406)
!8408 = !DILocation(line: 392, column: 6, scope: !8377)
!8409 = !DILocation(line: 393, column: 3, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8411, file: !8037, line: 393, column: 3)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !8037, line: 393, column: 3)
!8412 = distinct !DILexicalBlock(scope: !8413, file: !8037, line: 393, column: 3)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !8037, line: 393, column: 3)
!8414 = distinct !DILexicalBlock(scope: !8406, file: !8037, line: 392, column: 41)
!8415 = !DILocation(line: 394, column: 2, scope: !8414)
!8416 = !DILocation(line: 395, column: 11, scope: !8387)
!8417 = !DILocation(line: 395, column: 16, scope: !8387)
!8418 = !DILocation(line: 395, column: 6, scope: !8377)
!8419 = !DILocation(line: 396, column: 3, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8421, file: !8037, line: 396, column: 3)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !8037, line: 396, column: 3)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !8037, line: 396, column: 3)
!8423 = distinct !DILexicalBlock(scope: !8386, file: !8037, line: 396, column: 3)
!8424 = !DILocation(line: 405, column: 3, scope: !8386)
!8425 = !DILocation(line: 0, scope: !8386)
!8426 = !DILocation(line: 407, column: 13, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8386, file: !8037, line: 407, column: 7)
!8428 = !DILocation(line: 407, column: 18, scope: !8427)
!8429 = !DILocation(line: 407, column: 44, scope: !8427)
!8430 = !DILocation(line: 407, column: 7, scope: !8386)
!8431 = !DILocation(line: 408, column: 4, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8433, file: !8037, line: 408, column: 4)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !8037, line: 408, column: 4)
!8434 = distinct !DILexicalBlock(scope: !8435, file: !8037, line: 408, column: 4)
!8435 = distinct !DILexicalBlock(scope: !8436, file: !8037, line: 408, column: 4)
!8436 = distinct !DILexicalBlock(scope: !8427, file: !8037, line: 407, column: 50)
!8437 = !DILocation(line: 409, column: 24, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8436, file: !8037, line: 409, column: 8)
!8439 = !DILocation(line: 409, column: 8, scope: !8436)
!8440 = !DILocation(line: 411, column: 15, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8438, file: !8037, line: 409, column: 30)
!8442 = !DILocation(line: 412, column: 4, scope: !8441)
!8443 = !DILocation(line: 415, column: 11, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8377, file: !8037, line: 415, column: 6)
!8445 = !DILocation(line: 415, column: 16, scope: !8444)
!8446 = !DILocation(line: 415, column: 6, scope: !8377)
!8447 = !DILocation(line: 416, column: 3, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8449, file: !8037, line: 416, column: 3)
!8449 = distinct !DILexicalBlock(scope: !8450, file: !8037, line: 416, column: 3)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !8037, line: 416, column: 3)
!8451 = distinct !DILexicalBlock(scope: !8452, file: !8037, line: 416, column: 3)
!8452 = distinct !DILexicalBlock(scope: !8444, file: !8037, line: 415, column: 44)
!8453 = !DILocation(line: 417, column: 2, scope: !8452)
!8454 = !DILocation(line: 418, column: 12, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8377, file: !8037, line: 418, column: 6)
!8456 = !DILocation(line: 418, column: 17, scope: !8455)
!8457 = !DILocation(line: 418, column: 41, scope: !8455)
!8458 = !DILocation(line: 418, column: 6, scope: !8377)
!8459 = !DILocation(line: 419, column: 3, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !8037, line: 419, column: 3)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !8037, line: 419, column: 3)
!8462 = distinct !DILexicalBlock(scope: !8463, file: !8037, line: 419, column: 3)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !8037, line: 419, column: 3)
!8464 = distinct !DILexicalBlock(scope: !8455, file: !8037, line: 418, column: 47)
!8465 = !DILocation(line: 421, column: 2, scope: !8464)
!8466 = !DILocation(line: 524, column: 12, scope: !8377)
!8467 = !DILocation(line: 526, column: 15, scope: !8377)
!8468 = !DILocation(line: 528, column: 2, scope: !8377)
!8469 = distinct !DISubprogram(name: "usage_fault", scope: !8037, file: !8037, line: 539, type: !8470, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !8474)
!8470 = !DISubroutineType(types: !8471)
!8471 = !{!113, !8472}
!8472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8473, size: 32)
!8473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2851)
!8474 = !{!8475, !8476}
!8475 = !DILocalVariable(name: "esf", arg: 1, scope: !8469, file: !8037, line: 539, type: !8472)
!8476 = !DILocalVariable(name: "reason", scope: !8469, file: !8037, line: 541, type: !113)
!8477 = !DILocation(line: 0, scope: !8469)
!8478 = !DILocation(line: 543, column: 2, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !8037, line: 543, column: 2)
!8480 = distinct !DILexicalBlock(scope: !8481, file: !8037, line: 543, column: 2)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !8037, line: 543, column: 2)
!8482 = distinct !DILexicalBlock(scope: !8469, file: !8037, line: 543, column: 2)
!8483 = !DILocation(line: 546, column: 12, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8469, file: !8037, line: 546, column: 6)
!8485 = !DILocation(line: 546, column: 17, scope: !8484)
!8486 = !DILocation(line: 546, column: 43, scope: !8484)
!8487 = !DILocation(line: 546, column: 6, scope: !8469)
!8488 = !DILocation(line: 547, column: 3, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8490, file: !8037, line: 547, column: 3)
!8490 = distinct !DILexicalBlock(scope: !8491, file: !8037, line: 547, column: 3)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !8037, line: 547, column: 3)
!8492 = distinct !DILexicalBlock(scope: !8493, file: !8037, line: 547, column: 3)
!8493 = distinct !DILexicalBlock(scope: !8484, file: !8037, line: 546, column: 49)
!8494 = !DILocation(line: 548, column: 2, scope: !8493)
!8495 = !DILocation(line: 549, column: 12, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8469, file: !8037, line: 549, column: 6)
!8497 = !DILocation(line: 549, column: 17, scope: !8496)
!8498 = !DILocation(line: 549, column: 43, scope: !8496)
!8499 = !DILocation(line: 549, column: 6, scope: !8469)
!8500 = !DILocation(line: 550, column: 3, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8502, file: !8037, line: 550, column: 3)
!8502 = distinct !DILexicalBlock(scope: !8503, file: !8037, line: 550, column: 3)
!8503 = distinct !DILexicalBlock(scope: !8504, file: !8037, line: 550, column: 3)
!8504 = distinct !DILexicalBlock(scope: !8505, file: !8037, line: 550, column: 3)
!8505 = distinct !DILexicalBlock(scope: !8496, file: !8037, line: 549, column: 49)
!8506 = !DILocation(line: 551, column: 2, scope: !8505)
!8507 = !DILocation(line: 567, column: 12, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8469, file: !8037, line: 567, column: 6)
!8509 = !DILocation(line: 567, column: 17, scope: !8508)
!8510 = !DILocation(line: 567, column: 38, scope: !8508)
!8511 = !DILocation(line: 567, column: 6, scope: !8469)
!8512 = !DILocation(line: 568, column: 3, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8514, file: !8037, line: 568, column: 3)
!8514 = distinct !DILexicalBlock(scope: !8515, file: !8037, line: 568, column: 3)
!8515 = distinct !DILexicalBlock(scope: !8516, file: !8037, line: 568, column: 3)
!8516 = distinct !DILexicalBlock(scope: !8517, file: !8037, line: 568, column: 3)
!8517 = distinct !DILexicalBlock(scope: !8508, file: !8037, line: 567, column: 44)
!8518 = !DILocation(line: 569, column: 2, scope: !8517)
!8519 = !DILocation(line: 570, column: 12, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8469, file: !8037, line: 570, column: 6)
!8521 = !DILocation(line: 570, column: 17, scope: !8520)
!8522 = !DILocation(line: 570, column: 39, scope: !8520)
!8523 = !DILocation(line: 570, column: 6, scope: !8469)
!8524 = !DILocation(line: 571, column: 3, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8526, file: !8037, line: 571, column: 3)
!8526 = distinct !DILexicalBlock(scope: !8527, file: !8037, line: 571, column: 3)
!8527 = distinct !DILexicalBlock(scope: !8528, file: !8037, line: 571, column: 3)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !8037, line: 571, column: 3)
!8529 = distinct !DILexicalBlock(scope: !8520, file: !8037, line: 570, column: 45)
!8530 = !DILocation(line: 572, column: 2, scope: !8529)
!8531 = !DILocation(line: 573, column: 12, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8469, file: !8037, line: 573, column: 6)
!8533 = !DILocation(line: 573, column: 17, scope: !8532)
!8534 = !DILocation(line: 573, column: 42, scope: !8532)
!8535 = !DILocation(line: 573, column: 6, scope: !8469)
!8536 = !DILocation(line: 574, column: 3, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8538, file: !8037, line: 574, column: 3)
!8538 = distinct !DILexicalBlock(scope: !8539, file: !8037, line: 574, column: 3)
!8539 = distinct !DILexicalBlock(scope: !8540, file: !8037, line: 574, column: 3)
!8540 = distinct !DILexicalBlock(scope: !8541, file: !8037, line: 574, column: 3)
!8541 = distinct !DILexicalBlock(scope: !8532, file: !8037, line: 573, column: 48)
!8542 = !DILocation(line: 575, column: 2, scope: !8541)
!8543 = !DILocation(line: 576, column: 12, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8469, file: !8037, line: 576, column: 6)
!8545 = !DILocation(line: 576, column: 17, scope: !8544)
!8546 = !DILocation(line: 576, column: 44, scope: !8544)
!8547 = !DILocation(line: 576, column: 6, scope: !8469)
!8548 = !DILocation(line: 577, column: 3, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8550, file: !8037, line: 577, column: 3)
!8550 = distinct !DILexicalBlock(scope: !8551, file: !8037, line: 577, column: 3)
!8551 = distinct !DILexicalBlock(scope: !8552, file: !8037, line: 577, column: 3)
!8552 = distinct !DILexicalBlock(scope: !8553, file: !8037, line: 577, column: 3)
!8553 = distinct !DILexicalBlock(scope: !8544, file: !8037, line: 576, column: 50)
!8554 = !DILocation(line: 578, column: 2, scope: !8553)
!8555 = !DILocation(line: 581, column: 12, scope: !8469)
!8556 = !DILocation(line: 583, column: 2, scope: !8469)
!8557 = distinct !DISubprogram(name: "debug_monitor", scope: !8037, file: !8037, line: 632, type: !8558, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !8560)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{null, !2850, !8110}
!8560 = !{!8561, !8562}
!8561 = !DILocalVariable(name: "esf", arg: 1, scope: !8557, file: !8037, line: 632, type: !2850)
!8562 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8557, file: !8037, line: 632, type: !8110)
!8563 = !DILocation(line: 0, scope: !8557)
!8564 = !DILocation(line: 634, column: 15, scope: !8557)
!8565 = !DILocation(line: 636, column: 2, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8567, file: !8037, line: 636, column: 2)
!8567 = distinct !DILexicalBlock(scope: !8568, file: !8037, line: 636, column: 2)
!8568 = distinct !DILexicalBlock(scope: !8569, file: !8037, line: 636, column: 2)
!8569 = distinct !DILexicalBlock(scope: !8557, file: !8037, line: 636, column: 2)
!8570 = !DILocation(line: 652, column: 1, scope: !8557)
!8571 = distinct !DISubprogram(name: "reserved_exception", scope: !8037, file: !8037, line: 776, type: !8572, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !8574)
!8572 = !DISubroutineType(types: !8573)
!8573 = !{null, !8472, !105}
!8574 = !{!8575, !8576}
!8575 = !DILocalVariable(name: "esf", arg: 1, scope: !8571, file: !8037, line: 776, type: !8472)
!8576 = !DILocalVariable(name: "fault", arg: 2, scope: !8571, file: !8037, line: 776, type: !105)
!8577 = !DILocation(line: 0, scope: !8571)
!8578 = !DILocation(line: 780, column: 2, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8580, file: !8037, line: 780, column: 2)
!8580 = distinct !DILexicalBlock(scope: !8581, file: !8037, line: 780, column: 2)
!8581 = distinct !DILexicalBlock(scope: !8582, file: !8037, line: 780, column: 2)
!8582 = distinct !DILexicalBlock(scope: !8571, file: !8037, line: 780, column: 2)
!8583 = !DILocation(line: 783, column: 1, scope: !8571)
!8584 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8037, file: !8037, line: 658, type: !8585, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !8587)
!8585 = !DISubroutineType(types: !8586)
!8586 = !{!505, !2850}
!8587 = !{!8588, !8589, !8590}
!8588 = !DILocalVariable(name: "esf", arg: 1, scope: !8584, file: !8037, line: 658, type: !2850)
!8589 = !DILocalVariable(name: "ret_addr", scope: !8584, file: !8037, line: 660, type: !2622)
!8590 = !DILocalVariable(name: "fault_insn", scope: !8584, file: !8037, line: 686, type: !183)
!8591 = !DILocation(line: 0, scope: !8584)
!8592 = !DILocation(line: 660, column: 46, scope: !8584)
!8593 = !DILocation(line: 660, column: 23, scope: !8584)
!8594 = !DILocation(line: 682, column: 11, scope: !8584)
!8595 = !DILocation(line: 271, column: 3, scope: !8596, inlinedAt: !8597)
!8596 = distinct !DISubprogram(name: "__DSB", scope: !7754, file: !7754, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !397)
!8597 = distinct !DILocation(line: 683, column: 2, scope: !8584)
!8598 = !{i64 2456108}
!8599 = !DILocation(line: 260, column: 3, scope: !8600, inlinedAt: !8601)
!8600 = distinct !DISubprogram(name: "__ISB", scope: !7754, file: !7754, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !397)
!8601 = distinct !DILocation(line: 684, column: 2, scope: !8584)
!8602 = !{i64 2455825}
!8603 = !DILocation(line: 686, column: 35, scope: !8584)
!8604 = !DILocation(line: 686, column: 24, scope: !8584)
!8605 = !DILocation(line: 688, column: 11, scope: !8584)
!8606 = !DILocation(line: 271, column: 3, scope: !8596, inlinedAt: !8607)
!8607 = distinct !DILocation(line: 689, column: 2, scope: !8584)
!8608 = !DILocation(line: 260, column: 3, scope: !8600, inlinedAt: !8609)
!8609 = distinct !DILocation(line: 690, column: 2, scope: !8584)
!8610 = !DILocation(line: 693, column: 45, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8584, file: !8037, line: 693, column: 6)
!8612 = !DILocation(line: 699, column: 1, scope: !8584)
!8613 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8037, file: !8037, line: 1107, type: !266, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !397)
!8614 = !DILocation(line: 1111, column: 11, scope: !8613)
!8615 = !DILocation(line: 1136, column: 1, scope: !8613)
!8616 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8617, file: !8617, line: 26, type: !266, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !8618)
!8617 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8618 = !{!8619}
!8619 = !DILocalVariable(name: "irq", scope: !8616, file: !8617, line: 28, type: !105)
!8620 = !DILocation(line: 0, scope: !8616)
!8621 = !DILocation(line: 30, column: 2, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8616, file: !8617, line: 30, column: 2)
!8623 = !DILocation(line: 31, column: 3, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8625, file: !8617, line: 30, column: 39)
!8625 = distinct !DILexicalBlock(scope: !8622, file: !8617, line: 30, column: 2)
!8626 = !DILocation(line: 30, column: 35, scope: !8625)
!8627 = !DILocation(line: 30, column: 13, scope: !8625)
!8628 = distinct !{!8628, !8621, !8629}
!8629 = !DILocation(line: 32, column: 2, scope: !8622)
!8630 = !DILocation(line: 33, column: 1, scope: !8616)
!8631 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !692, file: !692, line: 1638, type: !7794, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !8632)
!8632 = !{!8633, !8634}
!8633 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8631, file: !692, line: 1638, type: !1011)
!8634 = !DILocalVariable(name: "priority", arg: 2, scope: !8631, file: !692, line: 1638, type: !113)
!8635 = !DILocation(line: 0, scope: !8631)
!8636 = !DILocation(line: 1640, column: 7, scope: !8631)
!8637 = !DILocation(line: 0, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8631, file: !692, line: 1640, column: 7)
!8639 = !DILocation(line: 1648, column: 1, scope: !8631)
!8640 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8641, file: !8641, line: 27, type: !8642, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !8747)
!8641 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8642 = !DISubroutineType(types: !8643)
!8643 = !{null, !8644}
!8644 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !8645)
!8645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8646, size: 32)
!8646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !8647)
!8647 = !{!8648, !8706, !8718, !8719, !8720, !8721, !8727, !8742}
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8646, file: !127, line: 247, baseType: !8649, size: 384)
!8649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !8650)
!8650 = !{!8651, !8675, !8682, !8683, !8684, !8693, !8694, !8695}
!8651 = !DIDerivedType(tag: DW_TAG_member, scope: !8649, file: !127, line: 60, baseType: !8652, size: 64)
!8652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8649, file: !127, line: 60, size: 64, elements: !8653)
!8653 = !{!8654, !8669}
!8654 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8652, file: !127, line: 61, baseType: !8655, size: 64)
!8655 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !8656)
!8656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !8657)
!8657 = !{!8658, !8664}
!8658 = !DIDerivedType(tag: DW_TAG_member, scope: !8656, file: !137, line: 38, baseType: !8659, size: 32)
!8659 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8656, file: !137, line: 38, size: 32, elements: !8660)
!8660 = !{!8661, !8663}
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8659, file: !137, line: 39, baseType: !8662, size: 32)
!8662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8656, size: 32)
!8663 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8659, file: !137, line: 40, baseType: !8662, size: 32)
!8664 = !DIDerivedType(tag: DW_TAG_member, scope: !8656, file: !137, line: 42, baseType: !8665, size: 32, offset: 32)
!8665 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8656, file: !137, line: 42, size: 32, elements: !8666)
!8666 = !{!8667, !8668}
!8667 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8665, file: !137, line: 43, baseType: !8662, size: 32)
!8668 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8665, file: !137, line: 44, baseType: !8662, size: 32)
!8669 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8652, file: !127, line: 62, baseType: !8670, size: 64)
!8670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !8671)
!8671 = !{!8672}
!8672 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8670, file: !153, line: 50, baseType: !8673, size: 64)
!8673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8674, size: 64, elements: !158)
!8674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8670, size: 32)
!8675 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8649, file: !127, line: 68, baseType: !8676, size: 32, offset: 64)
!8676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8677, size: 32)
!8677 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !8678)
!8678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !8679)
!8679 = !{!8680}
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8678, file: !163, line: 232, baseType: !8681, size: 64)
!8681 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !8656)
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8649, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!8683 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8649, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!8684 = !DIDerivedType(tag: DW_TAG_member, scope: !8649, file: !127, line: 90, baseType: !8685, size: 16, offset: 112)
!8685 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8649, file: !127, line: 90, size: 16, elements: !8686)
!8686 = !{!8687, !8692}
!8687 = !DIDerivedType(tag: DW_TAG_member, scope: !8685, file: !127, line: 91, baseType: !8688, size: 16)
!8688 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8685, file: !127, line: 91, size: 16, elements: !8689)
!8689 = !{!8690, !8691}
!8690 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8688, file: !127, line: 96, baseType: !179, size: 8)
!8691 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8688, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8685, file: !127, line: 100, baseType: !183, size: 16)
!8693 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8649, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!8694 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8649, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8649, file: !127, line: 131, baseType: !8696, size: 192, offset: 192)
!8696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !8697)
!8697 = !{!8698, !8699, !8705}
!8698 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8696, file: !163, line: 245, baseType: !8655, size: 64)
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8696, file: !163, line: 246, baseType: !8700, size: 32, offset: 64)
!8700 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !8701)
!8701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8702, size: 32)
!8702 = !DISubroutineType(types: !8703)
!8703 = !{null, !8704}
!8704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8696, size: 32)
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8696, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8646, file: !127, line: 250, baseType: !8707, size: 288, offset: 384)
!8707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8708)
!8708 = !{!8709, !8710, !8711, !8712, !8713, !8714, !8715, !8716, !8717}
!8709 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8707, file: !200, line: 26, baseType: !113, size: 32)
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8707, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8711 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8707, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8712 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8707, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8707, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8707, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8707, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8707, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8707, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8646, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8646, file: !127, line: 256, baseType: !8677, size: 64, offset: 704)
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8646, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8646, file: !127, line: 300, baseType: !8722, size: 96, offset: 800)
!8722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !8723)
!8723 = !{!8724, !8725, !8726}
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8722, file: !127, line: 153, baseType: !22, size: 32)
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8722, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8722, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!8727 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8646, file: !127, line: 325, baseType: !8728, size: 32, offset: 896)
!8728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8729, size: 32)
!8729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !8730)
!8730 = !{!8731, !8737, !8738}
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8729, file: !122, line: 5074, baseType: !8732, size: 96)
!8732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !8733)
!8733 = !{!8734, !8735, !8736}
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8732, file: !226, line: 57, baseType: !229, size: 32)
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8732, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8732, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!8737 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8729, file: !122, line: 5075, baseType: !8677, size: 64, offset: 96)
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8729, file: !122, line: 5076, baseType: !8739, size: 32, offset: 160)
!8739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !8740)
!8740 = !{!8741}
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8739, file: !236, line: 52, baseType: !22, size: 32)
!8742 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8646, file: !127, line: 343, baseType: !8743, size: 64, offset: 928)
!8743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !8744)
!8744 = !{!8745, !8746}
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8743, file: !200, line: 63, baseType: !113, size: 32)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8743, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!8747 = !{!8748}
!8748 = !DILocalVariable(name: "thread", arg: 1, scope: !8640, file: !8641, line: 27, type: !8644)
!8749 = !DILocation(line: 0, scope: !8640)
!8750 = !DILocation(line: 29, column: 6, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8640, file: !8641, line: 29, column: 6)
!8752 = !DILocation(line: 29, column: 15, scope: !8751)
!8753 = !DILocation(line: 29, column: 6, scope: !8640)
!8754 = !DILocation(line: 1031, column: 3, scope: !8755, inlinedAt: !8758)
!8755 = distinct !DISubprogram(name: "__get_IPSR", scope: !7754, file: !7754, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !8756)
!8756 = !{!8757}
!8757 = !DILocalVariable(name: "result", scope: !8755, file: !7754, line: 1029, type: !113)
!8758 = distinct !DILocation(line: 48, column: 10, scope: !8759, inlinedAt: !8763)
!8759 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8760, file: !8760, line: 46, type: !8761, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !397)
!8760 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8761 = !DISubroutineType(types: !8762)
!8762 = !{!505}
!8763 = distinct !DILocation(line: 30, column: 7, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8765, file: !8641, line: 30, column: 7)
!8765 = distinct !DILexicalBlock(scope: !8751, file: !8641, line: 29, column: 26)
!8766 = !{i64 2444956}
!8767 = !DILocation(line: 0, scope: !8755, inlinedAt: !8758)
!8768 = !DILocation(line: 48, column: 9, scope: !8759, inlinedAt: !8763)
!8769 = !DILocation(line: 30, column: 7, scope: !8765)
!8770 = !DILocation(line: 42, column: 14, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8764, file: !8641, line: 30, column: 25)
!8772 = !DILocation(line: 48, column: 15, scope: !8771)
!8773 = !DILocation(line: 49, column: 3, scope: !8771)
!8774 = !DILocation(line: 52, column: 2, scope: !8640)
!8775 = !DILocation(line: 53, column: 1, scope: !8640)
!8776 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !552, file: !552, line: 127, type: !266, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !545, retainedNodes: !397)
!8777 = !DILocation(line: 134, column: 2, scope: !8776)
!8778 = !DILocation(line: 156, column: 1, scope: !8776)
!8779 = !DILocation(line: 0, scope: !551)
!8780 = !DILocation(line: 289, column: 36, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !551, file: !552, line: 285, column: 2)
!8782 = !DILocation(line: 289, column: 42, scope: !8781)
!8783 = !DILocation(line: 300, column: 36, scope: !551)
!8784 = !DILocation(line: 301, column: 35, scope: !551)
!8785 = !DILocation(line: 302, column: 37, scope: !551)
!8786 = !DILocation(line: 311, column: 2, scope: !551)
!8787 = !DILocation(line: 316, column: 1, scope: !551)
!8788 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !720, file: !720, line: 180, type: !266, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !397)
!8789 = !DILocation(line: 188, column: 12, scope: !8788)
!8790 = !DILocation(line: 271, column: 3, scope: !8791, inlinedAt: !8792)
!8791 = distinct !DISubprogram(name: "__DSB", scope: !7754, file: !7754, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !397)
!8792 = distinct !DILocation(line: 192, column: 2, scope: !8788)
!8793 = !{i64 2603783}
!8794 = !DILocation(line: 260, column: 3, scope: !8795, inlinedAt: !8796)
!8795 = distinct !DISubprogram(name: "__ISB", scope: !7754, file: !7754, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !397)
!8796 = distinct !DILocation(line: 193, column: 2, scope: !8788)
!8797 = !{i64 2603500}
!8798 = !DILocation(line: 194, column: 1, scope: !8788)
!8799 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !720, file: !720, line: 199, type: !266, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !397)
!8800 = !DILocation(line: 282, column: 3, scope: !8801, inlinedAt: !8802)
!8801 = distinct !DISubprogram(name: "__DMB", scope: !7754, file: !7754, line: 280, type: !266, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !397)
!8802 = distinct !DILocation(line: 202, column: 2, scope: !8799)
!8803 = !{i64 2604059}
!8804 = !DILocation(line: 205, column: 12, scope: !8799)
!8805 = !DILocation(line: 206, column: 1, scope: !8799)
!8806 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !720, file: !720, line: 275, type: !8807, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !8820)
!8807 = !DISubroutineType(types: !8808)
!8808 = !{null, !8809, !1967, !3712, !3712}
!8809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8810, size: 32)
!8810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8811)
!8811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !664, line: 52, size: 96, elements: !8812)
!8812 = !{!8813, !8814, !8815}
!8813 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8811, file: !664, line: 53, baseType: !22, size: 32)
!8814 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8811, file: !664, line: 54, baseType: !111, size: 32, offset: 32)
!8815 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8811, file: !664, line: 55, baseType: !8816, size: 32, offset: 64)
!8816 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !670, line: 151, baseType: !8817)
!8817 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !670, line: 149, size: 32, elements: !8818)
!8818 = !{!8819}
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8817, file: !670, line: 150, baseType: !113, size: 32)
!8820 = !{!8821, !8822, !8823, !8824}
!8821 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8806, file: !720, line: 276, type: !8809)
!8822 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8806, file: !720, line: 276, type: !1967)
!8823 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8806, file: !720, line: 277, type: !3712)
!8824 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8806, file: !720, line: 277, type: !3712)
!8825 = !DILocation(line: 0, scope: !8806)
!8826 = !DILocation(line: 279, column: 6, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8806, file: !720, line: 279, column: 6)
!8828 = !DILocation(line: 280, column: 57, scope: !8827)
!8829 = !DILocation(line: 279, column: 6, scope: !8806)
!8830 = !DILocation(line: 282, column: 3, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8832, file: !720, line: 282, column: 3)
!8832 = distinct !DILexicalBlock(scope: !8833, file: !720, line: 282, column: 3)
!8833 = distinct !DILexicalBlock(scope: !8834, file: !720, line: 282, column: 3)
!8834 = distinct !DILexicalBlock(scope: !8827, file: !720, line: 280, column: 69)
!8835 = !DILocation(line: 285, column: 1, scope: !8806)
!8836 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8837, file: !8837, line: 220, type: !8838, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !8840)
!8837 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8838 = !DISubroutineType(types: !8839)
!8839 = !{!105, !8809, !1967, !3712, !3712}
!8840 = !{!8841, !8842, !8843, !8844, !8845}
!8841 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8836, file: !8837, line: 221, type: !8809)
!8842 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8836, file: !8837, line: 221, type: !1967)
!8843 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8836, file: !8837, line: 222, type: !3712)
!8844 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8836, file: !8837, line: 223, type: !3712)
!8845 = !DILocalVariable(name: "mpu_reg_index", scope: !8836, file: !8837, line: 225, type: !105)
!8846 = !DILocation(line: 0, scope: !8836)
!8847 = !DILocation(line: 225, column: 22, scope: !8836)
!8848 = !DILocation(line: 233, column: 18, scope: !8836)
!8849 = !DILocation(line: 236, column: 23, scope: !8836)
!8850 = !DILocation(line: 236, column: 21, scope: !8836)
!8851 = !DILocation(line: 238, column: 2, scope: !8836)
!8852 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !720, file: !720, line: 105, type: !8853, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !8855)
!8853 = !DISubroutineType(types: !8854)
!8854 = !{!105, !8809, !169, !169, !505}
!8855 = !{!8856, !8857, !8858, !8859, !8860, !8861}
!8856 = !DILocalVariable(name: "regions", arg: 1, scope: !8852, file: !720, line: 106, type: !8809)
!8857 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8852, file: !720, line: 106, type: !169)
!8858 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8852, file: !720, line: 106, type: !169)
!8859 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8852, file: !720, line: 107, type: !505)
!8860 = !DILocalVariable(name: "i", scope: !8852, file: !720, line: 109, type: !105)
!8861 = !DILocalVariable(name: "reg_index", scope: !8852, file: !720, line: 110, type: !105)
!8862 = !DILocation(line: 0, scope: !8852)
!8863 = !DILocation(line: 110, column: 18, scope: !8852)
!8864 = !DILocation(line: 112, column: 16, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !720, line: 112, column: 2)
!8866 = distinct !DILexicalBlock(scope: !8852, file: !720, line: 112, column: 2)
!8867 = !DILocation(line: 112, column: 2, scope: !8866)
!8868 = !DILocation(line: 113, column: 7, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8870, file: !720, line: 113, column: 7)
!8870 = distinct !DILexicalBlock(scope: !8865, file: !720, line: 112, column: 36)
!8871 = !DILocation(line: 113, column: 18, scope: !8869)
!8872 = !DILocation(line: 113, column: 23, scope: !8869)
!8873 = !DILocation(line: 113, column: 7, scope: !8870)
!8874 = !DILocation(line: 118, column: 23, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8870, file: !720, line: 118, column: 7)
!8876 = !DILocation(line: 119, column: 7, scope: !8875)
!8877 = !DILocation(line: 118, column: 7, scope: !8870)
!8878 = !DILocation(line: 120, column: 4, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8880, file: !720, line: 120, column: 4)
!8880 = distinct !DILexicalBlock(scope: !8881, file: !720, line: 120, column: 4)
!8881 = distinct !DILexicalBlock(scope: !8882, file: !720, line: 120, column: 4)
!8882 = distinct !DILexicalBlock(scope: !8883, file: !720, line: 120, column: 4)
!8883 = distinct !DILexicalBlock(scope: !8875, file: !720, line: 119, column: 45)
!8884 = !DILocation(line: 121, column: 4, scope: !8883)
!8885 = !DILocation(line: 124, column: 36, scope: !8870)
!8886 = !DILocation(line: 124, column: 15, scope: !8870)
!8887 = !DILocation(line: 126, column: 17, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8870, file: !720, line: 126, column: 7)
!8889 = !DILocation(line: 126, column: 7, scope: !8870)
!8890 = !DILocation(line: 131, column: 12, scope: !8870)
!8891 = !DILocation(line: 132, column: 2, scope: !8870)
!8892 = !DILocation(line: 112, column: 32, scope: !8865)
!8893 = distinct !{!8893, !8867, !8894}
!8894 = !DILocation(line: 132, column: 2, scope: !8866)
!8895 = !DILocation(line: 135, column: 1, scope: !8852)
!8896 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8837, file: !8837, line: 63, type: !8897, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !8899)
!8897 = !DISubroutineType(types: !8898)
!8898 = !{!105, !8809}
!8899 = !{!8900, !8901}
!8900 = !DILocalVariable(name: "part", arg: 1, scope: !8896, file: !8837, line: 63, type: !8809)
!8901 = !DILocalVariable(name: "partition_is_valid", scope: !8896, file: !8837, line: 70, type: !105)
!8902 = !DILocation(line: 0, scope: !8896)
!8903 = !DILocation(line: 71, column: 11, scope: !8896)
!8904 = !DILocation(line: 71, column: 37, scope: !8896)
!8905 = !DILocation(line: 72, column: 3, scope: !8896)
!8906 = !DILocation(line: 71, column: 30, scope: !8896)
!8907 = !DILocation(line: 75, column: 11, scope: !8896)
!8908 = !DILocation(line: 75, column: 17, scope: !8896)
!8909 = !DILocation(line: 75, column: 38, scope: !8896)
!8910 = !DILocation(line: 77, column: 2, scope: !8896)
!8911 = distinct !DISubprogram(name: "mpu_configure_region", scope: !720, file: !720, line: 79, type: !8912, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !8914)
!8912 = !DISubroutineType(types: !8913)
!8913 = !{!105, !1967, !8809}
!8914 = !{!8915, !8916, !8917}
!8915 = !DILocalVariable(name: "index", arg: 1, scope: !8911, file: !720, line: 79, type: !1967)
!8916 = !DILocalVariable(name: "new_region", arg: 2, scope: !8911, file: !720, line: 80, type: !8809)
!8917 = !DILocalVariable(name: "region_conf", scope: !8911, file: !720, line: 82, type: !709)
!8918 = !DILocation(line: 0, scope: !8911)
!8919 = !DILocation(line: 82, column: 2, scope: !8911)
!8920 = !DILocation(line: 82, column: 24, scope: !8911)
!8921 = !DILocation(line: 87, column: 33, scope: !8911)
!8922 = !DILocation(line: 87, column: 14, scope: !8911)
!8923 = !DILocation(line: 87, column: 19, scope: !8911)
!8924 = !DILocation(line: 91, column: 55, scope: !8911)
!8925 = !DILocation(line: 92, column: 16, scope: !8911)
!8926 = !DILocation(line: 92, column: 53, scope: !8911)
!8927 = !DILocation(line: 91, column: 2, scope: !8911)
!8928 = !DILocation(line: 95, column: 9, scope: !8911)
!8929 = !DILocation(line: 97, column: 1, scope: !8911)
!8930 = !DILocation(line: 95, column: 2, scope: !8911)
!8931 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8837, file: !8837, line: 113, type: !8932, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !8937)
!8932 = !DISubroutineType(types: !8933)
!8933 = !{null, !8934, !8935, !113, !113}
!8934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 32)
!8935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8936, size: 32)
!8936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8816)
!8937 = !{!8938, !8939, !8940, !8941}
!8938 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8931, file: !8837, line: 114, type: !8934)
!8939 = !DILocalVariable(name: "attr", arg: 2, scope: !8931, file: !8837, line: 115, type: !8935)
!8940 = !DILocalVariable(name: "base", arg: 3, scope: !8931, file: !8837, line: 115, type: !113)
!8941 = !DILocalVariable(name: "size", arg: 4, scope: !8931, file: !8837, line: 115, type: !113)
!8942 = !DILocation(line: 0, scope: !8931)
!8943 = !DILocation(line: 127, column: 23, scope: !8931)
!8944 = !DILocation(line: 127, column: 35, scope: !8931)
!8945 = !DILocation(line: 127, column: 33, scope: !8931)
!8946 = !DILocation(line: 127, column: 10, scope: !8931)
!8947 = !DILocation(line: 127, column: 15, scope: !8931)
!8948 = !DILocation(line: 129, column: 1, scope: !8931)
!8949 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !720, file: !720, line: 57, type: !8950, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !8952)
!8950 = !DISubroutineType(types: !8951)
!8951 = !{!105, !1967, !707}
!8952 = !{!8953, !8954}
!8953 = !DILocalVariable(name: "index", arg: 1, scope: !8949, file: !720, line: 57, type: !1967)
!8954 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8949, file: !720, line: 58, type: !707)
!8955 = !DILocation(line: 0, scope: !8949)
!8956 = !DILocation(line: 61, column: 6, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8949, file: !720, line: 61, column: 6)
!8958 = !DILocation(line: 61, column: 12, scope: !8957)
!8959 = !DILocation(line: 61, column: 6, scope: !8949)
!8960 = !DILocation(line: 64, column: 3, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8962, file: !720, line: 64, column: 3)
!8962 = distinct !DILexicalBlock(scope: !8963, file: !720, line: 64, column: 3)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !720, line: 64, column: 3)
!8964 = distinct !DILexicalBlock(scope: !8965, file: !720, line: 64, column: 3)
!8965 = distinct !DILexicalBlock(scope: !8957, file: !720, line: 61, column: 40)
!8966 = !DILocation(line: 65, column: 3, scope: !8965)
!8967 = !DILocation(line: 71, column: 2, scope: !8949)
!8968 = !DILocation(line: 73, column: 2, scope: !8949)
!8969 = !DILocation(line: 74, column: 1, scope: !8949)
!8970 = distinct !DISubprogram(name: "region_init", scope: !8837, file: !8837, line: 29, type: !8971, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !8973)
!8971 = !DISubroutineType(types: !8972)
!8972 = !{null, !3712, !707}
!8973 = !{!8974, !8975}
!8974 = !DILocalVariable(name: "index", arg: 1, scope: !8970, file: !8837, line: 29, type: !3712)
!8975 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8970, file: !8837, line: 30, type: !707)
!8976 = !DILocation(line: 0, scope: !8970)
!8977 = !DILocation(line: 33, column: 2, scope: !8970)
!8978 = !DILocation(line: 47, column: 28, scope: !8970)
!8979 = !DILocation(line: 47, column: 33, scope: !8970)
!8980 = !DILocation(line: 48, column: 26, scope: !8970)
!8981 = !DILocation(line: 47, column: 12, scope: !8970)
!8982 = !DILocation(line: 49, column: 32, scope: !8970)
!8983 = !DILocation(line: 49, column: 37, scope: !8970)
!8984 = !DILocation(line: 49, column: 12, scope: !8970)
!8985 = !DILocation(line: 53, column: 1, scope: !8970)
!8986 = distinct !DISubprogram(name: "set_region_number", scope: !8987, file: !8987, line: 32, type: !7443, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !8988)
!8987 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8988 = !{!8989}
!8989 = !DILocalVariable(name: "index", arg: 1, scope: !8986, file: !8987, line: 32, type: !113)
!8990 = !DILocation(line: 0, scope: !8986)
!8991 = !DILocation(line: 34, column: 11, scope: !8986)
!8992 = !DILocation(line: 35, column: 1, scope: !8986)
!8993 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8837, file: !8837, line: 88, type: !8994, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !8996)
!8994 = !DISubroutineType(types: !8995)
!8995 = !{!113, !113}
!8996 = !{!8997}
!8997 = !DILocalVariable(name: "size", arg: 1, scope: !8993, file: !8837, line: 88, type: !113)
!8998 = !DILocation(line: 0, scope: !8993)
!8999 = !DILocation(line: 91, column: 11, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8993, file: !8837, line: 91, column: 6)
!9001 = !DILocation(line: 91, column: 6, scope: !8993)
!9002 = !DILocation(line: 100, column: 11, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8993, file: !8837, line: 100, column: 6)
!9004 = !DILocation(line: 100, column: 6, scope: !8993)
!9005 = !DILocation(line: 104, column: 35, scope: !8993)
!9006 = !DILocation(line: 104, column: 16, scope: !8993)
!9007 = !DILocation(line: 104, column: 50, scope: !8993)
!9008 = !DILocation(line: 104, column: 72, scope: !8993)
!9009 = !DILocation(line: 104, column: 2, scope: !8993)
!9010 = !DILocation(line: 106, column: 1, scope: !8993)
!9011 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !720, file: !720, line: 307, type: !9012, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !9014)
!9012 = !DISubroutineType(types: !9013)
!9013 = !{null, !8809, !169}
!9014 = !{!9015, !9016}
!9015 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9011, file: !720, line: 308, type: !8809)
!9016 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9011, file: !720, line: 308, type: !169)
!9017 = !DILocation(line: 0, scope: !9011)
!9018 = !DILocation(line: 310, column: 6, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !9011, file: !720, line: 310, column: 6)
!9020 = !DILocation(line: 311, column: 3, scope: !9019)
!9021 = !DILocation(line: 310, column: 6, scope: !9011)
!9022 = !DILocation(line: 313, column: 3, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !720, line: 313, column: 3)
!9024 = distinct !DILexicalBlock(scope: !9025, file: !720, line: 313, column: 3)
!9025 = distinct !DILexicalBlock(scope: !9026, file: !720, line: 313, column: 3)
!9026 = distinct !DILexicalBlock(scope: !9019, file: !720, line: 311, column: 15)
!9027 = !DILocation(line: 316, column: 1, scope: !9011)
!9028 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8837, file: !8837, line: 249, type: !9029, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !9031)
!9029 = !DISubroutineType(types: !9030)
!9030 = !{!105, !8809, !169}
!9031 = !{!9032, !9033, !9034, !9035}
!9032 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9028, file: !8837, line: 250, type: !8809)
!9033 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9028, file: !8837, line: 250, type: !169)
!9034 = !DILocalVariable(name: "mpu_reg_index", scope: !9028, file: !8837, line: 252, type: !105)
!9035 = !DILocalVariable(name: "i", scope: !9036, file: !8837, line: 264, type: !105)
!9036 = distinct !DILexicalBlock(scope: !9037, file: !8837, line: 264, column: 3)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !8837, line: 261, column: 32)
!9038 = distinct !DILexicalBlock(scope: !9028, file: !8837, line: 261, column: 6)
!9039 = !DILocation(line: 0, scope: !9028)
!9040 = !DILocation(line: 252, column: 22, scope: !9028)
!9041 = !DILocation(line: 258, column: 18, scope: !9028)
!9042 = !DILocation(line: 261, column: 20, scope: !9038)
!9043 = !DILocation(line: 261, column: 6, scope: !9028)
!9044 = !DILocation(line: 0, scope: !9036)
!9045 = !DILocation(line: 265, column: 4, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9047, file: !8837, line: 264, column: 59)
!9047 = distinct !DILexicalBlock(scope: !9036, file: !8837, line: 264, column: 3)
!9048 = !DILocation(line: 264, column: 55, scope: !9047)
!9049 = !DILocation(line: 264, column: 33, scope: !9047)
!9050 = !DILocation(line: 264, column: 3, scope: !9036)
!9051 = distinct !{!9051, !9050, !9052}
!9052 = !DILocation(line: 266, column: 3, scope: !9036)
!9053 = !DILocation(line: 269, column: 2, scope: !9028)
!9054 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9055, file: !9055, line: 218, type: !7443, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !9056)
!9055 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9056 = !{!9057}
!9057 = !DILocalVariable(name: "rnr", arg: 1, scope: !9054, file: !9055, line: 218, type: !113)
!9058 = !DILocation(line: 0, scope: !9054)
!9059 = !DILocation(line: 220, column: 12, scope: !9054)
!9060 = !DILocation(line: 221, column: 13, scope: !9054)
!9061 = !DILocation(line: 222, column: 1, scope: !9054)
!9062 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !720, file: !720, line: 326, type: !9063, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !9065)
!9063 = !DISubroutineType(types: !9064)
!9064 = !{!105}
!9065 = !{!9066}
!9066 = !DILocalVariable(name: "r_index", scope: !9062, file: !720, line: 328, type: !113)
!9067 = !DILocation(line: 330, column: 17, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9062, file: !720, line: 330, column: 6)
!9069 = !DILocation(line: 330, column: 29, scope: !9068)
!9070 = !DILocation(line: 330, column: 6, scope: !9062)
!9071 = !DILocation(line: 337, column: 3, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !720, line: 337, column: 3)
!9073 = distinct !DILexicalBlock(scope: !9074, file: !720, line: 337, column: 3)
!9074 = distinct !DILexicalBlock(scope: !9075, file: !720, line: 337, column: 3)
!9075 = distinct !DILexicalBlock(scope: !9068, file: !720, line: 330, column: 50)
!9076 = !DILocation(line: 347, column: 2, scope: !9062)
!9077 = !DILocation(line: 0, scope: !9062)
!9078 = !DILocation(line: 364, column: 29, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9080, file: !720, line: 364, column: 2)
!9080 = distinct !DILexicalBlock(scope: !9062, file: !720, line: 364, column: 2)
!9081 = !DILocation(line: 364, column: 2, scope: !9080)
!9082 = !DILocation(line: 365, column: 25, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9079, file: !720, line: 364, column: 66)
!9084 = !DILocation(line: 365, column: 3, scope: !9083)
!9085 = !DILocation(line: 364, column: 62, scope: !9079)
!9086 = distinct !{!9086, !9081, !9087}
!9087 = !DILocation(line: 366, column: 2, scope: !9080)
!9088 = !DILocation(line: 369, column: 23, scope: !9062)
!9089 = !DILocation(line: 369, column: 21, scope: !9062)
!9090 = !DILocation(line: 372, column: 2, scope: !9062)
!9091 = !DILocation(line: 433, column: 2, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9093, file: !720, line: 433, column: 2)
!9093 = distinct !DILexicalBlock(scope: !9062, file: !720, line: 433, column: 2)
!9094 = !DILocation(line: 433, column: 2, scope: !9093)
!9095 = !DILocation(line: 433, column: 2, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9092, file: !720, line: 433, column: 2)
!9097 = !DILocation(line: 444, column: 1, scope: !9062)
!9098 = distinct !DISubprogram(name: "strcpy", scope: !9099, file: !9099, line: 20, type: !9100, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9104)
!9099 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9100 = !DISubroutineType(types: !9101)
!9101 = !{!102, !9102, !9103}
!9102 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!9103 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !269)
!9104 = !{!9105, !9106, !9107}
!9105 = !DILocalVariable(name: "d", arg: 1, scope: !9098, file: !9099, line: 20, type: !9102)
!9106 = !DILocalVariable(name: "s", arg: 2, scope: !9098, file: !9099, line: 20, type: !9103)
!9107 = !DILocalVariable(name: "dest", scope: !9098, file: !9099, line: 22, type: !102)
!9108 = !DILocation(line: 0, scope: !9098)
!9109 = !DILocation(line: 24, column: 9, scope: !9098)
!9110 = !DILocation(line: 24, column: 12, scope: !9098)
!9111 = !DILocation(line: 24, column: 2, scope: !9098)
!9112 = !DILocation(line: 25, column: 6, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9098, file: !9099, line: 24, column: 21)
!9114 = !DILocation(line: 26, column: 4, scope: !9113)
!9115 = !DILocation(line: 27, column: 4, scope: !9113)
!9116 = distinct !{!9116, !9111, !9117}
!9117 = !DILocation(line: 28, column: 2, scope: !9098)
!9118 = !DILocation(line: 30, column: 5, scope: !9098)
!9119 = !DILocation(line: 32, column: 2, scope: !9098)
!9120 = distinct !DISubprogram(name: "strncpy", scope: !9099, file: !9099, line: 42, type: !9121, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9123)
!9121 = !DISubroutineType(types: !9122)
!9122 = !{!102, !9102, !9103, !111}
!9123 = !{!9124, !9125, !9126, !9127}
!9124 = !DILocalVariable(name: "d", arg: 1, scope: !9120, file: !9099, line: 42, type: !9102)
!9125 = !DILocalVariable(name: "s", arg: 2, scope: !9120, file: !9099, line: 42, type: !9103)
!9126 = !DILocalVariable(name: "n", arg: 3, scope: !9120, file: !9099, line: 42, type: !111)
!9127 = !DILocalVariable(name: "dest", scope: !9120, file: !9099, line: 44, type: !102)
!9128 = !DILocation(line: 0, scope: !9120)
!9129 = !DILocation(line: 46, column: 12, scope: !9120)
!9130 = !DILocation(line: 46, column: 17, scope: !9120)
!9131 = !DILocation(line: 46, column: 20, scope: !9120)
!9132 = !DILocation(line: 46, column: 23, scope: !9120)
!9133 = !DILocation(line: 46, column: 2, scope: !9120)
!9134 = !DILocation(line: 47, column: 6, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9120, file: !9099, line: 46, column: 32)
!9136 = !DILocation(line: 48, column: 4, scope: !9135)
!9137 = !DILocation(line: 49, column: 4, scope: !9135)
!9138 = !DILocation(line: 50, column: 4, scope: !9135)
!9139 = distinct !{!9139, !9133, !9140}
!9140 = !DILocation(line: 51, column: 2, scope: !9120)
!9141 = !DILocation(line: 54, column: 6, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9120, file: !9099, line: 53, column: 16)
!9143 = !DILocation(line: 55, column: 4, scope: !9142)
!9144 = !DILocation(line: 56, column: 4, scope: !9142)
!9145 = !DILocation(line: 53, column: 11, scope: !9120)
!9146 = !DILocation(line: 53, column: 2, scope: !9120)
!9147 = distinct !{!9147, !9146, !9148}
!9148 = !DILocation(line: 57, column: 2, scope: !9120)
!9149 = !DILocation(line: 59, column: 2, scope: !9120)
!9150 = distinct !DISubprogram(name: "strchr", scope: !9099, file: !9099, line: 69, type: !9151, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9153)
!9151 = !DISubroutineType(types: !9152)
!9152 = !{!102, !269, !105}
!9153 = !{!9154, !9155, !9156}
!9154 = !DILocalVariable(name: "s", arg: 1, scope: !9150, file: !9099, line: 69, type: !269)
!9155 = !DILocalVariable(name: "c", arg: 2, scope: !9150, file: !9099, line: 69, type: !105)
!9156 = !DILocalVariable(name: "tmp", scope: !9150, file: !9099, line: 71, type: !103)
!9157 = !DILocation(line: 0, scope: !9150)
!9158 = !DILocation(line: 73, column: 2, scope: !9150)
!9159 = !DILocation(line: 73, column: 10, scope: !9150)
!9160 = !DILocation(line: 73, column: 13, scope: !9150)
!9161 = !DILocation(line: 73, column: 21, scope: !9150)
!9162 = !DILocation(line: 74, column: 4, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9150, file: !9099, line: 73, column: 38)
!9164 = distinct !{!9164, !9158, !9165}
!9165 = !DILocation(line: 75, column: 2, scope: !9150)
!9166 = !DILocation(line: 77, column: 9, scope: !9150)
!9167 = !DILocation(line: 77, column: 2, scope: !9150)
!9168 = distinct !DISubprogram(name: "strrchr", scope: !9099, file: !9099, line: 87, type: !9151, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9169)
!9169 = !{!9170, !9171, !9172}
!9170 = !DILocalVariable(name: "s", arg: 1, scope: !9168, file: !9099, line: 87, type: !269)
!9171 = !DILocalVariable(name: "c", arg: 2, scope: !9168, file: !9099, line: 87, type: !105)
!9172 = !DILocalVariable(name: "match", scope: !9168, file: !9099, line: 89, type: !102)
!9173 = !DILocation(line: 0, scope: !9168)
!9174 = !DILocation(line: 91, column: 2, scope: !9168)
!9175 = !DILocation(line: 92, column: 7, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9177, file: !9099, line: 92, column: 7)
!9177 = distinct !DILexicalBlock(scope: !9168, file: !9099, line: 91, column: 5)
!9178 = !DILocation(line: 92, column: 10, scope: !9176)
!9179 = !DILocation(line: 92, column: 7, scope: !9177)
!9180 = !DILocation(line: 95, column: 13, scope: !9168)
!9181 = !DILocation(line: 95, column: 2, scope: !9177)
!9182 = distinct !{!9182, !9174, !9183}
!9183 = !DILocation(line: 95, column: 15, scope: !9168)
!9184 = !DILocation(line: 97, column: 2, scope: !9168)
!9185 = distinct !DISubprogram(name: "strlen", scope: !9099, file: !9099, line: 107, type: !9186, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9188)
!9186 = !DISubroutineType(types: !9187)
!9187 = !{!111, !269}
!9188 = !{!9189, !9190}
!9189 = !DILocalVariable(name: "s", arg: 1, scope: !9185, file: !9099, line: 107, type: !269)
!9190 = !DILocalVariable(name: "n", scope: !9185, file: !9099, line: 109, type: !111)
!9191 = !DILocation(line: 0, scope: !9185)
!9192 = !DILocation(line: 111, column: 9, scope: !9185)
!9193 = !DILocation(line: 111, column: 12, scope: !9185)
!9194 = !DILocation(line: 111, column: 2, scope: !9185)
!9195 = !DILocation(line: 112, column: 4, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9185, file: !9099, line: 111, column: 21)
!9197 = !DILocation(line: 113, column: 4, scope: !9196)
!9198 = distinct !{!9198, !9194, !9199}
!9199 = !DILocation(line: 114, column: 2, scope: !9185)
!9200 = !DILocation(line: 116, column: 2, scope: !9185)
!9201 = distinct !DISubprogram(name: "strnlen", scope: !9099, file: !9099, line: 126, type: !9202, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9204)
!9202 = !DISubroutineType(types: !9203)
!9203 = !{!111, !269, !111}
!9204 = !{!9205, !9206, !9207}
!9205 = !DILocalVariable(name: "s", arg: 1, scope: !9201, file: !9099, line: 126, type: !269)
!9206 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9201, file: !9099, line: 126, type: !111)
!9207 = !DILocalVariable(name: "n", scope: !9201, file: !9099, line: 128, type: !111)
!9208 = !DILocation(line: 0, scope: !9201)
!9209 = !DILocation(line: 130, column: 9, scope: !9201)
!9210 = !DILocation(line: 130, column: 12, scope: !9201)
!9211 = !DILocation(line: 130, column: 20, scope: !9201)
!9212 = !DILocation(line: 130, column: 2, scope: !9201)
!9213 = !DILocation(line: 131, column: 4, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9201, file: !9099, line: 130, column: 35)
!9215 = !DILocation(line: 132, column: 4, scope: !9214)
!9216 = distinct !{!9216, !9212, !9217}
!9217 = !DILocation(line: 133, column: 2, scope: !9201)
!9218 = !DILocation(line: 135, column: 2, scope: !9201)
!9219 = distinct !DISubprogram(name: "strcmp", scope: !9099, file: !9099, line: 145, type: !9220, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9222)
!9220 = !DISubroutineType(types: !9221)
!9221 = !{!105, !269, !269}
!9222 = !{!9223, !9224}
!9223 = !DILocalVariable(name: "s1", arg: 1, scope: !9219, file: !9099, line: 145, type: !269)
!9224 = !DILocalVariable(name: "s2", arg: 2, scope: !9219, file: !9099, line: 145, type: !269)
!9225 = !DILocation(line: 0, scope: !9219)
!9226 = !DILocation(line: 147, column: 10, scope: !9219)
!9227 = !DILocation(line: 147, column: 17, scope: !9219)
!9228 = !DILocation(line: 147, column: 14, scope: !9219)
!9229 = !DILocation(line: 147, column: 22, scope: !9219)
!9230 = !DILocation(line: 148, column: 5, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9219, file: !9099, line: 147, column: 40)
!9232 = !DILocation(line: 149, column: 5, scope: !9231)
!9233 = distinct !{!9233, !9234, !9235}
!9234 = !DILocation(line: 147, column: 2, scope: !9219)
!9235 = !DILocation(line: 150, column: 2, scope: !9219)
!9236 = !DILocation(line: 152, column: 9, scope: !9219)
!9237 = !DILocation(line: 152, column: 15, scope: !9219)
!9238 = !DILocation(line: 152, column: 13, scope: !9219)
!9239 = !DILocation(line: 152, column: 2, scope: !9219)
!9240 = distinct !DISubprogram(name: "strncmp", scope: !9099, file: !9099, line: 162, type: !9241, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9243)
!9241 = !DISubroutineType(types: !9242)
!9242 = !{!105, !269, !269, !111}
!9243 = !{!9244, !9245, !9246}
!9244 = !DILocalVariable(name: "s1", arg: 1, scope: !9240, file: !9099, line: 162, type: !269)
!9245 = !DILocalVariable(name: "s2", arg: 2, scope: !9240, file: !9099, line: 162, type: !269)
!9246 = !DILocalVariable(name: "n", arg: 3, scope: !9240, file: !9099, line: 162, type: !111)
!9247 = !DILocation(line: 0, scope: !9240)
!9248 = !DILocation(line: 164, column: 17, scope: !9240)
!9249 = !DILocation(line: 164, column: 21, scope: !9240)
!9250 = !DILocation(line: 164, column: 28, scope: !9240)
!9251 = !DILocation(line: 164, column: 25, scope: !9240)
!9252 = !DILocation(line: 164, column: 33, scope: !9240)
!9253 = !DILocation(line: 165, column: 5, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9240, file: !9099, line: 164, column: 51)
!9255 = !DILocation(line: 166, column: 5, scope: !9254)
!9256 = !DILocation(line: 167, column: 4, scope: !9254)
!9257 = distinct !{!9257, !9258, !9259}
!9258 = !DILocation(line: 164, column: 2, scope: !9240)
!9259 = !DILocation(line: 168, column: 2, scope: !9240)
!9260 = !DILocation(line: 170, column: 25, scope: !9240)
!9261 = !DILocation(line: 170, column: 31, scope: !9240)
!9262 = !DILocation(line: 170, column: 29, scope: !9240)
!9263 = !DILocation(line: 170, column: 9, scope: !9240)
!9264 = !DILocation(line: 170, column: 2, scope: !9240)
!9265 = distinct !DISubprogram(name: "strtok_r", scope: !9099, file: !9099, line: 180, type: !9266, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9268)
!9266 = !DISubroutineType(types: !9267)
!9267 = !{!102, !102, !269, !431}
!9268 = !{!9269, !9270, !9271, !9272, !9273}
!9269 = !DILocalVariable(name: "str", arg: 1, scope: !9265, file: !9099, line: 180, type: !102)
!9270 = !DILocalVariable(name: "sep", arg: 2, scope: !9265, file: !9099, line: 180, type: !269)
!9271 = !DILocalVariable(name: "state", arg: 3, scope: !9265, file: !9099, line: 180, type: !431)
!9272 = !DILocalVariable(name: "start", scope: !9265, file: !9099, line: 182, type: !102)
!9273 = !DILocalVariable(name: "end", scope: !9265, file: !9099, line: 182, type: !102)
!9274 = !DILocation(line: 0, scope: !9265)
!9275 = !DILocation(line: 184, column: 10, scope: !9265)
!9276 = !DILocation(line: 184, column: 22, scope: !9265)
!9277 = !DILocation(line: 187, column: 9, scope: !9265)
!9278 = !DILocation(line: 187, column: 16, scope: !9265)
!9279 = !DILocation(line: 187, column: 19, scope: !9265)
!9280 = !DILocation(line: 187, column: 2, scope: !9265)
!9281 = !DILocation(line: 188, column: 8, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9265, file: !9099, line: 187, column: 40)
!9283 = distinct !{!9283, !9280, !9284}
!9284 = !DILocation(line: 189, column: 2, scope: !9265)
!9285 = !DILocation(line: 198, column: 9, scope: !9265)
!9286 = !DILocation(line: 198, column: 18, scope: !9265)
!9287 = !DILocation(line: 198, column: 17, scope: !9265)
!9288 = !DILocation(line: 198, column: 2, scope: !9265)
!9289 = !DILocation(line: 199, column: 6, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9265, file: !9099, line: 198, column: 37)
!9291 = !DILocation(line: 198, column: 14, scope: !9265)
!9292 = distinct !{!9292, !9288, !9293}
!9293 = !DILocation(line: 200, column: 2, scope: !9265)
!9294 = !DILocation(line: 203, column: 8, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9296, file: !9099, line: 202, column: 20)
!9296 = distinct !DILexicalBlock(scope: !9265, file: !9099, line: 202, column: 6)
!9297 = !DILocation(line: 204, column: 16, scope: !9295)
!9298 = !DILocation(line: 205, column: 2, scope: !9295)
!9299 = !DILocation(line: 210, column: 1, scope: !9265)
!9300 = distinct !DISubprogram(name: "strcat", scope: !9099, file: !9099, line: 212, type: !9100, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9301)
!9301 = !{!9302, !9303}
!9302 = !DILocalVariable(name: "dest", arg: 1, scope: !9300, file: !9099, line: 212, type: !9102)
!9303 = !DILocalVariable(name: "src", arg: 2, scope: !9300, file: !9099, line: 212, type: !9103)
!9304 = !DILocation(line: 0, scope: !9300)
!9305 = !DILocation(line: 214, column: 16, scope: !9300)
!9306 = !DILocation(line: 214, column: 14, scope: !9300)
!9307 = !DILocation(line: 214, column: 2, scope: !9300)
!9308 = !DILocation(line: 215, column: 2, scope: !9300)
!9309 = distinct !DISubprogram(name: "strncat", scope: !9099, file: !9099, line: 218, type: !9121, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9310)
!9310 = !{!9311, !9312, !9313, !9314, !9315}
!9311 = !DILocalVariable(name: "dest", arg: 1, scope: !9309, file: !9099, line: 218, type: !9102)
!9312 = !DILocalVariable(name: "src", arg: 2, scope: !9309, file: !9099, line: 218, type: !9103)
!9313 = !DILocalVariable(name: "n", arg: 3, scope: !9309, file: !9099, line: 219, type: !111)
!9314 = !DILocalVariable(name: "orig_dest", scope: !9309, file: !9099, line: 221, type: !102)
!9315 = !DILocalVariable(name: "len", scope: !9309, file: !9099, line: 222, type: !111)
!9316 = !DILocation(line: 0, scope: !9309)
!9317 = !DILocation(line: 222, column: 15, scope: !9309)
!9318 = !DILocation(line: 224, column: 7, scope: !9309)
!9319 = !DILocation(line: 225, column: 14, scope: !9309)
!9320 = !DILocation(line: 225, column: 19, scope: !9309)
!9321 = !DILocation(line: 225, column: 11, scope: !9309)
!9322 = !DILocation(line: 225, column: 23, scope: !9309)
!9323 = !DILocation(line: 225, column: 28, scope: !9309)
!9324 = !DILocation(line: 225, column: 2, scope: !9309)
!9325 = !DILocation(line: 226, column: 17, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9309, file: !9099, line: 225, column: 38)
!9327 = !DILocation(line: 226, column: 8, scope: !9326)
!9328 = !DILocation(line: 226, column: 11, scope: !9326)
!9329 = distinct !{!9329, !9324, !9330}
!9330 = !DILocation(line: 227, column: 2, scope: !9309)
!9331 = !DILocation(line: 228, column: 8, scope: !9309)
!9332 = !DILocation(line: 230, column: 2, scope: !9309)
!9333 = distinct !DISubprogram(name: "memcmp", scope: !9099, file: !9099, line: 239, type: !9334, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9336)
!9334 = !DISubroutineType(types: !9335)
!9335 = !{!105, !13, !13, !111}
!9336 = !{!9337, !9338, !9339, !9340, !9341}
!9337 = !DILocalVariable(name: "m1", arg: 1, scope: !9333, file: !9099, line: 239, type: !13)
!9338 = !DILocalVariable(name: "m2", arg: 2, scope: !9333, file: !9099, line: 239, type: !13)
!9339 = !DILocalVariable(name: "n", arg: 3, scope: !9333, file: !9099, line: 239, type: !111)
!9340 = !DILocalVariable(name: "c1", scope: !9333, file: !9099, line: 241, type: !269)
!9341 = !DILocalVariable(name: "c2", scope: !9333, file: !9099, line: 242, type: !269)
!9342 = !DILocation(line: 0, scope: !9333)
!9343 = !DILocation(line: 244, column: 7, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9333, file: !9099, line: 244, column: 6)
!9345 = !DILocation(line: 244, column: 6, scope: !9333)
!9346 = !DILocation(line: 248, column: 10, scope: !9333)
!9347 = !DILocation(line: 248, column: 14, scope: !9333)
!9348 = !DILocation(line: 248, column: 19, scope: !9333)
!9349 = !DILocation(line: 248, column: 2, scope: !9333)
!9350 = !DILocation(line: 248, column: 23, scope: !9333)
!9351 = !DILocation(line: 248, column: 30, scope: !9333)
!9352 = !DILocation(line: 248, column: 27, scope: !9333)
!9353 = !DILocation(line: 249, column: 5, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9333, file: !9099, line: 248, column: 36)
!9355 = !DILocation(line: 250, column: 5, scope: !9354)
!9356 = distinct !{!9356, !9349, !9357}
!9357 = !DILocation(line: 251, column: 2, scope: !9333)
!9358 = !DILocation(line: 253, column: 9, scope: !9333)
!9359 = !DILocation(line: 253, column: 15, scope: !9333)
!9360 = !DILocation(line: 253, column: 13, scope: !9333)
!9361 = !DILocation(line: 253, column: 2, scope: !9333)
!9362 = !DILocation(line: 254, column: 1, scope: !9333)
!9363 = distinct !DISubprogram(name: "memmove", scope: !9099, file: !9099, line: 263, type: !9364, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9366)
!9364 = !DISubroutineType(types: !9365)
!9365 = !{!104, !104, !13, !111}
!9366 = !{!9367, !9368, !9369, !9370, !9371}
!9367 = !DILocalVariable(name: "d", arg: 1, scope: !9363, file: !9099, line: 263, type: !104)
!9368 = !DILocalVariable(name: "s", arg: 2, scope: !9363, file: !9099, line: 263, type: !13)
!9369 = !DILocalVariable(name: "n", arg: 3, scope: !9363, file: !9099, line: 263, type: !111)
!9370 = !DILocalVariable(name: "dest", scope: !9363, file: !9099, line: 265, type: !102)
!9371 = !DILocalVariable(name: "src", scope: !9363, file: !9099, line: 266, type: !269)
!9372 = !DILocation(line: 0, scope: !9363)
!9373 = !DILocation(line: 268, column: 21, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9363, file: !9099, line: 268, column: 6)
!9375 = !DILocation(line: 268, column: 28, scope: !9374)
!9376 = !DILocation(line: 268, column: 6, scope: !9363)
!9377 = !DILocation(line: 280, column: 12, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9374, file: !9099, line: 278, column: 9)
!9379 = !DILocation(line: 280, column: 3, scope: !9378)
!9380 = !DILocation(line: 275, column: 5, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9382, file: !9099, line: 274, column: 17)
!9382 = distinct !DILexicalBlock(scope: !9374, file: !9099, line: 268, column: 33)
!9383 = !DILocation(line: 276, column: 14, scope: !9381)
!9384 = !DILocation(line: 276, column: 4, scope: !9381)
!9385 = !DILocation(line: 276, column: 12, scope: !9381)
!9386 = !DILocation(line: 274, column: 12, scope: !9382)
!9387 = !DILocation(line: 274, column: 3, scope: !9382)
!9388 = distinct !{!9388, !9387, !9389}
!9389 = !DILocation(line: 277, column: 3, scope: !9382)
!9390 = !DILocation(line: 281, column: 12, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9378, file: !9099, line: 280, column: 17)
!9392 = !DILocation(line: 281, column: 10, scope: !9391)
!9393 = !DILocation(line: 282, column: 8, scope: !9391)
!9394 = !DILocation(line: 283, column: 7, scope: !9391)
!9395 = !DILocation(line: 284, column: 5, scope: !9391)
!9396 = distinct !{!9396, !9379, !9397}
!9397 = !DILocation(line: 285, column: 3, scope: !9378)
!9398 = !DILocation(line: 288, column: 2, scope: !9363)
!9399 = distinct !DISubprogram(name: "memcpy", scope: !9099, file: !9099, line: 298, type: !9400, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9404)
!9400 = !DISubroutineType(types: !9401)
!9401 = !{!104, !9402, !9403, !111}
!9402 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!9403 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9404 = !{!9405, !9406, !9407, !9408, !9409}
!9405 = !DILocalVariable(name: "d", arg: 1, scope: !9399, file: !9099, line: 298, type: !9402)
!9406 = !DILocalVariable(name: "s", arg: 2, scope: !9399, file: !9099, line: 298, type: !9403)
!9407 = !DILocalVariable(name: "n", arg: 3, scope: !9399, file: !9099, line: 298, type: !111)
!9408 = !DILocalVariable(name: "d_byte", scope: !9399, file: !9099, line: 302, type: !1189)
!9409 = !DILocalVariable(name: "s_byte", scope: !9399, file: !9099, line: 303, type: !2969)
!9410 = !DILocation(line: 0, scope: !9399)
!9411 = !DILocation(line: 337, column: 11, scope: !9399)
!9412 = !DILocation(line: 337, column: 2, scope: !9399)
!9413 = !DILocation(line: 338, column: 25, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9399, file: !9099, line: 337, column: 16)
!9415 = !DILocation(line: 338, column: 17, scope: !9414)
!9416 = !DILocation(line: 338, column: 11, scope: !9414)
!9417 = !DILocation(line: 338, column: 15, scope: !9414)
!9418 = !DILocation(line: 339, column: 4, scope: !9414)
!9419 = distinct !{!9419, !9412, !9420}
!9420 = !DILocation(line: 340, column: 2, scope: !9399)
!9421 = !DILocation(line: 342, column: 2, scope: !9399)
!9422 = distinct !DISubprogram(name: "memset", scope: !9099, file: !9099, line: 352, type: !9423, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9425)
!9423 = !DISubroutineType(types: !9424)
!9424 = !{!104, !104, !105, !111}
!9425 = !{!9426, !9427, !9428, !9429, !9430}
!9426 = !DILocalVariable(name: "buf", arg: 1, scope: !9422, file: !9099, line: 352, type: !104)
!9427 = !DILocalVariable(name: "c", arg: 2, scope: !9422, file: !9099, line: 352, type: !105)
!9428 = !DILocalVariable(name: "n", arg: 3, scope: !9422, file: !9099, line: 352, type: !111)
!9429 = !DILocalVariable(name: "d_byte", scope: !9422, file: !9099, line: 356, type: !1189)
!9430 = !DILocalVariable(name: "c_byte", scope: !9422, file: !9099, line: 357, type: !170)
!9431 = !DILocation(line: 0, scope: !9422)
!9432 = !DILocation(line: 357, column: 25, scope: !9422)
!9433 = !DILocation(line: 389, column: 11, scope: !9422)
!9434 = !DILocation(line: 389, column: 2, scope: !9422)
!9435 = !DILocation(line: 390, column: 11, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9422, file: !9099, line: 389, column: 16)
!9437 = !DILocation(line: 390, column: 15, scope: !9436)
!9438 = !DILocation(line: 391, column: 4, scope: !9436)
!9439 = distinct !{!9439, !9434, !9440}
!9440 = !DILocation(line: 392, column: 2, scope: !9422)
!9441 = !DILocation(line: 394, column: 2, scope: !9422)
!9442 = distinct !DISubprogram(name: "memchr", scope: !9099, file: !9099, line: 404, type: !9443, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !9445)
!9443 = !DISubroutineType(types: !9444)
!9444 = !{!104, !13, !105, !111}
!9445 = !{!9446, !9447, !9448, !9449}
!9446 = !DILocalVariable(name: "s", arg: 1, scope: !9442, file: !9099, line: 404, type: !13)
!9447 = !DILocalVariable(name: "c", arg: 2, scope: !9442, file: !9099, line: 404, type: !105)
!9448 = !DILocalVariable(name: "n", arg: 3, scope: !9442, file: !9099, line: 404, type: !111)
!9449 = !DILocalVariable(name: "p", scope: !9450, file: !9099, line: 407, type: !2969)
!9450 = distinct !DILexicalBlock(scope: !9451, file: !9099, line: 406, column: 14)
!9451 = distinct !DILexicalBlock(scope: !9442, file: !9099, line: 406, column: 6)
!9452 = !DILocation(line: 0, scope: !9442)
!9453 = !DILocation(line: 406, column: 8, scope: !9451)
!9454 = !DILocation(line: 406, column: 6, scope: !9442)
!9455 = !DILocation(line: 409, column: 3, scope: !9450)
!9456 = !DILocation(line: 0, scope: !9450)
!9457 = !DILocation(line: 410, column: 8, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9459, file: !9099, line: 410, column: 8)
!9459 = distinct !DILexicalBlock(scope: !9450, file: !9099, line: 409, column: 6)
!9460 = !DILocation(line: 410, column: 13, scope: !9458)
!9461 = !DILocation(line: 410, column: 8, scope: !9459)
!9462 = distinct !{!9462, !9455, !9463}
!9463 = !DILocation(line: 414, column: 20, scope: !9450)
!9464 = !DILocation(line: 417, column: 2, scope: !9442)
!9465 = !DILocation(line: 418, column: 1, scope: !9442)
!9466 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !730, file: !730, line: 23, type: !4876, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !723, retainedNodes: !9467)
!9467 = !{!9468}
!9468 = !DILocalVariable(name: "hook", arg: 1, scope: !9466, file: !730, line: 23, type: !447)
!9469 = !DILocation(line: 0, scope: !9466)
!9470 = !DILocation(line: 25, column: 15, scope: !9466)
!9471 = !DILocation(line: 26, column: 1, scope: !9466)
!9472 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !730, file: !730, line: 14, type: !448, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !723, retainedNodes: !9473)
!9473 = !{!9474}
!9474 = !DILocalVariable(name: "c", arg: 1, scope: !9472, file: !730, line: 14, type: !105)
!9475 = !DILocation(line: 0, scope: !9472)
!9476 = !DILocation(line: 18, column: 2, scope: !9472)
!9477 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !730, file: !730, line: 28, type: !9478, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !723, retainedNodes: !9480)
!9478 = !DISubroutineType(types: !9479)
!9479 = !{!105, !105, !726}
!9480 = !{!9481, !9482}
!9481 = !DILocalVariable(name: "c", arg: 1, scope: !9477, file: !730, line: 28, type: !105)
!9482 = !DILocalVariable(name: "stream", arg: 2, scope: !9477, file: !730, line: 28, type: !726)
!9483 = !DILocation(line: 0, scope: !9477)
!9484 = !DILocation(line: 30, column: 27, scope: !9477)
!9485 = !DILocation(line: 30, column: 50, scope: !9477)
!9486 = !DILocation(line: 30, column: 9, scope: !9477)
!9487 = !DILocation(line: 30, column: 2, scope: !9477)
!9488 = distinct !DISubprogram(name: "fputc", scope: !730, file: !730, line: 41, type: !9478, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !723, retainedNodes: !9489)
!9489 = !{!9490, !9491}
!9490 = !DILocalVariable(name: "c", arg: 1, scope: !9488, file: !730, line: 41, type: !105)
!9491 = !DILocalVariable(name: "stream", arg: 2, scope: !9488, file: !730, line: 41, type: !726)
!9492 = !DILocation(line: 0, scope: !9488)
!9493 = !DILocation(line: 43, column: 9, scope: !9488)
!9494 = !DILocation(line: 43, column: 2, scope: !9488)
!9495 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9496, file: !9496, line: 72, type: !9478, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !723, retainedNodes: !9497)
!9496 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!9497 = !{!9498, !9499}
!9498 = !DILocalVariable(name: "c", arg: 1, scope: !9495, file: !9496, line: 72, type: !105)
!9499 = !DILocalVariable(name: "stream", arg: 2, scope: !9495, file: !9496, line: 72, type: !726)
!9500 = !DILocation(line: 0, scope: !9495)
!9501 = !DILocation(line: 81, column: 2, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9495, file: !9496, line: 81, column: 2)
!9503 = !{i64 2152286257}
!9504 = !DILocation(line: 82, column: 9, scope: !9495)
!9505 = !DILocation(line: 82, column: 2, scope: !9495)
!9506 = distinct !DISubprogram(name: "fputs", scope: !730, file: !730, line: 46, type: !9507, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !723, retainedNodes: !9510)
!9507 = !DISubroutineType(types: !9508)
!9508 = !{!105, !9103, !9509}
!9509 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !726)
!9510 = !{!9511, !9512, !9513, !9514}
!9511 = !DILocalVariable(name: "s", arg: 1, scope: !9506, file: !730, line: 46, type: !9103)
!9512 = !DILocalVariable(name: "stream", arg: 2, scope: !9506, file: !730, line: 46, type: !9509)
!9513 = !DILocalVariable(name: "len", scope: !9506, file: !730, line: 48, type: !105)
!9514 = !DILocalVariable(name: "ret", scope: !9506, file: !730, line: 49, type: !105)
!9515 = !DILocation(line: 0, scope: !9506)
!9516 = !DILocation(line: 48, column: 12, scope: !9506)
!9517 = !DILocation(line: 51, column: 8, scope: !9506)
!9518 = !DILocation(line: 53, column: 13, scope: !9506)
!9519 = !DILocation(line: 53, column: 9, scope: !9506)
!9520 = !DILocation(line: 53, column: 2, scope: !9506)
!9521 = distinct !DISubprogram(name: "fwrite", scope: !730, file: !730, line: 99, type: !9522, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !723, retainedNodes: !9524)
!9522 = !DISubroutineType(types: !9523)
!9523 = !{!111, !9403, !111, !111, !9509}
!9524 = !{!9525, !9526, !9527, !9528}
!9525 = !DILocalVariable(name: "ptr", arg: 1, scope: !9521, file: !730, line: 99, type: !9403)
!9526 = !DILocalVariable(name: "size", arg: 2, scope: !9521, file: !730, line: 99, type: !111)
!9527 = !DILocalVariable(name: "nitems", arg: 3, scope: !9521, file: !730, line: 99, type: !111)
!9528 = !DILocalVariable(name: "stream", arg: 4, scope: !9521, file: !730, line: 100, type: !9509)
!9529 = !DILocation(line: 0, scope: !9521)
!9530 = !DILocation(line: 102, column: 9, scope: !9521)
!9531 = !DILocation(line: 102, column: 2, scope: !9521)
!9532 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9496, file: !9496, line: 96, type: !9522, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !723, retainedNodes: !9533)
!9533 = !{!9534, !9535, !9536, !9537}
!9534 = !DILocalVariable(name: "ptr", arg: 1, scope: !9532, file: !9496, line: 96, type: !9403)
!9535 = !DILocalVariable(name: "size", arg: 2, scope: !9532, file: !9496, line: 96, type: !111)
!9536 = !DILocalVariable(name: "nitems", arg: 3, scope: !9532, file: !9496, line: 96, type: !111)
!9537 = !DILocalVariable(name: "stream", arg: 4, scope: !9532, file: !9496, line: 96, type: !9509)
!9538 = !DILocation(line: 0, scope: !9532)
!9539 = !DILocation(line: 107, column: 2, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9532, file: !9496, line: 107, column: 2)
!9541 = !{i64 2152286361}
!9542 = !DILocation(line: 108, column: 9, scope: !9532)
!9543 = !DILocation(line: 108, column: 2, scope: !9532)
!9544 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !730, file: !730, line: 56, type: !9522, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !723, retainedNodes: !9545)
!9545 = !{!9546, !9547, !9548, !9549, !9550, !9551, !9552, !9553}
!9546 = !DILocalVariable(name: "ptr", arg: 1, scope: !9544, file: !730, line: 56, type: !9403)
!9547 = !DILocalVariable(name: "size", arg: 2, scope: !9544, file: !730, line: 56, type: !111)
!9548 = !DILocalVariable(name: "nitems", arg: 3, scope: !9544, file: !730, line: 57, type: !111)
!9549 = !DILocalVariable(name: "stream", arg: 4, scope: !9544, file: !730, line: 57, type: !9509)
!9550 = !DILocalVariable(name: "i", scope: !9544, file: !730, line: 59, type: !111)
!9551 = !DILocalVariable(name: "j", scope: !9544, file: !730, line: 60, type: !111)
!9552 = !DILocalVariable(name: "p", scope: !9544, file: !730, line: 61, type: !2969)
!9553 = !DILabel(scope: !9544, name: "done", file: !730, line: 82)
!9554 = !DILocation(line: 0, scope: !9544)
!9555 = !DILocation(line: 63, column: 14, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9544, file: !730, line: 63, column: 6)
!9557 = !DILocation(line: 63, column: 24, scope: !9556)
!9558 = !DILocation(line: 72, column: 3, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9544, file: !730, line: 70, column: 5)
!9560 = !DILocation(line: 0, scope: !9559)
!9561 = !DILocation(line: 73, column: 8, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9563, file: !730, line: 73, column: 8)
!9563 = distinct !DILexicalBlock(scope: !9559, file: !730, line: 72, column: 6)
!9564 = !DILocation(line: 73, column: 29, scope: !9562)
!9565 = !DILocation(line: 73, column: 27, scope: !9562)
!9566 = !DILocation(line: 73, column: 21, scope: !9562)
!9567 = !DILocation(line: 73, column: 33, scope: !9562)
!9568 = !DILocation(line: 73, column: 8, scope: !9563)
!9569 = !DILocation(line: 76, column: 5, scope: !9563)
!9570 = !DILocation(line: 77, column: 14, scope: !9559)
!9571 = !DILocation(line: 77, column: 3, scope: !9563)
!9572 = distinct !{!9572, !9558, !9573}
!9573 = !DILocation(line: 77, column: 17, scope: !9559)
!9574 = !DILocation(line: 79, column: 4, scope: !9559)
!9575 = !DILocation(line: 80, column: 13, scope: !9544)
!9576 = !DILocation(line: 80, column: 2, scope: !9559)
!9577 = distinct !{!9577, !9578, !9579}
!9578 = !DILocation(line: 70, column: 2, scope: !9544)
!9579 = !DILocation(line: 80, column: 16, scope: !9544)
!9580 = !DILocation(line: 82, column: 1, scope: !9544)
!9581 = !DILocation(line: 83, column: 17, scope: !9544)
!9582 = !DILocation(line: 83, column: 2, scope: !9544)
!9583 = !DILocation(line: 84, column: 1, scope: !9544)
!9584 = distinct !DISubprogram(name: "puts", scope: !730, file: !730, line: 106, type: !9585, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !723, retainedNodes: !9587)
!9585 = !DISubroutineType(types: !9586)
!9586 = !{!105, !269}
!9587 = !{!9588}
!9588 = !DILocalVariable(name: "s", arg: 1, scope: !9584, file: !730, line: 106, type: !269)
!9589 = !DILocation(line: 0, scope: !9584)
!9590 = !DILocation(line: 108, column: 6, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9584, file: !730, line: 108, column: 6)
!9592 = !DILocation(line: 108, column: 23, scope: !9591)
!9593 = !DILocation(line: 108, column: 6, scope: !9584)
!9594 = !DILocation(line: 112, column: 9, scope: !9584)
!9595 = !DILocation(line: 112, column: 29, scope: !9584)
!9596 = !DILocation(line: 112, column: 2, scope: !9584)
!9597 = !DILocation(line: 113, column: 1, scope: !9584)
!9598 = distinct !DISubprogram(name: "rf_init", scope: !855, file: !855, line: 10, type: !861, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !758, retainedNodes: !9599)
!9599 = !{!9600, !9601, !9609, !9610}
!9600 = !DILocalVariable(name: "dev", arg: 1, scope: !9598, file: !855, line: 10, type: !781)
!9601 = !DILocalVariable(name: "rf1", scope: !9598, file: !855, line: 12, type: !9602)
!9602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9603)
!9603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !762, line: 271, size: 64, elements: !9604)
!9604 = !{!9605, !9606, !9607}
!9605 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !9603, file: !762, line: 273, baseType: !781, size: 32)
!9606 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !9603, file: !762, line: 275, baseType: !796, size: 8, offset: 32)
!9607 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !9603, file: !762, line: 277, baseType: !9608, size: 16, offset: 48)
!9608 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !762, line: 249, baseType: !183)
!9609 = !DILocalVariable(name: "rf2", scope: !9598, file: !855, line: 14, type: !9602)
!9610 = !DILocalVariable(name: "rf3", scope: !9598, file: !855, line: 16, type: !9602)
!9611 = !DILocation(line: 0, scope: !9598)
!9612 = !DILocation(line: 12, column: 2, scope: !9598)
!9613 = !DILocation(line: 12, column: 28, scope: !9598)
!9614 = !DILocation(line: 14, column: 2, scope: !9598)
!9615 = !DILocation(line: 14, column: 28, scope: !9598)
!9616 = !DILocation(line: 16, column: 2, scope: !9598)
!9617 = !DILocation(line: 16, column: 28, scope: !9598)
!9618 = !DILocation(line: 22, column: 27, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9598, file: !855, line: 22, column: 6)
!9620 = !DILocation(line: 22, column: 7, scope: !9619)
!9621 = !DILocation(line: 22, column: 33, scope: !9619)
!9622 = !DILocation(line: 23, column: 7, scope: !9619)
!9623 = !DILocation(line: 23, column: 33, scope: !9619)
!9624 = !DILocation(line: 24, column: 7, scope: !9619)
!9625 = !DILocation(line: 22, column: 6, scope: !9598)
!9626 = !DILocation(line: 28, column: 8, scope: !9598)
!9627 = !DILocation(line: 29, column: 8, scope: !9598)
!9628 = !DILocation(line: 30, column: 8, scope: !9598)
!9629 = !DILocation(line: 32, column: 2, scope: !9598)
!9630 = !DILocation(line: 33, column: 1, scope: !9598)
!9631 = distinct !DISubprogram(name: "device_is_ready", scope: !9632, file: !9632, line: 47, type: !9633, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !758, retainedNodes: !9635)
!9632 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!9633 = !DISubroutineType(types: !9634)
!9634 = !{!505, !781}
!9635 = !{!9636}
!9636 = !DILocalVariable(name: "dev", arg: 1, scope: !9631, file: !9632, line: 47, type: !781)
!9637 = !DILocation(line: 0, scope: !9631)
!9638 = !DILocation(line: 55, column: 2, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9631, file: !9632, line: 55, column: 2)
!9640 = !{i64 2148930178}
!9641 = !DILocation(line: 56, column: 9, scope: !9631)
!9642 = !DILocation(line: 56, column: 2, scope: !9631)
!9643 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !762, file: !762, line: 731, type: !9644, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !758, retainedNodes: !9647)
!9644 = !DISubroutineType(types: !9645)
!9645 = !{!105, !9646, !797}
!9646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9602, size: 32)
!9647 = !{!9648, !9649}
!9648 = !DILocalVariable(name: "spec", arg: 1, scope: !9643, file: !762, line: 731, type: !9646)
!9649 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !9643, file: !762, line: 732, type: !797)
!9650 = !DILocation(line: 0, scope: !9643)
!9651 = !DILocation(line: 734, column: 34, scope: !9643)
!9652 = !DILocation(line: 735, column: 13, scope: !9643)
!9653 = !DILocation(line: 736, column: 13, scope: !9643)
!9654 = !DILocation(line: 736, column: 7, scope: !9643)
!9655 = !DILocation(line: 736, column: 22, scope: !9643)
!9656 = !DILocation(line: 734, column: 9, scope: !9643)
!9657 = !DILocation(line: 734, column: 2, scope: !9643)
!9658 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !9659, file: !9659, line: 49, type: !779, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !758, retainedNodes: !9660)
!9659 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!9660 = !{!9661, !9662, !9663}
!9661 = !DILocalVariable(name: "port", arg: 1, scope: !9658, file: !9659, line: 49, type: !781)
!9662 = !DILocalVariable(name: "pin", arg: 2, scope: !9658, file: !9659, line: 49, type: !796)
!9663 = !DILocalVariable(name: "flags", arg: 3, scope: !9658, file: !9659, line: 49, type: !797)
!9664 = !DILocation(line: 0, scope: !9658)
!9665 = !DILocation(line: 59, column: 2, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9658, file: !9659, line: 59, column: 2)
!9667 = !{i64 2148980272}
!9668 = !DILocation(line: 60, column: 9, scope: !9658)
!9669 = !DILocation(line: 60, column: 2, scope: !9658)
!9670 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !762, file: !762, line: 667, type: !779, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !758, retainedNodes: !9671)
!9671 = !{!9672, !9673, !9674, !9675, !9676, !9678}
!9672 = !DILocalVariable(name: "port", arg: 1, scope: !9670, file: !762, line: 667, type: !781)
!9673 = !DILocalVariable(name: "pin", arg: 2, scope: !9670, file: !762, line: 668, type: !796)
!9674 = !DILocalVariable(name: "flags", arg: 3, scope: !9670, file: !762, line: 669, type: !797)
!9675 = !DILocalVariable(name: "api", scope: !9670, file: !762, line: 671, type: !773)
!9676 = !DILocalVariable(name: "cfg", scope: !9670, file: !762, line: 673, type: !9677)
!9677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!9678 = !DILocalVariable(name: "data", scope: !9670, file: !762, line: 675, type: !853)
!9679 = !DILocation(line: 0, scope: !9670)
!9680 = !DILocation(line: 672, column: 41, scope: !9670)
!9681 = !DILocation(line: 674, column: 44, scope: !9670)
!9682 = !DILocation(line: 676, column: 36, scope: !9670)
!9683 = !DILocation(line: 678, column: 2, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9685, file: !762, line: 678, column: 2)
!9685 = distinct !DILexicalBlock(scope: !9670, file: !762, line: 678, column: 2)
!9686 = !DILocation(line: 678, column: 2, scope: !9685)
!9687 = !DILocation(line: 678, column: 2, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9684, file: !762, line: 678, column: 2)
!9689 = !DILocation(line: 681, column: 2, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9691, file: !762, line: 681, column: 2)
!9691 = distinct !DILexicalBlock(scope: !9670, file: !762, line: 681, column: 2)
!9692 = !DILocation(line: 681, column: 2, scope: !9691)
!9693 = !DILocation(line: 681, column: 2, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9690, file: !762, line: 681, column: 2)
!9695 = !DILocation(line: 685, column: 2, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9697, file: !762, line: 685, column: 2)
!9697 = distinct !DILexicalBlock(scope: !9670, file: !762, line: 685, column: 2)
!9698 = !DILocation(line: 685, column: 2, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9696, file: !762, line: 685, column: 2)
!9700 = !DILocation(line: 689, column: 2, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9702, file: !762, line: 689, column: 2)
!9702 = distinct !DILexicalBlock(scope: !9670, file: !762, line: 689, column: 2)
!9703 = !DILocation(line: 689, column: 2, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9701, file: !762, line: 689, column: 2)
!9705 = !DILocation(line: 692, column: 2, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9707, file: !762, line: 692, column: 2)
!9707 = distinct !DILexicalBlock(scope: !9670, file: !762, line: 692, column: 2)
!9708 = !DILocation(line: 692, column: 2, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9706, file: !762, line: 692, column: 2)
!9710 = !DILocation(line: 696, column: 2, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9712, file: !762, line: 696, column: 2)
!9712 = distinct !DILexicalBlock(scope: !9670, file: !762, line: 696, column: 2)
!9713 = !DILocation(line: 696, column: 2, scope: !9712)
!9714 = !DILocation(line: 696, column: 2, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9711, file: !762, line: 696, column: 2)
!9716 = !DILocation(line: 701, column: 6, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9670, file: !762, line: 700, column: 6)
!9718 = !DILocation(line: 708, column: 2, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9720, file: !762, line: 708, column: 2)
!9720 = distinct !DILexicalBlock(scope: !9670, file: !762, line: 708, column: 2)
!9721 = !DILocation(line: 708, column: 2, scope: !9720)
!9722 = !DILocation(line: 708, column: 2, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9719, file: !762, line: 708, column: 2)
!9724 = !DILocation(line: 711, column: 13, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9670, file: !762, line: 711, column: 6)
!9726 = !DILocation(line: 711, column: 32, scope: !9725)
!9727 = !DILocation(line: 711, column: 6, scope: !9670)
!9728 = !DILocation(line: 712, column: 9, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9725, file: !762, line: 711, column: 38)
!9730 = !DILocation(line: 712, column: 16, scope: !9729)
!9731 = !DILocation(line: 713, column: 2, scope: !9729)
!9732 = !DILocation(line: 714, column: 19, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9725, file: !762, line: 713, column: 9)
!9734 = !DILocation(line: 714, column: 9, scope: !9733)
!9735 = !DILocation(line: 714, column: 16, scope: !9733)
!9736 = !DILocation(line: 706, column: 8, scope: !9670)
!9737 = !DILocation(line: 717, column: 14, scope: !9670)
!9738 = !DILocation(line: 717, column: 9, scope: !9670)
!9739 = !DILocation(line: 717, column: 2, scope: !9670)
!9740 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !494, file: !494, line: 730, type: !9633, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !758, retainedNodes: !9741)
!9741 = !{!9742}
!9742 = !DILocalVariable(name: "dev", arg: 1, scope: !9740, file: !494, line: 730, type: !781)
!9743 = !DILocation(line: 0, scope: !9740)
!9744 = !DILocation(line: 732, column: 9, scope: !9740)
!9745 = !DILocation(line: 732, column: 2, scope: !9740)
!9746 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !938, file: !938, line: 368, type: !987, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9747)
!9747 = !{!9748}
!9748 = !DILocalVariable(name: "dev", arg: 1, scope: !9746, file: !938, line: 368, type: !965)
!9749 = !DILocation(line: 0, scope: !9746)
!9750 = !DILocation(line: 370, column: 2, scope: !9746)
!9751 = !DILocation(line: 371, column: 1, scope: !9746)
!9752 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !938, file: !938, line: 243, type: !9753, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9755)
!9753 = !DISubroutineType(types: !9754)
!9754 = !{null, !105, !105, !965}
!9755 = !{!9756, !9757, !9758, !9759, !9761}
!9756 = !DILocalVariable(name: "min", arg: 1, scope: !9752, file: !938, line: 243, type: !105)
!9757 = !DILocalVariable(name: "max", arg: 2, scope: !9752, file: !938, line: 243, type: !105)
!9758 = !DILocalVariable(name: "dev", arg: 3, scope: !9752, file: !938, line: 243, type: !965)
!9759 = !DILocalVariable(name: "data", scope: !9752, file: !938, line: 245, type: !9760)
!9760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!9761 = !DILocalVariable(name: "line", scope: !9752, file: !938, line: 246, type: !105)
!9762 = !DILocation(line: 0, scope: !9752)
!9763 = !DILocation(line: 245, column: 38, scope: !9752)
!9764 = !DILocation(line: 249, column: 24, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9766, file: !938, line: 249, column: 2)
!9766 = distinct !DILexicalBlock(scope: !9752, file: !938, line: 249, column: 2)
!9767 = !DILocation(line: 249, column: 2, scope: !9766)
!9768 = !DILocation(line: 251, column: 7, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9770, file: !938, line: 251, column: 7)
!9770 = distinct !DILexicalBlock(scope: !9765, file: !938, line: 249, column: 39)
!9771 = !DILocation(line: 251, column: 7, scope: !9770)
!9772 = !DILocation(line: 253, column: 4, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9769, file: !938, line: 251, column: 36)
!9774 = !DILocation(line: 256, column: 24, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9773, file: !938, line: 256, column: 8)
!9776 = !DILocation(line: 256, column: 9, scope: !9775)
!9777 = !DILocation(line: 256, column: 8, scope: !9773)
!9778 = !DILocation(line: 260, column: 43, scope: !9773)
!9779 = !DILocation(line: 260, column: 4, scope: !9773)
!9780 = !DILocation(line: 261, column: 3, scope: !9773)
!9781 = !DILocation(line: 249, column: 35, scope: !9765)
!9782 = distinct !{!9782, !9767, !9783}
!9783 = !DILocation(line: 262, column: 2, scope: !9766)
!9784 = !DILocation(line: 263, column: 1, scope: !9752)
!9785 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !938, file: !938, line: 158, type: !448, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9786)
!9786 = !{!9787}
!9787 = !DILocalVariable(name: "line", arg: 1, scope: !9785, file: !938, line: 158, type: !105)
!9788 = !DILocation(line: 0, scope: !9785)
!9789 = !DILocation(line: 170, column: 38, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9791, file: !938, line: 160, column: 17)
!9791 = distinct !DILexicalBlock(scope: !9785, file: !938, line: 160, column: 6)
!9792 = !DILocation(line: 170, column: 10, scope: !9790)
!9793 = !DILocation(line: 176, column: 1, scope: !9785)
!9794 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !938, file: !938, line: 183, type: !9795, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9797)
!9795 = !DISubroutineType(types: !9796)
!9796 = !{null, !105}
!9797 = !{!9798}
!9798 = !DILocalVariable(name: "line", arg: 1, scope: !9794, file: !938, line: 183, type: !105)
!9799 = !DILocation(line: 0, scope: !9794)
!9800 = !DILocation(line: 195, column: 28, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9802, file: !938, line: 185, column: 17)
!9802 = distinct !DILexicalBlock(scope: !9794, file: !938, line: 185, column: 6)
!9803 = !DILocation(line: 195, column: 3, scope: !9801)
!9804 = !DILocation(line: 200, column: 1, scope: !9794)
!9805 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9806, file: !9806, line: 971, type: !7443, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9807)
!9806 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9807 = !{!9808}
!9808 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9805, file: !9806, line: 971, type: !113)
!9809 = !DILocation(line: 0, scope: !9805)
!9810 = !DILocation(line: 973, column: 3, scope: !9805)
!9811 = !DILocation(line: 974, column: 1, scope: !9805)
!9812 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9806, file: !9806, line: 891, type: !8994, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9813)
!9813 = !{!9814}
!9814 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9812, file: !9806, line: 891, type: !113)
!9815 = !DILocation(line: 0, scope: !9812)
!9816 = !DILocation(line: 893, column: 11, scope: !9812)
!9817 = !DILocation(line: 893, column: 40, scope: !9812)
!9818 = !DILocation(line: 893, column: 3, scope: !9812)
!9819 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !938, file: !938, line: 304, type: !987, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9820)
!9820 = !{!9821}
!9821 = !DILocalVariable(name: "dev", arg: 1, scope: !9819, file: !938, line: 304, type: !965)
!9822 = !DILocation(line: 0, scope: !9819)
!9823 = !DILocation(line: 306, column: 2, scope: !9819)
!9824 = !DILocation(line: 307, column: 1, scope: !9819)
!9825 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !938, file: !938, line: 299, type: !987, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9826)
!9826 = !{!9827}
!9827 = !DILocalVariable(name: "dev", arg: 1, scope: !9825, file: !938, line: 299, type: !965)
!9828 = !DILocation(line: 0, scope: !9825)
!9829 = !DILocation(line: 301, column: 2, scope: !9825)
!9830 = !DILocation(line: 302, column: 1, scope: !9825)
!9831 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !938, file: !938, line: 294, type: !987, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9832)
!9832 = !{!9833}
!9833 = !DILocalVariable(name: "dev", arg: 1, scope: !9831, file: !938, line: 294, type: !965)
!9834 = !DILocation(line: 0, scope: !9831)
!9835 = !DILocation(line: 296, column: 2, scope: !9831)
!9836 = !DILocation(line: 297, column: 1, scope: !9831)
!9837 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !938, file: !938, line: 289, type: !987, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9838)
!9838 = !{!9839}
!9839 = !DILocalVariable(name: "dev", arg: 1, scope: !9837, file: !938, line: 289, type: !965)
!9840 = !DILocation(line: 0, scope: !9837)
!9841 = !DILocation(line: 291, column: 2, scope: !9837)
!9842 = !DILocation(line: 292, column: 1, scope: !9837)
!9843 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !938, file: !938, line: 373, type: !987, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9844)
!9844 = !{!9845}
!9845 = !DILocalVariable(name: "dev", arg: 1, scope: !9843, file: !938, line: 373, type: !965)
!9846 = !DILocation(line: 0, scope: !9843)
!9847 = !DILocation(line: 375, column: 2, scope: !9843)
!9848 = !DILocation(line: 376, column: 1, scope: !9843)
!9849 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !938, file: !938, line: 284, type: !987, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9850)
!9850 = !{!9851}
!9851 = !DILocalVariable(name: "dev", arg: 1, scope: !9849, file: !938, line: 284, type: !965)
!9852 = !DILocation(line: 0, scope: !9849)
!9853 = !DILocation(line: 286, column: 2, scope: !9849)
!9854 = !DILocation(line: 287, column: 1, scope: !9849)
!9855 = distinct !DISubprogram(name: "stm32_exti_init", scope: !938, file: !938, line: 416, type: !963, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9856)
!9856 = !{!9857}
!9857 = !DILocalVariable(name: "dev", arg: 1, scope: !9855, file: !938, line: 416, type: !965)
!9858 = !DILocation(line: 0, scope: !9855)
!9859 = !DILocation(line: 418, column: 2, scope: !9855)
!9860 = !DILocation(line: 420, column: 2, scope: !9855)
!9861 = !DILocation(line: 0, scope: !986)
!9862 = !DILocation(line: 493, column: 2, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !986, file: !938, line: 493, column: 2)
!9864 = !DILocation(line: 497, column: 2, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !986, file: !938, line: 497, column: 2)
!9866 = !DILocation(line: 507, column: 2, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !986, file: !938, line: 507, column: 2)
!9868 = !DILocation(line: 512, column: 2, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !986, file: !938, line: 512, column: 2)
!9870 = !DILocation(line: 516, column: 2, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !986, file: !938, line: 516, column: 2)
!9872 = !DILocation(line: 523, column: 2, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !986, file: !938, line: 523, column: 2)
!9874 = !DILocation(line: 527, column: 2, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !986, file: !938, line: 527, column: 2)
!9876 = !DILocation(line: 607, column: 1, scope: !986)
!9877 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !938, file: !938, line: 112, type: !9795, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9878)
!9878 = !{!9879, !9880}
!9879 = !DILocalVariable(name: "line", arg: 1, scope: !9877, file: !938, line: 112, type: !105)
!9880 = !DILocalVariable(name: "irqnum", scope: !9877, file: !938, line: 114, type: !105)
!9881 = !DILocation(line: 0, scope: !9877)
!9882 = !DILocation(line: 121, column: 11, scope: !9877)
!9883 = !DILocation(line: 130, column: 26, scope: !9877)
!9884 = !DILocation(line: 130, column: 2, scope: !9877)
!9885 = !DILocation(line: 134, column: 2, scope: !9877)
!9886 = !DILocation(line: 135, column: 1, scope: !9877)
!9887 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9806, file: !9806, line: 274, type: !7443, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9888)
!9888 = !{!9889}
!9889 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9887, file: !9806, line: 274, type: !113)
!9890 = !DILocation(line: 0, scope: !9887)
!9891 = !DILocation(line: 276, column: 3, scope: !9887)
!9892 = !DILocation(line: 277, column: 1, scope: !9887)
!9893 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !938, file: !938, line: 137, type: !9795, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9894)
!9894 = !{!9895}
!9895 = !DILocalVariable(name: "line", arg: 1, scope: !9893, file: !938, line: 137, type: !105)
!9896 = !DILocation(line: 0, scope: !9893)
!9897 = !DILocation(line: 141, column: 11, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9893, file: !938, line: 141, column: 6)
!9899 = !DILocation(line: 141, column: 6, scope: !9893)
!9900 = !DILocation(line: 145, column: 28, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9898, file: !938, line: 141, column: 17)
!9902 = !DILocation(line: 145, column: 3, scope: !9901)
!9903 = !DILocation(line: 147, column: 2, scope: !9901)
!9904 = !DILocation(line: 151, column: 1, scope: !9893)
!9905 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9806, file: !9806, line: 322, type: !7443, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9906)
!9906 = !{!9907}
!9907 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9905, file: !9806, line: 322, type: !113)
!9908 = !DILocation(line: 0, scope: !9905)
!9909 = !DILocation(line: 324, column: 3, scope: !9905)
!9910 = !DILocation(line: 325, column: 1, scope: !9905)
!9911 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !938, file: !938, line: 202, type: !9912, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9914)
!9912 = !DISubroutineType(types: !9913)
!9913 = !{null, !105, !105}
!9914 = !{!9915, !9916}
!9915 = !DILocalVariable(name: "line", arg: 1, scope: !9911, file: !938, line: 202, type: !105)
!9916 = !DILocalVariable(name: "trigger", arg: 2, scope: !9911, file: !938, line: 202, type: !105)
!9917 = !DILocation(line: 0, scope: !9911)
!9918 = !DILocation(line: 211, column: 2, scope: !9911)
!9919 = !DILocation(line: 213, column: 36, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9911, file: !938, line: 211, column: 19)
!9921 = !DILocation(line: 213, column: 3, scope: !9920)
!9922 = !DILocation(line: 214, column: 3, scope: !9920)
!9923 = !DILocation(line: 215, column: 3, scope: !9920)
!9924 = !DILocation(line: 217, column: 35, scope: !9920)
!9925 = !DILocation(line: 217, column: 3, scope: !9920)
!9926 = !DILocation(line: 218, column: 3, scope: !9920)
!9927 = !DILocation(line: 219, column: 3, scope: !9920)
!9928 = !DILocation(line: 221, column: 36, scope: !9920)
!9929 = !DILocation(line: 221, column: 3, scope: !9920)
!9930 = !DILocation(line: 222, column: 3, scope: !9920)
!9931 = !DILocation(line: 223, column: 3, scope: !9920)
!9932 = !DILocation(line: 225, column: 35, scope: !9920)
!9933 = !DILocation(line: 225, column: 3, scope: !9920)
!9934 = !DILocation(line: 226, column: 3, scope: !9920)
!9935 = !DILocation(line: 227, column: 3, scope: !9920)
!9936 = !DILocation(line: 232, column: 1, scope: !9911)
!9937 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9806, file: !9806, line: 618, type: !7443, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9938)
!9938 = !{!9939}
!9939 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9937, file: !9806, line: 618, type: !113)
!9940 = !DILocation(line: 0, scope: !9937)
!9941 = !DILocation(line: 620, column: 3, scope: !9937)
!9942 = !DILocation(line: 622, column: 1, scope: !9937)
!9943 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9806, file: !9806, line: 754, type: !7443, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9944)
!9944 = !{!9945}
!9945 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9943, file: !9806, line: 754, type: !113)
!9946 = !DILocation(line: 0, scope: !9943)
!9947 = !DILocation(line: 756, column: 3, scope: !9943)
!9948 = !DILocation(line: 757, column: 1, scope: !9943)
!9949 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9806, file: !9806, line: 572, type: !7443, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9950)
!9950 = !{!9951}
!9951 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9949, file: !9806, line: 572, type: !113)
!9952 = !DILocation(line: 0, scope: !9949)
!9953 = !DILocation(line: 574, column: 3, scope: !9949)
!9954 = !DILocation(line: 576, column: 1, scope: !9949)
!9955 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9806, file: !9806, line: 710, type: !7443, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9956)
!9956 = !{!9957}
!9957 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9955, file: !9806, line: 710, type: !113)
!9958 = !DILocation(line: 0, scope: !9955)
!9959 = !DILocation(line: 712, column: 3, scope: !9955)
!9960 = !DILocation(line: 713, column: 1, scope: !9955)
!9961 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !938, file: !938, line: 433, type: !9962, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9964)
!9962 = !DISubroutineType(types: !9963)
!9963 = !{!105, !105, !976, !104}
!9964 = !{!9965, !9966, !9967, !9968, !9970}
!9965 = !DILocalVariable(name: "line", arg: 1, scope: !9961, file: !938, line: 433, type: !105)
!9966 = !DILocalVariable(name: "cb", arg: 2, scope: !9961, file: !938, line: 433, type: !976)
!9967 = !DILocalVariable(name: "arg", arg: 3, scope: !9961, file: !938, line: 433, type: !104)
!9968 = !DILocalVariable(name: "dev", scope: !9961, file: !938, line: 435, type: !9969)
!9969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!9970 = !DILocalVariable(name: "data", scope: !9961, file: !938, line: 436, type: !9760)
!9971 = !DILocation(line: 0, scope: !9961)
!9972 = !DILocation(line: 438, column: 21, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9961, file: !938, line: 438, column: 6)
!9974 = !DILocation(line: 438, column: 6, scope: !9973)
!9975 = !DILocation(line: 438, column: 6, scope: !9961)
!9976 = !DILocation(line: 442, column: 20, scope: !9961)
!9977 = !DILocation(line: 443, column: 17, scope: !9961)
!9978 = !DILocation(line: 443, column: 22, scope: !9961)
!9979 = !DILocation(line: 445, column: 2, scope: !9961)
!9980 = !DILocation(line: 446, column: 1, scope: !9961)
!9981 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !938, file: !938, line: 448, type: !9795, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !9982)
!9982 = !{!9983, !9984, !9985}
!9983 = !DILocalVariable(name: "line", arg: 1, scope: !9981, file: !938, line: 448, type: !105)
!9984 = !DILocalVariable(name: "dev", scope: !9981, file: !938, line: 450, type: !9969)
!9985 = !DILocalVariable(name: "data", scope: !9981, file: !938, line: 451, type: !9760)
!9986 = !DILocation(line: 0, scope: !9981)
!9987 = !DILocation(line: 453, column: 17, scope: !9981)
!9988 = !DILocation(line: 453, column: 20, scope: !9981)
!9989 = !DILocation(line: 454, column: 17, scope: !9981)
!9990 = !DILocation(line: 454, column: 22, scope: !9981)
!9991 = !DILocation(line: 455, column: 1, scope: !9981)
!9992 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1088, file: !1088, line: 183, type: !1126, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9993)
!9993 = !{!9994, !9995, !9996, !9997, !9998}
!9994 = !DILocalVariable(name: "dev", arg: 1, scope: !9992, file: !1088, line: 183, type: !1117)
!9995 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9992, file: !1088, line: 184, type: !1128)
!9996 = !DILocalVariable(name: "pclken", scope: !9992, file: !1088, line: 186, type: !1078)
!9997 = !DILocalVariable(name: "reg", scope: !9992, file: !1088, line: 187, type: !3031)
!9998 = !DILocalVariable(name: "reg_val", scope: !9992, file: !1088, line: 188, type: !113)
!9999 = !DILocation(line: 0, scope: !9992)
!10000 = !DILocation(line: 192, column: 6, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9992, file: !1088, line: 192, column: 6)
!10002 = !DILocation(line: 192, column: 6, scope: !9992)
!10003 = !DILocation(line: 197, column: 52, scope: !9992)
!10004 = !DILocation(line: 197, column: 8, scope: !9992)
!10005 = !DILocation(line: 198, column: 12, scope: !9992)
!10006 = !DILocation(line: 199, column: 21, scope: !9992)
!10007 = !DILocation(line: 199, column: 10, scope: !9992)
!10008 = !DILocation(line: 200, column: 7, scope: !9992)
!10009 = !DILocation(line: 202, column: 2, scope: !9992)
!10010 = !DILocation(line: 203, column: 1, scope: !9992)
!10011 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1088, file: !1088, line: 205, type: !1126, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10012)
!10012 = !{!10013, !10014, !10015, !10016, !10017}
!10013 = !DILocalVariable(name: "dev", arg: 1, scope: !10011, file: !1088, line: 205, type: !1117)
!10014 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10011, file: !1088, line: 206, type: !1128)
!10015 = !DILocalVariable(name: "pclken", scope: !10011, file: !1088, line: 208, type: !1078)
!10016 = !DILocalVariable(name: "reg", scope: !10011, file: !1088, line: 209, type: !3031)
!10017 = !DILocalVariable(name: "reg_val", scope: !10011, file: !1088, line: 210, type: !113)
!10018 = !DILocation(line: 0, scope: !10011)
!10019 = !DILocation(line: 214, column: 6, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10011, file: !1088, line: 214, column: 6)
!10021 = !DILocation(line: 214, column: 6, scope: !10011)
!10022 = !DILocation(line: 219, column: 52, scope: !10011)
!10023 = !DILocation(line: 219, column: 8, scope: !10011)
!10024 = !DILocation(line: 220, column: 12, scope: !10011)
!10025 = !DILocation(line: 221, column: 22, scope: !10011)
!10026 = !DILocation(line: 221, column: 13, scope: !10011)
!10027 = !DILocation(line: 221, column: 10, scope: !10011)
!10028 = !DILocation(line: 222, column: 7, scope: !10011)
!10029 = !DILocation(line: 224, column: 2, scope: !10011)
!10030 = !DILocation(line: 225, column: 1, scope: !10011)
!10031 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1088, file: !1088, line: 262, type: !1142, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10032)
!10032 = !{!10033, !10034, !10035, !10036, !10037, !10038, !10039}
!10033 = !DILocalVariable(name: "clock", arg: 1, scope: !10031, file: !1088, line: 262, type: !1117)
!10034 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10031, file: !1088, line: 263, type: !1128)
!10035 = !DILocalVariable(name: "rate", arg: 3, scope: !10031, file: !1088, line: 264, type: !1084)
!10036 = !DILocalVariable(name: "pclken", scope: !10031, file: !1088, line: 266, type: !1078)
!10037 = !DILocalVariable(name: "ahb_clock", scope: !10031, file: !1088, line: 273, type: !113)
!10038 = !DILocalVariable(name: "apb1_clock", scope: !10031, file: !1088, line: 274, type: !113)
!10039 = !DILocalVariable(name: "apb2_clock", scope: !10031, file: !1088, line: 276, type: !113)
!10040 = !DILocation(line: 0, scope: !10031)
!10041 = !DILocation(line: 273, column: 23, scope: !10031)
!10042 = !DILocation(line: 299, column: 18, scope: !10031)
!10043 = !DILocation(line: 299, column: 2, scope: !10031)
!10044 = !DILocation(line: 374, column: 3, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10031, file: !1088, line: 299, column: 23)
!10046 = !DILocation(line: 379, column: 3, scope: !10045)
!10047 = !DILocation(line: 389, column: 3, scope: !10045)
!10048 = !DILocation(line: 0, scope: !10045)
!10049 = !DILocation(line: 396, column: 1, scope: !10031)
!10050 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1088, file: !1088, line: 227, type: !1158, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10051)
!10051 = !{!10052, !10053, !10054, !10055, !10056, !10057, !10058, !10059}
!10052 = !DILocalVariable(name: "dev", arg: 1, scope: !10050, file: !1088, line: 227, type: !1117)
!10053 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10050, file: !1088, line: 228, type: !1128)
!10054 = !DILocalVariable(name: "data", arg: 3, scope: !10050, file: !1088, line: 229, type: !104)
!10055 = !DILocalVariable(name: "pclken", scope: !10050, file: !1088, line: 233, type: !1078)
!10056 = !DILocalVariable(name: "reg", scope: !10050, file: !1088, line: 234, type: !3031)
!10057 = !DILocalVariable(name: "reg_val", scope: !10050, file: !1088, line: 235, type: !113)
!10058 = !DILocalVariable(name: "dt_val", scope: !10050, file: !1088, line: 235, type: !113)
!10059 = !DILocalVariable(name: "err", scope: !10050, file: !1088, line: 236, type: !105)
!10060 = !DILocation(line: 0, scope: !10050)
!10061 = !DILocation(line: 241, column: 30, scope: !10050)
!10062 = !DILocation(line: 241, column: 8, scope: !10050)
!10063 = !DILocation(line: 242, column: 10, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10050, file: !1088, line: 242, column: 6)
!10065 = !DILocation(line: 242, column: 6, scope: !10050)
!10066 = !DILocation(line: 247, column: 11, scope: !10050)
!10067 = !DILocation(line: 248, column: 6, scope: !10050)
!10068 = !DILocation(line: 247, column: 44, scope: !10050)
!10069 = !DILocation(line: 250, column: 6, scope: !10050)
!10070 = !DILocation(line: 249, column: 52, scope: !10050)
!10071 = !DILocation(line: 249, column: 8, scope: !10050)
!10072 = !DILocation(line: 251, column: 12, scope: !10050)
!10073 = !DILocation(line: 252, column: 10, scope: !10050)
!10074 = !DILocation(line: 253, column: 7, scope: !10050)
!10075 = !DILocation(line: 255, column: 2, scope: !10050)
!10076 = !DILocation(line: 260, column: 1, scope: !10050)
!10077 = distinct !DISubprogram(name: "enabled_clock", scope: !1088, file: !1088, line: 100, type: !10078, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10080)
!10078 = !DISubroutineType(types: !10079)
!10079 = !{!105, !113}
!10080 = !{!10081, !10082}
!10081 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10077, file: !1088, line: 100, type: !113)
!10082 = !DILocalVariable(name: "r", scope: !10077, file: !1088, line: 102, type: !105)
!10083 = !DILocation(line: 0, scope: !10077)
!10084 = !DILocation(line: 104, column: 2, scope: !10077)
!10085 = !DILocation(line: 180, column: 2, scope: !10077)
!10086 = !DILocation(line: 181, column: 1, scope: !10077)
!10087 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1088, file: !1088, line: 641, type: !1115, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10088)
!10088 = !{!10089, !10090, !10091}
!10089 = !DILocalVariable(name: "dev", arg: 1, scope: !10087, file: !1088, line: 641, type: !1117)
!10090 = !DILocalVariable(name: "old_flash_freq", scope: !10087, file: !1088, line: 664, type: !113)
!10091 = !DILocalVariable(name: "new_flash_freq", scope: !10087, file: !1088, line: 665, type: !113)
!10092 = !DILocation(line: 0, scope: !10087)
!10093 = !DILocation(line: 646, column: 2, scope: !10087)
!10094 = !DILocation(line: 667, column: 19, scope: !10087)
!10095 = !DILocation(line: 674, column: 21, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10087, file: !1088, line: 674, column: 6)
!10097 = !DILocation(line: 674, column: 6, scope: !10087)
!10098 = !DILocation(line: 675, column: 3, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10096, file: !1088, line: 674, column: 59)
!10100 = !DILocation(line: 676, column: 2, scope: !10099)
!10101 = !DILocation(line: 680, column: 2, scope: !10087)
!10102 = !DILocation(line: 683, column: 2, scope: !10087)
!10103 = !DILocation(line: 690, column: 3, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10105, file: !1088, line: 689, column: 9)
!10105 = distinct !DILexicalBlock(scope: !10087, file: !1088, line: 685, column: 6)
!10106 = !DILocation(line: 695, column: 2, scope: !10087)
!10107 = !DILocation(line: 696, column: 2, scope: !10087)
!10108 = !DILocation(line: 696, column: 9, scope: !10087)
!10109 = !DILocation(line: 696, column: 34, scope: !10087)
!10110 = distinct !{!10110, !10107, !10111}
!10111 = !DILocation(line: 697, column: 2, scope: !10087)
!10112 = !DILocation(line: 720, column: 21, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10087, file: !1088, line: 720, column: 6)
!10114 = !DILocation(line: 720, column: 6, scope: !10087)
!10115 = !DILocation(line: 721, column: 3, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10113, file: !1088, line: 720, column: 60)
!10117 = !DILocation(line: 722, column: 2, scope: !10116)
!10118 = !DILocation(line: 725, column: 18, scope: !10087)
!10119 = !DILocation(line: 728, column: 2, scope: !10087)
!10120 = !DILocation(line: 730, column: 2, scope: !10087)
!10121 = !DILocation(line: 745, column: 2, scope: !10087)
!10122 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10123, file: !10123, line: 995, type: !395, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !397)
!10123 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10124 = !DILocation(line: 997, column: 21, scope: !10122)
!10125 = !DILocation(line: 997, column: 3, scope: !10122)
!10126 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1088, file: !1088, line: 507, type: !266, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !397)
!10127 = !DILocation(line: 534, column: 7, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10129, file: !1088, line: 534, column: 7)
!10129 = distinct !DILexicalBlock(scope: !10130, file: !1088, line: 532, column: 37)
!10130 = distinct !DILexicalBlock(scope: !10126, file: !1088, line: 532, column: 6)
!10131 = !DILocation(line: 534, column: 28, scope: !10128)
!10132 = !DILocation(line: 534, column: 7, scope: !10129)
!10133 = !DILocation(line: 536, column: 4, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10128, file: !1088, line: 534, column: 34)
!10135 = !DILocation(line: 537, column: 4, scope: !10134)
!10136 = !DILocation(line: 537, column: 11, scope: !10134)
!10137 = !DILocation(line: 537, column: 32, scope: !10134)
!10138 = distinct !{!10138, !10135, !10139}
!10139 = !DILocation(line: 539, column: 4, scope: !10134)
!10140 = !DILocation(line: 583, column: 3, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10142, file: !1088, line: 577, column: 37)
!10142 = distinct !DILexicalBlock(scope: !10126, file: !1088, line: 577, column: 6)
!10143 = !DILocation(line: 584, column: 3, scope: !10141)
!10144 = !DILocation(line: 584, column: 10, scope: !10141)
!10145 = !DILocation(line: 584, column: 31, scope: !10141)
!10146 = distinct !{!10146, !10143, !10147}
!10147 = !DILocation(line: 585, column: 3, scope: !10141)
!10148 = !DILocation(line: 627, column: 1, scope: !10126)
!10149 = distinct !DISubprogram(name: "set_up_plls", scope: !1088, file: !1088, line: 448, type: !266, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !397)
!10150 = !DILocation(line: 460, column: 6, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10149, file: !1088, line: 460, column: 6)
!10152 = !DILocation(line: 460, column: 31, scope: !10151)
!10153 = !DILocation(line: 460, column: 6, scope: !10149)
!10154 = !DILocation(line: 461, column: 3, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10151, file: !1088, line: 460, column: 67)
!10156 = !DILocation(line: 462, column: 3, scope: !10155)
!10157 = !DILocation(line: 463, column: 2, scope: !10155)
!10158 = !DILocation(line: 464, column: 2, scope: !10149)
!10159 = !DILocation(line: 496, column: 2, scope: !10149)
!10160 = !DILocation(line: 499, column: 2, scope: !10149)
!10161 = !DILocation(line: 500, column: 2, scope: !10149)
!10162 = !DILocation(line: 500, column: 9, scope: !10149)
!10163 = !DILocation(line: 500, column: 30, scope: !10149)
!10164 = distinct !{!10164, !10161, !10165}
!10165 = !DILocation(line: 502, column: 2, scope: !10149)
!10166 = !DILocation(line: 505, column: 1, scope: !10149)
!10167 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10123, file: !10123, line: 944, type: !7443, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10168)
!10168 = !{!10169}
!10169 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10167, file: !10123, line: 944, type: !113)
!10170 = !DILocation(line: 0, scope: !10167)
!10171 = !DILocation(line: 946, column: 3, scope: !10167)
!10172 = !DILocation(line: 947, column: 1, scope: !10167)
!10173 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10123, file: !10123, line: 910, type: !7443, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10174)
!10174 = !{!10175}
!10175 = !DILocalVariable(name: "Source", arg: 1, scope: !10173, file: !10123, line: 910, type: !113)
!10176 = !DILocation(line: 0, scope: !10173)
!10177 = !DILocation(line: 912, column: 3, scope: !10173)
!10178 = !DILocation(line: 913, column: 1, scope: !10173)
!10179 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10123, file: !10123, line: 924, type: !395, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !397)
!10180 = !DILocation(line: 926, column: 21, scope: !10179)
!10181 = !DILocation(line: 926, column: 3, scope: !10179)
!10182 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10123, file: !10123, line: 960, type: !7443, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10183)
!10183 = !{!10184}
!10184 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10182, file: !10123, line: 960, type: !113)
!10185 = !DILocation(line: 0, scope: !10182)
!10186 = !DILocation(line: 962, column: 3, scope: !10182)
!10187 = !DILocation(line: 963, column: 1, scope: !10182)
!10188 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10123, file: !10123, line: 976, type: !7443, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !10189)
!10189 = !{!10190}
!10190 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10188, file: !10123, line: 976, type: !113)
!10191 = !DILocation(line: 0, scope: !10188)
!10192 = !DILocation(line: 978, column: 3, scope: !10188)
!10193 = !DILocation(line: 979, column: 1, scope: !10188)
!10194 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1088, file: !1088, line: 409, type: !266, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !397)
!10195 = !DILocation(line: 412, column: 6, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10194, file: !1088, line: 412, column: 6)
!10197 = !DILocation(line: 412, column: 27, scope: !10196)
!10198 = !DILocation(line: 412, column: 6, scope: !10194)
!10199 = !DILocation(line: 414, column: 3, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10196, file: !1088, line: 412, column: 33)
!10201 = !DILocation(line: 415, column: 3, scope: !10200)
!10202 = !DILocation(line: 415, column: 10, scope: !10200)
!10203 = !DILocation(line: 415, column: 31, scope: !10200)
!10204 = distinct !{!10204, !10201, !10205}
!10205 = !DILocation(line: 417, column: 3, scope: !10200)
!10206 = !DILocation(line: 421, column: 2, scope: !10194)
!10207 = !DILocation(line: 422, column: 2, scope: !10194)
!10208 = !DILocation(line: 422, column: 9, scope: !10194)
!10209 = !DILocation(line: 422, column: 34, scope: !10194)
!10210 = distinct !{!10210, !10207, !10211}
!10211 = !DILocation(line: 423, column: 2, scope: !10194)
!10212 = !DILocation(line: 424, column: 1, scope: !10194)
!10213 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10123, file: !10123, line: 1180, type: !266, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !397)
!10214 = !DILocation(line: 1182, column: 3, scope: !10213)
!10215 = !DILocation(line: 1183, column: 1, scope: !10213)
!10216 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10123, file: !10123, line: 1169, type: !266, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !397)
!10217 = !DILocation(line: 1171, column: 3, scope: !10216)
!10218 = !DILocation(line: 1172, column: 1, scope: !10216)
!10219 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10123, file: !10123, line: 1190, type: !395, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !397)
!10220 = !DILocation(line: 1192, column: 12, scope: !10219)
!10221 = !DILocation(line: 1192, column: 11, scope: !10219)
!10222 = !DILocation(line: 1192, column: 3, scope: !10219)
!10223 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10123, file: !10123, line: 612, type: !395, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !397)
!10224 = !DILocation(line: 614, column: 12, scope: !10223)
!10225 = !DILocation(line: 614, column: 11, scope: !10223)
!10226 = !DILocation(line: 614, column: 3, scope: !10223)
!10227 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10123, file: !10123, line: 592, type: !266, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !397)
!10228 = !DILocation(line: 594, column: 3, scope: !10227)
!10229 = !DILocation(line: 595, column: 1, scope: !10227)
!10230 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10123, file: !10123, line: 760, type: !266, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !397)
!10231 = !DILocation(line: 762, column: 3, scope: !10230)
!10232 = !DILocation(line: 763, column: 1, scope: !10230)
!10233 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10123, file: !10123, line: 780, type: !395, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !397)
!10234 = !DILocation(line: 782, column: 12, scope: !10233)
!10235 = !DILocation(line: 782, column: 11, scope: !10233)
!10236 = !DILocation(line: 782, column: 3, scope: !10233)
!10237 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10238, file: !10238, line: 48, type: !395, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !397)
!10238 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10239 = !DILocation(line: 51, column: 3, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10241, file: !10238, line: 50, column: 37)
!10241 = distinct !DILexicalBlock(scope: !10237, file: !10238, line: 50, column: 6)
!10242 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10238, file: !10238, line: 64, type: !266, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !397)
!10243 = !DILocation(line: 66, column: 2, scope: !10242)
!10244 = !DILocation(line: 69, column: 1, scope: !10242)
!10245 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10123, file: !10123, line: 1219, type: !10246, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !10248)
!10246 = !DISubroutineType(types: !10247)
!10247 = !{null, !113, !113, !113}
!10248 = !{!10249, !10250, !10251}
!10249 = !DILocalVariable(name: "Source", arg: 1, scope: !10245, file: !10123, line: 1219, type: !113)
!10250 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !10245, file: !10123, line: 1219, type: !113)
!10251 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !10245, file: !10123, line: 1219, type: !113)
!10252 = !DILocation(line: 0, scope: !10245)
!10253 = !DILocation(line: 1221, column: 3, scope: !10245)
!10254 = !DILocation(line: 1222, column: 1, scope: !10245)
!10255 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !10238, file: !10238, line: 75, type: !395, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !397)
!10256 = !DILocation(line: 77, column: 9, scope: !10255)
!10257 = !DILocation(line: 77, column: 2, scope: !10255)
!10258 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10238, file: !10238, line: 87, type: !266, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !397)
!10259 = !DILocation(line: 93, column: 2, scope: !10258)
!10260 = !DILocation(line: 95, column: 1, scope: !10258)
!10261 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !7442, file: !7442, line: 895, type: !7443, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !10262)
!10262 = !{!10263, !10264}
!10263 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10261, file: !7442, line: 895, type: !113)
!10264 = !DILocalVariable(name: "tmpreg", scope: !10261, file: !7442, line: 897, type: !461)
!10265 = !DILocation(line: 0, scope: !10261)
!10266 = !DILocation(line: 897, column: 3, scope: !10261)
!10267 = !DILocation(line: 897, column: 17, scope: !10261)
!10268 = !DILocation(line: 898, column: 3, scope: !10261)
!10269 = !DILocation(line: 900, column: 12, scope: !10261)
!10270 = !DILocation(line: 900, column: 10, scope: !10261)
!10271 = !DILocation(line: 901, column: 9, scope: !10261)
!10272 = !DILocation(line: 902, column: 1, scope: !10261)
!10273 = distinct !DISubprogram(name: "uart_console_init", scope: !1219, file: !1219, line: 588, type: !1196, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10274)
!10274 = !{!10275}
!10275 = !DILocalVariable(name: "arg", arg: 1, scope: !10273, file: !1219, line: 588, type: !1174)
!10276 = !DILocation(line: 0, scope: !10273)
!10277 = !DILocation(line: 593, column: 7, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10273, file: !1219, line: 593, column: 6)
!10279 = !DILocation(line: 593, column: 6, scope: !10273)
!10280 = !DILocation(line: 597, column: 2, scope: !10273)
!10281 = !DILocation(line: 599, column: 2, scope: !10273)
!10282 = !DILocation(line: 600, column: 1, scope: !10273)
!10283 = distinct !DISubprogram(name: "device_is_ready", scope: !9632, file: !9632, line: 47, type: !10284, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10286)
!10284 = !DISubroutineType(types: !10285)
!10285 = !{!505, !1174}
!10286 = !{!10287}
!10287 = !DILocalVariable(name: "dev", arg: 1, scope: !10283, file: !9632, line: 47, type: !1174)
!10288 = !DILocation(line: 0, scope: !10283)
!10289 = !DILocation(line: 55, column: 2, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10283, file: !9632, line: 55, column: 2)
!10291 = !{i64 2152424336}
!10292 = !DILocation(line: 56, column: 9, scope: !10283)
!10293 = !DILocation(line: 56, column: 2, scope: !10283)
!10294 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1219, file: !1219, line: 573, type: !266, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !397)
!10295 = !DILocation(line: 576, column: 2, scope: !10294)
!10296 = !DILocation(line: 579, column: 2, scope: !10294)
!10297 = !DILocation(line: 581, column: 1, scope: !10294)
!10298 = distinct !DISubprogram(name: "console_out", scope: !1219, file: !1219, line: 77, type: !448, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10299)
!10299 = !{!10300}
!10300 = !DILocalVariable(name: "c", arg: 1, scope: !10298, file: !1219, line: 77, type: !105)
!10301 = !DILocation(line: 0, scope: !10298)
!10302 = !DILocation(line: 89, column: 11, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10298, file: !1219, line: 89, column: 6)
!10304 = !DILocation(line: 89, column: 6, scope: !10298)
!10305 = !DILocation(line: 90, column: 3, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10303, file: !1219, line: 89, column: 17)
!10307 = !DILocation(line: 91, column: 2, scope: !10306)
!10308 = !DILocation(line: 92, column: 34, scope: !10298)
!10309 = !DILocation(line: 92, column: 2, scope: !10298)
!10310 = !DILocation(line: 94, column: 2, scope: !10298)
!10311 = distinct !DISubprogram(name: "uart_poll_out", scope: !10312, file: !10312, line: 95, type: !1192, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10313)
!10312 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!10313 = !{!10314, !10315}
!10314 = !DILocalVariable(name: "dev", arg: 1, scope: !10311, file: !10312, line: 95, type: !1174)
!10315 = !DILocalVariable(name: "out_char", arg: 2, scope: !10311, file: !10312, line: 95, type: !170)
!10316 = !DILocation(line: 0, scope: !10311)
!10317 = !DILocation(line: 105, column: 2, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10311, file: !10312, line: 105, column: 2)
!10319 = !{i64 2152507727}
!10320 = !DILocation(line: 106, column: 2, scope: !10311)
!10321 = !DILocation(line: 107, column: 1, scope: !10311)
!10322 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1168, file: !1168, line: 574, type: !1192, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10323)
!10323 = !{!10324, !10325, !10326}
!10324 = !DILocalVariable(name: "dev", arg: 1, scope: !10322, file: !1168, line: 574, type: !1174)
!10325 = !DILocalVariable(name: "out_char", arg: 2, scope: !10322, file: !1168, line: 575, type: !170)
!10326 = !DILocalVariable(name: "api", scope: !10322, file: !1168, line: 577, type: !1165)
!10327 = !DILocation(line: 0, scope: !10322)
!10328 = !DILocation(line: 578, column: 40, scope: !10322)
!10329 = !DILocation(line: 580, column: 7, scope: !10322)
!10330 = !DILocation(line: 580, column: 2, scope: !10322)
!10331 = !DILocation(line: 581, column: 1, scope: !10322)
!10332 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !494, file: !494, line: 730, type: !10284, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10333)
!10333 = !{!10334}
!10334 = !DILocalVariable(name: "dev", arg: 1, scope: !10332, file: !494, line: 730, type: !1174)
!10335 = !DILocation(line: 0, scope: !10332)
!10336 = !DILocation(line: 732, column: 9, scope: !10332)
!10337 = !DILocation(line: 732, column: 2, scope: !10332)
!10338 = distinct !DISubprogram(name: "uart_register_input", scope: !1219, file: !1219, line: 560, type: !10339, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1162, retainedNodes: !10386)
!10339 = !DISubroutineType(types: !10340)
!10340 = !{null, !10341, !10341, !10383}
!10341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10342, size: 32)
!10342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !122, line: 2208, size: 160, elements: !10343)
!10343 = !{!10344}
!10344 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10342, file: !122, line: 2209, baseType: !10345, size: 160)
!10345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !122, line: 1709, size: 160, elements: !10346)
!10346 = !{!10347, !10360, !10364}
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10345, file: !122, line: 1710, baseType: !10348, size: 64)
!10348 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10349, line: 46, baseType: !10350)
!10349 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10349, line: 41, size: 64, elements: !10351)
!10351 = !{!10352, !10359}
!10352 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10350, file: !10349, line: 42, baseType: !10353, size: 32)
!10353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10354, size: 32)
!10354 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10349, line: 39, baseType: !10355)
!10355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10349, line: 35, size: 32, elements: !10356)
!10356 = !{!10357}
!10357 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10355, file: !10349, line: 36, baseType: !10358, size: 32)
!10358 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10349, line: 32, baseType: !113)
!10359 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10350, file: !10349, line: 43, baseType: !10353, size: 32, offset: 32)
!10360 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10345, file: !122, line: 1711, baseType: !10361, size: 32, offset: 64)
!10361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !10362)
!10362 = !{!10363}
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !10361, file: !236, line: 52, baseType: !22, size: 32)
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10345, file: !122, line: 1712, baseType: !10365, size: 64, offset: 96)
!10365 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !10366)
!10366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !10367)
!10367 = !{!10368}
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10366, file: !163, line: 232, baseType: !10369, size: 64)
!10369 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !10370)
!10370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !10371)
!10371 = !{!10372, !10378}
!10372 = !DIDerivedType(tag: DW_TAG_member, scope: !10370, file: !137, line: 38, baseType: !10373, size: 32)
!10373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10370, file: !137, line: 38, size: 32, elements: !10374)
!10374 = !{!10375, !10377}
!10375 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10373, file: !137, line: 39, baseType: !10376, size: 32)
!10376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10370, size: 32)
!10377 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10373, file: !137, line: 40, baseType: !10376, size: 32)
!10378 = !DIDerivedType(tag: DW_TAG_member, scope: !10370, file: !137, line: 42, baseType: !10379, size: 32, offset: 32)
!10379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10370, file: !137, line: 42, size: 32, elements: !10380)
!10380 = !{!10381, !10382}
!10381 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10379, file: !137, line: 43, baseType: !10376, size: 32)
!10382 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10379, file: !137, line: 44, baseType: !10376, size: 32)
!10383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10384, size: 32)
!10384 = !DISubroutineType(types: !10385)
!10385 = !{!169, !102, !169}
!10386 = !{!10387, !10388, !10389}
!10387 = !DILocalVariable(name: "avail", arg: 1, scope: !10338, file: !1219, line: 560, type: !10341)
!10388 = !DILocalVariable(name: "lines", arg: 2, scope: !10338, file: !1219, line: 560, type: !10341)
!10389 = !DILocalVariable(name: "completion", arg: 3, scope: !10338, file: !1219, line: 561, type: !10383)
!10390 = !DILocation(line: 0, scope: !10338)
!10391 = !DILocation(line: 566, column: 1, scope: !10338)
!10392 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1378, file: !1378, line: 523, type: !1244, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10393)
!10393 = !{!10394, !10395, !10396, !10397, !10398}
!10394 = !DILocalVariable(name: "dev", arg: 1, scope: !10392, file: !1378, line: 523, type: !1246)
!10395 = !DILocalVariable(name: "pin", arg: 2, scope: !10392, file: !1378, line: 524, type: !796)
!10396 = !DILocalVariable(name: "flags", arg: 3, scope: !10392, file: !1378, line: 524, type: !797)
!10397 = !DILocalVariable(name: "err", scope: !10392, file: !1378, line: 526, type: !105)
!10398 = !DILocalVariable(name: "pincfg", scope: !10392, file: !1378, line: 527, type: !105)
!10399 = !DILocation(line: 0, scope: !10392)
!10400 = !DILocation(line: 527, column: 2, scope: !10392)
!10401 = !DILocation(line: 532, column: 8, scope: !10392)
!10402 = !DILocation(line: 533, column: 10, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10392, file: !1378, line: 533, column: 6)
!10404 = !DILocation(line: 533, column: 6, scope: !10392)
!10405 = !DILocation(line: 543, column: 13, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10392, file: !1378, line: 543, column: 6)
!10407 = !DILocation(line: 543, column: 28, scope: !10406)
!10408 = !DILocation(line: 543, column: 6, scope: !10392)
!10409 = !DILocation(line: 544, column: 14, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10411, file: !1378, line: 544, column: 7)
!10411 = distinct !DILexicalBlock(scope: !10406, file: !1378, line: 543, column: 34)
!10412 = !DILocation(line: 544, column: 39, scope: !10410)
!10413 = !DILocation(line: 544, column: 7, scope: !10411)
!10414 = !DILocation(line: 545, column: 38, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10410, file: !1378, line: 544, column: 45)
!10416 = !DILocation(line: 545, column: 4, scope: !10415)
!10417 = !DILocation(line: 546, column: 3, scope: !10415)
!10418 = !DILocation(line: 546, column: 21, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10410, file: !1378, line: 546, column: 14)
!10420 = !DILocation(line: 546, column: 45, scope: !10419)
!10421 = !DILocation(line: 546, column: 14, scope: !10410)
!10422 = !DILocation(line: 547, column: 40, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10419, file: !1378, line: 546, column: 51)
!10424 = !DILocation(line: 547, column: 4, scope: !10423)
!10425 = !DILocation(line: 548, column: 3, scope: !10423)
!10426 = !DILocation(line: 551, column: 32, scope: !10392)
!10427 = !DILocation(line: 551, column: 37, scope: !10392)
!10428 = !DILocation(line: 551, column: 2, scope: !10392)
!10429 = !DILocation(line: 554, column: 6, scope: !10392)
!10430 = !DILocation(line: 562, column: 1, scope: !10392)
!10431 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1378, file: !1378, line: 410, type: !10432, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10434)
!10432 = !DISubroutineType(types: !10433)
!10433 = !{!105, !1246, !1084}
!10434 = !{!10435, !10436, !10437, !10439}
!10435 = !DILocalVariable(name: "dev", arg: 1, scope: !10431, file: !1378, line: 410, type: !1246)
!10436 = !DILocalVariable(name: "value", arg: 2, scope: !10431, file: !1378, line: 410, type: !1084)
!10437 = !DILocalVariable(name: "cfg", scope: !10431, file: !1378, line: 412, type: !10438)
!10438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!10439 = !DILocalVariable(name: "gpio", scope: !10431, file: !1378, line: 413, type: !1313)
!10440 = !DILocation(line: 0, scope: !10431)
!10441 = !DILocation(line: 412, column: 45, scope: !10431)
!10442 = !DILocation(line: 413, column: 44, scope: !10431)
!10443 = !DILocation(line: 415, column: 11, scope: !10431)
!10444 = !DILocation(line: 415, column: 9, scope: !10431)
!10445 = !DILocation(line: 417, column: 2, scope: !10431)
!10446 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1378, file: !1378, line: 420, type: !1267, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10447)
!10447 = !{!10448, !10449, !10450, !10451, !10452, !10453}
!10448 = !DILocalVariable(name: "dev", arg: 1, scope: !10446, file: !1378, line: 420, type: !1246)
!10449 = !DILocalVariable(name: "mask", arg: 2, scope: !10446, file: !1378, line: 421, type: !808)
!10450 = !DILocalVariable(name: "value", arg: 3, scope: !10446, file: !1378, line: 422, type: !803)
!10451 = !DILocalVariable(name: "cfg", scope: !10446, file: !1378, line: 424, type: !10438)
!10452 = !DILocalVariable(name: "gpio", scope: !10446, file: !1378, line: 425, type: !1313)
!10453 = !DILocalVariable(name: "port_value", scope: !10446, file: !1378, line: 426, type: !113)
!10454 = !DILocation(line: 0, scope: !10446)
!10455 = !DILocation(line: 424, column: 45, scope: !10446)
!10456 = !DILocation(line: 425, column: 44, scope: !10446)
!10457 = !DILocation(line: 430, column: 15, scope: !10446)
!10458 = !DILocation(line: 431, column: 46, scope: !10446)
!10459 = !DILocation(line: 431, column: 44, scope: !10446)
!10460 = !DILocation(line: 431, column: 61, scope: !10446)
!10461 = !DILocation(line: 431, column: 53, scope: !10446)
!10462 = !DILocation(line: 431, column: 2, scope: !10446)
!10463 = !DILocation(line: 435, column: 2, scope: !10446)
!10464 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1378, file: !1378, line: 438, type: !1271, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10465)
!10465 = !{!10466, !10467, !10468, !10469}
!10466 = !DILocalVariable(name: "dev", arg: 1, scope: !10464, file: !1378, line: 438, type: !1246)
!10467 = !DILocalVariable(name: "pins", arg: 2, scope: !10464, file: !1378, line: 439, type: !808)
!10468 = !DILocalVariable(name: "cfg", scope: !10464, file: !1378, line: 441, type: !10438)
!10469 = !DILocalVariable(name: "gpio", scope: !10464, file: !1378, line: 442, type: !1313)
!10470 = !DILocation(line: 0, scope: !10464)
!10471 = !DILocation(line: 441, column: 45, scope: !10464)
!10472 = !DILocation(line: 442, column: 44, scope: !10464)
!10473 = !DILocation(line: 448, column: 2, scope: !10464)
!10474 = !DILocation(line: 450, column: 2, scope: !10464)
!10475 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1378, file: !1378, line: 453, type: !1271, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10476)
!10476 = !{!10477, !10478, !10479, !10480}
!10477 = !DILocalVariable(name: "dev", arg: 1, scope: !10475, file: !1378, line: 453, type: !1246)
!10478 = !DILocalVariable(name: "pins", arg: 2, scope: !10475, file: !1378, line: 454, type: !808)
!10479 = !DILocalVariable(name: "cfg", scope: !10475, file: !1378, line: 456, type: !10438)
!10480 = !DILocalVariable(name: "gpio", scope: !10475, file: !1378, line: 457, type: !1313)
!10481 = !DILocation(line: 0, scope: !10475)
!10482 = !DILocation(line: 456, column: 45, scope: !10475)
!10483 = !DILocation(line: 457, column: 44, scope: !10475)
!10484 = !DILocation(line: 467, column: 2, scope: !10475)
!10485 = !DILocation(line: 470, column: 2, scope: !10475)
!10486 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1378, file: !1378, line: 473, type: !1271, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10487)
!10487 = !{!10488, !10489, !10490, !10491}
!10488 = !DILocalVariable(name: "dev", arg: 1, scope: !10486, file: !1378, line: 473, type: !1246)
!10489 = !DILocalVariable(name: "pins", arg: 2, scope: !10486, file: !1378, line: 474, type: !808)
!10490 = !DILocalVariable(name: "cfg", scope: !10486, file: !1378, line: 476, type: !10438)
!10491 = !DILocalVariable(name: "gpio", scope: !10486, file: !1378, line: 477, type: !1313)
!10492 = !DILocation(line: 0, scope: !10486)
!10493 = !DILocation(line: 476, column: 45, scope: !10486)
!10494 = !DILocation(line: 477, column: 44, scope: !10486)
!10495 = !DILocation(line: 484, column: 2, scope: !10486)
!10496 = !DILocation(line: 487, column: 2, scope: !10486)
!10497 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1378, file: !1378, line: 594, type: !1277, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10498)
!10498 = !{!10499, !10500, !10501, !10502, !10503, !10504, !10506, !10507, !10508}
!10499 = !DILocalVariable(name: "dev", arg: 1, scope: !10497, file: !1378, line: 594, type: !1246)
!10500 = !DILocalVariable(name: "pin", arg: 2, scope: !10497, file: !1378, line: 595, type: !796)
!10501 = !DILocalVariable(name: "mode", arg: 3, scope: !10497, file: !1378, line: 596, type: !761)
!10502 = !DILocalVariable(name: "trig", arg: 4, scope: !10497, file: !1378, line: 597, type: !767)
!10503 = !DILocalVariable(name: "cfg", scope: !10497, file: !1378, line: 599, type: !10438)
!10504 = !DILocalVariable(name: "data", scope: !10497, file: !1378, line: 600, type: !10505)
!10505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 32)
!10506 = !DILocalVariable(name: "edge", scope: !10497, file: !1378, line: 601, type: !105)
!10507 = !DILocalVariable(name: "err", scope: !10497, file: !1378, line: 602, type: !105)
!10508 = !DILabel(scope: !10497, name: "exit", file: !1378, line: 643)
!10509 = !DILocation(line: 0, scope: !10497)
!10510 = !DILocation(line: 599, column: 45, scope: !10497)
!10511 = !DILocation(line: 604, column: 6, scope: !10497)
!10512 = !DILocation(line: 605, column: 34, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10514, file: !1378, line: 605, column: 7)
!10514 = distinct !DILexicalBlock(scope: !10515, file: !1378, line: 604, column: 38)
!10515 = distinct !DILexicalBlock(scope: !10497, file: !1378, line: 604, column: 6)
!10516 = !DILocation(line: 605, column: 7, scope: !10513)
!10517 = !DILocation(line: 605, column: 47, scope: !10513)
!10518 = !DILocation(line: 605, column: 39, scope: !10513)
!10519 = !DILocation(line: 605, column: 7, scope: !10514)
!10520 = !DILocation(line: 606, column: 4, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10513, file: !1378, line: 605, column: 53)
!10522 = !DILocation(line: 607, column: 4, scope: !10521)
!10523 = !DILocation(line: 608, column: 4, scope: !10521)
!10524 = !DILocation(line: 609, column: 3, scope: !10521)
!10525 = !DILocation(line: 600, column: 38, scope: !10497)
!10526 = !DILocation(line: 620, column: 30, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10497, file: !1378, line: 620, column: 6)
!10528 = !DILocation(line: 620, column: 6, scope: !10527)
!10529 = !DILocation(line: 620, column: 57, scope: !10527)
!10530 = !DILocation(line: 620, column: 6, scope: !10497)
!10531 = !DILocation(line: 625, column: 29, scope: !10497)
!10532 = !DILocation(line: 625, column: 2, scope: !10497)
!10533 = !DILocation(line: 627, column: 2, scope: !10497)
!10534 = !DILocation(line: 630, column: 3, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10497, file: !1378, line: 627, column: 16)
!10536 = !DILocation(line: 633, column: 3, scope: !10535)
!10537 = !DILocation(line: 636, column: 3, scope: !10535)
!10538 = !DILocation(line: 639, column: 2, scope: !10497)
!10539 = !DILocation(line: 641, column: 2, scope: !10497)
!10540 = !DILocation(line: 643, column: 1, scope: !10497)
!10541 = !DILocation(line: 644, column: 2, scope: !10497)
!10542 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1378, file: !1378, line: 647, type: !1281, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10543)
!10543 = !{!10544, !10545, !10546, !10547}
!10544 = !DILocalVariable(name: "dev", arg: 1, scope: !10542, file: !1378, line: 647, type: !1246)
!10545 = !DILocalVariable(name: "callback", arg: 2, scope: !10542, file: !1378, line: 648, type: !1283)
!10546 = !DILocalVariable(name: "set", arg: 3, scope: !10542, file: !1378, line: 649, type: !505)
!10547 = !DILocalVariable(name: "data", scope: !10542, file: !1378, line: 651, type: !10505)
!10548 = !DILocation(line: 0, scope: !10542)
!10549 = !DILocation(line: 651, column: 38, scope: !10542)
!10550 = !DILocation(line: 653, column: 37, scope: !10542)
!10551 = !DILocation(line: 653, column: 9, scope: !10542)
!10552 = !DILocation(line: 653, column: 2, scope: !10542)
!10553 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10554, file: !10554, line: 38, type: !10555, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10558)
!10554 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10555 = !DISubroutineType(types: !10556)
!10556 = !{!105, !10557, !1283, !505}
!10557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!10558 = !{!10559, !10560, !10561}
!10559 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10553, file: !10554, line: 38, type: !10557)
!10560 = !DILocalVariable(name: "callback", arg: 2, scope: !10553, file: !10554, line: 39, type: !1283)
!10561 = !DILocalVariable(name: "set", arg: 3, scope: !10553, file: !10554, line: 40, type: !505)
!10562 = !DILocation(line: 0, scope: !10553)
!10563 = !DILocation(line: 42, column: 2, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10565, file: !10554, line: 42, column: 2)
!10565 = distinct !DILexicalBlock(scope: !10553, file: !10554, line: 42, column: 2)
!10566 = !DILocation(line: 42, column: 2, scope: !10565)
!10567 = !DILocation(line: 42, column: 2, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10564, file: !10554, line: 42, column: 2)
!10569 = !DILocation(line: 43, column: 2, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10571, file: !10554, line: 43, column: 2)
!10571 = distinct !DILexicalBlock(scope: !10553, file: !10554, line: 43, column: 2)
!10572 = !DILocation(line: 43, column: 2, scope: !10571)
!10573 = !DILocation(line: 43, column: 2, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10570, file: !10554, line: 43, column: 2)
!10575 = !DILocation(line: 45, column: 7, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10553, file: !10554, line: 45, column: 6)
!10577 = !DILocation(line: 45, column: 6, scope: !10553)
!10578 = !DILocation(line: 46, column: 56, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10580, file: !10554, line: 46, column: 7)
!10580 = distinct !DILexicalBlock(scope: !10576, file: !10554, line: 45, column: 38)
!10581 = !DILocation(line: 46, column: 8, scope: !10579)
!10582 = !DILocation(line: 46, column: 7, scope: !10580)
!10583 = !DILocation(line: 51, column: 13, scope: !10576)
!10584 = !DILocation(line: 56, column: 43, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10586, file: !10554, line: 55, column: 11)
!10586 = distinct !DILexicalBlock(scope: !10553, file: !10554, line: 55, column: 6)
!10587 = !DILocation(line: 56, column: 3, scope: !10585)
!10588 = !DILocation(line: 57, column: 2, scope: !10585)
!10589 = !DILocation(line: 60, column: 1, scope: !10553)
!10590 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !828, file: !828, line: 261, type: !10591, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10593)
!10591 = !DISubroutineType(types: !10592)
!10592 = !{!505, !10557}
!10593 = !{!10594}
!10594 = !DILocalVariable(name: "list", arg: 1, scope: !10590, file: !828, line: 261, type: !10557)
!10595 = !DILocation(line: 0, scope: !10590)
!10596 = !DILocation(line: 261, column: 1, scope: !10590)
!10597 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !828, file: !828, line: 417, type: !10598, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10600)
!10598 = !DISubroutineType(types: !10599)
!10599 = !{!505, !10557, !1448}
!10600 = !{!10601, !10602, !10603, !10604}
!10601 = !DILocalVariable(name: "list", arg: 1, scope: !10597, file: !828, line: 417, type: !10557)
!10602 = !DILocalVariable(name: "node", arg: 2, scope: !10597, file: !828, line: 417, type: !1448)
!10603 = !DILocalVariable(name: "prev", scope: !10597, file: !828, line: 417, type: !1448)
!10604 = !DILocalVariable(name: "test", scope: !10597, file: !828, line: 417, type: !1448)
!10605 = !DILocation(line: 0, scope: !10597)
!10606 = !DILocation(line: 417, column: 1, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10597, file: !828, line: 417, column: 1)
!10608 = !DILocation(line: 417, column: 1, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10607, file: !828, line: 417, column: 1)
!10610 = !DILocation(line: 417, column: 1, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10612, file: !828, line: 417, column: 1)
!10612 = distinct !DILexicalBlock(scope: !10609, file: !828, line: 417, column: 1)
!10613 = !DILocation(line: 417, column: 1, scope: !10612)
!10614 = distinct !{!10614, !10606, !10606}
!10615 = !DILocation(line: 417, column: 1, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10611, file: !828, line: 417, column: 1)
!10617 = !DILocation(line: 417, column: 1, scope: !10597)
!10618 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !828, file: !828, line: 298, type: !10619, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10621)
!10619 = !DISubroutineType(types: !10620)
!10620 = !{null, !10557, !1448}
!10621 = !{!10622, !10623}
!10622 = !DILocalVariable(name: "list", arg: 1, scope: !10618, file: !828, line: 298, type: !10557)
!10623 = !DILocalVariable(name: "node", arg: 2, scope: !10618, file: !828, line: 298, type: !1448)
!10624 = !DILocation(line: 0, scope: !10618)
!10625 = !DILocation(line: 298, column: 1, scope: !10618)
!10626 = !DILocation(line: 298, column: 1, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10618, file: !828, line: 298, column: 1)
!10628 = !DILocation(line: 298, column: 1, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10627, file: !828, line: 298, column: 1)
!10630 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !828, file: !828, line: 231, type: !10631, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10633)
!10631 = !DISubroutineType(types: !10632)
!10632 = !{!1448, !10557}
!10633 = !{!10634}
!10634 = !DILocalVariable(name: "list", arg: 1, scope: !10630, file: !828, line: 231, type: !10557)
!10635 = !DILocation(line: 0, scope: !10630)
!10636 = !DILocation(line: 233, column: 15, scope: !10630)
!10637 = !DILocation(line: 233, column: 2, scope: !10630)
!10638 = distinct !DISubprogram(name: "z_snode_next_set", scope: !828, file: !828, line: 209, type: !10639, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10641)
!10639 = !DISubroutineType(types: !10640)
!10640 = !{null, !1448, !1448}
!10641 = !{!10642, !10643}
!10642 = !DILocalVariable(name: "parent", arg: 1, scope: !10638, file: !828, line: 209, type: !1448)
!10643 = !DILocalVariable(name: "child", arg: 2, scope: !10638, file: !828, line: 209, type: !1448)
!10644 = !DILocation(line: 0, scope: !10638)
!10645 = !DILocation(line: 211, column: 10, scope: !10638)
!10646 = !DILocation(line: 211, column: 15, scope: !10638)
!10647 = !DILocation(line: 212, column: 1, scope: !10638)
!10648 = distinct !DISubprogram(name: "z_slist_head_set", scope: !828, file: !828, line: 214, type: !10619, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10649)
!10649 = !{!10650, !10651}
!10650 = !DILocalVariable(name: "list", arg: 1, scope: !10648, file: !828, line: 214, type: !10557)
!10651 = !DILocalVariable(name: "node", arg: 2, scope: !10648, file: !828, line: 214, type: !1448)
!10652 = !DILocation(line: 0, scope: !10648)
!10653 = !DILocation(line: 216, column: 8, scope: !10648)
!10654 = !DILocation(line: 216, column: 13, scope: !10648)
!10655 = !DILocation(line: 217, column: 1, scope: !10648)
!10656 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !828, file: !828, line: 243, type: !10631, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10657)
!10657 = !{!10658}
!10658 = !DILocalVariable(name: "list", arg: 1, scope: !10656, file: !828, line: 243, type: !10557)
!10659 = !DILocation(line: 0, scope: !10656)
!10660 = !DILocation(line: 245, column: 15, scope: !10656)
!10661 = !DILocation(line: 245, column: 2, scope: !10656)
!10662 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !828, file: !828, line: 219, type: !10619, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10663)
!10663 = !{!10664, !10665}
!10664 = !DILocalVariable(name: "list", arg: 1, scope: !10662, file: !828, line: 219, type: !10557)
!10665 = !DILocalVariable(name: "node", arg: 2, scope: !10662, file: !828, line: 219, type: !1448)
!10666 = !DILocation(line: 0, scope: !10662)
!10667 = !DILocation(line: 221, column: 8, scope: !10662)
!10668 = !DILocation(line: 221, column: 13, scope: !10662)
!10669 = !DILocation(line: 222, column: 1, scope: !10662)
!10670 = distinct !DISubprogram(name: "sys_slist_remove", scope: !828, file: !828, line: 401, type: !10671, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10673)
!10671 = !DISubroutineType(types: !10672)
!10672 = !{null, !10557, !1448, !1448}
!10673 = !{!10674, !10675, !10676}
!10674 = !DILocalVariable(name: "list", arg: 1, scope: !10670, file: !828, line: 401, type: !10557)
!10675 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10670, file: !828, line: 401, type: !1448)
!10676 = !DILocalVariable(name: "node", arg: 3, scope: !10670, file: !828, line: 401, type: !1448)
!10677 = !DILocation(line: 0, scope: !10670)
!10678 = !DILocation(line: 401, column: 1, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10670, file: !828, line: 401, column: 1)
!10680 = !DILocation(line: 0, scope: !10679)
!10681 = !DILocation(line: 401, column: 1, scope: !10670)
!10682 = !DILocation(line: 401, column: 1, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10679, file: !828, line: 401, column: 1)
!10684 = !DILocation(line: 401, column: 1, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10683, file: !828, line: 401, column: 1)
!10686 = !DILocation(line: 401, column: 1, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10685, file: !828, line: 401, column: 1)
!10688 = !DILocation(line: 401, column: 1, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10679, file: !828, line: 401, column: 1)
!10690 = !DILocation(line: 401, column: 1, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10689, file: !828, line: 401, column: 1)
!10692 = !DILocation(line: 401, column: 1, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10691, file: !828, line: 401, column: 1)
!10694 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !828, file: !828, line: 285, type: !10695, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10697)
!10695 = !DISubroutineType(types: !10696)
!10696 = !{!1448, !1448}
!10697 = !{!10698}
!10698 = !DILocalVariable(name: "node", arg: 1, scope: !10694, file: !828, line: 285, type: !1448)
!10699 = !DILocation(line: 0, scope: !10694)
!10700 = !DILocation(line: 285, column: 1, scope: !10694)
!10701 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !828, file: !828, line: 274, type: !10695, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10702)
!10702 = !{!10703}
!10703 = !DILocalVariable(name: "node", arg: 1, scope: !10701, file: !828, line: 274, type: !1448)
!10704 = !DILocation(line: 0, scope: !10701)
!10705 = !DILocation(line: 274, column: 1, scope: !10701)
!10706 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !828, file: !828, line: 204, type: !10695, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10707)
!10707 = !{!10708}
!10708 = !DILocalVariable(name: "node", arg: 1, scope: !10706, file: !828, line: 204, type: !1448)
!10709 = !DILocation(line: 0, scope: !10706)
!10710 = !DILocation(line: 206, column: 15, scope: !10706)
!10711 = !DILocation(line: 206, column: 2, scope: !10706)
!10712 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1378, file: !1378, line: 342, type: !448, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10713)
!10713 = !{!10714, !10715, !10716}
!10714 = !DILocalVariable(name: "pin", arg: 1, scope: !10712, file: !1378, line: 342, type: !105)
!10715 = !DILocalVariable(name: "line", scope: !10712, file: !1378, line: 344, type: !113)
!10716 = !DILocalVariable(name: "port", scope: !10712, file: !1378, line: 345, type: !105)
!10717 = !DILocation(line: 0, scope: !10712)
!10718 = !DILocation(line: 344, column: 18, scope: !10712)
!10719 = !{i32 983040, i32 0}
!10720 = !DILocation(line: 356, column: 9, scope: !10712)
!10721 = !DILocation(line: 370, column: 2, scope: !10712)
!10722 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1378, file: !1378, line: 37, type: !979, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10723)
!10723 = !{!10724, !10725, !10726}
!10724 = !DILocalVariable(name: "line", arg: 1, scope: !10722, file: !1378, line: 37, type: !105)
!10725 = !DILocalVariable(name: "arg", arg: 2, scope: !10722, file: !1378, line: 37, type: !104)
!10726 = !DILocalVariable(name: "data", scope: !10722, file: !1378, line: 39, type: !10505)
!10727 = !DILocation(line: 0, scope: !10722)
!10728 = !DILocation(line: 41, column: 29, scope: !10722)
!10729 = !DILocation(line: 41, column: 39, scope: !10722)
!10730 = !DILocation(line: 41, column: 44, scope: !10722)
!10731 = !DILocation(line: 41, column: 2, scope: !10722)
!10732 = !DILocation(line: 42, column: 1, scope: !10722)
!10733 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1378, file: !1378, line: 376, type: !10734, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10736)
!10734 = !DISubroutineType(types: !10735)
!10735 = !{!105, !105, !105}
!10736 = !{!10737, !10738, !10739, !10741, !10742}
!10737 = !DILocalVariable(name: "port", arg: 1, scope: !10733, file: !1378, line: 376, type: !105)
!10738 = !DILocalVariable(name: "pin", arg: 2, scope: !10733, file: !1378, line: 376, type: !105)
!10739 = !DILocalVariable(name: "clk", scope: !10733, file: !1378, line: 386, type: !10740)
!10740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!10741 = !DILocalVariable(name: "pclken", scope: !10733, file: !1378, line: 387, type: !1483)
!10742 = !DILocalVariable(name: "ret", scope: !10733, file: !1378, line: 396, type: !105)
!10743 = !DILocation(line: 0, scope: !10733)
!10744 = !DILocation(line: 387, column: 2, scope: !10733)
!10745 = !DILocation(line: 387, column: 22, scope: !10733)
!10746 = !DILocation(line: 399, column: 8, scope: !10733)
!10747 = !DILocation(line: 400, column: 10, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10733, file: !1378, line: 400, column: 6)
!10749 = !DILocation(line: 400, column: 6, scope: !10733)
!10750 = !DILocation(line: 405, column: 2, scope: !10733)
!10751 = !DILocation(line: 407, column: 2, scope: !10733)
!10752 = !DILocation(line: 408, column: 1, scope: !10733)
!10753 = distinct !DISubprogram(name: "clock_control_on", scope: !1053, file: !1053, line: 123, type: !1343, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10754)
!10754 = !{!10755, !10756, !10757}
!10755 = !DILocalVariable(name: "dev", arg: 1, scope: !10753, file: !1053, line: 123, type: !1246)
!10756 = !DILocalVariable(name: "sys", arg: 2, scope: !10753, file: !1053, line: 124, type: !1128)
!10757 = !DILocalVariable(name: "api", scope: !10753, file: !1053, line: 126, type: !1336)
!10758 = !DILocation(line: 0, scope: !10753)
!10759 = !DILocation(line: 127, column: 49, scope: !10753)
!10760 = !DILocation(line: 129, column: 14, scope: !10753)
!10761 = !DILocation(line: 129, column: 9, scope: !10753)
!10762 = !DILocation(line: 129, column: 2, scope: !10753)
!10763 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1378, file: !1378, line: 311, type: !9912, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10764)
!10764 = !{!10765, !10766, !10767}
!10765 = !DILocalVariable(name: "port", arg: 1, scope: !10763, file: !1378, line: 311, type: !105)
!10766 = !DILocalVariable(name: "pin", arg: 2, scope: !10763, file: !1378, line: 311, type: !105)
!10767 = !DILocalVariable(name: "line", scope: !10763, file: !1378, line: 313, type: !113)
!10768 = !DILocation(line: 0, scope: !10763)
!10769 = !DILocation(line: 313, column: 18, scope: !10763)
!10770 = !DILocation(line: 337, column: 2, scope: !10763)
!10771 = !DILocation(line: 340, column: 1, scope: !10763)
!10772 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1378, file: !1378, line: 295, type: !10773, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10775)
!10773 = !DISubroutineType(types: !10774)
!10774 = !{!113, !105}
!10775 = !{!10776}
!10776 = !DILocalVariable(name: "pin", arg: 1, scope: !10772, file: !1378, line: 295, type: !105)
!10777 = !DILocation(line: 0, scope: !10772)
!10778 = !DILocation(line: 307, column: 46, scope: !10772)
!10779 = !DILocation(line: 307, column: 27, scope: !10772)
!10780 = !DILocation(line: 307, column: 32, scope: !10772)
!10781 = !DILocation(line: 307, column: 14, scope: !10772)
!10782 = !DILocation(line: 307, column: 39, scope: !10772)
!10783 = !DILocation(line: 307, column: 2, scope: !10772)
!10784 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !10785, file: !10785, line: 621, type: !10786, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10788)
!10785 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10786 = !DISubroutineType(types: !10787)
!10787 = !{null, !113, !113}
!10788 = !{!10789, !10790}
!10789 = !DILocalVariable(name: "Port", arg: 1, scope: !10784, file: !10785, line: 621, type: !113)
!10790 = !DILocalVariable(name: "Line", arg: 2, scope: !10784, file: !10785, line: 621, type: !113)
!10791 = !DILocation(line: 0, scope: !10784)
!10792 = !DILocation(line: 623, column: 3, scope: !10784)
!10793 = !DILocalVariable(name: "value", arg: 1, scope: !10794, file: !7754, line: 373, type: !113)
!10794 = distinct !DISubprogram(name: "__RBIT", scope: !7754, file: !7754, line: 373, type: !8994, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10795)
!10795 = !{!10793, !10796}
!10796 = !DILocalVariable(name: "result", scope: !10794, file: !7754, line: 375, type: !113)
!10797 = !DILocation(line: 0, scope: !10794, inlinedAt: !10798)
!10798 = distinct !DILocation(line: 623, column: 3, scope: !10784)
!10799 = !DILocation(line: 380, column: 4, scope: !10794, inlinedAt: !10798)
!10800 = !{i64 2452256}
!10801 = !DILocalVariable(name: "value", arg: 1, scope: !10802, file: !7754, line: 403, type: !113)
!10802 = distinct !DISubprogram(name: "__CLZ", scope: !7754, file: !7754, line: 403, type: !10803, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10805)
!10803 = !DISubroutineType(types: !10804)
!10804 = !{!169, !113}
!10805 = !{!10801}
!10806 = !DILocation(line: 0, scope: !10802, inlinedAt: !10807)
!10807 = distinct !DILocation(line: 623, column: 3, scope: !10784)
!10808 = !DILocation(line: 414, column: 7, scope: !10802, inlinedAt: !10807)
!10809 = !DILocation(line: 624, column: 1, scope: !10784)
!10810 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10554, file: !10554, line: 69, type: !10811, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10813)
!10811 = !DISubroutineType(types: !10812)
!10812 = !{null, !10557, !1246, !113}
!10813 = !{!10814, !10815, !10816, !10817, !10818}
!10814 = !DILocalVariable(name: "list", arg: 1, scope: !10810, file: !10554, line: 69, type: !10557)
!10815 = !DILocalVariable(name: "port", arg: 2, scope: !10810, file: !10554, line: 70, type: !1246)
!10816 = !DILocalVariable(name: "pins", arg: 3, scope: !10810, file: !10554, line: 71, type: !113)
!10817 = !DILocalVariable(name: "cb", scope: !10810, file: !10554, line: 73, type: !1283)
!10818 = !DILocalVariable(name: "tmp", scope: !10810, file: !10554, line: 73, type: !1283)
!10819 = !DILocation(line: 0, scope: !10810)
!10820 = !DILocation(line: 75, column: 2, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10810, file: !10554, line: 75, column: 2)
!10822 = !DILocation(line: 0, scope: !10821)
!10823 = !DILocation(line: 76, column: 11, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10825, file: !10554, line: 76, column: 7)
!10825 = distinct !DILexicalBlock(scope: !10826, file: !10554, line: 75, column: 57)
!10826 = distinct !DILexicalBlock(scope: !10821, file: !10554, line: 75, column: 2)
!10827 = !DILocation(line: 76, column: 20, scope: !10824)
!10828 = !DILocation(line: 76, column: 7, scope: !10825)
!10829 = !DILocation(line: 77, column: 4, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10831, file: !10554, line: 77, column: 4)
!10831 = distinct !DILexicalBlock(scope: !10832, file: !10554, line: 77, column: 4)
!10832 = distinct !DILexicalBlock(scope: !10824, file: !10554, line: 76, column: 28)
!10833 = !DILocation(line: 77, column: 4, scope: !10831)
!10834 = !DILocation(line: 77, column: 4, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10830, file: !10554, line: 77, column: 4)
!10836 = !DILocation(line: 78, column: 4, scope: !10832)
!10837 = !DILocation(line: 79, column: 3, scope: !10832)
!10838 = !DILocation(line: 75, column: 2, scope: !10826)
!10839 = !DILocation(line: 81, column: 1, scope: !10810)
!10840 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !10785, file: !10785, line: 721, type: !8994, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10841)
!10841 = !{!10842}
!10842 = !DILocalVariable(name: "Line", arg: 1, scope: !10840, file: !10785, line: 721, type: !113)
!10843 = !DILocation(line: 0, scope: !10840)
!10844 = !DILocation(line: 723, column: 21, scope: !10840)
!10845 = !DILocation(line: 0, scope: !10794, inlinedAt: !10846)
!10846 = distinct !DILocation(line: 723, column: 76, scope: !10840)
!10847 = !DILocation(line: 380, column: 4, scope: !10794, inlinedAt: !10846)
!10848 = !DILocation(line: 0, scope: !10802, inlinedAt: !10849)
!10849 = distinct !DILocation(line: 723, column: 76, scope: !10840)
!10850 = !DILocation(line: 414, column: 7, scope: !10802, inlinedAt: !10849)
!10851 = !DILocation(line: 723, column: 73, scope: !10840)
!10852 = !DILocation(line: 723, column: 3, scope: !10840)
!10853 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10854, file: !10854, line: 913, type: !10855, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10857)
!10854 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10855 = !DISubroutineType(types: !10856)
!10856 = !{null, !1313, !113}
!10857 = !{!10858, !10859}
!10858 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10853, file: !10854, line: 913, type: !1313)
!10859 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10853, file: !10854, line: 913, type: !113)
!10860 = !DILocation(line: 0, scope: !10853)
!10861 = !DILocation(line: 918, column: 3, scope: !10853)
!10862 = !DILocation(line: 920, column: 1, scope: !10853)
!10863 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10854, file: !10854, line: 825, type: !10864, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10866)
!10864 = !DISubroutineType(types: !10865)
!10865 = !{!113, !1313}
!10866 = !{!10867}
!10867 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10863, file: !10854, line: 825, type: !1313)
!10868 = !DILocation(line: 0, scope: !10863)
!10869 = !DILocation(line: 827, column: 21, scope: !10863)
!10870 = !DILocation(line: 827, column: 3, scope: !10863)
!10871 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10854, file: !10854, line: 814, type: !10855, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10872)
!10872 = !{!10873, !10874}
!10873 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10871, file: !10854, line: 814, type: !1313)
!10874 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10871, file: !10854, line: 814, type: !113)
!10875 = !DILocation(line: 0, scope: !10871)
!10876 = !DILocation(line: 816, column: 3, scope: !10871)
!10877 = !DILocation(line: 817, column: 1, scope: !10871)
!10878 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10854, file: !10854, line: 773, type: !10864, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10879)
!10879 = !{!10880}
!10880 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10878, file: !10854, line: 773, type: !1313)
!10881 = !DILocation(line: 0, scope: !10878)
!10882 = !DILocation(line: 775, column: 21, scope: !10878)
!10883 = !DILocation(line: 775, column: 3, scope: !10878)
!10884 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1378, file: !1378, line: 47, type: !10885, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10887)
!10885 = !DISubroutineType(types: !10886)
!10886 = !{!105, !797, !428}
!10887 = !{!10888, !10889}
!10888 = !DILocalVariable(name: "flags", arg: 1, scope: !10884, file: !1378, line: 47, type: !797)
!10889 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10884, file: !1378, line: 47, type: !428)
!10890 = !DILocation(line: 0, scope: !10884)
!10891 = !DILocation(line: 50, column: 13, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10884, file: !1378, line: 50, column: 6)
!10893 = !DILocation(line: 50, column: 28, scope: !10892)
!10894 = !DILocation(line: 50, column: 6, scope: !10884)
!10895 = !DILocation(line: 53, column: 11, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10892, file: !1378, line: 50, column: 34)
!10897 = !DILocation(line: 55, column: 14, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10896, file: !1378, line: 55, column: 7)
!10899 = !DILocation(line: 55, column: 35, scope: !10898)
!10900 = !DILocation(line: 55, column: 7, scope: !10896)
!10901 = !DILocation(line: 56, column: 14, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10903, file: !1378, line: 56, column: 8)
!10903 = distinct !DILexicalBlock(scope: !10898, file: !1378, line: 55, column: 41)
!10904 = !DILocation(line: 56, column: 8, scope: !10903)
!10905 = !DILocation(line: 0, scope: !10898)
!10906 = !DILocation(line: 66, column: 14, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10896, file: !1378, line: 66, column: 7)
!10908 = !DILocation(line: 66, column: 30, scope: !10907)
!10909 = !DILocation(line: 66, column: 7, scope: !10896)
!10910 = !DILocation(line: 67, column: 12, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10907, file: !1378, line: 66, column: 36)
!10912 = !DILocation(line: 68, column: 3, scope: !10911)
!10913 = !DILocation(line: 68, column: 21, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10907, file: !1378, line: 68, column: 14)
!10915 = !DILocation(line: 68, column: 39, scope: !10914)
!10916 = !DILocation(line: 68, column: 14, scope: !10907)
!10917 = !DILocation(line: 69, column: 12, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10914, file: !1378, line: 68, column: 45)
!10919 = !DILocation(line: 70, column: 3, scope: !10918)
!10920 = !DILocation(line: 72, column: 21, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10892, file: !1378, line: 72, column: 14)
!10922 = !DILocation(line: 72, column: 35, scope: !10921)
!10923 = !DILocation(line: 72, column: 14, scope: !10892)
!10924 = !DILocation(line: 77, column: 14, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10926, file: !1378, line: 77, column: 7)
!10926 = distinct !DILexicalBlock(scope: !10921, file: !1378, line: 72, column: 41)
!10927 = !DILocation(line: 77, column: 30, scope: !10925)
!10928 = !DILocation(line: 77, column: 7, scope: !10926)
!10929 = !DILocation(line: 0, scope: !10892)
!10930 = !DILocation(line: 90, column: 1, scope: !10884)
!10931 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1378, file: !1378, line: 157, type: !10932, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10934)
!10932 = !DISubroutineType(types: !10933)
!10933 = !{null, !1246, !105, !105, !105}
!10934 = !{!10935, !10936, !10937, !10938, !10939, !10940, !10941, !10942, !10943, !10944, !10945}
!10935 = !DILocalVariable(name: "dev", arg: 1, scope: !10931, file: !1378, line: 157, type: !1246)
!10936 = !DILocalVariable(name: "pin", arg: 2, scope: !10931, file: !1378, line: 157, type: !105)
!10937 = !DILocalVariable(name: "conf", arg: 3, scope: !10931, file: !1378, line: 158, type: !105)
!10938 = !DILocalVariable(name: "func", arg: 4, scope: !10931, file: !1378, line: 158, type: !105)
!10939 = !DILocalVariable(name: "cfg", scope: !10931, file: !1378, line: 160, type: !10438)
!10940 = !DILocalVariable(name: "gpio", scope: !10931, file: !1378, line: 161, type: !1313)
!10941 = !DILocalVariable(name: "pin_ll", scope: !10931, file: !1378, line: 163, type: !105)
!10942 = !DILocalVariable(name: "mode", scope: !10931, file: !1378, line: 227, type: !32)
!10943 = !DILocalVariable(name: "otype", scope: !10931, file: !1378, line: 227, type: !32)
!10944 = !DILocalVariable(name: "ospeed", scope: !10931, file: !1378, line: 227, type: !32)
!10945 = !DILocalVariable(name: "pupd", scope: !10931, file: !1378, line: 227, type: !32)
!10946 = !DILocation(line: 0, scope: !10931)
!10947 = !DILocation(line: 160, column: 45, scope: !10931)
!10948 = !DILocation(line: 161, column: 44, scope: !10931)
!10949 = !DILocation(line: 163, column: 15, scope: !10931)
!10950 = !DILocation(line: 229, column: 14, scope: !10931)
!10951 = !DILocation(line: 246, column: 47, scope: !10931)
!10952 = !DILocation(line: 246, column: 2, scope: !10931)
!10953 = !DILocation(line: 248, column: 43, scope: !10931)
!10954 = !DILocation(line: 248, column: 2, scope: !10931)
!10955 = !DILocation(line: 250, column: 40, scope: !10931)
!10956 = !DILocation(line: 250, column: 2, scope: !10931)
!10957 = !DILocation(line: 252, column: 11, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10931, file: !1378, line: 252, column: 6)
!10959 = !DILocation(line: 252, column: 6, scope: !10931)
!10960 = !DILocation(line: 253, column: 11, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10962, file: !1378, line: 253, column: 7)
!10962 = distinct !DILexicalBlock(scope: !10958, file: !1378, line: 252, column: 36)
!10963 = !DILocation(line: 253, column: 7, scope: !10962)
!10964 = !DILocation(line: 254, column: 4, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10961, file: !1378, line: 253, column: 16)
!10966 = !DILocation(line: 255, column: 3, scope: !10965)
!10967 = !DILocation(line: 256, column: 4, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10961, file: !1378, line: 255, column: 10)
!10969 = !DILocation(line: 260, column: 40, scope: !10931)
!10970 = !DILocation(line: 260, column: 2, scope: !10931)
!10971 = !DILocation(line: 265, column: 1, scope: !10931)
!10972 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1378, file: !1378, line: 137, type: !10773, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10973)
!10973 = !{!10974, !10975}
!10974 = !DILocalVariable(name: "pin", arg: 1, scope: !10972, file: !1378, line: 137, type: !105)
!10975 = !DILocalVariable(name: "pinval", scope: !10972, file: !1378, line: 139, type: !113)
!10976 = !DILocation(line: 0, scope: !10972)
!10977 = !DILocation(line: 149, column: 13, scope: !10972)
!10978 = !DILocation(line: 151, column: 2, scope: !10972)
!10979 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10854, file: !10854, line: 343, type: !10980, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10982)
!10980 = !DISubroutineType(types: !10981)
!10981 = !{null, !1313, !113, !113}
!10982 = !{!10983, !10984, !10985}
!10983 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10979, file: !10854, line: 343, type: !1313)
!10984 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10979, file: !10854, line: 343, type: !113)
!10985 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10979, file: !10854, line: 343, type: !113)
!10986 = !DILocation(line: 0, scope: !10979)
!10987 = !DILocation(line: 345, column: 3, scope: !10979)
!10988 = !DILocation(line: 346, column: 1, scope: !10979)
!10989 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10854, file: !10854, line: 414, type: !10980, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !10990)
!10990 = !{!10991, !10992, !10993}
!10991 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10989, file: !10854, line: 414, type: !1313)
!10992 = !DILocalVariable(name: "Pin", arg: 2, scope: !10989, file: !10854, line: 414, type: !113)
!10993 = !DILocalVariable(name: "Speed", arg: 3, scope: !10989, file: !10854, line: 414, type: !113)
!10994 = !DILocation(line: 0, scope: !10989)
!10995 = !DILocation(line: 416, column: 3, scope: !10989)
!10996 = !DILocation(line: 0, scope: !10794, inlinedAt: !10997)
!10997 = distinct !DILocation(line: 416, column: 3, scope: !10989)
!10998 = !DILocation(line: 380, column: 4, scope: !10794, inlinedAt: !10997)
!10999 = !DILocation(line: 0, scope: !10802, inlinedAt: !11000)
!11000 = distinct !DILocation(line: 416, column: 3, scope: !10989)
!11001 = !DILocation(line: 414, column: 7, scope: !10802, inlinedAt: !11000)
!11002 = !DILocation(line: 0, scope: !10794, inlinedAt: !11003)
!11003 = distinct !DILocation(line: 416, column: 3, scope: !10989)
!11004 = !DILocation(line: 0, scope: !10802, inlinedAt: !11005)
!11005 = distinct !DILocation(line: 416, column: 3, scope: !10989)
!11006 = !DILocation(line: 418, column: 1, scope: !10989)
!11007 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10854, file: !10854, line: 485, type: !10980, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !11008)
!11008 = !{!11009, !11010, !11011}
!11009 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11007, file: !10854, line: 485, type: !1313)
!11010 = !DILocalVariable(name: "Pin", arg: 2, scope: !11007, file: !10854, line: 485, type: !113)
!11011 = !DILocalVariable(name: "Pull", arg: 3, scope: !11007, file: !10854, line: 485, type: !113)
!11012 = !DILocation(line: 0, scope: !11007)
!11013 = !DILocation(line: 487, column: 3, scope: !11007)
!11014 = !DILocation(line: 0, scope: !10794, inlinedAt: !11015)
!11015 = distinct !DILocation(line: 487, column: 3, scope: !11007)
!11016 = !DILocation(line: 380, column: 4, scope: !10794, inlinedAt: !11015)
!11017 = !DILocation(line: 0, scope: !10802, inlinedAt: !11018)
!11018 = distinct !DILocation(line: 487, column: 3, scope: !11007)
!11019 = !DILocation(line: 414, column: 7, scope: !10802, inlinedAt: !11018)
!11020 = !DILocation(line: 0, scope: !10794, inlinedAt: !11021)
!11021 = distinct !DILocation(line: 487, column: 3, scope: !11007)
!11022 = !DILocation(line: 0, scope: !10802, inlinedAt: !11023)
!11023 = distinct !DILocation(line: 487, column: 3, scope: !11007)
!11024 = !DILocation(line: 488, column: 1, scope: !11007)
!11025 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10854, file: !10854, line: 557, type: !10980, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !11026)
!11026 = !{!11027, !11028, !11029}
!11027 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11025, file: !10854, line: 557, type: !1313)
!11028 = !DILocalVariable(name: "Pin", arg: 2, scope: !11025, file: !10854, line: 557, type: !113)
!11029 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11025, file: !10854, line: 557, type: !113)
!11030 = !DILocation(line: 0, scope: !11025)
!11031 = !DILocation(line: 559, column: 3, scope: !11025)
!11032 = !DILocation(line: 0, scope: !10794, inlinedAt: !11033)
!11033 = distinct !DILocation(line: 559, column: 3, scope: !11025)
!11034 = !DILocation(line: 380, column: 4, scope: !10794, inlinedAt: !11033)
!11035 = !DILocation(line: 0, scope: !10802, inlinedAt: !11036)
!11036 = distinct !DILocation(line: 559, column: 3, scope: !11025)
!11037 = !DILocation(line: 414, column: 7, scope: !10802, inlinedAt: !11036)
!11038 = !DILocation(line: 0, scope: !10794, inlinedAt: !11039)
!11039 = distinct !DILocation(line: 559, column: 3, scope: !11025)
!11040 = !DILocation(line: 0, scope: !10802, inlinedAt: !11041)
!11041 = distinct !DILocation(line: 559, column: 3, scope: !11025)
!11042 = !DILocation(line: 561, column: 1, scope: !11025)
!11043 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10854, file: !10854, line: 634, type: !10980, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !11044)
!11044 = !{!11045, !11046, !11047}
!11045 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11043, file: !10854, line: 634, type: !1313)
!11046 = !DILocalVariable(name: "Pin", arg: 2, scope: !11043, file: !10854, line: 634, type: !113)
!11047 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11043, file: !10854, line: 634, type: !113)
!11048 = !DILocation(line: 0, scope: !11043)
!11049 = !DILocation(line: 636, column: 3, scope: !11043)
!11050 = !DILocation(line: 0, scope: !10794, inlinedAt: !11051)
!11051 = distinct !DILocation(line: 636, column: 3, scope: !11043)
!11052 = !DILocation(line: 380, column: 4, scope: !10794, inlinedAt: !11051)
!11053 = !DILocation(line: 0, scope: !10802, inlinedAt: !11054)
!11054 = distinct !DILocation(line: 636, column: 3, scope: !11043)
!11055 = !DILocation(line: 414, column: 7, scope: !10802, inlinedAt: !11054)
!11056 = !DILocation(line: 0, scope: !10794, inlinedAt: !11057)
!11057 = distinct !DILocation(line: 636, column: 3, scope: !11043)
!11058 = !DILocation(line: 0, scope: !10802, inlinedAt: !11059)
!11059 = distinct !DILocation(line: 636, column: 3, scope: !11043)
!11060 = !DILocation(line: 638, column: 1, scope: !11043)
!11061 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10854, file: !10854, line: 274, type: !10980, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !11062)
!11062 = !{!11063, !11064, !11065}
!11063 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11061, file: !10854, line: 274, type: !1313)
!11064 = !DILocalVariable(name: "Pin", arg: 2, scope: !11061, file: !10854, line: 274, type: !113)
!11065 = !DILocalVariable(name: "Mode", arg: 3, scope: !11061, file: !10854, line: 274, type: !113)
!11066 = !DILocation(line: 0, scope: !11061)
!11067 = !DILocation(line: 276, column: 3, scope: !11061)
!11068 = !DILocation(line: 0, scope: !10794, inlinedAt: !11069)
!11069 = distinct !DILocation(line: 276, column: 3, scope: !11061)
!11070 = !DILocation(line: 380, column: 4, scope: !10794, inlinedAt: !11069)
!11071 = !DILocation(line: 0, scope: !10802, inlinedAt: !11072)
!11072 = distinct !DILocation(line: 276, column: 3, scope: !11061)
!11073 = !DILocation(line: 414, column: 7, scope: !10802, inlinedAt: !11072)
!11074 = !DILocation(line: 0, scope: !10794, inlinedAt: !11075)
!11075 = distinct !DILocation(line: 276, column: 3, scope: !11061)
!11076 = !DILocation(line: 0, scope: !10802, inlinedAt: !11077)
!11077 = distinct !DILocation(line: 276, column: 3, scope: !11061)
!11078 = !DILocation(line: 277, column: 1, scope: !11061)
!11079 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1378, file: !1378, line: 698, type: !1391, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !11080)
!11080 = !{!11081, !11082, !11083}
!11081 = !DILocalVariable(name: "dev", arg: 1, scope: !11079, file: !1378, line: 698, type: !1246)
!11082 = !DILocalVariable(name: "data", scope: !11079, file: !1378, line: 700, type: !10505)
!11083 = !DILocalVariable(name: "ret", scope: !11079, file: !1378, line: 701, type: !105)
!11084 = !DILocation(line: 0, scope: !11079)
!11085 = !DILocation(line: 700, column: 38, scope: !11079)
!11086 = !DILocation(line: 703, column: 8, scope: !11079)
!11087 = !DILocation(line: 703, column: 12, scope: !11079)
!11088 = !DILocation(line: 705, column: 7, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11079, file: !1378, line: 705, column: 6)
!11090 = !DILocation(line: 705, column: 6, scope: !11079)
!11091 = !DILocation(line: 722, column: 8, scope: !11079)
!11092 = !DILocation(line: 723, column: 10, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11079, file: !1378, line: 723, column: 6)
!11094 = !DILocation(line: 723, column: 6, scope: !11079)
!11095 = !DILocation(line: 731, column: 1, scope: !11079)
!11096 = distinct !DISubprogram(name: "device_is_ready", scope: !9632, file: !9632, line: 47, type: !11097, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !11099)
!11097 = !DISubroutineType(types: !11098)
!11098 = !{!505, !1246}
!11099 = !{!11100}
!11100 = !DILocalVariable(name: "dev", arg: 1, scope: !11096, file: !9632, line: 47, type: !1246)
!11101 = !DILocation(line: 0, scope: !11096)
!11102 = !DILocation(line: 55, column: 2, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11096, file: !9632, line: 55, column: 2)
!11104 = !{i64 2152415543}
!11105 = !DILocation(line: 56, column: 9, scope: !11096)
!11106 = !DILocation(line: 56, column: 2, scope: !11096)
!11107 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1378, file: !1378, line: 270, type: !11108, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !11110)
!11108 = !DISubroutineType(types: !11109)
!11109 = !{!105, !1246, !505}
!11110 = !{!11111, !11112, !11113, !11114, !11115}
!11111 = !DILocalVariable(name: "dev", arg: 1, scope: !11107, file: !1378, line: 270, type: !1246)
!11112 = !DILocalVariable(name: "on", arg: 2, scope: !11107, file: !1378, line: 270, type: !505)
!11113 = !DILocalVariable(name: "cfg", scope: !11107, file: !1378, line: 272, type: !10438)
!11114 = !DILocalVariable(name: "ret", scope: !11107, file: !1378, line: 273, type: !105)
!11115 = !DILocalVariable(name: "clk", scope: !11107, file: !1378, line: 278, type: !10740)
!11116 = !DILocation(line: 0, scope: !11107)
!11117 = !DILocation(line: 272, column: 45, scope: !11107)
!11118 = !DILocation(line: 282, column: 38, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11120, file: !1378, line: 280, column: 10)
!11120 = distinct !DILexicalBlock(scope: !11107, file: !1378, line: 280, column: 6)
!11121 = !DILocation(line: 282, column: 6, scope: !11119)
!11122 = !DILocation(line: 281, column: 9, scope: !11119)
!11123 = !DILocation(line: 293, column: 1, scope: !11107)
!11124 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !494, file: !494, line: 730, type: !11097, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !11125)
!11125 = !{!11126}
!11126 = !DILocalVariable(name: "dev", arg: 1, scope: !11124, file: !494, line: 730, type: !1246)
!11127 = !DILocation(line: 0, scope: !11124)
!11128 = !DILocation(line: 732, column: 9, scope: !11124)
!11129 = !DILocation(line: 732, column: 2, scope: !11124)
!11130 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1378, file: !1378, line: 496, type: !11131, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !11133)
!11131 = !DISubroutineType(types: !11132)
!11132 = !{!105, !1246, !105, !105, !105}
!11133 = !{!11134, !11135, !11136, !11137, !11138, !11139}
!11134 = !DILocalVariable(name: "dev", arg: 1, scope: !11130, file: !1378, line: 496, type: !1246)
!11135 = !DILocalVariable(name: "pin", arg: 2, scope: !11130, file: !1378, line: 496, type: !105)
!11136 = !DILocalVariable(name: "conf", arg: 3, scope: !11130, file: !1378, line: 496, type: !105)
!11137 = !DILocalVariable(name: "func", arg: 4, scope: !11130, file: !1378, line: 496, type: !105)
!11138 = !DILocalVariable(name: "ret", scope: !11130, file: !1378, line: 498, type: !105)
!11139 = !DILocalVariable(name: "gpio_out", scope: !11140, file: !1378, line: 508, type: !113)
!11140 = distinct !DILexicalBlock(scope: !11141, file: !1378, line: 507, column: 27)
!11141 = distinct !DILexicalBlock(scope: !11130, file: !1378, line: 507, column: 6)
!11142 = !DILocation(line: 0, scope: !11130)
!11143 = !DILocation(line: 505, column: 2, scope: !11130)
!11144 = !DILocation(line: 507, column: 11, scope: !11141)
!11145 = !DILocation(line: 507, column: 6, scope: !11130)
!11146 = !DILocation(line: 508, column: 28, scope: !11140)
!11147 = !DILocation(line: 0, scope: !11140)
!11148 = !DILocation(line: 510, column: 16, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11140, file: !1378, line: 510, column: 7)
!11150 = !DILocation(line: 0, scope: !11149)
!11151 = !DILocation(line: 510, column: 7, scope: !11140)
!11152 = !DILocation(line: 511, column: 4, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11149, file: !1378, line: 510, column: 32)
!11154 = !DILocation(line: 512, column: 3, scope: !11153)
!11155 = !DILocation(line: 513, column: 4, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11157, file: !1378, line: 512, column: 39)
!11157 = distinct !DILexicalBlock(scope: !11149, file: !1378, line: 512, column: 14)
!11158 = !DILocation(line: 514, column: 3, scope: !11156)
!11159 = !DILocation(line: 518, column: 1, scope: !11130)
!11160 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1635, file: !1635, line: 526, type: !1539, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11161)
!11161 = !{!11162, !11163, !11164}
!11162 = !DILocalVariable(name: "dev", arg: 1, scope: !11160, file: !1635, line: 526, type: !1541)
!11163 = !DILocalVariable(name: "c", arg: 2, scope: !11160, file: !1635, line: 526, type: !1189)
!11164 = !DILocalVariable(name: "config", scope: !11160, file: !1635, line: 528, type: !11165)
!11165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 32)
!11166 = !DILocation(line: 0, scope: !11160)
!11167 = !DILocation(line: 528, column: 48, scope: !11160)
!11168 = !DILocation(line: 531, column: 40, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11160, file: !1635, line: 531, column: 6)
!11170 = !DILocation(line: 531, column: 6, scope: !11169)
!11171 = !DILocation(line: 531, column: 6, scope: !11160)
!11172 = !DILocation(line: 532, column: 34, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11169, file: !1635, line: 531, column: 48)
!11174 = !DILocation(line: 532, column: 3, scope: !11173)
!11175 = !DILocation(line: 533, column: 2, scope: !11173)
!11176 = !DILocation(line: 539, column: 42, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11160, file: !1635, line: 539, column: 6)
!11178 = !DILocation(line: 539, column: 7, scope: !11177)
!11179 = !DILocation(line: 539, column: 6, scope: !11160)
!11180 = !DILocation(line: 543, column: 52, scope: !11160)
!11181 = !DILocation(line: 543, column: 22, scope: !11160)
!11182 = !DILocation(line: 543, column: 5, scope: !11160)
!11183 = !DILocation(line: 545, column: 2, scope: !11160)
!11184 = !DILocation(line: 546, column: 1, scope: !11160)
!11185 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1635, file: !1635, line: 548, type: !1558, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11186)
!11186 = !{!11187, !11188, !11189, !11190}
!11187 = !DILocalVariable(name: "dev", arg: 1, scope: !11185, file: !1635, line: 548, type: !1541)
!11188 = !DILocalVariable(name: "c", arg: 2, scope: !11185, file: !1635, line: 549, type: !170)
!11189 = !DILocalVariable(name: "config", scope: !11185, file: !1635, line: 551, type: !11165)
!11190 = !DILocalVariable(name: "key", scope: !11185, file: !1635, line: 555, type: !32)
!11191 = !DILocation(line: 0, scope: !11185)
!11192 = !DILocation(line: 551, column: 48, scope: !11185)
!11193 = !DILocation(line: 562, column: 2, scope: !11185)
!11194 = !DILocation(line: 563, column: 41, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11196, file: !1635, line: 563, column: 7)
!11196 = distinct !DILexicalBlock(scope: !11185, file: !1635, line: 562, column: 12)
!11197 = !DILocation(line: 563, column: 7, scope: !11195)
!11198 = !DILocation(line: 563, column: 7, scope: !11196)
!11199 = !DILocation(line: 55, column: 2, scope: !11200, inlinedAt: !11204)
!11200 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7419, file: !7419, line: 42, type: !7420, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11201)
!11201 = !{!11202, !11203}
!11202 = !DILocalVariable(name: "key", scope: !11200, file: !7419, line: 44, type: !32)
!11203 = !DILocalVariable(name: "tmp", scope: !11200, file: !7419, line: 53, type: !32)
!11204 = distinct !DILocation(line: 564, column: 10, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11195, file: !1635, line: 563, column: 49)
!11206 = !{i64 1701605}
!11207 = !DILocation(line: 0, scope: !11200, inlinedAt: !11204)
!11208 = !DILocation(line: 565, column: 42, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11205, file: !1635, line: 565, column: 8)
!11210 = !DILocation(line: 565, column: 8, scope: !11209)
!11211 = !DILocation(line: 565, column: 8, scope: !11205)
!11212 = !DILocalVariable(name: "key", arg: 1, scope: !11213, file: !7419, line: 84, type: !32)
!11213 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7419, file: !7419, line: 84, type: !7430, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11214)
!11214 = !{!11212}
!11215 = !DILocation(line: 0, scope: !11213, inlinedAt: !11216)
!11216 = distinct !DILocation(line: 568, column: 4, scope: !11205)
!11217 = !DILocation(line: 95, column: 2, scope: !11213, inlinedAt: !11216)
!11218 = !{i64 1702422}
!11219 = !DILocation(line: 569, column: 3, scope: !11205)
!11220 = distinct !{!11220, !11193, !11221}
!11221 = !DILocation(line: 570, column: 2, scope: !11185)
!11222 = !DILocation(line: 592, column: 33, scope: !11185)
!11223 = !DILocation(line: 592, column: 2, scope: !11185)
!11224 = !DILocation(line: 0, scope: !11213, inlinedAt: !11225)
!11225 = distinct !DILocation(line: 593, column: 2, scope: !11185)
!11226 = !DILocation(line: 95, column: 2, scope: !11213, inlinedAt: !11225)
!11227 = !DILocation(line: 594, column: 1, scope: !11185)
!11228 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1635, file: !1635, line: 596, type: !1562, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11229)
!11229 = !{!11230, !11231, !11232}
!11230 = !DILocalVariable(name: "dev", arg: 1, scope: !11228, file: !1635, line: 596, type: !1541)
!11231 = !DILocalVariable(name: "config", scope: !11228, file: !1635, line: 598, type: !11165)
!11232 = !DILocalVariable(name: "err", scope: !11228, file: !1635, line: 599, type: !113)
!11233 = !DILocation(line: 0, scope: !11228)
!11234 = !DILocation(line: 598, column: 48, scope: !11228)
!11235 = !DILocation(line: 606, column: 40, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11228, file: !1635, line: 606, column: 6)
!11237 = !DILocation(line: 606, column: 6, scope: !11236)
!11238 = !DILocation(line: 606, column: 6, scope: !11228)
!11239 = !DILocation(line: 610, column: 39, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11228, file: !1635, line: 610, column: 6)
!11241 = !DILocation(line: 610, column: 6, scope: !11240)
!11242 = !DILocation(line: 610, column: 6, scope: !11228)
!11243 = !DILocation(line: 614, column: 39, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11228, file: !1635, line: 614, column: 6)
!11245 = !DILocation(line: 614, column: 6, scope: !11244)
!11246 = !DILocation(line: 614, column: 6, scope: !11228)
!11247 = !DILocation(line: 619, column: 40, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11228, file: !1635, line: 619, column: 6)
!11249 = !DILocation(line: 619, column: 6, scope: !11248)
!11250 = !DILocation(line: 619, column: 6, scope: !11228)
!11251 = !DILocation(line: 623, column: 10, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11228, file: !1635, line: 623, column: 6)
!11253 = !DILocation(line: 623, column: 6, scope: !11228)
!11254 = !DILocation(line: 624, column: 34, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11252, file: !1635, line: 623, column: 24)
!11256 = !DILocation(line: 624, column: 3, scope: !11255)
!11257 = !DILocation(line: 625, column: 2, scope: !11255)
!11258 = !DILocation(line: 632, column: 10, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11228, file: !1635, line: 632, column: 6)
!11260 = !DILocation(line: 632, column: 6, scope: !11228)
!11261 = !DILocation(line: 633, column: 34, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11259, file: !1635, line: 632, column: 32)
!11263 = !DILocation(line: 633, column: 3, scope: !11262)
!11264 = !DILocation(line: 634, column: 2, scope: !11262)
!11265 = !DILocation(line: 636, column: 10, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11228, file: !1635, line: 636, column: 6)
!11267 = !DILocation(line: 636, column: 6, scope: !11228)
!11268 = !DILocation(line: 637, column: 33, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11266, file: !1635, line: 636, column: 31)
!11270 = !DILocation(line: 637, column: 3, scope: !11269)
!11271 = !DILocation(line: 638, column: 2, scope: !11269)
!11272 = !DILocation(line: 640, column: 10, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11228, file: !1635, line: 640, column: 6)
!11274 = !DILocation(line: 640, column: 6, scope: !11228)
!11275 = !DILocation(line: 641, column: 33, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11273, file: !1635, line: 640, column: 32)
!11277 = !DILocation(line: 641, column: 3, scope: !11276)
!11278 = !DILocation(line: 642, column: 2, scope: !11276)
!11279 = !DILocation(line: 646, column: 32, scope: !11228)
!11280 = !DILocation(line: 646, column: 2, scope: !11228)
!11281 = !DILocation(line: 648, column: 2, scope: !11228)
!11282 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1635, file: !1635, line: 419, type: !1566, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11283)
!11283 = !{!11284, !11285, !11286, !11287, !11289, !11290, !11291, !11292}
!11284 = !DILocalVariable(name: "dev", arg: 1, scope: !11282, file: !1635, line: 419, type: !1541)
!11285 = !DILocalVariable(name: "cfg", arg: 2, scope: !11282, file: !1635, line: 420, type: !1568)
!11286 = !DILocalVariable(name: "config", scope: !11282, file: !1635, line: 422, type: !11165)
!11287 = !DILocalVariable(name: "data", scope: !11282, file: !1635, line: 423, type: !11288)
!11288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!11289 = !DILocalVariable(name: "parity", scope: !11282, file: !1635, line: 424, type: !3712)
!11290 = !DILocalVariable(name: "stopbits", scope: !11282, file: !1635, line: 425, type: !3712)
!11291 = !DILocalVariable(name: "databits", scope: !11282, file: !1635, line: 426, type: !3712)
!11292 = !DILocalVariable(name: "flowctrl", scope: !11282, file: !1635, line: 428, type: !3712)
!11293 = !DILocation(line: 0, scope: !11282)
!11294 = !DILocation(line: 422, column: 48, scope: !11282)
!11295 = !DILocation(line: 423, column: 38, scope: !11282)
!11296 = !DILocation(line: 424, column: 56, scope: !11282)
!11297 = !DILocation(line: 424, column: 51, scope: !11282)
!11298 = !DILocation(line: 424, column: 26, scope: !11282)
!11299 = !DILocation(line: 425, column: 60, scope: !11282)
!11300 = !DILocation(line: 425, column: 55, scope: !11282)
!11301 = !DILocation(line: 425, column: 28, scope: !11282)
!11302 = !DILocation(line: 426, column: 60, scope: !11282)
!11303 = !DILocation(line: 426, column: 55, scope: !11282)
!11304 = !DILocation(line: 426, column: 28, scope: !11282)
!11305 = !DILocation(line: 428, column: 58, scope: !11282)
!11306 = !DILocation(line: 428, column: 53, scope: !11282)
!11307 = !DILocation(line: 428, column: 28, scope: !11282)
!11308 = !DILocation(line: 431, column: 44, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11282, file: !1635, line: 431, column: 6)
!11310 = !DILocation(line: 438, column: 22, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11282, file: !1635, line: 437, column: 6)
!11312 = !DILocation(line: 437, column: 6, scope: !11282)
!11313 = !DILocation(line: 448, column: 6, scope: !11282)
!11314 = !DILocation(line: 465, column: 47, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11282, file: !1635, line: 465, column: 6)
!11316 = !DILocation(line: 475, column: 21, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11282, file: !1635, line: 475, column: 6)
!11318 = !DILocation(line: 475, column: 6, scope: !11282)
!11319 = !DILocation(line: 476, column: 8, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11321, file: !1635, line: 476, column: 7)
!11321 = distinct !DILexicalBlock(scope: !11317, file: !1635, line: 475, column: 49)
!11322 = !DILocation(line: 477, column: 34, scope: !11320)
!11323 = !DILocation(line: 476, column: 7, scope: !11321)
!11324 = !DILocation(line: 482, column: 27, scope: !11282)
!11325 = !DILocation(line: 482, column: 2, scope: !11282)
!11326 = !DILocation(line: 484, column: 16, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11282, file: !1635, line: 484, column: 6)
!11328 = !DILocation(line: 484, column: 13, scope: !11327)
!11329 = !DILocation(line: 484, column: 6, scope: !11282)
!11330 = !DILocation(line: 485, column: 3, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11327, file: !1635, line: 484, column: 44)
!11332 = !DILocation(line: 486, column: 2, scope: !11331)
!11333 = !DILocation(line: 488, column: 18, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11282, file: !1635, line: 488, column: 6)
!11335 = !DILocation(line: 488, column: 15, scope: !11334)
!11336 = !DILocation(line: 488, column: 6, scope: !11282)
!11337 = !DILocation(line: 489, column: 3, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11334, file: !1635, line: 488, column: 48)
!11339 = !DILocation(line: 490, column: 2, scope: !11338)
!11340 = !DILocation(line: 492, column: 18, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11282, file: !1635, line: 492, column: 6)
!11342 = !DILocation(line: 492, column: 15, scope: !11341)
!11343 = !DILocation(line: 492, column: 6, scope: !11282)
!11344 = !DILocation(line: 493, column: 3, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11341, file: !1635, line: 492, column: 48)
!11346 = !DILocation(line: 494, column: 2, scope: !11345)
!11347 = !DILocation(line: 496, column: 18, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11282, file: !1635, line: 496, column: 6)
!11349 = !DILocation(line: 496, column: 15, scope: !11348)
!11350 = !DILocation(line: 496, column: 6, scope: !11282)
!11351 = !DILocation(line: 497, column: 3, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11348, file: !1635, line: 496, column: 46)
!11353 = !DILocation(line: 498, column: 2, scope: !11352)
!11354 = !DILocation(line: 500, column: 11, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11282, file: !1635, line: 500, column: 6)
!11356 = !DILocation(line: 500, column: 29, scope: !11355)
!11357 = !DILocation(line: 500, column: 20, scope: !11355)
!11358 = !DILocation(line: 500, column: 6, scope: !11282)
!11359 = !DILocation(line: 501, column: 3, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11355, file: !1635, line: 500, column: 40)
!11361 = !DILocation(line: 502, column: 26, scope: !11360)
!11362 = !DILocation(line: 502, column: 19, scope: !11360)
!11363 = !DILocation(line: 503, column: 2, scope: !11360)
!11364 = !DILocation(line: 505, column: 26, scope: !11282)
!11365 = !DILocation(line: 505, column: 2, scope: !11282)
!11366 = !DILocation(line: 506, column: 2, scope: !11282)
!11367 = !DILocation(line: 507, column: 1, scope: !11282)
!11368 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1635, file: !1635, line: 509, type: !1579, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11369)
!11369 = !{!11370, !11371, !11372}
!11370 = !DILocalVariable(name: "dev", arg: 1, scope: !11368, file: !1635, line: 509, type: !1541)
!11371 = !DILocalVariable(name: "cfg", arg: 2, scope: !11368, file: !1635, line: 510, type: !1581)
!11372 = !DILocalVariable(name: "data", scope: !11368, file: !1635, line: 512, type: !11288)
!11373 = !DILocation(line: 0, scope: !11368)
!11374 = !DILocation(line: 512, column: 38, scope: !11368)
!11375 = !DILocation(line: 514, column: 24, scope: !11368)
!11376 = !DILocation(line: 514, column: 7, scope: !11368)
!11377 = !DILocation(line: 514, column: 16, scope: !11368)
!11378 = !DILocation(line: 515, column: 41, scope: !11368)
!11379 = !{i32 0, i32 1537}
!11380 = !DILocation(line: 515, column: 16, scope: !11368)
!11381 = !DILocation(line: 515, column: 7, scope: !11368)
!11382 = !DILocation(line: 515, column: 14, scope: !11368)
!11383 = !DILocation(line: 517, column: 3, scope: !11368)
!11384 = !{i32 0, i32 12289}
!11385 = !DILocation(line: 516, column: 19, scope: !11368)
!11386 = !DILocation(line: 516, column: 7, scope: !11368)
!11387 = !DILocation(line: 516, column: 17, scope: !11368)
!11388 = !DILocation(line: 519, column: 3, scope: !11368)
!11389 = !DILocation(line: 519, column: 33, scope: !11368)
!11390 = !DILocation(line: 518, column: 19, scope: !11368)
!11391 = !DILocation(line: 518, column: 7, scope: !11368)
!11392 = !DILocation(line: 518, column: 17, scope: !11368)
!11393 = !DILocation(line: 521, column: 3, scope: !11368)
!11394 = !{i32 0, i32 769}
!11395 = !DILocation(line: 520, column: 19, scope: !11368)
!11396 = !DILocation(line: 520, column: 7, scope: !11368)
!11397 = !DILocation(line: 520, column: 17, scope: !11368)
!11398 = !DILocation(line: 522, column: 2, scope: !11368)
!11399 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1635, file: !1635, line: 205, type: !11400, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11402)
!11400 = !DISubroutineType(types: !11401)
!11401 = !{!113, !1541}
!11402 = !{!11403, !11404}
!11403 = !DILocalVariable(name: "dev", arg: 1, scope: !11399, file: !1635, line: 205, type: !1541)
!11404 = !DILocalVariable(name: "config", scope: !11399, file: !1635, line: 207, type: !11165)
!11405 = !DILocation(line: 0, scope: !11399)
!11406 = !DILocation(line: 207, column: 48, scope: !11399)
!11407 = !DILocation(line: 209, column: 36, scope: !11399)
!11408 = !DILocation(line: 209, column: 9, scope: !11399)
!11409 = !DILocation(line: 209, column: 2, scope: !11399)
!11410 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1635, file: !1635, line: 270, type: !11411, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11413)
!11411 = !DISubroutineType(types: !11412)
!11412 = !{!1507, !113}
!11413 = !{!11414}
!11414 = !DILocalVariable(name: "parity", arg: 1, scope: !11410, file: !1635, line: 270, type: !113)
!11415 = !DILocation(line: 0, scope: !11410)
!11416 = !DILocation(line: 272, column: 2, scope: !11410)
!11417 = !DILocation(line: 281, column: 1, scope: !11410)
!11418 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1635, file: !1635, line: 220, type: !11400, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11419)
!11419 = !{!11420, !11421}
!11420 = !DILocalVariable(name: "dev", arg: 1, scope: !11418, file: !1635, line: 220, type: !1541)
!11421 = !DILocalVariable(name: "config", scope: !11418, file: !1635, line: 222, type: !11165)
!11422 = !DILocation(line: 0, scope: !11418)
!11423 = !DILocation(line: 222, column: 48, scope: !11418)
!11424 = !DILocation(line: 224, column: 44, scope: !11418)
!11425 = !DILocation(line: 224, column: 9, scope: !11418)
!11426 = !DILocation(line: 224, column: 2, scope: !11418)
!11427 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1635, file: !1635, line: 304, type: !11428, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11430)
!11428 = !DISubroutineType(types: !11429)
!11429 = !{!1521, !113}
!11430 = !{!11431}
!11431 = !DILocalVariable(name: "sb", arg: 1, scope: !11427, file: !1635, line: 304, type: !113)
!11432 = !DILocation(line: 0, scope: !11427)
!11433 = !DILocation(line: 306, column: 2, scope: !11427)
!11434 = !DILocation(line: 0, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11427, file: !1635, line: 306, column: 14)
!11436 = !DILocation(line: 323, column: 1, scope: !11427)
!11437 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1635, file: !1635, line: 235, type: !11400, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11438)
!11438 = !{!11439, !11440}
!11439 = !DILocalVariable(name: "dev", arg: 1, scope: !11437, file: !1635, line: 235, type: !1541)
!11440 = !DILocalVariable(name: "config", scope: !11437, file: !1635, line: 237, type: !11165)
!11441 = !DILocation(line: 0, scope: !11437)
!11442 = !DILocation(line: 237, column: 48, scope: !11437)
!11443 = !DILocation(line: 239, column: 39, scope: !11437)
!11444 = !DILocation(line: 239, column: 9, scope: !11437)
!11445 = !DILocation(line: 239, column: 2, scope: !11437)
!11446 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1635, file: !1635, line: 355, type: !11447, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11449)
!11447 = !DISubroutineType(types: !11448)
!11448 = !{!1514, !113, !113}
!11449 = !{!11450, !11451}
!11450 = !DILocalVariable(name: "db", arg: 1, scope: !11446, file: !1635, line: 355, type: !113)
!11451 = !DILocalVariable(name: "p", arg: 2, scope: !11446, file: !1635, line: 356, type: !113)
!11452 = !DILocation(line: 0, scope: !11446)
!11453 = !DILocation(line: 358, column: 2, scope: !11446)
!11454 = !DILocation(line: 384, column: 1, scope: !11446)
!11455 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1635, file: !1635, line: 250, type: !11400, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11456)
!11456 = !{!11457, !11458}
!11457 = !DILocalVariable(name: "dev", arg: 1, scope: !11455, file: !1635, line: 250, type: !1541)
!11458 = !DILocalVariable(name: "config", scope: !11455, file: !1635, line: 252, type: !11165)
!11459 = !DILocation(line: 0, scope: !11455)
!11460 = !DILocation(line: 252, column: 48, scope: !11455)
!11461 = !DILocation(line: 254, column: 40, scope: !11455)
!11462 = !DILocation(line: 254, column: 9, scope: !11455)
!11463 = !DILocation(line: 254, column: 2, scope: !11455)
!11464 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1635, file: !1635, line: 409, type: !11465, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11467)
!11465 = !DISubroutineType(types: !11466)
!11466 = !{!1527, !113}
!11467 = !{!11468}
!11468 = !DILocalVariable(name: "fc", arg: 1, scope: !11464, file: !1635, line: 409, type: !113)
!11469 = !DILocation(line: 0, scope: !11464)
!11470 = !DILocation(line: 411, column: 9, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11464, file: !1635, line: 411, column: 6)
!11472 = !DILocation(line: 416, column: 1, scope: !11464)
!11473 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11474, file: !11474, line: 966, type: !11475, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11477)
!11474 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11475 = !DISubroutineType(types: !11476)
!11476 = !{!113, !1582}
!11477 = !{!11478}
!11478 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11473, file: !11474, line: 966, type: !1582)
!11479 = !DILocation(line: 0, scope: !11473)
!11480 = !DILocation(line: 968, column: 21, scope: !11473)
!11481 = !DILocation(line: 968, column: 3, scope: !11473)
!11482 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11474, file: !11474, line: 600, type: !11475, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11483)
!11483 = !{!11484}
!11484 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11482, file: !11474, line: 600, type: !1582)
!11485 = !DILocation(line: 0, scope: !11482)
!11486 = !DILocation(line: 602, column: 21, scope: !11482)
!11487 = !DILocation(line: 602, column: 3, scope: !11482)
!11488 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11474, file: !11474, line: 819, type: !11475, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11489)
!11489 = !{!11490}
!11490 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11488, file: !11474, line: 819, type: !1582)
!11491 = !DILocation(line: 0, scope: !11488)
!11492 = !DILocation(line: 821, column: 21, scope: !11488)
!11493 = !DILocation(line: 821, column: 3, scope: !11488)
!11494 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11474, file: !11474, line: 546, type: !11475, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11495)
!11495 = !{!11496}
!11496 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11494, file: !11474, line: 546, type: !1582)
!11497 = !DILocation(line: 0, scope: !11494)
!11498 = !DILocation(line: 548, column: 21, scope: !11494)
!11499 = !DILocation(line: 548, column: 3, scope: !11494)
!11500 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1635, file: !1635, line: 257, type: !11501, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11503)
!11501 = !DISubroutineType(types: !11502)
!11502 = !{!113, !1507}
!11503 = !{!11504}
!11504 = !DILocalVariable(name: "parity", arg: 1, scope: !11500, file: !1635, line: 257, type: !1507)
!11505 = !DILocation(line: 0, scope: !11500)
!11506 = !DILocation(line: 259, column: 2, scope: !11500)
!11507 = !DILocation(line: 268, column: 1, scope: !11500)
!11508 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1635, file: !1635, line: 283, type: !11509, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11511)
!11509 = !DISubroutineType(types: !11510)
!11510 = !{!113, !1521}
!11511 = !{!11512}
!11512 = !DILocalVariable(name: "sb", arg: 1, scope: !11508, file: !1635, line: 283, type: !1521)
!11513 = !DILocation(line: 0, scope: !11508)
!11514 = !DILocation(line: 285, column: 2, scope: !11508)
!11515 = !DILocation(line: 0, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11508, file: !1635, line: 285, column: 14)
!11517 = !DILocation(line: 302, column: 1, scope: !11508)
!11518 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1635, file: !1635, line: 325, type: !11519, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11521)
!11519 = !DISubroutineType(types: !11520)
!11520 = !{!113, !1514, !1507}
!11521 = !{!11522, !11523}
!11522 = !DILocalVariable(name: "db", arg: 1, scope: !11518, file: !1635, line: 325, type: !1514)
!11523 = !DILocalVariable(name: "p", arg: 2, scope: !11518, file: !1635, line: 326, type: !1507)
!11524 = !DILocation(line: 0, scope: !11518)
!11525 = !DILocation(line: 328, column: 2, scope: !11518)
!11526 = !DILocation(line: 353, column: 1, scope: !11518)
!11527 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1635, file: !1635, line: 393, type: !11528, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11530)
!11528 = !DISubroutineType(types: !11529)
!11529 = !{!113, !1527}
!11530 = !{!11531}
!11531 = !DILocalVariable(name: "fc", arg: 1, scope: !11527, file: !1635, line: 393, type: !1527)
!11532 = !DILocation(line: 0, scope: !11527)
!11533 = !DILocation(line: 395, column: 9, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11527, file: !1635, line: 395, column: 6)
!11535 = !DILocation(line: 400, column: 1, scope: !11527)
!11536 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11474, file: !11474, line: 423, type: !11537, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11539)
!11537 = !DISubroutineType(types: !11538)
!11538 = !{null, !1582}
!11539 = !{!11540}
!11540 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11536, file: !11474, line: 423, type: !1582)
!11541 = !DILocation(line: 0, scope: !11536)
!11542 = !DILocation(line: 425, column: 3, scope: !11536)
!11543 = !DILocation(line: 426, column: 1, scope: !11536)
!11544 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1635, file: !1635, line: 197, type: !11545, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11547)
!11545 = !DISubroutineType(types: !11546)
!11546 = !{null, !1541, !113}
!11547 = !{!11548, !11549, !11550}
!11548 = !DILocalVariable(name: "dev", arg: 1, scope: !11544, file: !1635, line: 197, type: !1541)
!11549 = !DILocalVariable(name: "parity", arg: 2, scope: !11544, file: !1635, line: 198, type: !113)
!11550 = !DILocalVariable(name: "config", scope: !11544, file: !1635, line: 200, type: !11165)
!11551 = !DILocation(line: 0, scope: !11544)
!11552 = !DILocation(line: 200, column: 48, scope: !11544)
!11553 = !DILocation(line: 202, column: 29, scope: !11544)
!11554 = !DILocation(line: 202, column: 2, scope: !11544)
!11555 = !DILocation(line: 203, column: 1, scope: !11544)
!11556 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1635, file: !1635, line: 212, type: !11545, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11557)
!11557 = !{!11558, !11559, !11560}
!11558 = !DILocalVariable(name: "dev", arg: 1, scope: !11556, file: !1635, line: 212, type: !1541)
!11559 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11556, file: !1635, line: 213, type: !113)
!11560 = !DILocalVariable(name: "config", scope: !11556, file: !1635, line: 215, type: !11165)
!11561 = !DILocation(line: 0, scope: !11556)
!11562 = !DILocation(line: 215, column: 48, scope: !11556)
!11563 = !DILocation(line: 217, column: 37, scope: !11556)
!11564 = !DILocation(line: 217, column: 2, scope: !11556)
!11565 = !DILocation(line: 218, column: 1, scope: !11556)
!11566 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1635, file: !1635, line: 227, type: !11545, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11567)
!11567 = !{!11568, !11569, !11570}
!11568 = !DILocalVariable(name: "dev", arg: 1, scope: !11566, file: !1635, line: 227, type: !1541)
!11569 = !DILocalVariable(name: "databits", arg: 2, scope: !11566, file: !1635, line: 228, type: !113)
!11570 = !DILocalVariable(name: "config", scope: !11566, file: !1635, line: 230, type: !11165)
!11571 = !DILocation(line: 0, scope: !11566)
!11572 = !DILocation(line: 230, column: 48, scope: !11566)
!11573 = !DILocation(line: 232, column: 32, scope: !11566)
!11574 = !DILocation(line: 232, column: 2, scope: !11566)
!11575 = !DILocation(line: 233, column: 1, scope: !11566)
!11576 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1635, file: !1635, line: 242, type: !11545, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11577)
!11577 = !{!11578, !11579, !11580}
!11578 = !DILocalVariable(name: "dev", arg: 1, scope: !11576, file: !1635, line: 242, type: !1541)
!11579 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11576, file: !1635, line: 243, type: !113)
!11580 = !DILocalVariable(name: "config", scope: !11576, file: !1635, line: 245, type: !11165)
!11581 = !DILocation(line: 0, scope: !11576)
!11582 = !DILocation(line: 245, column: 48, scope: !11576)
!11583 = !DILocation(line: 247, column: 33, scope: !11576)
!11584 = !DILocation(line: 247, column: 2, scope: !11576)
!11585 = !DILocation(line: 248, column: 1, scope: !11576)
!11586 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1635, file: !1635, line: 107, type: !11545, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11587)
!11587 = !{!11588, !11589, !11590, !11591, !11592}
!11588 = !DILocalVariable(name: "dev", arg: 1, scope: !11586, file: !1635, line: 107, type: !1541)
!11589 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11586, file: !1635, line: 107, type: !113)
!11590 = !DILocalVariable(name: "config", scope: !11586, file: !1635, line: 109, type: !11165)
!11591 = !DILocalVariable(name: "data", scope: !11586, file: !1635, line: 110, type: !11288)
!11592 = !DILocalVariable(name: "clock_rate", scope: !11586, file: !1635, line: 112, type: !113)
!11593 = !DILocation(line: 0, scope: !11586)
!11594 = !DILocation(line: 109, column: 48, scope: !11586)
!11595 = !DILocation(line: 110, column: 38, scope: !11586)
!11596 = !DILocation(line: 112, column: 2, scope: !11586)
!11597 = !DILocation(line: 123, column: 36, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11599, file: !1635, line: 123, column: 7)
!11599 = distinct !DILexicalBlock(scope: !11600, file: !1635, line: 122, column: 9)
!11600 = distinct !DILexicalBlock(scope: !11586, file: !1635, line: 115, column: 6)
!11601 = !DILocation(line: 124, column: 42, scope: !11598)
!11602 = !DILocation(line: 123, column: 7, scope: !11598)
!11603 = !DILocation(line: 125, column: 22, scope: !11598)
!11604 = !DILocation(line: 123, column: 7, scope: !11599)
!11605 = !DILocation(line: 126, column: 4, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11607, file: !1635, line: 126, column: 4)
!11607 = distinct !DILexicalBlock(scope: !11608, file: !1635, line: 126, column: 4)
!11608 = distinct !DILexicalBlock(scope: !11609, file: !1635, line: 126, column: 4)
!11609 = distinct !DILexicalBlock(scope: !11610, file: !1635, line: 126, column: 4)
!11610 = distinct !DILexicalBlock(scope: !11598, file: !1635, line: 125, column: 27)
!11611 = !DILocation(line: 127, column: 4, scope: !11610)
!11612 = !DILocation(line: 176, column: 36, scope: !11586)
!11613 = !DILocation(line: 176, column: 3, scope: !11586)
!11614 = !DILocation(line: 179, column: 32, scope: !11586)
!11615 = !DILocation(line: 180, column: 10, scope: !11586)
!11616 = !DILocation(line: 179, column: 3, scope: !11586)
!11617 = !DILocation(line: 189, column: 3, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11619, file: !1635, line: 189, column: 3)
!11619 = distinct !DILexicalBlock(scope: !11586, file: !1635, line: 189, column: 3)
!11620 = !DILocation(line: 189, column: 3, scope: !11619)
!11621 = !DILocation(line: 189, column: 3, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11618, file: !1635, line: 189, column: 3)
!11623 = !DILocation(line: 195, column: 1, scope: !11586)
!11624 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11474, file: !11474, line: 409, type: !11537, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11625)
!11625 = !{!11626}
!11626 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11624, file: !11474, line: 409, type: !1582)
!11627 = !DILocation(line: 0, scope: !11624)
!11628 = !DILocation(line: 411, column: 3, scope: !11624)
!11629 = !DILocation(line: 412, column: 1, scope: !11624)
!11630 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1053, file: !1053, line: 216, type: !1615, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11631)
!11631 = !{!11632, !11633, !11634, !11635}
!11632 = !DILocalVariable(name: "dev", arg: 1, scope: !11630, file: !1053, line: 216, type: !1541)
!11633 = !DILocalVariable(name: "sys", arg: 2, scope: !11630, file: !1053, line: 217, type: !1128)
!11634 = !DILocalVariable(name: "rate", arg: 3, scope: !11630, file: !1053, line: 218, type: !1084)
!11635 = !DILocalVariable(name: "api", scope: !11630, file: !1053, line: 220, type: !1593)
!11636 = !DILocation(line: 0, scope: !11630)
!11637 = !DILocation(line: 221, column: 49, scope: !11630)
!11638 = !DILocation(line: 223, column: 11, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11630, file: !1053, line: 223, column: 6)
!11640 = !DILocation(line: 223, column: 20, scope: !11639)
!11641 = !DILocation(line: 223, column: 6, scope: !11630)
!11642 = !DILocation(line: 227, column: 9, scope: !11630)
!11643 = !DILocation(line: 227, column: 2, scope: !11630)
!11644 = !DILocation(line: 228, column: 1, scope: !11630)
!11645 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3425, file: !3425, line: 175, type: !3426, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11646)
!11646 = !{!11647}
!11647 = !DILocalVariable(name: "level", arg: 1, scope: !11645, file: !3425, line: 175, type: !105)
!11648 = !DILocation(line: 0, scope: !11645)
!11649 = !DILocation(line: 177, column: 2, scope: !11645)
!11650 = !DILocation(line: 189, column: 1, scope: !11645)
!11651 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11474, file: !11474, line: 614, type: !11652, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11654)
!11652 = !DISubroutineType(types: !11653)
!11653 = !{null, !1582, !113}
!11654 = !{!11655, !11656}
!11655 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11651, file: !11474, line: 614, type: !1582)
!11656 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11651, file: !11474, line: 614, type: !113)
!11657 = !DILocation(line: 0, scope: !11651)
!11658 = !DILocation(line: 616, column: 3, scope: !11651)
!11659 = !DILocation(line: 617, column: 1, scope: !11651)
!11660 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11474, file: !11474, line: 1019, type: !11661, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11663)
!11661 = !DISubroutineType(types: !11662)
!11662 = !{null, !1582, !113, !113, !113}
!11663 = !{!11664, !11665, !11666, !11667}
!11664 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11660, file: !11474, line: 1019, type: !1582)
!11665 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11660, file: !11474, line: 1019, type: !113)
!11666 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11660, file: !11474, line: 1019, type: !113)
!11667 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11660, file: !11474, line: 1020, type: !113)
!11668 = !DILocation(line: 0, scope: !11660)
!11669 = !DILocation(line: 1028, column: 30, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11671, file: !11474, line: 1027, column: 3)
!11671 = distinct !DILexicalBlock(scope: !11660, file: !11474, line: 1022, column: 7)
!11672 = !DILocation(line: 1028, column: 19, scope: !11670)
!11673 = !DILocation(line: 1028, column: 13, scope: !11670)
!11674 = !DILocation(line: 1028, column: 17, scope: !11670)
!11675 = !DILocation(line: 1030, column: 1, scope: !11660)
!11676 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11474, file: !11474, line: 948, type: !11652, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11677)
!11677 = !{!11678, !11679}
!11678 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11676, file: !11474, line: 948, type: !1582)
!11679 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11676, file: !11474, line: 948, type: !113)
!11680 = !DILocation(line: 0, scope: !11676)
!11681 = !DILocation(line: 950, column: 3, scope: !11676)
!11682 = !DILocation(line: 951, column: 1, scope: !11676)
!11683 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11474, file: !11474, line: 587, type: !11652, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11684)
!11684 = !{!11685, !11686}
!11685 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11683, file: !11474, line: 587, type: !1582)
!11686 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11683, file: !11474, line: 587, type: !113)
!11687 = !DILocation(line: 0, scope: !11683)
!11688 = !DILocation(line: 589, column: 3, scope: !11683)
!11689 = !DILocation(line: 590, column: 1, scope: !11683)
!11690 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11474, file: !11474, line: 804, type: !11652, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11691)
!11691 = !{!11692, !11693}
!11692 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11690, file: !11474, line: 804, type: !1582)
!11693 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11690, file: !11474, line: 804, type: !113)
!11694 = !DILocation(line: 0, scope: !11690)
!11695 = !DILocation(line: 806, column: 3, scope: !11690)
!11696 = !DILocation(line: 807, column: 1, scope: !11690)
!11697 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11474, file: !11474, line: 531, type: !11652, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11698)
!11698 = !{!11699, !11700}
!11699 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11697, file: !11474, line: 531, type: !1582)
!11700 = !DILocalVariable(name: "Parity", arg: 2, scope: !11697, file: !11474, line: 531, type: !113)
!11701 = !DILocation(line: 0, scope: !11697)
!11702 = !DILocation(line: 533, column: 3, scope: !11697)
!11703 = !DILocation(line: 534, column: 1, scope: !11697)
!11704 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11474, file: !11474, line: 1769, type: !11475, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11705)
!11705 = !{!11706}
!11706 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11704, file: !11474, line: 1769, type: !1582)
!11707 = !DILocation(line: 0, scope: !11704)
!11708 = !DILocation(line: 1771, column: 11, scope: !11704)
!11709 = !DILocation(line: 1771, column: 46, scope: !11704)
!11710 = !DILocation(line: 1771, column: 3, scope: !11704)
!11711 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11474, file: !11474, line: 1736, type: !11475, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11712)
!11712 = !{!11713}
!11713 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11711, file: !11474, line: 1736, type: !1582)
!11714 = !DILocation(line: 0, scope: !11711)
!11715 = !DILocation(line: 1738, column: 11, scope: !11711)
!11716 = !DILocation(line: 1738, column: 3, scope: !11711)
!11717 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11474, file: !11474, line: 1747, type: !11475, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11718)
!11718 = !{!11719}
!11719 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11717, file: !11474, line: 1747, type: !1582)
!11720 = !DILocation(line: 0, scope: !11717)
!11721 = !DILocation(line: 1749, column: 11, scope: !11717)
!11722 = !DILocation(line: 1749, column: 45, scope: !11717)
!11723 = !DILocation(line: 1749, column: 3, scope: !11717)
!11724 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11474, file: !11474, line: 1826, type: !11475, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11725)
!11725 = !{!11726}
!11726 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11724, file: !11474, line: 1826, type: !1582)
!11727 = !DILocation(line: 0, scope: !11724)
!11728 = !DILocation(line: 1828, column: 11, scope: !11724)
!11729 = !DILocation(line: 1828, column: 46, scope: !11724)
!11730 = !DILocation(line: 1828, column: 3, scope: !11724)
!11731 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11474, file: !11474, line: 1991, type: !11537, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11732)
!11732 = !{!11733}
!11733 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11731, file: !11474, line: 1991, type: !1582)
!11734 = !DILocation(line: 0, scope: !11731)
!11735 = !DILocation(line: 1993, column: 3, scope: !11731)
!11736 = !DILocation(line: 1994, column: 1, scope: !11731)
!11737 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11474, file: !11474, line: 1933, type: !11537, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11738)
!11738 = !{!11739, !11740}
!11739 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11737, file: !11474, line: 1933, type: !1582)
!11740 = !DILocalVariable(name: "tmpreg", scope: !11737, file: !11474, line: 1935, type: !461)
!11741 = !DILocation(line: 0, scope: !11737)
!11742 = !DILocation(line: 1935, column: 3, scope: !11737)
!11743 = !DILocation(line: 1935, column: 17, scope: !11737)
!11744 = !DILocation(line: 1936, column: 20, scope: !11737)
!11745 = !DILocation(line: 1936, column: 10, scope: !11737)
!11746 = !DILocation(line: 1937, column: 10, scope: !11737)
!11747 = !DILocation(line: 1938, column: 20, scope: !11737)
!11748 = !DILocation(line: 1938, column: 10, scope: !11737)
!11749 = !DILocation(line: 1939, column: 10, scope: !11737)
!11750 = !DILocation(line: 1940, column: 1, scope: !11737)
!11751 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11474, file: !11474, line: 1876, type: !11537, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11752)
!11752 = !{!11753, !11754}
!11753 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11751, file: !11474, line: 1876, type: !1582)
!11754 = !DILocalVariable(name: "tmpreg", scope: !11751, file: !11474, line: 1878, type: !461)
!11755 = !DILocation(line: 0, scope: !11751)
!11756 = !DILocation(line: 1878, column: 3, scope: !11751)
!11757 = !DILocation(line: 1878, column: 17, scope: !11751)
!11758 = !DILocation(line: 1879, column: 20, scope: !11751)
!11759 = !DILocation(line: 1879, column: 10, scope: !11751)
!11760 = !DILocation(line: 1880, column: 10, scope: !11751)
!11761 = !DILocation(line: 1881, column: 20, scope: !11751)
!11762 = !DILocation(line: 1881, column: 10, scope: !11751)
!11763 = !DILocation(line: 1882, column: 10, scope: !11751)
!11764 = !DILocation(line: 1883, column: 1, scope: !11751)
!11765 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11474, file: !11474, line: 1895, type: !11537, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11766)
!11766 = !{!11767, !11768}
!11767 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11765, file: !11474, line: 1895, type: !1582)
!11768 = !DILocalVariable(name: "tmpreg", scope: !11765, file: !11474, line: 1897, type: !461)
!11769 = !DILocation(line: 0, scope: !11765)
!11770 = !DILocation(line: 1897, column: 3, scope: !11765)
!11771 = !DILocation(line: 1897, column: 17, scope: !11765)
!11772 = !DILocation(line: 1898, column: 20, scope: !11765)
!11773 = !DILocation(line: 1898, column: 10, scope: !11765)
!11774 = !DILocation(line: 1899, column: 10, scope: !11765)
!11775 = !DILocation(line: 1900, column: 20, scope: !11765)
!11776 = !DILocation(line: 1900, column: 10, scope: !11765)
!11777 = !DILocation(line: 1901, column: 10, scope: !11765)
!11778 = !DILocation(line: 1902, column: 1, scope: !11765)
!11779 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11474, file: !11474, line: 1914, type: !11537, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11780)
!11780 = !{!11781, !11782}
!11781 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11779, file: !11474, line: 1914, type: !1582)
!11782 = !DILocalVariable(name: "tmpreg", scope: !11779, file: !11474, line: 1916, type: !461)
!11783 = !DILocation(line: 0, scope: !11779)
!11784 = !DILocation(line: 1916, column: 3, scope: !11779)
!11785 = !DILocation(line: 1916, column: 17, scope: !11779)
!11786 = !DILocation(line: 1917, column: 20, scope: !11779)
!11787 = !DILocation(line: 1917, column: 10, scope: !11779)
!11788 = !DILocation(line: 1918, column: 10, scope: !11779)
!11789 = !DILocation(line: 1919, column: 20, scope: !11779)
!11790 = !DILocation(line: 1919, column: 10, scope: !11779)
!11791 = !DILocation(line: 1920, column: 10, scope: !11779)
!11792 = !DILocation(line: 1921, column: 1, scope: !11779)
!11793 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11474, file: !11474, line: 1813, type: !11475, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11794)
!11794 = !{!11795}
!11795 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11793, file: !11474, line: 1813, type: !1582)
!11796 = !DILocation(line: 0, scope: !11793)
!11797 = !DILocation(line: 1815, column: 11, scope: !11793)
!11798 = !DILocation(line: 1815, column: 46, scope: !11793)
!11799 = !DILocation(line: 1815, column: 3, scope: !11793)
!11800 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11474, file: !11474, line: 2425, type: !11801, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11803)
!11801 = !DISubroutineType(types: !11802)
!11802 = !{null, !1582, !169}
!11803 = !{!11804, !11805}
!11804 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11800, file: !11474, line: 2425, type: !1582)
!11805 = !DILocalVariable(name: "Value", arg: 2, scope: !11800, file: !11474, line: 2425, type: !169)
!11806 = !DILocation(line: 0, scope: !11800)
!11807 = !DILocation(line: 2427, column: 16, scope: !11800)
!11808 = !DILocation(line: 2427, column: 11, scope: !11800)
!11809 = !DILocation(line: 2427, column: 14, scope: !11800)
!11810 = !DILocation(line: 2428, column: 1, scope: !11800)
!11811 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11474, file: !11474, line: 1791, type: !11475, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11812)
!11812 = !{!11813}
!11813 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11811, file: !11474, line: 1791, type: !1582)
!11814 = !DILocation(line: 0, scope: !11811)
!11815 = !DILocation(line: 1793, column: 11, scope: !11811)
!11816 = !DILocation(line: 1793, column: 47, scope: !11811)
!11817 = !DILocation(line: 1793, column: 3, scope: !11811)
!11818 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11474, file: !11474, line: 2402, type: !11819, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11821)
!11819 = !DISubroutineType(types: !11820)
!11820 = !{!169, !1582}
!11821 = !{!11822}
!11822 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11818, file: !11474, line: 2402, type: !1582)
!11823 = !DILocation(line: 0, scope: !11818)
!11824 = !DILocation(line: 2404, column: 20, scope: !11818)
!11825 = !DILocation(line: 2404, column: 10, scope: !11818)
!11826 = !DILocation(line: 2404, column: 3, scope: !11818)
!11827 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1635, file: !1635, line: 1583, type: !1562, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11828)
!11828 = !{!11829, !11830, !11831, !11832, !11833, !11834}
!11829 = !DILocalVariable(name: "dev", arg: 1, scope: !11827, file: !1635, line: 1583, type: !1541)
!11830 = !DILocalVariable(name: "config", scope: !11827, file: !1635, line: 1585, type: !11165)
!11831 = !DILocalVariable(name: "data", scope: !11827, file: !1635, line: 1586, type: !11288)
!11832 = !DILocalVariable(name: "ll_parity", scope: !11827, file: !1635, line: 1587, type: !113)
!11833 = !DILocalVariable(name: "ll_datawidth", scope: !11827, file: !1635, line: 1588, type: !113)
!11834 = !DILocalVariable(name: "err", scope: !11827, file: !1635, line: 1589, type: !105)
!11835 = !DILocation(line: 0, scope: !11827)
!11836 = !DILocation(line: 1585, column: 48, scope: !11827)
!11837 = !DILocation(line: 1586, column: 38, scope: !11827)
!11838 = !DILocation(line: 1591, column: 2, scope: !11827)
!11839 = !DILocation(line: 1593, column: 29, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11827, file: !1635, line: 1593, column: 6)
!11841 = !DILocation(line: 1593, column: 7, scope: !11840)
!11842 = !DILocation(line: 1593, column: 6, scope: !11827)
!11843 = !DILocation(line: 1594, column: 3, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11845, file: !1635, line: 1594, column: 3)
!11845 = distinct !DILexicalBlock(scope: !11846, file: !1635, line: 1594, column: 3)
!11846 = distinct !DILexicalBlock(scope: !11847, file: !1635, line: 1594, column: 3)
!11847 = distinct !DILexicalBlock(scope: !11848, file: !1635, line: 1594, column: 3)
!11848 = distinct !DILexicalBlock(scope: !11840, file: !1635, line: 1593, column: 37)
!11849 = !DILocation(line: 1595, column: 3, scope: !11848)
!11850 = !DILocation(line: 1599, column: 31, scope: !11827)
!11851 = !DILocation(line: 1599, column: 71, scope: !11827)
!11852 = !DILocation(line: 1599, column: 8, scope: !11827)
!11853 = !DILocation(line: 1600, column: 10, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11827, file: !1635, line: 1600, column: 6)
!11855 = !DILocation(line: 1600, column: 6, scope: !11827)
!11856 = !DILocation(line: 1601, column: 3, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11858, file: !1635, line: 1601, column: 3)
!11858 = distinct !DILexicalBlock(scope: !11859, file: !1635, line: 1601, column: 3)
!11859 = distinct !DILexicalBlock(scope: !11860, file: !1635, line: 1601, column: 3)
!11860 = distinct !DILexicalBlock(scope: !11861, file: !1635, line: 1601, column: 3)
!11861 = distinct !DILexicalBlock(scope: !11854, file: !1635, line: 1600, column: 16)
!11862 = !DILocation(line: 1602, column: 3, scope: !11861)
!11863 = !DILocation(line: 1616, column: 36, scope: !11827)
!11864 = !DILocation(line: 1616, column: 8, scope: !11827)
!11865 = !DILocation(line: 1617, column: 10, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11827, file: !1635, line: 1617, column: 6)
!11867 = !DILocation(line: 1617, column: 6, scope: !11827)
!11868 = !DILocation(line: 1621, column: 27, scope: !11827)
!11869 = !DILocation(line: 1621, column: 2, scope: !11827)
!11870 = !DILocation(line: 1624, column: 40, scope: !11827)
!11871 = !DILocation(line: 1624, column: 2, scope: !11827)
!11872 = !DILocation(line: 1630, column: 14, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11827, file: !1635, line: 1630, column: 6)
!11874 = !DILocation(line: 1630, column: 6, scope: !11827)
!11875 = !DILocation(line: 1640, column: 4, scope: !11876)
!11876 = distinct !DILexicalBlock(scope: !11877, file: !1635, line: 1640, column: 4)
!11877 = distinct !DILexicalBlock(scope: !11878, file: !1635, line: 1640, column: 4)
!11878 = distinct !DILexicalBlock(scope: !11879, file: !1635, line: 1640, column: 4)
!11879 = distinct !DILexicalBlock(scope: !11880, file: !1635, line: 1640, column: 4)
!11880 = distinct !DILexicalBlock(scope: !11881, file: !1635, line: 1639, column: 28)
!11881 = distinct !DILexicalBlock(scope: !11882, file: !1635, line: 1639, column: 7)
!11882 = distinct !DILexicalBlock(scope: !11883, file: !1635, line: 1638, column: 9)
!11883 = distinct !DILexicalBlock(scope: !11873, file: !1635, line: 1634, column: 13)
!11884 = !DILocation(line: 0, scope: !11873)
!11885 = !DILocation(line: 1649, column: 35, scope: !11827)
!11886 = !DILocation(line: 1649, column: 2, scope: !11827)
!11887 = !DILocation(line: 1654, column: 14, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11827, file: !1635, line: 1654, column: 6)
!11889 = !DILocation(line: 1654, column: 6, scope: !11827)
!11890 = !DILocation(line: 1655, column: 3, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11888, file: !1635, line: 1654, column: 31)
!11892 = !DILocation(line: 1656, column: 2, scope: !11891)
!11893 = !DILocation(line: 1659, column: 37, scope: !11827)
!11894 = !DILocation(line: 1659, column: 2, scope: !11827)
!11895 = !DILocation(line: 1662, column: 14, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11827, file: !1635, line: 1662, column: 6)
!11897 = !DILocation(line: 1662, column: 6, scope: !11827)
!11898 = !DILocation(line: 1663, column: 37, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11896, file: !1635, line: 1662, column: 27)
!11900 = !DILocation(line: 1663, column: 3, scope: !11899)
!11901 = !DILocation(line: 1664, column: 2, scope: !11899)
!11902 = !DILocation(line: 1684, column: 26, scope: !11827)
!11903 = !DILocation(line: 1684, column: 2, scope: !11827)
!11904 = !DILocation(line: 1722, column: 2, scope: !11827)
!11905 = !DILocation(line: 1724, column: 1, scope: !11827)
!11906 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1635, file: !1635, line: 651, type: !11907, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11909)
!11907 = !DISubroutineType(types: !11908)
!11908 = !{null, !1541}
!11909 = !{!11910, !11911, !11912}
!11910 = !DILocalVariable(name: "dev", arg: 1, scope: !11906, file: !1635, line: 651, type: !1541)
!11911 = !DILocalVariable(name: "data", scope: !11906, file: !1635, line: 653, type: !11288)
!11912 = !DILocalVariable(name: "clk", scope: !11906, file: !1635, line: 654, type: !11913)
!11913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1541)
!11914 = !DILocation(line: 0, scope: !11906)
!11915 = !DILocation(line: 653, column: 38, scope: !11906)
!11916 = !DILocation(line: 656, column: 8, scope: !11906)
!11917 = !DILocation(line: 656, column: 14, scope: !11906)
!11918 = !DILocation(line: 657, column: 1, scope: !11906)
!11919 = distinct !DISubprogram(name: "device_is_ready", scope: !9632, file: !9632, line: 47, type: !11920, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11922)
!11920 = !DISubroutineType(types: !11921)
!11921 = !{!505, !1541}
!11922 = !{!11923}
!11923 = !DILocalVariable(name: "dev", arg: 1, scope: !11919, file: !9632, line: 47, type: !1541)
!11924 = !DILocation(line: 0, scope: !11919)
!11925 = !DILocation(line: 55, column: 2, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11919, file: !9632, line: 55, column: 2)
!11927 = !{i64 2152506706}
!11928 = !DILocation(line: 56, column: 9, scope: !11919)
!11929 = !DILocation(line: 56, column: 2, scope: !11919)
!11930 = distinct !DISubprogram(name: "clock_control_on", scope: !1053, file: !1053, line: 123, type: !1600, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11931)
!11931 = !{!11932, !11933, !11934}
!11932 = !DILocalVariable(name: "dev", arg: 1, scope: !11930, file: !1053, line: 123, type: !1541)
!11933 = !DILocalVariable(name: "sys", arg: 2, scope: !11930, file: !1053, line: 124, type: !1128)
!11934 = !DILocalVariable(name: "api", scope: !11930, file: !1053, line: 126, type: !1593)
!11935 = !DILocation(line: 0, scope: !11930)
!11936 = !DILocation(line: 127, column: 49, scope: !11930)
!11937 = !DILocation(line: 129, column: 14, scope: !11930)
!11938 = !DILocation(line: 129, column: 9, scope: !11930)
!11939 = !DILocation(line: 129, column: 2, scope: !11930)
!11940 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1680, file: !1680, line: 342, type: !11941, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11943)
!11941 = !DISubroutineType(types: !11942)
!11942 = !{!105, !1677, !169}
!11943 = !{!11944, !11945, !11946, !11947}
!11944 = !DILocalVariable(name: "config", arg: 1, scope: !11940, file: !1680, line: 342, type: !1677)
!11945 = !DILocalVariable(name: "id", arg: 2, scope: !11940, file: !1680, line: 343, type: !169)
!11946 = !DILocalVariable(name: "ret", scope: !11940, file: !1680, line: 345, type: !105)
!11947 = !DILocalVariable(name: "state", scope: !11940, file: !1680, line: 346, type: !1683)
!11948 = !DILocation(line: 0, scope: !11940)
!11949 = !DILocation(line: 346, column: 2, scope: !11940)
!11950 = !DILocation(line: 348, column: 8, scope: !11940)
!11951 = !DILocation(line: 349, column: 10, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11940, file: !1680, line: 349, column: 6)
!11953 = !DILocation(line: 349, column: 6, scope: !11940)
!11954 = !DILocation(line: 353, column: 44, scope: !11940)
!11955 = !DILocation(line: 353, column: 9, scope: !11940)
!11956 = !DILocation(line: 353, column: 2, scope: !11940)
!11957 = !DILocation(line: 354, column: 1, scope: !11940)
!11958 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11474, file: !11474, line: 496, type: !11652, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11959)
!11959 = !{!11960, !11961}
!11960 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11958, file: !11474, line: 496, type: !1582)
!11961 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11958, file: !11474, line: 496, type: !113)
!11962 = !DILocation(line: 0, scope: !11958)
!11963 = !DILocation(line: 498, column: 3, scope: !11958)
!11964 = !DILocation(line: 499, column: 1, scope: !11958)
!11965 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11474, file: !11474, line: 849, type: !11661, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11966)
!11966 = !{!11967, !11968, !11969, !11970}
!11967 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11965, file: !11474, line: 849, type: !1582)
!11968 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11965, file: !11474, line: 849, type: !113)
!11969 = !DILocalVariable(name: "Parity", arg: 3, scope: !11965, file: !11474, line: 849, type: !113)
!11970 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11965, file: !11474, line: 850, type: !113)
!11971 = !DILocation(line: 0, scope: !11965)
!11972 = !DILocation(line: 852, column: 3, scope: !11965)
!11973 = !DILocation(line: 853, column: 3, scope: !11965)
!11974 = !DILocation(line: 854, column: 1, scope: !11965)
!11975 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11474, file: !11474, line: 1336, type: !11537, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11976)
!11976 = !{!11977}
!11977 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11975, file: !11474, line: 1336, type: !1582)
!11978 = !DILocation(line: 0, scope: !11975)
!11979 = !DILocation(line: 1338, column: 3, scope: !11975)
!11980 = !DILocation(line: 1339, column: 1, scope: !11975)
!11981 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1680, file: !1680, line: 316, type: !11982, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11984)
!11982 = !DISubroutineType(types: !11983)
!11983 = !{!105, !1677, !1683}
!11984 = !{!11985, !11986, !11987}
!11985 = !DILocalVariable(name: "config", arg: 1, scope: !11981, file: !1680, line: 317, type: !1677)
!11986 = !DILocalVariable(name: "state", arg: 2, scope: !11981, file: !1680, line: 318, type: !1683)
!11987 = !DILocalVariable(name: "reg", scope: !11981, file: !1680, line: 320, type: !22)
!11988 = !DILocation(line: 0, scope: !11981)
!11989 = !DILocation(line: 329, column: 39, scope: !11981)
!11990 = !DILocation(line: 329, column: 52, scope: !11981)
!11991 = !DILocation(line: 329, column: 9, scope: !11981)
!11992 = !DILocation(line: 329, column: 2, scope: !11981)
!11993 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !494, file: !494, line: 730, type: !11920, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !11994)
!11994 = !{!11995}
!11995 = !DILocalVariable(name: "dev", arg: 1, scope: !11993, file: !494, line: 730, type: !1541)
!11996 = !DILocation(line: 0, scope: !11993)
!11997 = !DILocation(line: 732, column: 9, scope: !11993)
!11998 = !DILocation(line: 732, column: 2, scope: !11993)
!11999 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1815, file: !1815, line: 270, type: !1821, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1737, retainedNodes: !12000)
!12000 = !{!12001}
!12001 = !DILocalVariable(name: "dev", arg: 1, scope: !11999, file: !1815, line: 270, type: !1823)
!12002 = !DILocation(line: 0, scope: !11999)
!12003 = !DILocation(line: 274, column: 2, scope: !11999)
!12004 = !DILocation(line: 275, column: 12, scope: !11999)
!12005 = !DILocation(line: 276, column: 15, scope: !11999)
!12006 = !DILocation(line: 277, column: 16, scope: !11999)
!12007 = !DILocation(line: 278, column: 15, scope: !11999)
!12008 = !DILocation(line: 279, column: 16, scope: !11999)
!12009 = !DILocation(line: 282, column: 2, scope: !11999)
!12010 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !692, file: !692, line: 1638, type: !7794, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1737, retainedNodes: !12011)
!12011 = !{!12012, !12013}
!12012 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12010, file: !692, line: 1638, type: !1011)
!12013 = !DILocalVariable(name: "priority", arg: 2, scope: !12010, file: !692, line: 1638, type: !113)
!12014 = !DILocation(line: 0, scope: !12010)
!12015 = !DILocation(line: 1646, column: 46, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12017, file: !692, line: 1645, column: 3)
!12017 = distinct !DILexicalBlock(scope: !12010, file: !692, line: 1640, column: 7)
!12018 = !DILocation(line: 1648, column: 1, scope: !12010)
!12019 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1815, file: !1815, line: 118, type: !7691, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1737, retainedNodes: !12020)
!12020 = !{!12021, !12022}
!12021 = !DILocalVariable(name: "arg", arg: 1, scope: !12019, file: !1815, line: 118, type: !104)
!12022 = !DILocalVariable(name: "dticks", scope: !12019, file: !1815, line: 121, type: !113)
!12023 = !DILocation(line: 0, scope: !12019)
!12024 = !DILocation(line: 124, column: 2, scope: !12019)
!12025 = !DILocation(line: 129, column: 17, scope: !12019)
!12026 = !DILocation(line: 129, column: 14, scope: !12019)
!12027 = !DILocation(line: 130, column: 15, scope: !12019)
!12028 = !DILocation(line: 145, column: 27, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12030, file: !1815, line: 132, column: 16)
!12030 = distinct !DILexicalBlock(scope: !12019, file: !1815, line: 132, column: 6)
!12031 = !DILocation(line: 145, column: 25, scope: !12029)
!12032 = !DILocation(line: 145, column: 45, scope: !12029)
!12033 = !DILocation(line: 146, column: 30, scope: !12029)
!12034 = !DILocation(line: 146, column: 20, scope: !12029)
!12035 = !DILocation(line: 147, column: 3, scope: !12029)
!12036 = !DILocation(line: 151, column: 2, scope: !12019)
!12037 = !DILocation(line: 152, column: 1, scope: !12019)
!12038 = distinct !DISubprogram(name: "elapsed", scope: !1815, file: !1815, line: 85, type: !395, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1737, retainedNodes: !12039)
!12039 = !{!12040, !12041, !12042}
!12040 = !DILocalVariable(name: "val1", scope: !12038, file: !1815, line: 87, type: !113)
!12041 = !DILocalVariable(name: "ctrl", scope: !12038, file: !1815, line: 88, type: !113)
!12042 = !DILocalVariable(name: "val2", scope: !12038, file: !1815, line: 89, type: !113)
!12043 = !DILocation(line: 87, column: 27, scope: !12038)
!12044 = !DILocation(line: 0, scope: !12038)
!12045 = !DILocation(line: 88, column: 27, scope: !12038)
!12046 = !DILocation(line: 89, column: 27, scope: !12038)
!12047 = !DILocation(line: 105, column: 12, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12038, file: !1815, line: 105, column: 6)
!12049 = !DILocation(line: 106, column: 6, scope: !12048)
!12050 = !DILocation(line: 107, column: 16, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12048, file: !1815, line: 106, column: 24)
!12052 = !DILocation(line: 111, column: 18, scope: !12051)
!12053 = !DILocation(line: 112, column: 2, scope: !12051)
!12054 = !DILocation(line: 114, column: 20, scope: !12038)
!12055 = !DILocation(line: 114, column: 30, scope: !12038)
!12056 = !DILocation(line: 114, column: 28, scope: !12038)
!12057 = !DILocation(line: 114, column: 2, scope: !12038)
!12058 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1815, file: !1815, line: 154, type: !12059, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1737, retainedNodes: !12061)
!12059 = !DISubroutineType(types: !12060)
!12060 = !{null, !116, !505}
!12061 = !{!12062, !12063, !12064, !12065, !12066, !12067, !12068, !12073, !12074}
!12062 = !DILocalVariable(name: "ticks", arg: 1, scope: !12058, file: !1815, line: 154, type: !116)
!12063 = !DILocalVariable(name: "idle", arg: 2, scope: !12058, file: !1815, line: 154, type: !505)
!12064 = !DILocalVariable(name: "delay", scope: !12058, file: !1815, line: 169, type: !113)
!12065 = !DILocalVariable(name: "val1", scope: !12058, file: !1815, line: 170, type: !113)
!12066 = !DILocalVariable(name: "val2", scope: !12058, file: !1815, line: 170, type: !113)
!12067 = !DILocalVariable(name: "last_load_", scope: !12058, file: !1815, line: 171, type: !113)
!12068 = !DILocalVariable(name: "key", scope: !12058, file: !1815, line: 176, type: !12069)
!12069 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !12070)
!12070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !12071)
!12071 = !{!12072}
!12072 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12070, file: !236, line: 33, baseType: !105, size: 32)
!12073 = !DILocalVariable(name: "pending", scope: !12058, file: !1815, line: 178, type: !113)
!12074 = !DILocalVariable(name: "unannounced", scope: !12058, file: !1815, line: 185, type: !113)
!12075 = !DILocation(line: 0, scope: !12058)
!12076 = !DILocation(line: 162, column: 49, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12058, file: !1815, line: 162, column: 6)
!12078 = !DILocation(line: 163, column: 17, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12077, file: !1815, line: 162, column: 78)
!12080 = !DILocation(line: 164, column: 13, scope: !12079)
!12081 = !DILocation(line: 165, column: 3, scope: !12079)
!12082 = !DILocation(line: 171, column: 24, scope: !12058)
!12083 = !DILocation(line: 173, column: 10, scope: !12058)
!12084 = !DILocation(line: 174, column: 10, scope: !12058)
!12085 = !DILocalVariable(name: "l", arg: 1, scope: !12086, file: !236, line: 136, type: !12089)
!12086 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !12087, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1737, retainedNodes: !12090)
!12087 = !DISubroutineType(types: !12088)
!12088 = !{!12069, !12089}
!12089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!12090 = !{!12085, !12091}
!12091 = !DILocalVariable(name: "k", scope: !12086, file: !236, line: 139, type: !12069)
!12092 = !DILocation(line: 0, scope: !12086, inlinedAt: !12093)
!12093 = distinct !DILocation(line: 176, column: 25, scope: !12058)
!12094 = !DILocation(line: 55, column: 2, scope: !12095, inlinedAt: !12099)
!12095 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7419, file: !7419, line: 42, type: !7420, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1737, retainedNodes: !12096)
!12096 = !{!12097, !12098}
!12097 = !DILocalVariable(name: "key", scope: !12095, file: !7419, line: 44, type: !32)
!12098 = !DILocalVariable(name: "tmp", scope: !12095, file: !7419, line: 53, type: !32)
!12099 = distinct !DILocation(line: 145, column: 10, scope: !12086, inlinedAt: !12093)
!12100 = !{i64 1621897}
!12101 = !DILocation(line: 0, scope: !12095, inlinedAt: !12099)
!12102 = !DILocation(line: 148, column: 2, scope: !12103, inlinedAt: !12093)
!12103 = distinct !DILexicalBlock(scope: !12104, file: !236, line: 148, column: 2)
!12104 = distinct !DILexicalBlock(scope: !12086, file: !236, line: 148, column: 2)
!12105 = !DILocation(line: 148, column: 2, scope: !12104, inlinedAt: !12093)
!12106 = !DILocation(line: 148, column: 2, scope: !12107, inlinedAt: !12093)
!12107 = distinct !DILexicalBlock(scope: !12103, file: !236, line: 148, column: 2)
!12108 = !DILocation(line: 160, column: 2, scope: !12086, inlinedAt: !12093)
!12109 = !DILocation(line: 178, column: 21, scope: !12058)
!12110 = !DILocation(line: 180, column: 18, scope: !12058)
!12111 = !DILocation(line: 182, column: 14, scope: !12058)
!12112 = !DILocation(line: 183, column: 15, scope: !12058)
!12113 = !DILocation(line: 185, column: 39, scope: !12058)
!12114 = !DILocation(line: 185, column: 37, scope: !12058)
!12115 = !DILocation(line: 187, column: 27, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !12058, file: !1815, line: 187, column: 6)
!12117 = !DILocation(line: 187, column: 6, scope: !12058)
!12118 = !DILocation(line: 202, column: 27, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12116, file: !1815, line: 195, column: 9)
!12120 = !DILocation(line: 202, column: 48, scope: !12119)
!12121 = !DILocation(line: 203, column: 9, scope: !12119)
!12122 = !DILocation(line: 204, column: 11, scope: !12119)
!12123 = !DILocation(line: 205, column: 13, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12119, file: !1815, line: 205, column: 7)
!12125 = !DILocation(line: 205, column: 7, scope: !12119)
!12126 = !DILocation(line: 0, scope: !12116)
!12127 = !DILocation(line: 212, column: 18, scope: !12058)
!12128 = !DILocation(line: 214, column: 28, scope: !12058)
!12129 = !DILocation(line: 214, column: 16, scope: !12058)
!12130 = !DILocation(line: 215, column: 15, scope: !12058)
!12131 = !DILocation(line: 227, column: 11, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12058, file: !1815, line: 227, column: 6)
!12133 = !DILocation(line: 227, column: 6, scope: !12058)
!12134 = !DILocation(line: 228, column: 15, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12132, file: !1815, line: 227, column: 19)
!12136 = !DILocation(line: 228, column: 38, scope: !12135)
!12137 = !DILocation(line: 228, column: 24, scope: !12135)
!12138 = !DILocation(line: 229, column: 2, scope: !12135)
!12139 = !DILocation(line: 230, column: 24, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12132, file: !1815, line: 229, column: 9)
!12141 = !DILocation(line: 230, column: 15, scope: !12140)
!12142 = !DILocation(line: 0, scope: !12132)
!12143 = !DILocalVariable(name: "key", arg: 2, scope: !12144, file: !236, line: 190, type: !12069)
!12144 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !12145, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1737, retainedNodes: !12147)
!12145 = !DISubroutineType(types: !12146)
!12146 = !{null, !12089, !12069}
!12147 = !{!12148, !12143}
!12148 = !DILocalVariable(name: "l", arg: 1, scope: !12144, file: !236, line: 189, type: !12089)
!12149 = !DILocation(line: 0, scope: !12144, inlinedAt: !12150)
!12150 = distinct !DILocation(line: 232, column: 2, scope: !12058)
!12151 = !DILocation(line: 194, column: 2, scope: !12152, inlinedAt: !12150)
!12152 = distinct !DILexicalBlock(scope: !12153, file: !236, line: 194, column: 2)
!12153 = distinct !DILexicalBlock(scope: !12144, file: !236, line: 194, column: 2)
!12154 = !DILocation(line: 194, column: 2, scope: !12153, inlinedAt: !12150)
!12155 = !DILocation(line: 194, column: 2, scope: !12156, inlinedAt: !12150)
!12156 = distinct !DILexicalBlock(scope: !12152, file: !236, line: 194, column: 2)
!12157 = !DILocalVariable(name: "key", arg: 1, scope: !12158, file: !7419, line: 84, type: !32)
!12158 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7419, file: !7419, line: 84, type: !7430, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1737, retainedNodes: !12159)
!12159 = !{!12157}
!12160 = !DILocation(line: 0, scope: !12158, inlinedAt: !12161)
!12161 = distinct !DILocation(line: 215, column: 2, scope: !12144, inlinedAt: !12150)
!12162 = !DILocation(line: 95, column: 2, scope: !12158, inlinedAt: !12161)
!12163 = !{i64 1622714}
!12164 = !DILocation(line: 234, column: 1, scope: !12058)
!12165 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1815, file: !1815, line: 236, type: !395, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1737, retainedNodes: !12166)
!12166 = !{!12167, !12168}
!12167 = !DILocalVariable(name: "key", scope: !12165, file: !1815, line: 242, type: !12069)
!12168 = !DILocalVariable(name: "cyc", scope: !12165, file: !1815, line: 243, type: !113)
!12169 = !DILocation(line: 0, scope: !12086, inlinedAt: !12170)
!12170 = distinct !DILocation(line: 242, column: 25, scope: !12165)
!12171 = !DILocation(line: 55, column: 2, scope: !12095, inlinedAt: !12172)
!12172 = distinct !DILocation(line: 145, column: 10, scope: !12086, inlinedAt: !12170)
!12173 = !DILocation(line: 0, scope: !12095, inlinedAt: !12172)
!12174 = !DILocation(line: 148, column: 2, scope: !12103, inlinedAt: !12170)
!12175 = !DILocation(line: 148, column: 2, scope: !12104, inlinedAt: !12170)
!12176 = !DILocation(line: 148, column: 2, scope: !12107, inlinedAt: !12170)
!12177 = !DILocation(line: 160, column: 2, scope: !12086, inlinedAt: !12170)
!12178 = !DILocation(line: 0, scope: !12165)
!12179 = !DILocation(line: 243, column: 17, scope: !12165)
!12180 = !DILocation(line: 243, column: 29, scope: !12165)
!12181 = !DILocation(line: 243, column: 43, scope: !12165)
!12182 = !DILocation(line: 0, scope: !12144, inlinedAt: !12183)
!12183 = distinct !DILocation(line: 245, column: 2, scope: !12165)
!12184 = !DILocation(line: 194, column: 2, scope: !12152, inlinedAt: !12183)
!12185 = !DILocation(line: 194, column: 2, scope: !12153, inlinedAt: !12183)
!12186 = !DILocation(line: 194, column: 2, scope: !12156, inlinedAt: !12183)
!12187 = !DILocation(line: 243, column: 27, scope: !12165)
!12188 = !DILocation(line: 243, column: 41, scope: !12165)
!12189 = !DILocation(line: 0, scope: !12158, inlinedAt: !12190)
!12190 = distinct !DILocation(line: 215, column: 2, scope: !12144, inlinedAt: !12183)
!12191 = !DILocation(line: 95, column: 2, scope: !12158, inlinedAt: !12190)
!12192 = !DILocation(line: 246, column: 13, scope: !12165)
!12193 = !DILocation(line: 246, column: 2, scope: !12165)
!12194 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1815, file: !1815, line: 249, type: !395, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1737, retainedNodes: !12195)
!12195 = !{!12196, !12197}
!12196 = !DILocalVariable(name: "key", scope: !12194, file: !1815, line: 251, type: !12069)
!12197 = !DILocalVariable(name: "ret", scope: !12194, file: !1815, line: 252, type: !113)
!12198 = !DILocation(line: 0, scope: !12086, inlinedAt: !12199)
!12199 = distinct !DILocation(line: 251, column: 25, scope: !12194)
!12200 = !DILocation(line: 55, column: 2, scope: !12095, inlinedAt: !12201)
!12201 = distinct !DILocation(line: 145, column: 10, scope: !12086, inlinedAt: !12199)
!12202 = !DILocation(line: 0, scope: !12095, inlinedAt: !12201)
!12203 = !DILocation(line: 148, column: 2, scope: !12103, inlinedAt: !12199)
!12204 = !DILocation(line: 148, column: 2, scope: !12104, inlinedAt: !12199)
!12205 = !DILocation(line: 148, column: 2, scope: !12107, inlinedAt: !12199)
!12206 = !DILocation(line: 160, column: 2, scope: !12086, inlinedAt: !12199)
!12207 = !DILocation(line: 0, scope: !12194)
!12208 = !DILocation(line: 252, column: 17, scope: !12194)
!12209 = !DILocation(line: 252, column: 29, scope: !12194)
!12210 = !DILocation(line: 0, scope: !12144, inlinedAt: !12211)
!12211 = distinct !DILocation(line: 254, column: 2, scope: !12194)
!12212 = !DILocation(line: 194, column: 2, scope: !12152, inlinedAt: !12211)
!12213 = !DILocation(line: 194, column: 2, scope: !12153, inlinedAt: !12211)
!12214 = !DILocation(line: 194, column: 2, scope: !12156, inlinedAt: !12211)
!12215 = !DILocation(line: 252, column: 27, scope: !12194)
!12216 = !DILocation(line: 0, scope: !12158, inlinedAt: !12217)
!12217 = distinct !DILocation(line: 215, column: 2, scope: !12144, inlinedAt: !12211)
!12218 = !DILocation(line: 95, column: 2, scope: !12158, inlinedAt: !12217)
!12219 = !DILocation(line: 255, column: 2, scope: !12194)
!12220 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1815, file: !1815, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1737, retainedNodes: !397)
!12221 = !DILocation(line: 260, column: 6, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12220, file: !1815, line: 260, column: 6)
!12223 = !DILocation(line: 260, column: 16, scope: !12222)
!12224 = !DILocation(line: 260, column: 6, scope: !12220)
!12225 = !DILocation(line: 261, column: 17, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12222, file: !1815, line: 260, column: 34)
!12227 = !DILocation(line: 262, column: 2, scope: !12226)
!12228 = !DILocation(line: 263, column: 1, scope: !12220)
!12229 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1815, file: !1815, line: 265, type: !266, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1737, retainedNodes: !397)
!12230 = !DILocation(line: 267, column: 16, scope: !12229)
!12231 = !DILocation(line: 268, column: 1, scope: !12229)
!12232 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12233, file: !12233, line: 9, type: !12234, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2992, retainedNodes: !12257)
!12233 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12234 = !DISubroutineType(types: !12235)
!12235 = !{!105, !12236, !169, !12256}
!12236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12237, size: 32)
!12237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12238)
!12238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1680, line: 60, size: 64, elements: !12239)
!12239 = !{!12240, !12255}
!12240 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12238, file: !1680, line: 69, baseType: !12241, size: 32)
!12241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12242, size: 32)
!12242 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12243)
!12243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1680, line: 50, size: 64, elements: !12244)
!12244 = !{!12245, !12253, !12254}
!12245 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12243, file: !1680, line: 52, baseType: !12246, size: 32)
!12246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12247, size: 32)
!12247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12248)
!12248 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1691, line: 37, baseType: !12249)
!12249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1691, line: 32, size: 64, elements: !12250)
!12250 = !{!12251, !12252}
!12251 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12249, file: !1691, line: 34, baseType: !113, size: 32)
!12252 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12249, file: !1691, line: 36, baseType: !113, size: 32, offset: 32)
!12253 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12243, file: !1680, line: 54, baseType: !169, size: 8, offset: 32)
!12254 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12243, file: !1680, line: 56, baseType: !169, size: 8, offset: 40)
!12255 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12238, file: !1680, line: 71, baseType: !169, size: 8, offset: 32)
!12256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12241, size: 32)
!12257 = !{!12258, !12259, !12260}
!12258 = !DILocalVariable(name: "config", arg: 1, scope: !12232, file: !12233, line: 9, type: !12236)
!12259 = !DILocalVariable(name: "id", arg: 2, scope: !12232, file: !12233, line: 9, type: !169)
!12260 = !DILocalVariable(name: "state", arg: 3, scope: !12232, file: !12233, line: 10, type: !12256)
!12261 = !DILocation(line: 0, scope: !12232)
!12262 = !DILocation(line: 12, column: 20, scope: !12232)
!12263 = !DILocation(line: 13, column: 27, scope: !12232)
!12264 = !DILocation(line: 13, column: 42, scope: !12232)
!12265 = !DILocation(line: 13, column: 19, scope: !12232)
!12266 = !DILocation(line: 13, column: 16, scope: !12232)
!12267 = !DILocation(line: 13, column: 2, scope: !12232)
!12268 = distinct !{!12268, !12267, !12269}
!12269 = !DILocation(line: 19, column: 2, scope: !12232)
!12270 = !DILocation(line: 14, column: 23, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12272, file: !12233, line: 14, column: 7)
!12272 = distinct !DILexicalBlock(scope: !12232, file: !12233, line: 13, column: 54)
!12273 = !DILocation(line: 14, column: 10, scope: !12271)
!12274 = !DILocation(line: 18, column: 11, scope: !12272)
!12275 = !DILocation(line: 14, column: 7, scope: !12272)
!12276 = !DILocation(line: 22, column: 1, scope: !12232)
!12277 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1933, file: !1933, line: 193, type: !12278, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1852, retainedNodes: !12287)
!12278 = !DISubroutineType(types: !12279)
!12279 = !{!105, !12280, !169, !22}
!12280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12281, size: 32)
!12281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12282)
!12282 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1691, line: 37, baseType: !12283)
!12283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1691, line: 32, size: 64, elements: !12284)
!12284 = !{!12285, !12286}
!12285 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12283, file: !1691, line: 34, baseType: !113, size: 32)
!12286 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12283, file: !1691, line: 36, baseType: !113, size: 32, offset: 32)
!12287 = !{!12288, !12289, !12290, !12291, !12292, !12293, !12294, !12295, !12297}
!12288 = !DILocalVariable(name: "pins", arg: 1, scope: !12277, file: !1933, line: 193, type: !12280)
!12289 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12277, file: !1933, line: 193, type: !169)
!12290 = !DILocalVariable(name: "reg", arg: 3, scope: !12277, file: !1933, line: 194, type: !22)
!12291 = !DILocalVariable(name: "pin", scope: !12277, file: !1933, line: 196, type: !113)
!12292 = !DILocalVariable(name: "mux", scope: !12277, file: !1933, line: 196, type: !113)
!12293 = !DILocalVariable(name: "pin_cgf", scope: !12277, file: !1933, line: 197, type: !113)
!12294 = !DILocalVariable(name: "ret", scope: !12277, file: !1933, line: 198, type: !105)
!12295 = !DILocalVariable(name: "i", scope: !12296, file: !1933, line: 209, type: !169)
!12296 = distinct !DILexicalBlock(scope: !12277, file: !1933, line: 209, column: 2)
!12297 = !DILocalVariable(name: "gpio_out", scope: !12298, file: !1933, line: 239, type: !113)
!12298 = distinct !DILexicalBlock(scope: !12299, file: !1933, line: 238, column: 55)
!12299 = distinct !DILexicalBlock(scope: !12300, file: !1933, line: 238, column: 14)
!12300 = distinct !DILexicalBlock(scope: !12301, file: !1933, line: 236, column: 14)
!12301 = distinct !DILexicalBlock(scope: !12302, file: !1933, line: 234, column: 7)
!12302 = distinct !DILexicalBlock(scope: !12303, file: !1933, line: 209, column: 41)
!12303 = distinct !DILexicalBlock(scope: !12296, file: !1933, line: 209, column: 2)
!12304 = !DILocation(line: 0, scope: !12277)
!12305 = !DILocation(line: 0, scope: !12296)
!12306 = !DILocation(line: 209, column: 25, scope: !12303)
!12307 = !DILocation(line: 209, column: 2, scope: !12296)
!12308 = distinct !{!12308, !12307, !12309}
!12309 = !DILocation(line: 259, column: 2, scope: !12296)
!12310 = !DILocation(line: 210, column: 17, scope: !12302)
!12311 = !DILocation(line: 234, column: 7, scope: !12301)
!12312 = !DILocation(line: 234, column: 33, scope: !12301)
!12313 = !DILocation(line: 234, column: 7, scope: !12302)
!12314 = !DILocation(line: 235, column: 22, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12301, file: !1933, line: 234, column: 49)
!12316 = !DILocation(line: 235, column: 29, scope: !12315)
!12317 = !DILocation(line: 236, column: 3, scope: !12315)
!12318 = !DILocation(line: 236, column: 14, scope: !12301)
!12319 = !DILocation(line: 239, column: 32, scope: !12298)
!12320 = !DILocation(line: 0, scope: !12298)
!12321 = !DILocation(line: 241, column: 8, scope: !12298)
!12322 = !DILocation(line: 246, column: 3, scope: !12298)
!12323 = !DILocation(line: 252, column: 9, scope: !12302)
!12324 = !DILocation(line: 255, column: 9, scope: !12302)
!12325 = !DILocation(line: 256, column: 11, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12302, file: !1933, line: 256, column: 7)
!12327 = !DILocation(line: 209, column: 37, scope: !12303)
!12328 = !DILocation(line: 256, column: 7, scope: !12302)
!12329 = !DILocation(line: 262, column: 1, scope: !12277)
!12330 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1933, file: !1933, line: 176, type: !12331, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1852, retainedNodes: !12333)
!12331 = !DISubroutineType(types: !12332)
!12332 = !{!105, !113, !113, !113}
!12333 = !{!12334, !12335, !12336, !12337}
!12334 = !DILocalVariable(name: "pin", arg: 1, scope: !12330, file: !1933, line: 176, type: !113)
!12335 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12330, file: !1933, line: 176, type: !113)
!12336 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12330, file: !1933, line: 176, type: !113)
!12337 = !DILocalVariable(name: "port_device", scope: !12330, file: !1933, line: 178, type: !1863)
!12338 = !DILocation(line: 0, scope: !12330)
!12339 = !DILocation(line: 180, column: 22, scope: !12340)
!12340 = distinct !DILexicalBlock(scope: !12330, file: !1933, line: 180, column: 6)
!12341 = !DILocation(line: 180, column: 6, scope: !12330)
!12342 = !DILocation(line: 180, column: 6, scope: !12340)
!12343 = !DILocation(line: 184, column: 16, scope: !12330)
!12344 = !DILocation(line: 186, column: 19, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12330, file: !1933, line: 186, column: 6)
!12346 = !DILocation(line: 186, column: 28, scope: !12345)
!12347 = !DILocation(line: 186, column: 33, scope: !12345)
!12348 = !DILocation(line: 186, column: 6, scope: !12330)
!12349 = !DILocation(line: 190, column: 43, scope: !12330)
!12350 = !DILocation(line: 190, column: 9, scope: !12330)
!12351 = !DILocation(line: 190, column: 2, scope: !12330)
!12352 = !DILocation(line: 191, column: 1, scope: !12330)
!12353 = distinct !DISubprogram(name: "device_is_ready", scope: !9632, file: !9632, line: 47, type: !12354, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1852, retainedNodes: !12356)
!12354 = !DISubroutineType(types: !12355)
!12355 = !{!505, !1863}
!12356 = !{!12357}
!12357 = !DILocalVariable(name: "dev", arg: 1, scope: !12353, file: !9632, line: 47, type: !1863)
!12358 = !DILocation(line: 0, scope: !12353)
!12359 = !DILocation(line: 55, column: 2, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12353, file: !9632, line: 55, column: 2)
!12361 = !{i64 2148855906}
!12362 = !DILocation(line: 56, column: 9, scope: !12353)
!12363 = !DILocation(line: 56, column: 2, scope: !12353)
!12364 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !494, file: !494, line: 730, type: !12354, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1852, retainedNodes: !12365)
!12365 = !{!12366}
!12366 = !DILocalVariable(name: "dev", arg: 1, scope: !12364, file: !494, line: 730, type: !1863)
!12367 = !DILocation(line: 0, scope: !12364)
!12368 = !DILocation(line: 732, column: 9, scope: !12364)
!12369 = !DILocation(line: 732, column: 2, scope: !12364)
!12370 = distinct !DISubprogram(name: "SystemInit", scope: !1963, file: !1963, line: 160, type: !266, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1939, retainedNodes: !397)
!12371 = !DILocation(line: 170, column: 1, scope: !12370)
!12372 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1963, file: !1963, line: 210, type: !266, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1939, retainedNodes: !12373)
!12373 = !{!12374, !12375, !12376, !12377, !12378}
!12374 = !DILocalVariable(name: "tmp", scope: !12372, file: !1963, line: 212, type: !113)
!12375 = !DILocalVariable(name: "pllmul", scope: !12372, file: !1963, line: 212, type: !113)
!12376 = !DILocalVariable(name: "plldiv", scope: !12372, file: !1963, line: 212, type: !113)
!12377 = !DILocalVariable(name: "pllsource", scope: !12372, file: !1963, line: 212, type: !113)
!12378 = !DILocalVariable(name: "msirange", scope: !12372, file: !1963, line: 212, type: !113)
!12379 = !DILocation(line: 0, scope: !12372)
!12380 = !DILocation(line: 215, column: 14, scope: !12372)
!12381 = !DILocation(line: 217, column: 3, scope: !12372)
!12382 = !DILocation(line: 220, column: 24, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12372, file: !1963, line: 218, column: 3)
!12384 = !DILocation(line: 220, column: 52, scope: !12383)
!12385 = !DILocation(line: 221, column: 32, scope: !12383)
!12386 = !DILocation(line: 222, column: 7, scope: !12383)
!12387 = !DILocation(line: 228, column: 7, scope: !12383)
!12388 = !DILocation(line: 231, column: 21, scope: !12383)
!12389 = !DILocation(line: 232, column: 21, scope: !12383)
!12390 = !DILocation(line: 233, column: 36, scope: !12383)
!12391 = !DILocation(line: 233, column: 16, scope: !12383)
!12392 = !DILocation(line: 234, column: 24, scope: !12383)
!12393 = !DILocation(line: 234, column: 31, scope: !12383)
!12394 = !DILocation(line: 236, column: 24, scope: !12383)
!12395 = !DILocation(line: 236, column: 29, scope: !12383)
!12396 = !DILocation(line: 238, column: 21, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12383, file: !1963, line: 238, column: 11)
!12398 = !DILocation(line: 238, column: 11, scope: !12383)
!12399 = !DILocation(line: 241, column: 41, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12397, file: !1963, line: 239, column: 7)
!12401 = !DILocation(line: 241, column: 51, scope: !12400)
!12402 = !DILocation(line: 242, column: 7, scope: !12400)
!12403 = !DILocation(line: 246, column: 41, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12397, file: !1963, line: 244, column: 7)
!12405 = !DILocation(line: 246, column: 51, scope: !12404)
!12406 = !DILocation(line: 0, scope: !12383)
!12407 = !DILocation(line: 256, column: 30, scope: !12372)
!12408 = !DILocation(line: 256, column: 52, scope: !12372)
!12409 = !DILocation(line: 256, column: 9, scope: !12372)
!12410 = !DILocation(line: 258, column: 19, scope: !12372)
!12411 = !DILocation(line: 259, column: 1, scope: !12372)
!12412 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12413, file: !12413, line: 228, type: !12414, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !12417)
!12413 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12414 = !DISubroutineType(types: !12415)
!12415 = !{!12416}
!12416 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2998, line: 45, baseType: !2997)
!12417 = !{!12418, !12419}
!12418 = !DILocalVariable(name: "tickstart", scope: !12412, file: !12413, line: 230, type: !113)
!12419 = !DILocalVariable(name: "status", scope: !12412, file: !12413, line: 231, type: !12416)
!12420 = !DILocation(line: 234, column: 3, scope: !12412)
!12421 = !DILocation(line: 238, column: 3, scope: !12412)
!12422 = !DILocation(line: 241, column: 15, scope: !12412)
!12423 = !DILocation(line: 0, scope: !12412)
!12424 = !DILocation(line: 244, column: 3, scope: !12412)
!12425 = !DILocation(line: 244, column: 10, scope: !12412)
!12426 = !DILocation(line: 244, column: 43, scope: !12412)
!12427 = !DILocation(line: 246, column: 10, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12429, file: !12413, line: 246, column: 9)
!12429 = distinct !DILexicalBlock(scope: !12412, file: !12413, line: 245, column: 3)
!12430 = !DILocation(line: 246, column: 24, scope: !12428)
!12431 = !DILocation(line: 246, column: 37, scope: !12428)
!12432 = !DILocation(line: 246, column: 9, scope: !12429)
!12433 = distinct !{!12433, !12424, !12434}
!12434 = !DILocation(line: 250, column: 3, scope: !12412)
!12435 = !DILocation(line: 253, column: 3, scope: !12412)
!12436 = !DILocation(line: 256, column: 3, scope: !12412)
!12437 = !DILocation(line: 256, column: 10, scope: !12412)
!12438 = !DILocation(line: 256, column: 44, scope: !12412)
!12439 = !DILocation(line: 258, column: 10, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12441, file: !12413, line: 258, column: 9)
!12441 = distinct !DILexicalBlock(scope: !12412, file: !12413, line: 257, column: 3)
!12442 = !DILocation(line: 258, column: 24, scope: !12440)
!12443 = !DILocation(line: 258, column: 37, scope: !12440)
!12444 = !DILocation(line: 258, column: 9, scope: !12441)
!12445 = distinct !{!12445, !12436, !12446}
!12446 = !DILocation(line: 262, column: 3, scope: !12412)
!12447 = !DILocation(line: 265, column: 19, scope: !12412)
!12448 = !DILocation(line: 268, column: 25, scope: !12412)
!12449 = !DILocation(line: 268, column: 12, scope: !12412)
!12450 = !DILocation(line: 269, column: 13, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12412, file: !12413, line: 269, column: 6)
!12452 = !DILocation(line: 269, column: 6, scope: !12412)
!12453 = !DILocation(line: 275, column: 3, scope: !12412)
!12454 = !DILocation(line: 277, column: 3, scope: !12412)
!12455 = !DILocation(line: 280, column: 15, scope: !12412)
!12456 = !DILocation(line: 283, column: 3, scope: !12412)
!12457 = !DILocation(line: 283, column: 10, scope: !12412)
!12458 = !DILocation(line: 283, column: 43, scope: !12412)
!12459 = !DILocation(line: 285, column: 10, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12461, file: !12413, line: 285, column: 9)
!12461 = distinct !DILexicalBlock(scope: !12412, file: !12413, line: 284, column: 3)
!12462 = !DILocation(line: 285, column: 24, scope: !12460)
!12463 = !DILocation(line: 285, column: 37, scope: !12460)
!12464 = !DILocation(line: 285, column: 9, scope: !12461)
!12465 = distinct !{!12465, !12456, !12466}
!12466 = !DILocation(line: 289, column: 3, scope: !12412)
!12467 = !DILocation(line: 292, column: 3, scope: !12412)
!12468 = !DILocation(line: 295, column: 3, scope: !12412)
!12469 = !DILocation(line: 299, column: 3, scope: !12412)
!12470 = !DILocation(line: 305, column: 3, scope: !12412)
!12471 = !DILocation(line: 307, column: 3, scope: !12412)
!12472 = !DILocation(line: 308, column: 1, scope: !12412)
!12473 = !DISubprogram(name: "HAL_GetTick", scope: !12474, file: !12474, line: 945, type: !395, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!12474 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12475 = !DISubprogram(name: "HAL_InitTick", scope: !12474, file: !12474, line: 932, type: !12476, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!12476 = !DISubroutineType(types: !12477)
!12477 = !{!12416, !113}
!12478 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12413, file: !12413, line: 324, type: !12479, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !12503)
!12479 = !DISubroutineType(types: !12480)
!12480 = !{!12416, !12481}
!12481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12482, size: 32)
!12482 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12483, line: 283, baseType: !12484)
!12483 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12483, line: 252, size: 416, elements: !12485)
!12485 = !{!12486, !12487, !12488, !12489, !12490, !12491, !12492, !12493, !12494, !12495}
!12486 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12484, file: !12483, line: 254, baseType: !113, size: 32)
!12487 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12484, file: !12483, line: 257, baseType: !113, size: 32, offset: 32)
!12488 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12484, file: !12483, line: 260, baseType: !113, size: 32, offset: 64)
!12489 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12484, file: !12483, line: 263, baseType: !113, size: 32, offset: 96)
!12490 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12484, file: !12483, line: 266, baseType: !113, size: 32, offset: 128)
!12491 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12484, file: !12483, line: 269, baseType: !113, size: 32, offset: 160)
!12492 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !12484, file: !12483, line: 272, baseType: !113, size: 32, offset: 192)
!12493 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !12484, file: !12483, line: 275, baseType: !113, size: 32, offset: 224)
!12494 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !12484, file: !12483, line: 278, baseType: !113, size: 32, offset: 256)
!12495 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12484, file: !12483, line: 281, baseType: !12496, size: 128, offset: 288)
!12496 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12483, line: 247, baseType: !12497)
!12497 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12483, line: 234, size: 128, elements: !12498)
!12498 = !{!12499, !12500, !12501, !12502}
!12499 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12497, file: !12483, line: 236, baseType: !113, size: 32)
!12500 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12497, file: !12483, line: 239, baseType: !113, size: 32, offset: 32)
!12501 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !12497, file: !12483, line: 242, baseType: !113, size: 32, offset: 64)
!12502 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !12497, file: !12483, line: 245, baseType: !113, size: 32, offset: 96)
!12503 = !{!12504, !12505, !12506, !12507, !12508, !12509, !12513}
!12504 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12478, file: !12413, line: 324, type: !12481)
!12505 = !DILocalVariable(name: "tickstart", scope: !12478, file: !12413, line: 326, type: !113)
!12506 = !DILocalVariable(name: "status", scope: !12478, file: !12413, line: 327, type: !12416)
!12507 = !DILocalVariable(name: "sysclk_source", scope: !12478, file: !12413, line: 328, type: !113)
!12508 = !DILocalVariable(name: "pll_config", scope: !12478, file: !12413, line: 328, type: !113)
!12509 = !DILocalVariable(name: "pwrclkchanged", scope: !12510, file: !12413, line: 613, type: !12512)
!12510 = distinct !DILexicalBlock(scope: !12511, file: !12413, line: 612, column: 3)
!12511 = distinct !DILexicalBlock(scope: !12478, file: !12413, line: 611, column: 6)
!12512 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1048, line: 181, baseType: !3008)
!12513 = !DILocalVariable(name: "tmpreg", scope: !12514, file: !12413, line: 622, type: !461)
!12514 = distinct !DILexicalBlock(scope: !12515, file: !12413, line: 622, column: 7)
!12515 = distinct !DILexicalBlock(scope: !12516, file: !12413, line: 621, column: 5)
!12516 = distinct !DILexicalBlock(scope: !12510, file: !12413, line: 620, column: 8)
!12517 = !DILocation(line: 0, scope: !12478)
!12518 = !DILocation(line: 331, column: 24, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12478, file: !12413, line: 331, column: 6)
!12520 = !DILocation(line: 331, column: 6, scope: !12478)
!12521 = !DILocation(line: 338, column: 19, scope: !12478)
!12522 = !DILocation(line: 339, column: 16, scope: !12478)
!12523 = !DILocation(line: 342, column: 27, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12478, file: !12413, line: 342, column: 6)
!12525 = !DILocation(line: 342, column: 43, scope: !12524)
!12526 = !DILocation(line: 342, column: 69, scope: !12524)
!12527 = !DILocation(line: 342, column: 6, scope: !12478)
!12528 = !DILocation(line: 348, column: 23, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12530, file: !12413, line: 348, column: 8)
!12530 = distinct !DILexicalBlock(scope: !12524, file: !12413, line: 343, column: 3)
!12531 = !DILocation(line: 349, column: 8, scope: !12529)
!12532 = !DILocation(line: 349, column: 27, scope: !12529)
!12533 = !DILocation(line: 349, column: 62, scope: !12529)
!12534 = !DILocation(line: 351, column: 11, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12536, file: !12413, line: 351, column: 10)
!12536 = distinct !DILexicalBlock(scope: !12529, file: !12413, line: 350, column: 5)
!12537 = !DILocation(line: 351, column: 47, scope: !12535)
!12538 = !DILocation(line: 351, column: 54, scope: !12535)
!12539 = !DILocation(line: 351, column: 77, scope: !12535)
!12540 = !DILocation(line: 351, column: 86, scope: !12535)
!12541 = !DILocation(line: 351, column: 10, scope: !12536)
!12542 = !DILocation(line: 359, column: 7, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12544, file: !12413, line: 359, column: 7)
!12544 = distinct !DILexicalBlock(scope: !12545, file: !12413, line: 359, column: 7)
!12545 = distinct !DILexicalBlock(scope: !12529, file: !12413, line: 357, column: 5)
!12546 = !DILocation(line: 359, column: 7, scope: !12544)
!12547 = !DILocation(line: 359, column: 7, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12543, file: !12413, line: 359, column: 7)
!12549 = !DILocation(line: 359, column: 7, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12551, file: !12413, line: 359, column: 7)
!12551 = distinct !DILexicalBlock(scope: !12543, file: !12413, line: 359, column: 7)
!12552 = !DILocation(line: 359, column: 7, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12554, file: !12413, line: 359, column: 7)
!12554 = distinct !DILexicalBlock(scope: !12551, file: !12413, line: 359, column: 7)
!12555 = !DILocation(line: 359, column: 7, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12554, file: !12413, line: 359, column: 7)
!12557 = !DILocation(line: 0, scope: !12543)
!12558 = !DILocation(line: 362, column: 29, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12545, file: !12413, line: 362, column: 10)
!12560 = !DILocation(line: 362, column: 38, scope: !12559)
!12561 = !DILocation(line: 0, scope: !12559)
!12562 = !DILocation(line: 362, column: 10, scope: !12545)
!12563 = !DILocation(line: 368, column: 15, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12559, file: !12413, line: 363, column: 7)
!12565 = !DILocation(line: 368, column: 51, scope: !12564)
!12566 = !DILocation(line: 368, column: 9, scope: !12564)
!12567 = !DILocation(line: 370, column: 15, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12569, file: !12413, line: 370, column: 14)
!12569 = distinct !DILexicalBlock(scope: !12564, file: !12413, line: 369, column: 9)
!12570 = !DILocation(line: 370, column: 29, scope: !12568)
!12571 = !DILocation(line: 370, column: 43, scope: !12568)
!12572 = !DILocation(line: 370, column: 14, scope: !12569)
!12573 = distinct !{!12573, !12566, !12574}
!12574 = !DILocation(line: 374, column: 9, scope: !12564)
!12575 = !DILocation(line: 382, column: 15, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12559, file: !12413, line: 377, column: 7)
!12577 = !DILocation(line: 382, column: 51, scope: !12576)
!12578 = !DILocation(line: 382, column: 9, scope: !12576)
!12579 = !DILocation(line: 384, column: 16, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12581, file: !12413, line: 384, column: 15)
!12581 = distinct !DILexicalBlock(scope: !12576, file: !12413, line: 383, column: 9)
!12582 = !DILocation(line: 384, column: 30, scope: !12580)
!12583 = !DILocation(line: 384, column: 44, scope: !12580)
!12584 = !DILocation(line: 384, column: 15, scope: !12581)
!12585 = distinct !{!12585, !12578, !12586}
!12586 = !DILocation(line: 388, column: 9, scope: !12576)
!12587 = !DILocation(line: 393, column: 27, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12478, file: !12413, line: 393, column: 6)
!12589 = !DILocation(line: 393, column: 43, scope: !12588)
!12590 = !DILocation(line: 393, column: 69, scope: !12588)
!12591 = !DILocation(line: 393, column: 6, scope: !12478)
!12592 = !DILocation(line: 400, column: 23, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12594, file: !12413, line: 400, column: 8)
!12594 = distinct !DILexicalBlock(scope: !12588, file: !12413, line: 394, column: 3)
!12595 = !DILocation(line: 401, column: 8, scope: !12593)
!12596 = !DILocation(line: 401, column: 27, scope: !12593)
!12597 = !DILocation(line: 401, column: 62, scope: !12593)
!12598 = !DILocation(line: 404, column: 11, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12600, file: !12413, line: 404, column: 10)
!12600 = distinct !DILexicalBlock(scope: !12593, file: !12413, line: 402, column: 5)
!12601 = !DILocation(line: 404, column: 47, scope: !12599)
!12602 = !DILocation(line: 404, column: 54, scope: !12599)
!12603 = !DILocation(line: 404, column: 77, scope: !12599)
!12604 = !DILocation(line: 404, column: 86, scope: !12599)
!12605 = !DILocation(line: 404, column: 10, scope: !12600)
!12606 = !DILocation(line: 418, column: 29, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12608, file: !12413, line: 418, column: 10)
!12608 = distinct !DILexicalBlock(scope: !12593, file: !12413, line: 416, column: 5)
!12609 = !DILocation(line: 418, column: 38, scope: !12607)
!12610 = !DILocation(line: 418, column: 10, scope: !12608)
!12611 = !DILocation(line: 421, column: 9, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12607, file: !12413, line: 419, column: 7)
!12613 = !DILocation(line: 424, column: 21, scope: !12612)
!12614 = !DILocation(line: 427, column: 9, scope: !12612)
!12615 = !DILocation(line: 427, column: 15, scope: !12612)
!12616 = !DILocation(line: 427, column: 51, scope: !12612)
!12617 = !DILocation(line: 429, column: 15, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12619, file: !12413, line: 429, column: 14)
!12619 = distinct !DILexicalBlock(scope: !12612, file: !12413, line: 428, column: 9)
!12620 = !DILocation(line: 429, column: 29, scope: !12618)
!12621 = !DILocation(line: 429, column: 43, scope: !12618)
!12622 = !DILocation(line: 429, column: 14, scope: !12619)
!12623 = distinct !{!12623, !12614, !12624}
!12624 = !DILocation(line: 433, column: 9, scope: !12612)
!12625 = !DILocation(line: 441, column: 9, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12607, file: !12413, line: 439, column: 7)
!12627 = !DILocation(line: 444, column: 21, scope: !12626)
!12628 = !DILocation(line: 447, column: 9, scope: !12626)
!12629 = !DILocation(line: 447, column: 15, scope: !12626)
!12630 = !DILocation(line: 447, column: 51, scope: !12626)
!12631 = !DILocation(line: 449, column: 15, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12633, file: !12413, line: 449, column: 14)
!12633 = distinct !DILexicalBlock(scope: !12626, file: !12413, line: 448, column: 9)
!12634 = !DILocation(line: 449, column: 29, scope: !12632)
!12635 = !DILocation(line: 449, column: 43, scope: !12632)
!12636 = !DILocation(line: 449, column: 14, scope: !12633)
!12637 = distinct !{!12637, !12628, !12638}
!12638 = !DILocation(line: 453, column: 9, scope: !12626)
!12639 = !DILocation(line: 0, scope: !12593)
!12640 = !DILocation(line: 458, column: 27, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12478, file: !12413, line: 458, column: 6)
!12642 = !DILocation(line: 458, column: 43, scope: !12641)
!12643 = !DILocation(line: 458, column: 69, scope: !12641)
!12644 = !DILocation(line: 458, column: 6, scope: !12478)
!12645 = !DILocation(line: 461, column: 22, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12647, file: !12413, line: 461, column: 8)
!12647 = distinct !DILexicalBlock(scope: !12641, file: !12413, line: 459, column: 3)
!12648 = !DILocation(line: 461, column: 8, scope: !12647)
!12649 = !DILocation(line: 463, column: 11, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12651, file: !12413, line: 463, column: 10)
!12651 = distinct !DILexicalBlock(scope: !12646, file: !12413, line: 462, column: 5)
!12652 = !DILocation(line: 463, column: 47, scope: !12650)
!12653 = !DILocation(line: 463, column: 54, scope: !12650)
!12654 = !DILocation(line: 463, column: 77, scope: !12650)
!12655 = !DILocation(line: 463, column: 86, scope: !12650)
!12656 = !DILocation(line: 463, column: 10, scope: !12651)
!12657 = !DILocation(line: 477, column: 31, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12659, file: !12413, line: 477, column: 12)
!12659 = distinct !DILexicalBlock(scope: !12650, file: !12413, line: 469, column: 7)
!12660 = !DILocation(line: 477, column: 47, scope: !12658)
!12661 = !DILocation(line: 477, column: 45, scope: !12658)
!12662 = !DILocation(line: 477, column: 12, scope: !12659)
!12663 = !DILocation(line: 480, column: 14, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !12413, line: 480, column: 14)
!12665 = distinct !DILexicalBlock(scope: !12658, file: !12413, line: 478, column: 9)
!12666 = !DILocation(line: 480, column: 80, scope: !12664)
!12667 = !DILocation(line: 480, column: 14, scope: !12665)
!12668 = !DILocation(line: 486, column: 11, scope: !12665)
!12669 = !DILocation(line: 488, column: 11, scope: !12665)
!12670 = !DILocation(line: 489, column: 9, scope: !12665)
!12671 = !DILocation(line: 494, column: 11, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12658, file: !12413, line: 491, column: 9)
!12673 = !DILocation(line: 496, column: 11, scope: !12672)
!12674 = !DILocation(line: 499, column: 65, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12672, file: !12413, line: 499, column: 14)
!12676 = !DILocation(line: 499, column: 14, scope: !12675)
!12677 = !DILocation(line: 499, column: 80, scope: !12675)
!12678 = !DILocation(line: 499, column: 14, scope: !12672)
!12679 = !DILocation(line: 506, column: 67, scope: !12659)
!12680 = !DILocation(line: 506, column: 81, scope: !12659)
!12681 = !DILocation(line: 506, column: 36, scope: !12659)
!12682 = !DILocation(line: 507, column: 52, scope: !12659)
!12683 = !DILocation(line: 507, column: 74, scope: !12659)
!12684 = !DILocation(line: 507, column: 31, scope: !12659)
!12685 = !DILocation(line: 507, column: 28, scope: !12659)
!12686 = !DILocation(line: 506, column: 25, scope: !12659)
!12687 = !DILocation(line: 510, column: 31, scope: !12659)
!12688 = !DILocation(line: 510, column: 18, scope: !12659)
!12689 = !DILocation(line: 511, column: 19, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12659, file: !12413, line: 511, column: 12)
!12691 = !DILocation(line: 511, column: 12, scope: !12659)
!12692 = !DILocation(line: 523, column: 29, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12694, file: !12413, line: 523, column: 10)
!12694 = distinct !DILexicalBlock(scope: !12646, file: !12413, line: 518, column: 5)
!12695 = !DILocation(line: 523, column: 38, scope: !12693)
!12696 = !DILocation(line: 523, column: 10, scope: !12694)
!12697 = !DILocation(line: 526, column: 9, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12693, file: !12413, line: 524, column: 7)
!12699 = !DILocation(line: 529, column: 21, scope: !12698)
!12700 = !DILocation(line: 532, column: 9, scope: !12698)
!12701 = !DILocation(line: 532, column: 15, scope: !12698)
!12702 = !DILocation(line: 532, column: 51, scope: !12698)
!12703 = !DILocation(line: 534, column: 15, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12705, file: !12413, line: 534, column: 14)
!12705 = distinct !DILexicalBlock(scope: !12698, file: !12413, line: 533, column: 9)
!12706 = !DILocation(line: 534, column: 29, scope: !12704)
!12707 = !DILocation(line: 534, column: 42, scope: !12704)
!12708 = !DILocation(line: 534, column: 14, scope: !12705)
!12709 = distinct !{!12709, !12700, !12710}
!12710 = !DILocation(line: 538, column: 9, scope: !12698)
!12711 = !DILocation(line: 544, column: 9, scope: !12698)
!12712 = !DILocation(line: 546, column: 9, scope: !12698)
!12713 = !DILocation(line: 548, column: 7, scope: !12698)
!12714 = !DILocation(line: 552, column: 9, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12693, file: !12413, line: 550, column: 7)
!12716 = !DILocation(line: 555, column: 21, scope: !12715)
!12717 = !DILocation(line: 558, column: 9, scope: !12715)
!12718 = !DILocation(line: 558, column: 15, scope: !12715)
!12719 = !DILocation(line: 558, column: 51, scope: !12715)
!12720 = !DILocation(line: 560, column: 15, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12722, file: !12413, line: 560, column: 14)
!12722 = distinct !DILexicalBlock(scope: !12715, file: !12413, line: 559, column: 9)
!12723 = !DILocation(line: 560, column: 29, scope: !12721)
!12724 = !DILocation(line: 560, column: 42, scope: !12721)
!12725 = !DILocation(line: 560, column: 14, scope: !12722)
!12726 = distinct !{!12726, !12717, !12727}
!12727 = !DILocation(line: 564, column: 9, scope: !12715)
!12728 = !DILocation(line: 569, column: 27, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12478, file: !12413, line: 569, column: 6)
!12730 = !DILocation(line: 569, column: 43, scope: !12729)
!12731 = !DILocation(line: 569, column: 69, scope: !12729)
!12732 = !DILocation(line: 569, column: 6, scope: !12478)
!12733 = !DILocation(line: 575, column: 27, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12735, file: !12413, line: 575, column: 8)
!12735 = distinct !DILexicalBlock(scope: !12729, file: !12413, line: 570, column: 3)
!12736 = !DILocation(line: 575, column: 36, scope: !12734)
!12737 = !DILocation(line: 575, column: 8, scope: !12735)
!12738 = !DILocation(line: 578, column: 7, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12734, file: !12413, line: 576, column: 5)
!12740 = !DILocation(line: 581, column: 19, scope: !12739)
!12741 = !DILocation(line: 584, column: 7, scope: !12739)
!12742 = !DILocation(line: 584, column: 13, scope: !12739)
!12743 = !DILocation(line: 584, column: 49, scope: !12739)
!12744 = !DILocation(line: 586, column: 13, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12746, file: !12413, line: 586, column: 12)
!12746 = distinct !DILexicalBlock(scope: !12739, file: !12413, line: 585, column: 7)
!12747 = !DILocation(line: 586, column: 27, scope: !12745)
!12748 = !DILocation(line: 586, column: 41, scope: !12745)
!12749 = !DILocation(line: 586, column: 12, scope: !12746)
!12750 = distinct !{!12750, !12741, !12751}
!12751 = !DILocation(line: 590, column: 7, scope: !12739)
!12752 = !DILocation(line: 595, column: 7, scope: !12753)
!12753 = distinct !DILexicalBlock(scope: !12734, file: !12413, line: 593, column: 5)
!12754 = !DILocation(line: 598, column: 19, scope: !12753)
!12755 = !DILocation(line: 601, column: 7, scope: !12753)
!12756 = !DILocation(line: 601, column: 13, scope: !12753)
!12757 = !DILocation(line: 601, column: 49, scope: !12753)
!12758 = !DILocation(line: 603, column: 13, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12760, file: !12413, line: 603, column: 12)
!12760 = distinct !DILexicalBlock(scope: !12753, file: !12413, line: 602, column: 7)
!12761 = !DILocation(line: 603, column: 27, scope: !12759)
!12762 = !DILocation(line: 603, column: 41, scope: !12759)
!12763 = !DILocation(line: 603, column: 12, scope: !12760)
!12764 = distinct !{!12764, !12755, !12765}
!12765 = !DILocation(line: 607, column: 7, scope: !12753)
!12766 = !DILocation(line: 611, column: 27, scope: !12511)
!12767 = !DILocation(line: 611, column: 43, scope: !12511)
!12768 = !DILocation(line: 611, column: 69, scope: !12511)
!12769 = !DILocation(line: 611, column: 6, scope: !12478)
!12770 = !DILocation(line: 0, scope: !12510)
!12771 = !DILocation(line: 620, column: 8, scope: !12516)
!12772 = !DILocation(line: 620, column: 8, scope: !12510)
!12773 = !DILocation(line: 622, column: 7, scope: !12514)
!12774 = !DILocation(line: 622, column: 7, scope: !12515)
!12775 = !DILocation(line: 624, column: 5, scope: !12515)
!12776 = !DILocation(line: 626, column: 8, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12510, file: !12413, line: 626, column: 8)
!12778 = !DILocation(line: 626, column: 8, scope: !12510)
!12779 = !DILocation(line: 629, column: 7, scope: !12780)
!12780 = distinct !DILexicalBlock(scope: !12777, file: !12413, line: 627, column: 5)
!12781 = !DILocation(line: 632, column: 19, scope: !12780)
!12782 = !DILocation(line: 634, column: 7, scope: !12780)
!12783 = !DILocation(line: 634, column: 13, scope: !12780)
!12784 = !DILocation(line: 636, column: 13, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12786, file: !12413, line: 636, column: 12)
!12786 = distinct !DILexicalBlock(scope: !12780, file: !12413, line: 635, column: 7)
!12787 = !DILocation(line: 636, column: 27, scope: !12785)
!12788 = !DILocation(line: 636, column: 40, scope: !12785)
!12789 = !DILocation(line: 636, column: 12, scope: !12786)
!12790 = distinct !{!12790, !12782, !12791}
!12791 = !DILocation(line: 640, column: 7, scope: !12780)
!12792 = !DILocation(line: 644, column: 5, scope: !12793)
!12793 = distinct !DILexicalBlock(scope: !12794, file: !12413, line: 644, column: 5)
!12794 = distinct !DILexicalBlock(scope: !12510, file: !12413, line: 644, column: 5)
!12795 = !DILocation(line: 644, column: 5, scope: !12794)
!12796 = !DILocation(line: 644, column: 5, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12793, file: !12413, line: 644, column: 5)
!12798 = !DILocation(line: 644, column: 5, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12800, file: !12413, line: 644, column: 5)
!12800 = distinct !DILexicalBlock(scope: !12793, file: !12413, line: 644, column: 5)
!12801 = !DILocation(line: 644, column: 5, scope: !12802)
!12802 = distinct !DILexicalBlock(scope: !12803, file: !12413, line: 644, column: 5)
!12803 = distinct !DILexicalBlock(scope: !12800, file: !12413, line: 644, column: 5)
!12804 = !DILocation(line: 644, column: 5, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12803, file: !12413, line: 644, column: 5)
!12806 = !DILocation(line: 0, scope: !12793)
!12807 = !DILocation(line: 646, column: 27, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12510, file: !12413, line: 646, column: 8)
!12809 = !DILocation(line: 646, column: 36, scope: !12808)
!12810 = !DILocation(line: 0, scope: !12808)
!12811 = !DILocation(line: 646, column: 8, scope: !12510)
!12812 = !DILocation(line: 652, column: 13, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !12808, file: !12413, line: 647, column: 5)
!12814 = !DILocation(line: 652, column: 49, scope: !12813)
!12815 = !DILocation(line: 652, column: 7, scope: !12813)
!12816 = !DILocation(line: 654, column: 13, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12818, file: !12413, line: 654, column: 12)
!12818 = distinct !DILexicalBlock(scope: !12813, file: !12413, line: 653, column: 7)
!12819 = !DILocation(line: 654, column: 27, scope: !12817)
!12820 = !DILocation(line: 654, column: 41, scope: !12817)
!12821 = !DILocation(line: 654, column: 12, scope: !12818)
!12822 = distinct !{!12822, !12815, !12823}
!12823 = !DILocation(line: 658, column: 7, scope: !12813)
!12824 = !DILocation(line: 666, column: 13, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12808, file: !12413, line: 661, column: 5)
!12826 = !DILocation(line: 666, column: 49, scope: !12825)
!12827 = !DILocation(line: 666, column: 7, scope: !12825)
!12828 = !DILocation(line: 668, column: 13, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12830, file: !12413, line: 668, column: 12)
!12830 = distinct !DILexicalBlock(scope: !12825, file: !12413, line: 667, column: 7)
!12831 = !DILocation(line: 668, column: 27, scope: !12829)
!12832 = !DILocation(line: 668, column: 41, scope: !12829)
!12833 = !DILocation(line: 668, column: 12, scope: !12830)
!12834 = distinct !{!12834, !12827, !12835}
!12835 = !DILocation(line: 672, column: 7, scope: !12825)
!12836 = !DILocation(line: 676, column: 8, scope: !12510)
!12837 = !DILocation(line: 678, column: 7, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12839, file: !12413, line: 677, column: 5)
!12839 = distinct !DILexicalBlock(scope: !12510, file: !12413, line: 676, column: 8)
!12840 = !DILocation(line: 679, column: 5, scope: !12838)
!12841 = !DILocation(line: 685, column: 31, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12478, file: !12413, line: 685, column: 7)
!12843 = !DILocation(line: 685, column: 41, scope: !12842)
!12844 = !DILocation(line: 685, column: 7, scope: !12478)
!12845 = !DILocation(line: 688, column: 22, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12847, file: !12413, line: 688, column: 8)
!12847 = distinct !DILexicalBlock(scope: !12842, file: !12413, line: 686, column: 3)
!12848 = !DILocation(line: 688, column: 8, scope: !12847)
!12849 = !DILocation(line: 690, column: 44, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12851, file: !12413, line: 690, column: 10)
!12851 = distinct !DILexicalBlock(scope: !12846, file: !12413, line: 689, column: 5)
!12852 = !DILocation(line: 0, scope: !12850)
!12853 = !DILocation(line: 690, column: 10, scope: !12851)
!12854 = !DILocation(line: 704, column: 15, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12850, file: !12413, line: 691, column: 7)
!12856 = !DILocation(line: 704, column: 51, scope: !12855)
!12857 = !DILocation(line: 704, column: 9, scope: !12855)
!12858 = !DILocation(line: 706, column: 15, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12860, file: !12413, line: 706, column: 14)
!12860 = distinct !DILexicalBlock(scope: !12855, file: !12413, line: 705, column: 9)
!12861 = !DILocation(line: 706, column: 29, scope: !12859)
!12862 = !DILocation(line: 706, column: 43, scope: !12859)
!12863 = !DILocation(line: 706, column: 14, scope: !12860)
!12864 = distinct !{!12864, !12857, !12865}
!12865 = !DILocation(line: 710, column: 9, scope: !12855)
!12866 = !DILocation(line: 713, column: 9, scope: !12855)
!12867 = !DILocation(line: 717, column: 9, scope: !12855)
!12868 = !DILocation(line: 720, column: 21, scope: !12855)
!12869 = !DILocation(line: 723, column: 9, scope: !12855)
!12870 = !DILocation(line: 723, column: 15, scope: !12855)
!12871 = !DILocation(line: 723, column: 51, scope: !12855)
!12872 = !DILocation(line: 725, column: 15, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12874, file: !12413, line: 725, column: 14)
!12874 = distinct !DILexicalBlock(scope: !12855, file: !12413, line: 724, column: 9)
!12875 = !DILocation(line: 725, column: 29, scope: !12873)
!12876 = !DILocation(line: 725, column: 43, scope: !12873)
!12877 = !DILocation(line: 725, column: 14, scope: !12874)
!12878 = distinct !{!12878, !12869, !12879}
!12879 = !DILocation(line: 729, column: 9, scope: !12855)
!12880 = !DILocation(line: 740, column: 15, scope: !12881)
!12881 = distinct !DILexicalBlock(scope: !12850, file: !12413, line: 732, column: 7)
!12882 = !DILocation(line: 740, column: 51, scope: !12881)
!12883 = !DILocation(line: 740, column: 9, scope: !12881)
!12884 = !DILocation(line: 742, column: 15, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !12886, file: !12413, line: 742, column: 14)
!12886 = distinct !DILexicalBlock(scope: !12881, file: !12413, line: 741, column: 9)
!12887 = !DILocation(line: 742, column: 29, scope: !12885)
!12888 = !DILocation(line: 742, column: 43, scope: !12885)
!12889 = !DILocation(line: 742, column: 14, scope: !12886)
!12890 = distinct !{!12890, !12883, !12891}
!12891 = !DILocation(line: 746, column: 9, scope: !12881)
!12892 = !DILocation(line: 752, column: 44, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12894, file: !12413, line: 752, column: 10)
!12894 = distinct !DILexicalBlock(scope: !12846, file: !12413, line: 750, column: 5)
!12895 = !DILocation(line: 752, column: 10, scope: !12894)
!12896 = !DILocation(line: 759, column: 27, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12893, file: !12413, line: 757, column: 7)
!12898 = !DILocation(line: 760, column: 13, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12897, file: !12413, line: 760, column: 12)
!12900 = !DILocation(line: 760, column: 77, scope: !12899)
!12901 = !DILocation(line: 760, column: 51, scope: !12899)
!12902 = !DILocation(line: 760, column: 88, scope: !12899)
!12903 = !DILocation(line: 761, column: 13, scope: !12899)
!12904 = !DILocation(line: 761, column: 77, scope: !12899)
!12905 = !DILocation(line: 761, column: 51, scope: !12899)
!12906 = !DILocation(line: 761, column: 85, scope: !12899)
!12907 = !DILocation(line: 762, column: 13, scope: !12899)
!12908 = !DILocation(line: 762, column: 77, scope: !12899)
!12909 = !DILocation(line: 762, column: 51, scope: !12899)
!12910 = !DILocation(line: 760, column: 12, scope: !12897)
!12911 = !DILocation(line: 770, column: 3, scope: !12478)
!12912 = !DILocation(line: 771, column: 1, scope: !12478)
!12913 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !12413, file: !12413, line: 1343, type: !12476, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !12914)
!12914 = !{!12915, !12916, !12917, !12918}
!12915 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !12913, file: !12413, line: 1343, type: !113)
!12916 = !DILocalVariable(name: "vos", scope: !12913, file: !12413, line: 1345, type: !113)
!12917 = !DILocalVariable(name: "latency", scope: !12913, file: !12413, line: 1346, type: !113)
!12918 = !DILocalVariable(name: "tmpreg", scope: !12919, file: !12413, line: 1357, type: !461)
!12919 = distinct !DILexicalBlock(scope: !12920, file: !12413, line: 1357, column: 7)
!12920 = distinct !DILexicalBlock(scope: !12921, file: !12413, line: 1356, column: 5)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !12413, line: 1351, column: 8)
!12922 = distinct !DILexicalBlock(scope: !12923, file: !12413, line: 1350, column: 3)
!12923 = distinct !DILexicalBlock(scope: !12913, file: !12413, line: 1349, column: 7)
!12924 = !DILocation(line: 0, scope: !12913)
!12925 = !DILocation(line: 1349, column: 7, scope: !12923)
!12926 = !DILocation(line: 1349, column: 42, scope: !12923)
!12927 = !DILocation(line: 1349, column: 7, scope: !12913)
!12928 = !DILocation(line: 1351, column: 8, scope: !12921)
!12929 = !DILocation(line: 1351, column: 8, scope: !12922)
!12930 = !DILocation(line: 1353, column: 13, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12921, file: !12413, line: 1352, column: 5)
!12932 = !DILocation(line: 1354, column: 5, scope: !12931)
!12933 = !DILocation(line: 1357, column: 7, scope: !12919)
!12934 = !DILocation(line: 1357, column: 7, scope: !12920)
!12935 = !DILocation(line: 1358, column: 13, scope: !12920)
!12936 = !DILocation(line: 1359, column: 7, scope: !12920)
!12937 = !DILocation(line: 0, scope: !12921)
!12938 = !DILocation(line: 1363, column: 13, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12922, file: !12413, line: 1363, column: 8)
!12940 = !DILocation(line: 1363, column: 46, scope: !12939)
!12941 = !DILocation(line: 1369, column: 3, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12913, file: !12413, line: 1369, column: 3)
!12943 = !DILocation(line: 1369, column: 3, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12945, file: !12413, line: 1369, column: 3)
!12945 = distinct !DILexicalBlock(scope: !12942, file: !12413, line: 1369, column: 3)
!12946 = !DILocation(line: 1373, column: 6, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12913, file: !12413, line: 1373, column: 6)
!12948 = !DILocation(line: 1379, column: 1, scope: !12913)
!12949 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12413, file: !12413, line: 799, type: !12950, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !12961)
!12950 = !DISubroutineType(types: !12951)
!12951 = !{!12416, !12952, !113}
!12952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12953, size: 32)
!12953 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12483, line: 304, baseType: !12954)
!12954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12483, line: 288, size: 160, elements: !12955)
!12955 = !{!12956, !12957, !12958, !12959, !12960}
!12956 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12954, file: !12483, line: 290, baseType: !113, size: 32)
!12957 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12954, file: !12483, line: 293, baseType: !113, size: 32, offset: 32)
!12958 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12954, file: !12483, line: 296, baseType: !113, size: 32, offset: 64)
!12959 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12954, file: !12483, line: 299, baseType: !113, size: 32, offset: 96)
!12960 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12954, file: !12483, line: 302, baseType: !113, size: 32, offset: 128)
!12961 = !{!12962, !12963, !12964, !12965}
!12962 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12949, file: !12413, line: 799, type: !12952)
!12963 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12949, file: !12413, line: 799, type: !113)
!12964 = !DILocalVariable(name: "tickstart", scope: !12949, file: !12413, line: 801, type: !113)
!12965 = !DILocalVariable(name: "status", scope: !12949, file: !12413, line: 802, type: !12416)
!12966 = !DILocation(line: 0, scope: !12949)
!12967 = !DILocation(line: 805, column: 24, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12949, file: !12413, line: 805, column: 6)
!12969 = !DILocation(line: 805, column: 6, scope: !12949)
!12970 = !DILocation(line: 817, column: 17, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12949, file: !12413, line: 817, column: 6)
!12972 = !DILocation(line: 817, column: 15, scope: !12971)
!12973 = !DILocation(line: 817, column: 6, scope: !12949)
!12974 = !DILocation(line: 820, column: 5, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12976, file: !12413, line: 820, column: 5)
!12976 = distinct !DILexicalBlock(scope: !12977, file: !12413, line: 820, column: 5)
!12977 = distinct !DILexicalBlock(scope: !12971, file: !12413, line: 818, column: 3)
!12978 = !DILocation(line: 820, column: 5, scope: !12976)
!12979 = !DILocation(line: 820, column: 5, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12975, file: !12413, line: 820, column: 5)
!12981 = !DILocation(line: 824, column: 8, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12977, file: !12413, line: 824, column: 8)
!12983 = !DILocation(line: 824, column: 34, scope: !12982)
!12984 = !DILocation(line: 824, column: 8, scope: !12977)
!12985 = !DILocation(line: 831, column: 27, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12949, file: !12413, line: 831, column: 6)
!12987 = !DILocation(line: 831, column: 38, scope: !12986)
!12988 = !DILocation(line: 831, column: 60, scope: !12986)
!12989 = !DILocation(line: 831, column: 6, scope: !12949)
!12990 = !DILocation(line: 834, column: 5, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12986, file: !12413, line: 832, column: 3)
!12992 = !DILocation(line: 838, column: 27, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12949, file: !12413, line: 838, column: 6)
!12994 = !DILocation(line: 835, column: 3, scope: !12991)
!12995 = !DILocation(line: 838, column: 38, scope: !12993)
!12996 = !DILocation(line: 838, column: 62, scope: !12993)
!12997 = !DILocation(line: 838, column: 6, scope: !12949)
!12998 = !DILocation(line: 843, column: 27, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !13000, file: !12413, line: 843, column: 8)
!13000 = distinct !DILexicalBlock(scope: !12993, file: !12413, line: 839, column: 3)
!13001 = !DILocation(line: 843, column: 8, scope: !13000)
!13002 = !DILocation(line: 846, column: 10, scope: !13003)
!13003 = distinct !DILexicalBlock(scope: !13004, file: !12413, line: 846, column: 10)
!13004 = distinct !DILexicalBlock(scope: !12999, file: !12413, line: 844, column: 5)
!13005 = !DILocation(line: 846, column: 46, scope: !13003)
!13006 = !DILocation(line: 846, column: 10, scope: !13004)
!13007 = !DILocation(line: 855, column: 10, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !13009, file: !12413, line: 855, column: 10)
!13009 = distinct !DILexicalBlock(scope: !13010, file: !12413, line: 853, column: 5)
!13010 = distinct !DILexicalBlock(scope: !12999, file: !12413, line: 852, column: 13)
!13011 = !DILocation(line: 855, column: 46, scope: !13008)
!13012 = !DILocation(line: 855, column: 10, scope: !13009)
!13013 = !DILocation(line: 864, column: 10, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !13015, file: !12413, line: 864, column: 10)
!13015 = distinct !DILexicalBlock(scope: !13016, file: !12413, line: 862, column: 5)
!13016 = distinct !DILexicalBlock(scope: !13010, file: !12413, line: 861, column: 13)
!13017 = !DILocation(line: 864, column: 46, scope: !13014)
!13018 = !DILocation(line: 864, column: 10, scope: !13015)
!13019 = !DILocation(line: 873, column: 10, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !13021, file: !12413, line: 873, column: 10)
!13021 = distinct !DILexicalBlock(scope: !13016, file: !12413, line: 871, column: 5)
!13022 = !DILocation(line: 873, column: 46, scope: !13020)
!13023 = !DILocation(line: 873, column: 10, scope: !13021)
!13024 = !DILocation(line: 878, column: 5, scope: !13000)
!13025 = !DILocation(line: 881, column: 17, scope: !13000)
!13026 = !DILocation(line: 883, column: 27, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !13000, file: !12413, line: 883, column: 8)
!13028 = !DILocation(line: 883, column: 8, scope: !13000)
!13029 = !DILocation(line: 885, column: 14, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13027, file: !12413, line: 884, column: 5)
!13031 = !DILocation(line: 885, column: 44, scope: !13030)
!13032 = !DILocation(line: 885, column: 7, scope: !13030)
!13033 = !DILocation(line: 887, column: 13, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13035, file: !12413, line: 887, column: 12)
!13035 = distinct !DILexicalBlock(scope: !13030, file: !12413, line: 886, column: 7)
!13036 = !DILocation(line: 887, column: 27, scope: !13034)
!13037 = !DILocation(line: 887, column: 41, scope: !13034)
!13038 = !DILocation(line: 887, column: 12, scope: !13035)
!13039 = distinct !{!13039, !13032, !13040}
!13040 = !DILocation(line: 891, column: 7, scope: !13030)
!13041 = !DILocation(line: 895, column: 14, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13043, file: !12413, line: 894, column: 5)
!13043 = distinct !DILexicalBlock(scope: !13027, file: !12413, line: 893, column: 13)
!13044 = !DILocation(line: 895, column: 44, scope: !13042)
!13045 = !DILocation(line: 895, column: 7, scope: !13042)
!13046 = !DILocation(line: 897, column: 13, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13048, file: !12413, line: 897, column: 12)
!13048 = distinct !DILexicalBlock(scope: !13042, file: !12413, line: 896, column: 7)
!13049 = !DILocation(line: 897, column: 27, scope: !13047)
!13050 = !DILocation(line: 897, column: 41, scope: !13047)
!13051 = !DILocation(line: 897, column: 12, scope: !13048)
!13052 = distinct !{!13052, !13045, !13053}
!13053 = !DILocation(line: 901, column: 7, scope: !13042)
!13054 = !DILocation(line: 905, column: 14, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13056, file: !12413, line: 904, column: 5)
!13056 = distinct !DILexicalBlock(scope: !13043, file: !12413, line: 903, column: 13)
!13057 = !DILocation(line: 905, column: 44, scope: !13055)
!13058 = !DILocation(line: 905, column: 7, scope: !13055)
!13059 = !DILocation(line: 907, column: 13, scope: !13060)
!13060 = distinct !DILexicalBlock(scope: !13061, file: !12413, line: 907, column: 12)
!13061 = distinct !DILexicalBlock(scope: !13055, file: !12413, line: 906, column: 7)
!13062 = !DILocation(line: 907, column: 27, scope: !13060)
!13063 = !DILocation(line: 907, column: 41, scope: !13060)
!13064 = !DILocation(line: 907, column: 12, scope: !13061)
!13065 = distinct !{!13065, !13058, !13066}
!13066 = !DILocation(line: 911, column: 7, scope: !13055)
!13067 = !DILocation(line: 915, column: 13, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13056, file: !12413, line: 914, column: 5)
!13069 = !DILocation(line: 915, column: 43, scope: !13068)
!13070 = !DILocation(line: 915, column: 7, scope: !13068)
!13071 = !DILocation(line: 917, column: 13, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13073, file: !12413, line: 917, column: 12)
!13073 = distinct !DILexicalBlock(scope: !13068, file: !12413, line: 916, column: 7)
!13074 = !DILocation(line: 917, column: 27, scope: !13072)
!13075 = !DILocation(line: 917, column: 41, scope: !13072)
!13076 = !DILocation(line: 917, column: 12, scope: !13073)
!13077 = distinct !{!13077, !13070, !13078}
!13078 = !DILocation(line: 921, column: 7, scope: !13068)
!13079 = !DILocation(line: 925, column: 17, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !12949, file: !12413, line: 925, column: 6)
!13081 = !DILocation(line: 925, column: 15, scope: !13080)
!13082 = !DILocation(line: 925, column: 6, scope: !12949)
!13083 = !DILocation(line: 928, column: 5, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13085, file: !12413, line: 928, column: 5)
!13085 = distinct !DILexicalBlock(scope: !13080, file: !12413, line: 926, column: 3)
!13086 = !DILocation(line: 932, column: 8, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13085, file: !12413, line: 932, column: 8)
!13088 = !DILocation(line: 932, column: 34, scope: !13087)
!13089 = !DILocation(line: 932, column: 8, scope: !13085)
!13090 = !DILocation(line: 939, column: 27, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !12949, file: !12413, line: 939, column: 6)
!13092 = !DILocation(line: 939, column: 38, scope: !13091)
!13093 = !DILocation(line: 939, column: 61, scope: !13091)
!13094 = !DILocation(line: 939, column: 6, scope: !12949)
!13095 = !DILocation(line: 942, column: 5, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13091, file: !12413, line: 940, column: 3)
!13097 = !DILocation(line: 946, column: 27, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !12949, file: !12413, line: 946, column: 6)
!13099 = !DILocation(line: 943, column: 3, scope: !13096)
!13100 = !DILocation(line: 946, column: 38, scope: !13098)
!13101 = !DILocation(line: 946, column: 61, scope: !13098)
!13102 = !DILocation(line: 946, column: 6, scope: !12949)
!13103 = !DILocation(line: 949, column: 5, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13098, file: !12413, line: 947, column: 3)
!13105 = !DILocation(line: 950, column: 3, scope: !13104)
!13106 = !DILocation(line: 953, column: 21, scope: !12949)
!13107 = !DILocation(line: 953, column: 70, scope: !12949)
!13108 = !DILocation(line: 953, column: 91, scope: !12949)
!13109 = !DILocation(line: 953, column: 50, scope: !12949)
!13110 = !DILocation(line: 953, column: 47, scope: !12949)
!13111 = !DILocation(line: 953, column: 19, scope: !12949)
!13112 = !DILocation(line: 956, column: 25, scope: !12949)
!13113 = !DILocation(line: 956, column: 12, scope: !12949)
!13114 = !DILocation(line: 958, column: 3, scope: !12949)
!13115 = !DILocation(line: 959, column: 1, scope: !12949)
!13116 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12413, file: !12413, line: 1083, type: !395, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !13117)
!13117 = !{!13118, !13119, !13120, !13121, !13122, !13123}
!13118 = !DILocalVariable(name: "tmpreg", scope: !13116, file: !12413, line: 1085, type: !113)
!13119 = !DILocalVariable(name: "pllm", scope: !13116, file: !12413, line: 1085, type: !113)
!13120 = !DILocalVariable(name: "plld", scope: !13116, file: !12413, line: 1085, type: !113)
!13121 = !DILocalVariable(name: "pllvco", scope: !13116, file: !12413, line: 1085, type: !113)
!13122 = !DILocalVariable(name: "msiclkrange", scope: !13116, file: !12413, line: 1085, type: !113)
!13123 = !DILocalVariable(name: "sysclockfreq", scope: !13116, file: !12413, line: 1085, type: !113)
!13124 = !DILocation(line: 1087, column: 17, scope: !13116)
!13125 = !DILocation(line: 0, scope: !13116)
!13126 = !DILocation(line: 1090, column: 3, scope: !13116)
!13127 = !DILocation(line: 1100, column: 7, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13129, file: !12413, line: 1098, column: 5)
!13129 = distinct !DILexicalBlock(scope: !13116, file: !12413, line: 1091, column: 3)
!13130 = !DILocation(line: 1104, column: 63, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13129, file: !12413, line: 1103, column: 5)
!13132 = !DILocation(line: 1104, column: 14, scope: !13131)
!13133 = !DILocation(line: 1105, column: 52, scope: !13131)
!13134 = !DILocation(line: 1105, column: 76, scope: !13131)
!13135 = !DILocation(line: 1106, column: 11, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13131, file: !12413, line: 1106, column: 11)
!13137 = !DILocation(line: 1106, column: 41, scope: !13136)
!13138 = !DILocation(line: 1106, column: 11, scope: !13131)
!13139 = !DILocation(line: 0, scope: !13136)
!13140 = !DILocation(line: 1117, column: 7, scope: !13131)
!13141 = !DILocation(line: 1122, column: 27, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13129, file: !12413, line: 1121, column: 5)
!13143 = !DILocation(line: 1122, column: 56, scope: !13142)
!13144 = !DILocation(line: 1123, column: 30, scope: !13142)
!13145 = !DILocation(line: 1124, column: 7, scope: !13142)
!13146 = !DILocation(line: 0, scope: !13129)
!13147 = !DILocation(line: 1127, column: 3, scope: !13116)
!13148 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12413, file: !12413, line: 1005, type: !10246, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !13149)
!13149 = !{!13150, !13151, !13152, !13153, !13163}
!13150 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !13148, file: !12413, line: 1005, type: !113)
!13151 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !13148, file: !12413, line: 1005, type: !113)
!13152 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !13148, file: !12413, line: 1005, type: !113)
!13153 = !DILocalVariable(name: "gpio", scope: !13148, file: !12413, line: 1007, type: !13154)
!13154 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !13155, line: 64, baseType: !13156)
!13155 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13156 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13155, line: 48, size: 160, elements: !13157)
!13157 = !{!13158, !13159, !13160, !13161, !13162}
!13158 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !13156, file: !13155, line: 50, baseType: !113, size: 32)
!13159 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !13156, file: !13155, line: 53, baseType: !113, size: 32, offset: 32)
!13160 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !13156, file: !13155, line: 56, baseType: !113, size: 32, offset: 64)
!13161 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !13156, file: !13155, line: 59, baseType: !113, size: 32, offset: 96)
!13162 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !13156, file: !13155, line: 62, baseType: !113, size: 32, offset: 128)
!13163 = !DILocalVariable(name: "tmpreg", scope: !13164, file: !12413, line: 1022, type: !461)
!13164 = distinct !DILexicalBlock(scope: !13148, file: !12413, line: 1022, column: 3)
!13165 = !DILocation(line: 0, scope: !13148)
!13166 = !DILocation(line: 1007, column: 3, scope: !13148)
!13167 = !DILocation(line: 1007, column: 20, scope: !13148)
!13168 = !DILocation(line: 1015, column: 8, scope: !13148)
!13169 = !DILocation(line: 1015, column: 18, scope: !13148)
!13170 = !DILocation(line: 1016, column: 8, scope: !13148)
!13171 = !DILocation(line: 1016, column: 18, scope: !13148)
!13172 = !DILocation(line: 1017, column: 8, scope: !13148)
!13173 = !DILocation(line: 1017, column: 18, scope: !13148)
!13174 = !DILocation(line: 1018, column: 8, scope: !13148)
!13175 = !DILocation(line: 1018, column: 18, scope: !13148)
!13176 = !DILocation(line: 1019, column: 8, scope: !13148)
!13177 = !DILocation(line: 1019, column: 18, scope: !13148)
!13178 = !DILocation(line: 1022, column: 3, scope: !13164)
!13179 = !DILocation(line: 1022, column: 3, scope: !13148)
!13180 = !DILocation(line: 1024, column: 3, scope: !13148)
!13181 = !DILocation(line: 1027, column: 3, scope: !13148)
!13182 = !DILocation(line: 1028, column: 1, scope: !13148)
!13183 = !DISubprogram(name: "HAL_GPIO_Init", scope: !13155, file: !13155, line: 293, type: !13184, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!13184 = !DISubroutineType(types: !13185)
!13185 = !{null, !3051, !13186}
!13186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13154, size: 32)
!13187 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12413, file: !12413, line: 1039, type: !266, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !397)
!13188 = !DILocation(line: 1041, column: 38, scope: !13187)
!13189 = !DILocation(line: 1042, column: 1, scope: !13187)
!13190 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12413, file: !12413, line: 1048, type: !266, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !397)
!13191 = !DILocation(line: 1050, column: 38, scope: !13190)
!13192 = !DILocation(line: 1051, column: 1, scope: !13190)
!13193 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12413, file: !12413, line: 1139, type: !395, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !397)
!13194 = !DILocation(line: 1141, column: 10, scope: !13193)
!13195 = !DILocation(line: 1141, column: 3, scope: !13193)
!13196 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12413, file: !12413, line: 1150, type: !395, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !397)
!13197 = !DILocation(line: 1153, column: 11, scope: !13196)
!13198 = !DILocation(line: 1153, column: 56, scope: !13196)
!13199 = !DILocation(line: 1153, column: 79, scope: !13196)
!13200 = !DILocation(line: 1153, column: 36, scope: !13196)
!13201 = !DILocation(line: 1153, column: 33, scope: !13196)
!13202 = !DILocation(line: 1153, column: 3, scope: !13196)
!13203 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12413, file: !12413, line: 1162, type: !395, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !397)
!13204 = !DILocation(line: 1165, column: 11, scope: !13203)
!13205 = !DILocation(line: 1165, column: 55, scope: !13203)
!13206 = !DILocation(line: 1165, column: 78, scope: !13203)
!13207 = !DILocation(line: 1165, column: 35, scope: !13203)
!13208 = !DILocation(line: 1165, column: 32, scope: !13203)
!13209 = !DILocation(line: 1165, column: 3, scope: !13203)
!13210 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12413, file: !12413, line: 1175, type: !13211, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !13213)
!13211 = !DISubroutineType(types: !13212)
!13212 = !{null, !12481}
!13213 = !{!13214}
!13214 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13210, file: !12413, line: 1175, type: !12481)
!13215 = !DILocation(line: 0, scope: !13210)
!13216 = !DILocation(line: 1181, column: 22, scope: !13210)
!13217 = !DILocation(line: 1181, column: 37, scope: !13210)
!13218 = !DILocation(line: 1186, column: 12, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13210, file: !12413, line: 1186, column: 6)
!13220 = !DILocation(line: 1186, column: 15, scope: !13219)
!13221 = !DILocation(line: 1186, column: 31, scope: !13219)
!13222 = !DILocation(line: 1186, column: 6, scope: !13210)
!13223 = !DILocation(line: 1188, column: 24, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13219, file: !12413, line: 1187, column: 3)
!13225 = !DILocation(line: 1188, column: 33, scope: !13224)
!13226 = !DILocation(line: 1189, column: 3, scope: !13224)
!13227 = !DILocation(line: 1190, column: 17, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13219, file: !12413, line: 1190, column: 11)
!13229 = !DILocation(line: 1190, column: 20, scope: !13228)
!13230 = !DILocation(line: 1190, column: 35, scope: !13228)
!13231 = !DILocation(line: 0, scope: !13228)
!13232 = !DILocation(line: 1190, column: 11, scope: !13219)
!13233 = !DILocation(line: 1192, column: 33, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13228, file: !12413, line: 1191, column: 3)
!13235 = !DILocation(line: 1193, column: 3, scope: !13234)
!13236 = !DILocation(line: 1196, column: 33, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13228, file: !12413, line: 1195, column: 3)
!13238 = !DILocation(line: 1200, column: 12, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13210, file: !12413, line: 1200, column: 6)
!13240 = !DILocation(line: 1200, column: 15, scope: !13239)
!13241 = !DILocation(line: 1206, column: 24, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13239, file: !12413, line: 1205, column: 3)
!13243 = !DILocation(line: 1206, column: 33, scope: !13242)
!13244 = !DILocation(line: 1209, column: 61, scope: !13210)
!13245 = !DILocation(line: 1209, column: 88, scope: !13210)
!13246 = !DILocation(line: 1209, column: 22, scope: !13210)
!13247 = !DILocation(line: 1209, column: 42, scope: !13210)
!13248 = !DILocation(line: 1212, column: 12, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13210, file: !12413, line: 1212, column: 6)
!13250 = !DILocation(line: 1212, column: 6, scope: !13210)
!13251 = !DILocation(line: 1218, column: 24, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13249, file: !12413, line: 1217, column: 3)
!13253 = !DILocation(line: 1218, column: 33, scope: !13252)
!13254 = !DILocation(line: 1221, column: 61, scope: !13210)
!13255 = !DILocation(line: 1221, column: 88, scope: !13210)
!13256 = !DILocation(line: 1221, column: 22, scope: !13210)
!13257 = !DILocation(line: 1221, column: 42, scope: !13210)
!13258 = !DILocation(line: 1222, column: 55, scope: !13210)
!13259 = !DILocation(line: 1222, column: 61, scope: !13210)
!13260 = !DILocation(line: 1222, column: 22, scope: !13210)
!13261 = !DILocation(line: 1222, column: 36, scope: !13210)
!13262 = !DILocation(line: 1225, column: 12, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13210, file: !12413, line: 1225, column: 6)
!13264 = !DILocation(line: 1225, column: 16, scope: !13263)
!13265 = !DILocation(line: 1225, column: 33, scope: !13263)
!13266 = !DILocation(line: 1225, column: 6, scope: !13210)
!13267 = !DILocation(line: 1227, column: 24, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13263, file: !12413, line: 1226, column: 3)
!13269 = !DILocation(line: 1227, column: 33, scope: !13268)
!13270 = !DILocation(line: 1228, column: 3, scope: !13268)
!13271 = !DILocation(line: 1229, column: 17, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13263, file: !12413, line: 1229, column: 11)
!13273 = !DILocation(line: 1229, column: 21, scope: !13272)
!13274 = !DILocation(line: 1229, column: 37, scope: !13272)
!13275 = !DILocation(line: 0, scope: !13272)
!13276 = !DILocation(line: 1229, column: 11, scope: !13263)
!13277 = !DILocation(line: 1231, column: 33, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13272, file: !12413, line: 1230, column: 3)
!13279 = !DILocation(line: 1232, column: 3, scope: !13278)
!13280 = !DILocation(line: 1235, column: 33, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13272, file: !12413, line: 1234, column: 3)
!13282 = !DILocation(line: 1239, column: 12, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13210, file: !12413, line: 1239, column: 6)
!13284 = !DILocation(line: 1239, column: 16, scope: !13283)
!13285 = !DILocation(line: 1245, column: 24, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13283, file: !12413, line: 1244, column: 3)
!13287 = !DILocation(line: 1245, column: 33, scope: !13286)
!13288 = !DILocation(line: 1250, column: 12, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13210, file: !12413, line: 1250, column: 6)
!13290 = !DILocation(line: 1250, column: 15, scope: !13289)
!13291 = !DILocation(line: 1250, column: 30, scope: !13289)
!13292 = !DILocation(line: 1250, column: 6, scope: !13210)
!13293 = !DILocation(line: 1256, column: 28, scope: !13294)
!13294 = distinct !DILexicalBlock(scope: !13289, file: !12413, line: 1255, column: 3)
!13295 = !DILocation(line: 1256, column: 37, scope: !13294)
!13296 = !DILocation(line: 1258, column: 54, scope: !13210)
!13297 = !DILocation(line: 1258, column: 59, scope: !13210)
!13298 = !DILocation(line: 1258, column: 26, scope: !13210)
!13299 = !DILocation(line: 1258, column: 36, scope: !13210)
!13300 = !DILocation(line: 1259, column: 51, scope: !13210)
!13301 = !DILocation(line: 1259, column: 56, scope: !13210)
!13302 = !DILocation(line: 1259, column: 26, scope: !13210)
!13303 = !DILocation(line: 1259, column: 33, scope: !13210)
!13304 = !DILocation(line: 1260, column: 51, scope: !13210)
!13305 = !DILocation(line: 1260, column: 56, scope: !13210)
!13306 = !DILocation(line: 1260, column: 26, scope: !13210)
!13307 = !DILocation(line: 1260, column: 33, scope: !13210)
!13308 = !DILocation(line: 1261, column: 1, scope: !13210)
!13309 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12413, file: !12413, line: 1271, type: !13310, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !13312)
!13310 = !DISubroutineType(types: !13311)
!13311 = !{null, !12952, !1084}
!13312 = !{!13313, !13314}
!13313 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13309, file: !12413, line: 1271, type: !12952)
!13314 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13309, file: !12413, line: 1271, type: !1084)
!13315 = !DILocation(line: 0, scope: !13309)
!13316 = !DILocation(line: 1278, column: 22, scope: !13309)
!13317 = !DILocation(line: 1278, column: 32, scope: !13309)
!13318 = !DILocation(line: 1281, column: 53, scope: !13309)
!13319 = !DILocation(line: 1281, column: 58, scope: !13309)
!13320 = !DILocation(line: 1281, column: 22, scope: !13309)
!13321 = !DILocation(line: 1281, column: 35, scope: !13309)
!13322 = !DILocation(line: 1284, column: 54, scope: !13309)
!13323 = !DILocation(line: 1284, column: 59, scope: !13309)
!13324 = !DILocation(line: 1284, column: 22, scope: !13309)
!13325 = !DILocation(line: 1284, column: 36, scope: !13309)
!13326 = !DILocation(line: 1287, column: 55, scope: !13309)
!13327 = !DILocation(line: 1287, column: 60, scope: !13309)
!13328 = !DILocation(line: 1287, column: 22, scope: !13309)
!13329 = !DILocation(line: 1287, column: 37, scope: !13309)
!13330 = !DILocation(line: 1290, column: 56, scope: !13309)
!13331 = !DILocation(line: 1290, column: 79, scope: !13309)
!13332 = !DILocation(line: 1290, column: 22, scope: !13309)
!13333 = !DILocation(line: 1290, column: 37, scope: !13309)
!13334 = !DILocation(line: 1293, column: 16, scope: !13309)
!13335 = !DILocation(line: 1293, column: 14, scope: !13309)
!13336 = !DILocation(line: 1294, column: 1, scope: !13309)
!13337 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12413, file: !12413, line: 1301, type: !266, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !397)
!13338 = !DILocation(line: 1304, column: 6, scope: !13339)
!13339 = distinct !DILexicalBlock(scope: !13337, file: !12413, line: 1304, column: 6)
!13340 = !DILocation(line: 1304, column: 6, scope: !13337)
!13341 = !DILocation(line: 1307, column: 5, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13339, file: !12413, line: 1305, column: 3)
!13343 = !DILocation(line: 1310, column: 5, scope: !13342)
!13344 = !DILocation(line: 1311, column: 3, scope: !13342)
!13345 = !DILocation(line: 1312, column: 1, scope: !13337)
!13346 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12413, file: !12413, line: 1318, type: !266, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !397)
!13347 = !DILocation(line: 1323, column: 1, scope: !13346)
!13348 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13349, file: !13349, line: 147, type: !7443, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13350)
!13349 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13350 = !{!13351}
!13351 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13348, file: !13349, line: 147, type: !113)
!13352 = !DILocation(line: 0, scope: !13348)
!13353 = !DILocation(line: 150, column: 3, scope: !13348)
!13354 = !DILocation(line: 151, column: 1, scope: !13348)
!13355 = distinct !DISubprogram(name: "LL_InitTick", scope: !13356, file: !13356, line: 222, type: !10786, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13357)
!13356 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13357 = !{!13358, !13359}
!13358 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13355, file: !13356, line: 222, type: !113)
!13359 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13355, file: !13356, line: 222, type: !113)
!13360 = !DILocation(line: 0, scope: !13355)
!13361 = !DILocation(line: 225, column: 46, scope: !13355)
!13362 = !DILocation(line: 225, column: 55, scope: !13355)
!13363 = !DILocation(line: 225, column: 18, scope: !13355)
!13364 = !DILocation(line: 226, column: 18, scope: !13355)
!13365 = !DILocation(line: 227, column: 18, scope: !13355)
!13366 = !DILocation(line: 229, column: 1, scope: !13355)
!13367 = distinct !DISubprogram(name: "LL_mDelay", scope: !13349, file: !13349, line: 163, type: !7443, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13368)
!13368 = !{!13369, !13370, !13371}
!13369 = !DILocalVariable(name: "Delay", arg: 1, scope: !13367, file: !13349, line: 163, type: !113)
!13370 = !DILocalVariable(name: "tmp", scope: !13367, file: !13349, line: 165, type: !461)
!13371 = !DILocalVariable(name: "tmpDelay", scope: !13367, file: !13349, line: 166, type: !113)
!13372 = !DILocation(line: 0, scope: !13367)
!13373 = !DILocation(line: 165, column: 3, scope: !13367)
!13374 = !DILocation(line: 165, column: 18, scope: !13367)
!13375 = !DILocation(line: 165, column: 33, scope: !13367)
!13376 = !DILocation(line: 169, column: 10, scope: !13367)
!13377 = !DILocation(line: 172, column: 15, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !13367, file: !13349, line: 172, column: 6)
!13379 = !DILocation(line: 177, column: 3, scope: !13367)
!13380 = !DILocation(line: 179, column: 18, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13382, file: !13349, line: 179, column: 8)
!13382 = distinct !DILexicalBlock(scope: !13367, file: !13349, line: 178, column: 3)
!13383 = !DILocation(line: 177, column: 19, scope: !13367)
!13384 = !DILocation(line: 184, column: 1, scope: !13367)
!13385 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13349, file: !13349, line: 227, type: !7443, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13386)
!13386 = !{!13387}
!13387 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13385, file: !13349, line: 227, type: !113)
!13388 = !DILocation(line: 0, scope: !13385)
!13389 = !DILocation(line: 230, column: 19, scope: !13385)
!13390 = !DILocation(line: 231, column: 1, scope: !13385)
!13391 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13349, file: !13349, line: 242, type: !13392, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13395)
!13392 = !DISubroutineType(types: !13393)
!13393 = !{!13394, !113}
!13394 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1048, line: 194, baseType: !1047)
!13395 = !{!13396, !13397, !13398}
!13396 = !DILocalVariable(name: "Frequency", arg: 1, scope: !13391, file: !13349, line: 242, type: !113)
!13397 = !DILocalVariable(name: "status", scope: !13391, file: !13349, line: 244, type: !13394)
!13398 = !DILocalVariable(name: "latency", scope: !13391, file: !13349, line: 246, type: !113)
!13399 = !DILocation(line: 0, scope: !13391)
!13400 = !DILocation(line: 249, column: 25, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13391, file: !13349, line: 249, column: 7)
!13402 = !DILocation(line: 255, column: 9, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13404, file: !13349, line: 255, column: 9)
!13404 = distinct !DILexicalBlock(scope: !13401, file: !13349, line: 254, column: 3)
!13405 = !DILocation(line: 255, column: 41, scope: !13403)
!13406 = !DILocation(line: 255, column: 9, scope: !13404)
!13407 = !DILocation(line: 257, column: 21, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13409, file: !13349, line: 257, column: 11)
!13409 = distinct !DILexicalBlock(scope: !13403, file: !13349, line: 256, column: 5)
!13410 = !DILocation(line: 284, column: 9, scope: !13404)
!13411 = !DILocation(line: 264, column: 14, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13403, file: !13349, line: 264, column: 14)
!13413 = !DILocation(line: 264, column: 46, scope: !13412)
!13414 = !DILocation(line: 264, column: 14, scope: !13403)
!13415 = !DILocation(line: 266, column: 21, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13417, file: !13349, line: 266, column: 11)
!13417 = distinct !DILexicalBlock(scope: !13412, file: !13349, line: 265, column: 5)
!13418 = !DILocation(line: 275, column: 21, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13420, file: !13349, line: 275, column: 11)
!13420 = distinct !DILexicalBlock(scope: !13412, file: !13349, line: 274, column: 5)
!13421 = !DILocation(line: 286, column: 7, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13423, file: !13349, line: 285, column: 5)
!13423 = distinct !DILexicalBlock(scope: !13404, file: !13349, line: 284, column: 9)
!13424 = !DILocation(line: 287, column: 5, scope: !13422)
!13425 = !DILocation(line: 289, column: 5, scope: !13404)
!13426 = !DILocation(line: 293, column: 9, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13404, file: !13349, line: 293, column: 9)
!13428 = !DILocation(line: 293, column: 31, scope: !13427)
!13429 = !DILocation(line: 293, column: 9, scope: !13404)
!13430 = !DILocation(line: 298, column: 3, scope: !13391)
!13431 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !7457, file: !7457, line: 285, type: !395, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !397)
!13432 = !DILocation(line: 287, column: 21, scope: !13431)
!13433 = !DILocation(line: 287, column: 3, scope: !13431)
!13434 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !10785, file: !10785, line: 1897, type: !266, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !397)
!13435 = !DILocation(line: 1899, column: 3, scope: !13434)
!13436 = !DILocation(line: 1900, column: 1, scope: !13434)
!13437 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !10785, file: !10785, line: 1843, type: !7443, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13438)
!13438 = !{!13439}
!13439 = !DILocalVariable(name: "Latency", arg: 1, scope: !13437, file: !10785, line: 1843, type: !113)
!13440 = !DILocation(line: 0, scope: !13437)
!13441 = !DILocation(line: 1845, column: 3, scope: !13437)
!13442 = !DILocation(line: 1846, column: 1, scope: !13437)
!13443 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !10785, file: !10785, line: 1855, type: !395, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !397)
!13444 = !DILocation(line: 1857, column: 21, scope: !13443)
!13445 = !DILocation(line: 1857, column: 3, scope: !13443)
!13446 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13349, file: !13349, line: 323, type: !13447, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13462)
!13447 = !DISubroutineType(types: !13448)
!13448 = !{!13394, !13449, !13455}
!13449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13450, size: 32)
!13450 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13356, line: 103, baseType: !13451)
!13451 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13356, line: 90, size: 64, elements: !13452)
!13452 = !{!13453, !13454}
!13453 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !13451, file: !13356, line: 92, baseType: !113, size: 32)
!13454 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !13451, file: !13356, line: 98, baseType: !113, size: 32, offset: 32)
!13455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13456, size: 32)
!13456 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13356, line: 128, baseType: !13457)
!13457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13356, line: 108, size: 96, elements: !13458)
!13458 = !{!13459, !13460, !13461}
!13459 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13457, file: !13356, line: 110, baseType: !113, size: 32)
!13460 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13457, file: !13356, line: 116, baseType: !113, size: 32, offset: 32)
!13461 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13457, file: !13356, line: 122, baseType: !113, size: 32, offset: 64)
!13462 = !{!13463, !13464, !13465, !13466}
!13463 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13446, file: !13349, line: 323, type: !13449)
!13464 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13446, file: !13349, line: 324, type: !13455)
!13465 = !DILocalVariable(name: "status", scope: !13446, file: !13349, line: 326, type: !13394)
!13466 = !DILocalVariable(name: "pllfreq", scope: !13446, file: !13349, line: 327, type: !113)
!13467 = !DILocation(line: 0, scope: !13446)
!13468 = !DILocation(line: 330, column: 7, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13446, file: !13349, line: 330, column: 7)
!13470 = !DILocation(line: 330, column: 26, scope: !13469)
!13471 = !DILocation(line: 330, column: 7, scope: !13446)
!13472 = !DILocation(line: 333, column: 15, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13469, file: !13349, line: 331, column: 3)
!13474 = !DILocation(line: 336, column: 9, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13473, file: !13349, line: 336, column: 9)
!13476 = !DILocation(line: 336, column: 30, scope: !13475)
!13477 = !DILocation(line: 336, column: 9, scope: !13473)
!13478 = !DILocation(line: 338, column: 7, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13475, file: !13349, line: 337, column: 5)
!13480 = !DILocation(line: 339, column: 7, scope: !13479)
!13481 = !DILocation(line: 339, column: 14, scope: !13479)
!13482 = !DILocation(line: 339, column: 35, scope: !13479)
!13483 = distinct !{!13483, !13480, !13484}
!13484 = !DILocation(line: 342, column: 7, scope: !13479)
!13485 = !DILocation(line: 346, column: 76, scope: !13473)
!13486 = !DILocation(line: 346, column: 105, scope: !13473)
!13487 = !DILocation(line: 346, column: 5, scope: !13473)
!13488 = !DILocation(line: 349, column: 14, scope: !13473)
!13489 = !DILocation(line: 350, column: 3, scope: !13473)
!13490 = !DILocation(line: 0, scope: !13469)
!13491 = !DILocation(line: 357, column: 3, scope: !13446)
!13492 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13349, file: !13349, line: 487, type: !13493, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13495)
!13493 = !DISubroutineType(types: !13494)
!13494 = !{!13394}
!13495 = !{!13496}
!13496 = !DILocalVariable(name: "status", scope: !13492, file: !13349, line: 489, type: !13394)
!13497 = !DILocation(line: 0, scope: !13492)
!13498 = !DILocation(line: 492, column: 7, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13492, file: !13349, line: 492, column: 7)
!13500 = !DILocation(line: 492, column: 28, scope: !13499)
!13501 = !DILocation(line: 492, column: 7, scope: !13492)
!13502 = !DILocation(line: 498, column: 3, scope: !13492)
!13503 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13349, file: !13349, line: 457, type: !13504, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13506)
!13504 = !DISubroutineType(types: !13505)
!13505 = !{!113, !113, !13449}
!13506 = !{!13507, !13508, !13509}
!13507 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13503, file: !13349, line: 457, type: !113)
!13508 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13503, file: !13349, line: 457, type: !13449)
!13509 = !DILocalVariable(name: "pllfreq", scope: !13503, file: !13349, line: 459, type: !113)
!13510 = !DILocation(line: 0, scope: !13503)
!13511 = !DILocation(line: 470, column: 68, scope: !13503)
!13512 = !DILocation(line: 470, column: 75, scope: !13503)
!13513 = !DILocation(line: 470, column: 35, scope: !13503)
!13514 = !DILocation(line: 470, column: 34, scope: !13503)
!13515 = !DILocation(line: 470, column: 32, scope: !13503)
!13516 = !DILocation(line: 475, column: 46, scope: !13503)
!13517 = !DILocation(line: 475, column: 53, scope: !13503)
!13518 = !DILocation(line: 475, column: 76, scope: !13503)
!13519 = !DILocation(line: 475, column: 21, scope: !13503)
!13520 = !DILocation(line: 478, column: 3, scope: !13503)
!13521 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10123, file: !10123, line: 612, type: !395, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !397)
!13522 = !DILocation(line: 614, column: 12, scope: !13521)
!13523 = !DILocation(line: 614, column: 11, scope: !13521)
!13524 = !DILocation(line: 614, column: 3, scope: !13521)
!13525 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10123, file: !10123, line: 592, type: !266, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !397)
!13526 = !DILocation(line: 594, column: 3, scope: !13525)
!13527 = !DILocation(line: 595, column: 1, scope: !13525)
!13528 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10123, file: !10123, line: 1219, type: !10246, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13529)
!13529 = !{!13530, !13531, !13532}
!13530 = !DILocalVariable(name: "Source", arg: 1, scope: !13528, file: !10123, line: 1219, type: !113)
!13531 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !13528, file: !10123, line: 1219, type: !113)
!13532 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !13528, file: !10123, line: 1219, type: !113)
!13533 = !DILocation(line: 0, scope: !13528)
!13534 = !DILocation(line: 1221, column: 3, scope: !13528)
!13535 = !DILocation(line: 1222, column: 1, scope: !13528)
!13536 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13349, file: !13349, line: 510, type: !13537, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13539)
!13537 = !DISubroutineType(types: !13538)
!13538 = !{!13394, !113, !13455}
!13539 = !{!13540, !13541, !13542, !13543}
!13540 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13536, file: !13349, line: 510, type: !113)
!13541 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13536, file: !13349, line: 510, type: !13455)
!13542 = !DILocalVariable(name: "status", scope: !13536, file: !13349, line: 512, type: !13394)
!13543 = !DILocalVariable(name: "hclk_frequency", scope: !13536, file: !13349, line: 513, type: !113)
!13544 = !DILocation(line: 0, scope: !13536)
!13545 = !DILocation(line: 520, column: 20, scope: !13536)
!13546 = !DILocation(line: 523, column: 7, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13536, file: !13349, line: 523, column: 7)
!13548 = !DILocation(line: 523, column: 23, scope: !13547)
!13549 = !DILocation(line: 523, column: 7, scope: !13536)
!13550 = !DILocation(line: 526, column: 14, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13547, file: !13349, line: 524, column: 3)
!13552 = !DILocation(line: 530, column: 14, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13536, file: !13349, line: 530, column: 7)
!13554 = !DILocation(line: 530, column: 7, scope: !13536)
!13555 = !DILocation(line: 533, column: 5, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13553, file: !13349, line: 531, column: 3)
!13557 = !DILocation(line: 534, column: 5, scope: !13556)
!13558 = !DILocation(line: 534, column: 12, scope: !13556)
!13559 = !DILocation(line: 534, column: 33, scope: !13556)
!13560 = distinct !{!13560, !13557, !13561}
!13561 = !DILocation(line: 537, column: 5, scope: !13556)
!13562 = !DILocation(line: 540, column: 49, scope: !13556)
!13563 = !DILocation(line: 540, column: 5, scope: !13556)
!13564 = !DILocation(line: 541, column: 5, scope: !13556)
!13565 = !DILocation(line: 542, column: 5, scope: !13556)
!13566 = !DILocation(line: 542, column: 12, scope: !13556)
!13567 = !DILocation(line: 542, column: 37, scope: !13556)
!13568 = distinct !{!13568, !13565, !13569}
!13569 = !DILocation(line: 545, column: 5, scope: !13556)
!13570 = !DILocation(line: 548, column: 50, scope: !13556)
!13571 = !DILocation(line: 548, column: 5, scope: !13556)
!13572 = !DILocation(line: 549, column: 50, scope: !13556)
!13573 = !DILocation(line: 549, column: 5, scope: !13556)
!13574 = !DILocation(line: 550, column: 3, scope: !13556)
!13575 = !DILocation(line: 553, column: 7, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13536, file: !13349, line: 553, column: 7)
!13577 = !DILocation(line: 553, column: 23, scope: !13576)
!13578 = !DILocation(line: 553, column: 7, scope: !13536)
!13579 = !DILocation(line: 556, column: 14, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13576, file: !13349, line: 554, column: 3)
!13581 = !DILocation(line: 557, column: 3, scope: !13580)
!13582 = !DILocation(line: 560, column: 14, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13536, file: !13349, line: 560, column: 7)
!13584 = !DILocation(line: 560, column: 7, scope: !13536)
!13585 = !DILocation(line: 562, column: 5, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13583, file: !13349, line: 561, column: 3)
!13587 = !DILocation(line: 563, column: 3, scope: !13586)
!13588 = !DILocation(line: 565, column: 3, scope: !13536)
!13589 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10123, file: !10123, line: 1169, type: !266, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !397)
!13590 = !DILocation(line: 1171, column: 3, scope: !13589)
!13591 = !DILocation(line: 1172, column: 1, scope: !13589)
!13592 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10123, file: !10123, line: 1190, type: !395, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !397)
!13593 = !DILocation(line: 1192, column: 12, scope: !13592)
!13594 = !DILocation(line: 1192, column: 11, scope: !13592)
!13595 = !DILocation(line: 1192, column: 3, scope: !13592)
!13596 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10123, file: !10123, line: 944, type: !7443, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13597)
!13597 = !{!13598}
!13598 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13596, file: !10123, line: 944, type: !113)
!13599 = !DILocation(line: 0, scope: !13596)
!13600 = !DILocation(line: 946, column: 3, scope: !13596)
!13601 = !DILocation(line: 947, column: 1, scope: !13596)
!13602 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10123, file: !10123, line: 910, type: !7443, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13603)
!13603 = !{!13604}
!13604 = !DILocalVariable(name: "Source", arg: 1, scope: !13602, file: !10123, line: 910, type: !113)
!13605 = !DILocation(line: 0, scope: !13602)
!13606 = !DILocation(line: 912, column: 3, scope: !13602)
!13607 = !DILocation(line: 913, column: 1, scope: !13602)
!13608 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10123, file: !10123, line: 924, type: !395, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !397)
!13609 = !DILocation(line: 926, column: 21, scope: !13608)
!13610 = !DILocation(line: 926, column: 3, scope: !13608)
!13611 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10123, file: !10123, line: 960, type: !7443, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13612)
!13612 = !{!13613}
!13613 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13611, file: !10123, line: 960, type: !113)
!13614 = !DILocation(line: 0, scope: !13611)
!13615 = !DILocation(line: 962, column: 3, scope: !13611)
!13616 = !DILocation(line: 963, column: 1, scope: !13611)
!13617 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10123, file: !10123, line: 976, type: !7443, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13618)
!13618 = !{!13619}
!13619 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13617, file: !10123, line: 976, type: !113)
!13620 = !DILocation(line: 0, scope: !13617)
!13621 = !DILocation(line: 978, column: 3, scope: !13617)
!13622 = !DILocation(line: 979, column: 1, scope: !13617)
!13623 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13349, file: !13349, line: 385, type: !13624, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !13626)
!13624 = !DISubroutineType(types: !13625)
!13625 = !{!13394, !113, !113, !13449, !13455}
!13626 = !{!13627, !13628, !13629, !13630, !13631, !13632}
!13627 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13623, file: !13349, line: 385, type: !113)
!13628 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13623, file: !13349, line: 385, type: !113)
!13629 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13623, file: !13349, line: 386, type: !13449)
!13630 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13623, file: !13349, line: 386, type: !13455)
!13631 = !DILocalVariable(name: "status", scope: !13623, file: !13349, line: 388, type: !13394)
!13632 = !DILocalVariable(name: "pllfreq", scope: !13623, file: !13349, line: 389, type: !113)
!13633 = !DILocation(line: 0, scope: !13623)
!13634 = !DILocation(line: 396, column: 7, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13623, file: !13349, line: 396, column: 7)
!13636 = !DILocation(line: 396, column: 26, scope: !13635)
!13637 = !DILocation(line: 396, column: 7, scope: !13623)
!13638 = !DILocation(line: 400, column: 15, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13635, file: !13349, line: 397, column: 3)
!13640 = !DILocation(line: 403, column: 9, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13639, file: !13349, line: 403, column: 9)
!13642 = !DILocation(line: 403, column: 30, scope: !13641)
!13643 = !DILocation(line: 403, column: 9, scope: !13639)
!13644 = !DILocation(line: 406, column: 21, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13646, file: !13349, line: 406, column: 11)
!13646 = distinct !DILexicalBlock(scope: !13641, file: !13349, line: 404, column: 5)
!13647 = !DILocation(line: 406, column: 11, scope: !13646)
!13648 = !DILocation(line: 408, column: 9, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13645, file: !13349, line: 407, column: 7)
!13650 = !DILocation(line: 409, column: 7, scope: !13649)
!13651 = !DILocation(line: 412, column: 9, scope: !13652)
!13652 = distinct !DILexicalBlock(scope: !13645, file: !13349, line: 411, column: 7)
!13653 = !DILocation(line: 416, column: 7, scope: !13646)
!13654 = !DILocation(line: 417, column: 7, scope: !13646)
!13655 = !DILocation(line: 417, column: 14, scope: !13646)
!13656 = !DILocation(line: 417, column: 35, scope: !13646)
!13657 = distinct !{!13657, !13654, !13658}
!13658 = !DILocation(line: 420, column: 7, scope: !13646)
!13659 = !DILocation(line: 424, column: 78, scope: !13639)
!13660 = !DILocation(line: 424, column: 107, scope: !13639)
!13661 = !DILocation(line: 424, column: 7, scope: !13639)
!13662 = !DILocation(line: 427, column: 14, scope: !13639)
!13663 = !DILocation(line: 428, column: 3, scope: !13639)
!13664 = !DILocation(line: 0, scope: !13635)
!13665 = !DILocation(line: 435, column: 3, scope: !13623)
!13666 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10123, file: !10123, line: 545, type: !395, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !397)
!13667 = !DILocation(line: 547, column: 12, scope: !13666)
!13668 = !DILocation(line: 547, column: 11, scope: !13666)
!13669 = !DILocation(line: 547, column: 3, scope: !13666)
!13670 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10123, file: !10123, line: 505, type: !266, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !397)
!13671 = !DILocation(line: 507, column: 3, scope: !13670)
!13672 = !DILocation(line: 508, column: 1, scope: !13670)
!13673 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10123, file: !10123, line: 515, type: !266, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !397)
!13674 = !DILocation(line: 517, column: 3, scope: !13673)
!13675 = !DILocation(line: 518, column: 1, scope: !13673)
!13676 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10123, file: !10123, line: 525, type: !266, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !397)
!13677 = !DILocation(line: 527, column: 3, scope: !13676)
!13678 = !DILocation(line: 528, column: 1, scope: !13676)
!13679 = distinct !DISubprogram(name: "z_device_state_init", scope: !13680, file: !13680, line: 23, type: !266, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13681)
!13680 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13681 = !{!13682}
!13682 = !DILocalVariable(name: "dev", scope: !13679, file: !13680, line: 25, type: !13683)
!13683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13684, size: 32)
!13684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13685)
!13685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !494, line: 378, size: 192, elements: !13686)
!13686 = !{!13687, !13688, !13689, !13690, !13696, !13697}
!13687 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13685, file: !494, line: 380, baseType: !269, size: 32)
!13688 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13685, file: !494, line: 382, baseType: !13, size: 32, offset: 32)
!13689 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13685, file: !494, line: 384, baseType: !13, size: 32, offset: 64)
!13690 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13685, file: !494, line: 386, baseType: !13691, size: 32, offset: 96)
!13691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13692, size: 32)
!13692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !494, line: 351, size: 16, elements: !13693)
!13693 = !{!13694, !13695}
!13694 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13692, file: !494, line: 359, baseType: !169, size: 8)
!13695 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13692, file: !494, line: 364, baseType: !505, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13696 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13685, file: !494, line: 388, baseType: !104, size: 32, offset: 128)
!13697 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13685, file: !494, line: 396, baseType: !508, size: 32, offset: 160)
!13698 = !DILocation(line: 0, scope: !13679)
!13699 = !DILocation(line: 31, column: 1, scope: !13679)
!13700 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13680, file: !13680, line: 33, type: !13701, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13703)
!13701 = !DISubroutineType(types: !13702)
!13702 = !{!13683, !269}
!13703 = !{!13704, !13705}
!13704 = !DILocalVariable(name: "name", arg: 1, scope: !13700, file: !13680, line: 33, type: !269)
!13705 = !DILocalVariable(name: "dev", scope: !13700, file: !13680, line: 35, type: !13683)
!13706 = !DILocation(line: 0, scope: !13700)
!13707 = !DILocation(line: 40, column: 12, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13700, file: !13680, line: 40, column: 6)
!13709 = !DILocation(line: 40, column: 21, scope: !13708)
!13710 = !DILocation(line: 40, column: 25, scope: !13708)
!13711 = !DILocation(line: 40, column: 33, scope: !13708)
!13712 = !DILocation(line: 40, column: 6, scope: !13700)
!13713 = !DILocation(line: 55, column: 2, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13700, file: !13680, line: 55, column: 2)
!13715 = !DILocation(line: 50, column: 7, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13717, file: !13680, line: 50, column: 7)
!13717 = distinct !DILexicalBlock(scope: !13718, file: !13680, line: 49, column: 57)
!13718 = distinct !DILexicalBlock(scope: !13719, file: !13680, line: 49, column: 2)
!13719 = distinct !DILexicalBlock(scope: !13700, file: !13680, line: 49, column: 2)
!13720 = !DILocation(line: 50, column: 30, scope: !13716)
!13721 = !DILocation(line: 50, column: 39, scope: !13716)
!13722 = !DILocation(line: 50, column: 44, scope: !13716)
!13723 = !DILocation(line: 50, column: 7, scope: !13717)
!13724 = !DILocation(line: 49, column: 53, scope: !13718)
!13725 = !DILocation(line: 49, column: 33, scope: !13718)
!13726 = !DILocation(line: 49, column: 2, scope: !13719)
!13727 = distinct !{!13727, !13726, !13728}
!13728 = !DILocation(line: 53, column: 2, scope: !13719)
!13729 = !DILocation(line: 56, column: 7, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13731, file: !13680, line: 56, column: 7)
!13731 = distinct !DILexicalBlock(scope: !13732, file: !13680, line: 55, column: 57)
!13732 = distinct !DILexicalBlock(scope: !13714, file: !13680, line: 55, column: 2)
!13733 = !DILocation(line: 56, column: 30, scope: !13730)
!13734 = !DILocation(line: 56, column: 52, scope: !13730)
!13735 = !DILocation(line: 56, column: 34, scope: !13730)
!13736 = !DILocation(line: 56, column: 58, scope: !13730)
!13737 = !DILocation(line: 56, column: 7, scope: !13731)
!13738 = !DILocation(line: 55, column: 53, scope: !13732)
!13739 = !DILocation(line: 55, column: 33, scope: !13732)
!13740 = distinct !{!13740, !13713, !13741}
!13741 = !DILocation(line: 59, column: 2, scope: !13714)
!13742 = !DILocation(line: 62, column: 1, scope: !13700)
!13743 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13680, file: !13680, line: 93, type: !13744, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13746)
!13744 = !DISubroutineType(types: !13745)
!13745 = !{!505, !13683}
!13746 = !{!13747}
!13747 = !DILocalVariable(name: "dev", arg: 1, scope: !13743, file: !13680, line: 93, type: !13683)
!13748 = !DILocation(line: 0, scope: !13743)
!13749 = !DILocation(line: 99, column: 10, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13743, file: !13680, line: 99, column: 6)
!13751 = !DILocation(line: 99, column: 6, scope: !13743)
!13752 = !DILocation(line: 103, column: 14, scope: !13743)
!13753 = !DILocation(line: 103, column: 21, scope: !13743)
!13754 = !DILocation(line: 103, column: 33, scope: !13743)
!13755 = !DILocation(line: 103, column: 49, scope: !13743)
!13756 = !DILocation(line: 103, column: 58, scope: !13743)
!13757 = !DILocation(line: 104, column: 1, scope: !13743)
!13758 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13680, file: !13680, line: 87, type: !13759, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13762)
!13759 = !DISubroutineType(types: !13760)
!13760 = !{!111, !13761}
!13761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13683, size: 32)
!13762 = !{!13763}
!13763 = !DILocalVariable(name: "devices", arg: 1, scope: !13758, file: !13680, line: 87, type: !13761)
!13764 = !DILocation(line: 0, scope: !13758)
!13765 = !DILocation(line: 89, column: 11, scope: !13758)
!13766 = !DILocation(line: 90, column: 2, scope: !13758)
!13767 = distinct !DISubprogram(name: "device_required_foreach", scope: !13680, file: !13680, line: 125, type: !13768, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13774)
!13768 = !DISubroutineType(types: !13769)
!13769 = !{!105, !13683, !13770, !104}
!13770 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !494, line: 471, baseType: !13771)
!13771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13772, size: 32)
!13772 = !DISubroutineType(types: !13773)
!13773 = !{!105, !13683, !104}
!13774 = !{!13775, !13776, !13777, !13778, !13779}
!13775 = !DILocalVariable(name: "dev", arg: 1, scope: !13767, file: !13680, line: 125, type: !13683)
!13776 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13767, file: !13680, line: 126, type: !13770)
!13777 = !DILocalVariable(name: "context", arg: 3, scope: !13767, file: !13680, line: 127, type: !104)
!13778 = !DILocalVariable(name: "handle_count", scope: !13767, file: !13680, line: 129, type: !111)
!13779 = !DILocalVariable(name: "handles", scope: !13767, file: !13680, line: 130, type: !508)
!13780 = !DILocation(line: 0, scope: !13767)
!13781 = !DILocation(line: 129, column: 2, scope: !13767)
!13782 = !DILocation(line: 129, column: 9, scope: !13767)
!13783 = !DILocation(line: 130, column: 35, scope: !13767)
!13784 = !DILocation(line: 132, column: 33, scope: !13767)
!13785 = !DILocation(line: 132, column: 9, scope: !13767)
!13786 = !DILocation(line: 133, column: 1, scope: !13767)
!13787 = !DILocation(line: 132, column: 2, scope: !13767)
!13788 = distinct !DISubprogram(name: "device_required_handles_get", scope: !494, file: !494, line: 493, type: !13789, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13791)
!13789 = !DISubroutineType(types: !13790)
!13790 = !{!508, !13683, !2654}
!13791 = !{!13792, !13793, !13794, !13795}
!13792 = !DILocalVariable(name: "dev", arg: 1, scope: !13788, file: !494, line: 493, type: !13683)
!13793 = !DILocalVariable(name: "count", arg: 2, scope: !13788, file: !494, line: 493, type: !2654)
!13794 = !DILocalVariable(name: "rv", scope: !13788, file: !494, line: 495, type: !508)
!13795 = !DILocalVariable(name: "i", scope: !13796, file: !494, line: 498, type: !111)
!13796 = distinct !DILexicalBlock(scope: !13797, file: !494, line: 497, column: 18)
!13797 = distinct !DILexicalBlock(scope: !13788, file: !494, line: 497, column: 6)
!13798 = !DILocation(line: 0, scope: !13788)
!13799 = !DILocation(line: 495, column: 35, scope: !13788)
!13800 = !DILocation(line: 497, column: 9, scope: !13797)
!13801 = !DILocation(line: 497, column: 6, scope: !13788)
!13802 = !DILocation(line: 0, scope: !13796)
!13803 = !DILocation(line: 500, column: 11, scope: !13796)
!13804 = !DILocation(line: 500, column: 40, scope: !13796)
!13805 = !DILocation(line: 502, column: 4, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13796, file: !494, line: 501, column: 40)
!13807 = distinct !{!13807, !13808, !13809}
!13808 = !DILocation(line: 500, column: 3, scope: !13796)
!13809 = !DILocation(line: 503, column: 3, scope: !13796)
!13810 = !DILocation(line: 504, column: 10, scope: !13796)
!13811 = !DILocation(line: 505, column: 2, scope: !13796)
!13812 = !DILocation(line: 507, column: 2, scope: !13788)
!13813 = distinct !DISubprogram(name: "device_visitor", scope: !13680, file: !13680, line: 106, type: !13814, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13816)
!13814 = !DISubroutineType(types: !13815)
!13815 = !{!105, !508, !111, !13770, !104}
!13816 = !{!13817, !13818, !13819, !13820, !13821, !13823, !13826, !13827}
!13817 = !DILocalVariable(name: "handles", arg: 1, scope: !13813, file: !13680, line: 106, type: !508)
!13818 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13813, file: !13680, line: 107, type: !111)
!13819 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13813, file: !13680, line: 108, type: !13770)
!13820 = !DILocalVariable(name: "context", arg: 4, scope: !13813, file: !13680, line: 109, type: !104)
!13821 = !DILocalVariable(name: "i", scope: !13822, file: !13680, line: 112, type: !111)
!13822 = distinct !DILexicalBlock(scope: !13813, file: !13680, line: 112, column: 2)
!13823 = !DILocalVariable(name: "dh", scope: !13824, file: !13680, line: 113, type: !510)
!13824 = distinct !DILexicalBlock(scope: !13825, file: !13680, line: 112, column: 44)
!13825 = distinct !DILexicalBlock(scope: !13822, file: !13680, line: 112, column: 2)
!13826 = !DILocalVariable(name: "rdev", scope: !13824, file: !13680, line: 114, type: !13683)
!13827 = !DILocalVariable(name: "rc", scope: !13824, file: !13680, line: 115, type: !105)
!13828 = !DILocation(line: 0, scope: !13813)
!13829 = !DILocation(line: 0, scope: !13822)
!13830 = !DILocation(line: 112, column: 23, scope: !13825)
!13831 = !DILocation(line: 112, column: 2, scope: !13822)
!13832 = distinct !{!13832, !13831, !13833}
!13833 = !DILocation(line: 120, column: 2, scope: !13822)
!13834 = !DILocation(line: 113, column: 24, scope: !13824)
!13835 = !DILocation(line: 0, scope: !13824)
!13836 = !DILocation(line: 114, column: 31, scope: !13824)
!13837 = !DILocation(line: 115, column: 12, scope: !13824)
!13838 = !DILocation(line: 117, column: 10, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13824, file: !13680, line: 117, column: 7)
!13840 = !DILocation(line: 112, column: 39, scope: !13825)
!13841 = !DILocation(line: 123, column: 1, scope: !13813)
!13842 = distinct !DISubprogram(name: "device_from_handle", scope: !494, file: !494, line: 439, type: !13843, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13845)
!13843 = !DISubroutineType(types: !13844)
!13844 = !{!13683, !510}
!13845 = !{!13846, !13847, !13848}
!13846 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13842, file: !494, line: 439, type: !510)
!13847 = !DILocalVariable(name: "dev", scope: !13842, file: !494, line: 443, type: !13683)
!13848 = !DILocalVariable(name: "numdev", scope: !13842, file: !494, line: 444, type: !111)
!13849 = !DILocation(line: 0, scope: !13842)
!13850 = !DILocation(line: 446, column: 7, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13842, file: !494, line: 446, column: 6)
!13852 = !DILocation(line: 446, column: 18, scope: !13851)
!13853 = !DILocation(line: 446, column: 23, scope: !13851)
!13854 = !DILocation(line: 450, column: 2, scope: !13842)
!13855 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13680, file: !13680, line: 135, type: !13768, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13856)
!13856 = !{!13857, !13858, !13859, !13860, !13861}
!13857 = !DILocalVariable(name: "dev", arg: 1, scope: !13855, file: !13680, line: 135, type: !13683)
!13858 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13855, file: !13680, line: 136, type: !13770)
!13859 = !DILocalVariable(name: "context", arg: 3, scope: !13855, file: !13680, line: 137, type: !104)
!13860 = !DILocalVariable(name: "handle_count", scope: !13855, file: !13680, line: 139, type: !111)
!13861 = !DILocalVariable(name: "handles", scope: !13855, file: !13680, line: 140, type: !508)
!13862 = !DILocation(line: 0, scope: !13855)
!13863 = !DILocation(line: 139, column: 2, scope: !13855)
!13864 = !DILocation(line: 139, column: 9, scope: !13855)
!13865 = !DILocation(line: 140, column: 35, scope: !13855)
!13866 = !DILocation(line: 142, column: 33, scope: !13855)
!13867 = !DILocation(line: 142, column: 9, scope: !13855)
!13868 = !DILocation(line: 143, column: 1, scope: !13855)
!13869 = !DILocation(line: 142, column: 2, scope: !13855)
!13870 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !494, file: !494, line: 573, type: !13789, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13871)
!13871 = !{!13872, !13873, !13874, !13875, !13876}
!13872 = !DILocalVariable(name: "dev", arg: 1, scope: !13870, file: !494, line: 573, type: !13683)
!13873 = !DILocalVariable(name: "count", arg: 2, scope: !13870, file: !494, line: 573, type: !2654)
!13874 = !DILocalVariable(name: "rv", scope: !13870, file: !494, line: 575, type: !508)
!13875 = !DILocalVariable(name: "region", scope: !13870, file: !494, line: 576, type: !111)
!13876 = !DILocalVariable(name: "i", scope: !13870, file: !494, line: 577, type: !111)
!13877 = !DILocation(line: 0, scope: !13870)
!13878 = !DILocation(line: 575, column: 35, scope: !13870)
!13879 = !DILocation(line: 579, column: 9, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13870, file: !494, line: 579, column: 6)
!13881 = !DILocation(line: 579, column: 6, scope: !13870)
!13882 = !DILocation(line: 582, column: 8, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13884, file: !494, line: 582, column: 8)
!13884 = distinct !DILexicalBlock(scope: !13885, file: !494, line: 581, column: 23)
!13885 = distinct !DILexicalBlock(scope: !13880, file: !494, line: 579, column: 18)
!13886 = !DILocation(line: 582, column: 12, scope: !13883)
!13887 = !DILocation(line: 585, column: 6, scope: !13884)
!13888 = !DILocation(line: 0, scope: !13885)
!13889 = !DILocation(line: 581, column: 17, scope: !13885)
!13890 = !DILocation(line: 581, column: 3, scope: !13885)
!13891 = !DILocation(line: 588, column: 10, scope: !13885)
!13892 = !DILocation(line: 588, column: 16, scope: !13885)
!13893 = !DILocation(line: 589, column: 4, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13885, file: !494, line: 588, column: 39)
!13895 = !DILocation(line: 588, column: 3, scope: !13885)
!13896 = distinct !{!13896, !13895, !13897}
!13897 = !DILocation(line: 590, column: 3, scope: !13885)
!13898 = !DILocation(line: 591, column: 10, scope: !13885)
!13899 = !DILocation(line: 592, column: 2, scope: !13885)
!13900 = !DILocation(line: 575, column: 25, scope: !13870)
!13901 = !DILocation(line: 594, column: 2, scope: !13870)
!13902 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1977, file: !1977, line: 49, type: !13903, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1974, retainedNodes: !397)
!13903 = !DISubroutineType(types: !13904)
!13904 = !{!428}
!13905 = !DILocation(line: 51, column: 10, scope: !13902)
!13906 = !DILocation(line: 51, column: 20, scope: !13902)
!13907 = !DILocation(line: 51, column: 2, scope: !13902)
!13908 = distinct !DISubprogram(name: "coredump", scope: !3121, file: !3121, line: 209, type: !13909, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14057)
!13909 = !DISubroutineType(types: !13910)
!13910 = !{null, !32, !13911, !13955}
!13911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13912, size: 32)
!13912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13913)
!13913 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2784, line: 141, baseType: !13914)
!13914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2784, line: 97, size: 256, elements: !13915)
!13915 = !{!13916}
!13916 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13914, file: !2784, line: 107, baseType: !13917, size: 256)
!13917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2784, line: 98, size: 256, elements: !13918)
!13918 = !{!13919, !13924, !13929, !13934, !13939, !13944, !13949, !13954}
!13919 = !DIDerivedType(tag: DW_TAG_member, scope: !13917, file: !2784, line: 99, baseType: !13920, size: 32)
!13920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13917, file: !2784, line: 99, size: 32, elements: !13921)
!13921 = !{!13922, !13923}
!13922 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13920, file: !2784, line: 99, baseType: !113, size: 32)
!13923 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13920, file: !2784, line: 99, baseType: !113, size: 32)
!13924 = !DIDerivedType(tag: DW_TAG_member, scope: !13917, file: !2784, line: 100, baseType: !13925, size: 32, offset: 32)
!13925 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13917, file: !2784, line: 100, size: 32, elements: !13926)
!13926 = !{!13927, !13928}
!13927 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13925, file: !2784, line: 100, baseType: !113, size: 32)
!13928 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13925, file: !2784, line: 100, baseType: !113, size: 32)
!13929 = !DIDerivedType(tag: DW_TAG_member, scope: !13917, file: !2784, line: 101, baseType: !13930, size: 32, offset: 64)
!13930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13917, file: !2784, line: 101, size: 32, elements: !13931)
!13931 = !{!13932, !13933}
!13932 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13930, file: !2784, line: 101, baseType: !113, size: 32)
!13933 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13930, file: !2784, line: 101, baseType: !113, size: 32)
!13934 = !DIDerivedType(tag: DW_TAG_member, scope: !13917, file: !2784, line: 102, baseType: !13935, size: 32, offset: 96)
!13935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13917, file: !2784, line: 102, size: 32, elements: !13936)
!13936 = !{!13937, !13938}
!13937 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13935, file: !2784, line: 102, baseType: !113, size: 32)
!13938 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13935, file: !2784, line: 102, baseType: !113, size: 32)
!13939 = !DIDerivedType(tag: DW_TAG_member, scope: !13917, file: !2784, line: 103, baseType: !13940, size: 32, offset: 128)
!13940 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13917, file: !2784, line: 103, size: 32, elements: !13941)
!13941 = !{!13942, !13943}
!13942 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13940, file: !2784, line: 103, baseType: !113, size: 32)
!13943 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13940, file: !2784, line: 103, baseType: !113, size: 32)
!13944 = !DIDerivedType(tag: DW_TAG_member, scope: !13917, file: !2784, line: 104, baseType: !13945, size: 32, offset: 160)
!13945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13917, file: !2784, line: 104, size: 32, elements: !13946)
!13946 = !{!13947, !13948}
!13947 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13945, file: !2784, line: 104, baseType: !113, size: 32)
!13948 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13945, file: !2784, line: 104, baseType: !113, size: 32)
!13949 = !DIDerivedType(tag: DW_TAG_member, scope: !13917, file: !2784, line: 105, baseType: !13950, size: 32, offset: 192)
!13950 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13917, file: !2784, line: 105, size: 32, elements: !13951)
!13951 = !{!13952, !13953}
!13952 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13950, file: !2784, line: 105, baseType: !113, size: 32)
!13953 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13950, file: !2784, line: 105, baseType: !113, size: 32)
!13954 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13917, file: !2784, line: 106, baseType: !113, size: 32, offset: 224)
!13955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13956, size: 32)
!13956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !13957)
!13957 = !{!13958, !14016, !14028, !14029, !14030, !14031, !14037, !14052}
!13958 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13956, file: !127, line: 247, baseType: !13959, size: 384)
!13959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !13960)
!13960 = !{!13961, !13985, !13992, !13993, !13994, !14003, !14004, !14005}
!13961 = !DIDerivedType(tag: DW_TAG_member, scope: !13959, file: !127, line: 60, baseType: !13962, size: 64)
!13962 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13959, file: !127, line: 60, size: 64, elements: !13963)
!13963 = !{!13964, !13979}
!13964 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13962, file: !127, line: 61, baseType: !13965, size: 64)
!13965 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !13966)
!13966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !13967)
!13967 = !{!13968, !13974}
!13968 = !DIDerivedType(tag: DW_TAG_member, scope: !13966, file: !137, line: 38, baseType: !13969, size: 32)
!13969 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13966, file: !137, line: 38, size: 32, elements: !13970)
!13970 = !{!13971, !13973}
!13971 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13969, file: !137, line: 39, baseType: !13972, size: 32)
!13972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13966, size: 32)
!13973 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13969, file: !137, line: 40, baseType: !13972, size: 32)
!13974 = !DIDerivedType(tag: DW_TAG_member, scope: !13966, file: !137, line: 42, baseType: !13975, size: 32, offset: 32)
!13975 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13966, file: !137, line: 42, size: 32, elements: !13976)
!13976 = !{!13977, !13978}
!13977 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13975, file: !137, line: 43, baseType: !13972, size: 32)
!13978 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13975, file: !137, line: 44, baseType: !13972, size: 32)
!13979 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13962, file: !127, line: 62, baseType: !13980, size: 64)
!13980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !13981)
!13981 = !{!13982}
!13982 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13980, file: !153, line: 50, baseType: !13983, size: 64)
!13983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13984, size: 64, elements: !158)
!13984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13980, size: 32)
!13985 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13959, file: !127, line: 68, baseType: !13986, size: 32, offset: 64)
!13986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13987, size: 32)
!13987 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !13988)
!13988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !13989)
!13989 = !{!13990}
!13990 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13988, file: !163, line: 232, baseType: !13991, size: 64)
!13991 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !13966)
!13992 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13959, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!13993 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13959, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!13994 = !DIDerivedType(tag: DW_TAG_member, scope: !13959, file: !127, line: 90, baseType: !13995, size: 16, offset: 112)
!13995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13959, file: !127, line: 90, size: 16, elements: !13996)
!13996 = !{!13997, !14002}
!13997 = !DIDerivedType(tag: DW_TAG_member, scope: !13995, file: !127, line: 91, baseType: !13998, size: 16)
!13998 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13995, file: !127, line: 91, size: 16, elements: !13999)
!13999 = !{!14000, !14001}
!14000 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13998, file: !127, line: 96, baseType: !179, size: 8)
!14001 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13998, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!14002 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13995, file: !127, line: 100, baseType: !183, size: 16)
!14003 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13959, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!14004 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13959, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!14005 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13959, file: !127, line: 131, baseType: !14006, size: 192, offset: 192)
!14006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !14007)
!14007 = !{!14008, !14009, !14015}
!14008 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14006, file: !163, line: 245, baseType: !13965, size: 64)
!14009 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14006, file: !163, line: 246, baseType: !14010, size: 32, offset: 64)
!14010 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !14011)
!14011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14012, size: 32)
!14012 = !DISubroutineType(types: !14013)
!14013 = !{null, !14014}
!14014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14006, size: 32)
!14015 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14006, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!14016 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13956, file: !127, line: 250, baseType: !14017, size: 288, offset: 384)
!14017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !14018)
!14018 = !{!14019, !14020, !14021, !14022, !14023, !14024, !14025, !14026, !14027}
!14019 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14017, file: !200, line: 26, baseType: !113, size: 32)
!14020 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14017, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!14021 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14017, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!14022 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14017, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!14023 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14017, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!14024 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14017, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!14025 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14017, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!14026 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14017, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!14027 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14017, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!14028 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13956, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!14029 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13956, file: !127, line: 256, baseType: !13987, size: 64, offset: 704)
!14030 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13956, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!14031 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13956, file: !127, line: 300, baseType: !14032, size: 96, offset: 800)
!14032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !14033)
!14033 = !{!14034, !14035, !14036}
!14034 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14032, file: !127, line: 153, baseType: !22, size: 32)
!14035 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14032, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!14036 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14032, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!14037 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13956, file: !127, line: 325, baseType: !14038, size: 32, offset: 896)
!14038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14039, size: 32)
!14039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !14040)
!14040 = !{!14041, !14047, !14048}
!14041 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14039, file: !122, line: 5074, baseType: !14042, size: 96)
!14042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !14043)
!14043 = !{!14044, !14045, !14046}
!14044 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14042, file: !226, line: 57, baseType: !229, size: 32)
!14045 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14042, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!14046 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14042, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!14047 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14039, file: !122, line: 5075, baseType: !13987, size: 64, offset: 96)
!14048 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14039, file: !122, line: 5076, baseType: !14049, size: 32, offset: 160)
!14049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !14050)
!14050 = !{!14051}
!14051 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !14049, file: !236, line: 52, baseType: !22, size: 32)
!14052 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13956, file: !127, line: 343, baseType: !14053, size: 64, offset: 928)
!14053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !14054)
!14054 = !{!14055, !14056}
!14055 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14053, file: !200, line: 63, baseType: !113, size: 32)
!14056 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14053, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!14057 = !{!14058, !14059, !14060}
!14058 = !DILocalVariable(name: "reason", arg: 1, scope: !13908, file: !3121, line: 209, type: !32)
!14059 = !DILocalVariable(name: "esf", arg: 2, scope: !13908, file: !3121, line: 209, type: !13911)
!14060 = !DILocalVariable(name: "thread", arg: 3, scope: !13908, file: !3121, line: 210, type: !13955)
!14061 = !DILocation(line: 0, scope: !13908)
!14062 = !DILocation(line: 212, column: 1, scope: !13908)
!14063 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3121, file: !3121, line: 214, type: !14064, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14066)
!14064 = !DISubroutineType(types: !14065)
!14065 = !{null, !22, !22}
!14066 = !{!14067, !14068}
!14067 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14063, file: !3121, line: 214, type: !22)
!14068 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14063, file: !3121, line: 214, type: !22)
!14069 = !DILocation(line: 0, scope: !14063)
!14070 = !DILocation(line: 216, column: 1, scope: !14063)
!14071 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3121, file: !3121, line: 218, type: !14072, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14074)
!14072 = !DISubroutineType(types: !14073)
!14073 = !{null, !432, !111}
!14074 = !{!14075, !14076}
!14075 = !DILocalVariable(name: "buf", arg: 1, scope: !14071, file: !3121, line: 218, type: !432)
!14076 = !DILocalVariable(name: "buflen", arg: 2, scope: !14071, file: !3121, line: 218, type: !111)
!14077 = !DILocation(line: 0, scope: !14071)
!14078 = !DILocation(line: 220, column: 1, scope: !14071)
!14079 = distinct !DISubprogram(name: "coredump_query", scope: !3121, file: !3121, line: 222, type: !14080, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14082)
!14080 = !DISubroutineType(types: !14081)
!14081 = !{!105, !3120, !104}
!14082 = !{!14083, !14084}
!14083 = !DILocalVariable(name: "query_id", arg: 1, scope: !14079, file: !3121, line: 222, type: !3120)
!14084 = !DILocalVariable(name: "arg", arg: 2, scope: !14079, file: !3121, line: 222, type: !104)
!14085 = !DILocation(line: 0, scope: !14079)
!14086 = !DILocation(line: 224, column: 2, scope: !14079)
!14087 = distinct !DISubprogram(name: "coredump_cmd", scope: !3121, file: !3121, line: 227, type: !14088, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14090)
!14088 = !DISubroutineType(types: !14089)
!14089 = !{!105, !3127, !104}
!14090 = !{!14091, !14092}
!14091 = !DILocalVariable(name: "query_id", arg: 1, scope: !14087, file: !3121, line: 227, type: !3127)
!14092 = !DILocalVariable(name: "arg", arg: 2, scope: !14087, file: !3121, line: 227, type: !104)
!14093 = !DILocation(line: 0, scope: !14087)
!14094 = !DILocation(line: 229, column: 2, scope: !14087)
!14095 = distinct !DISubprogram(name: "arch_system_halt", scope: !14096, file: !14096, line: 23, type: !7430, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14097)
!14096 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14097 = !{!14098}
!14098 = !DILocalVariable(name: "reason", arg: 1, scope: !14095, file: !14096, line: 23, type: !32)
!14099 = !DILocation(line: 0, scope: !14095)
!14100 = !DILocation(line: 55, column: 2, scope: !14101, inlinedAt: !14105)
!14101 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7419, file: !7419, line: 42, type: !7420, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14102)
!14102 = !{!14103, !14104}
!14103 = !DILocalVariable(name: "key", scope: !14101, file: !7419, line: 44, type: !32)
!14104 = !DILocalVariable(name: "tmp", scope: !14101, file: !7419, line: 53, type: !32)
!14105 = distinct !DILocation(line: 31, column: 8, scope: !14095)
!14106 = !{i64 1654165}
!14107 = !DILocation(line: 0, scope: !14101, inlinedAt: !14105)
!14108 = !DILocation(line: 32, column: 2, scope: !14095)
!14109 = !DILocation(line: 32, column: 2, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14111, file: !14096, line: 32, column: 2)
!14111 = distinct !DILexicalBlock(scope: !14095, file: !14096, line: 32, column: 2)
!14112 = distinct !{!14112, !14113, !14114}
!14113 = !DILocation(line: 32, column: 2, scope: !14111)
!14114 = !DILocation(line: 34, column: 2, scope: !14111)
!14115 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14096, file: !14096, line: 39, type: !14116, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14118)
!14116 = !DISubroutineType(types: !14117)
!14117 = !{null, !32, !13911}
!14118 = !{!14119, !14120}
!14119 = !DILocalVariable(name: "reason", arg: 1, scope: !14115, file: !14096, line: 39, type: !32)
!14120 = !DILocalVariable(name: "esf", arg: 2, scope: !14115, file: !14096, line: 40, type: !13911)
!14121 = !DILocation(line: 0, scope: !14115)
!14122 = !DILocation(line: 45, column: 2, scope: !14123)
!14123 = distinct !DILexicalBlock(scope: !14124, file: !14096, line: 45, column: 2)
!14124 = distinct !DILexicalBlock(scope: !14125, file: !14096, line: 45, column: 2)
!14125 = distinct !DILexicalBlock(scope: !14126, file: !14096, line: 45, column: 2)
!14126 = distinct !DILexicalBlock(scope: !14115, file: !14096, line: 45, column: 2)
!14127 = !DILocation(line: 46, column: 2, scope: !14115)
!14128 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14096, file: !14096, line: 81, type: !7430, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14129)
!14129 = !{!14130}
!14130 = !DILocalVariable(name: "reason", arg: 1, scope: !14128, file: !14096, line: 81, type: !32)
!14131 = !DILocation(line: 0, scope: !14128)
!14132 = !DILocation(line: 83, column: 2, scope: !14128)
!14133 = distinct !DISubprogram(name: "z_fatal_error", scope: !14096, file: !14096, line: 96, type: !14116, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14134)
!14134 = !{!14135, !14136, !14137, !14138}
!14135 = !DILocalVariable(name: "reason", arg: 1, scope: !14133, file: !14096, line: 96, type: !32)
!14136 = !DILocalVariable(name: "esf", arg: 2, scope: !14133, file: !14096, line: 96, type: !13911)
!14137 = !DILocalVariable(name: "key", scope: !14133, file: !14096, line: 102, type: !32)
!14138 = !DILocalVariable(name: "thread", scope: !14133, file: !14096, line: 103, type: !13955)
!14139 = !DILocation(line: 0, scope: !14133)
!14140 = !DILocation(line: 55, column: 2, scope: !14101, inlinedAt: !14141)
!14141 = distinct !DILocation(line: 102, column: 21, scope: !14133)
!14142 = !DILocation(line: 0, scope: !14101, inlinedAt: !14141)
!14143 = !DILocation(line: 104, column: 4, scope: !14133)
!14144 = !DILocation(line: 109, column: 2, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14146, file: !14096, line: 109, column: 2)
!14146 = distinct !DILexicalBlock(scope: !14147, file: !14096, line: 109, column: 2)
!14147 = distinct !DILexicalBlock(scope: !14148, file: !14096, line: 109, column: 2)
!14148 = distinct !DILexicalBlock(scope: !14133, file: !14096, line: 109, column: 2)
!14149 = !DILocation(line: 119, column: 11, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14133, file: !14096, line: 119, column: 6)
!14151 = !DILocation(line: 119, column: 20, scope: !14150)
!14152 = !DILocalVariable(name: "esf", arg: 1, scope: !14153, file: !8760, line: 71, type: !13911)
!14153 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8760, file: !8760, line: 71, type: !14154, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14156)
!14154 = !DISubroutineType(types: !14155)
!14155 = !{!505, !13911}
!14156 = !{!14152}
!14157 = !DILocation(line: 0, scope: !14153, inlinedAt: !14158)
!14158 = distinct !DILocation(line: 119, column: 23, scope: !14150)
!14159 = !DILocation(line: 73, column: 21, scope: !14153, inlinedAt: !14158)
!14160 = !DILocation(line: 73, column: 26, scope: !14153, inlinedAt: !14158)
!14161 = !DILocation(line: 73, column: 9, scope: !14153, inlinedAt: !14158)
!14162 = !DILocation(line: 119, column: 6, scope: !14133)
!14163 = !DILocation(line: 120, column: 3, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14165, file: !14096, line: 120, column: 3)
!14165 = distinct !DILexicalBlock(scope: !14166, file: !14096, line: 120, column: 3)
!14166 = distinct !DILexicalBlock(scope: !14167, file: !14096, line: 120, column: 3)
!14167 = distinct !DILexicalBlock(scope: !14168, file: !14096, line: 120, column: 3)
!14168 = distinct !DILexicalBlock(scope: !14150, file: !14096, line: 119, column: 57)
!14169 = !DILocation(line: 121, column: 2, scope: !14168)
!14170 = !DILocation(line: 124, column: 2, scope: !14171)
!14171 = distinct !DILexicalBlock(scope: !14172, file: !14096, line: 124, column: 2)
!14172 = distinct !DILexicalBlock(scope: !14173, file: !14096, line: 124, column: 2)
!14173 = distinct !DILexicalBlock(scope: !14174, file: !14096, line: 124, column: 2)
!14174 = distinct !DILexicalBlock(scope: !14133, file: !14096, line: 124, column: 2)
!14175 = !DILocation(line: 131, column: 2, scope: !14133)
!14176 = !DILocation(line: 147, column: 3, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14178, file: !14096, line: 147, column: 3)
!14178 = distinct !DILexicalBlock(scope: !14179, file: !14096, line: 147, column: 3)
!14179 = distinct !DILexicalBlock(scope: !14180, file: !14096, line: 146, column: 32)
!14180 = distinct !DILexicalBlock(scope: !14133, file: !14096, line: 146, column: 6)
!14181 = !DILocation(line: 147, column: 3, scope: !14178)
!14182 = !DILocation(line: 147, column: 3, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14177, file: !14096, line: 147, column: 3)
!14184 = !DILocalVariable(name: "key", arg: 1, scope: !14185, file: !7419, line: 84, type: !32)
!14185 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7419, file: !7419, line: 84, type: !7430, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14186)
!14186 = !{!14184}
!14187 = !DILocation(line: 0, scope: !14185, inlinedAt: !14188)
!14188 = distinct !DILocation(line: 186, column: 2, scope: !14133)
!14189 = !DILocation(line: 95, column: 2, scope: !14185, inlinedAt: !14188)
!14190 = !{i64 1654982}
!14191 = !DILocation(line: 189, column: 3, scope: !14192)
!14192 = distinct !DILexicalBlock(scope: !14193, file: !14096, line: 188, column: 41)
!14193 = distinct !DILexicalBlock(scope: !14133, file: !14096, line: 188, column: 6)
!14194 = !DILocation(line: 191, column: 1, scope: !14133)
!14195 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !14196, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !397)
!14196 = !DISubroutineType(types: !14197)
!14197 = !{!14198}
!14198 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !13955)
!14199 = !DILocation(line: 535, column: 9, scope: !14195)
!14200 = !DILocation(line: 535, column: 2, scope: !14195)
!14201 = distinct !DISubprogram(name: "reason_to_str", scope: !14096, file: !14096, line: 62, type: !14202, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14204)
!14202 = !DISubroutineType(types: !14203)
!14203 = !{!269, !32}
!14204 = !{!14205}
!14205 = !DILocalVariable(name: "reason", arg: 1, scope: !14201, file: !14096, line: 62, type: !32)
!14206 = !DILocation(line: 0, scope: !14201)
!14207 = !DILocation(line: 64, column: 2, scope: !14201)
!14208 = !DILocation(line: 0, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14201, file: !14096, line: 64, column: 18)
!14210 = !DILocation(line: 78, column: 1, scope: !14201)
!14211 = distinct !DISubprogram(name: "thread_name_get", scope: !14096, file: !14096, line: 51, type: !14212, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14214)
!14212 = !DISubroutineType(types: !14213)
!14213 = !{!269, !13955}
!14214 = !{!14215, !14216}
!14215 = !DILocalVariable(name: "thread", arg: 1, scope: !14211, file: !14096, line: 51, type: !13955)
!14216 = !DILocalVariable(name: "thread_name", scope: !14211, file: !14096, line: 53, type: !269)
!14217 = !DILocation(line: 0, scope: !14211)
!14218 = !DILocation(line: 53, column: 36, scope: !14211)
!14219 = !DILocation(line: 53, column: 28, scope: !14211)
!14220 = !DILocation(line: 53, column: 47, scope: !14211)
!14221 = !DILocation(line: 55, column: 19, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14211, file: !14096, line: 55, column: 6)
!14223 = !DILocation(line: 55, column: 28, scope: !14222)
!14224 = !DILocation(line: 55, column: 32, scope: !14222)
!14225 = !DILocation(line: 55, column: 47, scope: !14222)
!14226 = !DILocation(line: 55, column: 6, scope: !14211)
!14227 = !DILocation(line: 57, column: 2, scope: !14228)
!14228 = distinct !DILexicalBlock(scope: !14222, file: !14096, line: 55, column: 57)
!14229 = !DILocation(line: 59, column: 2, scope: !14211)
!14230 = distinct !DISubprogram(name: "k_thread_abort", scope: !3406, file: !3406, line: 188, type: !14231, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !14233)
!14231 = !DISubroutineType(types: !14232)
!14232 = !{null, !14198}
!14233 = !{!14234}
!14234 = !DILocalVariable(name: "thread", arg: 1, scope: !14230, file: !3406, line: 188, type: !14198)
!14235 = !DILocation(line: 0, scope: !14230)
!14236 = !DILocation(line: 197, column: 2, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14230, file: !3406, line: 197, column: 2)
!14238 = !{i64 2152224413}
!14239 = !DILocation(line: 198, column: 2, scope: !14230)
!14240 = !DILocation(line: 199, column: 1, scope: !14230)
!14241 = distinct !DISubprogram(name: "z_current_get", scope: !3406, file: !3406, line: 173, type: !14196, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !397)
!14242 = !DILocation(line: 180, column: 2, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14241, file: !3406, line: 180, column: 2)
!14244 = !{i64 2152224345}
!14245 = !DILocation(line: 181, column: 9, scope: !14241)
!14246 = !DILocation(line: 181, column: 2, scope: !14241)
!14247 = distinct !DISubprogram(name: "z_early_memset", scope: !1985, file: !1985, line: 108, type: !14248, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14250)
!14248 = !DISubroutineType(types: !14249)
!14249 = !{null, !104, !105, !111}
!14250 = !{!14251, !14252, !14253}
!14251 = !DILocalVariable(name: "dst", arg: 1, scope: !14247, file: !1985, line: 108, type: !104)
!14252 = !DILocalVariable(name: "c", arg: 2, scope: !14247, file: !1985, line: 108, type: !105)
!14253 = !DILocalVariable(name: "n", arg: 3, scope: !14247, file: !1985, line: 108, type: !111)
!14254 = !DILocation(line: 0, scope: !14247)
!14255 = !DILocation(line: 110, column: 9, scope: !14247)
!14256 = !DILocation(line: 111, column: 1, scope: !14247)
!14257 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1985, file: !1985, line: 121, type: !14258, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14260)
!14258 = !DISubroutineType(types: !14259)
!14259 = !{null, !104, !13, !111}
!14260 = !{!14261, !14262, !14263}
!14261 = !DILocalVariable(name: "dst", arg: 1, scope: !14257, file: !1985, line: 121, type: !104)
!14262 = !DILocalVariable(name: "src", arg: 2, scope: !14257, file: !1985, line: 121, type: !13)
!14263 = !DILocalVariable(name: "n", arg: 3, scope: !14257, file: !1985, line: 121, type: !111)
!14264 = !DILocation(line: 0, scope: !14257)
!14265 = !DILocation(line: 123, column: 9, scope: !14257)
!14266 = !DILocation(line: 124, column: 1, scope: !14257)
!14267 = distinct !DISubprogram(name: "z_bss_zero", scope: !1985, file: !1985, line: 132, type: !266, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !397)
!14268 = !DILocation(line: 143, column: 2, scope: !14267)
!14269 = !DILocation(line: 168, column: 1, scope: !14267)
!14270 = distinct !DISubprogram(name: "z_init_cpu", scope: !1985, file: !1985, line: 372, type: !9795, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14271)
!14271 = !{!14272}
!14272 = !DILocalVariable(name: "id", arg: 1, scope: !14270, file: !1985, line: 372, type: !105)
!14273 = !DILocation(line: 0, scope: !14270)
!14274 = !DILocation(line: 374, column: 2, scope: !14270)
!14275 = !DILocation(line: 375, column: 34, scope: !14270)
!14276 = !DILocation(line: 375, column: 19, scope: !14270)
!14277 = !DILocation(line: 375, column: 31, scope: !14270)
!14278 = !DILocation(line: 376, column: 24, scope: !14270)
!14279 = !DILocation(line: 376, column: 19, scope: !14270)
!14280 = !DILocation(line: 376, column: 22, scope: !14270)
!14281 = !DILocation(line: 378, column: 26, scope: !14270)
!14282 = !DILocation(line: 378, column: 4, scope: !14270)
!14283 = !DILocation(line: 378, column: 50, scope: !14270)
!14284 = !DILocation(line: 377, column: 19, scope: !14270)
!14285 = !DILocation(line: 377, column: 29, scope: !14270)
!14286 = !DILocation(line: 384, column: 1, scope: !14270)
!14287 = distinct !DISubprogram(name: "init_idle_thread", scope: !1985, file: !1985, line: 343, type: !9795, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14288)
!14288 = !{!14289, !14290, !14291, !14294}
!14289 = !DILocalVariable(name: "i", arg: 1, scope: !14287, file: !1985, line: 343, type: !105)
!14290 = !DILocalVariable(name: "thread", scope: !14287, file: !1985, line: 345, type: !2077)
!14291 = !DILocalVariable(name: "stack", scope: !14287, file: !1985, line: 346, type: !14292)
!14292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14293, size: 32)
!14293 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !2194)
!14294 = !DILocalVariable(name: "tname", scope: !14287, file: !1985, line: 358, type: !102)
!14295 = !DILocation(line: 0, scope: !14287)
!14296 = !DILocation(line: 345, column: 29, scope: !14287)
!14297 = !DILocation(line: 346, column: 28, scope: !14287)
!14298 = !DILocation(line: 362, column: 37, scope: !14287)
!14299 = !DILocation(line: 362, column: 36, scope: !14287)
!14300 = !DILocation(line: 361, column: 2, scope: !14287)
!14301 = !DILocation(line: 365, column: 2, scope: !14287)
!14302 = !DILocation(line: 370, column: 1, scope: !14287)
!14303 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !249, file: !249, line: 331, type: !14304, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14306)
!14304 = !DISubroutineType(types: !14305)
!14305 = !{!102, !14292}
!14306 = !{!14307}
!14307 = !DILocalVariable(name: "sym", arg: 1, scope: !14303, file: !249, line: 331, type: !14292)
!14308 = !DILocation(line: 0, scope: !14303)
!14309 = !DILocation(line: 333, column: 21, scope: !14303)
!14310 = !DILocation(line: 333, column: 2, scope: !14303)
!14311 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14312, file: !14312, line: 155, type: !14313, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14315)
!14312 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14313 = !DISubroutineType(types: !14314)
!14314 = !{null, !2077}
!14315 = !{!14316}
!14316 = !DILocalVariable(name: "thread", arg: 1, scope: !14311, file: !14312, line: 155, type: !2077)
!14317 = !DILocation(line: 0, scope: !14311)
!14318 = !DILocation(line: 157, column: 15, scope: !14311)
!14319 = !DILocation(line: 157, column: 28, scope: !14311)
!14320 = !DILocation(line: 158, column: 1, scope: !14311)
!14321 = distinct !DISubprogram(name: "z_early_boot_rand_get", scope: !1985, file: !1985, line: 451, type: !14072, scopeLine: 452, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14322)
!14322 = !{!14323, !14324}
!14323 = !DILocalVariable(name: "buf", arg: 1, scope: !14321, file: !1985, line: 451, type: !432)
!14324 = !DILocalVariable(name: "length", arg: 2, scope: !14321, file: !1985, line: 451, type: !111)
!14325 = !DILocation(line: 0, scope: !14321)
!14326 = !DILocation(line: 485, column: 2, scope: !14321)
!14327 = !DILocation(line: 486, column: 1, scope: !14321)
!14328 = distinct !DISubprogram(name: "sys_rand_get", scope: !14329, file: !14329, line: 46, type: !14330, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14332)
!14329 = !DIFile(filename: "zephyr/include/generated/syscalls/rand32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/metairq_dispatch")
!14330 = !DISubroutineType(types: !14331)
!14331 = !{null, !104, !111}
!14332 = !{!14333, !14334}
!14333 = !DILocalVariable(name: "dst", arg: 1, scope: !14328, file: !14329, line: 46, type: !104)
!14334 = !DILocalVariable(name: "len", arg: 2, scope: !14328, file: !14329, line: 46, type: !111)
!14335 = !DILocation(line: 0, scope: !14328)
!14336 = !DILocation(line: 56, column: 2, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14328, file: !14329, line: 56, column: 2)
!14338 = !{i64 2152442142}
!14339 = !DILocation(line: 57, column: 2, scope: !14328)
!14340 = !DILocation(line: 58, column: 1, scope: !14328)
!14341 = !DISubprogram(name: "z_impl_sys_rand_get", scope: !14329, file: !14329, line: 43, type: !14330, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14342 = distinct !DISubprogram(name: "z_cstart", scope: !1985, file: !1985, line: 501, type: !266, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14343)
!14343 = !{!14344}
!14344 = !DILocalVariable(name: "dummy_thread", scope: !14342, file: !1985, line: 518, type: !2078)
!14345 = !DILocation(line: 507, column: 2, scope: !14342)
!14346 = !DILocation(line: 43, column: 14, scope: !14347, inlinedAt: !14351)
!14347 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14348, file: !14348, line: 40, type: !266, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14349)
!14348 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14349 = !{!14350}
!14350 = !DILocalVariable(name: "msp", scope: !14347, file: !14348, line: 42, type: !113)
!14351 = distinct !DILocation(line: 44, column: 2, scope: !14352, inlinedAt: !14354)
!14352 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14353, file: !14353, line: 42, type: !266, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !397)
!14353 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14354 = distinct !DILocation(line: 510, column: 2, scope: !14342)
!14355 = !DILocation(line: 43, column: 3, scope: !14347, inlinedAt: !14351)
!14356 = !DILocation(line: 43, column: 60, scope: !14347, inlinedAt: !14351)
!14357 = !DILocation(line: 0, scope: !14347, inlinedAt: !14351)
!14358 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14359, file: !7754, line: 1153, type: !113)
!14359 = distinct !DISubprogram(name: "__set_MSP", scope: !7754, file: !7754, line: 1153, type: !7443, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14360)
!14360 = !{!14358}
!14361 = !DILocation(line: 0, scope: !14359, inlinedAt: !14362)
!14362 = distinct !DILocation(line: 46, column: 2, scope: !14347, inlinedAt: !14351)
!14363 = !DILocation(line: 1155, column: 3, scope: !14359, inlinedAt: !14362)
!14364 = !{i64 2467605}
!14365 = !DILocation(line: 62, column: 11, scope: !14347, inlinedAt: !14351)
!14366 = !DILocation(line: 102, column: 2, scope: !14367, inlinedAt: !14368)
!14367 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8760, file: !8760, line: 97, type: !266, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !397)
!14368 = distinct !DILocation(line: 45, column: 2, scope: !14352, inlinedAt: !14354)
!14369 = !DILocation(line: 108, column: 2, scope: !14367, inlinedAt: !14368)
!14370 = !DILocation(line: 112, column: 2, scope: !14367, inlinedAt: !14368)
!14371 = !DILocation(line: 113, column: 2, scope: !14367, inlinedAt: !14368)
!14372 = !DILocation(line: 114, column: 2, scope: !14367, inlinedAt: !14368)
!14373 = !DILocation(line: 116, column: 2, scope: !14367, inlinedAt: !14368)
!14374 = !DILocation(line: 123, column: 13, scope: !14367, inlinedAt: !14368)
!14375 = !DILocation(line: 46, column: 2, scope: !14352, inlinedAt: !14354)
!14376 = !DILocation(line: 47, column: 2, scope: !14352, inlinedAt: !14354)
!14377 = !DILocation(line: 174, column: 12, scope: !14378, inlinedAt: !14379)
!14378 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8760, file: !8760, line: 169, type: !266, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !397)
!14379 = distinct !DILocation(line: 48, column: 2, scope: !14352, inlinedAt: !14354)
!14380 = !DILocation(line: 179, column: 12, scope: !14378, inlinedAt: !14379)
!14381 = !DILocation(line: 50, column: 2, scope: !14352, inlinedAt: !14354)
!14382 = !DILocation(line: 57, column: 2, scope: !14352, inlinedAt: !14354)
!14383 = !DILocation(line: 518, column: 2, scope: !14342)
!14384 = !DILocation(line: 518, column: 18, scope: !14342)
!14385 = !DILocation(line: 520, column: 2, scope: !14342)
!14386 = !DILocation(line: 523, column: 2, scope: !14342)
!14387 = !DILocation(line: 526, column: 2, scope: !14342)
!14388 = !DILocation(line: 527, column: 2, scope: !14342)
!14389 = !DILocation(line: 543, column: 24, scope: !14342)
!14390 = !DILocation(line: 543, column: 2, scope: !14342)
!14391 = !DILocation(line: 0, scope: !2217)
!14392 = !DILocation(line: 246, column: 15, scope: !2235)
!14393 = !DILocation(line: 246, column: 36, scope: !2234)
!14394 = !DILocation(line: 246, column: 2, scope: !2235)
!14395 = !DILocation(line: 247, column: 37, scope: !2233)
!14396 = !DILocation(line: 0, scope: !2233)
!14397 = !DILocation(line: 248, column: 19, scope: !2233)
!14398 = !DILocation(line: 248, column: 12, scope: !2233)
!14399 = !DILocation(line: 250, column: 11, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !2233, file: !1985, line: 250, column: 7)
!14401 = !DILocation(line: 250, column: 7, scope: !2233)
!14402 = !DILocation(line: 254, column: 11, scope: !14403)
!14403 = distinct !DILexicalBlock(scope: !14404, file: !1985, line: 254, column: 8)
!14404 = distinct !DILexicalBlock(scope: !14400, file: !1985, line: 250, column: 20)
!14405 = !DILocation(line: 254, column: 8, scope: !14404)
!14406 = !DILocation(line: 255, column: 9, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14403, file: !1985, line: 254, column: 17)
!14408 = !DILocation(line: 258, column: 9, scope: !14407)
!14409 = !DILocation(line: 261, column: 28, scope: !14407)
!14410 = !DILocation(line: 261, column: 10, scope: !14407)
!14411 = !DILocation(line: 261, column: 17, scope: !14407)
!14412 = !DILocation(line: 261, column: 26, scope: !14407)
!14413 = !DILocation(line: 262, column: 4, scope: !14407)
!14414 = !DILocation(line: 263, column: 9, scope: !14404)
!14415 = !DILocation(line: 263, column: 16, scope: !14404)
!14416 = !DILocation(line: 263, column: 28, scope: !14404)
!14417 = !DILocation(line: 264, column: 3, scope: !14404)
!14418 = !DILocation(line: 246, column: 60, scope: !2234)
!14419 = distinct !{!14419, !14394, !14420}
!14420 = !DILocation(line: 265, column: 2, scope: !2235)
!14421 = !DILocation(line: 266, column: 1, scope: !2217)
!14422 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !692, file: !692, line: 1638, type: !7794, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14423)
!14423 = !{!14424, !14425}
!14424 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14422, file: !692, line: 1638, type: !1011)
!14425 = !DILocalVariable(name: "priority", arg: 2, scope: !14422, file: !692, line: 1638, type: !113)
!14426 = !DILocation(line: 0, scope: !14422)
!14427 = !DILocation(line: 1646, column: 48, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !14429, file: !692, line: 1645, column: 3)
!14429 = distinct !DILexicalBlock(scope: !14422, file: !692, line: 1640, column: 7)
!14430 = !DILocation(line: 1646, column: 32, scope: !14428)
!14431 = !DILocation(line: 1646, column: 40, scope: !14428)
!14432 = !DILocation(line: 1646, column: 5, scope: !14428)
!14433 = !DILocation(line: 1646, column: 46, scope: !14428)
!14434 = !DILocation(line: 1648, column: 1, scope: !14422)
!14435 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14353, file: !14353, line: 32, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14436 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14437, file: !14437, line: 215, type: !14313, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14438)
!14437 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14438 = !{!14439}
!14439 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14436, file: !14437, line: 215, type: !2077)
!14440 = !DILocation(line: 0, scope: !14436)
!14441 = !DILocation(line: 217, column: 21, scope: !14436)
!14442 = !DILocation(line: 217, column: 34, scope: !14436)
!14443 = !DILocation(line: 221, column: 21, scope: !14436)
!14444 = !DILocation(line: 221, column: 34, scope: !14436)
!14445 = !DILocation(line: 223, column: 27, scope: !14436)
!14446 = !DILocation(line: 223, column: 33, scope: !14436)
!14447 = !DILocation(line: 224, column: 27, scope: !14436)
!14448 = !DILocation(line: 224, column: 32, scope: !14436)
!14449 = !DILocation(line: 232, column: 16, scope: !14436)
!14450 = !DILocation(line: 232, column: 30, scope: !14436)
!14451 = !DILocation(line: 239, column: 24, scope: !14436)
!14452 = !DILocation(line: 240, column: 1, scope: !14436)
!14453 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1985, file: !1985, line: 399, type: !14454, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14456)
!14454 = !DISubroutineType(types: !14455)
!14455 = !{!102}
!14456 = !{!14457}
!14457 = !DILocalVariable(name: "stack_ptr", scope: !14453, file: !1985, line: 401, type: !102)
!14458 = !DILocation(line: 404, column: 2, scope: !14453)
!14459 = !DILocation(line: 416, column: 24, scope: !14453)
!14460 = !DILocation(line: 418, column: 14, scope: !14453)
!14461 = !DILocation(line: 0, scope: !14453)
!14462 = !DILocation(line: 423, column: 2, scope: !14453)
!14463 = !DILocation(line: 424, column: 2, scope: !14453)
!14464 = !DILocation(line: 426, column: 2, scope: !14453)
!14465 = !DILocation(line: 428, column: 2, scope: !14453)
!14466 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1985, file: !1985, line: 432, type: !14467, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14469)
!14467 = !DISubroutineType(types: !14468)
!14468 = !{null, !102}
!14469 = !{!14470}
!14470 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14466, file: !1985, line: 432, type: !102)
!14471 = !DILocation(line: 0, scope: !14466)
!14472 = !DILocation(line: 435, column: 2, scope: !14466)
!14473 = !DILocation(line: 445, column: 2, scope: !14466)
!14474 = distinct !DISubprogram(name: "bg_thread_main", scope: !1985, file: !1985, line: 277, type: !256, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !14475)
!14475 = !{!14476, !14477, !14478}
!14476 = !DILocalVariable(name: "unused1", arg: 1, scope: !14474, file: !1985, line: 277, type: !104)
!14477 = !DILocalVariable(name: "unused2", arg: 2, scope: !14474, file: !1985, line: 277, type: !104)
!14478 = !DILocalVariable(name: "unused3", arg: 3, scope: !14474, file: !1985, line: 277, type: !104)
!14479 = !DILocation(line: 0, scope: !14474)
!14480 = !DILocation(line: 291, column: 20, scope: !14474)
!14481 = !DILocation(line: 293, column: 2, scope: !14474)
!14482 = !DILocation(line: 297, column: 2, scope: !14474)
!14483 = !DILocation(line: 305, column: 2, scope: !14474)
!14484 = !DILocation(line: 307, column: 2, scope: !14474)
!14485 = !DILocation(line: 330, column: 8, scope: !14474)
!14486 = !DILocation(line: 333, column: 34, scope: !14474)
!14487 = !DILocation(line: 339, column: 1, scope: !14474)
!14488 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2246, file: !2246, line: 45, type: !14489, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14497)
!14489 = !DISubroutineType(types: !14490)
!14490 = !{null, !14491, !104}
!14491 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !122, line: 103, baseType: !14492)
!14492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14493, size: 32)
!14493 = !DISubroutineType(types: !14494)
!14494 = !{null, !14495, !104}
!14495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14496, size: 32)
!14496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2251)
!14497 = !{!14498, !14499}
!14498 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14488, file: !2246, line: 45, type: !14491)
!14499 = !DILocalVariable(name: "user_data", arg: 2, scope: !14488, file: !2246, line: 45, type: !104)
!14500 = !DILocation(line: 0, scope: !14488)
!14501 = !DILocation(line: 71, column: 1, scope: !14488)
!14502 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2246, file: !2246, line: 73, type: !14489, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14503)
!14503 = !{!14504, !14505}
!14504 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14502, file: !2246, line: 73, type: !14491)
!14505 = !DILocalVariable(name: "user_data", arg: 2, scope: !14502, file: !2246, line: 73, type: !104)
!14506 = !DILocation(line: 0, scope: !14502)
!14507 = !DILocation(line: 95, column: 1, scope: !14502)
!14508 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2246, file: !2246, line: 97, type: !8761, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !397)
!14509 = !DILocation(line: 1031, column: 3, scope: !14510, inlinedAt: !14513)
!14510 = distinct !DISubprogram(name: "__get_IPSR", scope: !7754, file: !7754, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14511)
!14511 = !{!14512}
!14512 = !DILocalVariable(name: "result", scope: !14510, file: !7754, line: 1029, type: !113)
!14513 = distinct !DILocation(line: 48, column: 10, scope: !14514, inlinedAt: !14515)
!14514 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8760, file: !8760, line: 46, type: !8761, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !397)
!14515 = distinct !DILocation(line: 99, column: 9, scope: !14508)
!14516 = !{i64 2473256}
!14517 = !DILocation(line: 0, scope: !14510, inlinedAt: !14513)
!14518 = !DILocation(line: 48, column: 9, scope: !14514, inlinedAt: !14515)
!14519 = !DILocation(line: 99, column: 2, scope: !14508)
!14520 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2246, file: !2246, line: 106, type: !266, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !397)
!14521 = !DILocation(line: 108, column: 2, scope: !14520)
!14522 = !DILocation(line: 108, column: 17, scope: !14520)
!14523 = !DILocation(line: 108, column: 30, scope: !14520)
!14524 = !DILocation(line: 109, column: 1, scope: !14520)
!14525 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2246, file: !2246, line: 116, type: !266, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !397)
!14526 = !DILocation(line: 118, column: 2, scope: !14525)
!14527 = !DILocation(line: 118, column: 17, scope: !14525)
!14528 = !DILocation(line: 118, column: 30, scope: !14525)
!14529 = !DILocation(line: 119, column: 1, scope: !14525)
!14530 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2246, file: !2246, line: 126, type: !8761, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !397)
!14531 = !DILocation(line: 128, column: 10, scope: !14530)
!14532 = !DILocation(line: 128, column: 25, scope: !14530)
!14533 = !DILocation(line: 128, column: 38, scope: !14530)
!14534 = !DILocation(line: 128, column: 53, scope: !14530)
!14535 = !DILocation(line: 128, column: 2, scope: !14530)
!14536 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2246, file: !2246, line: 187, type: !14537, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14539)
!14537 = !DISubroutineType(types: !14538)
!14538 = !{!105, !2250, !269}
!14539 = !{!14540, !14541}
!14540 = !DILocalVariable(name: "thread", arg: 1, scope: !14536, file: !2246, line: 187, type: !2250)
!14541 = !DILocalVariable(name: "value", arg: 2, scope: !14536, file: !2246, line: 187, type: !269)
!14542 = !DILocation(line: 0, scope: !14536)
!14543 = !DILocation(line: 206, column: 2, scope: !14536)
!14544 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2246, file: !2246, line: 238, type: !14545, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14547)
!14545 = !DISubroutineType(types: !14546)
!14546 = !{!269, !2250}
!14547 = !{!14548}
!14548 = !DILocalVariable(name: "thread", arg: 1, scope: !14544, file: !2246, line: 238, type: !2250)
!14549 = !DILocation(line: 0, scope: !14544)
!14550 = !DILocation(line: 244, column: 2, scope: !14544)
!14551 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2246, file: !2246, line: 248, type: !14552, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14554)
!14552 = !DISubroutineType(types: !14553)
!14553 = !{!105, !2249, !102, !111}
!14554 = !{!14555, !14556, !14557}
!14555 = !DILocalVariable(name: "thread", arg: 1, scope: !14551, file: !2246, line: 248, type: !2249)
!14556 = !DILocalVariable(name: "buf", arg: 2, scope: !14551, file: !2246, line: 248, type: !102)
!14557 = !DILocalVariable(name: "size", arg: 3, scope: !14551, file: !2246, line: 248, type: !111)
!14558 = !DILocation(line: 0, scope: !14551)
!14559 = !DILocation(line: 257, column: 2, scope: !14551)
!14560 = !DILocation(line: 0, scope: !2245)
!14561 = !DILocation(line: 281, column: 11, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !2245, file: !2246, line: 281, column: 6)
!14563 = !DILocation(line: 281, column: 20, scope: !14562)
!14564 = !DILocation(line: 275, column: 45, scope: !2245)
!14565 = !DILocation(line: 285, column: 10, scope: !2245)
!14566 = !DILocation(line: 0, scope: !2368)
!14567 = !DILocation(line: 293, column: 39, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !2368, file: !2246, line: 293, column: 2)
!14569 = !DILocation(line: 293, column: 2, scope: !2368)
!14570 = !DILocation(line: 273, column: 14, scope: !2245)
!14571 = !DILocation(line: 309, column: 2, scope: !2245)
!14572 = !DILocation(line: 309, column: 11, scope: !2245)
!14573 = !DILocation(line: 311, column: 2, scope: !2245)
!14574 = !DILocation(line: 293, column: 26, scope: !14568)
!14575 = !DILocation(line: 294, column: 9, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14568, file: !2246, line: 293, column: 54)
!14577 = !DILocation(line: 295, column: 21, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14576, file: !2246, line: 295, column: 7)
!14579 = !DILocation(line: 295, column: 28, scope: !14578)
!14580 = !DILocation(line: 295, column: 7, scope: !14576)
!14581 = !DILocation(line: 299, column: 25, scope: !14576)
!14582 = !DILocation(line: 299, column: 41, scope: !14576)
!14583 = !DILocation(line: 300, column: 7, scope: !14576)
!14584 = !DILocation(line: 300, column: 26, scope: !14576)
!14585 = !DILocation(line: 299, column: 10, scope: !14576)
!14586 = !DILocation(line: 299, column: 7, scope: !14576)
!14587 = !DILocation(line: 302, column: 16, scope: !14576)
!14588 = !DILocation(line: 304, column: 20, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14576, file: !2246, line: 304, column: 7)
!14590 = !DILocation(line: 304, column: 7, scope: !14576)
!14591 = !DILocation(line: 305, column: 26, scope: !14592)
!14592 = distinct !DILexicalBlock(scope: !14589, file: !2246, line: 304, column: 26)
!14593 = !DILocation(line: 305, column: 42, scope: !14592)
!14594 = !DILocation(line: 305, column: 11, scope: !14592)
!14595 = !DILocation(line: 305, column: 8, scope: !14592)
!14596 = !DILocation(line: 306, column: 3, scope: !14592)
!14597 = !DILocation(line: 293, column: 50, scope: !14568)
!14598 = !DILocation(line: 312, column: 1, scope: !2245)
!14599 = distinct !DISubprogram(name: "copy_bytes", scope: !2246, file: !2246, line: 261, type: !14600, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14602)
!14600 = !DISubroutineType(types: !14601)
!14601 = !{!111, !102, !111, !269, !111}
!14602 = !{!14603, !14604, !14605, !14606, !14607}
!14603 = !DILocalVariable(name: "dest", arg: 1, scope: !14599, file: !2246, line: 261, type: !102)
!14604 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14599, file: !2246, line: 261, type: !111)
!14605 = !DILocalVariable(name: "src", arg: 3, scope: !14599, file: !2246, line: 261, type: !269)
!14606 = !DILocalVariable(name: "src_size", arg: 4, scope: !14599, file: !2246, line: 261, type: !111)
!14607 = !DILocalVariable(name: "bytes_to_copy", scope: !14599, file: !2246, line: 263, type: !111)
!14608 = !DILocation(line: 0, scope: !14599)
!14609 = !DILocation(line: 265, column: 18, scope: !14599)
!14610 = !DILocation(line: 266, column: 2, scope: !14599)
!14611 = !DILocation(line: 268, column: 2, scope: !14599)
!14612 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2246, file: !2246, line: 383, type: !14613, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14615)
!14613 = !DISubroutineType(types: !14614)
!14614 = !{null, !2250}
!14615 = !{!14616}
!14616 = !DILocalVariable(name: "thread", arg: 1, scope: !14612, file: !2246, line: 383, type: !2250)
!14617 = !DILocation(line: 0, scope: !14612)
!14618 = !DILocation(line: 387, column: 2, scope: !14612)
!14619 = !DILocation(line: 388, column: 1, scope: !14612)
!14620 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2246, file: !2246, line: 528, type: !14621, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14628)
!14621 = !DISubroutineType(types: !14622)
!14622 = !{!102, !2250, !14623, !111, !254, !104, !104, !104, !105, !113, !269}
!14623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14624, size: 32)
!14624 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !14625)
!14625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !14626)
!14626 = !{!14627}
!14627 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14625, file: !249, line: 48, baseType: !103, size: 8)
!14628 = !{!14629, !14630, !14631, !14632, !14633, !14634, !14635, !14636, !14637, !14638, !14639}
!14629 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14620, file: !2246, line: 528, type: !2250)
!14630 = !DILocalVariable(name: "stack", arg: 2, scope: !14620, file: !2246, line: 529, type: !14623)
!14631 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14620, file: !2246, line: 529, type: !111)
!14632 = !DILocalVariable(name: "entry", arg: 4, scope: !14620, file: !2246, line: 530, type: !254)
!14633 = !DILocalVariable(name: "p1", arg: 5, scope: !14620, file: !2246, line: 531, type: !104)
!14634 = !DILocalVariable(name: "p2", arg: 6, scope: !14620, file: !2246, line: 531, type: !104)
!14635 = !DILocalVariable(name: "p3", arg: 7, scope: !14620, file: !2246, line: 531, type: !104)
!14636 = !DILocalVariable(name: "prio", arg: 8, scope: !14620, file: !2246, line: 532, type: !105)
!14637 = !DILocalVariable(name: "options", arg: 9, scope: !14620, file: !2246, line: 532, type: !113)
!14638 = !DILocalVariable(name: "name", arg: 10, scope: !14620, file: !2246, line: 532, type: !269)
!14639 = !DILocalVariable(name: "stack_ptr", scope: !14620, file: !2246, line: 534, type: !102)
!14640 = !DILocation(line: 0, scope: !14620)
!14641 = !DILocation(line: 536, column: 2, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14643, file: !2246, line: 536, column: 2)
!14643 = distinct !DILexicalBlock(scope: !14644, file: !2246, line: 536, column: 2)
!14644 = distinct !DILexicalBlock(scope: !14620, file: !2246, line: 536, column: 2)
!14645 = !DILocation(line: 536, column: 2, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14642, file: !2246, line: 536, column: 2)
!14647 = !DILocation(line: 550, column: 28, scope: !14620)
!14648 = !DILocation(line: 550, column: 2, scope: !14620)
!14649 = !DILocation(line: 553, column: 34, scope: !14620)
!14650 = !DILocation(line: 553, column: 2, scope: !14620)
!14651 = !DILocation(line: 554, column: 14, scope: !14620)
!14652 = !DILocation(line: 564, column: 2, scope: !14620)
!14653 = !DILocation(line: 567, column: 14, scope: !14620)
!14654 = !DILocation(line: 567, column: 24, scope: !14620)
!14655 = !DILocation(line: 612, column: 7, scope: !14656)
!14656 = distinct !DILexicalBlock(scope: !14620, file: !2246, line: 612, column: 6)
!14657 = !DILocation(line: 612, column: 6, scope: !14620)
!14658 = !DILocation(line: 627, column: 40, scope: !14620)
!14659 = !DILocation(line: 637, column: 2, scope: !14620)
!14660 = !DILocation(line: 613, column: 15, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14656, file: !2246, line: 612, column: 17)
!14662 = !DILocation(line: 613, column: 29, scope: !14661)
!14663 = !DILocation(line: 638, column: 1, scope: !14620)
!14664 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !14312, file: !14312, line: 78, type: !14665, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14667)
!14665 = !DISubroutineType(types: !14666)
!14666 = !{!505, !104}
!14667 = !{!14668}
!14668 = !DILocalVariable(name: "entry_point", arg: 1, scope: !14664, file: !14312, line: 78, type: !104)
!14669 = !DILocation(line: 0, scope: !14664)
!14670 = !DILocation(line: 80, column: 21, scope: !14664)
!14671 = !DILocation(line: 80, column: 2, scope: !14664)
!14672 = distinct !DISubprogram(name: "z_waitq_init", scope: !14673, file: !14673, line: 47, type: !14674, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14676)
!14673 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14674 = !DISubroutineType(types: !14675)
!14675 = !{null, !2281}
!14676 = !{!14677}
!14677 = !DILocalVariable(name: "w", arg: 1, scope: !14672, file: !14673, line: 47, type: !2281)
!14678 = !DILocation(line: 0, scope: !14672)
!14679 = !DILocation(line: 49, column: 21, scope: !14672)
!14680 = !DILocation(line: 49, column: 2, scope: !14672)
!14681 = !DILocation(line: 50, column: 1, scope: !14672)
!14682 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2246, file: !2246, line: 791, type: !14683, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14686)
!14683 = !DISubroutineType(types: !14684)
!14684 = !{null, !14685, !105, !113, !32}
!14685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!14686 = !{!14687, !14688, !14689, !14690}
!14687 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14682, file: !2246, line: 791, type: !14685)
!14688 = !DILocalVariable(name: "priority", arg: 2, scope: !14682, file: !2246, line: 791, type: !105)
!14689 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14682, file: !2246, line: 792, type: !113)
!14690 = !DILocalVariable(name: "options", arg: 4, scope: !14682, file: !2246, line: 792, type: !32)
!14691 = !DILocation(line: 0, scope: !14682)
!14692 = !DILocation(line: 795, column: 15, scope: !14682)
!14693 = !DILocation(line: 795, column: 25, scope: !14682)
!14694 = !DILocation(line: 796, column: 30, scope: !14682)
!14695 = !DILocation(line: 796, column: 15, scope: !14682)
!14696 = !DILocation(line: 796, column: 28, scope: !14682)
!14697 = !DILocation(line: 797, column: 30, scope: !14682)
!14698 = !DILocation(line: 797, column: 15, scope: !14682)
!14699 = !DILocation(line: 797, column: 28, scope: !14682)
!14700 = !DILocation(line: 799, column: 22, scope: !14682)
!14701 = !DILocation(line: 799, column: 15, scope: !14682)
!14702 = !DILocation(line: 799, column: 20, scope: !14682)
!14703 = !DILocation(line: 801, column: 15, scope: !14682)
!14704 = !DILocation(line: 801, column: 28, scope: !14682)
!14705 = !DILocation(line: 814, column: 2, scope: !14682)
!14706 = !DILocation(line: 815, column: 1, scope: !14682)
!14707 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2246, file: !2246, line: 449, type: !14708, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14710)
!14708 = !DISubroutineType(types: !14709)
!14709 = !{!102, !2250, !14623, !111}
!14710 = !{!14711, !14712, !14713, !14714, !14715, !14716, !14717, !14718}
!14711 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14707, file: !2246, line: 449, type: !2250)
!14712 = !DILocalVariable(name: "stack", arg: 2, scope: !14707, file: !2246, line: 450, type: !14623)
!14713 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14707, file: !2246, line: 450, type: !111)
!14714 = !DILocalVariable(name: "stack_obj_size", scope: !14707, file: !2246, line: 452, type: !111)
!14715 = !DILocalVariable(name: "stack_buf_size", scope: !14707, file: !2246, line: 452, type: !111)
!14716 = !DILocalVariable(name: "stack_ptr", scope: !14707, file: !2246, line: 453, type: !102)
!14717 = !DILocalVariable(name: "stack_buf_start", scope: !14707, file: !2246, line: 453, type: !102)
!14718 = !DILocalVariable(name: "delta", scope: !14707, file: !2246, line: 454, type: !111)
!14719 = !DILocation(line: 0, scope: !14707)
!14720 = !DILocation(line: 465, column: 20, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14707, file: !2246, line: 463, column: 2)
!14722 = !DILocation(line: 466, column: 21, scope: !14721)
!14723 = !DILocation(line: 473, column: 28, scope: !14707)
!14724 = !DILocation(line: 514, column: 33, scope: !14707)
!14725 = !DILocation(line: 514, column: 25, scope: !14707)
!14726 = !DILocation(line: 514, column: 31, scope: !14707)
!14727 = !DILocation(line: 515, column: 25, scope: !14707)
!14728 = !DILocation(line: 515, column: 30, scope: !14707)
!14729 = !DILocation(line: 516, column: 25, scope: !14707)
!14730 = !DILocation(line: 516, column: 31, scope: !14707)
!14731 = !DILocation(line: 520, column: 2, scope: !14707)
!14732 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !249, file: !249, line: 331, type: !14733, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14735)
!14733 = !DISubroutineType(types: !14734)
!14734 = !{!102, !14623}
!14735 = !{!14736}
!14736 = !DILocalVariable(name: "sym", arg: 1, scope: !14732, file: !249, line: 331, type: !14623)
!14737 = !DILocation(line: 0, scope: !14732)
!14738 = !DILocation(line: 333, column: 21, scope: !14732)
!14739 = !DILocation(line: 333, column: 2, scope: !14732)
!14740 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14741, file: !14741, line: 40, type: !14742, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14744)
!14741 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14742 = !DISubroutineType(types: !14743)
!14743 = !{null, !14685}
!14744 = !{!14745}
!14745 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14740, file: !14741, line: 40, type: !14685)
!14746 = !DILocation(line: 0, scope: !14740)
!14747 = !DILocation(line: 42, column: 31, scope: !14740)
!14748 = !DILocation(line: 42, column: 2, scope: !14740)
!14749 = !DILocation(line: 43, column: 1, scope: !14740)
!14750 = distinct !DISubprogram(name: "z_init_timeout", scope: !14741, file: !14741, line: 25, type: !2307, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14751)
!14751 = !{!14752}
!14752 = !DILocalVariable(name: "to", arg: 1, scope: !14750, file: !14741, line: 25, type: !2309)
!14753 = !DILocation(line: 0, scope: !14750)
!14754 = !DILocation(line: 27, column: 22, scope: !14750)
!14755 = !DILocation(line: 27, column: 2, scope: !14750)
!14756 = !DILocation(line: 28, column: 1, scope: !14750)
!14757 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !14758, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14760)
!14758 = !DISubroutineType(types: !14759)
!14759 = !{null, !2355}
!14760 = !{!14761}
!14761 = !DILocalVariable(name: "node", arg: 1, scope: !14757, file: !137, line: 211, type: !2355)
!14762 = !DILocation(line: 0, scope: !14757)
!14763 = !DILocation(line: 213, column: 8, scope: !14757)
!14764 = !DILocation(line: 213, column: 13, scope: !14757)
!14765 = !DILocation(line: 214, column: 8, scope: !14757)
!14766 = !DILocation(line: 214, column: 13, scope: !14757)
!14767 = !DILocation(line: 215, column: 1, scope: !14757)
!14768 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !14769, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14772)
!14769 = !DISubroutineType(types: !14770)
!14770 = !{null, !14771}
!14771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 32)
!14772 = !{!14773}
!14773 = !DILocalVariable(name: "list", arg: 1, scope: !14768, file: !137, line: 197, type: !14771)
!14774 = !DILocation(line: 0, scope: !14768)
!14775 = !DILocation(line: 199, column: 8, scope: !14768)
!14776 = !DILocation(line: 199, column: 13, scope: !14768)
!14777 = !DILocation(line: 200, column: 8, scope: !14768)
!14778 = !DILocation(line: 200, column: 13, scope: !14768)
!14779 = !DILocation(line: 201, column: 1, scope: !14768)
!14780 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2246, file: !2246, line: 641, type: !14781, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14787)
!14781 = !DISubroutineType(types: !14782)
!14782 = !{!2249, !2250, !14623, !111, !254, !104, !104, !104, !105, !113, !14783}
!14783 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !14784)
!14784 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !14785)
!14785 = !{!14786}
!14786 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14784, file: !108, line: 66, baseType: !107, size: 64)
!14787 = !{!14788, !14789, !14790, !14791, !14792, !14793, !14794, !14795, !14796, !14797}
!14788 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14780, file: !2246, line: 641, type: !2250)
!14789 = !DILocalVariable(name: "stack", arg: 2, scope: !14780, file: !2246, line: 642, type: !14623)
!14790 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14780, file: !2246, line: 643, type: !111)
!14791 = !DILocalVariable(name: "entry", arg: 4, scope: !14780, file: !2246, line: 643, type: !254)
!14792 = !DILocalVariable(name: "p1", arg: 5, scope: !14780, file: !2246, line: 644, type: !104)
!14793 = !DILocalVariable(name: "p2", arg: 6, scope: !14780, file: !2246, line: 644, type: !104)
!14794 = !DILocalVariable(name: "p3", arg: 7, scope: !14780, file: !2246, line: 644, type: !104)
!14795 = !DILocalVariable(name: "prio", arg: 8, scope: !14780, file: !2246, line: 645, type: !105)
!14796 = !DILocalVariable(name: "options", arg: 9, scope: !14780, file: !2246, line: 645, type: !113)
!14797 = !DILocalVariable(name: "delay", arg: 10, scope: !14780, file: !2246, line: 645, type: !14783)
!14798 = !DILocation(line: 0, scope: !14780)
!14799 = !DILocation(line: 1031, column: 3, scope: !14510, inlinedAt: !14800)
!14800 = distinct !DILocation(line: 48, column: 10, scope: !14514, inlinedAt: !14801)
!14801 = distinct !DILocation(line: 647, column: 2, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !14803, file: !2246, line: 647, column: 2)
!14803 = distinct !DILexicalBlock(scope: !14780, file: !2246, line: 647, column: 2)
!14804 = !DILocation(line: 0, scope: !14510, inlinedAt: !14800)
!14805 = !DILocation(line: 48, column: 9, scope: !14514, inlinedAt: !14801)
!14806 = !DILocation(line: 647, column: 2, scope: !14803)
!14807 = !DILocation(line: 647, column: 2, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14802, file: !2246, line: 647, column: 2)
!14809 = !DILocation(line: 649, column: 2, scope: !14780)
!14810 = !DILocation(line: 652, column: 7, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14780, file: !2246, line: 652, column: 6)
!14812 = !DILocation(line: 652, column: 6, scope: !14780)
!14813 = !DILocation(line: 653, column: 3, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14811, file: !2246, line: 652, column: 39)
!14815 = !DILocation(line: 654, column: 2, scope: !14814)
!14816 = !DILocation(line: 656, column: 2, scope: !14780)
!14817 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2246, file: !2246, line: 401, type: !14818, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14820)
!14818 = !DISubroutineType(types: !14819)
!14819 = !{null, !2250, !14783}
!14820 = !{!14821, !14822}
!14821 = !DILocalVariable(name: "thread", arg: 1, scope: !14817, file: !2246, line: 401, type: !2250)
!14822 = !DILocalVariable(name: "delay", arg: 2, scope: !14817, file: !2246, line: 401, type: !14783)
!14823 = !DILocation(line: 0, scope: !14817)
!14824 = !DILocation(line: 404, column: 6, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14817, file: !2246, line: 404, column: 6)
!14826 = !DILocation(line: 404, column: 6, scope: !14817)
!14827 = !DILocation(line: 405, column: 3, scope: !14828)
!14828 = distinct !DILexicalBlock(scope: !14825, file: !2246, line: 404, column: 38)
!14829 = !DILocation(line: 406, column: 2, scope: !14828)
!14830 = !DILocation(line: 407, column: 3, scope: !14831)
!14831 = distinct !DILexicalBlock(scope: !14825, file: !2246, line: 406, column: 9)
!14832 = !DILocation(line: 413, column: 1, scope: !14817)
!14833 = distinct !DISubprogram(name: "k_thread_start", scope: !3406, file: !3406, line: 205, type: !14834, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14836)
!14834 = !DISubroutineType(types: !14835)
!14835 = !{null, !2249}
!14836 = !{!14837}
!14837 = !DILocalVariable(name: "thread", arg: 1, scope: !14833, file: !3406, line: 205, type: !2249)
!14838 = !DILocation(line: 0, scope: !14833)
!14839 = !DILocation(line: 214, column: 2, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14833, file: !3406, line: 214, column: 2)
!14841 = !{i64 2152249637}
!14842 = !DILocation(line: 215, column: 2, scope: !14833)
!14843 = !DILocation(line: 216, column: 1, scope: !14833)
!14844 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14741, file: !14741, line: 47, type: !14818, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14845)
!14845 = !{!14846, !14847}
!14846 = !DILocalVariable(name: "thread", arg: 1, scope: !14844, file: !14741, line: 47, type: !2250)
!14847 = !DILocalVariable(name: "ticks", arg: 2, scope: !14844, file: !14741, line: 47, type: !14783)
!14848 = !DILocation(line: 0, scope: !14844)
!14849 = !DILocation(line: 49, column: 30, scope: !14844)
!14850 = !DILocation(line: 49, column: 2, scope: !14844)
!14851 = !DILocation(line: 50, column: 1, scope: !14844)
!14852 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2246, file: !2246, line: 748, type: !266, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14853)
!14853 = !{!14854, !14871}
!14854 = !DILocalVariable(name: "thread_data", scope: !14855, file: !2246, line: 750, type: !14856)
!14855 = distinct !DILexicalBlock(scope: !14852, file: !2246, line: 750, column: 2)
!14856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14857, size: 32)
!14857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !14858)
!14858 = !{!14859, !14860, !14861, !14862, !14863, !14864, !14865, !14866, !14867, !14868, !14869, !14870}
!14859 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14857, file: !122, line: 621, baseType: !2250, size: 32)
!14860 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14857, file: !122, line: 622, baseType: !14623, size: 32, offset: 32)
!14861 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14857, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!14862 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14857, file: !122, line: 624, baseType: !254, size: 32, offset: 96)
!14863 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14857, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!14864 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14857, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!14865 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14857, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!14866 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14857, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!14867 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14857, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!14868 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14857, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!14869 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14857, file: !122, line: 631, baseType: !265, size: 32, offset: 320)
!14870 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14857, file: !122, line: 632, baseType: !269, size: 32, offset: 352)
!14871 = !DILocalVariable(name: "thread_data", scope: !14872, file: !2246, line: 781, type: !14856)
!14872 = distinct !DILexicalBlock(scope: !14852, file: !2246, line: 781, column: 2)
!14873 = !DILocation(line: 0, scope: !14855)
!14874 = !DILocation(line: 750, column: 2, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14876, file: !2246, line: 750, column: 2)
!14876 = distinct !DILexicalBlock(scope: !14877, file: !2246, line: 750, column: 2)
!14877 = distinct !DILexicalBlock(scope: !14855, file: !2246, line: 750, column: 2)
!14878 = !DILocation(line: 750, column: 2, scope: !14879)
!14879 = distinct !DILexicalBlock(scope: !14880, file: !2246, line: 750, column: 2)
!14880 = distinct !DILexicalBlock(scope: !14875, file: !2246, line: 750, column: 2)
!14881 = !DILocation(line: 750, column: 2, scope: !14876)
!14882 = !DILocation(line: 750, column: 2, scope: !14855)
!14883 = !DILocation(line: 780, column: 2, scope: !14852)
!14884 = !DILocation(line: 0, scope: !14872)
!14885 = !DILocation(line: 781, column: 2, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14887, file: !2246, line: 781, column: 2)
!14887 = distinct !DILexicalBlock(scope: !14888, file: !2246, line: 781, column: 2)
!14888 = distinct !DILexicalBlock(scope: !14872, file: !2246, line: 781, column: 2)
!14889 = !DILocation(line: 752, column: 17, scope: !14890)
!14890 = distinct !DILexicalBlock(scope: !14877, file: !2246, line: 750, column: 38)
!14891 = !DILocation(line: 753, column: 17, scope: !14890)
!14892 = !DILocation(line: 754, column: 17, scope: !14890)
!14893 = !DILocation(line: 755, column: 17, scope: !14890)
!14894 = !DILocation(line: 756, column: 17, scope: !14890)
!14895 = !DILocation(line: 757, column: 17, scope: !14890)
!14896 = !DILocation(line: 758, column: 17, scope: !14890)
!14897 = !DILocation(line: 759, column: 17, scope: !14890)
!14898 = !DILocation(line: 760, column: 17, scope: !14890)
!14899 = !DILocation(line: 751, column: 3, scope: !14890)
!14900 = !DILocation(line: 763, column: 16, scope: !14890)
!14901 = !DILocation(line: 763, column: 29, scope: !14890)
!14902 = !DILocation(line: 763, column: 39, scope: !14890)
!14903 = !DILocation(line: 750, column: 2, scope: !14877)
!14904 = !DILocation(line: 750, column: 2, scope: !14880)
!14905 = distinct !{!14905, !14882, !14906}
!14906 = !DILocation(line: 764, column: 2, scope: !14855)
!14907 = !DILocation(line: 781, column: 2, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14909, file: !2246, line: 781, column: 2)
!14909 = distinct !DILexicalBlock(scope: !14886, file: !2246, line: 781, column: 2)
!14910 = !DILocation(line: 781, column: 2, scope: !14887)
!14911 = !DILocation(line: 781, column: 2, scope: !14872)
!14912 = !DILocation(line: 787, column: 2, scope: !14852)
!14913 = !DILocation(line: 788, column: 1, scope: !14852)
!14914 = !DILocation(line: 782, column: 20, scope: !14915)
!14915 = distinct !DILexicalBlock(scope: !14916, file: !2246, line: 782, column: 7)
!14916 = distinct !DILexicalBlock(scope: !14888, file: !2246, line: 781, column: 38)
!14917 = !DILocation(line: 782, column: 31, scope: !14915)
!14918 = !DILocation(line: 782, column: 7, scope: !14916)
!14919 = !DILocation(line: 783, column: 37, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14915, file: !2246, line: 782, column: 51)
!14921 = !DILocation(line: 784, column: 10, scope: !14920)
!14922 = !DILocation(line: 783, column: 4, scope: !14920)
!14923 = !DILocation(line: 785, column: 3, scope: !14920)
!14924 = !DILocation(line: 781, column: 2, scope: !14888)
!14925 = !DILocation(line: 781, column: 2, scope: !14909)
!14926 = distinct !{!14926, !14911, !14927}
!14927 = !DILocation(line: 786, column: 2, scope: !14872)
!14928 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !14929, file: !14929, line: 403, type: !14930, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14932)
!14929 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14930 = !DISubroutineType(types: !14931)
!14931 = !{!114, !114}
!14932 = !{!14933}
!14933 = !DILocalVariable(name: "t", arg: 1, scope: !14928, file: !14929, line: 403, type: !114)
!14934 = !DILocation(line: 0, scope: !14928)
!14935 = !DILocalVariable(name: "t", arg: 1, scope: !14936, file: !14929, line: 102, type: !114)
!14936 = distinct !DISubprogram(name: "z_tmcvt", scope: !14929, file: !14929, line: 102, type: !14937, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14939)
!14937 = !DISubroutineType(types: !14938)
!14938 = !{!114, !114, !113, !113, !505, !505, !505, !505}
!14939 = !{!14935, !14940, !14941, !14942, !14943, !14944, !14945, !14946, !14947, !14948, !14949}
!14940 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14936, file: !14929, line: 102, type: !113)
!14941 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14936, file: !14929, line: 103, type: !113)
!14942 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14936, file: !14929, line: 103, type: !505)
!14943 = !DILocalVariable(name: "result32", arg: 5, scope: !14936, file: !14929, line: 104, type: !505)
!14944 = !DILocalVariable(name: "round_up", arg: 6, scope: !14936, file: !14929, line: 104, type: !505)
!14945 = !DILocalVariable(name: "round_off", arg: 7, scope: !14936, file: !14929, line: 105, type: !505)
!14946 = !DILocalVariable(name: "mul_ratio", scope: !14936, file: !14929, line: 107, type: !505)
!14947 = !DILocalVariable(name: "div_ratio", scope: !14936, file: !14929, line: 109, type: !505)
!14948 = !DILocalVariable(name: "off", scope: !14936, file: !14929, line: 116, type: !114)
!14949 = !DILocalVariable(name: "rdivisor", scope: !14950, file: !14929, line: 119, type: !113)
!14950 = distinct !DILexicalBlock(scope: !14951, file: !14929, line: 118, column: 18)
!14951 = distinct !DILexicalBlock(scope: !14936, file: !14929, line: 118, column: 6)
!14952 = !DILocation(line: 0, scope: !14936, inlinedAt: !14953)
!14953 = distinct !DILocation(line: 406, column: 9, scope: !14928)
!14954 = !DILocation(line: 145, column: 13, scope: !14955, inlinedAt: !14953)
!14955 = distinct !DILexicalBlock(scope: !14956, file: !14929, line: 144, column: 10)
!14956 = distinct !DILexicalBlock(scope: !14957, file: !14929, line: 142, column: 7)
!14957 = distinct !DILexicalBlock(scope: !14958, file: !14929, line: 141, column: 24)
!14958 = distinct !DILexicalBlock(scope: !14959, file: !14929, line: 141, column: 13)
!14959 = distinct !DILexicalBlock(scope: !14936, file: !14929, line: 134, column: 6)
!14960 = !DILocation(line: 406, column: 2, scope: !14928)
!14961 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2246, file: !2246, line: 817, type: !5048, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14962)
!14962 = !{!14963, !14964, !14965, !14966}
!14963 = !DILocalVariable(name: "entry", arg: 1, scope: !14961, file: !2246, line: 817, type: !254)
!14964 = !DILocalVariable(name: "p1", arg: 2, scope: !14961, file: !2246, line: 818, type: !104)
!14965 = !DILocalVariable(name: "p2", arg: 3, scope: !14961, file: !2246, line: 818, type: !104)
!14966 = !DILocalVariable(name: "p3", arg: 4, scope: !14961, file: !2246, line: 818, type: !104)
!14967 = !DILocation(line: 0, scope: !14961)
!14968 = !DILocation(line: 822, column: 2, scope: !14961)
!14969 = !DILocation(line: 822, column: 17, scope: !14961)
!14970 = !DILocation(line: 822, column: 30, scope: !14961)
!14971 = !DILocation(line: 823, column: 2, scope: !14961)
!14972 = !DILocation(line: 845, column: 2, scope: !14961)
!14973 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2246, file: !2246, line: 853, type: !14974, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14977)
!14974 = !DISubroutineType(types: !14975)
!14975 = !{!505, !14976}
!14976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 32)
!14977 = !{!14978, !14979}
!14978 = !DILocalVariable(name: "l", arg: 1, scope: !14973, file: !2246, line: 853, type: !14976)
!14979 = !DILocalVariable(name: "thread_cpu", scope: !14973, file: !2246, line: 855, type: !22)
!14980 = !DILocation(line: 0, scope: !14973)
!14981 = !DILocation(line: 855, column: 28, scope: !14973)
!14982 = !DILocation(line: 857, column: 17, scope: !14983)
!14983 = distinct !DILexicalBlock(scope: !14973, file: !2246, line: 857, column: 6)
!14984 = !DILocation(line: 857, column: 6, scope: !14973)
!14985 = !DILocation(line: 858, column: 19, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14987, file: !2246, line: 858, column: 7)
!14987 = distinct !DILexicalBlock(scope: !14983, file: !2246, line: 857, column: 24)
!14988 = !DILocation(line: 858, column: 42, scope: !14986)
!14989 = !DILocation(line: 858, column: 28, scope: !14986)
!14990 = !DILocation(line: 858, column: 25, scope: !14986)
!14991 = !DILocation(line: 858, column: 7, scope: !14987)
!14992 = !DILocation(line: 862, column: 2, scope: !14973)
!14993 = !DILocation(line: 863, column: 1, scope: !14973)
!14994 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2246, file: !2246, line: 865, type: !14974, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !14995)
!14995 = !{!14996}
!14996 = !DILocalVariable(name: "l", arg: 1, scope: !14994, file: !2246, line: 865, type: !14976)
!14997 = !DILocation(line: 0, scope: !14994)
!14998 = !DILocation(line: 867, column: 9, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14994, file: !2246, line: 867, column: 6)
!15000 = !DILocation(line: 867, column: 38, scope: !14999)
!15001 = !DILocation(line: 867, column: 24, scope: !14999)
!15002 = !DILocation(line: 867, column: 54, scope: !14999)
!15003 = !DILocation(line: 867, column: 43, scope: !14999)
!15004 = !DILocation(line: 867, column: 41, scope: !14999)
!15005 = !DILocation(line: 867, column: 20, scope: !14999)
!15006 = !DILocation(line: 867, column: 6, scope: !14994)
!15007 = !DILocation(line: 870, column: 16, scope: !14994)
!15008 = !DILocation(line: 871, column: 2, scope: !14994)
!15009 = !DILocation(line: 872, column: 1, scope: !14994)
!15010 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2246, file: !2246, line: 874, type: !15011, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !15013)
!15011 = !DISubroutineType(types: !15012)
!15012 = !{null, !14976}
!15013 = !{!15014}
!15014 = !DILocalVariable(name: "l", arg: 1, scope: !15010, file: !2246, line: 874, type: !14976)
!15015 = !DILocation(line: 0, scope: !15010)
!15016 = !DILocation(line: 876, column: 32, scope: !15010)
!15017 = !DILocation(line: 876, column: 18, scope: !15010)
!15018 = !DILocation(line: 876, column: 48, scope: !15010)
!15019 = !DILocation(line: 876, column: 37, scope: !15010)
!15020 = !DILocation(line: 876, column: 35, scope: !15010)
!15021 = !DILocation(line: 876, column: 5, scope: !15010)
!15022 = !DILocation(line: 876, column: 16, scope: !15010)
!15023 = !DILocation(line: 877, column: 1, scope: !15010)
!15024 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2246, file: !2246, line: 888, type: !15025, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !15027)
!15025 = !DISubroutineType(types: !15026)
!15026 = !{!105, !2250}
!15027 = !{!15028}
!15028 = !DILocalVariable(name: "thread", arg: 1, scope: !15024, file: !2246, line: 888, type: !2250)
!15029 = !DILocation(line: 0, scope: !15024)
!15030 = !DILocation(line: 893, column: 2, scope: !15024)
!15031 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2246, file: !2246, line: 897, type: !15032, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !15034)
!15032 = !DISubroutineType(types: !15033)
!15033 = !{!105, !2250, !32}
!15034 = !{!15035, !15036}
!15035 = !DILocalVariable(name: "thread", arg: 1, scope: !15031, file: !2246, line: 897, type: !2250)
!15036 = !DILocalVariable(name: "options", arg: 2, scope: !15031, file: !2246, line: 897, type: !32)
!15037 = !DILocation(line: 0, scope: !15031)
!15038 = !DILocation(line: 902, column: 2, scope: !15031)
!15039 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2246, file: !2246, line: 1072, type: !15040, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !15045)
!15040 = !DISubroutineType(types: !15041)
!15041 = !{!105, !2249, !15042}
!15042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15043, size: 32)
!15043 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !127, line: 234, baseType: !15044)
!15044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !127, line: 192, elements: !397)
!15045 = !{!15046, !15047}
!15046 = !DILocalVariable(name: "thread", arg: 1, scope: !15039, file: !2246, line: 1072, type: !2249)
!15047 = !DILocalVariable(name: "stats", arg: 2, scope: !15039, file: !2246, line: 1073, type: !15042)
!15048 = !DILocation(line: 0, scope: !15039)
!15049 = !DILocation(line: 1075, column: 14, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !15039, file: !2246, line: 1075, column: 6)
!15051 = !DILocation(line: 1075, column: 23, scope: !15050)
!15052 = !DILocation(line: 1086, column: 1, scope: !15039)
!15053 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2246, file: !2246, line: 1088, type: !15054, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !15056)
!15054 = !DISubroutineType(types: !15055)
!15055 = !{!105, !15042}
!15056 = !{!15057}
!15057 = !DILocalVariable(name: "stats", arg: 1, scope: !15053, file: !2246, line: 1088, type: !15042)
!15058 = !DILocation(line: 0, scope: !15053)
!15059 = !DILocation(line: 1094, column: 12, scope: !15060)
!15060 = distinct !DILexicalBlock(scope: !15053, file: !2246, line: 1094, column: 6)
!15061 = !DILocation(line: 1120, column: 1, scope: !15053)
!15062 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15063, file: !15063, line: 20, type: !266, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !397)
!15063 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15064 = !DILocation(line: 30, column: 2, scope: !15062)
!15065 = !DILocation(line: 31, column: 1, scope: !15062)
!15066 = distinct !DISubprogram(name: "idle", scope: !15063, file: !15063, line: 33, type: !256, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !15067)
!15067 = !{!15068, !15069, !15070}
!15068 = !DILocalVariable(name: "unused1", arg: 1, scope: !15066, file: !15063, line: 33, type: !104)
!15069 = !DILocalVariable(name: "unused2", arg: 2, scope: !15066, file: !15063, line: 33, type: !104)
!15070 = !DILocalVariable(name: "unused3", arg: 3, scope: !15066, file: !15063, line: 33, type: !104)
!15071 = !DILocation(line: 0, scope: !15066)
!15072 = !DILocation(line: 39, column: 2, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15074, file: !15063, line: 39, column: 2)
!15074 = distinct !DILexicalBlock(scope: !15066, file: !15063, line: 39, column: 2)
!15075 = !DILocation(line: 39, column: 2, scope: !15074)
!15076 = !DILocation(line: 39, column: 2, scope: !15077)
!15077 = distinct !DILexicalBlock(scope: !15073, file: !15063, line: 39, column: 2)
!15078 = !DILocation(line: 55, column: 2, scope: !15079, inlinedAt: !15083)
!15079 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7419, file: !7419, line: 42, type: !7420, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !15080)
!15080 = !{!15081, !15082}
!15081 = !DILocalVariable(name: "key", scope: !15079, file: !7419, line: 44, type: !32)
!15082 = !DILocalVariable(name: "tmp", scope: !15079, file: !7419, line: 53, type: !32)
!15083 = distinct !DILocation(line: 62, column: 10, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15066, file: !15063, line: 41, column: 15)
!15085 = !{i64 1652507}
!15086 = !DILocation(line: 0, scope: !15079, inlinedAt: !15083)
!15087 = !DILocation(line: 86, column: 3, scope: !15084)
!15088 = !DILocation(line: 41, column: 2, scope: !15066)
!15089 = distinct !{!15089, !15088, !15090}
!15090 = !DILocation(line: 105, column: 2, scope: !15066)
!15091 = distinct !DISubprogram(name: "k_cpu_idle", scope: !122, file: !122, line: 5627, type: !266, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !397)
!15092 = !DILocation(line: 5629, column: 2, scope: !15091)
!15093 = !DILocation(line: 5630, column: 1, scope: !15091)
!15094 = !DISubprogram(name: "arch_cpu_idle", scope: !247, file: !247, line: 167, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!15095 = distinct !DISubprogram(name: "k_msgq_init", scope: !15096, file: !15096, line: 35, type: !15097, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15112)
!15096 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15097 = !DISubroutineType(types: !15098)
!15098 = !{null, !15099, !102, !111, !113}
!15099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15100, size: 32)
!15100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !15101)
!15101 = !{!15102, !15103, !15104, !15105, !15106, !15107, !15108, !15109, !15110, !15111}
!15102 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15100, file: !122, line: 4206, baseType: !3173, size: 64)
!15103 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15100, file: !122, line: 4208, baseType: !3235, size: 32, offset: 64)
!15104 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15100, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!15105 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15100, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!15106 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !15100, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!15107 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !15100, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!15108 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !15100, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!15109 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !15100, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!15110 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15100, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!15111 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !15100, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!15112 = !{!15113, !15114, !15115, !15116}
!15113 = !DILocalVariable(name: "msgq", arg: 1, scope: !15095, file: !15096, line: 35, type: !15099)
!15114 = !DILocalVariable(name: "buffer", arg: 2, scope: !15095, file: !15096, line: 35, type: !102)
!15115 = !DILocalVariable(name: "msg_size", arg: 3, scope: !15095, file: !15096, line: 35, type: !111)
!15116 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !15095, file: !15096, line: 36, type: !113)
!15117 = !DILocation(line: 0, scope: !15095)
!15118 = !DILocation(line: 38, column: 8, scope: !15095)
!15119 = !DILocation(line: 38, column: 17, scope: !15095)
!15120 = !DILocation(line: 39, column: 8, scope: !15095)
!15121 = !DILocation(line: 39, column: 17, scope: !15095)
!15122 = !DILocation(line: 40, column: 8, scope: !15095)
!15123 = !DILocation(line: 40, column: 21, scope: !15095)
!15124 = !DILocation(line: 41, column: 40, scope: !15095)
!15125 = !DILocation(line: 41, column: 28, scope: !15095)
!15126 = !DILocation(line: 41, column: 8, scope: !15095)
!15127 = !DILocation(line: 41, column: 19, scope: !15095)
!15128 = !DILocation(line: 42, column: 8, scope: !15095)
!15129 = !DILocation(line: 42, column: 17, scope: !15095)
!15130 = !DILocation(line: 43, column: 8, scope: !15095)
!15131 = !DILocation(line: 43, column: 18, scope: !15095)
!15132 = !DILocation(line: 44, column: 8, scope: !15095)
!15133 = !DILocation(line: 44, column: 18, scope: !15095)
!15134 = !DILocation(line: 45, column: 8, scope: !15095)
!15135 = !DILocation(line: 45, column: 14, scope: !15095)
!15136 = !DILocation(line: 46, column: 22, scope: !15095)
!15137 = !DILocation(line: 46, column: 2, scope: !15095)
!15138 = !DILocation(line: 47, column: 15, scope: !15095)
!15139 = !DILocation(line: 55, column: 1, scope: !15095)
!15140 = distinct !DISubprogram(name: "z_waitq_init", scope: !14673, file: !14673, line: 47, type: !15141, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15143)
!15141 = !DISubroutineType(types: !15142)
!15142 = !{null, !3172}
!15143 = !{!15144}
!15144 = !DILocalVariable(name: "w", arg: 1, scope: !15140, file: !14673, line: 47, type: !3172)
!15145 = !DILocation(line: 0, scope: !15140)
!15146 = !DILocation(line: 49, column: 21, scope: !15140)
!15147 = !DILocation(line: 49, column: 2, scope: !15140)
!15148 = !DILocation(line: 50, column: 1, scope: !15140)
!15149 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !15150, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15153)
!15150 = !DISubroutineType(types: !15151)
!15151 = !{null, !15152}
!15152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 32)
!15153 = !{!15154}
!15154 = !DILocalVariable(name: "list", arg: 1, scope: !15149, file: !137, line: 197, type: !15152)
!15155 = !DILocation(line: 0, scope: !15149)
!15156 = !DILocation(line: 199, column: 8, scope: !15149)
!15157 = !DILocation(line: 199, column: 13, scope: !15149)
!15158 = !DILocation(line: 200, column: 8, scope: !15149)
!15159 = !DILocation(line: 200, column: 13, scope: !15149)
!15160 = !DILocation(line: 201, column: 1, scope: !15149)
!15161 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !15096, file: !15096, line: 57, type: !15162, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15164)
!15162 = !DISubroutineType(types: !15163)
!15163 = !{!105, !15099, !111, !113}
!15164 = !{!15165, !15166, !15167, !15168, !15169, !15170}
!15165 = !DILocalVariable(name: "msgq", arg: 1, scope: !15161, file: !15096, line: 57, type: !15099)
!15166 = !DILocalVariable(name: "msg_size", arg: 2, scope: !15161, file: !15096, line: 57, type: !111)
!15167 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !15161, file: !15096, line: 58, type: !113)
!15168 = !DILocalVariable(name: "buffer", scope: !15161, file: !15096, line: 60, type: !104)
!15169 = !DILocalVariable(name: "ret", scope: !15161, file: !15096, line: 61, type: !105)
!15170 = !DILocalVariable(name: "total_size", scope: !15161, file: !15096, line: 62, type: !111)
!15171 = !DILocation(line: 0, scope: !15161)
!15172 = !DILocation(line: 62, column: 2, scope: !15161)
!15173 = !DILocation(line: 66, column: 6, scope: !15174)
!15174 = distinct !DILexicalBlock(scope: !15161, file: !15096, line: 66, column: 6)
!15175 = !DILocation(line: 66, column: 6, scope: !15161)
!15176 = !DILocation(line: 69, column: 28, scope: !15177)
!15177 = distinct !DILexicalBlock(scope: !15174, file: !15096, line: 68, column: 9)
!15178 = !DILocation(line: 69, column: 12, scope: !15177)
!15179 = !DILocation(line: 70, column: 14, scope: !15180)
!15180 = distinct !DILexicalBlock(scope: !15177, file: !15096, line: 70, column: 7)
!15181 = !DILocation(line: 70, column: 7, scope: !15177)
!15182 = !DILocation(line: 71, column: 4, scope: !15183)
!15183 = distinct !DILexicalBlock(scope: !15180, file: !15096, line: 70, column: 23)
!15184 = !DILocation(line: 72, column: 10, scope: !15183)
!15185 = !DILocation(line: 72, column: 16, scope: !15183)
!15186 = !DILocation(line: 74, column: 3, scope: !15183)
!15187 = !DILocation(line: 0, scope: !15174)
!15188 = !DILocation(line: 82, column: 1, scope: !15161)
!15189 = !DILocation(line: 81, column: 2, scope: !15161)
!15190 = distinct !DISubprogram(name: "size_mul_overflow", scope: !15191, file: !15191, line: 105, type: !15192, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15194)
!15191 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15192 = !DISubroutineType(types: !15193)
!15193 = !{!505, !111, !111, !2654}
!15194 = !{!15195, !15196, !15197}
!15195 = !DILocalVariable(name: "a", arg: 1, scope: !15190, file: !15191, line: 105, type: !111)
!15196 = !DILocalVariable(name: "b", arg: 2, scope: !15190, file: !15191, line: 105, type: !111)
!15197 = !DILocalVariable(name: "result", arg: 3, scope: !15190, file: !15191, line: 105, type: !2654)
!15198 = !DILocation(line: 0, scope: !15190)
!15199 = !DILocation(line: 107, column: 9, scope: !15190)
!15200 = !DILocation(line: 107, column: 2, scope: !15190)
!15201 = distinct !DISubprogram(name: "z_thread_malloc", scope: !15202, file: !15202, line: 102, type: !15203, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15204)
!15202 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15203 = !DISubroutineType(types: !3116)
!15204 = !{!15205}
!15205 = !DILocalVariable(name: "size", arg: 1, scope: !15201, file: !15202, line: 102, type: !111)
!15206 = !DILocation(line: 0, scope: !15201)
!15207 = !DILocation(line: 104, column: 9, scope: !15201)
!15208 = !DILocation(line: 104, column: 2, scope: !15201)
!15209 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !15202, file: !15202, line: 87, type: !15210, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!15210 = !DISubroutineType(types: !15211)
!15211 = !{!104, !111, !111}
!15212 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !15096, file: !15096, line: 95, type: !15213, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15215)
!15213 = !DISubroutineType(types: !15214)
!15214 = !{!105, !15099}
!15215 = !{!15216}
!15216 = !DILocalVariable(name: "msgq", arg: 1, scope: !15212, file: !15096, line: 95, type: !15099)
!15217 = !DILocation(line: 0, scope: !15212)
!15218 = !DILocation(line: 99, column: 2, scope: !15219)
!15219 = distinct !DILexicalBlock(scope: !15212, file: !15096, line: 99, column: 2)
!15220 = !DILocation(line: 99, column: 2, scope: !15212)
!15221 = !DILocation(line: 105, column: 13, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15212, file: !15096, line: 105, column: 6)
!15223 = !DILocation(line: 105, column: 19, scope: !15222)
!15224 = !DILocation(line: 105, column: 40, scope: !15222)
!15225 = !DILocation(line: 105, column: 6, scope: !15212)
!15226 = !DILocation(line: 106, column: 16, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15222, file: !15096, line: 105, column: 47)
!15228 = !DILocation(line: 106, column: 3, scope: !15227)
!15229 = !DILocation(line: 107, column: 15, scope: !15227)
!15230 = !DILocation(line: 108, column: 2, scope: !15227)
!15231 = !DILocation(line: 113, column: 1, scope: !15212)
!15232 = distinct !DISubprogram(name: "z_waitq_head", scope: !14673, file: !14673, line: 52, type: !15233, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15235)
!15233 = !DISubroutineType(types: !15234)
!15234 = !{!3155, !3172}
!15235 = !{!15236}
!15236 = !DILocalVariable(name: "w", arg: 1, scope: !15232, file: !14673, line: 52, type: !3172)
!15237 = !DILocation(line: 0, scope: !15232)
!15238 = !DILocation(line: 54, column: 52, scope: !15232)
!15239 = !DILocation(line: 54, column: 28, scope: !15232)
!15240 = !DILocation(line: 54, column: 9, scope: !15232)
!15241 = !DILocation(line: 54, column: 2, scope: !15232)
!15242 = !DISubprogram(name: "k_free", scope: !122, file: !122, line: 5272, type: !7691, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!15243 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !15244, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15246)
!15244 = !DISubroutineType(types: !15245)
!15245 = !{!3140, !15152}
!15246 = !{!15247}
!15247 = !DILocalVariable(name: "list", arg: 1, scope: !15243, file: !137, line: 294, type: !15152)
!15248 = !DILocation(line: 0, scope: !15243)
!15249 = !DILocation(line: 296, column: 9, scope: !15243)
!15250 = !DILocation(line: 296, column: 49, scope: !15243)
!15251 = !DILocation(line: 296, column: 2, scope: !15243)
!15252 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !15253, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15255)
!15253 = !DISubroutineType(types: !15254)
!15254 = !{!505, !15152}
!15255 = !{!15256}
!15256 = !DILocalVariable(name: "list", arg: 1, scope: !15252, file: !137, line: 266, type: !15152)
!15257 = !DILocation(line: 0, scope: !15252)
!15258 = !DILocation(line: 268, column: 15, scope: !15252)
!15259 = !DILocation(line: 268, column: 20, scope: !15252)
!15260 = !DILocation(line: 268, column: 2, scope: !15252)
!15261 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !15096, file: !15096, line: 116, type: !15262, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15268)
!15262 = !DISubroutineType(types: !15263)
!15263 = !{!105, !15099, !13, !15264}
!15264 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !15265)
!15265 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !15266)
!15266 = !{!15267}
!15267 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15265, file: !108, line: 66, baseType: !107, size: 64)
!15268 = !{!15269, !15270, !15271, !15272, !15273, !15278}
!15269 = !DILocalVariable(name: "msgq", arg: 1, scope: !15261, file: !15096, line: 116, type: !15099)
!15270 = !DILocalVariable(name: "data", arg: 2, scope: !15261, file: !15096, line: 116, type: !13)
!15271 = !DILocalVariable(name: "timeout", arg: 3, scope: !15261, file: !15096, line: 116, type: !15264)
!15272 = !DILocalVariable(name: "pending_thread", scope: !15261, file: !15096, line: 120, type: !3155)
!15273 = !DILocalVariable(name: "key", scope: !15261, file: !15096, line: 121, type: !15274)
!15274 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15275)
!15275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15276)
!15276 = !{!15277}
!15277 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15275, file: !236, line: 33, baseType: !105, size: 32)
!15278 = !DILocalVariable(name: "result", scope: !15261, file: !15096, line: 122, type: !105)
!15279 = !DILocation(line: 0, scope: !15261)
!15280 = !DILocation(line: 1031, column: 3, scope: !15281, inlinedAt: !15284)
!15281 = distinct !DISubprogram(name: "__get_IPSR", scope: !7754, file: !7754, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15282)
!15282 = !{!15283}
!15283 = !DILocalVariable(name: "result", scope: !15281, file: !7754, line: 1029, type: !113)
!15284 = distinct !DILocation(line: 48, column: 10, scope: !15285, inlinedAt: !15286)
!15285 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8760, file: !8760, line: 46, type: !8761, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !397)
!15286 = distinct !DILocation(line: 118, column: 2, scope: !15287)
!15287 = distinct !DILexicalBlock(scope: !15288, file: !15096, line: 118, column: 2)
!15288 = distinct !DILexicalBlock(scope: !15261, file: !15096, line: 118, column: 2)
!15289 = !{i64 2452579}
!15290 = !DILocation(line: 0, scope: !15281, inlinedAt: !15284)
!15291 = !DILocation(line: 48, column: 9, scope: !15285, inlinedAt: !15286)
!15292 = !DILocation(line: 118, column: 2, scope: !15287)
!15293 = !DILocation(line: 118, column: 2, scope: !15294)
!15294 = distinct !DILexicalBlock(scope: !15287, file: !15096, line: 118, column: 2)
!15295 = !DILocation(line: 124, column: 27, scope: !15261)
!15296 = !DILocalVariable(name: "l", arg: 1, scope: !15297, file: !236, line: 136, type: !15300)
!15297 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15298, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15301)
!15298 = !DISubroutineType(types: !15299)
!15299 = !{!15274, !15300}
!15300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 32)
!15301 = !{!15296, !15302}
!15302 = !DILocalVariable(name: "k", scope: !15297, file: !236, line: 139, type: !15274)
!15303 = !DILocation(line: 0, scope: !15297, inlinedAt: !15304)
!15304 = distinct !DILocation(line: 124, column: 8, scope: !15261)
!15305 = !DILocation(line: 55, column: 2, scope: !15306, inlinedAt: !15310)
!15306 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7419, file: !7419, line: 42, type: !7420, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15307)
!15307 = !{!15308, !15309}
!15308 = !DILocalVariable(name: "key", scope: !15306, file: !7419, line: 44, type: !32)
!15309 = !DILocalVariable(name: "tmp", scope: !15306, file: !7419, line: 53, type: !32)
!15310 = distinct !DILocation(line: 145, column: 10, scope: !15297, inlinedAt: !15304)
!15311 = !{i64 1658644}
!15312 = !DILocation(line: 0, scope: !15306, inlinedAt: !15310)
!15313 = !DILocation(line: 148, column: 2, scope: !15314, inlinedAt: !15304)
!15314 = distinct !DILexicalBlock(scope: !15315, file: !236, line: 148, column: 2)
!15315 = distinct !DILexicalBlock(scope: !15297, file: !236, line: 148, column: 2)
!15316 = !DILocation(line: 148, column: 2, scope: !15315, inlinedAt: !15304)
!15317 = !DILocation(line: 148, column: 2, scope: !15318, inlinedAt: !15304)
!15318 = distinct !DILexicalBlock(scope: !15314, file: !236, line: 148, column: 2)
!15319 = !DILocation(line: 160, column: 2, scope: !15297, inlinedAt: !15304)
!15320 = !DILocation(line: 128, column: 12, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15261, file: !15096, line: 128, column: 6)
!15322 = !DILocation(line: 128, column: 30, scope: !15321)
!15323 = !DILocation(line: 128, column: 22, scope: !15321)
!15324 = !DILocation(line: 128, column: 6, scope: !15261)
!15325 = !DILocation(line: 130, column: 49, scope: !15326)
!15326 = distinct !DILexicalBlock(scope: !15321, file: !15096, line: 128, column: 40)
!15327 = !DILocation(line: 130, column: 20, scope: !15326)
!15328 = !DILocation(line: 131, column: 22, scope: !15329)
!15329 = distinct !DILexicalBlock(scope: !15326, file: !15096, line: 131, column: 7)
!15330 = !DILocation(line: 131, column: 7, scope: !15326)
!15331 = !DILocation(line: 135, column: 38, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15329, file: !15096, line: 131, column: 31)
!15333 = !DILocation(line: 136, column: 17, scope: !15332)
!15334 = !DILocation(line: 135, column: 10, scope: !15332)
!15335 = !DILocalVariable(name: "thread", arg: 1, scope: !15336, file: !14353, line: 65, type: !3155)
!15336 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14353, file: !14353, line: 65, type: !15337, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15339)
!15337 = !DISubroutineType(types: !15338)
!15338 = !{null, !3155, !32}
!15339 = !{!15335, !15340}
!15340 = !DILocalVariable(name: "value", arg: 2, scope: !15336, file: !14353, line: 65, type: !32)
!15341 = !DILocation(line: 0, scope: !15336, inlinedAt: !15342)
!15342 = distinct !DILocation(line: 138, column: 4, scope: !15332)
!15343 = !DILocation(line: 67, column: 15, scope: !15336, inlinedAt: !15342)
!15344 = !DILocation(line: 67, column: 33, scope: !15336, inlinedAt: !15342)
!15345 = !DILocation(line: 139, column: 4, scope: !15332)
!15346 = !DILocation(line: 140, column: 4, scope: !15332)
!15347 = !DILocation(line: 141, column: 4, scope: !15332)
!15348 = !DILocation(line: 144, column: 23, scope: !15349)
!15349 = distinct !DILexicalBlock(scope: !15329, file: !15096, line: 142, column: 10)
!15350 = !DILocation(line: 144, column: 46, scope: !15349)
!15351 = !DILocation(line: 144, column: 10, scope: !15349)
!15352 = !DILocation(line: 145, column: 29, scope: !15349)
!15353 = !DILocation(line: 145, column: 20, scope: !15349)
!15354 = !DILocation(line: 146, column: 33, scope: !15355)
!15355 = distinct !DILexicalBlock(scope: !15349, file: !15096, line: 146, column: 8)
!15356 = !DILocation(line: 146, column: 24, scope: !15355)
!15357 = !DILocation(line: 146, column: 8, scope: !15349)
!15358 = !DILocation(line: 147, column: 29, scope: !15359)
!15359 = distinct !DILexicalBlock(scope: !15355, file: !15096, line: 146, column: 45)
!15360 = !DILocation(line: 147, column: 21, scope: !15359)
!15361 = !DILocation(line: 148, column: 4, scope: !15359)
!15362 = !DILocation(line: 149, column: 19, scope: !15349)
!15363 = !DILocation(line: 155, column: 2, scope: !15326)
!15364 = !DILocation(line: 155, column: 13, scope: !15321)
!15365 = !DILocation(line: 162, column: 3, scope: !15366)
!15366 = distinct !DILexicalBlock(scope: !15367, file: !15096, line: 158, column: 9)
!15367 = distinct !DILexicalBlock(scope: !15321, file: !15096, line: 155, column: 13)
!15368 = !DILocation(line: 162, column: 18, scope: !15366)
!15369 = !DILocation(line: 162, column: 28, scope: !15366)
!15370 = !DILocation(line: 164, column: 49, scope: !15366)
!15371 = !DILocation(line: 164, column: 12, scope: !15366)
!15372 = !DILocation(line: 166, column: 3, scope: !15366)
!15373 = !DILocation(line: 0, scope: !15321)
!15374 = !DILocalVariable(name: "key", arg: 2, scope: !15375, file: !236, line: 190, type: !15274)
!15375 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15376, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15378)
!15376 = !DISubroutineType(types: !15377)
!15377 = !{null, !15300, !15274}
!15378 = !{!15379, !15374}
!15379 = !DILocalVariable(name: "l", arg: 1, scope: !15375, file: !236, line: 189, type: !15300)
!15380 = !DILocation(line: 0, scope: !15375, inlinedAt: !15381)
!15381 = distinct !DILocation(line: 171, column: 2, scope: !15261)
!15382 = !DILocation(line: 194, column: 2, scope: !15383, inlinedAt: !15381)
!15383 = distinct !DILexicalBlock(scope: !15384, file: !236, line: 194, column: 2)
!15384 = distinct !DILexicalBlock(scope: !15375, file: !236, line: 194, column: 2)
!15385 = !DILocation(line: 194, column: 2, scope: !15384, inlinedAt: !15381)
!15386 = !DILocation(line: 194, column: 2, scope: !15387, inlinedAt: !15381)
!15387 = distinct !DILexicalBlock(scope: !15383, file: !236, line: 194, column: 2)
!15388 = !DILocalVariable(name: "key", arg: 1, scope: !15389, file: !7419, line: 84, type: !32)
!15389 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7419, file: !7419, line: 84, type: !7430, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15390)
!15390 = !{!15388}
!15391 = !DILocation(line: 0, scope: !15389, inlinedAt: !15392)
!15392 = distinct !DILocation(line: 215, column: 2, scope: !15375, inlinedAt: !15381)
!15393 = !DILocation(line: 95, column: 2, scope: !15389, inlinedAt: !15392)
!15394 = !{i64 1659461}
!15395 = !DILocation(line: 173, column: 2, scope: !15261)
!15396 = !DILocation(line: 174, column: 1, scope: !15261)
!15397 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !15096, file: !15096, line: 188, type: !15398, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15406)
!15398 = !DISubroutineType(types: !15399)
!15399 = !{null, !15099, !15400}
!15400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15401, size: 32)
!15401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !122, line: 4259, size: 96, elements: !15402)
!15402 = !{!15403, !15404, !15405}
!15403 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15401, file: !122, line: 4261, baseType: !111, size: 32)
!15404 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15401, file: !122, line: 4263, baseType: !113, size: 32, offset: 32)
!15405 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15401, file: !122, line: 4265, baseType: !113, size: 32, offset: 64)
!15406 = !{!15407, !15408}
!15407 = !DILocalVariable(name: "msgq", arg: 1, scope: !15397, file: !15096, line: 188, type: !15099)
!15408 = !DILocalVariable(name: "attrs", arg: 2, scope: !15397, file: !15096, line: 188, type: !15400)
!15409 = !DILocation(line: 0, scope: !15397)
!15410 = !DILocation(line: 190, column: 26, scope: !15397)
!15411 = !DILocation(line: 190, column: 9, scope: !15397)
!15412 = !DILocation(line: 190, column: 18, scope: !15397)
!15413 = !DILocation(line: 191, column: 26, scope: !15397)
!15414 = !DILocation(line: 191, column: 9, scope: !15397)
!15415 = !DILocation(line: 191, column: 18, scope: !15397)
!15416 = !DILocation(line: 192, column: 27, scope: !15397)
!15417 = !DILocation(line: 192, column: 9, scope: !15397)
!15418 = !DILocation(line: 192, column: 19, scope: !15397)
!15419 = !DILocation(line: 193, column: 1, scope: !15397)
!15420 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !15096, file: !15096, line: 206, type: !15421, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15423)
!15421 = !DISubroutineType(types: !15422)
!15422 = !{!105, !15099, !104, !15264}
!15423 = !{!15424, !15425, !15426, !15427, !15428, !15429}
!15424 = !DILocalVariable(name: "msgq", arg: 1, scope: !15420, file: !15096, line: 206, type: !15099)
!15425 = !DILocalVariable(name: "data", arg: 2, scope: !15420, file: !15096, line: 206, type: !104)
!15426 = !DILocalVariable(name: "timeout", arg: 3, scope: !15420, file: !15096, line: 206, type: !15264)
!15427 = !DILocalVariable(name: "key", scope: !15420, file: !15096, line: 210, type: !15274)
!15428 = !DILocalVariable(name: "pending_thread", scope: !15420, file: !15096, line: 211, type: !3155)
!15429 = !DILocalVariable(name: "result", scope: !15420, file: !15096, line: 212, type: !105)
!15430 = !DILocation(line: 0, scope: !15420)
!15431 = !DILocation(line: 1031, column: 3, scope: !15281, inlinedAt: !15432)
!15432 = distinct !DILocation(line: 48, column: 10, scope: !15285, inlinedAt: !15433)
!15433 = distinct !DILocation(line: 208, column: 2, scope: !15434)
!15434 = distinct !DILexicalBlock(scope: !15435, file: !15096, line: 208, column: 2)
!15435 = distinct !DILexicalBlock(scope: !15420, file: !15096, line: 208, column: 2)
!15436 = !DILocation(line: 0, scope: !15281, inlinedAt: !15432)
!15437 = !DILocation(line: 48, column: 9, scope: !15285, inlinedAt: !15433)
!15438 = !DILocation(line: 208, column: 2, scope: !15434)
!15439 = !DILocation(line: 208, column: 2, scope: !15440)
!15440 = distinct !DILexicalBlock(scope: !15434, file: !15096, line: 208, column: 2)
!15441 = !DILocation(line: 214, column: 27, scope: !15420)
!15442 = !DILocation(line: 0, scope: !15297, inlinedAt: !15443)
!15443 = distinct !DILocation(line: 214, column: 8, scope: !15420)
!15444 = !DILocation(line: 55, column: 2, scope: !15306, inlinedAt: !15445)
!15445 = distinct !DILocation(line: 145, column: 10, scope: !15297, inlinedAt: !15443)
!15446 = !DILocation(line: 0, scope: !15306, inlinedAt: !15445)
!15447 = !DILocation(line: 148, column: 2, scope: !15314, inlinedAt: !15443)
!15448 = !DILocation(line: 148, column: 2, scope: !15315, inlinedAt: !15443)
!15449 = !DILocation(line: 148, column: 2, scope: !15318, inlinedAt: !15443)
!15450 = !DILocation(line: 160, column: 2, scope: !15297, inlinedAt: !15443)
!15451 = !DILocation(line: 218, column: 12, scope: !15452)
!15452 = distinct !DILexicalBlock(scope: !15420, file: !15096, line: 218, column: 6)
!15453 = !DILocation(line: 218, column: 22, scope: !15452)
!15454 = !DILocation(line: 218, column: 6, scope: !15420)
!15455 = !DILocation(line: 220, column: 28, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15452, file: !15096, line: 218, column: 28)
!15457 = !DILocation(line: 220, column: 44, scope: !15456)
!15458 = !DILocation(line: 220, column: 9, scope: !15456)
!15459 = !DILocation(line: 221, column: 27, scope: !15456)
!15460 = !DILocation(line: 221, column: 18, scope: !15456)
!15461 = !DILocation(line: 222, column: 31, scope: !15462)
!15462 = distinct !DILexicalBlock(scope: !15456, file: !15096, line: 222, column: 7)
!15463 = !DILocation(line: 222, column: 22, scope: !15462)
!15464 = !DILocation(line: 222, column: 7, scope: !15456)
!15465 = !DILocation(line: 223, column: 27, scope: !15466)
!15466 = distinct !DILexicalBlock(scope: !15462, file: !15096, line: 222, column: 43)
!15467 = !DILocation(line: 223, column: 19, scope: !15466)
!15468 = !DILocation(line: 224, column: 3, scope: !15466)
!15469 = !DILocation(line: 225, column: 18, scope: !15456)
!15470 = !DILocation(line: 228, column: 49, scope: !15456)
!15471 = !DILocation(line: 228, column: 20, scope: !15456)
!15472 = !DILocation(line: 229, column: 22, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15456, file: !15096, line: 229, column: 7)
!15474 = !DILocation(line: 229, column: 7, scope: !15456)
!15475 = !DILocation(line: 233, column: 23, scope: !15476)
!15476 = distinct !DILexicalBlock(scope: !15473, file: !15096, line: 229, column: 31)
!15477 = !DILocation(line: 233, column: 55, scope: !15476)
!15478 = !DILocation(line: 234, column: 17, scope: !15476)
!15479 = !DILocation(line: 233, column: 10, scope: !15476)
!15480 = !DILocation(line: 235, column: 29, scope: !15476)
!15481 = !DILocation(line: 235, column: 20, scope: !15476)
!15482 = !DILocation(line: 236, column: 33, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15476, file: !15096, line: 236, column: 8)
!15484 = !DILocation(line: 236, column: 24, scope: !15483)
!15485 = !DILocation(line: 236, column: 8, scope: !15476)
!15486 = !DILocation(line: 237, column: 29, scope: !15487)
!15487 = distinct !DILexicalBlock(scope: !15483, file: !15096, line: 236, column: 45)
!15488 = !DILocation(line: 237, column: 21, scope: !15487)
!15489 = !DILocation(line: 238, column: 4, scope: !15487)
!15490 = !DILocation(line: 239, column: 19, scope: !15476)
!15491 = !DILocation(line: 0, scope: !15336, inlinedAt: !15492)
!15492 = distinct !DILocation(line: 242, column: 4, scope: !15476)
!15493 = !DILocation(line: 67, column: 15, scope: !15336, inlinedAt: !15492)
!15494 = !DILocation(line: 67, column: 33, scope: !15336, inlinedAt: !15492)
!15495 = !DILocation(line: 243, column: 4, scope: !15476)
!15496 = !DILocation(line: 244, column: 4, scope: !15476)
!15497 = !DILocation(line: 248, column: 4, scope: !15476)
!15498 = !DILocation(line: 251, column: 13, scope: !15452)
!15499 = !DILocation(line: 258, column: 3, scope: !15500)
!15500 = distinct !DILexicalBlock(scope: !15501, file: !15096, line: 254, column: 9)
!15501 = distinct !DILexicalBlock(scope: !15452, file: !15096, line: 251, column: 13)
!15502 = !DILocation(line: 258, column: 18, scope: !15500)
!15503 = !DILocation(line: 258, column: 28, scope: !15500)
!15504 = !DILocation(line: 260, column: 49, scope: !15500)
!15505 = !DILocation(line: 260, column: 12, scope: !15500)
!15506 = !DILocation(line: 262, column: 3, scope: !15500)
!15507 = !DILocation(line: 0, scope: !15452)
!15508 = !DILocation(line: 0, scope: !15375, inlinedAt: !15509)
!15509 = distinct !DILocation(line: 267, column: 2, scope: !15420)
!15510 = !DILocation(line: 194, column: 2, scope: !15383, inlinedAt: !15509)
!15511 = !DILocation(line: 194, column: 2, scope: !15384, inlinedAt: !15509)
!15512 = !DILocation(line: 194, column: 2, scope: !15387, inlinedAt: !15509)
!15513 = !DILocation(line: 0, scope: !15389, inlinedAt: !15514)
!15514 = distinct !DILocation(line: 215, column: 2, scope: !15375, inlinedAt: !15509)
!15515 = !DILocation(line: 95, column: 2, scope: !15389, inlinedAt: !15514)
!15516 = !DILocation(line: 269, column: 2, scope: !15420)
!15517 = !DILocation(line: 270, column: 1, scope: !15420)
!15518 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !15096, file: !15096, line: 284, type: !15519, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15521)
!15519 = !DISubroutineType(types: !15520)
!15520 = !{!105, !15099, !104}
!15521 = !{!15522, !15523, !15524, !15525}
!15522 = !DILocalVariable(name: "msgq", arg: 1, scope: !15518, file: !15096, line: 284, type: !15099)
!15523 = !DILocalVariable(name: "data", arg: 2, scope: !15518, file: !15096, line: 284, type: !104)
!15524 = !DILocalVariable(name: "key", scope: !15518, file: !15096, line: 286, type: !15274)
!15525 = !DILocalVariable(name: "result", scope: !15518, file: !15096, line: 287, type: !105)
!15526 = !DILocation(line: 0, scope: !15518)
!15527 = !DILocation(line: 289, column: 27, scope: !15518)
!15528 = !DILocation(line: 0, scope: !15297, inlinedAt: !15529)
!15529 = distinct !DILocation(line: 289, column: 8, scope: !15518)
!15530 = !DILocation(line: 55, column: 2, scope: !15306, inlinedAt: !15531)
!15531 = distinct !DILocation(line: 145, column: 10, scope: !15297, inlinedAt: !15529)
!15532 = !DILocation(line: 0, scope: !15306, inlinedAt: !15531)
!15533 = !DILocation(line: 148, column: 2, scope: !15314, inlinedAt: !15529)
!15534 = !DILocation(line: 148, column: 2, scope: !15315, inlinedAt: !15529)
!15535 = !DILocation(line: 148, column: 2, scope: !15318, inlinedAt: !15529)
!15536 = !DILocation(line: 160, column: 2, scope: !15297, inlinedAt: !15529)
!15537 = !DILocation(line: 291, column: 12, scope: !15538)
!15538 = distinct !DILexicalBlock(scope: !15518, file: !15096, line: 291, column: 6)
!15539 = !DILocation(line: 291, column: 22, scope: !15538)
!15540 = !DILocation(line: 291, column: 6, scope: !15518)
!15541 = !DILocation(line: 293, column: 28, scope: !15542)
!15542 = distinct !DILexicalBlock(scope: !15538, file: !15096, line: 291, column: 28)
!15543 = !DILocation(line: 293, column: 44, scope: !15542)
!15544 = !DILocation(line: 293, column: 9, scope: !15542)
!15545 = !DILocation(line: 295, column: 2, scope: !15542)
!15546 = !DILocation(line: 0, scope: !15538)
!15547 = !DILocation(line: 0, scope: !15375, inlinedAt: !15548)
!15548 = distinct !DILocation(line: 302, column: 2, scope: !15518)
!15549 = !DILocation(line: 194, column: 2, scope: !15383, inlinedAt: !15548)
!15550 = !DILocation(line: 194, column: 2, scope: !15384, inlinedAt: !15548)
!15551 = !DILocation(line: 194, column: 2, scope: !15387, inlinedAt: !15548)
!15552 = !DILocation(line: 0, scope: !15389, inlinedAt: !15553)
!15553 = distinct !DILocation(line: 215, column: 2, scope: !15375, inlinedAt: !15548)
!15554 = !DILocation(line: 95, column: 2, scope: !15389, inlinedAt: !15553)
!15555 = !DILocation(line: 304, column: 2, scope: !15518)
!15556 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !15096, file: !15096, line: 318, type: !15557, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !15559)
!15557 = !DISubroutineType(types: !15558)
!15558 = !{null, !15099}
!15559 = !{!15560, !15561, !15562}
!15560 = !DILocalVariable(name: "msgq", arg: 1, scope: !15556, file: !15096, line: 318, type: !15099)
!15561 = !DILocalVariable(name: "key", scope: !15556, file: !15096, line: 320, type: !15274)
!15562 = !DILocalVariable(name: "pending_thread", scope: !15556, file: !15096, line: 321, type: !3155)
!15563 = !DILocation(line: 0, scope: !15556)
!15564 = !DILocation(line: 323, column: 27, scope: !15556)
!15565 = !DILocation(line: 0, scope: !15297, inlinedAt: !15566)
!15566 = distinct !DILocation(line: 323, column: 8, scope: !15556)
!15567 = !DILocation(line: 55, column: 2, scope: !15306, inlinedAt: !15568)
!15568 = distinct !DILocation(line: 145, column: 10, scope: !15297, inlinedAt: !15566)
!15569 = !DILocation(line: 0, scope: !15306, inlinedAt: !15568)
!15570 = !DILocation(line: 148, column: 2, scope: !15314, inlinedAt: !15566)
!15571 = !DILocation(line: 148, column: 2, scope: !15315, inlinedAt: !15566)
!15572 = !DILocation(line: 148, column: 2, scope: !15318, inlinedAt: !15566)
!15573 = !DILocation(line: 160, column: 2, scope: !15297, inlinedAt: !15566)
!15574 = !DILocation(line: 328, column: 27, scope: !15556)
!15575 = !DILocation(line: 328, column: 65, scope: !15556)
!15576 = !DILocation(line: 328, column: 2, scope: !15556)
!15577 = !DILocation(line: 0, scope: !15336, inlinedAt: !15578)
!15578 = distinct !DILocation(line: 329, column: 3, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15556, file: !15096, line: 328, column: 74)
!15580 = !DILocation(line: 67, column: 15, scope: !15336, inlinedAt: !15578)
!15581 = !DILocation(line: 67, column: 33, scope: !15336, inlinedAt: !15578)
!15582 = !DILocation(line: 330, column: 3, scope: !15579)
!15583 = distinct !{!15583, !15576, !15584}
!15584 = !DILocation(line: 331, column: 2, scope: !15556)
!15585 = !DILocation(line: 333, column: 8, scope: !15556)
!15586 = !DILocation(line: 333, column: 18, scope: !15556)
!15587 = !DILocation(line: 334, column: 25, scope: !15556)
!15588 = !DILocation(line: 334, column: 8, scope: !15556)
!15589 = !DILocation(line: 334, column: 17, scope: !15556)
!15590 = !DILocation(line: 336, column: 2, scope: !15556)
!15591 = !DILocation(line: 337, column: 1, scope: !15556)
!15592 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2391, file: !2391, line: 41, type: !15593, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !15606)
!15593 = !DISubroutineType(types: !15594)
!15594 = !{!105, !15595, !32, !32}
!15595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15596, size: 32)
!15596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !15597)
!15597 = !{!15598, !15604, !15605}
!15598 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15596, file: !122, line: 2910, baseType: !15599, size: 64)
!15599 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !15600)
!15600 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !15601)
!15601 = !{!15602}
!15602 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !15600, file: !163, line: 232, baseType: !15603, size: 64)
!15603 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2377)
!15604 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !15596, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!15605 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !15596, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!15606 = !{!15607, !15608, !15609}
!15607 = !DILocalVariable(name: "sem", arg: 1, scope: !15592, file: !2391, line: 41, type: !15595)
!15608 = !DILocalVariable(name: "initial_count", arg: 2, scope: !15592, file: !2391, line: 41, type: !32)
!15609 = !DILocalVariable(name: "limit", arg: 3, scope: !15592, file: !2391, line: 42, type: !32)
!15610 = !DILocation(line: 0, scope: !15592)
!15611 = !DILocation(line: 47, column: 2, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !15592, file: !2391, line: 47, column: 2)
!15613 = !DILocation(line: 53, column: 7, scope: !15592)
!15614 = !DILocation(line: 53, column: 13, scope: !15592)
!15615 = !DILocation(line: 54, column: 7, scope: !15592)
!15616 = !DILocation(line: 54, column: 13, scope: !15592)
!15617 = !DILocation(line: 58, column: 21, scope: !15592)
!15618 = !DILocation(line: 58, column: 2, scope: !15592)
!15619 = !DILocation(line: 64, column: 2, scope: !15592)
!15620 = !DILocation(line: 65, column: 1, scope: !15592)
!15621 = distinct !DISubprogram(name: "z_waitq_init", scope: !14673, file: !14673, line: 47, type: !15622, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !15625)
!15622 = !DISubroutineType(types: !15623)
!15623 = !{null, !15624}
!15624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15599, size: 32)
!15625 = !{!15626}
!15626 = !DILocalVariable(name: "w", arg: 1, scope: !15621, file: !14673, line: 47, type: !15624)
!15627 = !DILocation(line: 0, scope: !15621)
!15628 = !DILocation(line: 49, column: 21, scope: !15621)
!15629 = !DILocation(line: 49, column: 2, scope: !15621)
!15630 = !DILocation(line: 50, column: 1, scope: !15621)
!15631 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !15632, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !15635)
!15632 = !DISubroutineType(types: !15633)
!15633 = !{null, !15634}
!15634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15603, size: 32)
!15635 = !{!15636}
!15636 = !DILocalVariable(name: "list", arg: 1, scope: !15631, file: !137, line: 197, type: !15634)
!15637 = !DILocation(line: 0, scope: !15631)
!15638 = !DILocation(line: 199, column: 8, scope: !15631)
!15639 = !DILocation(line: 199, column: 13, scope: !15631)
!15640 = !DILocation(line: 200, column: 8, scope: !15631)
!15641 = !DILocation(line: 200, column: 13, scope: !15631)
!15642 = !DILocation(line: 201, column: 1, scope: !15631)
!15643 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2391, file: !2391, line: 86, type: !15644, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !15646)
!15644 = !DISubroutineType(types: !15645)
!15645 = !{null, !15595}
!15646 = !{!15647, !15648, !15653}
!15647 = !DILocalVariable(name: "sem", arg: 1, scope: !15643, file: !2391, line: 86, type: !15595)
!15648 = !DILocalVariable(name: "key", scope: !15643, file: !2391, line: 88, type: !15649)
!15649 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15650)
!15650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15651)
!15651 = !{!15652}
!15652 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15650, file: !236, line: 33, baseType: !105, size: 32)
!15653 = !DILocalVariable(name: "thread", scope: !15643, file: !2391, line: 89, type: !15654)
!15654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15655, size: 32)
!15655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !15656)
!15656 = !{!15657, !15695, !15707, !15708, !15709, !15710, !15716, !15728}
!15657 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !15655, file: !127, line: 247, baseType: !15658, size: 384)
!15658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !15659)
!15659 = !{!15660, !15670, !15671, !15672, !15673, !15682, !15683, !15684}
!15660 = !DIDerivedType(tag: DW_TAG_member, scope: !15658, file: !127, line: 60, baseType: !15661, size: 64)
!15661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15658, file: !127, line: 60, size: 64, elements: !15662)
!15662 = !{!15663, !15664}
!15663 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !15661, file: !127, line: 61, baseType: !2376, size: 64)
!15664 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !15661, file: !127, line: 62, baseType: !15665, size: 64)
!15665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !15666)
!15666 = !{!15667}
!15667 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !15665, file: !153, line: 50, baseType: !15668, size: 64)
!15668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15669, size: 64, elements: !158)
!15669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15665, size: 32)
!15670 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !15658, file: !127, line: 68, baseType: !15624, size: 32, offset: 64)
!15671 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !15658, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!15672 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !15658, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!15673 = !DIDerivedType(tag: DW_TAG_member, scope: !15658, file: !127, line: 90, baseType: !15674, size: 16, offset: 112)
!15674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15658, file: !127, line: 90, size: 16, elements: !15675)
!15675 = !{!15676, !15681}
!15676 = !DIDerivedType(tag: DW_TAG_member, scope: !15674, file: !127, line: 91, baseType: !15677, size: 16)
!15677 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15674, file: !127, line: 91, size: 16, elements: !15678)
!15678 = !{!15679, !15680}
!15679 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !15677, file: !127, line: 96, baseType: !179, size: 8)
!15680 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !15677, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!15681 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !15674, file: !127, line: 100, baseType: !183, size: 16)
!15682 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !15658, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!15683 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !15658, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!15684 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !15658, file: !127, line: 131, baseType: !15685, size: 192, offset: 192)
!15685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !15686)
!15686 = !{!15687, !15688, !15694}
!15687 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !15685, file: !163, line: 245, baseType: !2376, size: 64)
!15688 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !15685, file: !163, line: 246, baseType: !15689, size: 32, offset: 64)
!15689 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !15690)
!15690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15691, size: 32)
!15691 = !DISubroutineType(types: !15692)
!15692 = !{null, !15693}
!15693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15685, size: 32)
!15694 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !15685, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!15695 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !15655, file: !127, line: 250, baseType: !15696, size: 288, offset: 384)
!15696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !15697)
!15697 = !{!15698, !15699, !15700, !15701, !15702, !15703, !15704, !15705, !15706}
!15698 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !15696, file: !200, line: 26, baseType: !113, size: 32)
!15699 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !15696, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!15700 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !15696, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!15701 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !15696, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!15702 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !15696, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!15703 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !15696, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!15704 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !15696, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!15705 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !15696, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!15706 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !15696, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!15707 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !15655, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!15708 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !15655, file: !127, line: 256, baseType: !15599, size: 64, offset: 704)
!15709 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !15655, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!15710 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !15655, file: !127, line: 300, baseType: !15711, size: 96, offset: 800)
!15711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !15712)
!15712 = !{!15713, !15714, !15715}
!15713 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !15711, file: !127, line: 153, baseType: !22, size: 32)
!15714 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !15711, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!15715 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !15711, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!15716 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !15655, file: !127, line: 325, baseType: !15717, size: 32, offset: 896)
!15717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15718, size: 32)
!15718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !15719)
!15719 = !{!15720, !15726, !15727}
!15720 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15718, file: !122, line: 5074, baseType: !15721, size: 96)
!15721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !15722)
!15722 = !{!15723, !15724, !15725}
!15723 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15721, file: !226, line: 57, baseType: !229, size: 32)
!15724 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !15721, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!15725 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !15721, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!15726 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15718, file: !122, line: 5075, baseType: !15599, size: 64, offset: 96)
!15727 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15718, file: !122, line: 5076, baseType: !2392, size: 32, offset: 160)
!15728 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !15655, file: !127, line: 343, baseType: !15729, size: 64, offset: 928)
!15729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !15730)
!15730 = !{!15731, !15732}
!15731 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !15729, file: !200, line: 63, baseType: !113, size: 32)
!15732 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !15729, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!15733 = !DILocation(line: 0, scope: !15643)
!15734 = !DILocalVariable(name: "l", arg: 1, scope: !15735, file: !236, line: 136, type: !15738)
!15735 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15736, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !15739)
!15736 = !DISubroutineType(types: !15737)
!15737 = !{!15649, !15738}
!15738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 32)
!15739 = !{!15734, !15740}
!15740 = !DILocalVariable(name: "k", scope: !15735, file: !236, line: 139, type: !15649)
!15741 = !DILocation(line: 0, scope: !15735, inlinedAt: !15742)
!15742 = distinct !DILocation(line: 88, column: 25, scope: !15643)
!15743 = !DILocation(line: 55, column: 2, scope: !15744, inlinedAt: !15748)
!15744 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7419, file: !7419, line: 42, type: !7420, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !15745)
!15745 = !{!15746, !15747}
!15746 = !DILocalVariable(name: "key", scope: !15744, file: !7419, line: 44, type: !32)
!15747 = !DILocalVariable(name: "tmp", scope: !15744, file: !7419, line: 53, type: !32)
!15748 = distinct !DILocation(line: 145, column: 10, scope: !15735, inlinedAt: !15742)
!15749 = !{i64 1654069}
!15750 = !DILocation(line: 0, scope: !15744, inlinedAt: !15748)
!15751 = !DILocation(line: 148, column: 2, scope: !15752, inlinedAt: !15742)
!15752 = distinct !DILexicalBlock(scope: !15753, file: !236, line: 148, column: 2)
!15753 = distinct !DILexicalBlock(scope: !15735, file: !236, line: 148, column: 2)
!15754 = !DILocation(line: 148, column: 2, scope: !15753, inlinedAt: !15742)
!15755 = !DILocation(line: 148, column: 2, scope: !15756, inlinedAt: !15742)
!15756 = distinct !DILexicalBlock(scope: !15752, file: !236, line: 148, column: 2)
!15757 = !DILocation(line: 160, column: 2, scope: !15735, inlinedAt: !15742)
!15758 = !DILocation(line: 93, column: 39, scope: !15643)
!15759 = !DILocation(line: 93, column: 11, scope: !15643)
!15760 = !DILocation(line: 95, column: 13, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15643, file: !2391, line: 95, column: 6)
!15762 = !DILocation(line: 95, column: 6, scope: !15643)
!15763 = !DILocalVariable(name: "thread", arg: 1, scope: !15764, file: !14353, line: 65, type: !15654)
!15764 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14353, file: !14353, line: 65, type: !15765, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !15767)
!15765 = !DISubroutineType(types: !15766)
!15766 = !{null, !15654, !32}
!15767 = !{!15763, !15768}
!15768 = !DILocalVariable(name: "value", arg: 2, scope: !15764, file: !14353, line: 65, type: !32)
!15769 = !DILocation(line: 0, scope: !15764, inlinedAt: !15770)
!15770 = distinct !DILocation(line: 96, column: 3, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !15761, file: !2391, line: 95, column: 22)
!15772 = !DILocation(line: 67, column: 15, scope: !15764, inlinedAt: !15770)
!15773 = !DILocation(line: 67, column: 33, scope: !15764, inlinedAt: !15770)
!15774 = !DILocation(line: 97, column: 3, scope: !15771)
!15775 = !DILocation(line: 98, column: 2, scope: !15771)
!15776 = !DILocation(line: 99, column: 23, scope: !15777)
!15777 = distinct !DILexicalBlock(scope: !15761, file: !2391, line: 98, column: 9)
!15778 = !DILocation(line: 99, column: 37, scope: !15777)
!15779 = !DILocation(line: 99, column: 29, scope: !15777)
!15780 = !DILocation(line: 99, column: 17, scope: !15777)
!15781 = !DILocation(line: 99, column: 14, scope: !15777)
!15782 = !DILocation(line: 103, column: 2, scope: !15643)
!15783 = !DILocation(line: 106, column: 1, scope: !15643)
!15784 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2391, file: !2391, line: 117, type: !15785, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !15791)
!15785 = !DISubroutineType(types: !15786)
!15786 = !{!105, !15595, !15787}
!15787 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !15788)
!15788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !15789)
!15789 = !{!15790}
!15790 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15788, file: !108, line: 66, baseType: !107, size: 64)
!15791 = !{!15792, !15793, !15794, !15795, !15796}
!15792 = !DILocalVariable(name: "sem", arg: 1, scope: !15784, file: !2391, line: 117, type: !15595)
!15793 = !DILocalVariable(name: "timeout", arg: 2, scope: !15784, file: !2391, line: 117, type: !15787)
!15794 = !DILocalVariable(name: "ret", scope: !15784, file: !2391, line: 119, type: !105)
!15795 = !DILocalVariable(name: "key", scope: !15784, file: !2391, line: 124, type: !15649)
!15796 = !DILabel(scope: !15784, name: "out", file: !2391, line: 145)
!15797 = !DILocation(line: 0, scope: !15784)
!15798 = !DILocation(line: 1031, column: 3, scope: !15799, inlinedAt: !15802)
!15799 = distinct !DISubprogram(name: "__get_IPSR", scope: !7754, file: !7754, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !15800)
!15800 = !{!15801}
!15801 = !DILocalVariable(name: "result", scope: !15799, file: !7754, line: 1029, type: !113)
!15802 = distinct !DILocation(line: 48, column: 10, scope: !15803, inlinedAt: !15804)
!15803 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8760, file: !8760, line: 46, type: !8761, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !397)
!15804 = distinct !DILocation(line: 121, column: 2, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15806, file: !2391, line: 121, column: 2)
!15806 = distinct !DILexicalBlock(scope: !15784, file: !2391, line: 121, column: 2)
!15807 = !{i64 2448004}
!15808 = !DILocation(line: 0, scope: !15799, inlinedAt: !15802)
!15809 = !DILocation(line: 48, column: 9, scope: !15803, inlinedAt: !15804)
!15810 = !DILocation(line: 121, column: 2, scope: !15805)
!15811 = !DILocation(line: 121, column: 2, scope: !15812)
!15812 = distinct !DILexicalBlock(scope: !15805, file: !2391, line: 121, column: 2)
!15813 = !DILocation(line: 0, scope: !15735, inlinedAt: !15814)
!15814 = distinct !DILocation(line: 124, column: 25, scope: !15784)
!15815 = !DILocation(line: 55, column: 2, scope: !15744, inlinedAt: !15816)
!15816 = distinct !DILocation(line: 145, column: 10, scope: !15735, inlinedAt: !15814)
!15817 = !DILocation(line: 0, scope: !15744, inlinedAt: !15816)
!15818 = !DILocation(line: 148, column: 2, scope: !15752, inlinedAt: !15814)
!15819 = !DILocation(line: 148, column: 2, scope: !15753, inlinedAt: !15814)
!15820 = !DILocation(line: 148, column: 2, scope: !15756, inlinedAt: !15814)
!15821 = !DILocation(line: 160, column: 2, scope: !15735, inlinedAt: !15814)
!15822 = !DILocation(line: 128, column: 6, scope: !15823)
!15823 = distinct !DILexicalBlock(scope: !15784, file: !2391, line: 128, column: 6)
!15824 = !DILocation(line: 128, column: 6, scope: !15784)
!15825 = !{!"branch_weights", i32 1, i32 2000}
!15826 = !DILocation(line: 129, column: 13, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15823, file: !2391, line: 128, column: 31)
!15828 = !DILocalVariable(name: "key", arg: 2, scope: !15829, file: !236, line: 190, type: !15649)
!15829 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15830, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !15832)
!15830 = !DISubroutineType(types: !15831)
!15831 = !{null, !15738, !15649}
!15832 = !{!15833, !15828}
!15833 = !DILocalVariable(name: "l", arg: 1, scope: !15829, file: !236, line: 189, type: !15738)
!15834 = !DILocation(line: 0, scope: !15829, inlinedAt: !15835)
!15835 = distinct !DILocation(line: 130, column: 3, scope: !15827)
!15836 = !DILocation(line: 194, column: 2, scope: !15837, inlinedAt: !15835)
!15837 = distinct !DILexicalBlock(scope: !15838, file: !236, line: 194, column: 2)
!15838 = distinct !DILexicalBlock(scope: !15829, file: !236, line: 194, column: 2)
!15839 = !DILocation(line: 194, column: 2, scope: !15838, inlinedAt: !15835)
!15840 = !DILocation(line: 194, column: 2, scope: !15841, inlinedAt: !15835)
!15841 = distinct !DILexicalBlock(scope: !15837, file: !236, line: 194, column: 2)
!15842 = !DILocalVariable(name: "key", arg: 1, scope: !15843, file: !7419, line: 84, type: !32)
!15843 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7419, file: !7419, line: 84, type: !7430, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !15844)
!15844 = !{!15842}
!15845 = !DILocation(line: 0, scope: !15843, inlinedAt: !15846)
!15846 = distinct !DILocation(line: 215, column: 2, scope: !15829, inlinedAt: !15835)
!15847 = !DILocation(line: 95, column: 2, scope: !15843, inlinedAt: !15846)
!15848 = !{i64 1654886}
!15849 = !DILocation(line: 132, column: 3, scope: !15827)
!15850 = !DILocation(line: 135, column: 6, scope: !15784)
!15851 = !DILocation(line: 0, scope: !15829, inlinedAt: !15852)
!15852 = distinct !DILocation(line: 136, column: 3, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15854, file: !2391, line: 135, column: 40)
!15854 = distinct !DILexicalBlock(scope: !15784, file: !2391, line: 135, column: 6)
!15855 = !DILocation(line: 194, column: 2, scope: !15837, inlinedAt: !15852)
!15856 = !DILocation(line: 194, column: 2, scope: !15838, inlinedAt: !15852)
!15857 = !DILocation(line: 194, column: 2, scope: !15841, inlinedAt: !15852)
!15858 = !DILocation(line: 0, scope: !15843, inlinedAt: !15859)
!15859 = distinct !DILocation(line: 215, column: 2, scope: !15829, inlinedAt: !15852)
!15860 = !DILocation(line: 95, column: 2, scope: !15843, inlinedAt: !15859)
!15861 = !DILocation(line: 138, column: 3, scope: !15853)
!15862 = !DILocation(line: 143, column: 38, scope: !15784)
!15863 = !DILocation(line: 143, column: 8, scope: !15784)
!15864 = !DILocation(line: 143, column: 2, scope: !15784)
!15865 = !DILocation(line: 145, column: 1, scope: !15784)
!15866 = !DILocation(line: 148, column: 2, scope: !15784)
!15867 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2391, file: !2391, line: 151, type: !15644, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !15868)
!15868 = !{!15869, !15870, !15871}
!15869 = !DILocalVariable(name: "sem", arg: 1, scope: !15867, file: !2391, line: 151, type: !15595)
!15870 = !DILocalVariable(name: "thread", scope: !15867, file: !2391, line: 153, type: !15654)
!15871 = !DILocalVariable(name: "key", scope: !15867, file: !2391, line: 154, type: !15649)
!15872 = !DILocation(line: 0, scope: !15867)
!15873 = !DILocation(line: 0, scope: !15735, inlinedAt: !15874)
!15874 = distinct !DILocation(line: 154, column: 25, scope: !15867)
!15875 = !DILocation(line: 55, column: 2, scope: !15744, inlinedAt: !15876)
!15876 = distinct !DILocation(line: 145, column: 10, scope: !15735, inlinedAt: !15874)
!15877 = !DILocation(line: 0, scope: !15744, inlinedAt: !15876)
!15878 = !DILocation(line: 148, column: 2, scope: !15752, inlinedAt: !15874)
!15879 = !DILocation(line: 148, column: 2, scope: !15753, inlinedAt: !15874)
!15880 = !DILocation(line: 148, column: 2, scope: !15756, inlinedAt: !15874)
!15881 = !DILocation(line: 160, column: 2, scope: !15735, inlinedAt: !15874)
!15882 = !DILocation(line: 157, column: 12, scope: !15883)
!15883 = distinct !DILexicalBlock(scope: !15867, file: !2391, line: 156, column: 15)
!15884 = !DILocation(line: 158, column: 14, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15883, file: !2391, line: 158, column: 7)
!15886 = !DILocation(line: 158, column: 7, scope: !15883)
!15887 = !DILocation(line: 0, scope: !15764, inlinedAt: !15888)
!15888 = distinct !DILocation(line: 161, column: 3, scope: !15883)
!15889 = !DILocation(line: 67, column: 15, scope: !15764, inlinedAt: !15888)
!15890 = !DILocation(line: 67, column: 33, scope: !15764, inlinedAt: !15888)
!15891 = !DILocation(line: 162, column: 3, scope: !15883)
!15892 = distinct !{!15892, !15893, !15894}
!15893 = !DILocation(line: 156, column: 2, scope: !15867)
!15894 = !DILocation(line: 163, column: 2, scope: !15867)
!15895 = !DILocation(line: 164, column: 7, scope: !15867)
!15896 = !DILocation(line: 164, column: 13, scope: !15867)
!15897 = !DILocation(line: 170, column: 2, scope: !15867)
!15898 = !DILocation(line: 171, column: 1, scope: !15867)
!15899 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2507, file: !2507, line: 93, type: !15900, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !15902)
!15900 = !DISubroutineType(types: !15901)
!15901 = !{!116, !2400, !2400}
!15902 = !{!15903, !15904, !15905, !15906}
!15903 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15899, file: !2507, line: 93, type: !2400)
!15904 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15899, file: !2507, line: 94, type: !2400)
!15905 = !DILocalVariable(name: "b1", scope: !15899, file: !2507, line: 97, type: !116)
!15906 = !DILocalVariable(name: "b2", scope: !15899, file: !2507, line: 98, type: !116)
!15907 = !DILocation(line: 0, scope: !15899)
!15908 = !DILocation(line: 97, column: 30, scope: !15899)
!15909 = !DILocation(line: 98, column: 30, scope: !15899)
!15910 = !DILocation(line: 100, column: 9, scope: !15911)
!15911 = distinct !DILexicalBlock(scope: !15899, file: !2507, line: 100, column: 6)
!15912 = !DILocation(line: 100, column: 6, scope: !15899)
!15913 = !DILocation(line: 125, column: 1, scope: !15899)
!15914 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2507, file: !2507, line: 428, type: !15915, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !15917)
!15915 = !DISubroutineType(types: !15916)
!15916 = !{null, !2400}
!15917 = !{!15918}
!15918 = !DILocalVariable(name: "curr", arg: 1, scope: !15914, file: !2507, line: 428, type: !2400)
!15919 = !DILocation(line: 0, scope: !15914)
!15920 = !DILocation(line: 434, column: 6, scope: !15921)
!15921 = distinct !DILexicalBlock(scope: !15914, file: !2507, line: 434, column: 6)
!15922 = !DILocation(line: 434, column: 23, scope: !15921)
!15923 = !DILocation(line: 434, column: 6, scope: !15914)
!15924 = !DILocation(line: 435, column: 50, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15921, file: !2507, line: 434, column: 29)
!15926 = !DILocation(line: 435, column: 48, scope: !15925)
!15927 = !DILocation(line: 435, column: 29, scope: !15925)
!15928 = !DILocation(line: 436, column: 24, scope: !15925)
!15929 = !DILocation(line: 436, column: 3, scope: !15925)
!15930 = !DILocation(line: 437, column: 2, scope: !15925)
!15931 = !DILocation(line: 438, column: 1, scope: !15914)
!15932 = distinct !DISubprogram(name: "slice_time", scope: !2507, file: !2507, line: 407, type: !15933, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !15935)
!15933 = !DISubroutineType(types: !15934)
!15934 = !{!105, !2400}
!15935 = !{!15936, !15937}
!15936 = !DILocalVariable(name: "curr", arg: 1, scope: !15932, file: !2507, line: 407, type: !2400)
!15937 = !DILocalVariable(name: "ret", scope: !15932, file: !2507, line: 409, type: !105)
!15938 = !DILocation(line: 0, scope: !15932)
!15939 = !DILocation(line: 409, column: 12, scope: !15932)
!15940 = !DILocation(line: 416, column: 2, scope: !15932)
!15941 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2507, file: !2507, line: 440, type: !15942, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !15944)
!15942 = !DISubroutineType(types: !15943)
!15943 = !{null, !116, !105}
!15944 = !{!15945, !15946, !15947, !15953}
!15945 = !DILocalVariable(name: "slice", arg: 1, scope: !15941, file: !2507, line: 440, type: !116)
!15946 = !DILocalVariable(name: "prio", arg: 2, scope: !15941, file: !2507, line: 440, type: !105)
!15947 = !DILocalVariable(name: "__i", scope: !15948, file: !2507, line: 442, type: !15949)
!15948 = distinct !DILexicalBlock(scope: !15941, file: !2507, line: 442, column: 2)
!15949 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15950)
!15950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15951)
!15951 = !{!15952}
!15952 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15950, file: !236, line: 33, baseType: !105, size: 32)
!15953 = !DILocalVariable(name: "__key", scope: !15948, file: !2507, line: 442, type: !15949)
!15954 = !DILocation(line: 0, scope: !15941)
!15955 = !DILocation(line: 0, scope: !15948)
!15956 = !DILocalVariable(name: "l", arg: 1, scope: !15957, file: !236, line: 136, type: !15960)
!15957 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15958, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !15961)
!15958 = !DISubroutineType(types: !15959)
!15959 = !{!15949, !15960}
!15960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 32)
!15961 = !{!15956, !15962}
!15962 = !DILocalVariable(name: "k", scope: !15957, file: !236, line: 139, type: !15949)
!15963 = !DILocation(line: 0, scope: !15957, inlinedAt: !15964)
!15964 = distinct !DILocation(line: 442, column: 2, scope: !15948)
!15965 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !15970)
!15966 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7419, file: !7419, line: 42, type: !7420, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !15967)
!15967 = !{!15968, !15969}
!15968 = !DILocalVariable(name: "key", scope: !15966, file: !7419, line: 44, type: !32)
!15969 = !DILocalVariable(name: "tmp", scope: !15966, file: !7419, line: 53, type: !32)
!15970 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !15964)
!15971 = !{i64 1696478}
!15972 = !DILocation(line: 0, scope: !15966, inlinedAt: !15970)
!15973 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !15964)
!15974 = distinct !DILexicalBlock(scope: !15975, file: !236, line: 148, column: 2)
!15975 = distinct !DILexicalBlock(scope: !15957, file: !236, line: 148, column: 2)
!15976 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !15964)
!15977 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !15964)
!15978 = distinct !DILexicalBlock(scope: !15974, file: !236, line: 148, column: 2)
!15979 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !15964)
!15980 = !DILocation(line: 443, column: 29, scope: !15981)
!15981 = distinct !DILexicalBlock(scope: !15982, file: !2507, line: 442, column: 26)
!15982 = distinct !DILexicalBlock(scope: !15948, file: !2507, line: 442, column: 2)
!15983 = !DILocation(line: 444, column: 17, scope: !15981)
!15984 = !DILocation(line: 445, column: 51, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !15981, file: !2507, line: 445, column: 7)
!15986 = !DILocation(line: 445, column: 7, scope: !15981)
!15987 = !DILocation(line: 0, scope: !15981)
!15988 = !DILocation(line: 451, column: 18, scope: !15981)
!15989 = !DILocation(line: 452, column: 3, scope: !15981)
!15990 = !DILocalVariable(name: "key", arg: 2, scope: !15991, file: !236, line: 190, type: !15949)
!15991 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15992, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !15994)
!15992 = !DISubroutineType(types: !15993)
!15993 = !{null, !15960, !15949}
!15994 = !{!15995, !15990}
!15995 = !DILocalVariable(name: "l", arg: 1, scope: !15991, file: !236, line: 189, type: !15960)
!15996 = !DILocation(line: 0, scope: !15991, inlinedAt: !15997)
!15997 = distinct !DILocation(line: 442, column: 2, scope: !15982)
!15998 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !15997)
!15999 = distinct !DILexicalBlock(scope: !16000, file: !236, line: 194, column: 2)
!16000 = distinct !DILexicalBlock(scope: !15991, file: !236, line: 194, column: 2)
!16001 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !15997)
!16002 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !15997)
!16003 = distinct !DILexicalBlock(scope: !15999, file: !236, line: 194, column: 2)
!16004 = !DILocalVariable(name: "key", arg: 1, scope: !16005, file: !7419, line: 84, type: !32)
!16005 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7419, file: !7419, line: 84, type: !7430, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16006)
!16006 = !{!16004}
!16007 = !DILocation(line: 0, scope: !16005, inlinedAt: !16008)
!16008 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !15997)
!16009 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !16008)
!16010 = !{i64 1697295}
!16011 = !DILocation(line: 454, column: 1, scope: !15941)
!16012 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !14929, file: !14929, line: 389, type: !8994, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16013)
!16013 = !{!16014}
!16014 = !DILocalVariable(name: "t", arg: 1, scope: !16012, file: !14929, line: 389, type: !113)
!16015 = !DILocation(line: 0, scope: !16012)
!16016 = !DILocalVariable(name: "t", arg: 1, scope: !16017, file: !14929, line: 102, type: !114)
!16017 = distinct !DISubprogram(name: "z_tmcvt", scope: !14929, file: !14929, line: 102, type: !14937, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16018)
!16018 = !{!16016, !16019, !16020, !16021, !16022, !16023, !16024, !16025, !16026, !16027, !16028}
!16019 = !DILocalVariable(name: "from_hz", arg: 2, scope: !16017, file: !14929, line: 102, type: !113)
!16020 = !DILocalVariable(name: "to_hz", arg: 3, scope: !16017, file: !14929, line: 103, type: !113)
!16021 = !DILocalVariable(name: "const_hz", arg: 4, scope: !16017, file: !14929, line: 103, type: !505)
!16022 = !DILocalVariable(name: "result32", arg: 5, scope: !16017, file: !14929, line: 104, type: !505)
!16023 = !DILocalVariable(name: "round_up", arg: 6, scope: !16017, file: !14929, line: 104, type: !505)
!16024 = !DILocalVariable(name: "round_off", arg: 7, scope: !16017, file: !14929, line: 105, type: !505)
!16025 = !DILocalVariable(name: "mul_ratio", scope: !16017, file: !14929, line: 107, type: !505)
!16026 = !DILocalVariable(name: "div_ratio", scope: !16017, file: !14929, line: 109, type: !505)
!16027 = !DILocalVariable(name: "off", scope: !16017, file: !14929, line: 116, type: !114)
!16028 = !DILocalVariable(name: "rdivisor", scope: !16029, file: !14929, line: 119, type: !113)
!16029 = distinct !DILexicalBlock(scope: !16030, file: !14929, line: 118, column: 18)
!16030 = distinct !DILexicalBlock(scope: !16017, file: !14929, line: 118, column: 6)
!16031 = !DILocation(line: 0, scope: !16017, inlinedAt: !16032)
!16032 = distinct !DILocation(line: 392, column: 9, scope: !16012)
!16033 = !DILocation(line: 143, column: 25, scope: !16034, inlinedAt: !16032)
!16034 = distinct !DILexicalBlock(scope: !16035, file: !14929, line: 142, column: 17)
!16035 = distinct !DILexicalBlock(scope: !16036, file: !14929, line: 142, column: 7)
!16036 = distinct !DILexicalBlock(scope: !16037, file: !14929, line: 141, column: 24)
!16037 = distinct !DILexicalBlock(scope: !16038, file: !14929, line: 141, column: 13)
!16038 = distinct !DILexicalBlock(scope: !16017, file: !14929, line: 134, column: 6)
!16039 = !DILocation(line: 392, column: 2, scope: !16012)
!16040 = distinct !DISubprogram(name: "z_time_slice", scope: !2507, file: !2507, line: 502, type: !9795, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16041)
!16041 = !{!16042, !16043}
!16042 = !DILocalVariable(name: "ticks", arg: 1, scope: !16040, file: !2507, line: 502, type: !105)
!16043 = !DILocalVariable(name: "key", scope: !16040, file: !2507, line: 511, type: !15949)
!16044 = !DILocation(line: 0, scope: !16040)
!16045 = !DILocation(line: 0, scope: !15957, inlinedAt: !16046)
!16046 = distinct !DILocation(line: 511, column: 25, scope: !16040)
!16047 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !16048)
!16048 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !16046)
!16049 = !DILocation(line: 0, scope: !15966, inlinedAt: !16048)
!16050 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !16046)
!16051 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !16046)
!16052 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !16046)
!16053 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !16046)
!16054 = !DILocation(line: 514, column: 6, scope: !16055)
!16055 = distinct !DILexicalBlock(scope: !16040, file: !2507, line: 514, column: 6)
!16056 = !DILocation(line: 514, column: 25, scope: !16055)
!16057 = !DILocation(line: 514, column: 22, scope: !16055)
!16058 = !DILocation(line: 514, column: 6, scope: !16040)
!16059 = !DILocation(line: 515, column: 3, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !16055, file: !2507, line: 514, column: 35)
!16061 = !DILocation(line: 0, scope: !15991, inlinedAt: !16062)
!16062 = distinct !DILocation(line: 516, column: 3, scope: !16060)
!16063 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !16062)
!16064 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !16062)
!16065 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !16062)
!16066 = !DILocation(line: 0, scope: !16005, inlinedAt: !16067)
!16067 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !16062)
!16068 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !16067)
!16069 = !DILocation(line: 517, column: 3, scope: !16060)
!16070 = !DILocation(line: 519, column: 18, scope: !16040)
!16071 = !DILocation(line: 522, column: 6, scope: !16072)
!16072 = distinct !DILexicalBlock(scope: !16040, file: !2507, line: 522, column: 6)
!16073 = !DILocation(line: 522, column: 27, scope: !16072)
!16074 = !DILocation(line: 522, column: 30, scope: !16072)
!16075 = !DILocation(line: 522, column: 6, scope: !16040)
!16076 = !DILocation(line: 523, column: 30, scope: !16077)
!16077 = distinct !DILexicalBlock(scope: !16078, file: !2507, line: 523, column: 7)
!16078 = distinct !DILexicalBlock(scope: !16072, file: !2507, line: 522, column: 51)
!16079 = !DILocation(line: 523, column: 13, scope: !16077)
!16080 = !DILocation(line: 523, column: 7, scope: !16078)
!16081 = !DILocation(line: 530, column: 10, scope: !16082)
!16082 = distinct !DILexicalBlock(scope: !16077, file: !2507, line: 523, column: 43)
!16083 = !DILocation(line: 531, column: 3, scope: !16082)
!16084 = !DILocation(line: 532, column: 30, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16077, file: !2507, line: 531, column: 10)
!16086 = !DILocation(line: 535, column: 29, scope: !16087)
!16087 = distinct !DILexicalBlock(scope: !16072, file: !2507, line: 534, column: 9)
!16088 = !DILocation(line: 0, scope: !15991, inlinedAt: !16089)
!16089 = distinct !DILocation(line: 537, column: 2, scope: !16040)
!16090 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !16089)
!16091 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !16089)
!16092 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !16089)
!16093 = !DILocation(line: 0, scope: !16005, inlinedAt: !16094)
!16094 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !16089)
!16095 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !16094)
!16096 = !DILocation(line: 538, column: 1, scope: !16040)
!16097 = distinct !DISubprogram(name: "sliceable", scope: !2507, file: !2507, line: 468, type: !16098, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16100)
!16098 = !DISubroutineType(types: !16099)
!16099 = !{!505, !2400}
!16100 = !{!16101, !16102}
!16101 = !DILocalVariable(name: "thread", arg: 1, scope: !16097, file: !2507, line: 468, type: !2400)
!16102 = !DILocalVariable(name: "ret", scope: !16097, file: !2507, line: 470, type: !505)
!16103 = !DILocation(line: 0, scope: !16097)
!16104 = !DILocation(line: 470, column: 13, scope: !16097)
!16105 = !DILocation(line: 471, column: 3, scope: !16097)
!16106 = !DILocation(line: 471, column: 7, scope: !16097)
!16107 = !DILocation(line: 472, column: 3, scope: !16097)
!16108 = !DILocation(line: 472, column: 37, scope: !16097)
!16109 = !DILocation(line: 472, column: 24, scope: !16097)
!16110 = !DILocation(line: 472, column: 43, scope: !16097)
!16111 = !DILocation(line: 472, column: 7, scope: !16097)
!16112 = !DILocation(line: 473, column: 3, scope: !16097)
!16113 = !DILocation(line: 473, column: 7, scope: !16097)
!16114 = !DILocation(line: 473, column: 6, scope: !16097)
!16115 = !DILocation(line: 479, column: 2, scope: !16097)
!16116 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2507, file: !2507, line: 482, type: !16117, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16119)
!16117 = !DISubroutineType(types: !16118)
!16118 = !{!15949, !15949}
!16119 = !{!16120, !16121}
!16120 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !16116, file: !2507, line: 482, type: !15949)
!16121 = !DILocalVariable(name: "curr", scope: !16116, file: !2507, line: 484, type: !2400)
!16122 = !DILocation(line: 0, scope: !16116)
!16123 = !DILocation(line: 484, column: 26, scope: !16116)
!16124 = !DILocation(line: 493, column: 7, scope: !16125)
!16125 = distinct !DILexicalBlock(scope: !16116, file: !2507, line: 493, column: 6)
!16126 = !DILocation(line: 493, column: 6, scope: !16116)
!16127 = !DILocation(line: 494, column: 3, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16125, file: !2507, line: 493, column: 49)
!16129 = !DILocation(line: 495, column: 2, scope: !16128)
!16130 = !DILocation(line: 496, column: 2, scope: !16116)
!16131 = !DILocation(line: 499, column: 1, scope: !16116)
!16132 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14312, file: !14312, line: 106, type: !16098, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16133)
!16133 = !{!16134, !16135}
!16134 = !DILocalVariable(name: "thread", arg: 1, scope: !16132, file: !14312, line: 106, type: !2400)
!16135 = !DILocalVariable(name: "state", scope: !16132, file: !14312, line: 108, type: !169)
!16136 = !DILocation(line: 0, scope: !16132)
!16137 = !DILocation(line: 108, column: 31, scope: !16132)
!16138 = !DILocation(line: 110, column: 16, scope: !16132)
!16139 = !DILocation(line: 111, column: 41, scope: !16132)
!16140 = !DILocation(line: 110, column: 2, scope: !16132)
!16141 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2507, file: !2507, line: 393, type: !15915, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16142)
!16142 = !{!16143}
!16143 = !DILocalVariable(name: "thread", arg: 1, scope: !16141, file: !2507, line: 393, type: !2400)
!16144 = !DILocation(line: 0, scope: !16141)
!16145 = !DILocation(line: 395, column: 6, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16141, file: !2507, line: 395, column: 6)
!16147 = !DILocation(line: 395, column: 6, scope: !16141)
!16148 = !DILocalVariable(name: "thread", arg: 1, scope: !16149, file: !2507, line: 264, type: !2400)
!16149 = distinct !DISubprogram(name: "dequeue_thread", scope: !2507, file: !2507, line: 264, type: !15915, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16150)
!16150 = !{!16148}
!16151 = !DILocation(line: 0, scope: !16149, inlinedAt: !16152)
!16152 = distinct !DILocation(line: 396, column: 3, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !16146, file: !2507, line: 395, column: 34)
!16154 = !DILocation(line: 266, column: 15, scope: !16149, inlinedAt: !16152)
!16155 = !DILocation(line: 266, column: 28, scope: !16149, inlinedAt: !16152)
!16156 = !DILocalVariable(name: "thread", arg: 1, scope: !16157, file: !2507, line: 232, type: !2400)
!16157 = distinct !DISubprogram(name: "runq_remove", scope: !2507, file: !2507, line: 232, type: !15915, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16158)
!16158 = !{!16156}
!16159 = !DILocation(line: 0, scope: !16157, inlinedAt: !16160)
!16160 = distinct !DILocation(line: 268, column: 3, scope: !16161, inlinedAt: !16152)
!16161 = distinct !DILexicalBlock(scope: !16162, file: !2507, line: 267, column: 35)
!16162 = distinct !DILexicalBlock(scope: !16149, file: !2507, line: 267, column: 6)
!16163 = !DILocation(line: 234, column: 2, scope: !16157, inlinedAt: !16160)
!16164 = !DILocation(line: 397, column: 2, scope: !16153)
!16165 = !DILocalVariable(name: "thread", arg: 1, scope: !16166, file: !2507, line: 250, type: !2400)
!16166 = distinct !DISubprogram(name: "queue_thread", scope: !2507, file: !2507, line: 250, type: !15915, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16167)
!16167 = !{!16165}
!16168 = !DILocation(line: 0, scope: !16166, inlinedAt: !16169)
!16169 = distinct !DILocation(line: 398, column: 2, scope: !16141)
!16170 = !DILocation(line: 252, column: 15, scope: !16166, inlinedAt: !16169)
!16171 = !DILocation(line: 252, column: 28, scope: !16166, inlinedAt: !16169)
!16172 = !DILocalVariable(name: "thread", arg: 1, scope: !16173, file: !2507, line: 227, type: !2400)
!16173 = distinct !DISubprogram(name: "runq_add", scope: !2507, file: !2507, line: 227, type: !15915, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16174)
!16174 = !{!16172}
!16175 = !DILocation(line: 0, scope: !16173, inlinedAt: !16176)
!16176 = distinct !DILocation(line: 254, column: 3, scope: !16177, inlinedAt: !16169)
!16177 = distinct !DILexicalBlock(scope: !16178, file: !2507, line: 253, column: 35)
!16178 = distinct !DILexicalBlock(scope: !16166, file: !2507, line: 253, column: 6)
!16179 = !DILocalVariable(name: "pq", arg: 1, scope: !16180, file: !2507, line: 181, type: !16183)
!16180 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2507, file: !2507, line: 181, type: !16181, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16184)
!16181 = !DISubroutineType(types: !16182)
!16182 = !{null, !16183, !2400}
!16183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 32)
!16184 = !{!16179, !16185, !16186}
!16185 = !DILocalVariable(name: "thread", arg: 2, scope: !16180, file: !2507, line: 182, type: !2400)
!16186 = !DILocalVariable(name: "t", scope: !16180, file: !2507, line: 184, type: !2400)
!16187 = !DILocation(line: 0, scope: !16180, inlinedAt: !16188)
!16188 = distinct !DILocation(line: 229, column: 2, scope: !16173, inlinedAt: !16176)
!16189 = !DILocation(line: 186, column: 2, scope: !16190, inlinedAt: !16188)
!16190 = distinct !DILexicalBlock(scope: !16191, file: !2507, line: 186, column: 2)
!16191 = distinct !DILexicalBlock(scope: !16180, file: !2507, line: 186, column: 2)
!16192 = !DILocation(line: 186, column: 2, scope: !16191, inlinedAt: !16188)
!16193 = !DILocation(line: 186, column: 2, scope: !16194, inlinedAt: !16188)
!16194 = distinct !DILexicalBlock(scope: !16190, file: !2507, line: 186, column: 2)
!16195 = !DILocation(line: 188, column: 2, scope: !16196, inlinedAt: !16188)
!16196 = distinct !DILexicalBlock(scope: !16180, file: !2507, line: 188, column: 2)
!16197 = !DILocation(line: 188, column: 2, scope: !16198, inlinedAt: !16188)
!16198 = distinct !DILexicalBlock(scope: !16196, file: !2507, line: 188, column: 2)
!16199 = !DILocation(line: 0, scope: !16196, inlinedAt: !16188)
!16200 = !DILocation(line: 189, column: 7, scope: !16201, inlinedAt: !16188)
!16201 = distinct !DILexicalBlock(scope: !16202, file: !2507, line: 189, column: 7)
!16202 = distinct !DILexicalBlock(scope: !16198, file: !2507, line: 188, column: 56)
!16203 = !DILocation(line: 189, column: 35, scope: !16201, inlinedAt: !16188)
!16204 = !DILocation(line: 189, column: 7, scope: !16202, inlinedAt: !16188)
!16205 = !DILocation(line: 191, column: 21, scope: !16206, inlinedAt: !16188)
!16206 = distinct !DILexicalBlock(scope: !16201, file: !2507, line: 189, column: 40)
!16207 = !DILocation(line: 190, column: 4, scope: !16206, inlinedAt: !16188)
!16208 = !DILocation(line: 192, column: 4, scope: !16206, inlinedAt: !16188)
!16209 = distinct !{!16209, !16195, !16210}
!16210 = !DILocation(line: 194, column: 2, scope: !16196, inlinedAt: !16188)
!16211 = !DILocation(line: 196, column: 37, scope: !16180, inlinedAt: !16188)
!16212 = !DILocation(line: 196, column: 2, scope: !16180, inlinedAt: !16188)
!16213 = !DILocation(line: 197, column: 1, scope: !16180, inlinedAt: !16188)
!16214 = !DILocation(line: 399, column: 25, scope: !16141)
!16215 = !DILocation(line: 399, column: 22, scope: !16141)
!16216 = !DILocation(line: 399, column: 2, scope: !16141)
!16217 = !DILocation(line: 400, column: 1, scope: !16141)
!16218 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14312, file: !14312, line: 136, type: !16098, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16219)
!16219 = !{!16220}
!16220 = !DILocalVariable(name: "thread", arg: 1, scope: !16218, file: !14312, line: 136, type: !2400)
!16221 = !DILocation(line: 0, scope: !16218)
!16222 = !DILocation(line: 138, column: 9, scope: !16218)
!16223 = !DILocation(line: 138, column: 2, scope: !16218)
!16224 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2507, file: !2507, line: 1137, type: !16181, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16225)
!16225 = !{!16226, !16227}
!16226 = !DILocalVariable(name: "pq", arg: 1, scope: !16224, file: !2507, line: 1137, type: !16183)
!16227 = !DILocalVariable(name: "thread", arg: 2, scope: !16224, file: !2507, line: 1137, type: !2400)
!16228 = !DILocation(line: 0, scope: !16224)
!16229 = !DILocation(line: 1139, column: 2, scope: !16230)
!16230 = distinct !DILexicalBlock(scope: !16231, file: !2507, line: 1139, column: 2)
!16231 = distinct !DILexicalBlock(scope: !16224, file: !2507, line: 1139, column: 2)
!16232 = !DILocation(line: 1139, column: 2, scope: !16231)
!16233 = !DILocation(line: 1139, column: 2, scope: !16234)
!16234 = distinct !DILexicalBlock(scope: !16230, file: !2507, line: 1139, column: 2)
!16235 = !DILocation(line: 1141, column: 33, scope: !16224)
!16236 = !DILocation(line: 1141, column: 2, scope: !16224)
!16237 = !DILocation(line: 1142, column: 1, scope: !16224)
!16238 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14312, file: !14312, line: 83, type: !16098, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16239)
!16239 = !{!16240}
!16240 = !DILocalVariable(name: "thread", arg: 1, scope: !16238, file: !14312, line: 83, type: !2400)
!16241 = !DILocation(line: 0, scope: !16238)
!16242 = !DILocation(line: 89, column: 16, scope: !16238)
!16243 = !DILocation(line: 89, column: 2, scope: !16238)
!16244 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !16245, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16247)
!16245 = !DISubroutineType(types: !16246)
!16246 = !{!2503, !16183}
!16247 = !{!16248}
!16248 = !DILocalVariable(name: "list", arg: 1, scope: !16244, file: !137, line: 294, type: !16183)
!16249 = !DILocation(line: 0, scope: !16244)
!16250 = !DILocation(line: 296, column: 9, scope: !16244)
!16251 = !DILocation(line: 296, column: 49, scope: !16244)
!16252 = !DILocation(line: 296, column: 2, scope: !16244)
!16253 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !16254, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16256)
!16254 = !DISubroutineType(types: !16255)
!16255 = !{null, !2503, !2503}
!16256 = !{!16257, !16258, !16259}
!16257 = !DILocalVariable(name: "successor", arg: 1, scope: !16253, file: !137, line: 443, type: !2503)
!16258 = !DILocalVariable(name: "node", arg: 2, scope: !16253, file: !137, line: 443, type: !2503)
!16259 = !DILocalVariable(name: "prev", scope: !16253, file: !137, line: 445, type: !16260)
!16260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2503)
!16261 = !DILocation(line: 0, scope: !16253)
!16262 = !DILocation(line: 445, column: 39, scope: !16253)
!16263 = !DILocation(line: 447, column: 8, scope: !16253)
!16264 = !DILocation(line: 447, column: 13, scope: !16253)
!16265 = !DILocation(line: 448, column: 8, scope: !16253)
!16266 = !DILocation(line: 448, column: 13, scope: !16253)
!16267 = !DILocation(line: 449, column: 8, scope: !16253)
!16268 = !DILocation(line: 449, column: 13, scope: !16253)
!16269 = !DILocation(line: 450, column: 18, scope: !16253)
!16270 = !DILocation(line: 451, column: 1, scope: !16253)
!16271 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !16272, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16274)
!16272 = !DISubroutineType(types: !16273)
!16273 = !{!2503, !16183, !2503}
!16274 = !{!16275, !16276}
!16275 = !DILocalVariable(name: "list", arg: 1, scope: !16271, file: !137, line: 341, type: !16183)
!16276 = !DILocalVariable(name: "node", arg: 2, scope: !16271, file: !137, line: 342, type: !2503)
!16277 = !DILocation(line: 0, scope: !16271)
!16278 = !DILocation(line: 344, column: 15, scope: !16271)
!16279 = !DILocation(line: 344, column: 9, scope: !16271)
!16280 = !DILocation(line: 344, column: 26, scope: !16271)
!16281 = !DILocation(line: 344, column: 2, scope: !16271)
!16282 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !16283, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16285)
!16283 = !DISubroutineType(types: !16284)
!16284 = !{null, !16183, !2503}
!16285 = !{!16286, !16287, !16288}
!16286 = !DILocalVariable(name: "list", arg: 1, scope: !16282, file: !137, line: 404, type: !16183)
!16287 = !DILocalVariable(name: "node", arg: 2, scope: !16282, file: !137, line: 404, type: !2503)
!16288 = !DILocalVariable(name: "tail", scope: !16282, file: !137, line: 406, type: !16260)
!16289 = !DILocation(line: 0, scope: !16282)
!16290 = !DILocation(line: 406, column: 34, scope: !16282)
!16291 = !DILocation(line: 408, column: 8, scope: !16282)
!16292 = !DILocation(line: 408, column: 13, scope: !16282)
!16293 = !DILocation(line: 409, column: 8, scope: !16282)
!16294 = !DILocation(line: 409, column: 13, scope: !16282)
!16295 = !DILocation(line: 411, column: 8, scope: !16282)
!16296 = !DILocation(line: 411, column: 13, scope: !16282)
!16297 = !DILocation(line: 412, column: 13, scope: !16282)
!16298 = !DILocation(line: 413, column: 1, scope: !16282)
!16299 = distinct !DISubprogram(name: "update_cache", scope: !2507, file: !2507, line: 559, type: !9795, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16300)
!16300 = !{!16301, !16302}
!16301 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16299, file: !2507, line: 559, type: !105)
!16302 = !DILocalVariable(name: "thread", scope: !16299, file: !2507, line: 562, type: !2400)
!16303 = !DILocation(line: 0, scope: !16299)
!16304 = !DILocation(line: 239, column: 9, scope: !16305, inlinedAt: !16308)
!16305 = distinct !DISubprogram(name: "runq_best", scope: !2507, file: !2507, line: 237, type: !16306, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !397)
!16306 = !DISubroutineType(types: !16307)
!16307 = !{!2400}
!16308 = distinct !DILocation(line: 314, column: 28, scope: !16309, inlinedAt: !16313)
!16309 = distinct !DISubprogram(name: "next_up", scope: !2507, file: !2507, line: 312, type: !16306, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16310)
!16310 = !{!16311, !16312}
!16311 = !DILocalVariable(name: "thread", scope: !16309, file: !2507, line: 314, type: !2400)
!16312 = !DILocalVariable(name: "mirqp", scope: !16309, file: !2507, line: 322, type: !2400)
!16313 = distinct !DILocation(line: 562, column: 28, scope: !16299)
!16314 = !DILocation(line: 0, scope: !16309, inlinedAt: !16313)
!16315 = !DILocation(line: 322, column: 41, scope: !16309, inlinedAt: !16313)
!16316 = !DILocation(line: 324, column: 12, scope: !16317, inlinedAt: !16313)
!16317 = distinct !DILexicalBlock(scope: !16309, file: !2507, line: 324, column: 6)
!16318 = !DILocation(line: 324, column: 20, scope: !16317, inlinedAt: !16313)
!16319 = !DILocation(line: 324, column: 31, scope: !16317, inlinedAt: !16313)
!16320 = !DILocation(line: 324, column: 39, scope: !16317, inlinedAt: !16313)
!16321 = !DILocation(line: 324, column: 43, scope: !16317, inlinedAt: !16313)
!16322 = !DILocation(line: 324, column: 6, scope: !16309, inlinedAt: !16313)
!16323 = !DILocation(line: 325, column: 8, scope: !16324, inlinedAt: !16313)
!16324 = distinct !DILexicalBlock(scope: !16325, file: !2507, line: 325, column: 7)
!16325 = distinct !DILexicalBlock(scope: !16317, file: !2507, line: 324, column: 64)
!16326 = !DILocation(line: 325, column: 7, scope: !16325, inlinedAt: !16313)
!16327 = !DILocation(line: 328, column: 36, scope: !16328, inlinedAt: !16313)
!16328 = distinct !DILexicalBlock(scope: !16324, file: !2507, line: 327, column: 10)
!16329 = !DILocation(line: 340, column: 17, scope: !16309, inlinedAt: !16313)
!16330 = !DILocation(line: 340, column: 9, scope: !16309, inlinedAt: !16313)
!16331 = !DILocalVariable(name: "thread", arg: 1, scope: !16332, file: !2507, line: 127, type: !2400)
!16332 = distinct !DISubprogram(name: "should_preempt", scope: !2507, file: !2507, line: 127, type: !16333, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16335)
!16333 = !DISubroutineType(types: !16334)
!16334 = !{!505, !2400, !105}
!16335 = !{!16331, !16336}
!16336 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16332, file: !2507, line: 128, type: !105)
!16337 = !DILocation(line: 0, scope: !16332, inlinedAt: !16338)
!16338 = distinct !DILocation(line: 564, column: 6, scope: !16339)
!16339 = distinct !DILexicalBlock(scope: !16299, file: !2507, line: 564, column: 6)
!16340 = !DILocation(line: 133, column: 17, scope: !16341, inlinedAt: !16338)
!16341 = distinct !DILexicalBlock(scope: !16332, file: !2507, line: 133, column: 6)
!16342 = !DILocation(line: 0, scope: !16339)
!16343 = !DILocation(line: 133, column: 6, scope: !16332, inlinedAt: !16338)
!16344 = !DILocation(line: 137, column: 2, scope: !16345, inlinedAt: !16338)
!16345 = distinct !DILexicalBlock(scope: !16346, file: !2507, line: 137, column: 2)
!16346 = distinct !DILexicalBlock(scope: !16332, file: !2507, line: 137, column: 2)
!16347 = !DILocation(line: 137, column: 2, scope: !16346, inlinedAt: !16338)
!16348 = !DILocation(line: 137, column: 2, scope: !16349, inlinedAt: !16338)
!16349 = distinct !DILexicalBlock(scope: !16345, file: !2507, line: 137, column: 2)
!16350 = !DILocation(line: 140, column: 6, scope: !16351, inlinedAt: !16338)
!16351 = distinct !DILexicalBlock(scope: !16332, file: !2507, line: 140, column: 6)
!16352 = !DILocation(line: 140, column: 6, scope: !16332, inlinedAt: !16338)
!16353 = !DILocation(line: 150, column: 9, scope: !16354, inlinedAt: !16338)
!16354 = distinct !DILexicalBlock(scope: !16332, file: !2507, line: 149, column: 6)
!16355 = !DILocation(line: 149, column: 6, scope: !16332, inlinedAt: !16338)
!16356 = !DILocation(line: 157, column: 6, scope: !16357, inlinedAt: !16338)
!16357 = distinct !DILexicalBlock(scope: !16332, file: !2507, line: 157, column: 6)
!16358 = !DILocation(line: 157, column: 27, scope: !16357, inlinedAt: !16338)
!16359 = !DILocation(line: 157, column: 30, scope: !16357, inlinedAt: !16338)
!16360 = !DILocation(line: 564, column: 6, scope: !16299)
!16361 = !DILocation(line: 566, column: 14, scope: !16362)
!16362 = distinct !DILexicalBlock(scope: !16363, file: !2507, line: 566, column: 7)
!16363 = distinct !DILexicalBlock(scope: !16339, file: !2507, line: 564, column: 42)
!16364 = !DILocation(line: 566, column: 7, scope: !16363)
!16365 = !DILocation(line: 567, column: 4, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16362, file: !2507, line: 566, column: 27)
!16367 = !DILocation(line: 568, column: 3, scope: !16366)
!16368 = !DILocation(line: 570, column: 3, scope: !16363)
!16369 = !DILocation(line: 572, column: 2, scope: !16363)
!16370 = !DILocation(line: 585, column: 1, scope: !16299)
!16371 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2507, file: !2507, line: 1144, type: !16372, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16374)
!16372 = !DISubroutineType(types: !16373)
!16373 = !{!2400, !16183}
!16374 = !{!16375, !16376, !16377}
!16375 = !DILocalVariable(name: "pq", arg: 1, scope: !16371, file: !2507, line: 1144, type: !16183)
!16376 = !DILocalVariable(name: "thread", scope: !16371, file: !2507, line: 1146, type: !2400)
!16377 = !DILocalVariable(name: "n", scope: !16371, file: !2507, line: 1147, type: !2503)
!16378 = !DILocation(line: 0, scope: !16371)
!16379 = !DILocation(line: 1147, column: 19, scope: !16371)
!16380 = !DILocation(line: 1152, column: 2, scope: !16371)
!16381 = distinct !DISubprogram(name: "is_metairq", scope: !2507, file: !2507, line: 68, type: !15933, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16382)
!16382 = !{!16383}
!16383 = !DILocalVariable(name: "thread", arg: 1, scope: !16381, file: !2507, line: 68, type: !2400)
!16384 = !DILocation(line: 0, scope: !16381)
!16385 = !DILocation(line: 71, column: 23, scope: !16381)
!16386 = !DILocation(line: 72, column: 3, scope: !16381)
!16387 = !DILocation(line: 71, column: 2, scope: !16381)
!16388 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14312, file: !14312, line: 115, type: !16098, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16389)
!16389 = !{!16390}
!16390 = !DILocalVariable(name: "thread", arg: 1, scope: !16388, file: !14312, line: 115, type: !2400)
!16391 = !DILocation(line: 0, scope: !16388)
!16392 = !DILocation(line: 117, column: 46, scope: !16388)
!16393 = !DILocation(line: 117, column: 10, scope: !16388)
!16394 = !DILocation(line: 117, column: 9, scope: !16388)
!16395 = !DILocation(line: 117, column: 2, scope: !16388)
!16396 = distinct !DISubprogram(name: "is_preempt", scope: !2507, file: !2507, line: 62, type: !15933, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16397)
!16397 = !{!16398}
!16398 = !DILocalVariable(name: "thread", arg: 1, scope: !16396, file: !2507, line: 62, type: !2400)
!16399 = !DILocation(line: 0, scope: !16396)
!16400 = !DILocation(line: 65, column: 22, scope: !16396)
!16401 = !DILocation(line: 65, column: 30, scope: !16396)
!16402 = !DILocation(line: 65, column: 2, scope: !16396)
!16403 = distinct !DISubprogram(name: "update_metairq_preempt", scope: !2507, file: !2507, line: 545, type: !15915, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16404)
!16404 = !{!16405}
!16405 = !DILocalVariable(name: "thread", arg: 1, scope: !16403, file: !2507, line: 545, type: !2400)
!16406 = !DILocation(line: 0, scope: !16403)
!16407 = !DILocation(line: 548, column: 6, scope: !16408)
!16408 = distinct !DILexicalBlock(scope: !16403, file: !2507, line: 548, column: 6)
!16409 = !DILocation(line: 548, column: 25, scope: !16408)
!16410 = !DILocation(line: 548, column: 40, scope: !16408)
!16411 = !DILocation(line: 548, column: 29, scope: !16408)
!16412 = !DILocation(line: 548, column: 50, scope: !16408)
!16413 = !DILocation(line: 549, column: 7, scope: !16408)
!16414 = !DILocation(line: 548, column: 6, scope: !16403)
!16415 = !DILocation(line: 552, column: 37, scope: !16416)
!16416 = distinct !DILexicalBlock(scope: !16408, file: !2507, line: 552, column: 13)
!16417 = !DILocation(line: 552, column: 13, scope: !16408)
!16418 = !DILocation(line: 0, scope: !16408)
!16419 = !DILocation(line: 557, column: 1, scope: !16403)
!16420 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14741, file: !14741, line: 35, type: !16421, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16425)
!16421 = !DISubroutineType(types: !16422)
!16422 = !{!505, !16423}
!16423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16424, size: 32)
!16424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2451)
!16425 = !{!16426}
!16426 = !DILocalVariable(name: "to", arg: 1, scope: !16420, file: !14741, line: 35, type: !16423)
!16427 = !DILocation(line: 0, scope: !16420)
!16428 = !DILocation(line: 37, column: 35, scope: !16420)
!16429 = !DILocation(line: 37, column: 10, scope: !16420)
!16430 = !DILocation(line: 37, column: 9, scope: !16420)
!16431 = !DILocation(line: 37, column: 2, scope: !16420)
!16432 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !16433, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16437)
!16433 = !DISubroutineType(types: !16434)
!16434 = !{!505, !16435}
!16435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16436, size: 32)
!16436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2410)
!16437 = !{!16438}
!16438 = !DILocalVariable(name: "node", arg: 1, scope: !16432, file: !137, line: 225, type: !16435)
!16439 = !DILocation(line: 0, scope: !16432)
!16440 = !DILocation(line: 227, column: 15, scope: !16432)
!16441 = !DILocation(line: 227, column: 20, scope: !16432)
!16442 = !DILocation(line: 227, column: 2, scope: !16432)
!16443 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !16272, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16444)
!16444 = !{!16445, !16446}
!16445 = !DILocalVariable(name: "list", arg: 1, scope: !16443, file: !137, line: 325, type: !16183)
!16446 = !DILocalVariable(name: "node", arg: 2, scope: !16443, file: !137, line: 326, type: !2503)
!16447 = !DILocation(line: 0, scope: !16443)
!16448 = !DILocation(line: 328, column: 24, scope: !16443)
!16449 = !DILocation(line: 328, column: 15, scope: !16443)
!16450 = !DILocation(line: 328, column: 9, scope: !16443)
!16451 = !DILocation(line: 328, column: 45, scope: !16443)
!16452 = !DILocation(line: 328, column: 2, scope: !16443)
!16453 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !16454, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16456)
!16454 = !DISubroutineType(types: !16455)
!16455 = !{!505, !16183}
!16456 = !{!16457}
!16457 = !DILocalVariable(name: "list", arg: 1, scope: !16453, file: !137, line: 266, type: !16183)
!16458 = !DILocation(line: 0, scope: !16453)
!16459 = !DILocation(line: 268, column: 15, scope: !16453)
!16460 = !DILocation(line: 268, column: 20, scope: !16453)
!16461 = !DILocation(line: 268, column: 2, scope: !16453)
!16462 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !16463, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16465)
!16463 = !DISubroutineType(types: !16464)
!16464 = !{null, !2503}
!16465 = !{!16466, !16467, !16468}
!16466 = !DILocalVariable(name: "node", arg: 1, scope: !16462, file: !137, line: 496, type: !2503)
!16467 = !DILocalVariable(name: "prev", scope: !16462, file: !137, line: 498, type: !16260)
!16468 = !DILocalVariable(name: "next", scope: !16462, file: !137, line: 499, type: !16260)
!16469 = !DILocation(line: 0, scope: !16462)
!16470 = !DILocation(line: 498, column: 34, scope: !16462)
!16471 = !DILocation(line: 499, column: 34, scope: !16462)
!16472 = !DILocation(line: 501, column: 8, scope: !16462)
!16473 = !DILocation(line: 501, column: 13, scope: !16462)
!16474 = !DILocation(line: 502, column: 8, scope: !16462)
!16475 = !DILocation(line: 502, column: 13, scope: !16462)
!16476 = !DILocation(line: 503, column: 2, scope: !16462)
!16477 = !DILocation(line: 504, column: 1, scope: !16462)
!16478 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !16463, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16479)
!16479 = !{!16480}
!16480 = !DILocalVariable(name: "node", arg: 1, scope: !16478, file: !137, line: 211, type: !2503)
!16481 = !DILocation(line: 0, scope: !16478)
!16482 = !DILocation(line: 213, column: 8, scope: !16478)
!16483 = !DILocation(line: 213, column: 13, scope: !16478)
!16484 = !DILocation(line: 214, column: 8, scope: !16478)
!16485 = !DILocation(line: 214, column: 13, scope: !16478)
!16486 = !DILocation(line: 215, column: 1, scope: !16478)
!16487 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14312, file: !14312, line: 131, type: !16488, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16490)
!16488 = !DISubroutineType(types: !16489)
!16489 = !{!505, !2400, !113}
!16490 = !{!16491, !16492}
!16491 = !DILocalVariable(name: "thread", arg: 1, scope: !16487, file: !14312, line: 131, type: !2400)
!16492 = !DILocalVariable(name: "state", arg: 2, scope: !16487, file: !14312, line: 131, type: !113)
!16493 = !DILocation(line: 0, scope: !16487)
!16494 = !DILocation(line: 133, column: 23, scope: !16487)
!16495 = !DILocation(line: 133, column: 10, scope: !16487)
!16496 = !DILocation(line: 133, column: 36, scope: !16487)
!16497 = !DILocation(line: 133, column: 45, scope: !16487)
!16498 = !DILocation(line: 133, column: 2, scope: !16487)
!16499 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14312, file: !14312, line: 211, type: !16500, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16502)
!16500 = !DISubroutineType(types: !16501)
!16501 = !{!505, !105, !105}
!16502 = !{!16503, !16504}
!16503 = !DILocalVariable(name: "prio", arg: 1, scope: !16499, file: !14312, line: 211, type: !105)
!16504 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16499, file: !14312, line: 211, type: !105)
!16505 = !DILocation(line: 0, scope: !16499)
!16506 = !DILocation(line: 213, column: 9, scope: !16499)
!16507 = !DILocation(line: 213, column: 2, scope: !16499)
!16508 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14312, file: !14312, line: 206, type: !16500, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16509)
!16509 = !{!16510, !16511}
!16510 = !DILocalVariable(name: "prio1", arg: 1, scope: !16508, file: !14312, line: 206, type: !105)
!16511 = !DILocalVariable(name: "prio2", arg: 2, scope: !16508, file: !14312, line: 206, type: !105)
!16512 = !DILocation(line: 0, scope: !16508)
!16513 = !DILocation(line: 208, column: 15, scope: !16508)
!16514 = !DILocation(line: 208, column: 2, scope: !16508)
!16515 = distinct !DISubprogram(name: "z_ready_thread", scope: !2507, file: !2507, line: 635, type: !15915, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16516)
!16516 = !{!16517, !16518, !16520}
!16517 = !DILocalVariable(name: "thread", arg: 1, scope: !16515, file: !2507, line: 635, type: !2400)
!16518 = !DILocalVariable(name: "__i", scope: !16519, file: !2507, line: 637, type: !15949)
!16519 = distinct !DILexicalBlock(scope: !16515, file: !2507, line: 637, column: 2)
!16520 = !DILocalVariable(name: "__key", scope: !16519, file: !2507, line: 637, type: !15949)
!16521 = !DILocation(line: 0, scope: !16515)
!16522 = !DILocation(line: 0, scope: !16519)
!16523 = !DILocation(line: 0, scope: !15957, inlinedAt: !16524)
!16524 = distinct !DILocation(line: 637, column: 2, scope: !16519)
!16525 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !16526)
!16526 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !16524)
!16527 = !DILocation(line: 0, scope: !15966, inlinedAt: !16526)
!16528 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !16524)
!16529 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !16524)
!16530 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !16524)
!16531 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !16524)
!16532 = !DILocation(line: 639, column: 4, scope: !16533)
!16533 = distinct !DILexicalBlock(scope: !16534, file: !2507, line: 638, column: 41)
!16534 = distinct !DILexicalBlock(scope: !16535, file: !2507, line: 638, column: 7)
!16535 = distinct !DILexicalBlock(scope: !16536, file: !2507, line: 637, column: 26)
!16536 = distinct !DILexicalBlock(scope: !16519, file: !2507, line: 637, column: 2)
!16537 = !DILocation(line: 0, scope: !15991, inlinedAt: !16538)
!16538 = distinct !DILocation(line: 637, column: 2, scope: !16536)
!16539 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !16538)
!16540 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !16538)
!16541 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !16538)
!16542 = !DILocation(line: 0, scope: !16005, inlinedAt: !16543)
!16543 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !16538)
!16544 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !16543)
!16545 = !DILocation(line: 642, column: 1, scope: !16515)
!16546 = distinct !DISubprogram(name: "ready_thread", scope: !2507, file: !2507, line: 617, type: !15915, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16547)
!16547 = !{!16548}
!16548 = !DILocalVariable(name: "thread", arg: 1, scope: !16546, file: !2507, line: 617, type: !2400)
!16549 = !DILocation(line: 0, scope: !16546)
!16550 = !DILocation(line: 626, column: 7, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16546, file: !2507, line: 626, column: 6)
!16552 = !DILocation(line: 626, column: 34, scope: !16551)
!16553 = !DILocation(line: 626, column: 37, scope: !16551)
!16554 = !DILocation(line: 626, column: 6, scope: !16546)
!16555 = !DILocation(line: 0, scope: !16166, inlinedAt: !16556)
!16556 = distinct !DILocation(line: 629, column: 3, scope: !16557)
!16557 = distinct !DILexicalBlock(scope: !16551, file: !2507, line: 626, column: 64)
!16558 = !DILocation(line: 252, column: 15, scope: !16166, inlinedAt: !16556)
!16559 = !DILocation(line: 252, column: 28, scope: !16166, inlinedAt: !16556)
!16560 = !DILocation(line: 0, scope: !16173, inlinedAt: !16561)
!16561 = distinct !DILocation(line: 254, column: 3, scope: !16177, inlinedAt: !16556)
!16562 = !DILocation(line: 0, scope: !16180, inlinedAt: !16563)
!16563 = distinct !DILocation(line: 229, column: 2, scope: !16173, inlinedAt: !16561)
!16564 = !DILocation(line: 186, column: 2, scope: !16190, inlinedAt: !16563)
!16565 = !DILocation(line: 186, column: 2, scope: !16191, inlinedAt: !16563)
!16566 = !DILocation(line: 186, column: 2, scope: !16194, inlinedAt: !16563)
!16567 = !DILocation(line: 188, column: 2, scope: !16196, inlinedAt: !16563)
!16568 = !DILocation(line: 188, column: 2, scope: !16198, inlinedAt: !16563)
!16569 = !DILocation(line: 0, scope: !16196, inlinedAt: !16563)
!16570 = !DILocation(line: 189, column: 7, scope: !16201, inlinedAt: !16563)
!16571 = !DILocation(line: 189, column: 35, scope: !16201, inlinedAt: !16563)
!16572 = !DILocation(line: 189, column: 7, scope: !16202, inlinedAt: !16563)
!16573 = !DILocation(line: 191, column: 21, scope: !16206, inlinedAt: !16563)
!16574 = !DILocation(line: 190, column: 4, scope: !16206, inlinedAt: !16563)
!16575 = !DILocation(line: 192, column: 4, scope: !16206, inlinedAt: !16563)
!16576 = distinct !{!16576, !16567, !16577}
!16577 = !DILocation(line: 194, column: 2, scope: !16196, inlinedAt: !16563)
!16578 = !DILocation(line: 196, column: 37, scope: !16180, inlinedAt: !16563)
!16579 = !DILocation(line: 196, column: 2, scope: !16180, inlinedAt: !16563)
!16580 = !DILocation(line: 197, column: 1, scope: !16180, inlinedAt: !16563)
!16581 = !DILocation(line: 630, column: 3, scope: !16557)
!16582 = !DILocation(line: 632, column: 2, scope: !16557)
!16583 = !DILocation(line: 633, column: 1, scope: !16546)
!16584 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14312, file: !14312, line: 120, type: !16098, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16585)
!16585 = !{!16586}
!16586 = !DILocalVariable(name: "thread", arg: 1, scope: !16584, file: !14312, line: 120, type: !2400)
!16587 = !DILocation(line: 0, scope: !16584)
!16588 = !DILocation(line: 122, column: 12, scope: !16584)
!16589 = !DILocation(line: 122, column: 62, scope: !16584)
!16590 = !DILocation(line: 123, column: 4, scope: !16584)
!16591 = !DILocation(line: 122, column: 2, scope: !16584)
!16592 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2507, file: !2507, line: 644, type: !15915, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16593)
!16593 = !{!16594, !16595, !16597}
!16594 = !DILocalVariable(name: "thread", arg: 1, scope: !16592, file: !2507, line: 644, type: !2400)
!16595 = !DILocalVariable(name: "__i", scope: !16596, file: !2507, line: 646, type: !15949)
!16596 = distinct !DILexicalBlock(scope: !16592, file: !2507, line: 646, column: 2)
!16597 = !DILocalVariable(name: "__key", scope: !16596, file: !2507, line: 646, type: !15949)
!16598 = !DILocation(line: 0, scope: !16592)
!16599 = !DILocation(line: 0, scope: !16596)
!16600 = !DILocation(line: 0, scope: !15957, inlinedAt: !16601)
!16601 = distinct !DILocation(line: 646, column: 2, scope: !16596)
!16602 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !16603)
!16603 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !16601)
!16604 = !DILocation(line: 0, scope: !15966, inlinedAt: !16603)
!16605 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !16601)
!16606 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !16601)
!16607 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !16601)
!16608 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !16601)
!16609 = !DILocation(line: 647, column: 3, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16611, file: !2507, line: 646, column: 26)
!16611 = distinct !DILexicalBlock(scope: !16596, file: !2507, line: 646, column: 2)
!16612 = !DILocation(line: 0, scope: !15991, inlinedAt: !16613)
!16613 = distinct !DILocation(line: 646, column: 2, scope: !16611)
!16614 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !16613)
!16615 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !16613)
!16616 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !16613)
!16617 = !DILocation(line: 0, scope: !16005, inlinedAt: !16618)
!16618 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !16613)
!16619 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !16618)
!16620 = !DILocation(line: 649, column: 1, scope: !16592)
!16621 = distinct !DISubprogram(name: "z_sched_start", scope: !2507, file: !2507, line: 651, type: !15915, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16622)
!16622 = !{!16623, !16624}
!16623 = !DILocalVariable(name: "thread", arg: 1, scope: !16621, file: !2507, line: 651, type: !2400)
!16624 = !DILocalVariable(name: "key", scope: !16621, file: !2507, line: 653, type: !15949)
!16625 = !DILocation(line: 0, scope: !16621)
!16626 = !DILocation(line: 0, scope: !15957, inlinedAt: !16627)
!16627 = distinct !DILocation(line: 653, column: 25, scope: !16621)
!16628 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !16629)
!16629 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !16627)
!16630 = !DILocation(line: 0, scope: !15966, inlinedAt: !16629)
!16631 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !16627)
!16632 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !16627)
!16633 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !16627)
!16634 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !16627)
!16635 = !DILocation(line: 655, column: 6, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16621, file: !2507, line: 655, column: 6)
!16637 = !DILocation(line: 655, column: 6, scope: !16621)
!16638 = !DILocation(line: 0, scope: !15991, inlinedAt: !16639)
!16639 = distinct !DILocation(line: 656, column: 3, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16636, file: !2507, line: 655, column: 36)
!16641 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !16639)
!16642 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !16639)
!16643 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !16639)
!16644 = !DILocation(line: 0, scope: !16005, inlinedAt: !16645)
!16645 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !16639)
!16646 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !16645)
!16647 = !DILocation(line: 657, column: 3, scope: !16640)
!16648 = !DILocation(line: 660, column: 2, scope: !16621)
!16649 = !DILocation(line: 661, column: 2, scope: !16621)
!16650 = !DILocation(line: 662, column: 2, scope: !16621)
!16651 = !DILocation(line: 663, column: 1, scope: !16621)
!16652 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14312, file: !14312, line: 126, type: !16098, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16653)
!16653 = !{!16654}
!16654 = !DILocalVariable(name: "thread", arg: 1, scope: !16652, file: !14312, line: 126, type: !2400)
!16655 = !DILocation(line: 0, scope: !16652)
!16656 = !DILocation(line: 128, column: 23, scope: !16652)
!16657 = !DILocation(line: 128, column: 36, scope: !16652)
!16658 = !DILocation(line: 128, column: 56, scope: !16652)
!16659 = !DILocation(line: 128, column: 2, scope: !16652)
!16660 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14312, file: !14312, line: 155, type: !15915, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16661)
!16661 = !{!16662}
!16662 = !DILocalVariable(name: "thread", arg: 1, scope: !16660, file: !14312, line: 155, type: !2400)
!16663 = !DILocation(line: 0, scope: !16660)
!16664 = !DILocation(line: 157, column: 15, scope: !16660)
!16665 = !DILocation(line: 157, column: 28, scope: !16660)
!16666 = !DILocation(line: 158, column: 1, scope: !16660)
!16667 = distinct !DISubprogram(name: "z_reschedule", scope: !2507, file: !2507, line: 967, type: !15992, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16668)
!16668 = !{!16669, !16670}
!16669 = !DILocalVariable(name: "lock", arg: 1, scope: !16667, file: !2507, line: 967, type: !15960)
!16670 = !DILocalVariable(name: "key", arg: 2, scope: !16667, file: !2507, line: 967, type: !15949)
!16671 = !DILocation(line: 0, scope: !16667)
!16672 = !DILocation(line: 969, column: 6, scope: !16673)
!16673 = distinct !DILexicalBlock(scope: !16667, file: !2507, line: 969, column: 6)
!16674 = !DILocation(line: 969, column: 23, scope: !16673)
!16675 = !DILocation(line: 969, column: 26, scope: !16673)
!16676 = !DILocation(line: 969, column: 6, scope: !16667)
!16677 = !DILocalVariable(name: "key", arg: 2, scope: !16678, file: !14437, line: 193, type: !15949)
!16678 = distinct !DISubprogram(name: "z_swap", scope: !14437, file: !14437, line: 193, type: !16679, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16681)
!16679 = !DISubroutineType(types: !16680)
!16680 = !{!105, !15960, !15949}
!16681 = !{!16682, !16677}
!16682 = !DILocalVariable(name: "lock", arg: 1, scope: !16678, file: !14437, line: 193, type: !15960)
!16683 = !DILocation(line: 0, scope: !16678, inlinedAt: !16684)
!16684 = distinct !DILocation(line: 970, column: 3, scope: !16685)
!16685 = distinct !DILexicalBlock(scope: !16673, file: !2507, line: 969, column: 39)
!16686 = !DILocalVariable(name: "l", arg: 1, scope: !16687, file: !236, line: 221, type: !15960)
!16687 = distinct !DISubprogram(name: "k_spin_release", scope: !236, file: !236, line: 221, type: !16688, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16690)
!16688 = !DISubroutineType(types: !16689)
!16689 = !{null, !15960}
!16690 = !{!16686}
!16691 = !DILocation(line: 0, scope: !16687, inlinedAt: !16692)
!16692 = distinct !DILocation(line: 195, column: 2, scope: !16678, inlinedAt: !16684)
!16693 = !DILocation(line: 225, column: 2, scope: !16694, inlinedAt: !16692)
!16694 = distinct !DILexicalBlock(scope: !16695, file: !236, line: 225, column: 2)
!16695 = distinct !DILexicalBlock(scope: !16687, file: !236, line: 225, column: 2)
!16696 = !DILocation(line: 225, column: 2, scope: !16695, inlinedAt: !16692)
!16697 = !DILocation(line: 225, column: 2, scope: !16698, inlinedAt: !16692)
!16698 = distinct !DILexicalBlock(scope: !16694, file: !236, line: 225, column: 2)
!16699 = !DILocation(line: 196, column: 9, scope: !16678, inlinedAt: !16684)
!16700 = !DILocation(line: 971, column: 2, scope: !16685)
!16701 = !DILocation(line: 0, scope: !15991, inlinedAt: !16702)
!16702 = distinct !DILocation(line: 972, column: 3, scope: !16703)
!16703 = distinct !DILexicalBlock(scope: !16673, file: !2507, line: 971, column: 9)
!16704 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !16702)
!16705 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !16702)
!16706 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !16702)
!16707 = !DILocation(line: 0, scope: !16005, inlinedAt: !16708)
!16708 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !16702)
!16709 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !16708)
!16710 = !DILocation(line: 975, column: 1, scope: !16667)
!16711 = distinct !DISubprogram(name: "resched", scope: !2507, file: !2507, line: 940, type: !16712, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16714)
!16712 = !DISubroutineType(types: !16713)
!16713 = !{!505, !113}
!16714 = !{!16715}
!16715 = !DILocalVariable(name: "key", arg: 1, scope: !16711, file: !2507, line: 940, type: !113)
!16716 = !DILocation(line: 0, scope: !16711)
!16717 = !DILocalVariable(name: "key", arg: 1, scope: !16718, file: !7419, line: 112, type: !32)
!16718 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7419, file: !7419, line: 112, type: !16719, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16721)
!16719 = !DISubroutineType(types: !16720)
!16720 = !{!505, !32}
!16721 = !{!16717}
!16722 = !DILocation(line: 0, scope: !16718, inlinedAt: !16723)
!16723 = distinct !DILocation(line: 946, column: 9, scope: !16711)
!16724 = !DILocation(line: 115, column: 13, scope: !16718, inlinedAt: !16723)
!16725 = !DILocation(line: 946, column: 32, scope: !16711)
!16726 = !DILocation(line: 1031, column: 3, scope: !16727, inlinedAt: !16730)
!16727 = distinct !DISubprogram(name: "__get_IPSR", scope: !7754, file: !7754, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16728)
!16728 = !{!16729}
!16729 = !DILocalVariable(name: "result", scope: !16727, file: !7754, line: 1029, type: !113)
!16730 = distinct !DILocation(line: 48, column: 10, scope: !16731, inlinedAt: !16732)
!16731 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8760, file: !8760, line: 46, type: !8761, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !397)
!16732 = distinct !DILocation(line: 946, column: 36, scope: !16711)
!16733 = !{i64 2490413}
!16734 = !DILocation(line: 0, scope: !16727, inlinedAt: !16730)
!16735 = !DILocation(line: 48, column: 9, scope: !16731, inlinedAt: !16732)
!16736 = !DILocation(line: 946, column: 2, scope: !16711)
!16737 = distinct !DISubprogram(name: "need_swap", scope: !2507, file: !2507, line: 953, type: !8761, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16738)
!16738 = !{!16739}
!16739 = !DILocalVariable(name: "new_thread", scope: !16737, file: !2507, line: 959, type: !2400)
!16740 = !DILocation(line: 962, column: 31, scope: !16737)
!16741 = !DILocation(line: 0, scope: !16737)
!16742 = !DILocation(line: 963, column: 23, scope: !16737)
!16743 = !DILocation(line: 963, column: 20, scope: !16737)
!16744 = !DILocation(line: 963, column: 2, scope: !16737)
!16745 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14437, file: !14437, line: 181, type: !7764, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16746)
!16746 = !{!16747, !16748}
!16747 = !DILocalVariable(name: "key", arg: 1, scope: !16745, file: !14437, line: 181, type: !32)
!16748 = !DILocalVariable(name: "ret", scope: !16745, file: !14437, line: 183, type: !105)
!16749 = !DILocation(line: 0, scope: !16745)
!16750 = !DILocation(line: 185, column: 8, scope: !16745)
!16751 = !DILocation(line: 186, column: 2, scope: !16745)
!16752 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2507, file: !2507, line: 665, type: !15915, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16753)
!16753 = !{!16754, !16755, !16757}
!16754 = !DILocalVariable(name: "thread", arg: 1, scope: !16752, file: !2507, line: 665, type: !2400)
!16755 = !DILocalVariable(name: "__i", scope: !16756, file: !2507, line: 671, type: !15949)
!16756 = distinct !DILexicalBlock(scope: !16752, file: !2507, line: 671, column: 2)
!16757 = !DILocalVariable(name: "__key", scope: !16756, file: !2507, line: 671, type: !15949)
!16758 = !DILocation(line: 0, scope: !16752)
!16759 = !DILocation(line: 669, column: 8, scope: !16752)
!16760 = !DILocation(line: 0, scope: !16756)
!16761 = !DILocation(line: 0, scope: !15957, inlinedAt: !16762)
!16762 = distinct !DILocation(line: 671, column: 2, scope: !16756)
!16763 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !16764)
!16764 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !16762)
!16765 = !DILocation(line: 0, scope: !15966, inlinedAt: !16764)
!16766 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !16762)
!16767 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !16762)
!16768 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !16762)
!16769 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !16762)
!16770 = !DILocation(line: 672, column: 7, scope: !16771)
!16771 = distinct !DILexicalBlock(scope: !16772, file: !2507, line: 672, column: 7)
!16772 = distinct !DILexicalBlock(scope: !16773, file: !2507, line: 671, column: 26)
!16773 = distinct !DILexicalBlock(scope: !16756, file: !2507, line: 671, column: 2)
!16774 = !DILocation(line: 672, column: 7, scope: !16772)
!16775 = !DILocation(line: 0, scope: !16149, inlinedAt: !16776)
!16776 = distinct !DILocation(line: 673, column: 4, scope: !16777)
!16777 = distinct !DILexicalBlock(scope: !16771, file: !2507, line: 672, column: 35)
!16778 = !DILocation(line: 266, column: 15, scope: !16149, inlinedAt: !16776)
!16779 = !DILocation(line: 266, column: 28, scope: !16149, inlinedAt: !16776)
!16780 = !DILocation(line: 0, scope: !16157, inlinedAt: !16781)
!16781 = distinct !DILocation(line: 268, column: 3, scope: !16161, inlinedAt: !16776)
!16782 = !DILocation(line: 234, column: 2, scope: !16157, inlinedAt: !16781)
!16783 = !DILocation(line: 674, column: 3, scope: !16777)
!16784 = !DILocation(line: 675, column: 3, scope: !16772)
!16785 = !DILocation(line: 676, column: 26, scope: !16772)
!16786 = !DILocation(line: 676, column: 23, scope: !16772)
!16787 = !DILocation(line: 676, column: 3, scope: !16772)
!16788 = !DILocation(line: 0, scope: !15991, inlinedAt: !16789)
!16789 = distinct !DILocation(line: 671, column: 2, scope: !16773)
!16790 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !16789)
!16791 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !16789)
!16792 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !16789)
!16793 = !DILocation(line: 0, scope: !16005, inlinedAt: !16794)
!16794 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !16789)
!16795 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !16794)
!16796 = !DILocation(line: 679, column: 16, scope: !16797)
!16797 = distinct !DILexicalBlock(scope: !16752, file: !2507, line: 679, column: 6)
!16798 = !DILocation(line: 679, column: 13, scope: !16797)
!16799 = !DILocation(line: 679, column: 6, scope: !16752)
!16800 = !DILocation(line: 680, column: 3, scope: !16801)
!16801 = distinct !DILexicalBlock(scope: !16797, file: !2507, line: 679, column: 26)
!16802 = !DILocation(line: 681, column: 2, scope: !16801)
!16803 = !DILocation(line: 684, column: 1, scope: !16752)
!16804 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14741, file: !14741, line: 52, type: !15933, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16805)
!16805 = !{!16806}
!16806 = !DILocalVariable(name: "thread", arg: 1, scope: !16804, file: !14741, line: 52, type: !2400)
!16807 = !DILocation(line: 0, scope: !16804)
!16808 = !DILocation(line: 54, column: 39, scope: !16804)
!16809 = !DILocation(line: 54, column: 9, scope: !16804)
!16810 = !DILocation(line: 54, column: 2, scope: !16804)
!16811 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14312, file: !14312, line: 141, type: !15915, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16812)
!16812 = !{!16813}
!16813 = !DILocalVariable(name: "thread", arg: 1, scope: !16811, file: !14312, line: 141, type: !2400)
!16814 = !DILocation(line: 0, scope: !16811)
!16815 = !DILocation(line: 143, column: 15, scope: !16811)
!16816 = !DILocation(line: 143, column: 28, scope: !16811)
!16817 = !DILocation(line: 146, column: 1, scope: !16811)
!16818 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14312, file: !14312, line: 73, type: !266, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !397)
!16819 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !16820)
!16820 = distinct !DILocation(line: 75, column: 30, scope: !16818)
!16821 = !DILocation(line: 0, scope: !15966, inlinedAt: !16820)
!16822 = !DILocation(line: 75, column: 9, scope: !16818)
!16823 = !DILocation(line: 76, column: 1, scope: !16818)
!16824 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2507, file: !2507, line: 977, type: !7443, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16825)
!16825 = !{!16826}
!16826 = !DILocalVariable(name: "key", arg: 1, scope: !16824, file: !2507, line: 977, type: !113)
!16827 = !DILocation(line: 0, scope: !16824)
!16828 = !DILocation(line: 979, column: 6, scope: !16829)
!16829 = distinct !DILexicalBlock(scope: !16824, file: !2507, line: 979, column: 6)
!16830 = !DILocation(line: 979, column: 6, scope: !16824)
!16831 = !DILocation(line: 980, column: 3, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !16829, file: !2507, line: 979, column: 20)
!16833 = !DILocation(line: 981, column: 2, scope: !16832)
!16834 = !DILocation(line: 0, scope: !16005, inlinedAt: !16835)
!16835 = distinct !DILocation(line: 982, column: 3, scope: !16836)
!16836 = distinct !DILexicalBlock(scope: !16829, file: !2507, line: 981, column: 9)
!16837 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !16835)
!16838 = !DILocation(line: 985, column: 1, scope: !16824)
!16839 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2507, file: !2507, line: 695, type: !15915, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16840)
!16840 = !{!16841, !16842}
!16841 = !DILocalVariable(name: "thread", arg: 1, scope: !16839, file: !2507, line: 695, type: !2400)
!16842 = !DILocalVariable(name: "key", scope: !16839, file: !2507, line: 699, type: !15949)
!16843 = !DILocation(line: 0, scope: !16839)
!16844 = !DILocation(line: 0, scope: !15957, inlinedAt: !16845)
!16845 = distinct !DILocation(line: 699, column: 25, scope: !16839)
!16846 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !16847)
!16847 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !16845)
!16848 = !DILocation(line: 0, scope: !15966, inlinedAt: !16847)
!16849 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !16845)
!16850 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !16845)
!16851 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !16845)
!16852 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !16845)
!16853 = !DILocation(line: 702, column: 7, scope: !16854)
!16854 = distinct !DILexicalBlock(scope: !16839, file: !2507, line: 702, column: 6)
!16855 = !DILocation(line: 702, column: 6, scope: !16839)
!16856 = !DILocation(line: 0, scope: !15991, inlinedAt: !16857)
!16857 = distinct !DILocation(line: 703, column: 3, scope: !16858)
!16858 = distinct !DILexicalBlock(scope: !16854, file: !2507, line: 702, column: 38)
!16859 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !16857)
!16860 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !16857)
!16861 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !16857)
!16862 = !DILocation(line: 0, scope: !16005, inlinedAt: !16863)
!16863 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !16857)
!16864 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !16863)
!16865 = !DILocation(line: 704, column: 3, scope: !16858)
!16866 = !DILocation(line: 707, column: 2, scope: !16839)
!16867 = !DILocation(line: 708, column: 2, scope: !16839)
!16868 = !DILocation(line: 710, column: 2, scope: !16839)
!16869 = !DILocation(line: 713, column: 1, scope: !16839)
!16870 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14312, file: !14312, line: 96, type: !16098, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16871)
!16871 = !{!16872}
!16872 = !DILocalVariable(name: "thread", arg: 1, scope: !16870, file: !14312, line: 96, type: !2400)
!16873 = !DILocation(line: 0, scope: !16870)
!16874 = !DILocation(line: 98, column: 23, scope: !16870)
!16875 = !DILocation(line: 98, column: 36, scope: !16870)
!16876 = !DILocation(line: 98, column: 57, scope: !16870)
!16877 = !DILocation(line: 98, column: 2, scope: !16870)
!16878 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14312, file: !14312, line: 148, type: !15915, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16879)
!16879 = !{!16880}
!16880 = !DILocalVariable(name: "thread", arg: 1, scope: !16878, file: !14312, line: 148, type: !2400)
!16881 = !DILocation(line: 0, scope: !16878)
!16882 = !DILocation(line: 150, column: 15, scope: !16878)
!16883 = !DILocation(line: 150, column: 28, scope: !16878)
!16884 = !DILocation(line: 153, column: 1, scope: !16878)
!16885 = distinct !DISubprogram(name: "z_pend_thread", scope: !2507, file: !2507, line: 770, type: !16886, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16892)
!16886 = !DISubroutineType(types: !16887)
!16887 = !{null, !2400, !2431, !16888}
!16888 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !16889)
!16889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !16890)
!16890 = !{!16891}
!16891 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16889, file: !108, line: 66, baseType: !107, size: 64)
!16892 = !{!16893, !16894, !16895, !16896, !16898}
!16893 = !DILocalVariable(name: "thread", arg: 1, scope: !16885, file: !2507, line: 770, type: !2400)
!16894 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16885, file: !2507, line: 770, type: !2431)
!16895 = !DILocalVariable(name: "timeout", arg: 3, scope: !16885, file: !2507, line: 771, type: !16888)
!16896 = !DILocalVariable(name: "__i", scope: !16897, file: !2507, line: 774, type: !15949)
!16897 = distinct !DILexicalBlock(scope: !16885, file: !2507, line: 774, column: 2)
!16898 = !DILocalVariable(name: "__key", scope: !16897, file: !2507, line: 774, type: !15949)
!16899 = !DILocation(line: 0, scope: !16885)
!16900 = !DILocation(line: 773, column: 2, scope: !16901)
!16901 = distinct !DILexicalBlock(scope: !16902, file: !2507, line: 773, column: 2)
!16902 = distinct !DILexicalBlock(scope: !16885, file: !2507, line: 773, column: 2)
!16903 = !DILocation(line: 773, column: 2, scope: !16902)
!16904 = !DILocation(line: 773, column: 2, scope: !16905)
!16905 = distinct !DILexicalBlock(scope: !16901, file: !2507, line: 773, column: 2)
!16906 = !DILocation(line: 0, scope: !16897)
!16907 = !DILocation(line: 0, scope: !15957, inlinedAt: !16908)
!16908 = distinct !DILocation(line: 774, column: 2, scope: !16897)
!16909 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !16910)
!16910 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !16908)
!16911 = !DILocation(line: 0, scope: !15966, inlinedAt: !16910)
!16912 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !16908)
!16913 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !16908)
!16914 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !16908)
!16915 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !16908)
!16916 = !DILocation(line: 775, column: 3, scope: !16917)
!16917 = distinct !DILexicalBlock(scope: !16918, file: !2507, line: 774, column: 26)
!16918 = distinct !DILexicalBlock(scope: !16897, file: !2507, line: 774, column: 2)
!16919 = !DILocation(line: 0, scope: !15991, inlinedAt: !16920)
!16920 = distinct !DILocation(line: 774, column: 2, scope: !16918)
!16921 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !16920)
!16922 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !16920)
!16923 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !16920)
!16924 = !DILocation(line: 0, scope: !16005, inlinedAt: !16925)
!16925 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !16920)
!16926 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !16925)
!16927 = !DILocation(line: 777, column: 1, scope: !16885)
!16928 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2507, file: !2507, line: 79, type: !16098, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16929)
!16929 = !{!16930}
!16930 = !DILocalVariable(name: "thread", arg: 1, scope: !16928, file: !2507, line: 79, type: !2400)
!16931 = !DILocation(line: 0, scope: !16928)
!16932 = !DILocation(line: 81, column: 23, scope: !16928)
!16933 = !DILocation(line: 81, column: 36, scope: !16928)
!16934 = !DILocation(line: 81, column: 53, scope: !16928)
!16935 = !DILocation(line: 81, column: 2, scope: !16928)
!16936 = distinct !DISubprogram(name: "pend_locked", scope: !2507, file: !2507, line: 760, type: !16886, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16937)
!16937 = !{!16938, !16939, !16940}
!16938 = !DILocalVariable(name: "thread", arg: 1, scope: !16936, file: !2507, line: 760, type: !2400)
!16939 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16936, file: !2507, line: 760, type: !2431)
!16940 = !DILocalVariable(name: "timeout", arg: 3, scope: !16936, file: !2507, line: 761, type: !16888)
!16941 = !DILocation(line: 0, scope: !16936)
!16942 = !DILocation(line: 766, column: 2, scope: !16936)
!16943 = !DILocation(line: 767, column: 2, scope: !16936)
!16944 = !DILocation(line: 768, column: 1, scope: !16936)
!16945 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2507, file: !2507, line: 740, type: !16946, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16948)
!16946 = !DISubroutineType(types: !16947)
!16947 = !{null, !2400, !2431}
!16948 = !{!16949, !16950}
!16949 = !DILocalVariable(name: "thread", arg: 1, scope: !16945, file: !2507, line: 740, type: !2400)
!16950 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16945, file: !2507, line: 740, type: !2431)
!16951 = !DILocation(line: 0, scope: !16945)
!16952 = !DILocation(line: 742, column: 2, scope: !16945)
!16953 = !DILocation(line: 743, column: 2, scope: !16945)
!16954 = !DILocation(line: 747, column: 13, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16945, file: !2507, line: 747, column: 6)
!16956 = !DILocation(line: 747, column: 6, scope: !16945)
!16957 = !DILocation(line: 748, column: 16, scope: !16958)
!16958 = distinct !DILexicalBlock(scope: !16955, file: !2507, line: 747, column: 22)
!16959 = !DILocation(line: 748, column: 26, scope: !16958)
!16960 = !DILocation(line: 749, column: 28, scope: !16958)
!16961 = !DILocation(line: 0, scope: !16180, inlinedAt: !16962)
!16962 = distinct !DILocation(line: 749, column: 3, scope: !16958)
!16963 = !DILocation(line: 186, column: 2, scope: !16190, inlinedAt: !16962)
!16964 = !DILocation(line: 186, column: 2, scope: !16191, inlinedAt: !16962)
!16965 = !DILocation(line: 186, column: 2, scope: !16194, inlinedAt: !16962)
!16966 = !DILocation(line: 188, column: 2, scope: !16196, inlinedAt: !16962)
!16967 = !DILocation(line: 188, column: 2, scope: !16198, inlinedAt: !16962)
!16968 = !DILocation(line: 0, scope: !16196, inlinedAt: !16962)
!16969 = !DILocation(line: 189, column: 7, scope: !16201, inlinedAt: !16962)
!16970 = !DILocation(line: 189, column: 35, scope: !16201, inlinedAt: !16962)
!16971 = !DILocation(line: 189, column: 7, scope: !16202, inlinedAt: !16962)
!16972 = !DILocation(line: 191, column: 21, scope: !16206, inlinedAt: !16962)
!16973 = !DILocation(line: 190, column: 4, scope: !16206, inlinedAt: !16962)
!16974 = !DILocation(line: 192, column: 4, scope: !16206, inlinedAt: !16962)
!16975 = distinct !{!16975, !16966, !16976}
!16976 = !DILocation(line: 194, column: 2, scope: !16196, inlinedAt: !16962)
!16977 = !DILocation(line: 196, column: 37, scope: !16180, inlinedAt: !16962)
!16978 = !DILocation(line: 196, column: 2, scope: !16180, inlinedAt: !16962)
!16979 = !DILocation(line: 197, column: 1, scope: !16180, inlinedAt: !16962)
!16980 = !DILocation(line: 751, column: 1, scope: !16945)
!16981 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2507, file: !2507, line: 753, type: !16982, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16984)
!16982 = !DISubroutineType(types: !16983)
!16983 = !{null, !2400, !16888}
!16984 = !{!16985, !16986}
!16985 = !DILocalVariable(name: "thread", arg: 1, scope: !16981, file: !2507, line: 753, type: !2400)
!16986 = !DILocalVariable(name: "timeout", arg: 2, scope: !16981, file: !2507, line: 753, type: !16888)
!16987 = !DILocation(line: 0, scope: !16981)
!16988 = !DILocation(line: 755, column: 7, scope: !16989)
!16989 = distinct !DILexicalBlock(scope: !16981, file: !2507, line: 755, column: 6)
!16990 = !DILocation(line: 755, column: 6, scope: !16981)
!16991 = !DILocation(line: 756, column: 3, scope: !16992)
!16992 = distinct !DILexicalBlock(scope: !16989, file: !2507, line: 755, column: 41)
!16993 = !DILocation(line: 757, column: 2, scope: !16992)
!16994 = !DILocation(line: 758, column: 1, scope: !16981)
!16995 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14741, file: !14741, line: 47, type: !16982, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !16996)
!16996 = !{!16997, !16998}
!16997 = !DILocalVariable(name: "thread", arg: 1, scope: !16995, file: !14741, line: 47, type: !2400)
!16998 = !DILocalVariable(name: "ticks", arg: 2, scope: !16995, file: !14741, line: 47, type: !16888)
!16999 = !DILocation(line: 0, scope: !16995)
!17000 = !DILocation(line: 49, column: 30, scope: !16995)
!17001 = !DILocation(line: 49, column: 2, scope: !16995)
!17002 = !DILocation(line: 50, column: 1, scope: !16995)
!17003 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2507, file: !2507, line: 795, type: !2457, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17004)
!17004 = !{!17005, !17006, !17007, !17009, !17010}
!17005 = !DILocalVariable(name: "timeout", arg: 1, scope: !17003, file: !2507, line: 795, type: !2459)
!17006 = !DILocalVariable(name: "thread", scope: !17003, file: !2507, line: 797, type: !2400)
!17007 = !DILocalVariable(name: "__i", scope: !17008, file: !2507, line: 800, type: !15949)
!17008 = distinct !DILexicalBlock(scope: !17003, file: !2507, line: 800, column: 2)
!17009 = !DILocalVariable(name: "__key", scope: !17008, file: !2507, line: 800, type: !15949)
!17010 = !DILocalVariable(name: "killed", scope: !17011, file: !2507, line: 801, type: !505)
!17011 = distinct !DILexicalBlock(scope: !17012, file: !2507, line: 800, column: 26)
!17012 = distinct !DILexicalBlock(scope: !17008, file: !2507, line: 800, column: 2)
!17013 = !DILocation(line: 0, scope: !17003)
!17014 = !DILocation(line: 797, column: 28, scope: !17003)
!17015 = !DILocation(line: 0, scope: !17008)
!17016 = !DILocation(line: 0, scope: !15957, inlinedAt: !17017)
!17017 = distinct !DILocation(line: 800, column: 2, scope: !17008)
!17018 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !17019)
!17019 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !17017)
!17020 = !DILocation(line: 0, scope: !15966, inlinedAt: !17019)
!17021 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !17017)
!17022 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !17017)
!17023 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !17017)
!17024 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !17017)
!17025 = !DILocation(line: 801, column: 27, scope: !17011)
!17026 = !DILocation(line: 801, column: 32, scope: !17011)
!17027 = !DILocation(line: 801, column: 61, scope: !17011)
!17028 = !DILocation(line: 0, scope: !17011)
!17029 = !DILocation(line: 804, column: 7, scope: !17011)
!17030 = !DILocation(line: 805, column: 21, scope: !17031)
!17031 = distinct !DILexicalBlock(scope: !17032, file: !2507, line: 805, column: 8)
!17032 = distinct !DILexicalBlock(scope: !17033, file: !2507, line: 804, column: 16)
!17033 = distinct !DILexicalBlock(scope: !17011, file: !2507, line: 804, column: 7)
!17034 = !DILocation(line: 805, column: 31, scope: !17031)
!17035 = !DILocation(line: 805, column: 8, scope: !17032)
!17036 = !DILocation(line: 806, column: 5, scope: !17037)
!17037 = distinct !DILexicalBlock(scope: !17031, file: !2507, line: 805, column: 40)
!17038 = !DILocation(line: 807, column: 4, scope: !17037)
!17039 = !DILocation(line: 808, column: 4, scope: !17032)
!17040 = !DILocation(line: 809, column: 4, scope: !17032)
!17041 = !DILocation(line: 810, column: 4, scope: !17032)
!17042 = !DILocation(line: 811, column: 3, scope: !17032)
!17043 = !DILocation(line: 0, scope: !15991, inlinedAt: !17044)
!17044 = distinct !DILocation(line: 800, column: 2, scope: !17012)
!17045 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !17044)
!17046 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !17044)
!17047 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !17044)
!17048 = !DILocation(line: 0, scope: !16005, inlinedAt: !17049)
!17049 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !17044)
!17050 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !17049)
!17051 = !DILocation(line: 813, column: 1, scope: !17003)
!17052 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2507, file: !2507, line: 779, type: !15915, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17053)
!17053 = !{!17054}
!17054 = !DILocalVariable(name: "thread", arg: 1, scope: !17052, file: !2507, line: 779, type: !2400)
!17055 = !DILocation(line: 0, scope: !17052)
!17056 = !DILocation(line: 781, column: 21, scope: !17052)
!17057 = !DILocation(line: 781, column: 2, scope: !17052)
!17058 = !DILocation(line: 782, column: 2, scope: !17052)
!17059 = !DILocation(line: 783, column: 15, scope: !17052)
!17060 = !DILocation(line: 783, column: 25, scope: !17052)
!17061 = !DILocation(line: 784, column: 1, scope: !17052)
!17062 = distinct !DISubprogram(name: "pended_on_thread", scope: !2507, file: !2507, line: 724, type: !17063, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17065)
!17063 = !DISubroutineType(types: !17064)
!17064 = !{!2431, !2400}
!17065 = !{!17066}
!17066 = !DILocalVariable(name: "thread", arg: 1, scope: !17062, file: !2507, line: 724, type: !2400)
!17067 = !DILocation(line: 0, scope: !17062)
!17068 = !DILocation(line: 726, column: 2, scope: !17069)
!17069 = distinct !DILexicalBlock(scope: !17070, file: !2507, line: 726, column: 2)
!17070 = distinct !DILexicalBlock(scope: !17062, file: !2507, line: 726, column: 2)
!17071 = !DILocation(line: 726, column: 2, scope: !17070)
!17072 = !DILocation(line: 726, column: 2, scope: !17073)
!17073 = distinct !DILexicalBlock(scope: !17069, file: !2507, line: 726, column: 2)
!17074 = !DILocation(line: 728, column: 2, scope: !17062)
!17075 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14312, file: !14312, line: 165, type: !15915, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17076)
!17076 = !{!17077}
!17077 = !DILocalVariable(name: "thread", arg: 1, scope: !17075, file: !14312, line: 165, type: !2400)
!17078 = !DILocation(line: 0, scope: !17075)
!17079 = !DILocation(line: 167, column: 15, scope: !17075)
!17080 = !DILocation(line: 167, column: 28, scope: !17075)
!17081 = !DILocation(line: 168, column: 1, scope: !17075)
!17082 = distinct !DISubprogram(name: "unready_thread", scope: !2507, file: !2507, line: 731, type: !15915, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17083)
!17083 = !{!17084}
!17084 = !DILocalVariable(name: "thread", arg: 1, scope: !17082, file: !2507, line: 731, type: !2400)
!17085 = !DILocation(line: 0, scope: !17082)
!17086 = !DILocation(line: 733, column: 6, scope: !17087)
!17087 = distinct !DILexicalBlock(scope: !17082, file: !2507, line: 733, column: 6)
!17088 = !DILocation(line: 733, column: 6, scope: !17082)
!17089 = !DILocation(line: 0, scope: !16149, inlinedAt: !17090)
!17090 = distinct !DILocation(line: 734, column: 3, scope: !17091)
!17091 = distinct !DILexicalBlock(scope: !17087, file: !2507, line: 733, column: 34)
!17092 = !DILocation(line: 266, column: 15, scope: !16149, inlinedAt: !17090)
!17093 = !DILocation(line: 266, column: 28, scope: !16149, inlinedAt: !17090)
!17094 = !DILocation(line: 0, scope: !16157, inlinedAt: !17095)
!17095 = distinct !DILocation(line: 268, column: 3, scope: !16161, inlinedAt: !17090)
!17096 = !DILocation(line: 234, column: 2, scope: !16157, inlinedAt: !17095)
!17097 = !DILocation(line: 735, column: 2, scope: !17091)
!17098 = !DILocation(line: 736, column: 25, scope: !17082)
!17099 = !DILocation(line: 736, column: 22, scope: !17082)
!17100 = !DILocation(line: 736, column: 2, scope: !17082)
!17101 = !DILocation(line: 737, column: 1, scope: !17082)
!17102 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14312, file: !14312, line: 160, type: !15915, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17103)
!17103 = !{!17104}
!17104 = !DILocalVariable(name: "thread", arg: 1, scope: !17102, file: !14312, line: 160, type: !2400)
!17105 = !DILocation(line: 0, scope: !17102)
!17106 = !DILocation(line: 162, column: 15, scope: !17102)
!17107 = !DILocation(line: 162, column: 28, scope: !17102)
!17108 = !DILocation(line: 163, column: 1, scope: !17102)
!17109 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2507, file: !2507, line: 786, type: !15915, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17110)
!17110 = !{!17111, !17112, !17114}
!17111 = !DILocalVariable(name: "thread", arg: 1, scope: !17109, file: !2507, line: 786, type: !2400)
!17112 = !DILocalVariable(name: "__i", scope: !17113, file: !2507, line: 788, type: !15949)
!17113 = distinct !DILexicalBlock(scope: !17109, file: !2507, line: 788, column: 2)
!17114 = !DILocalVariable(name: "__key", scope: !17113, file: !2507, line: 788, type: !15949)
!17115 = !DILocation(line: 0, scope: !17109)
!17116 = !DILocation(line: 0, scope: !17113)
!17117 = !DILocation(line: 0, scope: !15957, inlinedAt: !17118)
!17118 = distinct !DILocation(line: 788, column: 2, scope: !17113)
!17119 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !17120)
!17120 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !17118)
!17121 = !DILocation(line: 0, scope: !15966, inlinedAt: !17120)
!17122 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !17118)
!17123 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !17118)
!17124 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !17118)
!17125 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !17118)
!17126 = !DILocation(line: 789, column: 3, scope: !17127)
!17127 = distinct !DILexicalBlock(scope: !17128, file: !2507, line: 788, column: 26)
!17128 = distinct !DILexicalBlock(scope: !17113, file: !2507, line: 788, column: 2)
!17129 = !DILocation(line: 0, scope: !15991, inlinedAt: !17130)
!17130 = distinct !DILocation(line: 788, column: 2, scope: !17128)
!17131 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !17130)
!17132 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !17130)
!17133 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !17130)
!17134 = !DILocation(line: 0, scope: !16005, inlinedAt: !17135)
!17135 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !17130)
!17136 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !17135)
!17137 = !DILocation(line: 791, column: 1, scope: !17109)
!17138 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2507, file: !2507, line: 816, type: !17139, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17141)
!17139 = !DISubroutineType(types: !17140)
!17140 = !{!105, !113, !2431, !16888}
!17141 = !{!17142, !17143, !17144, !17145, !17146, !17148}
!17142 = !DILocalVariable(name: "key", arg: 1, scope: !17138, file: !2507, line: 816, type: !113)
!17143 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17138, file: !2507, line: 816, type: !2431)
!17144 = !DILocalVariable(name: "timeout", arg: 3, scope: !17138, file: !2507, line: 816, type: !16888)
!17145 = !DILocalVariable(name: "ret", scope: !17138, file: !2507, line: 828, type: !105)
!17146 = !DILocalVariable(name: "__i", scope: !17147, file: !2507, line: 829, type: !15949)
!17147 = distinct !DILexicalBlock(scope: !17138, file: !2507, line: 829, column: 2)
!17148 = !DILocalVariable(name: "__key", scope: !17147, file: !2507, line: 829, type: !15949)
!17149 = !DILocation(line: 0, scope: !17138)
!17150 = !DILocation(line: 823, column: 14, scope: !17138)
!17151 = !DILocation(line: 823, column: 2, scope: !17138)
!17152 = !DILocation(line: 826, column: 20, scope: !17138)
!17153 = !DILocation(line: 826, column: 18, scope: !17138)
!17154 = !DILocation(line: 828, column: 12, scope: !17138)
!17155 = !DILocation(line: 0, scope: !17147)
!17156 = !DILocation(line: 0, scope: !15957, inlinedAt: !17157)
!17157 = distinct !DILocation(line: 829, column: 2, scope: !17147)
!17158 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !17159)
!17159 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !17157)
!17160 = !DILocation(line: 0, scope: !15966, inlinedAt: !17159)
!17161 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !17157)
!17162 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !17157)
!17163 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !17157)
!17164 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !17157)
!17165 = !DILocation(line: 830, column: 7, scope: !17166)
!17166 = distinct !DILexicalBlock(scope: !17167, file: !2507, line: 830, column: 7)
!17167 = distinct !DILexicalBlock(scope: !17168, file: !2507, line: 829, column: 26)
!17168 = distinct !DILexicalBlock(scope: !17147, file: !2507, line: 829, column: 2)
!17169 = !DILocation(line: 830, column: 26, scope: !17166)
!17170 = !DILocation(line: 830, column: 23, scope: !17166)
!17171 = !DILocation(line: 830, column: 7, scope: !17167)
!17172 = !DILocation(line: 831, column: 20, scope: !17173)
!17173 = distinct !DILexicalBlock(scope: !17166, file: !2507, line: 830, column: 36)
!17174 = !DILocation(line: 832, column: 3, scope: !17173)
!17175 = !DILocation(line: 0, scope: !15991, inlinedAt: !17176)
!17176 = distinct !DILocation(line: 829, column: 2, scope: !17168)
!17177 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !17176)
!17178 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !17176)
!17179 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !17176)
!17180 = !DILocation(line: 0, scope: !16005, inlinedAt: !17181)
!17181 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !17176)
!17182 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !17181)
!17183 = !DILocation(line: 834, column: 2, scope: !17138)
!17184 = distinct !DISubprogram(name: "z_pend_curr", scope: !2507, file: !2507, line: 840, type: !17185, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17187)
!17185 = !DISubroutineType(types: !17186)
!17186 = !{!105, !15960, !15949, !2431, !16888}
!17187 = !{!17188, !17189, !17190, !17191}
!17188 = !DILocalVariable(name: "lock", arg: 1, scope: !17184, file: !2507, line: 840, type: !15960)
!17189 = !DILocalVariable(name: "key", arg: 2, scope: !17184, file: !2507, line: 840, type: !15949)
!17190 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17184, file: !2507, line: 841, type: !2431)
!17191 = !DILocalVariable(name: "timeout", arg: 4, scope: !17184, file: !2507, line: 841, type: !16888)
!17192 = !DILocation(line: 0, scope: !17184)
!17193 = !DILocation(line: 844, column: 20, scope: !17184)
!17194 = !DILocation(line: 844, column: 18, scope: !17184)
!17195 = !DILocation(line: 846, column: 2, scope: !17196)
!17196 = distinct !DILexicalBlock(scope: !17197, file: !2507, line: 846, column: 2)
!17197 = distinct !DILexicalBlock(scope: !17184, file: !2507, line: 846, column: 2)
!17198 = !DILocation(line: 846, column: 2, scope: !17197)
!17199 = !DILocation(line: 846, column: 2, scope: !17200)
!17200 = distinct !DILexicalBlock(scope: !17196, file: !2507, line: 846, column: 2)
!17201 = !DILocation(line: 0, scope: !15957, inlinedAt: !17202)
!17202 = distinct !DILocation(line: 856, column: 9, scope: !17184)
!17203 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !17204)
!17204 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !17202)
!17205 = !DILocation(line: 0, scope: !15966, inlinedAt: !17204)
!17206 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !17202)
!17207 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !17202)
!17208 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !17202)
!17209 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !17202)
!17210 = !DILocation(line: 857, column: 14, scope: !17184)
!17211 = !DILocation(line: 857, column: 2, scope: !17184)
!17212 = !DILocation(line: 0, scope: !16687, inlinedAt: !17213)
!17213 = distinct !DILocation(line: 858, column: 2, scope: !17184)
!17214 = !DILocation(line: 225, column: 2, scope: !16694, inlinedAt: !17213)
!17215 = !DILocation(line: 225, column: 2, scope: !16695, inlinedAt: !17213)
!17216 = !DILocation(line: 225, column: 2, scope: !16698, inlinedAt: !17213)
!17217 = !DILocation(line: 0, scope: !16678, inlinedAt: !17218)
!17218 = distinct !DILocation(line: 859, column: 9, scope: !17184)
!17219 = !DILocation(line: 0, scope: !16687, inlinedAt: !17220)
!17220 = distinct !DILocation(line: 195, column: 2, scope: !16678, inlinedAt: !17218)
!17221 = !DILocation(line: 225, column: 2, scope: !16694, inlinedAt: !17220)
!17222 = !DILocation(line: 225, column: 2, scope: !16695, inlinedAt: !17220)
!17223 = !DILocation(line: 225, column: 2, scope: !16698, inlinedAt: !17220)
!17224 = !DILocation(line: 196, column: 9, scope: !16678, inlinedAt: !17218)
!17225 = !DILocation(line: 859, column: 2, scope: !17184)
!17226 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2507, file: !2507, line: 862, type: !17227, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17229)
!17227 = !DISubroutineType(types: !17228)
!17228 = !{!2400, !2431}
!17229 = !{!17230, !17231, !17232, !17234}
!17230 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17226, file: !2507, line: 862, type: !2431)
!17231 = !DILocalVariable(name: "thread", scope: !17226, file: !2507, line: 864, type: !2400)
!17232 = !DILocalVariable(name: "__i", scope: !17233, file: !2507, line: 866, type: !15949)
!17233 = distinct !DILexicalBlock(scope: !17226, file: !2507, line: 866, column: 2)
!17234 = !DILocalVariable(name: "__key", scope: !17233, file: !2507, line: 866, type: !15949)
!17235 = !DILocation(line: 0, scope: !17226)
!17236 = !DILocation(line: 0, scope: !17233)
!17237 = !DILocation(line: 0, scope: !15957, inlinedAt: !17238)
!17238 = distinct !DILocation(line: 866, column: 2, scope: !17233)
!17239 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !17240)
!17240 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !17238)
!17241 = !DILocation(line: 0, scope: !15966, inlinedAt: !17240)
!17242 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !17238)
!17243 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !17238)
!17244 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !17238)
!17245 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !17238)
!17246 = !DILocation(line: 867, column: 12, scope: !17247)
!17247 = distinct !DILexicalBlock(scope: !17248, file: !2507, line: 866, column: 26)
!17248 = distinct !DILexicalBlock(scope: !17233, file: !2507, line: 866, column: 2)
!17249 = !DILocation(line: 869, column: 14, scope: !17250)
!17250 = distinct !DILexicalBlock(scope: !17247, file: !2507, line: 869, column: 7)
!17251 = !DILocation(line: 869, column: 7, scope: !17247)
!17252 = !DILocation(line: 870, column: 4, scope: !17253)
!17253 = distinct !DILexicalBlock(scope: !17250, file: !2507, line: 869, column: 23)
!17254 = !DILocation(line: 871, column: 3, scope: !17253)
!17255 = !DILocation(line: 0, scope: !15991, inlinedAt: !17256)
!17256 = distinct !DILocation(line: 866, column: 2, scope: !17248)
!17257 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !17256)
!17258 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !17256)
!17259 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !17256)
!17260 = !DILocation(line: 0, scope: !16005, inlinedAt: !17261)
!17261 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !17256)
!17262 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !17261)
!17263 = !DILocation(line: 874, column: 2, scope: !17226)
!17264 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2507, file: !2507, line: 877, type: !17227, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17265)
!17265 = !{!17266, !17267, !17268, !17270}
!17266 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17264, file: !2507, line: 877, type: !2431)
!17267 = !DILocalVariable(name: "thread", scope: !17264, file: !2507, line: 879, type: !2400)
!17268 = !DILocalVariable(name: "__i", scope: !17269, file: !2507, line: 881, type: !15949)
!17269 = distinct !DILexicalBlock(scope: !17264, file: !2507, line: 881, column: 2)
!17270 = !DILocalVariable(name: "__key", scope: !17269, file: !2507, line: 881, type: !15949)
!17271 = !DILocation(line: 0, scope: !17264)
!17272 = !DILocation(line: 0, scope: !17269)
!17273 = !DILocation(line: 0, scope: !15957, inlinedAt: !17274)
!17274 = distinct !DILocation(line: 881, column: 2, scope: !17269)
!17275 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !17276)
!17276 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !17274)
!17277 = !DILocation(line: 0, scope: !15966, inlinedAt: !17276)
!17278 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !17274)
!17279 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !17274)
!17280 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !17274)
!17281 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !17274)
!17282 = !DILocation(line: 882, column: 12, scope: !17283)
!17283 = distinct !DILexicalBlock(scope: !17284, file: !2507, line: 881, column: 26)
!17284 = distinct !DILexicalBlock(scope: !17269, file: !2507, line: 881, column: 2)
!17285 = !DILocation(line: 884, column: 14, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17283, file: !2507, line: 884, column: 7)
!17287 = !DILocation(line: 884, column: 7, scope: !17283)
!17288 = !DILocation(line: 885, column: 4, scope: !17289)
!17289 = distinct !DILexicalBlock(scope: !17286, file: !2507, line: 884, column: 23)
!17290 = !DILocation(line: 886, column: 10, scope: !17289)
!17291 = !DILocation(line: 887, column: 3, scope: !17289)
!17292 = !DILocation(line: 0, scope: !15991, inlinedAt: !17293)
!17293 = distinct !DILocation(line: 881, column: 2, scope: !17284)
!17294 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !17293)
!17295 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !17293)
!17296 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !17293)
!17297 = !DILocation(line: 0, scope: !16005, inlinedAt: !17298)
!17298 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !17293)
!17299 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !17298)
!17300 = !DILocation(line: 890, column: 2, scope: !17264)
!17301 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2507, file: !2507, line: 893, type: !15915, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17302)
!17302 = !{!17303}
!17303 = !DILocalVariable(name: "thread", arg: 1, scope: !17301, file: !2507, line: 893, type: !2400)
!17304 = !DILocation(line: 0, scope: !17301)
!17305 = !DILocation(line: 0, scope: !17109, inlinedAt: !17306)
!17306 = distinct !DILocation(line: 895, column: 2, scope: !17301)
!17307 = !DILocation(line: 0, scope: !17113, inlinedAt: !17306)
!17308 = !DILocation(line: 0, scope: !15957, inlinedAt: !17309)
!17309 = distinct !DILocation(line: 788, column: 2, scope: !17113, inlinedAt: !17306)
!17310 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !17311)
!17311 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !17309)
!17312 = !DILocation(line: 0, scope: !15966, inlinedAt: !17311)
!17313 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !17309)
!17314 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !17309)
!17315 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !17309)
!17316 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !17309)
!17317 = !DILocation(line: 789, column: 3, scope: !17127, inlinedAt: !17306)
!17318 = !DILocation(line: 0, scope: !15991, inlinedAt: !17319)
!17319 = distinct !DILocation(line: 788, column: 2, scope: !17128, inlinedAt: !17306)
!17320 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !17319)
!17321 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !17319)
!17322 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !17319)
!17323 = !DILocation(line: 0, scope: !16005, inlinedAt: !17324)
!17324 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !17319)
!17325 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !17324)
!17326 = !DILocation(line: 896, column: 8, scope: !17301)
!17327 = !DILocation(line: 897, column: 1, scope: !17301)
!17328 = distinct !DISubprogram(name: "z_set_prio", scope: !2507, file: !2507, line: 902, type: !16333, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17329)
!17329 = !{!17330, !17331, !17332, !17333, !17335}
!17330 = !DILocalVariable(name: "thread", arg: 1, scope: !17328, file: !2507, line: 902, type: !2400)
!17331 = !DILocalVariable(name: "prio", arg: 2, scope: !17328, file: !2507, line: 902, type: !105)
!17332 = !DILocalVariable(name: "need_sched", scope: !17328, file: !2507, line: 904, type: !505)
!17333 = !DILocalVariable(name: "__i", scope: !17334, file: !2507, line: 906, type: !15949)
!17334 = distinct !DILexicalBlock(scope: !17328, file: !2507, line: 906, column: 2)
!17335 = !DILocalVariable(name: "__key", scope: !17334, file: !2507, line: 906, type: !15949)
!17336 = !DILocation(line: 0, scope: !17328)
!17337 = !DILocation(line: 0, scope: !17334)
!17338 = !DILocation(line: 0, scope: !15957, inlinedAt: !17339)
!17339 = distinct !DILocation(line: 906, column: 2, scope: !17334)
!17340 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !17341)
!17341 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !17339)
!17342 = !DILocation(line: 0, scope: !15966, inlinedAt: !17341)
!17343 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !17339)
!17344 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !17339)
!17345 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !17339)
!17346 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !17339)
!17347 = !DILocation(line: 907, column: 16, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17349, file: !2507, line: 906, column: 26)
!17349 = distinct !DILexicalBlock(scope: !17334, file: !2507, line: 906, column: 2)
!17350 = !DILocation(line: 909, column: 7, scope: !17348)
!17351 = !DILocation(line: 0, scope: !16149, inlinedAt: !17352)
!17352 = distinct !DILocation(line: 912, column: 5, scope: !17353)
!17353 = distinct !DILexicalBlock(scope: !17354, file: !2507, line: 911, column: 63)
!17354 = distinct !DILexicalBlock(scope: !17355, file: !2507, line: 911, column: 8)
!17355 = distinct !DILexicalBlock(scope: !17356, file: !2507, line: 909, column: 19)
!17356 = distinct !DILexicalBlock(scope: !17348, file: !2507, line: 909, column: 7)
!17357 = !DILocation(line: 266, column: 28, scope: !16149, inlinedAt: !17352)
!17358 = !DILocation(line: 0, scope: !16157, inlinedAt: !17359)
!17359 = distinct !DILocation(line: 268, column: 3, scope: !16161, inlinedAt: !17352)
!17360 = !DILocation(line: 234, column: 2, scope: !16157, inlinedAt: !17359)
!17361 = !DILocation(line: 913, column: 23, scope: !17353)
!17362 = !DILocation(line: 0, scope: !16166, inlinedAt: !17363)
!17363 = distinct !DILocation(line: 914, column: 5, scope: !17353)
!17364 = !DILocation(line: 252, column: 28, scope: !16166, inlinedAt: !17363)
!17365 = !DILocation(line: 0, scope: !16173, inlinedAt: !17366)
!17366 = distinct !DILocation(line: 254, column: 3, scope: !16177, inlinedAt: !17363)
!17367 = !DILocation(line: 0, scope: !16180, inlinedAt: !17368)
!17368 = distinct !DILocation(line: 229, column: 2, scope: !16173, inlinedAt: !17366)
!17369 = !DILocation(line: 186, column: 2, scope: !16190, inlinedAt: !17368)
!17370 = !DILocation(line: 186, column: 2, scope: !16191, inlinedAt: !17368)
!17371 = !DILocation(line: 186, column: 2, scope: !16194, inlinedAt: !17368)
!17372 = !DILocation(line: 188, column: 2, scope: !16196, inlinedAt: !17368)
!17373 = !DILocation(line: 188, column: 2, scope: !16198, inlinedAt: !17368)
!17374 = !DILocation(line: 0, scope: !16196, inlinedAt: !17368)
!17375 = !DILocation(line: 189, column: 7, scope: !16201, inlinedAt: !17368)
!17376 = !DILocation(line: 189, column: 35, scope: !16201, inlinedAt: !17368)
!17377 = !DILocation(line: 189, column: 7, scope: !16202, inlinedAt: !17368)
!17378 = !DILocation(line: 190, column: 4, scope: !16206, inlinedAt: !17368)
!17379 = !DILocation(line: 192, column: 4, scope: !16206, inlinedAt: !17368)
!17380 = distinct !{!17380, !17372, !17381}
!17381 = !DILocation(line: 194, column: 2, scope: !16196, inlinedAt: !17368)
!17382 = !DILocation(line: 196, column: 2, scope: !16180, inlinedAt: !17368)
!17383 = !DILocation(line: 197, column: 1, scope: !16180, inlinedAt: !17368)
!17384 = !DILocation(line: 918, column: 4, scope: !17355)
!17385 = !DILocation(line: 919, column: 3, scope: !17355)
!17386 = !DILocation(line: 920, column: 22, scope: !17387)
!17387 = distinct !DILexicalBlock(scope: !17356, file: !2507, line: 919, column: 10)
!17388 = !DILocation(line: 0, scope: !15991, inlinedAt: !17389)
!17389 = distinct !DILocation(line: 906, column: 2, scope: !17349)
!17390 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !17389)
!17391 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !17389)
!17392 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !17389)
!17393 = !DILocation(line: 0, scope: !16005, inlinedAt: !17394)
!17394 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !17389)
!17395 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !17394)
!17396 = !DILocation(line: 926, column: 2, scope: !17328)
!17397 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2507, file: !2507, line: 929, type: !17398, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17400)
!17398 = !DISubroutineType(types: !17399)
!17399 = !{null, !2400, !105}
!17400 = !{!17401, !17402, !17403}
!17401 = !DILocalVariable(name: "thread", arg: 1, scope: !17397, file: !2507, line: 929, type: !2400)
!17402 = !DILocalVariable(name: "prio", arg: 2, scope: !17397, file: !2507, line: 929, type: !105)
!17403 = !DILocalVariable(name: "need_sched", scope: !17397, file: !2507, line: 931, type: !505)
!17404 = !DILocation(line: 0, scope: !17397)
!17405 = !DILocation(line: 931, column: 20, scope: !17397)
!17406 = !DILocation(line: 935, column: 17, scope: !17407)
!17407 = distinct !DILexicalBlock(scope: !17397, file: !2507, line: 935, column: 6)
!17408 = !DILocation(line: 935, column: 20, scope: !17407)
!17409 = !DILocation(line: 935, column: 35, scope: !17407)
!17410 = !DILocation(line: 935, column: 48, scope: !17407)
!17411 = !DILocation(line: 935, column: 6, scope: !17397)
!17412 = !DILocation(line: 936, column: 3, scope: !17413)
!17413 = distinct !DILexicalBlock(scope: !17407, file: !2507, line: 935, column: 55)
!17414 = !DILocation(line: 937, column: 2, scope: !17413)
!17415 = !DILocation(line: 938, column: 1, scope: !17397)
!17416 = distinct !DISubprogram(name: "k_sched_lock", scope: !2507, file: !2507, line: 987, type: !266, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17417)
!17417 = !{!17418, !17420}
!17418 = !DILocalVariable(name: "__i", scope: !17419, file: !2507, line: 989, type: !15949)
!17419 = distinct !DILexicalBlock(scope: !17416, file: !2507, line: 989, column: 2)
!17420 = !DILocalVariable(name: "__key", scope: !17419, file: !2507, line: 989, type: !15949)
!17421 = !DILocation(line: 0, scope: !17419)
!17422 = !DILocation(line: 0, scope: !15957, inlinedAt: !17423)
!17423 = distinct !DILocation(line: 989, column: 2, scope: !17419)
!17424 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !17425)
!17425 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !17423)
!17426 = !DILocation(line: 0, scope: !15966, inlinedAt: !17425)
!17427 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !17423)
!17428 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !17423)
!17429 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !17423)
!17430 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !17423)
!17431 = !DILocation(line: 992, column: 3, scope: !17432)
!17432 = distinct !DILexicalBlock(scope: !17433, file: !2507, line: 989, column: 26)
!17433 = distinct !DILexicalBlock(scope: !17419, file: !2507, line: 989, column: 2)
!17434 = !DILocation(line: 0, scope: !15991, inlinedAt: !17435)
!17435 = distinct !DILocation(line: 989, column: 2, scope: !17433)
!17436 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !17435)
!17437 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !17435)
!17438 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !17435)
!17439 = !DILocation(line: 0, scope: !16005, inlinedAt: !17440)
!17440 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !17435)
!17441 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !17440)
!17442 = !DILocation(line: 994, column: 1, scope: !17416)
!17443 = distinct !DISubprogram(name: "z_sched_lock", scope: !14312, file: !14312, line: 251, type: !266, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !397)
!17444 = !DILocation(line: 1031, column: 3, scope: !16727, inlinedAt: !17445)
!17445 = distinct !DILocation(line: 48, column: 10, scope: !16731, inlinedAt: !17446)
!17446 = distinct !DILocation(line: 253, column: 2, scope: !17447)
!17447 = distinct !DILexicalBlock(scope: !17448, file: !14312, line: 253, column: 2)
!17448 = distinct !DILexicalBlock(scope: !17443, file: !14312, line: 253, column: 2)
!17449 = !DILocation(line: 0, scope: !16727, inlinedAt: !17445)
!17450 = !DILocation(line: 48, column: 9, scope: !16731, inlinedAt: !17446)
!17451 = !DILocation(line: 253, column: 2, scope: !17448)
!17452 = !DILocation(line: 253, column: 2, scope: !17453)
!17453 = distinct !DILexicalBlock(scope: !17447, file: !14312, line: 253, column: 2)
!17454 = !DILocation(line: 254, column: 2, scope: !17455)
!17455 = distinct !DILexicalBlock(scope: !17456, file: !14312, line: 254, column: 2)
!17456 = distinct !DILexicalBlock(scope: !17443, file: !14312, line: 254, column: 2)
!17457 = !DILocation(line: 254, column: 2, scope: !17456)
!17458 = !DILocation(line: 254, column: 2, scope: !17459)
!17459 = distinct !DILexicalBlock(scope: !17455, file: !14312, line: 254, column: 2)
!17460 = !DILocation(line: 256, column: 2, scope: !17443)
!17461 = !DILocation(line: 258, column: 2, scope: !17462)
!17462 = distinct !DILexicalBlock(scope: !17443, file: !14312, line: 258, column: 2)
!17463 = !{i64 2152351046}
!17464 = !DILocation(line: 259, column: 1, scope: !17443)
!17465 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2507, file: !2507, line: 996, type: !266, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17466)
!17466 = !{!17467, !17469}
!17467 = !DILocalVariable(name: "__i", scope: !17468, file: !2507, line: 998, type: !15949)
!17468 = distinct !DILexicalBlock(scope: !17465, file: !2507, line: 998, column: 2)
!17469 = !DILocalVariable(name: "__key", scope: !17468, file: !2507, line: 998, type: !15949)
!17470 = !DILocation(line: 0, scope: !17468)
!17471 = !DILocation(line: 0, scope: !15957, inlinedAt: !17472)
!17472 = distinct !DILocation(line: 998, column: 2, scope: !17468)
!17473 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !17474)
!17474 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !17472)
!17475 = !DILocation(line: 0, scope: !15966, inlinedAt: !17474)
!17476 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !17472)
!17477 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !17472)
!17478 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !17472)
!17479 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !17472)
!17480 = !DILocation(line: 999, column: 3, scope: !17481)
!17481 = distinct !DILexicalBlock(scope: !17482, file: !2507, line: 999, column: 3)
!17482 = distinct !DILexicalBlock(scope: !17483, file: !2507, line: 999, column: 3)
!17483 = distinct !DILexicalBlock(scope: !17484, file: !2507, line: 998, column: 26)
!17484 = distinct !DILexicalBlock(scope: !17468, file: !2507, line: 998, column: 2)
!17485 = !DILocation(line: 999, column: 3, scope: !17482)
!17486 = !DILocation(line: 999, column: 3, scope: !17487)
!17487 = distinct !DILexicalBlock(scope: !17481, file: !2507, line: 999, column: 3)
!17488 = !DILocation(line: 1031, column: 3, scope: !16727, inlinedAt: !17489)
!17489 = distinct !DILocation(line: 48, column: 10, scope: !16731, inlinedAt: !17490)
!17490 = distinct !DILocation(line: 1000, column: 3, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17492, file: !2507, line: 1000, column: 3)
!17492 = distinct !DILexicalBlock(scope: !17483, file: !2507, line: 1000, column: 3)
!17493 = !DILocation(line: 0, scope: !16727, inlinedAt: !17489)
!17494 = !DILocation(line: 48, column: 9, scope: !16731, inlinedAt: !17490)
!17495 = !DILocation(line: 1000, column: 3, scope: !17492)
!17496 = !DILocation(line: 1000, column: 3, scope: !17497)
!17497 = distinct !DILexicalBlock(scope: !17491, file: !2507, line: 1000, column: 3)
!17498 = !DILocation(line: 1002, column: 5, scope: !17483)
!17499 = !DILocation(line: 1002, column: 20, scope: !17483)
!17500 = !DILocation(line: 1002, column: 3, scope: !17483)
!17501 = !DILocation(line: 1003, column: 3, scope: !17483)
!17502 = !DILocation(line: 0, scope: !15991, inlinedAt: !17503)
!17503 = distinct !DILocation(line: 998, column: 2, scope: !17484)
!17504 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !17503)
!17505 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !17503)
!17506 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !17503)
!17507 = !DILocation(line: 0, scope: !16005, inlinedAt: !17508)
!17508 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !17503)
!17509 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !17508)
!17510 = !DILocation(line: 1011, column: 2, scope: !17465)
!17511 = !DILocation(line: 1012, column: 1, scope: !17465)
!17512 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2507, file: !2507, line: 1014, type: !16306, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !397)
!17513 = !DILocation(line: 1028, column: 25, scope: !17512)
!17514 = !DILocation(line: 1028, column: 2, scope: !17512)
!17515 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2507, file: !2507, line: 1155, type: !17516, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17518)
!17516 = !DISubroutineType(types: !17517)
!17517 = !{!505, !2429, !2429}
!17518 = !{!17519, !17520, !17521, !17522, !17523}
!17519 = !DILocalVariable(name: "a", arg: 1, scope: !17515, file: !2507, line: 1155, type: !2429)
!17520 = !DILocalVariable(name: "b", arg: 2, scope: !17515, file: !2507, line: 1155, type: !2429)
!17521 = !DILocalVariable(name: "thread_a", scope: !17515, file: !2507, line: 1157, type: !2400)
!17522 = !DILocalVariable(name: "thread_b", scope: !17515, file: !2507, line: 1157, type: !2400)
!17523 = !DILocalVariable(name: "cmp", scope: !17515, file: !2507, line: 1158, type: !116)
!17524 = !DILocation(line: 0, scope: !17515)
!17525 = !DILocation(line: 1160, column: 13, scope: !17515)
!17526 = !DILocation(line: 1161, column: 13, scope: !17515)
!17527 = !DILocation(line: 1163, column: 8, scope: !17515)
!17528 = !DILocation(line: 1165, column: 10, scope: !17529)
!17529 = distinct !DILexicalBlock(scope: !17515, file: !2507, line: 1165, column: 6)
!17530 = !DILocation(line: 1165, column: 6, scope: !17515)
!17531 = !DILocation(line: 1167, column: 17, scope: !17532)
!17532 = distinct !DILexicalBlock(scope: !17529, file: !2507, line: 1167, column: 13)
!17533 = !DILocation(line: 1167, column: 13, scope: !17529)
!17534 = !DILocation(line: 1170, column: 25, scope: !17535)
!17535 = distinct !DILexicalBlock(scope: !17532, file: !2507, line: 1169, column: 9)
!17536 = !DILocation(line: 1170, column: 52, scope: !17535)
!17537 = !DILocation(line: 1170, column: 35, scope: !17535)
!17538 = !DILocation(line: 1170, column: 3, scope: !17535)
!17539 = !DILocation(line: 0, scope: !17529)
!17540 = !DILocation(line: 1173, column: 1, scope: !17515)
!17541 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2507, file: !2507, line: 1175, type: !17542, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17557)
!17542 = !DISubroutineType(types: !17543)
!17543 = !{null, !17544, !2400}
!17544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17545, size: 32)
!17545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17546, line: 37, size: 128, elements: !17547)
!17546 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17547 = !{!17548, !17556}
!17548 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17545, file: !17546, line: 38, baseType: !17549, size: 96)
!17549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !153, line: 83, size: 96, elements: !17550)
!17550 = !{!17551, !17552, !17555}
!17551 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17549, file: !153, line: 84, baseType: !2429, size: 32)
!17552 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17549, file: !153, line: 85, baseType: !17553, size: 32, offset: 32)
!17553 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !153, line: 81, baseType: !17554)
!17554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17516, size: 32)
!17555 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17549, file: !153, line: 86, baseType: !105, size: 32, offset: 64)
!17556 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17545, file: !17546, line: 39, baseType: !105, size: 32, offset: 96)
!17557 = !{!17558, !17559, !17560, !17561, !17570}
!17558 = !DILocalVariable(name: "pq", arg: 1, scope: !17541, file: !2507, line: 1175, type: !17544)
!17559 = !DILocalVariable(name: "thread", arg: 2, scope: !17541, file: !2507, line: 1175, type: !2400)
!17560 = !DILocalVariable(name: "t", scope: !17541, file: !2507, line: 1177, type: !2400)
!17561 = !DILocalVariable(name: "__f", scope: !17562, file: !2507, line: 1190, type: !17565)
!17562 = distinct !DILexicalBlock(scope: !17563, file: !2507, line: 1190, column: 3)
!17563 = distinct !DILexicalBlock(scope: !17564, file: !2507, line: 1189, column: 27)
!17564 = distinct !DILexicalBlock(scope: !17541, file: !2507, line: 1189, column: 6)
!17565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !153, line: 155, size: 96, elements: !17566)
!17566 = !{!17567, !17568, !17569}
!17567 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17565, file: !153, line: 156, baseType: !2502, size: 32)
!17568 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17565, file: !153, line: 157, baseType: !432, size: 32, offset: 32)
!17569 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17565, file: !153, line: 158, baseType: !116, size: 32, offset: 64)
!17570 = !DILocalVariable(name: "n", scope: !17571, file: !2507, line: 1190, type: !2429)
!17571 = distinct !DILexicalBlock(scope: !17572, file: !2507, line: 1190, column: 3)
!17572 = distinct !DILexicalBlock(scope: !17562, file: !2507, line: 1190, column: 3)
!17573 = !DILocation(line: 0, scope: !17541)
!17574 = !DILocation(line: 1179, column: 2, scope: !17575)
!17575 = distinct !DILexicalBlock(scope: !17576, file: !2507, line: 1179, column: 2)
!17576 = distinct !DILexicalBlock(scope: !17541, file: !2507, line: 1179, column: 2)
!17577 = !DILocation(line: 1179, column: 2, scope: !17576)
!17578 = !DILocation(line: 1179, column: 2, scope: !17579)
!17579 = distinct !DILexicalBlock(scope: !17575, file: !2507, line: 1179, column: 2)
!17580 = !DILocation(line: 1181, column: 31, scope: !17541)
!17581 = !DILocation(line: 1181, column: 45, scope: !17541)
!17582 = !DILocation(line: 1181, column: 15, scope: !17541)
!17583 = !DILocation(line: 1181, column: 25, scope: !17541)
!17584 = !DILocation(line: 1189, column: 11, scope: !17564)
!17585 = !DILocation(line: 1189, column: 7, scope: !17564)
!17586 = !DILocation(line: 1189, column: 6, scope: !17541)
!17587 = !DILocation(line: 1190, column: 3, scope: !17562)
!17588 = !DILocation(line: 1190, column: 3, scope: !17571)
!17589 = !DILocation(line: 0, scope: !17571)
!17590 = !DILocation(line: 1190, column: 3, scope: !17572)
!17591 = !DILocation(line: 1193, column: 2, scope: !17563)
!17592 = !DILocation(line: 1191, column: 42, scope: !17593)
!17593 = distinct !DILexicalBlock(scope: !17572, file: !2507, line: 1190, column: 54)
!17594 = !DILocation(line: 1191, column: 12, scope: !17593)
!17595 = !DILocation(line: 1191, column: 22, scope: !17593)
!17596 = distinct !{!17596, !17587, !17597}
!17597 = !DILocation(line: 1192, column: 3, scope: !17562)
!17598 = !DILocation(line: 1195, column: 17, scope: !17541)
!17599 = !DILocation(line: 1195, column: 37, scope: !17541)
!17600 = !DILocation(line: 1195, column: 2, scope: !17541)
!17601 = !DILocation(line: 1196, column: 1, scope: !17541)
!17602 = !DISubprogram(name: "z_rb_foreach_next", scope: !153, file: !153, line: 176, type: !17603, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17603 = !DISubroutineType(types: !17604)
!17604 = !{!2429, !17605, !17606}
!17605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17549, size: 32)
!17606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17565, size: 32)
!17607 = !DISubprogram(name: "rb_insert", scope: !153, file: !153, line: 105, type: !17608, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17608 = !DISubroutineType(types: !17609)
!17609 = !{null, !17605, !2429}
!17610 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2507, file: !2507, line: 1198, type: !17542, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17611)
!17611 = !{!17612, !17613}
!17612 = !DILocalVariable(name: "pq", arg: 1, scope: !17610, file: !2507, line: 1198, type: !17544)
!17613 = !DILocalVariable(name: "thread", arg: 2, scope: !17610, file: !2507, line: 1198, type: !2400)
!17614 = !DILocation(line: 0, scope: !17610)
!17615 = !DILocation(line: 1200, column: 2, scope: !17616)
!17616 = distinct !DILexicalBlock(scope: !17617, file: !2507, line: 1200, column: 2)
!17617 = distinct !DILexicalBlock(scope: !17610, file: !2507, line: 1200, column: 2)
!17618 = !DILocation(line: 1200, column: 2, scope: !17617)
!17619 = !DILocation(line: 1200, column: 2, scope: !17620)
!17620 = distinct !DILexicalBlock(scope: !17616, file: !2507, line: 1200, column: 2)
!17621 = !DILocation(line: 1202, column: 17, scope: !17610)
!17622 = !DILocation(line: 1202, column: 37, scope: !17610)
!17623 = !DILocation(line: 1202, column: 2, scope: !17610)
!17624 = !DILocation(line: 1204, column: 16, scope: !17625)
!17625 = distinct !DILexicalBlock(scope: !17610, file: !2507, line: 1204, column: 6)
!17626 = !DILocation(line: 1204, column: 7, scope: !17625)
!17627 = !DILocation(line: 1204, column: 6, scope: !17610)
!17628 = !DILocation(line: 1205, column: 7, scope: !17629)
!17629 = distinct !DILexicalBlock(scope: !17625, file: !2507, line: 1204, column: 22)
!17630 = !DILocation(line: 1205, column: 22, scope: !17629)
!17631 = !DILocation(line: 1206, column: 2, scope: !17629)
!17632 = !DILocation(line: 1207, column: 1, scope: !17610)
!17633 = !DISubprogram(name: "rb_remove", scope: !153, file: !153, line: 110, type: !17608, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17634 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2507, file: !2507, line: 1209, type: !17635, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17637)
!17635 = !DISubroutineType(types: !17636)
!17636 = !{!2400, !17544}
!17637 = !{!17638, !17639, !17640}
!17638 = !DILocalVariable(name: "pq", arg: 1, scope: !17634, file: !2507, line: 1209, type: !17544)
!17639 = !DILocalVariable(name: "thread", scope: !17634, file: !2507, line: 1211, type: !2400)
!17640 = !DILocalVariable(name: "n", scope: !17634, file: !2507, line: 1212, type: !2429)
!17641 = !DILocation(line: 0, scope: !17634)
!17642 = !DILocation(line: 1212, column: 37, scope: !17634)
!17643 = !DILocation(line: 1212, column: 21, scope: !17634)
!17644 = !DILocation(line: 1217, column: 2, scope: !17634)
!17645 = distinct !DISubprogram(name: "rb_get_min", scope: !153, file: !153, line: 115, type: !17646, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17648)
!17646 = !DISubroutineType(types: !17647)
!17647 = !{!2429, !17605}
!17648 = !{!17649}
!17649 = !DILocalVariable(name: "tree", arg: 1, scope: !17645, file: !153, line: 115, type: !17605)
!17650 = !DILocation(line: 0, scope: !17645)
!17651 = !DILocation(line: 117, column: 9, scope: !17645)
!17652 = !DILocation(line: 117, column: 2, scope: !17645)
!17653 = !DISubprogram(name: "z_rb_get_minmax", scope: !153, file: !153, line: 100, type: !17654, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17654 = !DISubroutineType(types: !17655)
!17655 = !{!2429, !17605, !169}
!17656 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2507, file: !2507, line: 1246, type: !17657, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17665)
!17657 = !DISubroutineType(types: !17658)
!17658 = !{!2400, !17659}
!17659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17660, size: 32)
!17660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17546, line: 53, size: 2080, elements: !17661)
!17661 = !{!17662, !17664}
!17662 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17660, file: !17546, line: 54, baseType: !17663, size: 2048)
!17663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2436, size: 2048, elements: !1090)
!17664 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17660, file: !17546, line: 55, baseType: !32, size: 32, offset: 2048)
!17665 = !{!17666, !17667, !17668, !17669}
!17666 = !DILocalVariable(name: "pq", arg: 1, scope: !17656, file: !2507, line: 1246, type: !17659)
!17667 = !DILocalVariable(name: "thread", scope: !17656, file: !2507, line: 1252, type: !2400)
!17668 = !DILocalVariable(name: "l", scope: !17656, file: !2507, line: 1253, type: !16183)
!17669 = !DILocalVariable(name: "n", scope: !17656, file: !2507, line: 1254, type: !2503)
!17670 = !DILocation(line: 0, scope: !17656)
!17671 = !DILocation(line: 1248, column: 11, scope: !17672)
!17672 = distinct !DILexicalBlock(scope: !17656, file: !2507, line: 1248, column: 6)
!17673 = !DILocation(line: 1248, column: 7, scope: !17672)
!17674 = !DILocation(line: 1248, column: 6, scope: !17656)
!17675 = !DILocation(line: 1253, column: 31, scope: !17656)
!17676 = !DILocation(line: 1253, column: 20, scope: !17656)
!17677 = !DILocation(line: 1254, column: 19, scope: !17656)
!17678 = !DILocation(line: 1260, column: 1, scope: !17656)
!17679 = distinct !DISubprogram(name: "z_unpend_all", scope: !2507, file: !2507, line: 1262, type: !17680, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17682)
!17680 = !DISubroutineType(types: !17681)
!17681 = !{!105, !2431}
!17682 = !{!17683, !17684, !17685}
!17683 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17679, file: !2507, line: 1262, type: !2431)
!17684 = !DILocalVariable(name: "need_sched", scope: !17679, file: !2507, line: 1264, type: !105)
!17685 = !DILocalVariable(name: "thread", scope: !17679, file: !2507, line: 1265, type: !2400)
!17686 = !DILocation(line: 0, scope: !17679)
!17687 = !DILocation(line: 1267, column: 19, scope: !17679)
!17688 = !DILocation(line: 1267, column: 41, scope: !17679)
!17689 = !DILocation(line: 1267, column: 2, scope: !17679)
!17690 = !DILocation(line: 1268, column: 3, scope: !17691)
!17691 = distinct !DILexicalBlock(scope: !17679, file: !2507, line: 1267, column: 50)
!17692 = !DILocation(line: 1269, column: 3, scope: !17691)
!17693 = distinct !{!17693, !17689, !17694}
!17694 = !DILocation(line: 1271, column: 2, scope: !17679)
!17695 = !DILocation(line: 1273, column: 2, scope: !17679)
!17696 = distinct !DISubprogram(name: "z_waitq_head", scope: !14673, file: !14673, line: 52, type: !17227, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17697)
!17697 = !{!17698}
!17698 = !DILocalVariable(name: "w", arg: 1, scope: !17696, file: !14673, line: 52, type: !2431)
!17699 = !DILocation(line: 0, scope: !17696)
!17700 = !DILocation(line: 54, column: 52, scope: !17696)
!17701 = !DILocation(line: 54, column: 28, scope: !17696)
!17702 = !DILocation(line: 54, column: 9, scope: !17696)
!17703 = !DILocation(line: 54, column: 2, scope: !17696)
!17704 = distinct !DISubprogram(name: "init_ready_q", scope: !2507, file: !2507, line: 1276, type: !17705, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17712)
!17705 = !DISubroutineType(types: !17706)
!17706 = !{null, !17707}
!17707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17708, size: 32)
!17708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !17709)
!17709 = !{!17710, !17711}
!17710 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17708, file: !163, line: 86, baseType: !2400, size: 32)
!17711 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17708, file: !163, line: 90, baseType: !2436, size: 64, offset: 32)
!17712 = !{!17713}
!17713 = !DILocalVariable(name: "rq", arg: 1, scope: !17704, file: !2507, line: 1276, type: !17707)
!17714 = !DILocation(line: 0, scope: !17704)
!17715 = !DILocation(line: 1289, column: 22, scope: !17704)
!17716 = !DILocation(line: 1289, column: 2, scope: !17704)
!17717 = !DILocation(line: 1291, column: 1, scope: !17704)
!17718 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !17719, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17721)
!17719 = !DISubroutineType(types: !17720)
!17720 = !{null, !16183}
!17721 = !{!17722}
!17722 = !DILocalVariable(name: "list", arg: 1, scope: !17718, file: !137, line: 197, type: !16183)
!17723 = !DILocation(line: 0, scope: !17718)
!17724 = !DILocation(line: 199, column: 8, scope: !17718)
!17725 = !DILocation(line: 199, column: 13, scope: !17718)
!17726 = !DILocation(line: 200, column: 8, scope: !17718)
!17727 = !DILocation(line: 200, column: 13, scope: !17718)
!17728 = !DILocation(line: 201, column: 1, scope: !17718)
!17729 = distinct !DISubprogram(name: "z_sched_init", scope: !2507, file: !2507, line: 1293, type: !266, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !397)
!17730 = !DILocation(line: 1302, column: 2, scope: !17729)
!17731 = !DILocation(line: 1306, column: 2, scope: !17729)
!17732 = !DILocation(line: 1309, column: 1, scope: !17729)
!17733 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2507, file: !2507, line: 1311, type: !17734, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17737)
!17734 = !DISubroutineType(types: !17735)
!17735 = !{!105, !17736}
!17736 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !2400)
!17737 = !{!17738}
!17738 = !DILocalVariable(name: "thread", arg: 1, scope: !17733, file: !2507, line: 1311, type: !17736)
!17739 = !DILocation(line: 0, scope: !17733)
!17740 = !DILocation(line: 1313, column: 22, scope: !17733)
!17741 = !DILocation(line: 1313, column: 9, scope: !17733)
!17742 = !DILocation(line: 1313, column: 2, scope: !17733)
!17743 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2507, file: !2507, line: 1325, type: !17744, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17746)
!17744 = !DISubroutineType(types: !17745)
!17745 = !{null, !17736, !105}
!17746 = !{!17747, !17748, !17749}
!17747 = !DILocalVariable(name: "thread", arg: 1, scope: !17743, file: !2507, line: 1325, type: !17736)
!17748 = !DILocalVariable(name: "prio", arg: 2, scope: !17743, file: !2507, line: 1325, type: !105)
!17749 = !DILocalVariable(name: "th", scope: !17743, file: !2507, line: 1334, type: !2400)
!17750 = !DILocation(line: 0, scope: !17743)
!17751 = !DILocation(line: 1331, column: 2, scope: !17752)
!17752 = distinct !DILexicalBlock(scope: !17753, file: !2507, line: 1331, column: 2)
!17753 = distinct !DILexicalBlock(scope: !17754, file: !2507, line: 1331, column: 2)
!17754 = distinct !DILexicalBlock(scope: !17743, file: !2507, line: 1331, column: 2)
!17755 = !DILocation(line: 1331, column: 2, scope: !17756)
!17756 = distinct !DILexicalBlock(scope: !17752, file: !2507, line: 1331, column: 2)
!17757 = !DILocation(line: 1031, column: 3, scope: !16727, inlinedAt: !17758)
!17758 = distinct !DILocation(line: 48, column: 10, scope: !16731, inlinedAt: !17759)
!17759 = distinct !DILocation(line: 1332, column: 2, scope: !17760)
!17760 = distinct !DILexicalBlock(scope: !17761, file: !2507, line: 1332, column: 2)
!17761 = distinct !DILexicalBlock(scope: !17743, file: !2507, line: 1332, column: 2)
!17762 = !DILocation(line: 0, scope: !16727, inlinedAt: !17758)
!17763 = !DILocation(line: 48, column: 9, scope: !16731, inlinedAt: !17759)
!17764 = !DILocation(line: 1332, column: 2, scope: !17761)
!17765 = !DILocation(line: 1332, column: 2, scope: !17766)
!17766 = distinct !DILexicalBlock(scope: !17760, file: !2507, line: 1332, column: 2)
!17767 = !DILocation(line: 1336, column: 2, scope: !17743)
!17768 = !DILocation(line: 1337, column: 1, scope: !17743)
!17769 = distinct !DISubprogram(name: "k_can_yield", scope: !2507, file: !2507, line: 1384, type: !8761, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !397)
!17770 = !DILocation(line: 1386, column: 11, scope: !17769)
!17771 = !DILocation(line: 1386, column: 29, scope: !17769)
!17772 = !DILocation(line: 1386, column: 32, scope: !17769)
!17773 = !DILocation(line: 1386, column: 46, scope: !17769)
!17774 = !DILocation(line: 1387, column: 28, scope: !17769)
!17775 = !DILocation(line: 1387, column: 4, scope: !17769)
!17776 = !DILocation(line: 1386, column: 2, scope: !17769)
!17777 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !122, file: !122, line: 989, type: !8761, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !397)
!17778 = !DILocation(line: 993, column: 10, scope: !17777)
!17779 = !DILocation(line: 993, column: 2, scope: !17777)
!17780 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2507, file: !2507, line: 1390, type: !266, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17781)
!17781 = !{!17782}
!17782 = !DILocalVariable(name: "key", scope: !17780, file: !2507, line: 1396, type: !15949)
!17783 = !DILocation(line: 1031, column: 3, scope: !16727, inlinedAt: !17784)
!17784 = distinct !DILocation(line: 48, column: 10, scope: !16731, inlinedAt: !17785)
!17785 = distinct !DILocation(line: 1392, column: 2, scope: !17786)
!17786 = distinct !DILexicalBlock(scope: !17787, file: !2507, line: 1392, column: 2)
!17787 = distinct !DILexicalBlock(scope: !17780, file: !2507, line: 1392, column: 2)
!17788 = !DILocation(line: 0, scope: !16727, inlinedAt: !17784)
!17789 = !DILocation(line: 48, column: 9, scope: !16731, inlinedAt: !17785)
!17790 = !DILocation(line: 1392, column: 2, scope: !17787)
!17791 = !DILocation(line: 1392, column: 2, scope: !17792)
!17792 = distinct !DILexicalBlock(scope: !17786, file: !2507, line: 1392, column: 2)
!17793 = !DILocation(line: 0, scope: !15957, inlinedAt: !17794)
!17794 = distinct !DILocation(line: 1396, column: 25, scope: !17780)
!17795 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !17796)
!17796 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !17794)
!17797 = !DILocation(line: 0, scope: !15966, inlinedAt: !17796)
!17798 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !17794)
!17799 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !17794)
!17800 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !17794)
!17801 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !17794)
!17802 = !DILocation(line: 0, scope: !17780)
!17803 = !DILocation(line: 1400, column: 18, scope: !17804)
!17804 = distinct !DILexicalBlock(scope: !17805, file: !2507, line: 1399, column: 36)
!17805 = distinct !DILexicalBlock(scope: !17780, file: !2507, line: 1398, column: 6)
!17806 = !DILocation(line: 0, scope: !16149, inlinedAt: !17807)
!17807 = distinct !DILocation(line: 1400, column: 3, scope: !17804)
!17808 = !DILocation(line: 266, column: 15, scope: !16149, inlinedAt: !17807)
!17809 = !DILocation(line: 266, column: 28, scope: !16149, inlinedAt: !17807)
!17810 = !DILocation(line: 0, scope: !16157, inlinedAt: !17811)
!17811 = distinct !DILocation(line: 268, column: 3, scope: !16161, inlinedAt: !17807)
!17812 = !DILocation(line: 234, column: 2, scope: !16157, inlinedAt: !17811)
!17813 = !DILocation(line: 1402, column: 15, scope: !17780)
!17814 = !DILocation(line: 0, scope: !16166, inlinedAt: !17815)
!17815 = distinct !DILocation(line: 1402, column: 2, scope: !17780)
!17816 = !DILocation(line: 252, column: 15, scope: !16166, inlinedAt: !17815)
!17817 = !DILocation(line: 252, column: 28, scope: !16166, inlinedAt: !17815)
!17818 = !DILocation(line: 0, scope: !16173, inlinedAt: !17819)
!17819 = distinct !DILocation(line: 254, column: 3, scope: !16177, inlinedAt: !17815)
!17820 = !DILocation(line: 0, scope: !16180, inlinedAt: !17821)
!17821 = distinct !DILocation(line: 229, column: 2, scope: !16173, inlinedAt: !17819)
!17822 = !DILocation(line: 186, column: 2, scope: !16190, inlinedAt: !17821)
!17823 = !DILocation(line: 186, column: 2, scope: !16191, inlinedAt: !17821)
!17824 = !DILocation(line: 186, column: 2, scope: !16194, inlinedAt: !17821)
!17825 = !DILocation(line: 188, column: 2, scope: !16196, inlinedAt: !17821)
!17826 = !DILocation(line: 188, column: 2, scope: !16198, inlinedAt: !17821)
!17827 = !DILocation(line: 0, scope: !16196, inlinedAt: !17821)
!17828 = !DILocation(line: 189, column: 7, scope: !16201, inlinedAt: !17821)
!17829 = !DILocation(line: 189, column: 35, scope: !16201, inlinedAt: !17821)
!17830 = !DILocation(line: 189, column: 7, scope: !16202, inlinedAt: !17821)
!17831 = !DILocation(line: 191, column: 21, scope: !16206, inlinedAt: !17821)
!17832 = !DILocation(line: 190, column: 4, scope: !16206, inlinedAt: !17821)
!17833 = !DILocation(line: 192, column: 4, scope: !16206, inlinedAt: !17821)
!17834 = distinct !{!17834, !17825, !17835}
!17835 = !DILocation(line: 194, column: 2, scope: !16196, inlinedAt: !17821)
!17836 = !DILocation(line: 196, column: 37, scope: !16180, inlinedAt: !17821)
!17837 = !DILocation(line: 196, column: 2, scope: !16180, inlinedAt: !17821)
!17838 = !DILocation(line: 197, column: 1, scope: !16180, inlinedAt: !17821)
!17839 = !DILocation(line: 1403, column: 2, scope: !17780)
!17840 = !DILocation(line: 0, scope: !16678, inlinedAt: !17841)
!17841 = distinct !DILocation(line: 1404, column: 2, scope: !17780)
!17842 = !DILocation(line: 0, scope: !16687, inlinedAt: !17843)
!17843 = distinct !DILocation(line: 195, column: 2, scope: !16678, inlinedAt: !17841)
!17844 = !DILocation(line: 225, column: 2, scope: !16694, inlinedAt: !17843)
!17845 = !DILocation(line: 225, column: 2, scope: !16695, inlinedAt: !17843)
!17846 = !DILocation(line: 225, column: 2, scope: !16698, inlinedAt: !17843)
!17847 = !DILocation(line: 196, column: 9, scope: !16678, inlinedAt: !17841)
!17848 = !DILocation(line: 1405, column: 1, scope: !17780)
!17849 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2507, file: !2507, line: 1459, type: !17850, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17852)
!17850 = !DISubroutineType(types: !17851)
!17851 = !{!116, !16888}
!17852 = !{!17853, !17854, !17855}
!17853 = !DILocalVariable(name: "timeout", arg: 1, scope: !17849, file: !2507, line: 1459, type: !16888)
!17854 = !DILocalVariable(name: "ticks", scope: !17849, file: !2507, line: 1461, type: !107)
!17855 = !DILocalVariable(name: "ret", scope: !17849, file: !2507, line: 1480, type: !116)
!17856 = !DILocation(line: 0, scope: !17849)
!17857 = !DILocation(line: 1031, column: 3, scope: !16727, inlinedAt: !17858)
!17858 = distinct !DILocation(line: 48, column: 10, scope: !16731, inlinedAt: !17859)
!17859 = distinct !DILocation(line: 1463, column: 2, scope: !17860)
!17860 = distinct !DILexicalBlock(scope: !17861, file: !2507, line: 1463, column: 2)
!17861 = distinct !DILexicalBlock(scope: !17849, file: !2507, line: 1463, column: 2)
!17862 = !DILocation(line: 0, scope: !16727, inlinedAt: !17858)
!17863 = !DILocation(line: 48, column: 9, scope: !16731, inlinedAt: !17859)
!17864 = !DILocation(line: 1463, column: 2, scope: !17861)
!17865 = !DILocation(line: 1463, column: 2, scope: !17866)
!17866 = distinct !DILexicalBlock(scope: !17860, file: !2507, line: 1463, column: 2)
!17867 = !DILocation(line: 1468, column: 6, scope: !17868)
!17868 = distinct !DILexicalBlock(scope: !17849, file: !2507, line: 1468, column: 6)
!17869 = !DILocation(line: 1468, column: 6, scope: !17849)
!17870 = !DILocation(line: 1469, column: 20, scope: !17871)
!17871 = distinct !DILexicalBlock(scope: !17868, file: !2507, line: 1468, column: 40)
!17872 = !DILocation(line: 1469, column: 3, scope: !17871)
!17873 = !DILocation(line: 1473, column: 3, scope: !17871)
!17874 = !DILocation(line: 1478, column: 10, scope: !17849)
!17875 = !DILocation(line: 1480, column: 16, scope: !17849)
!17876 = !DILocation(line: 1485, column: 1, scope: !17849)
!17877 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3406, file: !3406, line: 310, type: !17878, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17880)
!17878 = !DISubroutineType(types: !17879)
!17879 = !{null, !17736}
!17880 = !{!17881}
!17881 = !DILocalVariable(name: "thread", arg: 1, scope: !17877, file: !3406, line: 310, type: !17736)
!17882 = !DILocation(line: 0, scope: !17877)
!17883 = !DILocation(line: 319, column: 2, scope: !17884)
!17884 = distinct !DILexicalBlock(scope: !17877, file: !3406, line: 319, column: 2)
!17885 = !{i64 2152267202}
!17886 = !DILocation(line: 320, column: 2, scope: !17877)
!17887 = !DILocation(line: 321, column: 1, scope: !17877)
!17888 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2507, file: !2507, line: 1415, type: !17889, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17891)
!17889 = !DISubroutineType(types: !17890)
!17890 = !{!116, !107}
!17891 = !{!17892, !17893, !17894, !17895}
!17892 = !DILocalVariable(name: "ticks", arg: 1, scope: !17888, file: !2507, line: 1415, type: !107)
!17893 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17888, file: !2507, line: 1418, type: !113)
!17894 = !DILocalVariable(name: "timeout", scope: !17888, file: !2507, line: 1430, type: !16888)
!17895 = !DILocalVariable(name: "key", scope: !17888, file: !2507, line: 1437, type: !15949)
!17896 = !DILocation(line: 0, scope: !17888)
!17897 = !DILocation(line: 1031, column: 3, scope: !16727, inlinedAt: !17898)
!17898 = distinct !DILocation(line: 48, column: 10, scope: !16731, inlinedAt: !17899)
!17899 = distinct !DILocation(line: 1420, column: 2, scope: !17900)
!17900 = distinct !DILexicalBlock(scope: !17901, file: !2507, line: 1420, column: 2)
!17901 = distinct !DILexicalBlock(scope: !17888, file: !2507, line: 1420, column: 2)
!17902 = !DILocation(line: 0, scope: !16727, inlinedAt: !17898)
!17903 = !DILocation(line: 48, column: 9, scope: !16731, inlinedAt: !17899)
!17904 = !DILocation(line: 1420, column: 2, scope: !17901)
!17905 = !DILocation(line: 1420, column: 2, scope: !17906)
!17906 = distinct !DILexicalBlock(scope: !17900, file: !2507, line: 1420, column: 2)
!17907 = !DILocation(line: 1425, column: 12, scope: !17908)
!17908 = distinct !DILexicalBlock(scope: !17888, file: !2507, line: 1425, column: 6)
!17909 = !DILocation(line: 1425, column: 6, scope: !17888)
!17910 = !DILocation(line: 1426, column: 3, scope: !17911)
!17911 = distinct !DILexicalBlock(scope: !17908, file: !2507, line: 1425, column: 18)
!17912 = !DILocation(line: 1427, column: 3, scope: !17911)
!17913 = !DILocation(line: 1431, column: 24, scope: !17914)
!17914 = distinct !DILexicalBlock(scope: !17888, file: !2507, line: 1431, column: 6)
!17915 = !DILocation(line: 1431, column: 6, scope: !17888)
!17916 = !DILocation(line: 1432, column: 35, scope: !17917)
!17917 = distinct !DILexicalBlock(scope: !17914, file: !2507, line: 1431, column: 30)
!17918 = !DILocation(line: 1432, column: 27, scope: !17917)
!17919 = !DILocation(line: 1433, column: 2, scope: !17917)
!17920 = !DILocation(line: 1434, column: 27, scope: !17921)
!17921 = distinct !DILexicalBlock(scope: !17914, file: !2507, line: 1433, column: 9)
!17922 = !DILocation(line: 0, scope: !17914)
!17923 = !DILocation(line: 0, scope: !15957, inlinedAt: !17924)
!17924 = distinct !DILocation(line: 1437, column: 25, scope: !17888)
!17925 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !17926)
!17926 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !17924)
!17927 = !DILocation(line: 0, scope: !15966, inlinedAt: !17926)
!17928 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !17924)
!17929 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !17924)
!17930 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !17924)
!17931 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !17924)
!17932 = !DILocation(line: 1440, column: 20, scope: !17888)
!17933 = !DILocation(line: 1440, column: 18, scope: !17888)
!17934 = !DILocation(line: 1442, column: 2, scope: !17888)
!17935 = !DILocation(line: 1443, column: 23, scope: !17888)
!17936 = !DILocation(line: 1443, column: 2, scope: !17888)
!17937 = !DILocation(line: 1444, column: 29, scope: !17888)
!17938 = !DILocation(line: 1444, column: 2, scope: !17888)
!17939 = !DILocation(line: 0, scope: !16678, inlinedAt: !17940)
!17940 = distinct !DILocation(line: 1446, column: 8, scope: !17888)
!17941 = !DILocation(line: 0, scope: !16687, inlinedAt: !17942)
!17942 = distinct !DILocation(line: 195, column: 2, scope: !16678, inlinedAt: !17940)
!17943 = !DILocation(line: 225, column: 2, scope: !16694, inlinedAt: !17942)
!17944 = !DILocation(line: 225, column: 2, scope: !16695, inlinedAt: !17942)
!17945 = !DILocation(line: 225, column: 2, scope: !16698, inlinedAt: !17942)
!17946 = !DILocation(line: 196, column: 9, scope: !16678, inlinedAt: !17940)
!17947 = !DILocation(line: 1448, column: 2, scope: !17948)
!17948 = distinct !DILexicalBlock(scope: !17949, file: !2507, line: 1448, column: 2)
!17949 = distinct !DILexicalBlock(scope: !17888, file: !2507, line: 1448, column: 2)
!17950 = !DILocation(line: 1448, column: 2, scope: !17949)
!17951 = !DILocation(line: 1448, column: 2, scope: !17952)
!17952 = distinct !DILexicalBlock(scope: !17948, file: !2507, line: 1448, column: 2)
!17953 = !DILocation(line: 1450, column: 10, scope: !17888)
!17954 = !DILocation(line: 1450, column: 45, scope: !17888)
!17955 = !DILocation(line: 1450, column: 43, scope: !17888)
!17956 = !DILocation(line: 1451, column: 6, scope: !17888)
!17957 = !DILocation(line: 1457, column: 1, scope: !17888)
!17958 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !14929, file: !14929, line: 1103, type: !14930, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17959)
!17959 = !{!17960}
!17960 = !DILocalVariable(name: "t", arg: 1, scope: !17958, file: !14929, line: 1103, type: !114)
!17961 = !DILocation(line: 0, scope: !17958)
!17962 = !DILocation(line: 0, scope: !16017, inlinedAt: !17963)
!17963 = distinct !DILocation(line: 1106, column: 9, scope: !17958)
!17964 = !DILocation(line: 139, column: 13, scope: !17965, inlinedAt: !17963)
!17965 = distinct !DILexicalBlock(scope: !17966, file: !14929, line: 138, column: 10)
!17966 = distinct !DILexicalBlock(scope: !17967, file: !14929, line: 136, column: 7)
!17967 = distinct !DILexicalBlock(scope: !16038, file: !14929, line: 134, column: 17)
!17968 = !DILocation(line: 1106, column: 2, scope: !17958)
!17969 = distinct !DISubprogram(name: "k_yield", scope: !3406, file: !3406, line: 140, type: !266, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !397)
!17970 = !DILocation(line: 148, column: 2, scope: !17971)
!17971 = distinct !DILexicalBlock(scope: !17969, file: !3406, line: 148, column: 2)
!17972 = !{i64 2152266522}
!17973 = !DILocation(line: 149, column: 2, scope: !17969)
!17974 = !DILocation(line: 150, column: 1, scope: !17969)
!17975 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2507, file: !2507, line: 1495, type: !17976, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17978)
!17976 = !DISubroutineType(types: !17977)
!17977 = !{!116, !105}
!17978 = !{!17979, !17980}
!17979 = !DILocalVariable(name: "us", arg: 1, scope: !17975, file: !2507, line: 1495, type: !105)
!17980 = !DILocalVariable(name: "ticks", scope: !17975, file: !2507, line: 1497, type: !116)
!17981 = !DILocation(line: 0, scope: !17975)
!17982 = !DILocation(line: 1501, column: 31, scope: !17975)
!17983 = !DILocation(line: 1501, column: 10, scope: !17975)
!17984 = !DILocation(line: 1502, column: 23, scope: !17975)
!17985 = !DILocation(line: 1502, column: 10, scope: !17975)
!17986 = !DILocation(line: 1506, column: 31, scope: !17975)
!17987 = !DILocation(line: 1506, column: 9, scope: !17975)
!17988 = !DILocation(line: 1506, column: 2, scope: !17975)
!17989 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !14929, file: !14929, line: 571, type: !14930, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17990)
!17990 = !{!17991}
!17991 = !DILocalVariable(name: "t", arg: 1, scope: !17989, file: !14929, line: 571, type: !114)
!17992 = !DILocation(line: 0, scope: !17989)
!17993 = !DILocation(line: 0, scope: !16017, inlinedAt: !17994)
!17994 = distinct !DILocation(line: 574, column: 9, scope: !17989)
!17995 = !DILocation(line: 135, column: 5, scope: !17967, inlinedAt: !17994)
!17996 = !DILocation(line: 139, column: 13, scope: !17965, inlinedAt: !17994)
!17997 = !DILocation(line: 574, column: 2, scope: !17989)
!17998 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !14929, file: !14929, line: 1187, type: !14930, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !17999)
!17999 = !{!18000}
!18000 = !DILocalVariable(name: "t", arg: 1, scope: !17998, file: !14929, line: 1187, type: !114)
!18001 = !DILocation(line: 0, scope: !17998)
!18002 = !DILocation(line: 0, scope: !16017, inlinedAt: !18003)
!18003 = distinct !DILocation(line: 1190, column: 9, scope: !17998)
!18004 = !DILocation(line: 145, column: 13, scope: !18005, inlinedAt: !18003)
!18005 = distinct !DILexicalBlock(scope: !16035, file: !14929, line: 144, column: 10)
!18006 = !DILocation(line: 1190, column: 2, scope: !17998)
!18007 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2507, file: !2507, line: 1517, type: !17878, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !18008)
!18008 = !{!18009}
!18009 = !DILocalVariable(name: "thread", arg: 1, scope: !18007, file: !2507, line: 1517, type: !17736)
!18010 = !DILocation(line: 0, scope: !18007)
!18011 = !DILocation(line: 1521, column: 6, scope: !18012)
!18012 = distinct !DILexicalBlock(scope: !18007, file: !2507, line: 1521, column: 6)
!18013 = !DILocation(line: 1521, column: 6, scope: !18007)
!18014 = !DILocation(line: 1525, column: 6, scope: !18015)
!18015 = distinct !DILexicalBlock(scope: !18007, file: !2507, line: 1525, column: 6)
!18016 = !DILocation(line: 1525, column: 37, scope: !18015)
!18017 = !DILocation(line: 1525, column: 6, scope: !18007)
!18018 = !DILocation(line: 1527, column: 20, scope: !18019)
!18019 = distinct !DILexicalBlock(scope: !18020, file: !2507, line: 1527, column: 7)
!18020 = distinct !DILexicalBlock(scope: !18015, file: !2507, line: 1525, column: 42)
!18021 = !DILocation(line: 1527, column: 33, scope: !18019)
!18022 = !DILocation(line: 1527, column: 7, scope: !18020)
!18023 = !DILocation(line: 1532, column: 2, scope: !18007)
!18024 = !DILocation(line: 1533, column: 2, scope: !18007)
!18025 = !DILocation(line: 1031, column: 3, scope: !16727, inlinedAt: !18026)
!18026 = distinct !DILocation(line: 48, column: 10, scope: !16731, inlinedAt: !18027)
!18027 = distinct !DILocation(line: 1537, column: 7, scope: !18028)
!18028 = distinct !DILexicalBlock(scope: !18007, file: !2507, line: 1537, column: 6)
!18029 = !DILocation(line: 0, scope: !16727, inlinedAt: !18026)
!18030 = !DILocation(line: 48, column: 9, scope: !16731, inlinedAt: !18027)
!18031 = !DILocation(line: 1537, column: 6, scope: !18007)
!18032 = !DILocation(line: 1538, column: 3, scope: !18033)
!18033 = distinct !DILexicalBlock(scope: !18028, file: !2507, line: 1537, column: 25)
!18034 = !DILocation(line: 1539, column: 2, scope: !18033)
!18035 = !DILocation(line: 1540, column: 1, scope: !18007)
!18036 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14312, file: !14312, line: 101, type: !16098, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !18037)
!18037 = !{!18038}
!18038 = !DILocalVariable(name: "thread", arg: 1, scope: !18036, file: !14312, line: 101, type: !2400)
!18039 = !DILocation(line: 0, scope: !18036)
!18040 = !DILocation(line: 103, column: 23, scope: !18036)
!18041 = !DILocation(line: 103, column: 36, scope: !18036)
!18042 = !DILocation(line: 103, column: 55, scope: !18036)
!18043 = !DILocation(line: 103, column: 2, scope: !18036)
!18044 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2507, file: !2507, line: 1567, type: !18045, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !18047)
!18045 = !DISubroutineType(types: !18046)
!18046 = !{!17736}
!18047 = !{!18048}
!18048 = !DILocalVariable(name: "ret", scope: !18044, file: !2507, line: 1577, type: !17736)
!18049 = !DILocation(line: 1577, column: 30, scope: !18044)
!18050 = !DILocation(line: 0, scope: !18044)
!18051 = !DILocation(line: 1582, column: 2, scope: !18044)
!18052 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2507, file: !2507, line: 1593, type: !9063, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !397)
!18053 = !DILocation(line: 1031, column: 3, scope: !16727, inlinedAt: !18054)
!18054 = distinct !DILocation(line: 48, column: 10, scope: !16731, inlinedAt: !18055)
!18055 = distinct !DILocation(line: 1595, column: 10, scope: !18052)
!18056 = !DILocation(line: 0, scope: !16727, inlinedAt: !18054)
!18057 = !DILocation(line: 48, column: 9, scope: !16731, inlinedAt: !18055)
!18058 = !DILocation(line: 1595, column: 27, scope: !18052)
!18059 = !DILocation(line: 1595, column: 41, scope: !18052)
!18060 = !DILocation(line: 1595, column: 30, scope: !18052)
!18061 = !DILocation(line: 1595, column: 2, scope: !18052)
!18062 = distinct !DISubprogram(name: "z_thread_abort", scope: !2507, file: !2507, line: 1725, type: !15915, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !18063)
!18063 = !{!18064, !18065}
!18064 = !DILocalVariable(name: "thread", arg: 1, scope: !18062, file: !2507, line: 1725, type: !2400)
!18065 = !DILocalVariable(name: "key", scope: !18062, file: !2507, line: 1727, type: !15949)
!18066 = !DILocation(line: 0, scope: !18062)
!18067 = !DILocation(line: 0, scope: !15957, inlinedAt: !18068)
!18068 = distinct !DILocation(line: 1727, column: 25, scope: !18062)
!18069 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !18070)
!18070 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !18068)
!18071 = !DILocation(line: 0, scope: !15966, inlinedAt: !18070)
!18072 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !18068)
!18073 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !18068)
!18074 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !18068)
!18075 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !18068)
!18076 = !DILocation(line: 1729, column: 20, scope: !18077)
!18077 = distinct !DILexicalBlock(scope: !18062, file: !2507, line: 1729, column: 6)
!18078 = !DILocation(line: 1729, column: 33, scope: !18077)
!18079 = !DILocation(line: 1729, column: 48, scope: !18077)
!18080 = !DILocation(line: 1729, column: 6, scope: !18062)
!18081 = !DILocation(line: 0, scope: !15991, inlinedAt: !18082)
!18082 = distinct !DILocation(line: 1730, column: 3, scope: !18083)
!18083 = distinct !DILexicalBlock(scope: !18077, file: !2507, line: 1729, column: 54)
!18084 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !18082)
!18085 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !18082)
!18086 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !18082)
!18087 = !DILocation(line: 0, scope: !16005, inlinedAt: !18088)
!18088 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !18082)
!18089 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !18088)
!18090 = !DILocation(line: 1731, column: 3, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !18092, file: !2507, line: 1731, column: 3)
!18092 = distinct !DILexicalBlock(scope: !18093, file: !2507, line: 1731, column: 3)
!18093 = distinct !DILexicalBlock(scope: !18083, file: !2507, line: 1731, column: 3)
!18094 = !DILocation(line: 1736, column: 20, scope: !18095)
!18095 = distinct !DILexicalBlock(scope: !18062, file: !2507, line: 1736, column: 6)
!18096 = !DILocation(line: 1736, column: 33, scope: !18095)
!18097 = !DILocation(line: 1736, column: 49, scope: !18095)
!18098 = !DILocation(line: 1736, column: 6, scope: !18062)
!18099 = !DILocation(line: 0, scope: !15991, inlinedAt: !18100)
!18100 = distinct !DILocation(line: 1737, column: 3, scope: !18101)
!18101 = distinct !DILexicalBlock(scope: !18095, file: !2507, line: 1736, column: 56)
!18102 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !18100)
!18103 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !18100)
!18104 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !18100)
!18105 = !DILocation(line: 0, scope: !16005, inlinedAt: !18106)
!18106 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !18100)
!18107 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !18106)
!18108 = !DILocation(line: 1738, column: 3, scope: !18101)
!18109 = !DILocation(line: 1775, column: 2, scope: !18062)
!18110 = !DILocation(line: 1776, column: 16, scope: !18111)
!18111 = distinct !DILexicalBlock(scope: !18062, file: !2507, line: 1776, column: 6)
!18112 = !DILocation(line: 1776, column: 13, scope: !18111)
!18113 = !DILocation(line: 1776, column: 25, scope: !18111)
!18114 = !DILocation(line: 1031, column: 3, scope: !16727, inlinedAt: !18115)
!18115 = distinct !DILocation(line: 48, column: 10, scope: !16731, inlinedAt: !18116)
!18116 = distinct !DILocation(line: 1776, column: 29, scope: !18111)
!18117 = !DILocation(line: 0, scope: !16727, inlinedAt: !18115)
!18118 = !DILocation(line: 48, column: 9, scope: !16731, inlinedAt: !18116)
!18119 = !DILocation(line: 1776, column: 6, scope: !18062)
!18120 = !DILocation(line: 0, scope: !16678, inlinedAt: !18121)
!18121 = distinct !DILocation(line: 1777, column: 3, scope: !18122)
!18122 = distinct !DILexicalBlock(scope: !18111, file: !2507, line: 1776, column: 47)
!18123 = !DILocation(line: 0, scope: !16687, inlinedAt: !18124)
!18124 = distinct !DILocation(line: 195, column: 2, scope: !16678, inlinedAt: !18121)
!18125 = !DILocation(line: 225, column: 2, scope: !16694, inlinedAt: !18124)
!18126 = !DILocation(line: 225, column: 2, scope: !16695, inlinedAt: !18124)
!18127 = !DILocation(line: 225, column: 2, scope: !16698, inlinedAt: !18124)
!18128 = !DILocation(line: 196, column: 9, scope: !16678, inlinedAt: !18121)
!18129 = !DILocation(line: 1778, column: 3, scope: !18130)
!18130 = distinct !DILexicalBlock(scope: !18131, file: !2507, line: 1778, column: 3)
!18131 = distinct !DILexicalBlock(scope: !18132, file: !2507, line: 1778, column: 3)
!18132 = distinct !DILexicalBlock(scope: !18122, file: !2507, line: 1778, column: 3)
!18133 = !DILocation(line: 0, scope: !15991, inlinedAt: !18134)
!18134 = distinct !DILocation(line: 1780, column: 2, scope: !18062)
!18135 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !18134)
!18136 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !18134)
!18137 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !18134)
!18138 = !DILocation(line: 0, scope: !16005, inlinedAt: !18139)
!18139 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !18134)
!18140 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !18139)
!18141 = !DILocation(line: 1781, column: 1, scope: !18062)
!18142 = distinct !DISubprogram(name: "end_thread", scope: !2507, file: !2507, line: 1690, type: !15915, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !18143)
!18143 = !{!18144}
!18144 = !DILocalVariable(name: "thread", arg: 1, scope: !18142, file: !2507, line: 1690, type: !2400)
!18145 = !DILocation(line: 0, scope: !18142)
!18146 = !DILocation(line: 1695, column: 20, scope: !18147)
!18147 = distinct !DILexicalBlock(scope: !18142, file: !2507, line: 1695, column: 6)
!18148 = !DILocation(line: 1695, column: 33, scope: !18147)
!18149 = !DILocation(line: 1695, column: 49, scope: !18147)
!18150 = !DILocation(line: 1695, column: 6, scope: !18142)
!18151 = !DILocation(line: 1697, column: 29, scope: !18152)
!18152 = distinct !DILexicalBlock(scope: !18147, file: !2507, line: 1695, column: 56)
!18153 = !DILocation(line: 1698, column: 7, scope: !18154)
!18154 = distinct !DILexicalBlock(scope: !18152, file: !2507, line: 1698, column: 7)
!18155 = !DILocation(line: 1698, column: 7, scope: !18152)
!18156 = !DILocation(line: 0, scope: !16149, inlinedAt: !18157)
!18157 = distinct !DILocation(line: 1699, column: 4, scope: !18158)
!18158 = distinct !DILexicalBlock(scope: !18154, file: !2507, line: 1698, column: 35)
!18159 = !DILocation(line: 266, column: 28, scope: !16149, inlinedAt: !18157)
!18160 = !DILocation(line: 0, scope: !16157, inlinedAt: !18161)
!18161 = distinct !DILocation(line: 268, column: 3, scope: !16161, inlinedAt: !18157)
!18162 = !DILocation(line: 234, column: 2, scope: !16157, inlinedAt: !18161)
!18163 = !DILocation(line: 1700, column: 3, scope: !18158)
!18164 = !DILocation(line: 1701, column: 20, scope: !18165)
!18165 = distinct !DILexicalBlock(scope: !18152, file: !2507, line: 1701, column: 7)
!18166 = !DILocation(line: 1701, column: 30, scope: !18165)
!18167 = !DILocation(line: 1701, column: 7, scope: !18152)
!18168 = !DILocation(line: 1702, column: 4, scope: !18169)
!18169 = distinct !DILexicalBlock(scope: !18165, file: !2507, line: 1701, column: 39)
!18170 = !DILocation(line: 1703, column: 3, scope: !18169)
!18171 = !DILocation(line: 1704, column: 9, scope: !18152)
!18172 = !DILocation(line: 1705, column: 23, scope: !18152)
!18173 = !DILocation(line: 1705, column: 3, scope: !18152)
!18174 = !DILocation(line: 1706, column: 3, scope: !18152)
!18175 = !DILocation(line: 1722, column: 2, scope: !18152)
!18176 = !DILocation(line: 1723, column: 1, scope: !18142)
!18177 = distinct !DISubprogram(name: "unpend_all", scope: !2507, file: !2507, line: 1674, type: !18178, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !18180)
!18178 = !DISubroutineType(types: !18179)
!18179 = !{null, !2431}
!18180 = !{!18181, !18182}
!18181 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18177, file: !2507, line: 1674, type: !2431)
!18182 = !DILocalVariable(name: "thread", scope: !18177, file: !2507, line: 1676, type: !2400)
!18183 = !DILocation(line: 0, scope: !18177)
!18184 = !DILocation(line: 1678, column: 19, scope: !18177)
!18185 = !DILocation(line: 1678, column: 41, scope: !18177)
!18186 = !DILocation(line: 1678, column: 2, scope: !18177)
!18187 = !DILocation(line: 1679, column: 3, scope: !18188)
!18188 = distinct !DILexicalBlock(scope: !18177, file: !2507, line: 1678, column: 50)
!18189 = !DILocation(line: 1680, column: 9, scope: !18188)
!18190 = !DILocalVariable(name: "thread", arg: 1, scope: !18191, file: !14353, line: 65, type: !2400)
!18191 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14353, file: !14353, line: 65, type: !18192, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !18194)
!18192 = !DISubroutineType(types: !18193)
!18193 = !{null, !2400, !32}
!18194 = !{!18190, !18195}
!18195 = !DILocalVariable(name: "value", arg: 2, scope: !18191, file: !14353, line: 65, type: !32)
!18196 = !DILocation(line: 0, scope: !18191, inlinedAt: !18197)
!18197 = distinct !DILocation(line: 1681, column: 3, scope: !18188)
!18198 = !DILocation(line: 67, column: 15, scope: !18191, inlinedAt: !18197)
!18199 = !DILocation(line: 67, column: 33, scope: !18191, inlinedAt: !18197)
!18200 = !DILocation(line: 1682, column: 3, scope: !18188)
!18201 = distinct !{!18201, !18186, !18202}
!18202 = !DILocation(line: 1683, column: 2, scope: !18177)
!18203 = !DILocation(line: 1684, column: 1, scope: !18177)
!18204 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2507, file: !2507, line: 1794, type: !18205, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !18207)
!18205 = !DISubroutineType(types: !18206)
!18206 = !{!105, !2400, !16888}
!18207 = !{!18208, !18209, !18210, !18211}
!18208 = !DILocalVariable(name: "thread", arg: 1, scope: !18204, file: !2507, line: 1794, type: !2400)
!18209 = !DILocalVariable(name: "timeout", arg: 2, scope: !18204, file: !2507, line: 1794, type: !16888)
!18210 = !DILocalVariable(name: "key", scope: !18204, file: !2507, line: 1796, type: !15949)
!18211 = !DILocalVariable(name: "ret", scope: !18204, file: !2507, line: 1797, type: !105)
!18212 = !DILocation(line: 0, scope: !18204)
!18213 = !DILocation(line: 0, scope: !15957, inlinedAt: !18214)
!18214 = distinct !DILocation(line: 1796, column: 25, scope: !18204)
!18215 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !18216)
!18216 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !18214)
!18217 = !DILocation(line: 0, scope: !15966, inlinedAt: !18216)
!18218 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !18214)
!18219 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !18214)
!18220 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !18214)
!18221 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !18214)
!18222 = !DILocation(line: 1801, column: 20, scope: !18223)
!18223 = distinct !DILexicalBlock(scope: !18204, file: !2507, line: 1801, column: 6)
!18224 = !DILocation(line: 1801, column: 33, scope: !18223)
!18225 = !DILocation(line: 1801, column: 49, scope: !18223)
!18226 = !DILocation(line: 1801, column: 6, scope: !18204)
!18227 = !DILocation(line: 1803, column: 13, scope: !18228)
!18228 = distinct !DILexicalBlock(scope: !18223, file: !2507, line: 1803, column: 13)
!18229 = !DILocation(line: 1803, column: 13, scope: !18223)
!18230 = !DILocation(line: 1805, column: 24, scope: !18231)
!18231 = distinct !DILexicalBlock(scope: !18228, file: !2507, line: 1805, column: 13)
!18232 = !DILocation(line: 1805, column: 21, scope: !18231)
!18233 = !DILocation(line: 1805, column: 34, scope: !18231)
!18234 = !DILocation(line: 1806, column: 20, scope: !18231)
!18235 = !DILocation(line: 1806, column: 44, scope: !18231)
!18236 = !DILocation(line: 1806, column: 30, scope: !18231)
!18237 = !DILocation(line: 1805, column: 13, scope: !18228)
!18238 = !DILocation(line: 1031, column: 3, scope: !16727, inlinedAt: !18239)
!18239 = distinct !DILocation(line: 48, column: 10, scope: !16731, inlinedAt: !18240)
!18240 = distinct !DILocation(line: 1809, column: 3, scope: !18241)
!18241 = distinct !DILexicalBlock(scope: !18242, file: !2507, line: 1809, column: 3)
!18242 = distinct !DILexicalBlock(scope: !18243, file: !2507, line: 1809, column: 3)
!18243 = distinct !DILexicalBlock(scope: !18231, file: !2507, line: 1808, column: 9)
!18244 = !DILocation(line: 0, scope: !16727, inlinedAt: !18239)
!18245 = !DILocation(line: 48, column: 9, scope: !16731, inlinedAt: !18240)
!18246 = !DILocation(line: 1809, column: 3, scope: !18242)
!18247 = !DILocation(line: 1809, column: 3, scope: !18248)
!18248 = distinct !DILexicalBlock(scope: !18241, file: !2507, line: 1809, column: 3)
!18249 = !DILocation(line: 1810, column: 23, scope: !18243)
!18250 = !DILocation(line: 1810, column: 42, scope: !18243)
!18251 = !DILocation(line: 1810, column: 3, scope: !18243)
!18252 = !DILocation(line: 1811, column: 22, scope: !18243)
!18253 = !DILocation(line: 1811, column: 3, scope: !18243)
!18254 = !DILocation(line: 0, scope: !16678, inlinedAt: !18255)
!18255 = distinct !DILocation(line: 1814, column: 9, scope: !18243)
!18256 = !DILocation(line: 0, scope: !16687, inlinedAt: !18257)
!18257 = distinct !DILocation(line: 195, column: 2, scope: !16678, inlinedAt: !18255)
!18258 = !DILocation(line: 225, column: 2, scope: !16694, inlinedAt: !18257)
!18259 = !DILocation(line: 225, column: 2, scope: !16695, inlinedAt: !18257)
!18260 = !DILocation(line: 225, column: 2, scope: !16698, inlinedAt: !18257)
!18261 = !DILocation(line: 196, column: 9, scope: !16678, inlinedAt: !18255)
!18262 = !DILocation(line: 1817, column: 3, scope: !18243)
!18263 = !DILocation(line: 0, scope: !18223)
!18264 = !DILocation(line: 0, scope: !15991, inlinedAt: !18265)
!18265 = distinct !DILocation(line: 1822, column: 2, scope: !18204)
!18266 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !18265)
!18267 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !18265)
!18268 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !18265)
!18269 = !DILocation(line: 0, scope: !16005, inlinedAt: !18270)
!18270 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !18265)
!18271 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !18270)
!18272 = !DILocation(line: 1823, column: 2, scope: !18204)
!18273 = !DILocation(line: 1824, column: 1, scope: !18204)
!18274 = distinct !DISubprogram(name: "z_sched_wake", scope: !2507, file: !2507, line: 1882, type: !18275, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !18277)
!18275 = !DISubroutineType(types: !18276)
!18276 = !{!505, !2431, !105, !104}
!18277 = !{!18278, !18279, !18280, !18281, !18282, !18283, !18285}
!18278 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18274, file: !2507, line: 1882, type: !2431)
!18279 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !18274, file: !2507, line: 1882, type: !105)
!18280 = !DILocalVariable(name: "swap_data", arg: 3, scope: !18274, file: !2507, line: 1882, type: !104)
!18281 = !DILocalVariable(name: "thread", scope: !18274, file: !2507, line: 1884, type: !2400)
!18282 = !DILocalVariable(name: "ret", scope: !18274, file: !2507, line: 1885, type: !505)
!18283 = !DILocalVariable(name: "__i", scope: !18284, file: !2507, line: 1887, type: !15949)
!18284 = distinct !DILexicalBlock(scope: !18274, file: !2507, line: 1887, column: 2)
!18285 = !DILocalVariable(name: "__key", scope: !18284, file: !2507, line: 1887, type: !15949)
!18286 = !DILocation(line: 0, scope: !18274)
!18287 = !DILocation(line: 0, scope: !18284)
!18288 = !DILocation(line: 0, scope: !15957, inlinedAt: !18289)
!18289 = distinct !DILocation(line: 1887, column: 2, scope: !18284)
!18290 = !DILocation(line: 55, column: 2, scope: !15966, inlinedAt: !18291)
!18291 = distinct !DILocation(line: 145, column: 10, scope: !15957, inlinedAt: !18289)
!18292 = !DILocation(line: 0, scope: !15966, inlinedAt: !18291)
!18293 = !DILocation(line: 148, column: 2, scope: !15974, inlinedAt: !18289)
!18294 = !DILocation(line: 148, column: 2, scope: !15975, inlinedAt: !18289)
!18295 = !DILocation(line: 148, column: 2, scope: !15978, inlinedAt: !18289)
!18296 = !DILocation(line: 160, column: 2, scope: !15957, inlinedAt: !18289)
!18297 = !DILocation(line: 1888, column: 12, scope: !18298)
!18298 = distinct !DILexicalBlock(scope: !18299, file: !2507, line: 1887, column: 26)
!18299 = distinct !DILexicalBlock(scope: !18284, file: !2507, line: 1887, column: 2)
!18300 = !DILocation(line: 1890, column: 14, scope: !18301)
!18301 = distinct !DILexicalBlock(scope: !18298, file: !2507, line: 1890, column: 7)
!18302 = !DILocation(line: 1890, column: 7, scope: !18298)
!18303 = !DILocalVariable(name: "thread", arg: 1, scope: !18304, file: !15202, line: 134, type: !2400)
!18304 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15202, file: !15202, line: 134, type: !18305, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !18307)
!18305 = !DISubroutineType(types: !18306)
!18306 = !{null, !2400, !32, !104}
!18307 = !{!18303, !18308, !18309}
!18308 = !DILocalVariable(name: "value", arg: 2, scope: !18304, file: !15202, line: 135, type: !32)
!18309 = !DILocalVariable(name: "data", arg: 3, scope: !18304, file: !15202, line: 136, type: !104)
!18310 = !DILocation(line: 0, scope: !18304, inlinedAt: !18311)
!18311 = distinct !DILocation(line: 1891, column: 4, scope: !18312)
!18312 = distinct !DILexicalBlock(scope: !18301, file: !2507, line: 1890, column: 23)
!18313 = !DILocation(line: 0, scope: !18191, inlinedAt: !18314)
!18314 = distinct !DILocation(line: 138, column: 2, scope: !18304, inlinedAt: !18311)
!18315 = !DILocation(line: 67, column: 15, scope: !18191, inlinedAt: !18314)
!18316 = !DILocation(line: 67, column: 33, scope: !18191, inlinedAt: !18314)
!18317 = !DILocation(line: 139, column: 15, scope: !18304, inlinedAt: !18311)
!18318 = !DILocation(line: 139, column: 25, scope: !18304, inlinedAt: !18311)
!18319 = !DILocation(line: 1894, column: 4, scope: !18312)
!18320 = !DILocation(line: 1895, column: 10, scope: !18312)
!18321 = !DILocation(line: 1896, column: 4, scope: !18312)
!18322 = !DILocation(line: 1898, column: 3, scope: !18312)
!18323 = !DILocation(line: 0, scope: !15991, inlinedAt: !18324)
!18324 = distinct !DILocation(line: 1887, column: 2, scope: !18299)
!18325 = !DILocation(line: 194, column: 2, scope: !15999, inlinedAt: !18324)
!18326 = !DILocation(line: 194, column: 2, scope: !16000, inlinedAt: !18324)
!18327 = !DILocation(line: 194, column: 2, scope: !16003, inlinedAt: !18324)
!18328 = !DILocation(line: 0, scope: !16005, inlinedAt: !18329)
!18329 = distinct !DILocation(line: 215, column: 2, scope: !15991, inlinedAt: !18324)
!18330 = !DILocation(line: 95, column: 2, scope: !16005, inlinedAt: !18329)
!18331 = !DILocation(line: 1901, column: 2, scope: !18274)
!18332 = distinct !DISubprogram(name: "z_sched_wait", scope: !2507, file: !2507, line: 1904, type: !18333, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !18336)
!18333 = !DISubroutineType(types: !18334)
!18334 = !{!105, !15960, !15949, !2431, !16888, !18335}
!18335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!18336 = !{!18337, !18338, !18339, !18340, !18341, !18342}
!18337 = !DILocalVariable(name: "lock", arg: 1, scope: !18332, file: !2507, line: 1904, type: !15960)
!18338 = !DILocalVariable(name: "key", arg: 2, scope: !18332, file: !2507, line: 1904, type: !15949)
!18339 = !DILocalVariable(name: "wait_q", arg: 3, scope: !18332, file: !2507, line: 1905, type: !2431)
!18340 = !DILocalVariable(name: "timeout", arg: 4, scope: !18332, file: !2507, line: 1905, type: !16888)
!18341 = !DILocalVariable(name: "data", arg: 5, scope: !18332, file: !2507, line: 1905, type: !18335)
!18342 = !DILocalVariable(name: "ret", scope: !18332, file: !2507, line: 1907, type: !105)
!18343 = !DILocation(line: 0, scope: !18332)
!18344 = !DILocation(line: 1907, column: 12, scope: !18332)
!18345 = !DILocation(line: 1909, column: 11, scope: !18346)
!18346 = distinct !DILexicalBlock(scope: !18332, file: !2507, line: 1909, column: 6)
!18347 = !DILocation(line: 1909, column: 6, scope: !18332)
!18348 = !DILocation(line: 1910, column: 11, scope: !18349)
!18349 = distinct !DILexicalBlock(scope: !18346, file: !2507, line: 1909, column: 20)
!18350 = !DILocation(line: 1910, column: 26, scope: !18349)
!18351 = !DILocation(line: 1910, column: 9, scope: !18349)
!18352 = !DILocation(line: 1911, column: 2, scope: !18349)
!18353 = !DILocation(line: 1912, column: 2, scope: !18332)
!18354 = distinct !DISubprogram(name: "z_data_copy", scope: !18355, file: !18355, line: 22, type: !266, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3243, retainedNodes: !397)
!18355 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18356 = !DILocation(line: 24, column: 2, scope: !18354)
!18357 = !DILocation(line: 27, column: 2, scope: !18354)
!18358 = !DILocation(line: 71, column: 1, scope: !18354)
!18359 = distinct !DISubprogram(name: "z_add_timeout", scope: !2544, file: !2544, line: 88, type: !18360, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18366)
!18360 = !DISubroutineType(types: !18361)
!18361 = !{null, !2517, !2536, !18362}
!18362 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !18363)
!18363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !18364)
!18364 = !{!18365}
!18365 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18363, file: !108, line: 66, baseType: !107, size: 64)
!18366 = !{!18367, !18368, !18369, !18370, !18376, !18377, !18380, !18383}
!18367 = !DILocalVariable(name: "to", arg: 1, scope: !18359, file: !2544, line: 88, type: !2517)
!18368 = !DILocalVariable(name: "fn", arg: 2, scope: !18359, file: !2544, line: 88, type: !2536)
!18369 = !DILocalVariable(name: "timeout", arg: 3, scope: !18359, file: !2544, line: 89, type: !18362)
!18370 = !DILocalVariable(name: "__i", scope: !18371, file: !2544, line: 102, type: !18372)
!18371 = distinct !DILexicalBlock(scope: !18359, file: !2544, line: 102, column: 2)
!18372 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !18373)
!18373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !18374)
!18374 = !{!18375}
!18375 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18373, file: !236, line: 33, baseType: !105, size: 32)
!18376 = !DILocalVariable(name: "__key", scope: !18371, file: !2544, line: 102, type: !18372)
!18377 = !DILocalVariable(name: "t", scope: !18378, file: !2544, line: 103, type: !2517)
!18378 = distinct !DILexicalBlock(scope: !18379, file: !2544, line: 102, column: 24)
!18379 = distinct !DILexicalBlock(scope: !18371, file: !2544, line: 102, column: 2)
!18380 = !DILocalVariable(name: "ticks", scope: !18381, file: !2544, line: 107, type: !107)
!18381 = distinct !DILexicalBlock(scope: !18382, file: !2544, line: 106, column: 39)
!18382 = distinct !DILexicalBlock(scope: !18378, file: !2544, line: 105, column: 7)
!18383 = !DILocalVariable(name: "next_time", scope: !18384, file: !2544, line: 137, type: !116)
!18384 = distinct !DILexicalBlock(scope: !18385, file: !2544, line: 127, column: 22)
!18385 = distinct !DILexicalBlock(scope: !18378, file: !2544, line: 127, column: 7)
!18386 = !DILocation(line: 0, scope: !18359)
!18387 = !DILocation(line: 91, column: 6, scope: !18388)
!18388 = distinct !DILexicalBlock(scope: !18359, file: !2544, line: 91, column: 6)
!18389 = !DILocation(line: 91, column: 6, scope: !18359)
!18390 = !DILocation(line: 99, column: 2, scope: !18391)
!18391 = distinct !DILexicalBlock(scope: !18392, file: !2544, line: 99, column: 2)
!18392 = distinct !DILexicalBlock(scope: !18359, file: !2544, line: 99, column: 2)
!18393 = !DILocation(line: 99, column: 2, scope: !18392)
!18394 = !DILocation(line: 99, column: 2, scope: !18395)
!18395 = distinct !DILexicalBlock(scope: !18391, file: !2544, line: 99, column: 2)
!18396 = !DILocation(line: 100, column: 6, scope: !18359)
!18397 = !DILocation(line: 100, column: 9, scope: !18359)
!18398 = !DILocation(line: 0, scope: !18371)
!18399 = !DILocalVariable(name: "l", arg: 1, scope: !18400, file: !236, line: 136, type: !18403)
!18400 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !18401, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18404)
!18401 = !DISubroutineType(types: !18402)
!18402 = !{!18372, !18403}
!18403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!18404 = !{!18399, !18405}
!18405 = !DILocalVariable(name: "k", scope: !18400, file: !236, line: 139, type: !18372)
!18406 = !DILocation(line: 0, scope: !18400, inlinedAt: !18407)
!18407 = distinct !DILocation(line: 102, column: 2, scope: !18371)
!18408 = !DILocation(line: 55, column: 2, scope: !18409, inlinedAt: !18413)
!18409 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7419, file: !7419, line: 42, type: !7420, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18410)
!18410 = !{!18411, !18412}
!18411 = !DILocalVariable(name: "key", scope: !18409, file: !7419, line: 44, type: !32)
!18412 = !DILocalVariable(name: "tmp", scope: !18409, file: !7419, line: 53, type: !32)
!18413 = distinct !DILocation(line: 145, column: 10, scope: !18400, inlinedAt: !18407)
!18414 = !{i64 1658020}
!18415 = !DILocation(line: 0, scope: !18409, inlinedAt: !18413)
!18416 = !DILocation(line: 148, column: 2, scope: !18417, inlinedAt: !18407)
!18417 = distinct !DILexicalBlock(scope: !18418, file: !236, line: 148, column: 2)
!18418 = distinct !DILexicalBlock(scope: !18400, file: !236, line: 148, column: 2)
!18419 = !DILocation(line: 148, column: 2, scope: !18418, inlinedAt: !18407)
!18420 = !DILocation(line: 148, column: 2, scope: !18421, inlinedAt: !18407)
!18421 = distinct !DILexicalBlock(scope: !18417, file: !236, line: 148, column: 2)
!18422 = !DILocation(line: 160, column: 2, scope: !18400, inlinedAt: !18407)
!18423 = !DILocation(line: 106, column: 33, scope: !18382)
!18424 = !DILocation(line: 105, column: 7, scope: !18378)
!18425 = !DILocation(line: 107, column: 50, scope: !18381)
!18426 = !DILocation(line: 107, column: 48, scope: !18381)
!18427 = !DILocation(line: 0, scope: !18381)
!18428 = !DILocation(line: 109, column: 17, scope: !18381)
!18429 = !DILocation(line: 110, column: 3, scope: !18381)
!18430 = !DILocation(line: 111, column: 31, scope: !18431)
!18431 = distinct !DILexicalBlock(scope: !18382, file: !2544, line: 110, column: 10)
!18432 = !DILocation(line: 111, column: 37, scope: !18431)
!18433 = !DILocation(line: 111, column: 35, scope: !18431)
!18434 = !DILocation(line: 0, scope: !18382)
!18435 = !DILocation(line: 109, column: 8, scope: !18381)
!18436 = !DILocation(line: 109, column: 15, scope: !18381)
!18437 = !DILocation(line: 114, column: 12, scope: !18438)
!18438 = distinct !DILexicalBlock(scope: !18378, file: !2544, line: 114, column: 3)
!18439 = !DILocation(line: 0, scope: !18378)
!18440 = !DILocation(line: 114, column: 3, scope: !18438)
!18441 = !DILocation(line: 115, column: 24, scope: !18442)
!18442 = distinct !DILexicalBlock(scope: !18443, file: !2544, line: 115, column: 8)
!18443 = distinct !DILexicalBlock(scope: !18444, file: !2544, line: 114, column: 45)
!18444 = distinct !DILexicalBlock(scope: !18438, file: !2544, line: 114, column: 3)
!18445 = !DILocation(line: 115, column: 11, scope: !18442)
!18446 = !DILocation(line: 115, column: 18, scope: !18442)
!18447 = !DILocation(line: 115, column: 8, scope: !18443)
!18448 = !DILocation(line: 116, column: 15, scope: !18449)
!18449 = distinct !DILexicalBlock(scope: !18442, file: !2544, line: 115, column: 32)
!18450 = !DILocation(line: 117, column: 26, scope: !18449)
!18451 = !DILocation(line: 117, column: 5, scope: !18449)
!18452 = !DILocation(line: 123, column: 7, scope: !18378)
!18453 = !DILocation(line: 120, column: 15, scope: !18443)
!18454 = !DILocation(line: 114, column: 36, scope: !18444)
!18455 = distinct !{!18455, !18440, !18456}
!18456 = !DILocation(line: 121, column: 3, scope: !18438)
!18457 = !DILocation(line: 124, column: 4, scope: !18458)
!18458 = distinct !DILexicalBlock(scope: !18459, file: !2544, line: 123, column: 18)
!18459 = distinct !DILexicalBlock(scope: !18378, file: !2544, line: 123, column: 7)
!18460 = !DILocation(line: 125, column: 3, scope: !18458)
!18461 = !DILocation(line: 127, column: 13, scope: !18385)
!18462 = !DILocation(line: 127, column: 10, scope: !18385)
!18463 = !DILocation(line: 127, column: 7, scope: !18378)
!18464 = !DILocation(line: 137, column: 24, scope: !18384)
!18465 = !DILocation(line: 0, scope: !18384)
!18466 = !DILocation(line: 139, column: 18, scope: !18467)
!18467 = distinct !DILexicalBlock(scope: !18384, file: !2544, line: 139, column: 8)
!18468 = !DILocation(line: 139, column: 23, scope: !18467)
!18469 = !DILocation(line: 141, column: 5, scope: !18470)
!18470 = distinct !DILexicalBlock(scope: !18467, file: !2544, line: 140, column: 48)
!18471 = !DILocation(line: 142, column: 4, scope: !18470)
!18472 = !DILocalVariable(name: "key", arg: 2, scope: !18473, file: !236, line: 190, type: !18372)
!18473 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !18474, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18476)
!18474 = !DISubroutineType(types: !18475)
!18475 = !{null, !18403, !18372}
!18476 = !{!18477, !18472}
!18477 = !DILocalVariable(name: "l", arg: 1, scope: !18473, file: !236, line: 189, type: !18403)
!18478 = !DILocation(line: 0, scope: !18473, inlinedAt: !18479)
!18479 = distinct !DILocation(line: 102, column: 2, scope: !18379)
!18480 = !DILocation(line: 194, column: 2, scope: !18481, inlinedAt: !18479)
!18481 = distinct !DILexicalBlock(scope: !18482, file: !236, line: 194, column: 2)
!18482 = distinct !DILexicalBlock(scope: !18473, file: !236, line: 194, column: 2)
!18483 = !DILocation(line: 194, column: 2, scope: !18482, inlinedAt: !18479)
!18484 = !DILocation(line: 194, column: 2, scope: !18485, inlinedAt: !18479)
!18485 = distinct !DILexicalBlock(scope: !18481, file: !236, line: 194, column: 2)
!18486 = !DILocalVariable(name: "key", arg: 1, scope: !18487, file: !7419, line: 84, type: !32)
!18487 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7419, file: !7419, line: 84, type: !7430, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18488)
!18488 = !{!18486}
!18489 = !DILocation(line: 0, scope: !18487, inlinedAt: !18490)
!18490 = distinct !DILocation(line: 215, column: 2, scope: !18473, inlinedAt: !18479)
!18491 = !DILocation(line: 95, column: 2, scope: !18487, inlinedAt: !18490)
!18492 = !{i64 1658837}
!18493 = !DILocation(line: 148, column: 1, scope: !18359)
!18494 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !18495, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18499)
!18495 = !DISubroutineType(types: !18496)
!18496 = !{!505, !18497}
!18497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18498, size: 32)
!18498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2521)
!18499 = !{!18500}
!18500 = !DILocalVariable(name: "node", arg: 1, scope: !18494, file: !137, line: 225, type: !18497)
!18501 = !DILocation(line: 0, scope: !18494)
!18502 = !DILocation(line: 227, column: 15, scope: !18494)
!18503 = !DILocation(line: 227, column: 20, scope: !18494)
!18504 = !DILocation(line: 227, column: 2, scope: !18494)
!18505 = distinct !DISubprogram(name: "elapsed", scope: !2544, file: !2544, line: 62, type: !18506, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !397)
!18506 = !DISubroutineType(types: !18507)
!18507 = !{!116}
!18508 = !DILocation(line: 64, column: 9, scope: !18505)
!18509 = !DILocation(line: 64, column: 28, scope: !18505)
!18510 = !DILocation(line: 64, column: 35, scope: !18505)
!18511 = !DILocation(line: 64, column: 2, scope: !18505)
!18512 = distinct !DISubprogram(name: "first", scope: !2544, file: !2544, line: 39, type: !18513, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18515)
!18513 = !DISubroutineType(types: !18514)
!18514 = !{!2517}
!18515 = !{!18516}
!18516 = !DILocalVariable(name: "t", scope: !18512, file: !2544, line: 41, type: !18517)
!18517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 32)
!18518 = !DILocation(line: 41, column: 19, scope: !18512)
!18519 = !DILocation(line: 0, scope: !18512)
!18520 = !DILocation(line: 43, column: 9, scope: !18512)
!18521 = !DILocation(line: 43, column: 2, scope: !18512)
!18522 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !18523, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18525)
!18523 = !DISubroutineType(types: !18524)
!18524 = !{null, !18517, !18517}
!18525 = !{!18526, !18527, !18528}
!18526 = !DILocalVariable(name: "successor", arg: 1, scope: !18522, file: !137, line: 443, type: !18517)
!18527 = !DILocalVariable(name: "node", arg: 2, scope: !18522, file: !137, line: 443, type: !18517)
!18528 = !DILocalVariable(name: "prev", scope: !18522, file: !137, line: 445, type: !18529)
!18529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18517)
!18530 = !DILocation(line: 0, scope: !18522)
!18531 = !DILocation(line: 445, column: 39, scope: !18522)
!18532 = !DILocation(line: 447, column: 8, scope: !18522)
!18533 = !DILocation(line: 447, column: 13, scope: !18522)
!18534 = !DILocation(line: 448, column: 8, scope: !18522)
!18535 = !DILocation(line: 448, column: 13, scope: !18522)
!18536 = !DILocation(line: 449, column: 8, scope: !18522)
!18537 = !DILocation(line: 449, column: 13, scope: !18522)
!18538 = !DILocation(line: 450, column: 18, scope: !18522)
!18539 = !DILocation(line: 451, column: 1, scope: !18522)
!18540 = distinct !DISubprogram(name: "next", scope: !2544, file: !2544, line: 46, type: !18541, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18543)
!18541 = !DISubroutineType(types: !18542)
!18542 = !{!2517, !2517}
!18543 = !{!18544, !18545}
!18544 = !DILocalVariable(name: "t", arg: 1, scope: !18540, file: !2544, line: 46, type: !2517)
!18545 = !DILocalVariable(name: "n", scope: !18540, file: !2544, line: 48, type: !18517)
!18546 = !DILocation(line: 0, scope: !18540)
!18547 = !DILocation(line: 48, column: 58, scope: !18540)
!18548 = !DILocation(line: 48, column: 19, scope: !18540)
!18549 = !DILocation(line: 50, column: 9, scope: !18540)
!18550 = !DILocation(line: 50, column: 2, scope: !18540)
!18551 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !18552, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18555)
!18552 = !DISubroutineType(types: !18553)
!18553 = !{null, !18554, !18517}
!18554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 32)
!18555 = !{!18556, !18557, !18558}
!18556 = !DILocalVariable(name: "list", arg: 1, scope: !18551, file: !137, line: 404, type: !18554)
!18557 = !DILocalVariable(name: "node", arg: 2, scope: !18551, file: !137, line: 404, type: !18517)
!18558 = !DILocalVariable(name: "tail", scope: !18551, file: !137, line: 406, type: !18529)
!18559 = !DILocation(line: 0, scope: !18551)
!18560 = !DILocation(line: 406, column: 34, scope: !18551)
!18561 = !DILocation(line: 408, column: 8, scope: !18551)
!18562 = !DILocation(line: 408, column: 13, scope: !18551)
!18563 = !DILocation(line: 409, column: 8, scope: !18551)
!18564 = !DILocation(line: 409, column: 13, scope: !18551)
!18565 = !DILocation(line: 411, column: 8, scope: !18551)
!18566 = !DILocation(line: 411, column: 13, scope: !18551)
!18567 = !DILocation(line: 412, column: 13, scope: !18551)
!18568 = !DILocation(line: 413, column: 1, scope: !18551)
!18569 = distinct !DISubprogram(name: "next_timeout", scope: !2544, file: !2544, line: 67, type: !18506, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18570)
!18570 = !{!18571, !18572, !18573}
!18571 = !DILocalVariable(name: "to", scope: !18569, file: !2544, line: 69, type: !2517)
!18572 = !DILocalVariable(name: "ticks_elapsed", scope: !18569, file: !2544, line: 70, type: !116)
!18573 = !DILocalVariable(name: "ret", scope: !18569, file: !2544, line: 71, type: !116)
!18574 = !DILocation(line: 69, column: 24, scope: !18569)
!18575 = !DILocation(line: 0, scope: !18569)
!18576 = !DILocation(line: 70, column: 26, scope: !18569)
!18577 = !DILocation(line: 73, column: 10, scope: !18578)
!18578 = distinct !DILexicalBlock(scope: !18569, file: !2544, line: 73, column: 6)
!18579 = !DILocation(line: 73, column: 19, scope: !18578)
!18580 = !DILocation(line: 74, column: 21, scope: !18578)
!18581 = !DILocation(line: 74, column: 30, scope: !18578)
!18582 = !DILocation(line: 74, column: 28, scope: !18578)
!18583 = !DILocation(line: 74, column: 45, scope: !18578)
!18584 = !DILocation(line: 73, column: 6, scope: !18569)
!18585 = !DILocation(line: 77, column: 9, scope: !18586)
!18586 = distinct !DILexicalBlock(scope: !18578, file: !2544, line: 76, column: 9)
!18587 = !DILocation(line: 0, scope: !18578)
!18588 = !DILocation(line: 81, column: 20, scope: !18589)
!18589 = distinct !DILexicalBlock(scope: !18569, file: !2544, line: 81, column: 6)
!18590 = !DILocation(line: 81, column: 6, scope: !18589)
!18591 = !DILocation(line: 81, column: 32, scope: !18589)
!18592 = !DILocation(line: 85, column: 2, scope: !18569)
!18593 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !18594, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18596)
!18594 = !DISubroutineType(types: !18595)
!18595 = !{!18517, !18554, !18517}
!18596 = !{!18597, !18598}
!18597 = !DILocalVariable(name: "list", arg: 1, scope: !18593, file: !137, line: 341, type: !18554)
!18598 = !DILocalVariable(name: "node", arg: 2, scope: !18593, file: !137, line: 342, type: !18517)
!18599 = !DILocation(line: 0, scope: !18593)
!18600 = !DILocation(line: 344, column: 15, scope: !18593)
!18601 = !DILocation(line: 344, column: 9, scope: !18593)
!18602 = !DILocation(line: 344, column: 26, scope: !18593)
!18603 = !DILocation(line: 344, column: 2, scope: !18593)
!18604 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !18594, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18605)
!18605 = !{!18606, !18607}
!18606 = !DILocalVariable(name: "list", arg: 1, scope: !18604, file: !137, line: 325, type: !18554)
!18607 = !DILocalVariable(name: "node", arg: 2, scope: !18604, file: !137, line: 326, type: !18517)
!18608 = !DILocation(line: 0, scope: !18604)
!18609 = !DILocation(line: 328, column: 24, scope: !18604)
!18610 = !DILocation(line: 328, column: 15, scope: !18604)
!18611 = !DILocation(line: 328, column: 9, scope: !18604)
!18612 = !DILocation(line: 328, column: 45, scope: !18604)
!18613 = !DILocation(line: 328, column: 2, scope: !18604)
!18614 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !18615, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18617)
!18615 = !DISubroutineType(types: !18616)
!18616 = !{!18517, !18554}
!18617 = !{!18618}
!18618 = !DILocalVariable(name: "list", arg: 1, scope: !18614, file: !137, line: 294, type: !18554)
!18619 = !DILocation(line: 0, scope: !18614)
!18620 = !DILocation(line: 296, column: 9, scope: !18614)
!18621 = !DILocation(line: 296, column: 2, scope: !18614)
!18622 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !18623, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18625)
!18623 = !DISubroutineType(types: !18624)
!18624 = !{!505, !18554}
!18625 = !{!18626}
!18626 = !DILocalVariable(name: "list", arg: 1, scope: !18622, file: !137, line: 266, type: !18554)
!18627 = !DILocation(line: 0, scope: !18622)
!18628 = !DILocation(line: 268, column: 15, scope: !18622)
!18629 = !DILocation(line: 268, column: 20, scope: !18622)
!18630 = !DILocation(line: 268, column: 2, scope: !18622)
!18631 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2544, file: !2544, line: 150, type: !18632, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18634)
!18632 = !DISubroutineType(types: !18633)
!18633 = !{!105, !2517}
!18634 = !{!18635, !18636, !18637, !18639}
!18635 = !DILocalVariable(name: "to", arg: 1, scope: !18631, file: !2544, line: 150, type: !2517)
!18636 = !DILocalVariable(name: "ret", scope: !18631, file: !2544, line: 152, type: !105)
!18637 = !DILocalVariable(name: "__i", scope: !18638, file: !2544, line: 154, type: !18372)
!18638 = distinct !DILexicalBlock(scope: !18631, file: !2544, line: 154, column: 2)
!18639 = !DILocalVariable(name: "__key", scope: !18638, file: !2544, line: 154, type: !18372)
!18640 = !DILocation(line: 0, scope: !18631)
!18641 = !DILocation(line: 0, scope: !18638)
!18642 = !DILocation(line: 0, scope: !18400, inlinedAt: !18643)
!18643 = distinct !DILocation(line: 154, column: 2, scope: !18638)
!18644 = !DILocation(line: 55, column: 2, scope: !18409, inlinedAt: !18645)
!18645 = distinct !DILocation(line: 145, column: 10, scope: !18400, inlinedAt: !18643)
!18646 = !DILocation(line: 0, scope: !18409, inlinedAt: !18645)
!18647 = !DILocation(line: 148, column: 2, scope: !18417, inlinedAt: !18643)
!18648 = !DILocation(line: 148, column: 2, scope: !18418, inlinedAt: !18643)
!18649 = !DILocation(line: 148, column: 2, scope: !18421, inlinedAt: !18643)
!18650 = !DILocation(line: 160, column: 2, scope: !18400, inlinedAt: !18643)
!18651 = !DILocation(line: 155, column: 7, scope: !18652)
!18652 = distinct !DILexicalBlock(scope: !18653, file: !2544, line: 155, column: 7)
!18653 = distinct !DILexicalBlock(scope: !18654, file: !2544, line: 154, column: 24)
!18654 = distinct !DILexicalBlock(scope: !18638, file: !2544, line: 154, column: 2)
!18655 = !DILocation(line: 155, column: 7, scope: !18653)
!18656 = !DILocation(line: 156, column: 4, scope: !18657)
!18657 = distinct !DILexicalBlock(scope: !18652, file: !2544, line: 155, column: 39)
!18658 = !DILocation(line: 158, column: 3, scope: !18657)
!18659 = !DILocation(line: 0, scope: !18473, inlinedAt: !18660)
!18660 = distinct !DILocation(line: 154, column: 2, scope: !18654)
!18661 = !DILocation(line: 194, column: 2, scope: !18481, inlinedAt: !18660)
!18662 = !DILocation(line: 194, column: 2, scope: !18482, inlinedAt: !18660)
!18663 = !DILocation(line: 194, column: 2, scope: !18485, inlinedAt: !18660)
!18664 = !DILocation(line: 0, scope: !18487, inlinedAt: !18665)
!18665 = distinct !DILocation(line: 215, column: 2, scope: !18473, inlinedAt: !18660)
!18666 = !DILocation(line: 95, column: 2, scope: !18487, inlinedAt: !18665)
!18667 = !DILocation(line: 161, column: 2, scope: !18631)
!18668 = distinct !DISubprogram(name: "remove_timeout", scope: !2544, file: !2544, line: 53, type: !2538, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18669)
!18669 = !{!18670}
!18670 = !DILocalVariable(name: "t", arg: 1, scope: !18668, file: !2544, line: 53, type: !2517)
!18671 = !DILocation(line: 0, scope: !18668)
!18672 = !DILocation(line: 55, column: 6, scope: !18673)
!18673 = distinct !DILexicalBlock(scope: !18668, file: !2544, line: 55, column: 6)
!18674 = !DILocation(line: 55, column: 14, scope: !18673)
!18675 = !DILocation(line: 55, column: 6, scope: !18668)
!18676 = !DILocation(line: 56, column: 25, scope: !18677)
!18677 = distinct !DILexicalBlock(scope: !18673, file: !2544, line: 55, column: 23)
!18678 = !DILocation(line: 56, column: 12, scope: !18677)
!18679 = !DILocation(line: 56, column: 19, scope: !18677)
!18680 = !DILocation(line: 57, column: 2, scope: !18677)
!18681 = !DILocation(line: 59, column: 23, scope: !18668)
!18682 = !DILocation(line: 59, column: 2, scope: !18668)
!18683 = !DILocation(line: 60, column: 1, scope: !18668)
!18684 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !18685, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18687)
!18685 = !DISubroutineType(types: !18686)
!18686 = !{null, !18517}
!18687 = !{!18688, !18689, !18690}
!18688 = !DILocalVariable(name: "node", arg: 1, scope: !18684, file: !137, line: 496, type: !18517)
!18689 = !DILocalVariable(name: "prev", scope: !18684, file: !137, line: 498, type: !18529)
!18690 = !DILocalVariable(name: "next", scope: !18684, file: !137, line: 499, type: !18529)
!18691 = !DILocation(line: 0, scope: !18684)
!18692 = !DILocation(line: 498, column: 34, scope: !18684)
!18693 = !DILocation(line: 499, column: 34, scope: !18684)
!18694 = !DILocation(line: 501, column: 8, scope: !18684)
!18695 = !DILocation(line: 501, column: 13, scope: !18684)
!18696 = !DILocation(line: 502, column: 8, scope: !18684)
!18697 = !DILocation(line: 502, column: 13, scope: !18684)
!18698 = !DILocation(line: 503, column: 2, scope: !18684)
!18699 = !DILocation(line: 504, column: 1, scope: !18684)
!18700 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !18685, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18701)
!18701 = !{!18702}
!18702 = !DILocalVariable(name: "node", arg: 1, scope: !18700, file: !137, line: 211, type: !18517)
!18703 = !DILocation(line: 0, scope: !18700)
!18704 = !DILocation(line: 213, column: 8, scope: !18700)
!18705 = !DILocation(line: 213, column: 13, scope: !18700)
!18706 = !DILocation(line: 214, column: 8, scope: !18700)
!18707 = !DILocation(line: 214, column: 13, scope: !18700)
!18708 = !DILocation(line: 215, column: 1, scope: !18700)
!18709 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2544, file: !2544, line: 183, type: !18710, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18714)
!18710 = !DISubroutineType(types: !18711)
!18711 = !{!107, !18712}
!18712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18713, size: 32)
!18713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2518)
!18714 = !{!18715, !18716, !18717, !18719}
!18715 = !DILocalVariable(name: "timeout", arg: 1, scope: !18709, file: !2544, line: 183, type: !18712)
!18716 = !DILocalVariable(name: "ticks", scope: !18709, file: !2544, line: 185, type: !107)
!18717 = !DILocalVariable(name: "__i", scope: !18718, file: !2544, line: 187, type: !18372)
!18718 = distinct !DILexicalBlock(scope: !18709, file: !2544, line: 187, column: 2)
!18719 = !DILocalVariable(name: "__key", scope: !18718, file: !2544, line: 187, type: !18372)
!18720 = !DILocation(line: 0, scope: !18709)
!18721 = !DILocation(line: 0, scope: !18718)
!18722 = !DILocation(line: 0, scope: !18400, inlinedAt: !18723)
!18723 = distinct !DILocation(line: 187, column: 2, scope: !18718)
!18724 = !DILocation(line: 55, column: 2, scope: !18409, inlinedAt: !18725)
!18725 = distinct !DILocation(line: 145, column: 10, scope: !18400, inlinedAt: !18723)
!18726 = !DILocation(line: 0, scope: !18409, inlinedAt: !18725)
!18727 = !DILocation(line: 148, column: 2, scope: !18417, inlinedAt: !18723)
!18728 = !DILocation(line: 148, column: 2, scope: !18418, inlinedAt: !18723)
!18729 = !DILocation(line: 148, column: 2, scope: !18421, inlinedAt: !18723)
!18730 = !DILocation(line: 160, column: 2, scope: !18400, inlinedAt: !18723)
!18731 = !DILocation(line: 188, column: 11, scope: !18732)
!18732 = distinct !DILexicalBlock(scope: !18733, file: !2544, line: 187, column: 24)
!18733 = distinct !DILexicalBlock(scope: !18718, file: !2544, line: 187, column: 2)
!18734 = !DILocation(line: 0, scope: !18473, inlinedAt: !18735)
!18735 = distinct !DILocation(line: 187, column: 2, scope: !18733)
!18736 = !DILocation(line: 194, column: 2, scope: !18481, inlinedAt: !18735)
!18737 = !DILocation(line: 194, column: 2, scope: !18482, inlinedAt: !18735)
!18738 = !DILocation(line: 194, column: 2, scope: !18485, inlinedAt: !18735)
!18739 = !DILocation(line: 0, scope: !18487, inlinedAt: !18740)
!18740 = distinct !DILocation(line: 215, column: 2, scope: !18473, inlinedAt: !18735)
!18741 = !DILocation(line: 95, column: 2, scope: !18487, inlinedAt: !18740)
!18742 = !DILocation(line: 191, column: 2, scope: !18709)
!18743 = distinct !DISubprogram(name: "timeout_rem", scope: !2544, file: !2544, line: 165, type: !18710, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18744)
!18744 = !{!18745, !18746, !18747}
!18745 = !DILocalVariable(name: "timeout", arg: 1, scope: !18743, file: !2544, line: 165, type: !18712)
!18746 = !DILocalVariable(name: "ticks", scope: !18743, file: !2544, line: 167, type: !107)
!18747 = !DILocalVariable(name: "t", scope: !18748, file: !2544, line: 173, type: !2517)
!18748 = distinct !DILexicalBlock(scope: !18743, file: !2544, line: 173, column: 2)
!18749 = !DILocation(line: 0, scope: !18743)
!18750 = !DILocation(line: 169, column: 6, scope: !18751)
!18751 = distinct !DILexicalBlock(scope: !18743, file: !2544, line: 169, column: 6)
!18752 = !DILocation(line: 169, column: 6, scope: !18743)
!18753 = !DILocation(line: 173, column: 28, scope: !18748)
!18754 = !DILocation(line: 0, scope: !18748)
!18755 = !DILocation(line: 173, column: 39, scope: !18756)
!18756 = distinct !DILexicalBlock(scope: !18748, file: !2544, line: 173, column: 2)
!18757 = !DILocation(line: 173, column: 2, scope: !18748)
!18758 = !DILocation(line: 174, column: 15, scope: !18759)
!18759 = distinct !DILexicalBlock(scope: !18756, file: !2544, line: 173, column: 61)
!18760 = !DILocation(line: 174, column: 9, scope: !18759)
!18761 = !DILocation(line: 175, column: 15, scope: !18762)
!18762 = distinct !DILexicalBlock(scope: !18759, file: !2544, line: 175, column: 7)
!18763 = !DILocation(line: 175, column: 7, scope: !18759)
!18764 = !DILocation(line: 173, column: 52, scope: !18756)
!18765 = distinct !{!18765, !18757, !18766}
!18766 = !DILocation(line: 178, column: 2, scope: !18748)
!18767 = !DILocation(line: 180, column: 17, scope: !18743)
!18768 = !DILocation(line: 180, column: 15, scope: !18743)
!18769 = !DILocation(line: 180, column: 2, scope: !18743)
!18770 = !DILocation(line: 181, column: 1, scope: !18743)
!18771 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14741, file: !14741, line: 35, type: !18772, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18774)
!18772 = !DISubroutineType(types: !18773)
!18773 = !{!505, !18712}
!18774 = !{!18775}
!18775 = !DILocalVariable(name: "to", arg: 1, scope: !18771, file: !14741, line: 35, type: !18712)
!18776 = !DILocation(line: 0, scope: !18771)
!18777 = !DILocation(line: 37, column: 35, scope: !18771)
!18778 = !DILocation(line: 37, column: 10, scope: !18771)
!18779 = !DILocation(line: 37, column: 9, scope: !18771)
!18780 = !DILocation(line: 37, column: 2, scope: !18771)
!18781 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2544, file: !2544, line: 194, type: !18710, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18782)
!18782 = !{!18783, !18784, !18785, !18787}
!18783 = !DILocalVariable(name: "timeout", arg: 1, scope: !18781, file: !2544, line: 194, type: !18712)
!18784 = !DILocalVariable(name: "ticks", scope: !18781, file: !2544, line: 196, type: !107)
!18785 = !DILocalVariable(name: "__i", scope: !18786, file: !2544, line: 198, type: !18372)
!18786 = distinct !DILexicalBlock(scope: !18781, file: !2544, line: 198, column: 2)
!18787 = !DILocalVariable(name: "__key", scope: !18786, file: !2544, line: 198, type: !18372)
!18788 = !DILocation(line: 0, scope: !18781)
!18789 = !DILocation(line: 0, scope: !18786)
!18790 = !DILocation(line: 0, scope: !18400, inlinedAt: !18791)
!18791 = distinct !DILocation(line: 198, column: 2, scope: !18786)
!18792 = !DILocation(line: 55, column: 2, scope: !18409, inlinedAt: !18793)
!18793 = distinct !DILocation(line: 145, column: 10, scope: !18400, inlinedAt: !18791)
!18794 = !DILocation(line: 0, scope: !18409, inlinedAt: !18793)
!18795 = !DILocation(line: 148, column: 2, scope: !18417, inlinedAt: !18791)
!18796 = !DILocation(line: 148, column: 2, scope: !18418, inlinedAt: !18791)
!18797 = !DILocation(line: 148, column: 2, scope: !18421, inlinedAt: !18791)
!18798 = !DILocation(line: 160, column: 2, scope: !18400, inlinedAt: !18791)
!18799 = !DILocation(line: 199, column: 11, scope: !18800)
!18800 = distinct !DILexicalBlock(scope: !18801, file: !2544, line: 198, column: 24)
!18801 = distinct !DILexicalBlock(scope: !18786, file: !2544, line: 198, column: 2)
!18802 = !DILocation(line: 199, column: 23, scope: !18800)
!18803 = !DILocation(line: 0, scope: !18473, inlinedAt: !18804)
!18804 = distinct !DILocation(line: 198, column: 2, scope: !18801)
!18805 = !DILocation(line: 194, column: 2, scope: !18481, inlinedAt: !18804)
!18806 = !DILocation(line: 194, column: 2, scope: !18482, inlinedAt: !18804)
!18807 = !DILocation(line: 194, column: 2, scope: !18485, inlinedAt: !18804)
!18808 = !DILocation(line: 0, scope: !18487, inlinedAt: !18809)
!18809 = distinct !DILocation(line: 215, column: 2, scope: !18473, inlinedAt: !18804)
!18810 = !DILocation(line: 95, column: 2, scope: !18487, inlinedAt: !18809)
!18811 = !DILocation(line: 199, column: 21, scope: !18800)
!18812 = !DILocation(line: 202, column: 2, scope: !18781)
!18813 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2544, file: !2544, line: 205, type: !18506, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18814)
!18814 = !{!18815, !18816, !18818}
!18815 = !DILocalVariable(name: "ret", scope: !18813, file: !2544, line: 207, type: !116)
!18816 = !DILocalVariable(name: "__i", scope: !18817, file: !2544, line: 209, type: !18372)
!18817 = distinct !DILexicalBlock(scope: !18813, file: !2544, line: 209, column: 2)
!18818 = !DILocalVariable(name: "__key", scope: !18817, file: !2544, line: 209, type: !18372)
!18819 = !DILocation(line: 0, scope: !18813)
!18820 = !DILocation(line: 0, scope: !18817)
!18821 = !DILocation(line: 0, scope: !18400, inlinedAt: !18822)
!18822 = distinct !DILocation(line: 209, column: 2, scope: !18817)
!18823 = !DILocation(line: 55, column: 2, scope: !18409, inlinedAt: !18824)
!18824 = distinct !DILocation(line: 145, column: 10, scope: !18400, inlinedAt: !18822)
!18825 = !DILocation(line: 0, scope: !18409, inlinedAt: !18824)
!18826 = !DILocation(line: 148, column: 2, scope: !18417, inlinedAt: !18822)
!18827 = !DILocation(line: 148, column: 2, scope: !18418, inlinedAt: !18822)
!18828 = !DILocation(line: 148, column: 2, scope: !18421, inlinedAt: !18822)
!18829 = !DILocation(line: 160, column: 2, scope: !18400, inlinedAt: !18822)
!18830 = !DILocation(line: 210, column: 9, scope: !18831)
!18831 = distinct !DILexicalBlock(scope: !18832, file: !2544, line: 209, column: 24)
!18832 = distinct !DILexicalBlock(scope: !18817, file: !2544, line: 209, column: 2)
!18833 = !DILocation(line: 0, scope: !18473, inlinedAt: !18834)
!18834 = distinct !DILocation(line: 209, column: 2, scope: !18832)
!18835 = !DILocation(line: 194, column: 2, scope: !18481, inlinedAt: !18834)
!18836 = !DILocation(line: 194, column: 2, scope: !18482, inlinedAt: !18834)
!18837 = !DILocation(line: 194, column: 2, scope: !18485, inlinedAt: !18834)
!18838 = !DILocation(line: 0, scope: !18487, inlinedAt: !18839)
!18839 = distinct !DILocation(line: 215, column: 2, scope: !18473, inlinedAt: !18834)
!18840 = !DILocation(line: 95, column: 2, scope: !18487, inlinedAt: !18839)
!18841 = !DILocation(line: 212, column: 2, scope: !18813)
!18842 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2544, file: !2544, line: 215, type: !12059, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18843)
!18843 = !{!18844, !18845, !18846, !18848, !18849, !18852, !18853}
!18844 = !DILocalVariable(name: "ticks", arg: 1, scope: !18842, file: !2544, line: 215, type: !116)
!18845 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18842, file: !2544, line: 215, type: !505)
!18846 = !DILocalVariable(name: "__i", scope: !18847, file: !2544, line: 217, type: !18372)
!18847 = distinct !DILexicalBlock(scope: !18842, file: !2544, line: 217, column: 2)
!18848 = !DILocalVariable(name: "__key", scope: !18847, file: !2544, line: 217, type: !18372)
!18849 = !DILocalVariable(name: "next_to", scope: !18850, file: !2544, line: 218, type: !105)
!18850 = distinct !DILexicalBlock(scope: !18851, file: !2544, line: 217, column: 24)
!18851 = distinct !DILexicalBlock(scope: !18847, file: !2544, line: 217, column: 2)
!18852 = !DILocalVariable(name: "sooner", scope: !18850, file: !2544, line: 219, type: !505)
!18853 = !DILocalVariable(name: "imminent", scope: !18850, file: !2544, line: 221, type: !505)
!18854 = !DILocation(line: 0, scope: !18842)
!18855 = !DILocation(line: 0, scope: !18847)
!18856 = !DILocation(line: 0, scope: !18400, inlinedAt: !18857)
!18857 = distinct !DILocation(line: 217, column: 2, scope: !18847)
!18858 = !DILocation(line: 55, column: 2, scope: !18409, inlinedAt: !18859)
!18859 = distinct !DILocation(line: 145, column: 10, scope: !18400, inlinedAt: !18857)
!18860 = !DILocation(line: 0, scope: !18409, inlinedAt: !18859)
!18861 = !DILocation(line: 148, column: 2, scope: !18417, inlinedAt: !18857)
!18862 = !DILocation(line: 148, column: 2, scope: !18418, inlinedAt: !18857)
!18863 = !DILocation(line: 148, column: 2, scope: !18421, inlinedAt: !18857)
!18864 = !DILocation(line: 160, column: 2, scope: !18400, inlinedAt: !18857)
!18865 = !DILocation(line: 218, column: 17, scope: !18850)
!18866 = !DILocation(line: 0, scope: !18850)
!18867 = !DILocation(line: 221, column: 27, scope: !18850)
!18868 = !DILocation(line: 233, column: 17, scope: !18869)
!18869 = distinct !DILexicalBlock(scope: !18850, file: !2544, line: 233, column: 7)
!18870 = !DILocation(line: 234, column: 26, scope: !18871)
!18871 = distinct !DILexicalBlock(scope: !18869, file: !2544, line: 233, column: 56)
!18872 = !DILocation(line: 234, column: 4, scope: !18871)
!18873 = !DILocation(line: 235, column: 3, scope: !18871)
!18874 = !DILocation(line: 0, scope: !18473, inlinedAt: !18875)
!18875 = distinct !DILocation(line: 217, column: 2, scope: !18851)
!18876 = !DILocation(line: 194, column: 2, scope: !18481, inlinedAt: !18875)
!18877 = !DILocation(line: 194, column: 2, scope: !18482, inlinedAt: !18875)
!18878 = !DILocation(line: 194, column: 2, scope: !18485, inlinedAt: !18875)
!18879 = !DILocation(line: 0, scope: !18487, inlinedAt: !18880)
!18880 = distinct !DILocation(line: 215, column: 2, scope: !18473, inlinedAt: !18875)
!18881 = !DILocation(line: 95, column: 2, scope: !18487, inlinedAt: !18880)
!18882 = !DILocation(line: 237, column: 1, scope: !18842)
!18883 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2544, file: !2544, line: 239, type: !18884, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18886)
!18884 = !DISubroutineType(types: !18885)
!18885 = !{null, !116}
!18886 = !{!18887, !18888, !18889, !18891}
!18887 = !DILocalVariable(name: "ticks", arg: 1, scope: !18883, file: !2544, line: 239, type: !116)
!18888 = !DILocalVariable(name: "key", scope: !18883, file: !2544, line: 245, type: !18372)
!18889 = !DILocalVariable(name: "t", scope: !18890, file: !2544, line: 262, type: !2517)
!18890 = distinct !DILexicalBlock(scope: !18883, file: !2544, line: 261, column: 67)
!18891 = !DILocalVariable(name: "dt", scope: !18890, file: !2544, line: 263, type: !105)
!18892 = !DILocation(line: 0, scope: !18883)
!18893 = !DILocation(line: 242, column: 2, scope: !18883)
!18894 = !DILocation(line: 0, scope: !18400, inlinedAt: !18895)
!18895 = distinct !DILocation(line: 245, column: 25, scope: !18883)
!18896 = !DILocation(line: 55, column: 2, scope: !18409, inlinedAt: !18897)
!18897 = distinct !DILocation(line: 145, column: 10, scope: !18400, inlinedAt: !18895)
!18898 = !DILocation(line: 0, scope: !18409, inlinedAt: !18897)
!18899 = !DILocation(line: 148, column: 2, scope: !18417, inlinedAt: !18895)
!18900 = !DILocation(line: 148, column: 2, scope: !18418, inlinedAt: !18895)
!18901 = !DILocation(line: 148, column: 2, scope: !18421, inlinedAt: !18895)
!18902 = !DILocation(line: 160, column: 2, scope: !18400, inlinedAt: !18895)
!18903 = !DILocation(line: 261, column: 9, scope: !18883)
!18904 = !DILocation(line: 261, column: 17, scope: !18883)
!18905 = !DILocation(line: 261, column: 25, scope: !18883)
!18906 = !DILocation(line: 261, column: 37, scope: !18883)
!18907 = !DILocation(line: 261, column: 47, scope: !18883)
!18908 = !DILocation(line: 261, column: 44, scope: !18883)
!18909 = !DILocation(line: 261, column: 2, scope: !18883)
!18910 = !DILocation(line: 0, scope: !18890)
!18911 = !DILocation(line: 263, column: 12, scope: !18890)
!18912 = !DILocation(line: 265, column: 16, scope: !18890)
!18913 = !DILocation(line: 265, column: 13, scope: !18890)
!18914 = !DILocation(line: 266, column: 13, scope: !18890)
!18915 = !DILocation(line: 267, column: 3, scope: !18890)
!18916 = !DILocation(line: 0, scope: !18473, inlinedAt: !18917)
!18917 = distinct !DILocation(line: 269, column: 3, scope: !18890)
!18918 = !DILocation(line: 194, column: 2, scope: !18481, inlinedAt: !18917)
!18919 = !DILocation(line: 194, column: 2, scope: !18482, inlinedAt: !18917)
!18920 = !DILocation(line: 194, column: 2, scope: !18485, inlinedAt: !18917)
!18921 = !DILocation(line: 0, scope: !18487, inlinedAt: !18922)
!18922 = distinct !DILocation(line: 215, column: 2, scope: !18473, inlinedAt: !18917)
!18923 = !DILocation(line: 95, column: 2, scope: !18487, inlinedAt: !18922)
!18924 = !DILocation(line: 270, column: 6, scope: !18890)
!18925 = !DILocation(line: 270, column: 3, scope: !18890)
!18926 = !DILocation(line: 0, scope: !18400, inlinedAt: !18927)
!18927 = distinct !DILocation(line: 271, column: 9, scope: !18890)
!18928 = !DILocation(line: 55, column: 2, scope: !18409, inlinedAt: !18929)
!18929 = distinct !DILocation(line: 145, column: 10, scope: !18400, inlinedAt: !18927)
!18930 = !DILocation(line: 0, scope: !18409, inlinedAt: !18929)
!18931 = !DILocation(line: 148, column: 2, scope: !18417, inlinedAt: !18927)
!18932 = !DILocation(line: 148, column: 2, scope: !18418, inlinedAt: !18927)
!18933 = !DILocation(line: 148, column: 2, scope: !18421, inlinedAt: !18927)
!18934 = !DILocation(line: 160, column: 2, scope: !18400, inlinedAt: !18927)
!18935 = !DILocation(line: 272, column: 22, scope: !18890)
!18936 = distinct !{!18936, !18909, !18937}
!18937 = !DILocation(line: 273, column: 2, scope: !18883)
!18938 = !DILocation(line: 276, column: 19, scope: !18939)
!18939 = distinct !DILexicalBlock(scope: !18940, file: !2544, line: 275, column: 23)
!18940 = distinct !DILexicalBlock(scope: !18883, file: !2544, line: 275, column: 6)
!18941 = !DILocation(line: 277, column: 2, scope: !18939)
!18942 = !DILocation(line: 279, column: 15, scope: !18883)
!18943 = !DILocation(line: 279, column: 12, scope: !18883)
!18944 = !DILocation(line: 280, column: 21, scope: !18883)
!18945 = !DILocation(line: 282, column: 24, scope: !18883)
!18946 = !DILocation(line: 282, column: 2, scope: !18883)
!18947 = !DILocation(line: 0, scope: !18473, inlinedAt: !18948)
!18948 = distinct !DILocation(line: 284, column: 2, scope: !18883)
!18949 = !DILocation(line: 194, column: 2, scope: !18481, inlinedAt: !18948)
!18950 = !DILocation(line: 194, column: 2, scope: !18482, inlinedAt: !18948)
!18951 = !DILocation(line: 194, column: 2, scope: !18485, inlinedAt: !18948)
!18952 = !DILocation(line: 0, scope: !18487, inlinedAt: !18953)
!18953 = distinct !DILocation(line: 215, column: 2, scope: !18473, inlinedAt: !18948)
!18954 = !DILocation(line: 95, column: 2, scope: !18487, inlinedAt: !18953)
!18955 = !DILocation(line: 285, column: 1, scope: !18883)
!18956 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2544, file: !2544, line: 287, type: !18957, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18959)
!18957 = !DISubroutineType(types: !18958)
!18958 = !{!109}
!18959 = !{!18960, !18961, !18963}
!18960 = !DILocalVariable(name: "t", scope: !18956, file: !2544, line: 289, type: !114)
!18961 = !DILocalVariable(name: "__i", scope: !18962, file: !2544, line: 291, type: !18372)
!18962 = distinct !DILexicalBlock(scope: !18956, file: !2544, line: 291, column: 2)
!18963 = !DILocalVariable(name: "__key", scope: !18962, file: !2544, line: 291, type: !18372)
!18964 = !DILocation(line: 0, scope: !18956)
!18965 = !DILocation(line: 0, scope: !18962)
!18966 = !DILocation(line: 0, scope: !18400, inlinedAt: !18967)
!18967 = distinct !DILocation(line: 291, column: 2, scope: !18962)
!18968 = !DILocation(line: 55, column: 2, scope: !18409, inlinedAt: !18969)
!18969 = distinct !DILocation(line: 145, column: 10, scope: !18400, inlinedAt: !18967)
!18970 = !DILocation(line: 0, scope: !18409, inlinedAt: !18969)
!18971 = !DILocation(line: 148, column: 2, scope: !18417, inlinedAt: !18967)
!18972 = !DILocation(line: 148, column: 2, scope: !18418, inlinedAt: !18967)
!18973 = !DILocation(line: 148, column: 2, scope: !18421, inlinedAt: !18967)
!18974 = !DILocation(line: 160, column: 2, scope: !18400, inlinedAt: !18967)
!18975 = !DILocation(line: 292, column: 7, scope: !18976)
!18976 = distinct !DILexicalBlock(scope: !18977, file: !2544, line: 291, column: 24)
!18977 = distinct !DILexicalBlock(scope: !18962, file: !2544, line: 291, column: 2)
!18978 = !DILocation(line: 292, column: 19, scope: !18976)
!18979 = !DILocation(line: 0, scope: !18473, inlinedAt: !18980)
!18980 = distinct !DILocation(line: 291, column: 2, scope: !18977)
!18981 = !DILocation(line: 194, column: 2, scope: !18481, inlinedAt: !18980)
!18982 = !DILocation(line: 194, column: 2, scope: !18482, inlinedAt: !18980)
!18983 = !DILocation(line: 194, column: 2, scope: !18485, inlinedAt: !18980)
!18984 = !DILocation(line: 0, scope: !18487, inlinedAt: !18985)
!18985 = distinct !DILocation(line: 215, column: 2, scope: !18473, inlinedAt: !18980)
!18986 = !DILocation(line: 95, column: 2, scope: !18487, inlinedAt: !18985)
!18987 = !DILocation(line: 292, column: 17, scope: !18976)
!18988 = !DILocation(line: 294, column: 2, scope: !18956)
!18989 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2544, file: !2544, line: 297, type: !395, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !397)
!18990 = !DILocation(line: 300, column: 19, scope: !18989)
!18991 = !DILocation(line: 300, column: 9, scope: !18989)
!18992 = !DILocation(line: 300, column: 2, scope: !18989)
!18993 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2544, file: !2544, line: 306, type: !18957, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !397)
!18994 = !DILocation(line: 308, column: 9, scope: !18993)
!18995 = !DILocation(line: 308, column: 2, scope: !18993)
!18996 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2544, file: !2544, line: 319, type: !7443, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18997)
!18997 = !{!18998, !18999, !19000, !19001}
!18998 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18996, file: !2544, line: 319, type: !113)
!18999 = !DILocalVariable(name: "start_cycles", scope: !18996, file: !2544, line: 328, type: !113)
!19000 = !DILocalVariable(name: "cycles_to_wait", scope: !18996, file: !2544, line: 331, type: !113)
!19001 = !DILocalVariable(name: "current_cycles", scope: !19002, file: !2544, line: 338, type: !113)
!19002 = distinct !DILexicalBlock(scope: !19003, file: !2544, line: 337, column: 11)
!19003 = distinct !DILexicalBlock(scope: !19004, file: !2544, line: 337, column: 2)
!19004 = distinct !DILexicalBlock(scope: !18996, file: !2544, line: 337, column: 2)
!19005 = !DILocation(line: 0, scope: !18996)
!19006 = !DILocation(line: 322, column: 19, scope: !19007)
!19007 = distinct !DILexicalBlock(scope: !18996, file: !2544, line: 322, column: 6)
!19008 = !DILocation(line: 322, column: 6, scope: !18996)
!19009 = !DILocation(line: 328, column: 26, scope: !18996)
!19010 = !DILocation(line: 333, column: 43, scope: !18996)
!19011 = !DILocation(line: 337, column: 2, scope: !18996)
!19012 = !DILocation(line: 338, column: 29, scope: !19002)
!19013 = !DILocation(line: 0, scope: !19002)
!19014 = !DILocation(line: 341, column: 23, scope: !19015)
!19015 = distinct !DILexicalBlock(scope: !19002, file: !2544, line: 341, column: 7)
!19016 = !DILocation(line: 341, column: 39, scope: !19015)
!19017 = !DILocation(line: 349, column: 1, scope: !18996)
!19018 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !397)
!19019 = !DILocation(line: 1677, column: 9, scope: !19018)
!19020 = !DILocation(line: 1677, column: 2, scope: !19018)
!19021 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3434, file: !3434, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !397)
!19022 = !DILocation(line: 26, column: 9, scope: !19021)
!19023 = !DILocation(line: 26, column: 2, scope: !19021)
!19024 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2544, file: !2544, line: 364, type: !19025, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !19027)
!19025 = !DISubroutineType(types: !19026)
!19026 = !{!114, !18362}
!19027 = !{!19028, !19029}
!19028 = !DILocalVariable(name: "timeout", arg: 1, scope: !19024, file: !2544, line: 364, type: !18362)
!19029 = !DILocalVariable(name: "dt", scope: !19024, file: !2544, line: 366, type: !107)
!19030 = !DILocation(line: 0, scope: !19024)
!19031 = !DILocation(line: 368, column: 6, scope: !19024)
!19032 = !DILocation(line: 371, column: 10, scope: !19033)
!19033 = distinct !DILexicalBlock(scope: !19034, file: !2544, line: 370, column: 47)
!19034 = distinct !DILexicalBlock(scope: !19035, file: !2544, line: 370, column: 13)
!19035 = distinct !DILexicalBlock(scope: !19024, file: !2544, line: 368, column: 6)
!19036 = !DILocation(line: 371, column: 3, scope: !19033)
!19037 = !DILocation(line: 376, column: 58, scope: !19038)
!19038 = distinct !DILexicalBlock(scope: !19039, file: !2544, line: 376, column: 7)
!19039 = distinct !DILexicalBlock(scope: !19034, file: !2544, line: 372, column: 9)
!19040 = !DILocation(line: 376, column: 7, scope: !19039)
!19041 = !DILocation(line: 376, column: 43, scope: !19038)
!19042 = !DILocation(line: 377, column: 4, scope: !19043)
!19043 = distinct !DILexicalBlock(scope: !19038, file: !2544, line: 376, column: 64)
!19044 = !DILocation(line: 379, column: 10, scope: !19039)
!19045 = !DILocation(line: 379, column: 33, scope: !19039)
!19046 = !DILocation(line: 379, column: 31, scope: !19039)
!19047 = !DILocation(line: 379, column: 3, scope: !19039)
!19048 = !DILocation(line: 0, scope: !19035)
!19049 = !DILocation(line: 381, column: 1, scope: !19024)
!19050 = distinct !DISubprogram(name: "boot_banner", scope: !19051, file: !19051, line: 26, type: !266, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3246, retainedNodes: !397)
!19051 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19052 = !DILocation(line: 34, column: 2, scope: !19050)
!19053 = !DILocation(line: 36, column: 1, scope: !19050)
!19054 = distinct !DISubprogram(name: "statics_init", scope: !2574, file: !2574, line: 21, type: !2580, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !19055)
!19055 = !{!19056, !19057}
!19056 = !DILocalVariable(name: "unused", arg: 1, scope: !19054, file: !2574, line: 21, type: !2582)
!19057 = !DILocalVariable(name: "h", scope: !19058, file: !2574, line: 24, type: !19059)
!19058 = distinct !DILexicalBlock(scope: !19054, file: !2574, line: 24, column: 2)
!19059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19060, size: 32)
!19060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !19061)
!19061 = !{!19062, !19068, !19074}
!19062 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !19060, file: !122, line: 5074, baseType: !19063, size: 96)
!19063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !19064)
!19064 = !{!19065, !19066, !19067}
!19065 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !19063, file: !226, line: 57, baseType: !229, size: 32)
!19066 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !19063, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!19067 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !19063, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!19068 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !19060, file: !122, line: 5075, baseType: !19069, size: 64, offset: 96)
!19069 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !19070)
!19070 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !19071)
!19071 = !{!19072}
!19072 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !19070, file: !163, line: 232, baseType: !19073, size: 64)
!19073 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2560)
!19074 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !19060, file: !122, line: 5076, baseType: !19075, size: 32, offset: 160)
!19075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !19076)
!19076 = !{!19077}
!19077 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !19075, file: !236, line: 52, baseType: !22, size: 32)
!19078 = !DILocation(line: 0, scope: !19054)
!19079 = !DILocation(line: 0, scope: !19058)
!19080 = !DILocation(line: 24, column: 2, scope: !19081)
!19081 = distinct !DILexicalBlock(scope: !19082, file: !2574, line: 24, column: 2)
!19082 = distinct !DILexicalBlock(scope: !19083, file: !2574, line: 24, column: 2)
!19083 = distinct !DILexicalBlock(scope: !19058, file: !2574, line: 24, column: 2)
!19084 = !DILocation(line: 24, column: 2, scope: !19085)
!19085 = distinct !DILexicalBlock(scope: !19086, file: !2574, line: 24, column: 2)
!19086 = distinct !DILexicalBlock(scope: !19081, file: !2574, line: 24, column: 2)
!19087 = !DILocation(line: 24, column: 2, scope: !19082)
!19088 = !DILocation(line: 24, column: 2, scope: !19058)
!19089 = !DILocation(line: 52, column: 2, scope: !19054)
!19090 = !DILocation(line: 49, column: 27, scope: !19091)
!19091 = distinct !DILexicalBlock(scope: !19092, file: !2574, line: 48, column: 3)
!19092 = distinct !DILexicalBlock(scope: !19083, file: !2574, line: 24, column: 36)
!19093 = !DILocation(line: 49, column: 45, scope: !19091)
!19094 = !DILocation(line: 49, column: 4, scope: !19091)
!19095 = !DILocation(line: 24, column: 2, scope: !19083)
!19096 = !DILocation(line: 24, column: 2, scope: !19086)
!19097 = distinct !{!19097, !19088, !19098}
!19098 = !DILocation(line: 51, column: 2, scope: !19058)
!19099 = distinct !DISubprogram(name: "k_heap_init", scope: !2574, file: !2574, line: 13, type: !19100, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !19102)
!19100 = !DISubroutineType(types: !19101)
!19101 = !{null, !19059, !104, !111}
!19102 = !{!19103, !19104, !19105}
!19103 = !DILocalVariable(name: "h", arg: 1, scope: !19099, file: !2574, line: 13, type: !19059)
!19104 = !DILocalVariable(name: "mem", arg: 2, scope: !19099, file: !2574, line: 13, type: !104)
!19105 = !DILocalVariable(name: "bytes", arg: 3, scope: !19099, file: !2574, line: 13, type: !111)
!19106 = !DILocation(line: 0, scope: !19099)
!19107 = !DILocation(line: 15, column: 19, scope: !19099)
!19108 = !DILocation(line: 15, column: 2, scope: !19099)
!19109 = !DILocation(line: 16, column: 20, scope: !19099)
!19110 = !DILocation(line: 16, column: 2, scope: !19099)
!19111 = !DILocation(line: 19, column: 1, scope: !19099)
!19112 = distinct !DISubprogram(name: "z_waitq_init", scope: !14673, file: !14673, line: 47, type: !19113, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !19116)
!19113 = !DISubroutineType(types: !19114)
!19114 = !{null, !19115}
!19115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19069, size: 32)
!19116 = !{!19117}
!19117 = !DILocalVariable(name: "w", arg: 1, scope: !19112, file: !14673, line: 47, type: !19115)
!19118 = !DILocation(line: 0, scope: !19112)
!19119 = !DILocation(line: 49, column: 21, scope: !19112)
!19120 = !DILocation(line: 49, column: 2, scope: !19112)
!19121 = !DILocation(line: 50, column: 1, scope: !19112)
!19122 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !19123, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !19126)
!19123 = !DISubroutineType(types: !19124)
!19124 = !{null, !19125}
!19125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19073, size: 32)
!19126 = !{!19127}
!19127 = !DILocalVariable(name: "list", arg: 1, scope: !19122, file: !137, line: 197, type: !19125)
!19128 = !DILocation(line: 0, scope: !19122)
!19129 = !DILocation(line: 199, column: 8, scope: !19122)
!19130 = !DILocation(line: 199, column: 13, scope: !19122)
!19131 = !DILocation(line: 200, column: 8, scope: !19122)
!19132 = !DILocation(line: 200, column: 13, scope: !19122)
!19133 = !DILocation(line: 201, column: 1, scope: !19122)
!19134 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2574, file: !2574, line: 64, type: !19135, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !19141)
!19135 = !DISubroutineType(types: !19136)
!19136 = !{!104, !19059, !111, !111, !19137}
!19137 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !19138)
!19138 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !19139)
!19139 = !{!19140}
!19140 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !19138, file: !108, line: 66, baseType: !107, size: 64)
!19141 = !{!19142, !19143, !19144, !19145, !19146, !19147, !19148, !19149, !19154}
!19142 = !DILocalVariable(name: "h", arg: 1, scope: !19134, file: !2574, line: 64, type: !19059)
!19143 = !DILocalVariable(name: "align", arg: 2, scope: !19134, file: !2574, line: 64, type: !111)
!19144 = !DILocalVariable(name: "bytes", arg: 3, scope: !19134, file: !2574, line: 64, type: !111)
!19145 = !DILocalVariable(name: "timeout", arg: 4, scope: !19134, file: !2574, line: 65, type: !19137)
!19146 = !DILocalVariable(name: "now", scope: !19134, file: !2574, line: 67, type: !109)
!19147 = !DILocalVariable(name: "end", scope: !19134, file: !2574, line: 67, type: !109)
!19148 = !DILocalVariable(name: "ret", scope: !19134, file: !2574, line: 68, type: !104)
!19149 = !DILocalVariable(name: "key", scope: !19134, file: !2574, line: 72, type: !19150)
!19150 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !19151)
!19151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !19152)
!19152 = !{!19153}
!19153 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !19151, file: !236, line: 33, baseType: !105, size: 32)
!19154 = !DILocalVariable(name: "blocked_alloc", scope: !19134, file: !2574, line: 78, type: !505)
!19155 = !DILocation(line: 0, scope: !19134)
!19156 = !DILocation(line: 67, column: 21, scope: !19134)
!19157 = !DILocation(line: 70, column: 8, scope: !19134)
!19158 = !DILocation(line: 72, column: 41, scope: !19134)
!19159 = !DILocalVariable(name: "l", arg: 1, scope: !19160, file: !236, line: 136, type: !19163)
!19160 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !19161, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !19164)
!19161 = !DISubroutineType(types: !19162)
!19162 = !{!19150, !19163}
!19163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19075, size: 32)
!19164 = !{!19159, !19165}
!19165 = !DILocalVariable(name: "k", scope: !19160, file: !236, line: 139, type: !19150)
!19166 = !DILocation(line: 0, scope: !19160, inlinedAt: !19167)
!19167 = distinct !DILocation(line: 72, column: 25, scope: !19134)
!19168 = !DILocation(line: 55, column: 2, scope: !19169, inlinedAt: !19173)
!19169 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7419, file: !7419, line: 42, type: !7420, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !19170)
!19170 = !{!19171, !19172}
!19171 = !DILocalVariable(name: "key", scope: !19169, file: !7419, line: 44, type: !32)
!19172 = !DILocalVariable(name: "tmp", scope: !19169, file: !7419, line: 53, type: !32)
!19173 = distinct !DILocation(line: 145, column: 10, scope: !19160, inlinedAt: !19167)
!19174 = !{i64 1653074}
!19175 = !DILocation(line: 0, scope: !19169, inlinedAt: !19173)
!19176 = !DILocation(line: 148, column: 2, scope: !19177, inlinedAt: !19167)
!19177 = distinct !DILexicalBlock(scope: !19178, file: !236, line: 148, column: 2)
!19178 = distinct !DILexicalBlock(scope: !19160, file: !236, line: 148, column: 2)
!19179 = !DILocation(line: 148, column: 2, scope: !19178, inlinedAt: !19167)
!19180 = !DILocation(line: 148, column: 2, scope: !19181, inlinedAt: !19167)
!19181 = distinct !DILexicalBlock(scope: !19177, file: !236, line: 148, column: 2)
!19182 = !DILocation(line: 160, column: 2, scope: !19160, inlinedAt: !19167)
!19183 = !DILocation(line: 1031, column: 3, scope: !19184, inlinedAt: !19187)
!19184 = distinct !DISubprogram(name: "__get_IPSR", scope: !7754, file: !7754, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !19185)
!19185 = !{!19186}
!19186 = !DILocalVariable(name: "result", scope: !19184, file: !7754, line: 1029, type: !113)
!19187 = distinct !DILocation(line: 48, column: 10, scope: !19188, inlinedAt: !19189)
!19188 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8760, file: !8760, line: 46, type: !8761, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !397)
!19189 = distinct !DILocation(line: 76, column: 2, scope: !19190)
!19190 = distinct !DILexicalBlock(scope: !19191, file: !2574, line: 76, column: 2)
!19191 = distinct !DILexicalBlock(scope: !19134, file: !2574, line: 76, column: 2)
!19192 = !{i64 2447009}
!19193 = !DILocation(line: 0, scope: !19184, inlinedAt: !19187)
!19194 = !DILocation(line: 48, column: 9, scope: !19188, inlinedAt: !19189)
!19195 = !DILocation(line: 76, column: 2, scope: !19190)
!19196 = !DILocation(line: 81, column: 9, scope: !19197)
!19197 = distinct !DILexicalBlock(scope: !19134, file: !2574, line: 80, column: 22)
!19198 = !DILocation(line: 83, column: 9, scope: !19197)
!19199 = !DILocation(line: 85, column: 12, scope: !19200)
!19200 = distinct !DILexicalBlock(scope: !19197, file: !2574, line: 84, column: 7)
!19201 = !DILocation(line: 85, column: 21, scope: !19200)
!19202 = !DILocation(line: 76, column: 2, scope: !19203)
!19203 = distinct !DILexicalBlock(scope: !19190, file: !2574, line: 76, column: 2)
!19204 = !DILocation(line: 85, column: 30, scope: !19200)
!19205 = !DILocation(line: 85, column: 37, scope: !19200)
!19206 = !DILocation(line: 84, column: 7, scope: !19197)
!19207 = !DILocation(line: 99, column: 10, scope: !19197)
!19208 = !DILocation(line: 0, scope: !19160, inlinedAt: !19209)
!19209 = distinct !DILocation(line: 101, column: 9, scope: !19197)
!19210 = !DILocation(line: 55, column: 2, scope: !19169, inlinedAt: !19211)
!19211 = distinct !DILocation(line: 145, column: 10, scope: !19160, inlinedAt: !19209)
!19212 = !DILocation(line: 0, scope: !19169, inlinedAt: !19211)
!19213 = !DILocation(line: 148, column: 2, scope: !19177, inlinedAt: !19209)
!19214 = !DILocation(line: 148, column: 2, scope: !19178, inlinedAt: !19209)
!19215 = !DILocation(line: 148, column: 2, scope: !19181, inlinedAt: !19209)
!19216 = !DILocation(line: 160, column: 2, scope: !19160, inlinedAt: !19209)
!19217 = distinct !{!19217, !19218, !19219}
!19218 = !DILocation(line: 80, column: 2, scope: !19134)
!19219 = !DILocation(line: 102, column: 2, scope: !19134)
!19220 = !DILocalVariable(name: "key", arg: 2, scope: !19221, file: !236, line: 190, type: !19150)
!19221 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !19222, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !19224)
!19222 = !DISubroutineType(types: !19223)
!19223 = !{null, !19163, !19150}
!19224 = !{!19225, !19220}
!19225 = !DILocalVariable(name: "l", arg: 1, scope: !19221, file: !236, line: 189, type: !19163)
!19226 = !DILocation(line: 0, scope: !19221, inlinedAt: !19227)
!19227 = distinct !DILocation(line: 106, column: 2, scope: !19134)
!19228 = !DILocation(line: 194, column: 2, scope: !19229, inlinedAt: !19227)
!19229 = distinct !DILexicalBlock(scope: !19230, file: !236, line: 194, column: 2)
!19230 = distinct !DILexicalBlock(scope: !19221, file: !236, line: 194, column: 2)
!19231 = !DILocation(line: 194, column: 2, scope: !19230, inlinedAt: !19227)
!19232 = !DILocation(line: 194, column: 2, scope: !19233, inlinedAt: !19227)
!19233 = distinct !DILexicalBlock(scope: !19229, file: !236, line: 194, column: 2)
!19234 = !DILocalVariable(name: "key", arg: 1, scope: !19235, file: !7419, line: 84, type: !32)
!19235 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7419, file: !7419, line: 84, type: !7430, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !19236)
!19236 = !{!19234}
!19237 = !DILocation(line: 0, scope: !19235, inlinedAt: !19238)
!19238 = distinct !DILocation(line: 215, column: 2, scope: !19221, inlinedAt: !19227)
!19239 = !DILocation(line: 95, column: 2, scope: !19235, inlinedAt: !19238)
!19240 = !{i64 1653891}
!19241 = !DILocation(line: 107, column: 2, scope: !19134)
!19242 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2574, file: !2574, line: 110, type: !19243, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !19245)
!19243 = !DISubroutineType(types: !19244)
!19244 = !{!104, !19059, !111, !19137}
!19245 = !{!19246, !19247, !19248, !19249}
!19246 = !DILocalVariable(name: "h", arg: 1, scope: !19242, file: !2574, line: 110, type: !19059)
!19247 = !DILocalVariable(name: "bytes", arg: 2, scope: !19242, file: !2574, line: 110, type: !111)
!19248 = !DILocalVariable(name: "timeout", arg: 3, scope: !19242, file: !2574, line: 110, type: !19137)
!19249 = !DILocalVariable(name: "ret", scope: !19242, file: !2574, line: 114, type: !104)
!19250 = !DILocation(line: 0, scope: !19242)
!19251 = !DILocation(line: 114, column: 14, scope: !19242)
!19252 = !DILocation(line: 118, column: 2, scope: !19242)
!19253 = distinct !DISubprogram(name: "k_heap_free", scope: !2574, file: !2574, line: 121, type: !19254, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !19256)
!19254 = !DISubroutineType(types: !19255)
!19255 = !{null, !19059, !104}
!19256 = !{!19257, !19258, !19259}
!19257 = !DILocalVariable(name: "h", arg: 1, scope: !19253, file: !2574, line: 121, type: !19059)
!19258 = !DILocalVariable(name: "mem", arg: 2, scope: !19253, file: !2574, line: 121, type: !104)
!19259 = !DILocalVariable(name: "key", scope: !19253, file: !2574, line: 123, type: !19150)
!19260 = !DILocation(line: 0, scope: !19253)
!19261 = !DILocation(line: 123, column: 41, scope: !19253)
!19262 = !DILocation(line: 0, scope: !19160, inlinedAt: !19263)
!19263 = distinct !DILocation(line: 123, column: 25, scope: !19253)
!19264 = !DILocation(line: 55, column: 2, scope: !19169, inlinedAt: !19265)
!19265 = distinct !DILocation(line: 145, column: 10, scope: !19160, inlinedAt: !19263)
!19266 = !DILocation(line: 0, scope: !19169, inlinedAt: !19265)
!19267 = !DILocation(line: 148, column: 2, scope: !19177, inlinedAt: !19263)
!19268 = !DILocation(line: 148, column: 2, scope: !19178, inlinedAt: !19263)
!19269 = !DILocation(line: 148, column: 2, scope: !19181, inlinedAt: !19263)
!19270 = !DILocation(line: 160, column: 2, scope: !19160, inlinedAt: !19263)
!19271 = !DILocation(line: 125, column: 20, scope: !19253)
!19272 = !DILocation(line: 125, column: 2, scope: !19253)
!19273 = !DILocation(line: 128, column: 60, scope: !19274)
!19274 = distinct !DILexicalBlock(scope: !19253, file: !2574, line: 128, column: 6)
!19275 = !DILocation(line: 128, column: 43, scope: !19274)
!19276 = !DILocation(line: 128, column: 68, scope: !19274)
!19277 = !DILocation(line: 128, column: 6, scope: !19253)
!19278 = !DILocation(line: 129, column: 3, scope: !19279)
!19279 = distinct !DILexicalBlock(scope: !19274, file: !2574, line: 128, column: 74)
!19280 = !DILocation(line: 130, column: 2, scope: !19279)
!19281 = !DILocation(line: 0, scope: !19221, inlinedAt: !19282)
!19282 = distinct !DILocation(line: 131, column: 3, scope: !19283)
!19283 = distinct !DILexicalBlock(scope: !19274, file: !2574, line: 130, column: 9)
!19284 = !DILocation(line: 194, column: 2, scope: !19229, inlinedAt: !19282)
!19285 = !DILocation(line: 194, column: 2, scope: !19230, inlinedAt: !19282)
!19286 = !DILocation(line: 194, column: 2, scope: !19233, inlinedAt: !19282)
!19287 = !DILocation(line: 0, scope: !19235, inlinedAt: !19288)
!19288 = distinct !DILocation(line: 215, column: 2, scope: !19221, inlinedAt: !19282)
!19289 = !DILocation(line: 95, column: 2, scope: !19235, inlinedAt: !19288)
!19290 = !DILocation(line: 133, column: 1, scope: !19253)
